ng10705
==== Thu 25 Sep 2025 04:29:25 AM EDT | job 50149411 | node ng10705 ====
model= instance= sa_anneal=
SLURM_JOB_GPUS=1
CUDA_VISIBLE_DEVICES=0
0, GPU-0cfb6b01-4545-76d5-c460-843b3e58fc78, NVIDIA A100-SXM4-40GB
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:49: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model_opt.load_state_dict(torch.load("/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/vca.pth", map_location=device), strict=True)
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:62: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  heuristic_samples_idx = torch.load(heuristic_samples_file, map_location=device)
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(160.3951, device='cuda:0', dtype=torch.float64)
tensor([ -3.3919,  -8.6851,  -5.7070, -10.2154,  -9.8351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.8545, device='cuda:0', dtype=torch.float64)
tensor([-2.8819, -6.9817, -4.8057, -5.8078, -6.6328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.6649, device='cuda:0', dtype=torch.float64)
tensor([-2.5003, -4.8543, -5.3969, -6.0282, -7.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.4134, device='cuda:0', dtype=torch.float64)
tensor([ -4.7995,  -3.8208,  -6.4122,  -6.7153, -10.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(55.0860, device='cuda:0', dtype=torch.float64)
tensor([ -6.6915,  -4.0466,  -7.2260,  -7.4898, -11.9014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(41.0924, device='cuda:0', dtype=torch.float64)
tensor([ -6.3609,  -4.8098,  -7.5189,  -8.2227, -13.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(42.6566, device='cuda:0', dtype=torch.float64)
tensor([ -4.3396,  -5.6393,  -7.1084,  -8.0712, -13.0032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.7591, device='cuda:0', dtype=torch.float64)
tensor([ -2.8983,  -5.9767,  -6.3190,  -7.1706, -11.4289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(26.7812, device='cuda:0', dtype=torch.float64)
tensor([-2.7603, -5.6767, -5.6210, -6.2041, -9.4890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.1254, device='cuda:0', dtype=torch.float64)
tensor([-2.7517, -5.1000, -5.1760, -5.5445, -8.0684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.8227, device='cuda:0', dtype=torch.float64)
tensor([-2.8491, -4.8136, -4.9827, -5.2840, -7.3889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3277, device='cuda:0', dtype=torch.float64)
tensor([-3.0164, -4.8671, -4.9352, -5.3114, -7.0072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1133, device='cuda:0', dtype=torch.float64)
tensor([-3.2137, -5.1753, -4.9767, -5.5900, -6.7530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1444, device='cuda:0', dtype=torch.float64)
tensor([-3.3560, -5.5892, -5.0835, -6.1187, -6.5925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2523, device='cuda:0', dtype=torch.float64)
tensor([-3.3783, -6.0350, -5.1977, -6.7737, -6.5120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1593, device='cuda:0', dtype=torch.float64)
tensor([-3.4476, -6.8537, -5.3863, -7.8395, -6.5277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6775, device='cuda:0', dtype=torch.float64)
tensor([-3.5715, -8.0079, -5.6407, -9.2922, -6.6398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3621, device='cuda:0', dtype=torch.float64)
tensor([ -3.8843,  -9.3044,  -5.9468, -11.1719,  -6.9008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6132, device='cuda:0', dtype=torch.float64)
tensor([ -4.7020, -10.8946,  -6.3008, -13.4511,  -7.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5391, device='cuda:0', dtype=torch.float64)
tensor([ -6.0950, -12.8086,  -6.7049, -16.1865,  -8.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8979, device='cuda:0', dtype=torch.float64)
tensor([ -7.6803, -14.9053,  -7.1651, -19.1698,  -8.9332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4442, device='cuda:0', dtype=torch.float64)
tensor([ -9.2350, -16.9743,  -7.6566, -22.2625,  -9.9417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2771, device='cuda:0', dtype=torch.float64)
tensor([-10.7616, -18.9959,  -8.1823, -25.4574, -11.0447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5055, device='cuda:0', dtype=torch.float64)
tensor([-12.3102, -20.9347,  -8.7535, -28.6343, -12.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4803, device='cuda:0', dtype=torch.float64)
tensor([-13.8712, -22.8157,  -9.3638, -31.7965, -13.4142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4560, device='cuda:0', dtype=torch.float64)
tensor([-15.3879, -24.5905, -10.0007, -34.8067, -14.6822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0498, device='cuda:0', dtype=torch.float64)
tensor([-16.8148, -26.2532, -10.6593, -37.6343, -15.9521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0841, device='cuda:0', dtype=torch.float64)
tensor([-18.2322, -27.8904, -11.3240, -40.2181, -17.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-19.6687, -29.4327, -11.9944, -42.6444, -18.3898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0523, device='cuda:0', dtype=torch.float64)
tensor([-21.1253, -30.9083, -12.6546, -44.9141, -19.5224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1248, device='cuda:0', dtype=torch.float64)
tensor([-22.4546, -32.2335, -13.2724, -46.9315, -20.5935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1866, device='cuda:0', dtype=torch.float64)
tensor([-23.5493, -33.4447, -13.8686, -48.8577, -21.6676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0525, device='cuda:0', dtype=torch.float64)
tensor([-24.6024, -34.5287, -14.4353, -50.5862, -22.6364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9785, device='cuda:0', dtype=torch.float64)
tensor([-25.6357, -35.3925, -14.9789, -52.0914, -23.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1836, device='cuda:0', dtype=torch.float64)
tensor([-26.5194, -36.2160, -15.4748, -53.4296, -24.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2016, device='cuda:0', dtype=torch.float64)
tensor([-27.4637, -36.8861, -15.9478, -54.5737, -24.7638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9194, device='cuda:0', dtype=torch.float64)
tensor([-28.2978, -37.4044, -16.4017, -55.4714, -25.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9432, device='cuda:0', dtype=torch.float64)
tensor([-29.0232, -37.8345, -16.8296, -56.2805, -25.6074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1633, device='cuda:0', dtype=torch.float64)
tensor([-29.8458, -38.2455, -17.2588, -57.0368, -25.9636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8011, device='cuda:0', dtype=torch.float64)
tensor([-30.5647, -38.5644, -17.6111, -57.6916, -26.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8994, device='cuda:0', dtype=torch.float64)
tensor([-31.2063, -38.8489, -17.9312, -58.2546, -26.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9115, device='cuda:0', dtype=torch.float64)
tensor([-31.7547, -39.0971, -18.2226, -58.6659, -26.4887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7983, device='cuda:0', dtype=torch.float64)
tensor([-32.3282, -39.3974, -18.4599, -58.9800, -26.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0089, device='cuda:0', dtype=torch.float64)
tensor([-32.8062, -39.6464, -18.6577, -59.2728, -26.5539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9687, device='cuda:0', dtype=torch.float64)
tensor([-33.1545, -39.7773, -18.7909, -59.4876, -26.5523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8677, device='cuda:0', dtype=torch.float64)
tensor([-33.4056, -39.9001, -18.9118, -59.6899, -26.5485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8234, device='cuda:0', dtype=torch.float64)
tensor([-33.7063, -39.9718, -19.0480, -59.7878, -26.4908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6982, device='cuda:0', dtype=torch.float64)
tensor([-33.9878, -39.9697, -19.1257, -59.7595, -26.3860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7434, device='cuda:0', dtype=torch.float64)
tensor([-34.2342, -39.9787, -19.2111, -59.7297, -26.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-34.3894, -39.9482, -19.2717, -59.7217, -26.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6669, device='cuda:0', dtype=torch.float64)
tensor([-34.5439, -39.8577, -19.3320, -59.5221, -26.0518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6467, device='cuda:0', dtype=torch.float64)
tensor([-34.5914, -39.7358, -19.3753, -59.2717, -25.8610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7854, device='cuda:0', dtype=torch.float64)
tensor([-34.5851, -39.6811, -19.4121, -59.0995, -25.6837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5562, device='cuda:0', dtype=torch.float64)
tensor([-34.4620, -39.6616, -19.4121, -58.9094, -25.5185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6118, device='cuda:0', dtype=torch.float64)
tensor([-34.3564, -39.6946, -19.4041, -58.7948, -25.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4787, device='cuda:0', dtype=torch.float64)
tensor([-34.1371, -39.7496, -19.3626, -58.6486, -25.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4068, device='cuda:0', dtype=torch.float64)
tensor([-33.9629, -39.7677, -19.3236, -58.4658, -25.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4818, device='cuda:0', dtype=torch.float64)
tensor([-33.7452, -39.7676, -19.2797, -58.2814, -24.9288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4568, device='cuda:0', dtype=torch.float64)
tensor([-33.5048, -39.8160, -19.2250, -58.1215, -24.7492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5112, device='cuda:0', dtype=torch.float64)
tensor([-33.2432, -39.8054, -19.1567, -57.9947, -24.5885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3692, device='cuda:0', dtype=torch.float64)
tensor([-33.0099, -39.8095, -19.1028, -57.8729, -24.4508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3462, device='cuda:0', dtype=torch.float64)
tensor([-32.8399, -39.7604, -19.0658, -57.7657, -24.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3823, device='cuda:0', dtype=torch.float64)
tensor([-32.6643, -39.6585, -19.0067, -57.6380, -24.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3254, device='cuda:0', dtype=torch.float64)
tensor([-32.5186, -39.5310, -18.9565, -57.4404, -24.0268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3584, device='cuda:0', dtype=torch.float64)
tensor([-32.3531, -39.3935, -18.9177, -57.3289, -23.8771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3347, device='cuda:0', dtype=torch.float64)
tensor([-32.1839, -39.2586, -18.8592, -57.2502, -23.7147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2773, device='cuda:0', dtype=torch.float64)
tensor([-32.0504, -39.1644, -18.8161, -57.1852, -23.5757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2802, device='cuda:0', dtype=torch.float64)
tensor([-31.9706, -39.0471, -18.7777, -57.0498, -23.4231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2391, device='cuda:0', dtype=torch.float64)
tensor([-31.9195, -38.9218, -18.7423, -56.9382, -23.2631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3215, device='cuda:0', dtype=torch.float64)
tensor([-31.8532, -38.8151, -18.7008, -56.8716, -23.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2159, device='cuda:0', dtype=torch.float64)
tensor([-31.8343, -38.6743, -18.6513, -56.7571, -22.9266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2527, device='cuda:0', dtype=torch.float64)
tensor([-31.7664, -38.5308, -18.5768, -56.6438, -22.7496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2171, device='cuda:0', dtype=torch.float64)
tensor([-31.7101, -38.3750, -18.5136, -56.4931, -22.5611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2054, device='cuda:0', dtype=torch.float64)
tensor([-31.6345, -38.2149, -18.4463, -56.3536, -22.3890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1691, device='cuda:0', dtype=torch.float64)
tensor([-31.5706, -38.0493, -18.3843, -56.2561, -22.2440], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_043009.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(187.0817, device='cuda:0', dtype=torch.float64)
tensor([-3.1977, -7.9413, -5.4138, -8.8860, -8.8324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.9577, device='cuda:0', dtype=torch.float64)
tensor([-2.7413, -6.3573, -4.7961, -5.6836, -6.6228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.7720, device='cuda:0', dtype=torch.float64)
tensor([-2.5822, -4.3278, -5.6633, -6.2233, -8.2644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(48.3949, device='cuda:0', dtype=torch.float64)
tensor([ -6.5294,  -3.7707,  -6.8765,  -7.2132, -11.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(72.8011, device='cuda:0', dtype=torch.float64)
tensor([ -7.3566,  -4.2444,  -7.5002,  -8.0158, -12.6227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(66.6336, device='cuda:0', dtype=torch.float64)
tensor([ -5.0951,  -5.0763,  -7.0928,  -7.7586, -12.4783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(59.9761, device='cuda:0', dtype=torch.float64)
tensor([ -2.7692,  -5.6395,  -6.0845,  -6.6633, -10.6689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.8336, device='cuda:0', dtype=torch.float64)
tensor([-2.6296, -5.4725, -5.2563, -5.7396, -8.6744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.4449, device='cuda:0', dtype=torch.float64)
tensor([-2.6911, -4.9753, -4.8550, -5.3076, -7.5280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.3405, device='cuda:0', dtype=torch.float64)
tensor([-2.8194, -4.7339, -4.7190, -5.2873, -6.9029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.4878, device='cuda:0', dtype=torch.float64)
tensor([-2.9744, -4.9595, -4.7628, -5.6673, -6.5151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6432, device='cuda:0', dtype=torch.float64)
tensor([-3.0534, -5.5255, -4.9014, -6.5048, -6.3192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.3259, device='cuda:0', dtype=torch.float64)
tensor([-3.0059, -6.3424, -4.9970, -7.2516, -6.3287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.7902, device='cuda:0', dtype=torch.float64)
tensor([-2.9897, -6.4200, -4.9399, -7.2894, -6.4991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.3943, device='cuda:0', dtype=torch.float64)
tensor([-2.9140, -5.7038, -4.7373, -6.8260, -6.6775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.4679, device='cuda:0', dtype=torch.float64)
tensor([-2.7593, -5.1630, -4.5174, -6.3846, -6.7796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4697, device='cuda:0', dtype=torch.float64)
tensor([-2.6338, -4.8552, -4.3666, -5.9837, -6.7887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.1950, device='cuda:0', dtype=torch.float64)
tensor([-2.5358, -4.5197, -4.3270, -5.6733, -6.7609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.9743, device='cuda:0', dtype=torch.float64)
tensor([-2.4440, -4.1721, -4.4101, -5.4935, -6.7382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5125, device='cuda:0', dtype=torch.float64)
tensor([-2.3586, -3.8886, -4.6006, -5.4667, -6.7229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4297, device='cuda:0', dtype=torch.float64)
tensor([-2.2936, -3.6904, -4.8640, -5.6461, -6.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8377, device='cuda:0', dtype=torch.float64)
tensor([-2.2602, -3.5517, -5.1383, -5.9678, -6.8117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3084, device='cuda:0', dtype=torch.float64)
tensor([-2.2540, -3.4600, -5.3872, -6.2698, -6.9048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1524, device='cuda:0', dtype=torch.float64)
tensor([-2.2684, -3.3908, -5.5708, -6.4170, -6.9992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6627, device='cuda:0', dtype=torch.float64)
tensor([-2.2829, -3.3434, -5.6667, -6.3422, -7.0461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2633, device='cuda:0', dtype=torch.float64)
tensor([-2.3058, -3.3238, -5.7294, -6.1755, -7.0390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2421, device='cuda:0', dtype=torch.float64)
tensor([-2.3234, -3.3293, -5.7449, -5.9472, -6.9627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8403, device='cuda:0', dtype=torch.float64)
tensor([-2.3403, -3.3648, -5.7219, -5.7094, -6.8162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5376, device='cuda:0', dtype=torch.float64)
tensor([-2.3617, -3.4138, -5.6553, -5.5032, -6.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9958, device='cuda:0', dtype=torch.float64)
tensor([-2.3904, -3.4831, -5.5497, -5.3315, -6.4485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6713, device='cuda:0', dtype=torch.float64)
tensor([-2.4315, -3.5594, -5.4423, -5.2234, -6.3097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1775, device='cuda:0', dtype=torch.float64)
tensor([-2.4883, -3.6439, -5.3363, -5.1532, -6.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2709, device='cuda:0', dtype=torch.float64)
tensor([-2.5523, -3.7333, -5.2330, -5.1067, -6.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3747, device='cuda:0', dtype=torch.float64)
tensor([-2.6253, -3.8190, -5.1324, -5.0658, -6.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0805, device='cuda:0', dtype=torch.float64)
tensor([-2.7008, -3.8982, -5.0386, -5.0280, -6.0710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9943, device='cuda:0', dtype=torch.float64)
tensor([-2.7839, -3.9863, -4.9595, -5.0099, -6.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3319, device='cuda:0', dtype=torch.float64)
tensor([-2.8707, -4.0803, -4.8959, -5.0043, -6.0626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2237, device='cuda:0', dtype=torch.float64)
tensor([-2.9647, -4.1791, -4.8631, -5.0176, -6.0740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9895, device='cuda:0', dtype=torch.float64)
tensor([-3.0626, -4.2882, -4.8419, -5.0519, -6.0961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7842, device='cuda:0', dtype=torch.float64)
tensor([-3.1697, -4.4061, -4.8345, -5.0969, -6.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9197, device='cuda:0', dtype=torch.float64)
tensor([-3.2792, -4.5459, -4.8356, -5.1321, -6.1710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8929, device='cuda:0', dtype=torch.float64)
tensor([-3.3981, -4.6984, -4.8527, -5.2068, -6.2257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8053, device='cuda:0', dtype=torch.float64)
tensor([-3.5240, -4.8664, -4.8829, -5.3218, -6.2906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5029, device='cuda:0', dtype=torch.float64)
tensor([-3.6631, -5.0506, -4.9148, -5.4642, -6.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6738, device='cuda:0', dtype=torch.float64)
tensor([-3.7976, -5.2353, -4.9422, -5.5959, -6.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9796, device='cuda:0', dtype=torch.float64)
tensor([-3.9459, -5.4364, -4.9872, -5.7873, -6.4794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3580, device='cuda:0', dtype=torch.float64)
tensor([-4.0926, -5.6373, -5.0443, -6.0116, -6.5445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5141, device='cuda:0', dtype=torch.float64)
tensor([-4.2464, -5.8541, -5.1083, -6.2763, -6.6115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6965, device='cuda:0', dtype=torch.float64)
tensor([-4.4393, -6.0910, -5.1745, -6.6089, -6.6806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3929, device='cuda:0', dtype=torch.float64)
tensor([-4.6528, -6.3900, -5.2517, -6.9868, -6.7516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8159, device='cuda:0', dtype=torch.float64)
tensor([-4.8840, -6.7612, -5.3335, -7.4085, -6.8221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6268, device='cuda:0', dtype=torch.float64)
tensor([-5.1106, -7.2010, -5.4316, -7.8133, -6.8986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6850, device='cuda:0', dtype=torch.float64)
tensor([-5.3525, -7.6609, -5.5394, -8.2137, -6.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0534, device='cuda:0', dtype=torch.float64)
tensor([-5.5875, -8.1181, -5.6683, -8.5801, -7.0989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3029, device='cuda:0', dtype=torch.float64)
tensor([-5.8315, -8.6994, -5.8128, -8.9572, -7.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5515, device='cuda:0', dtype=torch.float64)
tensor([-6.0695, -9.3740, -5.9598, -9.3294, -7.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1086, device='cuda:0', dtype=torch.float64)
tensor([ -6.2754, -10.0218,  -6.1090,  -9.6218,  -7.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2146, device='cuda:0', dtype=torch.float64)
tensor([ -6.4586, -10.6503,  -6.2617,  -9.8894,  -7.6548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5025, device='cuda:0', dtype=torch.float64)
tensor([ -6.6282, -11.1508,  -6.3921, -10.1375,  -7.8137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2365, device='cuda:0', dtype=torch.float64)
tensor([ -6.7669, -11.5960,  -6.5163, -10.3266,  -7.9597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3019, device='cuda:0', dtype=torch.float64)
tensor([ -6.8819, -11.9934,  -6.6255, -10.4433,  -8.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([ -6.9799, -12.4286,  -6.7310, -10.5332,  -8.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5505, device='cuda:0', dtype=torch.float64)
tensor([ -7.0916, -12.9072,  -6.8583, -10.6497,  -8.3551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5765, device='cuda:0', dtype=torch.float64)
tensor([ -7.1999, -13.3927,  -7.0129, -10.7431,  -8.4580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1740, device='cuda:0', dtype=torch.float64)
tensor([ -7.2895, -13.7895,  -7.1560, -10.7904,  -8.5152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5449, device='cuda:0', dtype=torch.float64)
tensor([ -7.3979, -14.2794,  -7.3042, -10.8582,  -8.5650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3555, device='cuda:0', dtype=torch.float64)
tensor([ -7.4909, -14.7046,  -7.4415, -10.8989,  -8.5699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0081, device='cuda:0', dtype=torch.float64)
tensor([ -7.5949, -15.0873,  -7.5968, -10.9328,  -8.5751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3061, device='cuda:0', dtype=torch.float64)
tensor([ -7.6731, -15.4464,  -7.7256, -10.9733,  -8.5679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3946, device='cuda:0', dtype=torch.float64)
tensor([ -7.7300, -15.7893,  -7.8568, -10.9968,  -8.5380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9413, device='cuda:0', dtype=torch.float64)
tensor([ -7.7717, -16.1029,  -7.9591, -11.0066,  -8.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3319, device='cuda:0', dtype=torch.float64)
tensor([ -7.8099, -16.2908,  -8.0739, -11.0059,  -8.4316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1421, device='cuda:0', dtype=torch.float64)
tensor([ -7.8250, -16.4200,  -8.1421, -10.9773,  -8.3913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1656, device='cuda:0', dtype=torch.float64)
tensor([ -7.8276, -16.5923,  -8.1979, -10.9512,  -8.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9677, device='cuda:0', dtype=torch.float64)
tensor([ -7.7991, -16.6858,  -8.2587, -10.8308,  -8.3125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2817, device='cuda:0', dtype=torch.float64)
tensor([ -7.7461, -16.7010,  -8.3227, -10.6552,  -8.2737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2208, device='cuda:0', dtype=torch.float64)
tensor([ -7.6945, -16.7328,  -8.3891, -10.4937,  -8.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8477, device='cuda:0', dtype=torch.float64)
tensor([ -7.6314, -16.8234,  -8.4308, -10.3446,  -8.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1650, device='cuda:0', dtype=torch.float64)
tensor([ -7.5740, -16.8515,  -8.4659, -10.2330,  -8.2176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1527, device='cuda:0', dtype=torch.float64)
tensor([ -7.5222, -16.7751,  -8.4668, -10.1416,  -8.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8893, device='cuda:0', dtype=torch.float64)
tensor([ -7.4701, -16.6212,  -8.4737, -10.0305,  -8.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9717, device='cuda:0', dtype=torch.float64)
tensor([ -7.4287, -16.4640,  -8.4754,  -9.9187,  -8.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0674, device='cuda:0', dtype=torch.float64)
tensor([ -7.3788, -16.3287,  -8.4560,  -9.8115,  -8.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1532, device='cuda:0', dtype=torch.float64)
tensor([ -7.3476, -16.2558,  -8.4369,  -9.7467,  -8.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9254, device='cuda:0', dtype=torch.float64)
tensor([ -7.3114, -16.2049,  -8.4321,  -9.6741,  -8.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8728, device='cuda:0', dtype=torch.float64)
tensor([ -7.2689, -16.1096,  -8.4316,  -9.5991,  -8.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0927, device='cuda:0', dtype=torch.float64)
tensor([ -7.2027, -15.9899,  -8.4268,  -9.5256,  -8.1412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9354, device='cuda:0', dtype=torch.float64)
tensor([ -7.1459, -15.8508,  -8.4097,  -9.4516,  -8.1422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1592, device='cuda:0', dtype=torch.float64)
tensor([ -7.0946, -15.6537,  -8.4229,  -9.3461,  -8.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0021, device='cuda:0', dtype=torch.float64)
tensor([ -7.0343, -15.4287,  -8.4124,  -9.2433,  -8.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7399, device='cuda:0', dtype=torch.float64)
tensor([ -6.9750, -15.2093,  -8.3911,  -9.1791,  -8.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9994, device='cuda:0', dtype=torch.float64)
tensor([ -6.9464, -15.1148,  -8.3952,  -9.1878,  -8.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9400, device='cuda:0', dtype=torch.float64)
tensor([ -6.9207, -15.0870,  -8.3961,  -9.2309,  -8.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9749, device='cuda:0', dtype=torch.float64)
tensor([ -6.8814, -15.0698,  -8.3789,  -9.2501,  -8.1813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7554, device='cuda:0', dtype=torch.float64)
tensor([ -6.8299, -15.0414,  -8.3465,  -9.2784,  -8.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7339, device='cuda:0', dtype=torch.float64)
tensor([ -6.7799, -14.9490,  -8.3103,  -9.3143,  -8.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9016, device='cuda:0', dtype=torch.float64)
tensor([ -6.7456, -14.9212,  -8.2838,  -9.3478,  -8.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([ -6.7285, -14.8277,  -8.2620,  -9.3897,  -8.2213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8655, device='cuda:0', dtype=torch.float64)
tensor([ -6.7230, -14.7770,  -8.2552,  -9.4361,  -8.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7239, device='cuda:0', dtype=torch.float64)
tensor([ -6.7171, -14.7342,  -8.2536,  -9.4827,  -8.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7441, device='cuda:0', dtype=torch.float64)
tensor([ -6.7068, -14.6655,  -8.2520,  -9.5047,  -8.2343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8279, device='cuda:0', dtype=torch.float64)
tensor([ -6.6865, -14.5364,  -8.2482,  -9.4777,  -8.2343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8022, device='cuda:0', dtype=torch.float64)
tensor([ -6.6634, -14.3592,  -8.2330,  -9.4190,  -8.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8590, device='cuda:0', dtype=torch.float64)
tensor([ -6.6400, -14.2249,  -8.2107,  -9.3609,  -8.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7422, device='cuda:0', dtype=torch.float64)
tensor([ -6.6105, -14.0643,  -8.1990,  -9.3014,  -8.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5670, device='cuda:0', dtype=torch.float64)
tensor([ -6.5774, -13.9032,  -8.1868,  -9.2421,  -8.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6199, device='cuda:0', dtype=torch.float64)
tensor([ -6.5555, -13.7676,  -8.1827,  -9.2126,  -8.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8163, device='cuda:0', dtype=torch.float64)
tensor([ -6.5329, -13.6275,  -8.1785,  -9.1753,  -8.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6877, device='cuda:0', dtype=torch.float64)
tensor([ -6.5069, -13.4839,  -8.1796,  -9.1562,  -8.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6952, device='cuda:0', dtype=torch.float64)
tensor([ -6.4842, -13.3719,  -8.1831,  -9.1912,  -8.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7177, device='cuda:0', dtype=torch.float64)
tensor([ -6.4610, -13.2411,  -8.1883,  -9.2267,  -8.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5243, device='cuda:0', dtype=torch.float64)
tensor([ -6.4486, -13.1491,  -8.2042,  -9.2727,  -8.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6861, device='cuda:0', dtype=torch.float64)
tensor([ -6.4230, -13.1041,  -8.2250,  -9.2960,  -8.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4930, device='cuda:0', dtype=torch.float64)
tensor([ -6.4069, -13.0803,  -8.2529,  -9.3320,  -8.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5294, device='cuda:0', dtype=torch.float64)
tensor([ -6.4009, -13.0733,  -8.2696,  -9.3746,  -8.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5001, device='cuda:0', dtype=torch.float64)
tensor([ -6.3928, -13.0262,  -8.2694,  -9.3976,  -8.2213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4977, device='cuda:0', dtype=torch.float64)
tensor([ -6.3813, -12.9830,  -8.2594,  -9.4289,  -8.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5132, device='cuda:0', dtype=torch.float64)
tensor([ -6.3680, -12.8703,  -8.2398,  -9.4469,  -8.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4919, device='cuda:0', dtype=torch.float64)
tensor([ -6.3404, -12.7373,  -8.2221,  -9.4486,  -8.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4764, device='cuda:0', dtype=torch.float64)
tensor([ -6.3078, -12.6398,  -8.2145,  -9.4361,  -8.2058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4877, device='cuda:0', dtype=torch.float64)
tensor([ -6.2682, -12.5797,  -8.2074,  -9.4274,  -8.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4258, device='cuda:0', dtype=torch.float64)
tensor([ -6.2314, -12.5311,  -8.2058,  -9.4150,  -8.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4409, device='cuda:0', dtype=torch.float64)
tensor([ -6.1999, -12.4898,  -8.1994,  -9.4021,  -8.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4237, device='cuda:0', dtype=torch.float64)
tensor([ -6.1782, -12.4798,  -8.1907,  -9.4032,  -8.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5013, device='cuda:0', dtype=torch.float64)
tensor([ -6.1678, -12.4895,  -8.1817,  -9.4175,  -8.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4605, device='cuda:0', dtype=torch.float64)
tensor([ -6.1576, -12.5023,  -8.1760,  -9.4487,  -8.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4856, device='cuda:0', dtype=torch.float64)
tensor([ -6.1602, -12.5588,  -8.1784,  -9.5047,  -8.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3912, device='cuda:0', dtype=torch.float64)
tensor([ -6.1572, -12.6331,  -8.1894,  -9.5616,  -8.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3848, device='cuda:0', dtype=torch.float64)
tensor([ -6.1489, -12.6829,  -8.1917,  -9.6026,  -8.1293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3600, device='cuda:0', dtype=torch.float64)
tensor([ -6.1385, -12.7133,  -8.1920,  -9.6250,  -8.1226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3239, device='cuda:0', dtype=torch.float64)
tensor([ -6.1397, -12.7409,  -8.1897,  -9.6521,  -8.1139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3581, device='cuda:0', dtype=torch.float64)
tensor([ -6.1449, -12.7354,  -8.1843,  -9.6655,  -8.1017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2634, device='cuda:0', dtype=torch.float64)
tensor([ -6.1481, -12.7148,  -8.1773,  -9.6769,  -8.0917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3194, device='cuda:0', dtype=torch.float64)
tensor([ -6.1468, -12.6526,  -8.1633,  -9.6800,  -8.0845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3725, device='cuda:0', dtype=torch.float64)
tensor([ -6.1498, -12.5830,  -8.1468,  -9.6747,  -8.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2643, device='cuda:0', dtype=torch.float64)
tensor([ -6.1492, -12.5189,  -8.1296,  -9.6677,  -8.0586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2366, device='cuda:0', dtype=torch.float64)
tensor([ -6.1503, -12.4561,  -8.1153,  -9.6506,  -8.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3439, device='cuda:0', dtype=torch.float64)
tensor([ -6.1466, -12.3741,  -8.0942,  -9.6186,  -8.0231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2484, device='cuda:0', dtype=torch.float64)
tensor([ -6.1409, -12.2793,  -8.0683,  -9.5841,  -8.0046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2978, device='cuda:0', dtype=torch.float64)
tensor([ -6.1382, -12.1988,  -8.0437,  -9.5536,  -7.9848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2734, device='cuda:0', dtype=torch.float64)
tensor([ -6.1322, -12.0919,  -8.0213,  -9.5208,  -7.9632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2443, device='cuda:0', dtype=torch.float64)
tensor([ -6.1261, -12.0027,  -8.0061,  -9.4902,  -7.9430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2475, device='cuda:0', dtype=torch.float64)
tensor([ -6.1182, -11.9079,  -7.9898,  -9.4455,  -7.9194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2695, device='cuda:0', dtype=torch.float64)
tensor([ -6.1137, -11.8260,  -7.9735,  -9.4072,  -7.8965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([ -6.1085, -11.7461,  -7.9613,  -9.3760,  -7.8729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2190, device='cuda:0', dtype=torch.float64)
tensor([ -6.1053, -11.6737,  -7.9474,  -9.3465,  -7.8499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2454, device='cuda:0', dtype=torch.float64)
tensor([ -6.1038, -11.6063,  -7.9289,  -9.3180,  -7.8295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2002, device='cuda:0', dtype=torch.float64)
tensor([ -6.1073, -11.5327,  -7.9079,  -9.2849,  -7.8081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2036, device='cuda:0', dtype=torch.float64)
tensor([ -6.1074, -11.4599,  -7.8910,  -9.2490,  -7.7901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1876, device='cuda:0', dtype=torch.float64)
tensor([ -6.1122, -11.3817,  -7.8709,  -9.2045,  -7.7738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2445, device='cuda:0', dtype=torch.float64)
tensor([ -6.1171, -11.3180,  -7.8504,  -9.1629,  -7.7610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2314, device='cuda:0', dtype=torch.float64)
tensor([ -6.1201, -11.2549,  -7.8318,  -9.1194,  -7.7487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2175, device='cuda:0', dtype=torch.float64)
tensor([ -6.1207, -11.1937,  -7.8135,  -9.0773,  -7.7383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1891, device='cuda:0', dtype=torch.float64)
tensor([ -6.1207, -11.1446,  -7.7945,  -9.0367,  -7.7292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1991, device='cuda:0', dtype=torch.float64)
tensor([ -6.1123, -11.0774,  -7.7684,  -8.9893,  -7.7197], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_043009.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(200.4239, device='cuda:0', dtype=torch.float64)
tensor([-3.1403, -7.6435, -5.2953, -8.3738, -8.4269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.4679, device='cuda:0', dtype=torch.float64)
tensor([-2.6626, -6.0895, -4.8141, -5.6613, -6.6303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.3008, device='cuda:0', dtype=torch.float64)
tensor([-2.7388, -4.1546, -5.8065, -6.3423, -8.6398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(55.8601, device='cuda:0', dtype=torch.float64)
tensor([ -7.1023,  -3.7811,  -7.0830,  -7.4608, -11.5647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(81.2424, device='cuda:0', dtype=torch.float64)
tensor([ -7.3193,  -4.3598,  -7.5490,  -8.1452, -12.8388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(78.9212, device='cuda:0', dtype=torch.float64)
tensor([ -4.2111,  -5.1698,  -6.8102,  -7.3804, -11.9669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.8436, device='cuda:0', dtype=torch.float64)
tensor([-2.6184, -5.5494, -5.6719, -6.1385, -9.7198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.9929, device='cuda:0', dtype=torch.float64)
tensor([-2.6043, -5.2412, -4.9578, -5.4050, -7.9456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.1053, device='cuda:0', dtype=torch.float64)
tensor([-2.7225, -4.8259, -4.6945, -5.2360, -7.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.1828, device='cuda:0', dtype=torch.float64)
tensor([-2.8788, -4.8347, -4.6856, -5.4783, -6.6541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3497, device='cuda:0', dtype=torch.float64)
tensor([-2.9901, -5.2678, -4.8090, -6.2356, -6.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.0967, device='cuda:0', dtype=torch.float64)
tensor([-2.9750, -6.0902, -4.9211, -7.1013, -6.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.0352, device='cuda:0', dtype=torch.float64)
tensor([-3.0196, -6.3810, -4.8681, -7.2036, -6.4552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(32.5642, device='cuda:0', dtype=torch.float64)
tensor([-2.9214, -5.6103, -4.6473, -6.6493, -6.6189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.3844, device='cuda:0', dtype=torch.float64)
tensor([-2.6675, -4.9333, -4.4043, -6.0401, -6.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.6795, device='cuda:0', dtype=torch.float64)
tensor([-2.5255, -4.5556, -4.2926, -5.6195, -6.6588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.9636, device='cuda:0', dtype=torch.float64)
tensor([-2.4134, -4.1772, -4.3544, -5.4284, -6.6761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.4940, device='cuda:0', dtype=torch.float64)
tensor([-2.3093, -3.8611, -4.5828, -5.4601, -6.7120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3486, device='cuda:0', dtype=torch.float64)
tensor([-2.2212, -3.6304, -4.9115, -5.7230, -6.7709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.1556, device='cuda:0', dtype=torch.float64)
tensor([-2.1696, -3.4671, -5.2416, -6.0937, -6.8679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7919, device='cuda:0', dtype=torch.float64)
tensor([-2.1638, -3.3559, -5.5058, -6.3071, -6.9853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3729, device='cuda:0', dtype=torch.float64)
tensor([-2.1686, -3.2848, -5.6496, -6.2265, -7.0320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3495, device='cuda:0', dtype=torch.float64)
tensor([-2.1570, -3.2588, -5.6760, -5.9266, -6.9158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.2355, device='cuda:0', dtype=torch.float64)
tensor([-2.1423, -3.2841, -5.5946, -5.5959, -6.6330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3152, device='cuda:0', dtype=torch.float64)
tensor([-2.1480, -3.3616, -5.4299, -5.3433, -6.3258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7928, device='cuda:0', dtype=torch.float64)
tensor([-2.1864, -3.4706, -5.2190, -5.1825, -6.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2652, device='cuda:0', dtype=torch.float64)
tensor([-2.2507, -3.5868, -5.0019, -5.0784, -6.0154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9561, device='cuda:0', dtype=torch.float64)
tensor([-2.3225, -3.6944, -4.8069, -4.9845, -5.9907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9900, device='cuda:0', dtype=torch.float64)
tensor([-2.3857, -3.7834, -4.6408, -4.8903, -6.0140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7257, device='cuda:0', dtype=torch.float64)
tensor([-2.4315, -3.8444, -4.5066, -4.7997, -6.0471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.8660, device='cuda:0', dtype=torch.float64)
tensor([-2.4654, -3.8828, -4.4024, -4.7184, -6.0743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3028, device='cuda:0', dtype=torch.float64)
tensor([-2.4874, -3.8992, -4.3256, -4.6328, -6.0856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3097, device='cuda:0', dtype=torch.float64)
tensor([-2.4999, -3.8975, -4.2757, -4.5447, -6.0845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6429, device='cuda:0', dtype=torch.float64)
tensor([-2.5046, -3.8832, -4.2496, -4.4672, -6.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2763, device='cuda:0', dtype=torch.float64)
tensor([-2.5033, -3.8625, -4.2470, -4.4170, -6.0575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9284, device='cuda:0', dtype=torch.float64)
tensor([-2.4990, -3.8400, -4.2651, -4.4033, -6.0408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6641, device='cuda:0', dtype=torch.float64)
tensor([-2.4933, -3.8199, -4.2935, -4.4244, -6.0262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0731, device='cuda:0', dtype=torch.float64)
tensor([-2.4831, -3.8040, -4.3354, -4.4723, -6.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6439, device='cuda:0', dtype=torch.float64)
tensor([-2.4693, -3.7996, -4.3646, -4.5316, -6.0102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9349, device='cuda:0', dtype=torch.float64)
tensor([-2.4487, -3.8030, -4.3718, -4.5944, -6.0035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4767, device='cuda:0', dtype=torch.float64)
tensor([-2.4263, -3.8075, -4.3560, -4.6610, -5.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6197, device='cuda:0', dtype=torch.float64)
tensor([-2.4081, -3.8078, -4.3288, -4.7220, -5.9807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8926, device='cuda:0', dtype=torch.float64)
tensor([-2.3950, -3.8080, -4.3052, -4.7835, -5.9678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8062, device='cuda:0', dtype=torch.float64)
tensor([-2.3851, -3.8067, -4.2915, -4.8492, -5.9499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8021, device='cuda:0', dtype=torch.float64)
tensor([-2.3841, -3.8070, -4.2922, -4.9111, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4608, device='cuda:0', dtype=torch.float64)
tensor([-2.3922, -3.8125, -4.3012, -4.9727, -5.9192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0923, device='cuda:0', dtype=torch.float64)
tensor([-2.4063, -3.8200, -4.3186, -5.0290, -5.9051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3142, device='cuda:0', dtype=torch.float64)
tensor([-2.4186, -3.8236, -4.3472, -5.0818, -5.8945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0909, device='cuda:0', dtype=torch.float64)
tensor([-2.4312, -3.8317, -4.3809, -5.1227, -5.8907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9393, device='cuda:0', dtype=torch.float64)
tensor([-2.4393, -3.8353, -4.4218, -5.1527, -5.8849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0095, device='cuda:0', dtype=torch.float64)
tensor([-2.4447, -3.8326, -4.4603, -5.1687, -5.8840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3955, device='cuda:0', dtype=torch.float64)
tensor([-2.4494, -3.8244, -4.4952, -5.1669, -5.8815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3357, device='cuda:0', dtype=torch.float64)
tensor([-2.4521, -3.8109, -4.5208, -5.1496, -5.8853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1378, device='cuda:0', dtype=torch.float64)
tensor([-2.4581, -3.7987, -4.5357, -5.1135, -5.8881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8847, device='cuda:0', dtype=torch.float64)
tensor([-2.4644, -3.7883, -4.5388, -5.0690, -5.8908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0247, device='cuda:0', dtype=torch.float64)
tensor([-2.4796, -3.7839, -4.5263, -5.0084, -5.8952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9129, device='cuda:0', dtype=torch.float64)
tensor([-2.4940, -3.7807, -4.5023, -4.9472, -5.8941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6832, device='cuda:0', dtype=torch.float64)
tensor([-2.5077, -3.7811, -4.4657, -4.8904, -5.8891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8746, device='cuda:0', dtype=torch.float64)
tensor([-2.5195, -3.7848, -4.4273, -4.8434, -5.8826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0534, device='cuda:0', dtype=torch.float64)
tensor([-2.5320, -3.7978, -4.3943, -4.8018, -5.8796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7651, device='cuda:0', dtype=torch.float64)
tensor([-2.5513, -3.8159, -4.3632, -4.7590, -5.8801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9237, device='cuda:0', dtype=torch.float64)
tensor([-2.5713, -3.8393, -4.3367, -4.7263, -5.8795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2241, device='cuda:0', dtype=torch.float64)
tensor([-2.5940, -3.8672, -4.3178, -4.7045, -5.8784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5005, device='cuda:0', dtype=torch.float64)
tensor([-2.6135, -3.8896, -4.3093, -4.6868, -5.8774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8115, device='cuda:0', dtype=torch.float64)
tensor([-2.6382, -3.9152, -4.3046, -4.6720, -5.8789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2093, device='cuda:0', dtype=torch.float64)
tensor([-2.6618, -3.9359, -4.3047, -4.6624, -5.8853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1609, device='cuda:0', dtype=torch.float64)
tensor([-2.6874, -3.9454, -4.3223, -4.6594, -5.8933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8195, device='cuda:0', dtype=torch.float64)
tensor([-2.7186, -3.9585, -4.3460, -4.6519, -5.8993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7617, device='cuda:0', dtype=torch.float64)
tensor([-2.7506, -3.9732, -4.3773, -4.6539, -5.9093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8955, device='cuda:0', dtype=torch.float64)
tensor([-2.7832, -3.9895, -4.4278, -4.6639, -5.9272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6472, device='cuda:0', dtype=torch.float64)
tensor([-2.8149, -4.0060, -4.4835, -4.6833, -5.9350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8733, device='cuda:0', dtype=torch.float64)
tensor([-2.8506, -4.0250, -4.5389, -4.7105, -5.9364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0546, device='cuda:0', dtype=torch.float64)
tensor([-2.8844, -4.0372, -4.5973, -4.7392, -5.9423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4489, device='cuda:0', dtype=torch.float64)
tensor([-2.9163, -4.0515, -4.6246, -4.7714, -5.9436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9957, device='cuda:0', dtype=torch.float64)
tensor([-2.9516, -4.0678, -4.6603, -4.7981, -5.9406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1255, device='cuda:0', dtype=torch.float64)
tensor([-2.9928, -4.0970, -4.7305, -4.8305, -5.9431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1315, device='cuda:0', dtype=torch.float64)
tensor([-3.0368, -4.1375, -4.8097, -4.8795, -5.9345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1027, device='cuda:0', dtype=torch.float64)
tensor([-3.0769, -4.1834, -4.9052, -4.9477, -5.9269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8393, device='cuda:0', dtype=torch.float64)
tensor([-3.1241, -4.2452, -5.0324, -5.0041, -5.9244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0066, device='cuda:0', dtype=torch.float64)
tensor([-3.1790, -4.3158, -5.1545, -5.0662, -5.9361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5096, device='cuda:0', dtype=torch.float64)
tensor([-3.2372, -4.3923, -5.2759, -5.1304, -5.9514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5230, device='cuda:0', dtype=torch.float64)
tensor([-3.3027, -4.4882, -5.3919, -5.1932, -5.9710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6895, device='cuda:0', dtype=torch.float64)
tensor([-3.3721, -4.5943, -5.5037, -5.2576, -5.9934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5479, device='cuda:0', dtype=torch.float64)
tensor([-3.4397, -4.7229, -5.5940, -5.3321, -6.0228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4724, device='cuda:0', dtype=torch.float64)
tensor([-3.5076, -4.9163, -5.7090, -5.4210, -6.0573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7295, device='cuda:0', dtype=torch.float64)
tensor([-3.5749, -5.2053, -5.8331, -5.5231, -6.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2025, device='cuda:0', dtype=torch.float64)
tensor([-3.6486, -5.6447, -5.9830, -5.6220, -6.1164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8224, device='cuda:0', dtype=torch.float64)
tensor([-3.7205, -6.1243, -6.1397, -5.7371, -6.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0663, device='cuda:0', dtype=torch.float64)
tensor([-3.7915, -6.6599, -6.3031, -5.8758, -6.2024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7213, device='cuda:0', dtype=torch.float64)
tensor([-3.8646, -7.2624, -6.4525, -6.0398, -6.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8230, device='cuda:0', dtype=torch.float64)
tensor([-3.9433, -7.8732, -6.6394, -6.2269, -6.3499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5341, device='cuda:0', dtype=torch.float64)
tensor([-4.0271, -8.5045, -6.8246, -6.4156, -6.4270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3573, device='cuda:0', dtype=torch.float64)
tensor([-4.1168, -9.1213, -6.9990, -6.6014, -6.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4808, device='cuda:0', dtype=torch.float64)
tensor([-4.2075, -9.7509, -7.1727, -6.7961, -6.5820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5630, device='cuda:0', dtype=torch.float64)
tensor([ -4.3038, -10.3140,  -7.3436,  -7.0121,  -6.6763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2506, device='cuda:0', dtype=torch.float64)
tensor([ -4.3902, -10.7949,  -7.5033,  -7.2186,  -6.7645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5061, device='cuda:0', dtype=torch.float64)
tensor([ -4.4755, -11.3496,  -7.6674,  -7.4454,  -6.8524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5080, device='cuda:0', dtype=torch.float64)
tensor([ -4.5486, -11.7788,  -7.8532,  -7.6665,  -6.9412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5046, device='cuda:0', dtype=torch.float64)
tensor([ -4.6378, -12.2574,  -8.0577,  -7.9028,  -7.0336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4229, device='cuda:0', dtype=torch.float64)
tensor([ -4.7278, -12.7570,  -8.3072,  -8.1765,  -7.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2858, device='cuda:0', dtype=torch.float64)
tensor([ -4.8251, -13.2756,  -8.5191,  -8.4605,  -7.2351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5471, device='cuda:0', dtype=torch.float64)
tensor([ -4.9075, -13.7135,  -8.7549,  -8.7368,  -7.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2466, device='cuda:0', dtype=torch.float64)
tensor([ -4.9948, -14.1662,  -8.9732,  -9.0187,  -7.4070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6479, device='cuda:0', dtype=torch.float64)
tensor([ -5.0880, -14.5789,  -9.1425,  -9.2960,  -7.4803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5317, device='cuda:0', dtype=torch.float64)
tensor([ -5.1785, -15.0132,  -9.3269,  -9.5920,  -7.5649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3553, device='cuda:0', dtype=torch.float64)
tensor([ -5.2754, -15.3475,  -9.5116,  -9.8399,  -7.6412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5158, device='cuda:0', dtype=torch.float64)
tensor([ -5.3722, -15.7279,  -9.7032, -10.1163,  -7.7437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3512, device='cuda:0', dtype=torch.float64)
tensor([ -5.4601, -16.0190,  -9.8272, -10.3287,  -7.8320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2572, device='cuda:0', dtype=torch.float64)
tensor([ -5.5667, -16.3402,  -9.9578, -10.5464,  -7.9227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4808, device='cuda:0', dtype=torch.float64)
tensor([ -5.6719, -16.5610, -10.0378, -10.7051,  -8.0033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6593, device='cuda:0', dtype=torch.float64)
tensor([ -5.7915, -16.7263, -10.0598, -10.7933,  -8.0845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3824, device='cuda:0', dtype=torch.float64)
tensor([ -5.8885, -16.8195, -10.0751, -10.8154,  -8.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6855, device='cuda:0', dtype=torch.float64)
tensor([ -5.9533, -16.9069, -10.0945, -10.8818,  -8.2553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3112, device='cuda:0', dtype=torch.float64)
tensor([ -6.0174, -16.9164, -10.1333, -10.8697,  -8.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2040, device='cuda:0', dtype=torch.float64)
tensor([ -6.0682, -16.9683, -10.1863, -10.8707,  -8.4087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([ -6.1156, -16.9927, -10.2516, -10.9145,  -8.4830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8379, device='cuda:0', dtype=torch.float64)
tensor([ -6.1574, -17.0538, -10.3154, -10.9991,  -8.5455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6185, device='cuda:0', dtype=torch.float64)
tensor([ -6.2021, -17.1826, -10.3973, -11.0655,  -8.6162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2858, device='cuda:0', dtype=torch.float64)
tensor([ -6.2473, -17.3214, -10.4561, -11.1031,  -8.6780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4644, device='cuda:0', dtype=torch.float64)
tensor([ -6.3058, -17.5536, -10.5188, -11.2343,  -8.7516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1370, device='cuda:0', dtype=torch.float64)
tensor([ -6.3754, -17.9459, -10.5973, -11.3926,  -8.8254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3170, device='cuda:0', dtype=torch.float64)
tensor([ -6.4631, -18.4255, -10.6667, -11.5893,  -8.8999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0200, device='cuda:0', dtype=torch.float64)
tensor([ -6.5369, -18.7601, -10.7150, -11.7883,  -8.9713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1232, device='cuda:0', dtype=torch.float64)
tensor([ -6.6020, -19.1214, -10.7667, -12.0137,  -9.0340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3853, device='cuda:0', dtype=torch.float64)
tensor([ -6.6509, -19.3074, -10.7770, -12.1661,  -9.0714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2947, device='cuda:0', dtype=torch.float64)
tensor([ -6.6830, -19.4404, -10.7994, -12.3284,  -9.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3953, device='cuda:0', dtype=torch.float64)
tensor([ -6.7542, -19.7519, -10.8762, -12.5354,  -9.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1902, device='cuda:0', dtype=torch.float64)
tensor([ -6.7971, -20.0828, -10.9849, -12.7159,  -9.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9845, device='cuda:0', dtype=torch.float64)
tensor([ -6.8363, -20.3848, -11.1170, -12.8921,  -9.2494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1648, device='cuda:0', dtype=torch.float64)
tensor([ -6.8910, -20.7949, -11.2613, -13.1154,  -9.3275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0897, device='cuda:0', dtype=torch.float64)
tensor([ -6.9552, -21.1336, -11.3699, -13.2724,  -9.3756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2750, device='cuda:0', dtype=torch.float64)
tensor([ -7.0003, -21.4447, -11.4852, -13.4248,  -9.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2637, device='cuda:0', dtype=torch.float64)
tensor([ -7.0633, -21.8285, -11.5886, -13.5554,  -9.4921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3512, device='cuda:0', dtype=torch.float64)
tensor([ -7.1376, -22.2362, -11.6864, -13.7251,  -9.5749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1940, device='cuda:0', dtype=torch.float64)
tensor([ -7.2037, -22.6193, -11.7545, -13.8824,  -9.6459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3243, device='cuda:0', dtype=torch.float64)
tensor([ -7.2791, -23.0727, -11.8018, -14.0399,  -9.7329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2745, device='cuda:0', dtype=torch.float64)
tensor([ -7.3437, -23.5153, -11.8740, -14.2260,  -9.8389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1818, device='cuda:0', dtype=torch.float64)
tensor([ -7.4148, -23.9623, -11.9661, -14.4159,  -9.9519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1152, device='cuda:0', dtype=torch.float64)
tensor([ -7.5018, -24.3537, -12.0721, -14.5719, -10.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1146, device='cuda:0', dtype=torch.float64)
tensor([ -7.5844, -24.8988, -12.1860, -14.7621, -10.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1776, device='cuda:0', dtype=torch.float64)
tensor([ -7.6956, -25.4893, -12.3102, -14.9566, -10.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4694, device='cuda:0', dtype=torch.float64)
tensor([ -7.8238, -26.1449, -12.4462, -15.2370, -10.4196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2202, device='cuda:0', dtype=torch.float64)
tensor([ -7.9636, -26.6681, -12.5720, -15.4867, -10.5342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9772, device='cuda:0', dtype=torch.float64)
tensor([ -8.1008, -27.0924, -12.7004, -15.7690, -10.6633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3880, device='cuda:0', dtype=torch.float64)
tensor([ -8.2307, -27.5657, -12.8283, -16.1021, -10.7981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1073, device='cuda:0', dtype=torch.float64)
tensor([ -8.3479, -27.8797, -12.8915, -16.3752, -10.9155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3457, device='cuda:0', dtype=torch.float64)
tensor([ -8.4721, -28.1489, -12.9371, -16.6208, -11.0147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1210, device='cuda:0', dtype=torch.float64)
tensor([ -8.5568, -28.3648, -12.9604, -16.8636, -11.1042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9149, device='cuda:0', dtype=torch.float64)
tensor([ -8.6956, -28.6805, -13.0106, -17.1542, -11.2095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0989, device='cuda:0', dtype=torch.float64)
tensor([ -8.7761, -28.7378, -13.0456, -17.3131, -11.2832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0265, device='cuda:0', dtype=torch.float64)
tensor([ -8.8810, -28.7623, -13.0400, -17.4475, -11.3434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([ -9.0262, -28.8689, -13.0501, -17.6440, -11.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9814, device='cuda:0', dtype=torch.float64)
tensor([ -9.1283, -28.8935, -13.0540, -17.8009, -11.5097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0829, device='cuda:0', dtype=torch.float64)
tensor([ -9.2581, -28.9713, -13.0963, -17.9618, -11.5924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([ -9.3788, -29.1354, -13.1469, -18.2045, -11.6841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1558, device='cuda:0', dtype=torch.float64)
tensor([ -9.5011, -29.1170, -13.1967, -18.4184, -11.7787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0459, device='cuda:0', dtype=torch.float64)
tensor([ -9.6407, -29.2936, -13.2587, -18.7356, -11.8716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9901, device='cuda:0', dtype=torch.float64)
tensor([ -9.8095, -29.4105, -13.3499, -18.9782, -11.9442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9411, device='cuda:0', dtype=torch.float64)
tensor([ -9.9706, -29.5630, -13.4242, -19.2386, -12.0220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1575, device='cuda:0', dtype=torch.float64)
tensor([-10.0750, -29.6079, -13.4193, -19.3637, -12.0825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2312, device='cuda:0', dtype=torch.float64)
tensor([-10.1989, -29.5537, -13.4434, -19.5522, -12.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9140, device='cuda:0', dtype=torch.float64)
tensor([-10.2978, -29.4347, -13.4593, -19.6351, -12.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1212, device='cuda:0', dtype=torch.float64)
tensor([-10.4157, -29.4870, -13.5231, -19.8304, -12.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0310, device='cuda:0', dtype=torch.float64)
tensor([-10.5127, -29.4354, -13.6199, -20.0047, -12.4223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9179, device='cuda:0', dtype=torch.float64)
tensor([-10.5958, -29.4192, -13.7415, -20.1536, -12.4802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0340, device='cuda:0', dtype=torch.float64)
tensor([-10.7234, -29.3236, -13.8514, -20.2084, -12.5054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9648, device='cuda:0', dtype=torch.float64)
tensor([-10.8525, -29.2673, -13.9594, -20.2094, -12.5072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1642, device='cuda:0', dtype=torch.float64)
tensor([-10.9904, -29.2282, -14.0328, -20.2353, -12.4551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8490, device='cuda:0', dtype=torch.float64)
tensor([-11.1414, -29.2617, -14.1488, -20.2546, -12.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0372, device='cuda:0', dtype=torch.float64)
tensor([-11.3076, -29.3003, -14.2669, -20.2531, -12.2983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9881, device='cuda:0', dtype=torch.float64)
tensor([-11.4442, -29.3569, -14.3735, -20.3230, -12.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9534, device='cuda:0', dtype=torch.float64)
tensor([-11.5799, -29.3760, -14.4342, -20.3834, -12.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8707, device='cuda:0', dtype=torch.float64)
tensor([-11.7641, -29.4998, -14.5073, -20.4864, -12.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8827, device='cuda:0', dtype=torch.float64)
tensor([-11.9806, -29.6495, -14.5762, -20.6212, -12.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9913, device='cuda:0', dtype=torch.float64)
tensor([-12.1399, -29.6679, -14.6299, -20.7111, -12.0595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7518, device='cuda:0', dtype=torch.float64)
tensor([-12.2413, -29.6786, -14.6629, -20.7961, -12.0031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7937, device='cuda:0', dtype=torch.float64)
tensor([-12.3076, -29.6764, -14.6712, -20.9248, -11.9886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9824, device='cuda:0', dtype=torch.float64)
tensor([-12.3647, -29.6200, -14.7179, -21.0872, -11.9562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0193, device='cuda:0', dtype=torch.float64)
tensor([-12.3907, -29.5003, -14.7536, -21.2068, -11.9580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9159, device='cuda:0', dtype=torch.float64)
tensor([-12.3686, -29.4687, -14.7460, -21.3298, -11.9357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0504, device='cuda:0', dtype=torch.float64)
tensor([-12.3655, -29.3085, -14.7046, -21.3567, -11.8882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-12.3789, -29.1242, -14.7058, -21.4683, -11.8746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0800, device='cuda:0', dtype=torch.float64)
tensor([-12.3735, -28.8716, -14.6905, -21.4575, -11.8247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8884, device='cuda:0', dtype=torch.float64)
tensor([-12.3923, -28.5893, -14.6974, -21.4273, -11.7839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8902, device='cuda:0', dtype=torch.float64)
tensor([-12.4184, -28.3024, -14.7144, -21.3951, -11.7663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9313, device='cuda:0', dtype=torch.float64)
tensor([-12.4705, -28.0244, -14.7581, -21.3922, -11.7590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8661, device='cuda:0', dtype=torch.float64)
tensor([-12.5281, -27.7523, -14.8431, -21.3497, -11.7493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9070, device='cuda:0', dtype=torch.float64)
tensor([-12.6241, -27.6046, -14.9510, -21.3643, -11.7688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7726, device='cuda:0', dtype=torch.float64)
tensor([-12.7642, -27.5144, -15.0779, -21.4311, -11.7721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8508, device='cuda:0', dtype=torch.float64)
tensor([-12.9157, -27.3885, -15.2040, -21.5114, -11.7751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7007, device='cuda:0', dtype=torch.float64)
tensor([-13.0362, -27.2455, -15.3085, -21.5482, -11.7880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([-13.1859, -27.1255, -15.3964, -21.6483, -11.7846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7177, device='cuda:0', dtype=torch.float64)
tensor([-13.3322, -26.9876, -15.4710, -21.7486, -11.7524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7550, device='cuda:0', dtype=torch.float64)
tensor([-13.5489, -26.9452, -15.5485, -21.9363, -11.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9087, device='cuda:0', dtype=torch.float64)
tensor([-13.6587, -26.8074, -15.5542, -22.0270, -11.7260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8041, device='cuda:0', dtype=torch.float64)
tensor([-13.7555, -26.6317, -15.5674, -22.0741, -11.6892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9354, device='cuda:0', dtype=torch.float64)
tensor([-13.7677, -26.3756, -15.5288, -22.0453, -11.6666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9959, device='cuda:0', dtype=torch.float64)
tensor([-13.7676, -26.0506, -15.4970, -22.0155, -11.6416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8971, device='cuda:0', dtype=torch.float64)
tensor([-13.7588, -25.8170, -15.4844, -22.0785, -11.6218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9679, device='cuda:0', dtype=torch.float64)
tensor([-13.8569, -25.7016, -15.5651, -22.2407, -11.6420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8073, device='cuda:0', dtype=torch.float64)
tensor([-13.9054, -25.5882, -15.6379, -22.3498, -11.6787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8382, device='cuda:0', dtype=torch.float64)
tensor([-13.9030, -25.4776, -15.6813, -22.4544, -11.7062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7685, device='cuda:0', dtype=torch.float64)
tensor([-13.8970, -25.4386, -15.7036, -22.6150, -11.7400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7269, device='cuda:0', dtype=torch.float64)
tensor([-13.8561, -25.3142, -15.6929, -22.7627, -11.7627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8027, device='cuda:0', dtype=torch.float64)
tensor([-13.8406, -25.1431, -15.6722, -22.8644, -11.7634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7032, device='cuda:0', dtype=torch.float64)
tensor([-13.8144, -25.0708, -15.6082, -22.9860, -11.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6997, device='cuda:0', dtype=torch.float64)
tensor([-13.7271, -24.8848, -15.5181, -23.0446, -11.7635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7839, device='cuda:0', dtype=torch.float64)
tensor([-13.6908, -24.7765, -15.4849, -23.1895, -11.7921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7855, device='cuda:0', dtype=torch.float64)
tensor([-13.6604, -24.7145, -15.4494, -23.3434, -11.8376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7440, device='cuda:0', dtype=torch.float64)
tensor([-13.6795, -24.7382, -15.4662, -23.4975, -11.8946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7144, device='cuda:0', dtype=torch.float64)
tensor([-13.6340, -24.6978, -15.4759, -23.5662, -11.9543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6707, device='cuda:0', dtype=torch.float64)
tensor([-13.6262, -24.7302, -15.5130, -23.6427, -12.0128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6787, device='cuda:0', dtype=torch.float64)
tensor([-13.5755, -24.7588, -15.5647, -23.7317, -12.0869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6988, device='cuda:0', dtype=torch.float64)
tensor([-13.5626, -24.8693, -15.6188, -23.8298, -12.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8205, device='cuda:0', dtype=torch.float64)
tensor([-13.4541, -24.7922, -15.5730, -23.7438, -12.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8279, device='cuda:0', dtype=torch.float64)
tensor([-13.3675, -24.7022, -15.5236, -23.6613, -12.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6402, device='cuda:0', dtype=torch.float64)
tensor([-13.2578, -24.6009, -15.4689, -23.5919, -12.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7283, device='cuda:0', dtype=torch.float64)
tensor([-13.0622, -24.4050, -15.3472, -23.4862, -12.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7099, device='cuda:0', dtype=torch.float64)
tensor([-12.9358, -24.2967, -15.2717, -23.4054, -12.2150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7304, device='cuda:0', dtype=torch.float64)
tensor([-12.8001, -24.1433, -15.1897, -23.2939, -12.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6390, device='cuda:0', dtype=torch.float64)
tensor([-12.6672, -24.0505, -15.1171, -23.1782, -12.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6409, device='cuda:0', dtype=torch.float64)
tensor([-12.4822, -23.9089, -14.9747, -23.0293, -12.1842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5234, device='cuda:0', dtype=torch.float64)
tensor([-12.3178, -23.7944, -14.8502, -22.9321, -12.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6050, device='cuda:0', dtype=torch.float64)
tensor([-12.1816, -23.6925, -14.7251, -22.7999, -12.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6330, device='cuda:0', dtype=torch.float64)
tensor([-12.0916, -23.6041, -14.6123, -22.7361, -12.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6802, device='cuda:0', dtype=torch.float64)
tensor([-12.0664, -23.5163, -14.5583, -22.7760, -12.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4672, device='cuda:0', dtype=torch.float64)
tensor([-12.0212, -23.3871, -14.4993, -22.8030, -12.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5874, device='cuda:0', dtype=torch.float64)
tensor([-12.0435, -23.2868, -14.4842, -22.8651, -12.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5710, device='cuda:0', dtype=torch.float64)
tensor([-11.9701, -23.1011, -14.4273, -22.8744, -12.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6433, device='cuda:0', dtype=torch.float64)
tensor([-11.9017, -22.9326, -14.3741, -22.9740, -12.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5273, device='cuda:0', dtype=torch.float64)
tensor([-11.8856, -22.7830, -14.3503, -23.1124, -12.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5760, device='cuda:0', dtype=torch.float64)
tensor([-11.8183, -22.5972, -14.3222, -23.2120, -12.2919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5001, device='cuda:0', dtype=torch.float64)
tensor([-11.7347, -22.4340, -14.2695, -23.2570, -12.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6849, device='cuda:0', dtype=torch.float64)
tensor([-11.6552, -22.2819, -14.2427, -23.3172, -12.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6451, device='cuda:0', dtype=torch.float64)
tensor([-11.6013, -22.1849, -14.2341, -23.4105, -12.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5497, device='cuda:0', dtype=torch.float64)
tensor([-11.5624, -22.1236, -14.2445, -23.5100, -12.5451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5367, device='cuda:0', dtype=torch.float64)
tensor([-11.5455, -22.0302, -14.2459, -23.5541, -12.6117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4223, device='cuda:0', dtype=torch.float64)
tensor([-11.5323, -21.8910, -14.2237, -23.5973, -12.6697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6654, device='cuda:0', dtype=torch.float64)
tensor([-11.5150, -21.7211, -14.2049, -23.6468, -12.7326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5436, device='cuda:0', dtype=torch.float64)
tensor([-11.4886, -21.5404, -14.1837, -23.6908, -12.7912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([-11.4422, -21.3921, -14.1386, -23.7144, -12.8396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4163, device='cuda:0', dtype=torch.float64)
tensor([-11.3692, -21.1904, -14.0700, -23.7045, -12.8636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5633, device='cuda:0', dtype=torch.float64)
tensor([-11.3315, -21.0168, -14.0372, -23.7268, -12.8906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4239, device='cuda:0', dtype=torch.float64)
tensor([-11.2860, -20.8745, -14.0112, -23.7461, -12.9155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3619, device='cuda:0', dtype=torch.float64)
tensor([-11.2693, -20.7562, -13.9974, -23.7826, -12.9360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5829, device='cuda:0', dtype=torch.float64)
tensor([-11.3167, -20.7256, -14.0344, -23.9251, -12.9771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4625, device='cuda:0', dtype=torch.float64)
tensor([-11.3502, -20.6909, -14.0667, -24.0565, -13.0169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4299, device='cuda:0', dtype=torch.float64)
tensor([-11.4001, -20.6926, -14.1162, -24.1911, -13.0384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4206, device='cuda:0', dtype=torch.float64)
tensor([-11.4261, -20.6634, -14.1416, -24.3113, -13.0564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4333, device='cuda:0', dtype=torch.float64)
tensor([-11.4389, -20.6259, -14.1557, -24.3995, -13.0650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5018, device='cuda:0', dtype=torch.float64)
tensor([-11.4660, -20.5785, -14.1668, -24.4821, -13.0730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3800, device='cuda:0', dtype=torch.float64)
tensor([-11.5107, -20.5279, -14.1770, -24.5284, -13.0699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4769, device='cuda:0', dtype=torch.float64)
tensor([-11.5502, -20.5279, -14.1741, -24.5449, -13.0596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4282, device='cuda:0', dtype=torch.float64)
tensor([-11.6245, -20.5448, -14.2052, -24.5409, -13.0291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4565, device='cuda:0', dtype=torch.float64)
tensor([-11.7034, -20.5956, -14.2354, -24.5528, -12.9985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3785, device='cuda:0', dtype=torch.float64)
tensor([-11.7768, -20.6096, -14.2681, -24.5605, -12.9544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3521, device='cuda:0', dtype=torch.float64)
tensor([-11.8256, -20.6025, -14.2912, -24.5689, -12.9127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3661, device='cuda:0', dtype=torch.float64)
tensor([-11.8545, -20.5712, -14.3183, -24.5453, -12.8646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3449, device='cuda:0', dtype=torch.float64)
tensor([-11.8916, -20.4986, -14.3506, -24.4679, -12.8056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3516, device='cuda:0', dtype=torch.float64)
tensor([-11.9187, -20.4549, -14.3749, -24.3657, -12.7523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4224, device='cuda:0', dtype=torch.float64)
tensor([-11.9163, -20.3841, -14.3787, -24.2310, -12.6959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([-11.9087, -20.2889, -14.3789, -24.0775, -12.6477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4189, device='cuda:0', dtype=torch.float64)
tensor([-11.9148, -20.1349, -14.3828, -23.8975, -12.5895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4002, device='cuda:0', dtype=torch.float64)
tensor([-11.8947, -19.9773, -14.3683, -23.6970, -12.5250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4195, device='cuda:0', dtype=torch.float64)
tensor([-11.8961, -19.8365, -14.3797, -23.5316, -12.4596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3490, device='cuda:0', dtype=torch.float64)
tensor([-11.8905, -19.7206, -14.3997, -23.3704, -12.4039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3923, device='cuda:0', dtype=torch.float64)
tensor([-11.8464, -19.6362, -14.3975, -23.2145, -12.3604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3704, device='cuda:0', dtype=torch.float64)
tensor([-11.7852, -19.5442, -14.3737, -23.0841, -12.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3834, device='cuda:0', dtype=torch.float64)
tensor([-11.7126, -19.4236, -14.3455, -22.9609, -12.2785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3237, device='cuda:0', dtype=torch.float64)
tensor([-11.6340, -19.2996, -14.3042, -22.8457, -12.2304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3283, device='cuda:0', dtype=torch.float64)
tensor([-11.5703, -19.1905, -14.2809, -22.7223, -12.1773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2986, device='cuda:0', dtype=torch.float64)
tensor([-11.5098, -19.0825, -14.2594, -22.5894, -12.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2678, device='cuda:0', dtype=torch.float64)
tensor([-11.4735, -18.9987, -14.2571, -22.4779, -12.0714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3186, device='cuda:0', dtype=torch.float64)
tensor([-11.4404, -18.9381, -14.2653, -22.3631, -12.0228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2879, device='cuda:0', dtype=torch.float64)
tensor([-11.4098, -18.8825, -14.2794, -22.2339, -11.9665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3074, device='cuda:0', dtype=torch.float64)
tensor([-11.3786, -18.8255, -14.3014, -22.1031, -11.9162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2922, device='cuda:0', dtype=torch.float64)
tensor([-11.3546, -18.7569, -14.3135, -21.9835, -11.8705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2524, device='cuda:0', dtype=torch.float64)
tensor([-11.3471, -18.7067, -14.3272, -21.8775, -11.8249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2812, device='cuda:0', dtype=torch.float64)
tensor([-11.3449, -18.6545, -14.3424, -21.7821, -11.7784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2709, device='cuda:0', dtype=torch.float64)
tensor([-11.3314, -18.5841, -14.3487, -21.6706, -11.7406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2532, device='cuda:0', dtype=torch.float64)
tensor([-11.3172, -18.5208, -14.3454, -21.5538, -11.6923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3120, device='cuda:0', dtype=torch.float64)
tensor([-11.3034, -18.4713, -14.3334, -21.4329, -11.6410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2611, device='cuda:0', dtype=torch.float64)
tensor([-11.2764, -18.4135, -14.3192, -21.3194, -11.5976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2803, device='cuda:0', dtype=torch.float64)
tensor([-11.2490, -18.3438, -14.2995, -21.1962, -11.5576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2564, device='cuda:0', dtype=torch.float64)
tensor([-11.2296, -18.2798, -14.2832, -21.0774, -11.5160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2654, device='cuda:0', dtype=torch.float64)
tensor([-11.1957, -18.2089, -14.2479, -20.9546, -11.4752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2255, device='cuda:0', dtype=torch.float64)
tensor([-11.1622, -18.1421, -14.2045, -20.8437, -11.4391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2784, device='cuda:0', dtype=torch.float64)
tensor([-11.1026, -18.0748, -14.1564, -20.6968, -11.4004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1874, device='cuda:0', dtype=torch.float64)
tensor([-11.0582, -18.0092, -14.1207, -20.5635, -11.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2566, device='cuda:0', dtype=torch.float64)
tensor([-11.0001, -17.9391, -14.0665, -20.4228, -11.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2441, device='cuda:0', dtype=torch.float64)
tensor([-10.9506, -17.8630, -14.0169, -20.3072, -11.2969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2100, device='cuda:0', dtype=torch.float64)
tensor([-10.9099, -17.7958, -13.9613, -20.2150, -11.2753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2507, device='cuda:0', dtype=torch.float64)
tensor([-10.8818, -17.7433, -13.9117, -20.1383, -11.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2301, device='cuda:0', dtype=torch.float64)
tensor([-10.8502, -17.6757, -13.8638, -20.0563, -11.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2461, device='cuda:0', dtype=torch.float64)
tensor([-10.8077, -17.6144, -13.8191, -19.9755, -11.2245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1712, device='cuda:0', dtype=torch.float64)
tensor([-10.7756, -17.5493, -13.7728, -19.9016, -11.2058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2046, device='cuda:0', dtype=torch.float64)
tensor([-10.7364, -17.4801, -13.7259, -19.8305, -11.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2152, device='cuda:0', dtype=torch.float64)
tensor([-10.6884, -17.4072, -13.6880, -19.7633, -11.1793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2201, device='cuda:0', dtype=torch.float64)
tensor([-10.6333, -17.3207, -13.6410, -19.6762, -11.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2169, device='cuda:0', dtype=torch.float64)
tensor([-10.5769, -17.2312, -13.5844, -19.5965, -11.1396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2060, device='cuda:0', dtype=torch.float64)
tensor([-10.5202, -17.1358, -13.5295, -19.5088, -11.1126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2168, device='cuda:0', dtype=torch.float64)
tensor([-10.4484, -17.0254, -13.4636, -19.4001, -11.0780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1876, device='cuda:0', dtype=torch.float64)
tensor([-10.3703, -16.9139, -13.3949, -19.2799, -11.0450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1666, device='cuda:0', dtype=torch.float64)
tensor([-10.3075, -16.8117, -13.3391, -19.1699, -11.0132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1896, device='cuda:0', dtype=torch.float64)
tensor([-10.2318, -16.7024, -13.2707, -19.0570, -10.9838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1860, device='cuda:0', dtype=torch.float64)
tensor([-10.1640, -16.6033, -13.1926, -18.9419, -10.9608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1645, device='cuda:0', dtype=torch.float64)
tensor([-10.1017, -16.4985, -13.1157, -18.8247, -10.9359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1931, device='cuda:0', dtype=torch.float64)
tensor([-10.0275, -16.3890, -13.0427, -18.7158, -10.9167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1820, device='cuda:0', dtype=torch.float64)
tensor([ -9.9594, -16.2893, -12.9752, -18.6086, -10.8979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2001, device='cuda:0', dtype=torch.float64)
tensor([ -9.8920, -16.1943, -12.9116, -18.5086, -10.8761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1763, device='cuda:0', dtype=torch.float64)
tensor([ -9.8355, -16.0843, -12.8578, -18.4177, -10.8579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2235, device='cuda:0', dtype=torch.float64)
tensor([ -9.7867, -15.9997, -12.8167, -18.3375, -10.8444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1721, device='cuda:0', dtype=torch.float64)
tensor([ -9.7451, -15.9225, -12.7796, -18.2518, -10.8339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2347, device='cuda:0', dtype=torch.float64)
tensor([ -9.6839, -15.8153, -12.7146, -18.1402, -10.8123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1899, device='cuda:0', dtype=torch.float64)
tensor([ -9.6180, -15.7086, -12.6467, -18.0212, -10.7898], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_043009.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(207.0948, device='cuda:0', dtype=torch.float64)
tensor([-3.1179, -7.5098, -5.2420, -8.1493, -8.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.2010, device='cuda:0', dtype=torch.float64)
tensor([-2.6254, -5.9674, -4.8272, -5.6571, -6.6372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(33.2309, device='cuda:0', dtype=torch.float64)
tensor([-2.8606, -4.0868, -5.8795, -6.4076, -8.8311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(60.2042, device='cuda:0', dtype=torch.float64)
tensor([ -7.2781,  -3.7931,  -7.1737,  -7.5800, -11.7446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(85.3664, device='cuda:0', dtype=torch.float64)
tensor([ -7.1552,  -4.4175,  -7.5455,  -8.1704, -12.8819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(84.7450, device='cuda:0', dtype=torch.float64)
tensor([ -3.7248,  -5.2096,  -6.6592,  -7.1827, -11.6669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.4800, device='cuda:0', dtype=torch.float64)
tensor([-2.5790, -5.4928, -5.4992, -5.9358, -9.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.3231, device='cuda:0', dtype=torch.float64)
tensor([-2.6018, -5.1345, -4.8513, -5.3084, -7.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.8529, device='cuda:0', dtype=torch.float64)
tensor([-2.7426, -4.7888, -4.6541, -5.2486, -7.0005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.8026, device='cuda:0', dtype=torch.float64)
tensor([-2.9037, -4.9143, -4.6993, -5.6374, -6.5622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.9593, device='cuda:0', dtype=torch.float64)
tensor([-2.9784, -5.4379, -4.8385, -6.5285, -6.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.2370, device='cuda:0', dtype=torch.float64)
tensor([-2.9526, -6.2699, -4.9078, -7.1988, -6.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.3665, device='cuda:0', dtype=torch.float64)
tensor([-2.9999, -6.1079, -4.7724, -6.9609, -6.5141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.7099, device='cuda:0', dtype=torch.float64)
tensor([-2.7717, -5.1892, -4.5108, -6.2919, -6.6221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.6700, device='cuda:0', dtype=torch.float64)
tensor([-2.5697, -4.6706, -4.3127, -5.7396, -6.6228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7513, device='cuda:0', dtype=torch.float64)
tensor([-2.4404, -4.2786, -4.2953, -5.4437, -6.6328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.6403, device='cuda:0', dtype=torch.float64)
tensor([-2.3256, -3.9297, -4.4749, -5.4114, -6.6794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3842, device='cuda:0', dtype=torch.float64)
tensor([-2.2254, -3.6691, -4.8071, -5.6440, -6.7502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6581, device='cuda:0', dtype=torch.float64)
tensor([-2.1597, -3.4864, -5.1836, -6.0549, -6.8662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.4881, device='cuda:0', dtype=torch.float64)
tensor([-2.1396, -3.3589, -5.4839, -6.3101, -7.0005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.5204, device='cuda:0', dtype=torch.float64)
tensor([-2.1355, -3.2791, -5.6454, -6.2161, -7.0533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7468, device='cuda:0', dtype=torch.float64)
tensor([-2.1145, -3.2503, -5.6599, -5.8841, -6.9048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.3575, device='cuda:0', dtype=torch.float64)
tensor([-2.0973, -3.2799, -5.5525, -5.5448, -6.5739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.5809, device='cuda:0', dtype=torch.float64)
tensor([-2.1104, -3.3700, -5.3547, -5.3139, -6.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.0778, device='cuda:0', dtype=torch.float64)
tensor([-2.1613, -3.4926, -5.1120, -5.1729, -6.0616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5775, device='cuda:0', dtype=torch.float64)
tensor([-2.2378, -3.6162, -4.8771, -5.0673, -5.9933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6527, device='cuda:0', dtype=torch.float64)
tensor([-2.3128, -3.7207, -4.6752, -4.9573, -5.9998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5387, device='cuda:0', dtype=torch.float64)
tensor([-2.3689, -3.7954, -4.5150, -4.8536, -6.0376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7504, device='cuda:0', dtype=torch.float64)
tensor([-2.4036, -3.8339, -4.3920, -4.7530, -6.0735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.2629, device='cuda:0', dtype=torch.float64)
tensor([-2.4213, -3.8407, -4.3017, -4.6404, -6.0868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.1894, device='cuda:0', dtype=torch.float64)
tensor([-2.4261, -3.8287, -4.2461, -4.5242, -6.0813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.4162, device='cuda:0', dtype=torch.float64)
tensor([-2.4209, -3.8088, -4.2258, -4.4306, -6.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2087, device='cuda:0', dtype=torch.float64)
tensor([-2.4104, -3.7868, -4.2432, -4.3852, -6.0425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9497, device='cuda:0', dtype=torch.float64)
tensor([-2.3970, -3.7692, -4.2890, -4.3954, -6.0226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6895, device='cuda:0', dtype=torch.float64)
tensor([-2.3792, -3.7609, -4.3419, -4.4479, -6.0074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5644, device='cuda:0', dtype=torch.float64)
tensor([-2.3577, -3.7665, -4.3722, -4.5194, -5.9979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2761, device='cuda:0', dtype=torch.float64)
tensor([-2.3337, -3.7806, -4.3621, -4.5911, -5.9924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.7480, device='cuda:0', dtype=torch.float64)
tensor([-2.3071, -3.7870, -4.3251, -4.6693, -5.9838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0639, device='cuda:0', dtype=torch.float64)
tensor([-2.2838, -3.7761, -4.2810, -4.7558, -5.9675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2542, device='cuda:0', dtype=torch.float64)
tensor([-2.2672, -3.7544, -4.2533, -4.8520, -5.9439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3333, device='cuda:0', dtype=torch.float64)
tensor([-2.2586, -3.7346, -4.2471, -4.9546, -5.9202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9363, device='cuda:0', dtype=torch.float64)
tensor([-2.2582, -3.7260, -4.2629, -5.0553, -5.9007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7213, device='cuda:0', dtype=torch.float64)
tensor([-2.2615, -3.7265, -4.2943, -5.1406, -5.8900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7723, device='cuda:0', dtype=torch.float64)
tensor([-2.2642, -3.7249, -4.3347, -5.1995, -5.8839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1994, device='cuda:0', dtype=torch.float64)
tensor([-2.2658, -3.7148, -4.3722, -5.2213, -5.8793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0832, device='cuda:0', dtype=torch.float64)
tensor([-2.2671, -3.6974, -4.4013, -5.2080, -5.8766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1916, device='cuda:0', dtype=torch.float64)
tensor([-2.2680, -3.6726, -4.4152, -5.1636, -5.8776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9352, device='cuda:0', dtype=torch.float64)
tensor([-2.2660, -3.6492, -4.4169, -5.1000, -5.8816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7045, device='cuda:0', dtype=torch.float64)
tensor([-2.2624, -3.6300, -4.4021, -5.0217, -5.8867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4362, device='cuda:0', dtype=torch.float64)
tensor([-2.2570, -3.6195, -4.3693, -4.9421, -5.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2097, device='cuda:0', dtype=torch.float64)
tensor([-2.2510, -3.6128, -4.3236, -4.8665, -5.8882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1196, device='cuda:0', dtype=torch.float64)
tensor([-2.2454, -3.6103, -4.2732, -4.8004, -5.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0813, device='cuda:0', dtype=torch.float64)
tensor([-2.2411, -3.6115, -4.2267, -4.7448, -5.8722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2796, device='cuda:0', dtype=torch.float64)
tensor([-2.2414, -3.6168, -4.1811, -4.6964, -5.8555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0647, device='cuda:0', dtype=torch.float64)
tensor([-2.2471, -3.6250, -4.1395, -4.6575, -5.8363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8656, device='cuda:0', dtype=torch.float64)
tensor([-2.2593, -3.6342, -4.1056, -4.6298, -5.8163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8116, device='cuda:0', dtype=torch.float64)
tensor([-2.2725, -3.6443, -4.0838, -4.6141, -5.7937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7433, device='cuda:0', dtype=torch.float64)
tensor([-2.2849, -3.6564, -4.0701, -4.6160, -5.7730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5717, device='cuda:0', dtype=torch.float64)
tensor([-2.2983, -3.6664, -4.0677, -4.6304, -5.7500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5816, device='cuda:0', dtype=torch.float64)
tensor([-2.3112, -3.6731, -4.0751, -4.6523, -5.7291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9758, device='cuda:0', dtype=torch.float64)
tensor([-2.3236, -3.6757, -4.0906, -4.6820, -5.7125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5787, device='cuda:0', dtype=torch.float64)
tensor([-2.3331, -3.6730, -4.1136, -4.7133, -5.6970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5720, device='cuda:0', dtype=torch.float64)
tensor([-2.3410, -3.6668, -4.1433, -4.7407, -5.6840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5972, device='cuda:0', dtype=torch.float64)
tensor([-2.3455, -3.6539, -4.1789, -4.7614, -5.6750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6370, device='cuda:0', dtype=torch.float64)
tensor([-2.3504, -3.6394, -4.2097, -4.7701, -5.6709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5748, device='cuda:0', dtype=torch.float64)
tensor([-2.3521, -3.6247, -4.2381, -4.7753, -5.6704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7104, device='cuda:0', dtype=torch.float64)
tensor([-2.3517, -3.6121, -4.2635, -4.7800, -5.6726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5387, device='cuda:0', dtype=torch.float64)
tensor([-2.3505, -3.6027, -4.2697, -4.7787, -5.6699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4722, device='cuda:0', dtype=torch.float64)
tensor([-2.3479, -3.5969, -4.2629, -4.7771, -5.6672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5073, device='cuda:0', dtype=torch.float64)
tensor([-2.3453, -3.5946, -4.2449, -4.7740, -5.6609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2770, device='cuda:0', dtype=torch.float64)
tensor([-2.3449, -3.5946, -4.2196, -4.7667, -5.6543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4276, device='cuda:0', dtype=torch.float64)
tensor([-2.3454, -3.5953, -4.1886, -4.7569, -5.6468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6325, device='cuda:0', dtype=torch.float64)
tensor([-2.3452, -3.5922, -4.1635, -4.7414, -5.6463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3434, device='cuda:0', dtype=torch.float64)
tensor([-2.3420, -3.5859, -4.1410, -4.7298, -5.6455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5159, device='cuda:0', dtype=torch.float64)
tensor([-2.3400, -3.5813, -4.1295, -4.7195, -5.6482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5398, device='cuda:0', dtype=torch.float64)
tensor([-2.3404, -3.5789, -4.1262, -4.7096, -5.6549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5286, device='cuda:0', dtype=torch.float64)
tensor([-2.3407, -3.5795, -4.1276, -4.7028, -5.6564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7049, device='cuda:0', dtype=torch.float64)
tensor([-2.3391, -3.5829, -4.1318, -4.7017, -5.6548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4896, device='cuda:0', dtype=torch.float64)
tensor([-2.3400, -3.5932, -4.1408, -4.6953, -5.6525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3575, device='cuda:0', dtype=torch.float64)
tensor([-2.3427, -3.6075, -4.1505, -4.6955, -5.6484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3535, device='cuda:0', dtype=torch.float64)
tensor([-2.3488, -3.6233, -4.1662, -4.6919, -5.6451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5086, device='cuda:0', dtype=torch.float64)
tensor([-2.3526, -3.6329, -4.1791, -4.6946, -5.6405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4137, device='cuda:0', dtype=torch.float64)
tensor([-2.3568, -3.6348, -4.1921, -4.7060, -5.6363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3944, device='cuda:0', dtype=torch.float64)
tensor([-2.3590, -3.6343, -4.2061, -4.7238, -5.6284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5453, device='cuda:0', dtype=torch.float64)
tensor([-2.3609, -3.6335, -4.2199, -4.7398, -5.6203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4258, device='cuda:0', dtype=torch.float64)
tensor([-2.3688, -3.6274, -4.2250, -4.7457, -5.6198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3567, device='cuda:0', dtype=torch.float64)
tensor([-2.3765, -3.6184, -4.2277, -4.7487, -5.6230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2371, device='cuda:0', dtype=torch.float64)
tensor([-2.3841, -3.6126, -4.2218, -4.7432, -5.6237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4509, device='cuda:0', dtype=torch.float64)
tensor([-2.3909, -3.6071, -4.2107, -4.7317, -5.6251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6751, device='cuda:0', dtype=torch.float64)
tensor([-2.3973, -3.6050, -4.1958, -4.7170, -5.6245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6010, device='cuda:0', dtype=torch.float64)
tensor([-2.4039, -3.6113, -4.1785, -4.7020, -5.6220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6161, device='cuda:0', dtype=torch.float64)
tensor([-2.4065, -3.6167, -4.1662, -4.6901, -5.6186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3446, device='cuda:0', dtype=torch.float64)
tensor([-2.4066, -3.6166, -4.1562, -4.6821, -5.6133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4650, device='cuda:0', dtype=torch.float64)
tensor([-2.4030, -3.6166, -4.1549, -4.6842, -5.5992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3425, device='cuda:0', dtype=torch.float64)
tensor([-2.4040, -3.6164, -4.1527, -4.6949, -5.5915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6573, device='cuda:0', dtype=torch.float64)
tensor([-2.4030, -3.6202, -4.1479, -4.7049, -5.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6491, device='cuda:0', dtype=torch.float64)
tensor([-2.4079, -3.6310, -4.1525, -4.7130, -5.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2956, device='cuda:0', dtype=torch.float64)
tensor([-2.4135, -3.6428, -4.1592, -4.7198, -5.5808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8430, device='cuda:0', dtype=torch.float64)
tensor([-2.4232, -3.6630, -4.1700, -4.7259, -5.5821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5914, device='cuda:0', dtype=torch.float64)
tensor([-2.4357, -3.6861, -4.1718, -4.7254, -5.5834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4385, device='cuda:0', dtype=torch.float64)
tensor([-2.4519, -3.7054, -4.1733, -4.7176, -5.5849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5708, device='cuda:0', dtype=torch.float64)
tensor([-2.4675, -3.7185, -4.1769, -4.7118, -5.5888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6755, device='cuda:0', dtype=torch.float64)
tensor([-2.4814, -3.7190, -4.1821, -4.7076, -5.5902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6574, device='cuda:0', dtype=torch.float64)
tensor([-2.4944, -3.7117, -4.1931, -4.7061, -5.5868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6519, device='cuda:0', dtype=torch.float64)
tensor([-2.4990, -3.7060, -4.1990, -4.7202, -5.5821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5578, device='cuda:0', dtype=torch.float64)
tensor([-2.5016, -3.7037, -4.2025, -4.7405, -5.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4438, device='cuda:0', dtype=torch.float64)
tensor([-2.5033, -3.6970, -4.2072, -4.7647, -5.5804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3457, device='cuda:0', dtype=torch.float64)
tensor([-2.5103, -3.6912, -4.2044, -4.7857, -5.5740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5748, device='cuda:0', dtype=torch.float64)
tensor([-2.5199, -3.6864, -4.2039, -4.8161, -5.5662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4429, device='cuda:0', dtype=torch.float64)
tensor([-2.5309, -3.6901, -4.1995, -4.8385, -5.5530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5224, device='cuda:0', dtype=torch.float64)
tensor([-2.5448, -3.6905, -4.1907, -4.8493, -5.5366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5859, device='cuda:0', dtype=torch.float64)
tensor([-2.5623, -3.6969, -4.1811, -4.8455, -5.5172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4940, device='cuda:0', dtype=torch.float64)
tensor([-2.5767, -3.6987, -4.1771, -4.8352, -5.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4745, device='cuda:0', dtype=torch.float64)
tensor([-2.5921, -3.7001, -4.1745, -4.8211, -5.4794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4324, device='cuda:0', dtype=torch.float64)
tensor([-2.6015, -3.7074, -4.1716, -4.8016, -5.4720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5178, device='cuda:0', dtype=torch.float64)
tensor([-2.6050, -3.7164, -4.1675, -4.7818, -5.4693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0707, device='cuda:0', dtype=torch.float64)
tensor([-2.6077, -3.7288, -4.1572, -4.7552, -5.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3852, device='cuda:0', dtype=torch.float64)
tensor([-2.6100, -3.7516, -4.1533, -4.7269, -5.5017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4131, device='cuda:0', dtype=torch.float64)
tensor([-2.6094, -3.7853, -4.1548, -4.6992, -5.5203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5249, device='cuda:0', dtype=torch.float64)
tensor([-2.6026, -3.8185, -4.1641, -4.6827, -5.5336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6308, device='cuda:0', dtype=torch.float64)
tensor([-2.5859, -3.8353, -4.1770, -4.6847, -5.5472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8425, device='cuda:0', dtype=torch.float64)
tensor([-2.5723, -3.8404, -4.1979, -4.6876, -5.5555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7076, device='cuda:0', dtype=torch.float64)
tensor([-2.5649, -3.8486, -4.2146, -4.6929, -5.5545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4583, device='cuda:0', dtype=torch.float64)
tensor([-2.5629, -3.8525, -4.2165, -4.7000, -5.5494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0973, device='cuda:0', dtype=torch.float64)
tensor([-2.5676, -3.8574, -4.2239, -4.7035, -5.5455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8686, device='cuda:0', dtype=torch.float64)
tensor([-2.5780, -3.8669, -4.2283, -4.7119, -5.5385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6962, device='cuda:0', dtype=torch.float64)
tensor([-2.5925, -3.8684, -4.2296, -4.7261, -5.5440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7596, device='cuda:0', dtype=torch.float64)
tensor([-2.6053, -3.8705, -4.2338, -4.7431, -5.5539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6434, device='cuda:0', dtype=torch.float64)
tensor([-2.6229, -3.8751, -4.2348, -4.7610, -5.5645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7701, device='cuda:0', dtype=torch.float64)
tensor([-2.6385, -3.8795, -4.2350, -4.7946, -5.5738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1287, device='cuda:0', dtype=torch.float64)
tensor([-2.6569, -3.8872, -4.2366, -4.8331, -5.5918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8188, device='cuda:0', dtype=torch.float64)
tensor([-2.6752, -3.8901, -4.2444, -4.8713, -5.6120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1265, device='cuda:0', dtype=torch.float64)
tensor([-2.6852, -3.8883, -4.2648, -4.9094, -5.6238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7507, device='cuda:0', dtype=torch.float64)
tensor([-2.7036, -3.8983, -4.2836, -4.9368, -5.6360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1797, device='cuda:0', dtype=torch.float64)
tensor([-2.7252, -3.9069, -4.3057, -4.9702, -5.6471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7874, device='cuda:0', dtype=torch.float64)
tensor([-2.7545, -3.9236, -4.3211, -4.9947, -5.6605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7457, device='cuda:0', dtype=torch.float64)
tensor([-2.7845, -3.9475, -4.3462, -4.9948, -5.6685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6847, device='cuda:0', dtype=torch.float64)
tensor([-2.8155, -3.9747, -4.3653, -4.9935, -5.6673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6725, device='cuda:0', dtype=torch.float64)
tensor([-2.8476, -3.9984, -4.3728, -4.9883, -5.6641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6615, device='cuda:0', dtype=torch.float64)
tensor([-2.8816, -4.0257, -4.3715, -4.9709, -5.6652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9756, device='cuda:0', dtype=torch.float64)
tensor([-2.9199, -4.0581, -4.3682, -4.9764, -5.6548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9122, device='cuda:0', dtype=torch.float64)
tensor([-2.9584, -4.0888, -4.3655, -4.9769, -5.6435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7690, device='cuda:0', dtype=torch.float64)
tensor([-2.9948, -4.1196, -4.3598, -4.9752, -5.6318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4070, device='cuda:0', dtype=torch.float64)
tensor([-3.0322, -4.1442, -4.3603, -4.9707, -5.6158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7216, device='cuda:0', dtype=torch.float64)
tensor([-3.0613, -4.1586, -4.3580, -4.9750, -5.6079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8546, device='cuda:0', dtype=torch.float64)
tensor([-3.0931, -4.1801, -4.3655, -4.9819, -5.6042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6252, device='cuda:0', dtype=torch.float64)
tensor([-3.1281, -4.2055, -4.3828, -4.9984, -5.5996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5294, device='cuda:0', dtype=torch.float64)
tensor([-3.1705, -4.2367, -4.3842, -5.0362, -5.5918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5652, device='cuda:0', dtype=torch.float64)
tensor([-3.2161, -4.2680, -4.3939, -5.0703, -5.5859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6107, device='cuda:0', dtype=torch.float64)
tensor([-3.2516, -4.2963, -4.4069, -5.1037, -5.5729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7907, device='cuda:0', dtype=torch.float64)
tensor([-3.2800, -4.3149, -4.4383, -5.1284, -5.5573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5911, device='cuda:0', dtype=torch.float64)
tensor([-3.3090, -4.3437, -4.4803, -5.1574, -5.5358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8053, device='cuda:0', dtype=torch.float64)
tensor([-3.3398, -4.3777, -4.5033, -5.1844, -5.5199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3728, device='cuda:0', dtype=torch.float64)
tensor([-3.3775, -4.4189, -4.5349, -5.2135, -5.5086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4779, device='cuda:0', dtype=torch.float64)
tensor([-3.4186, -4.4592, -4.5672, -5.2315, -5.5042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7549, device='cuda:0', dtype=torch.float64)
tensor([-3.4624, -4.4987, -4.6151, -5.2738, -5.5098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6317, device='cuda:0', dtype=torch.float64)
tensor([-3.5157, -4.5459, -4.6661, -5.3250, -5.5117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8842, device='cuda:0', dtype=torch.float64)
tensor([-3.5664, -4.6021, -4.7351, -5.4050, -5.5180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4763, device='cuda:0', dtype=torch.float64)
tensor([-3.6123, -4.6582, -4.8088, -5.4940, -5.5210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9521, device='cuda:0', dtype=torch.float64)
tensor([-3.6681, -4.7278, -4.8933, -5.5932, -5.5157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6535, device='cuda:0', dtype=torch.float64)
tensor([-3.7342, -4.8087, -4.9888, -5.6963, -5.5129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6798, device='cuda:0', dtype=torch.float64)
tensor([-3.8123, -4.9099, -5.0749, -5.8001, -5.5111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8441, device='cuda:0', dtype=torch.float64)
tensor([-3.8957, -5.0171, -5.1786, -5.9256, -5.5172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6882, device='cuda:0', dtype=torch.float64)
tensor([-3.9883, -5.1484, -5.2982, -6.0440, -5.5289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6375, device='cuda:0', dtype=torch.float64)
tensor([-4.0854, -5.2905, -5.4050, -6.1437, -5.5495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5115, device='cuda:0', dtype=torch.float64)
tensor([-4.1870, -5.4440, -5.5153, -6.2497, -5.5763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6262, device='cuda:0', dtype=torch.float64)
tensor([-4.3061, -5.6447, -5.6330, -6.3663, -5.6122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6345, device='cuda:0', dtype=torch.float64)
tensor([-4.4260, -5.8595, -5.7426, -6.4881, -5.6463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5966, device='cuda:0', dtype=torch.float64)
tensor([-4.5690, -6.1742, -5.8648, -6.6238, -5.6887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3708, device='cuda:0', dtype=torch.float64)
tensor([-4.7065, -6.5419, -5.9939, -6.7670, -5.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1713, device='cuda:0', dtype=torch.float64)
tensor([-4.8639, -7.0486, -6.1445, -6.9418, -5.8050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4548, device='cuda:0', dtype=torch.float64)
tensor([-5.0278, -7.5960, -6.3146, -7.1215, -5.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5344, device='cuda:0', dtype=torch.float64)
tensor([-5.1888, -8.1151, -6.4897, -7.3054, -5.9654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1083, device='cuda:0', dtype=torch.float64)
tensor([-5.3607, -8.6690, -6.6635, -7.4901, -6.0507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7170, device='cuda:0', dtype=torch.float64)
tensor([-5.5506, -9.2558, -6.8154, -7.6885, -6.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6667, device='cuda:0', dtype=torch.float64)
tensor([-5.7618, -9.7024, -6.9522, -7.8838, -6.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6766, device='cuda:0', dtype=torch.float64)
tensor([ -5.9747, -10.0526,  -7.0667,  -8.0789,  -6.3408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4600, device='cuda:0', dtype=torch.float64)
tensor([ -6.1700, -10.3320,  -7.1753,  -8.2982,  -6.4452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5867, device='cuda:0', dtype=torch.float64)
tensor([ -6.3525, -10.5044,  -7.2678,  -8.5093,  -6.5545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5771, device='cuda:0', dtype=torch.float64)
tensor([ -6.5049, -10.6689,  -7.3590,  -8.6826,  -6.6502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5422, device='cuda:0', dtype=torch.float64)
tensor([ -6.6448, -10.8385,  -7.4570,  -8.8982,  -6.7445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6562, device='cuda:0', dtype=torch.float64)
tensor([ -6.7570, -10.8849,  -7.5411,  -9.1192,  -6.8281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9976, device='cuda:0', dtype=torch.float64)
tensor([ -6.8362, -10.7028,  -7.6065,  -9.3328,  -6.8735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5831, device='cuda:0', dtype=torch.float64)
tensor([ -6.9294, -10.6081,  -7.6591,  -9.5352,  -6.9427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6981, device='cuda:0', dtype=torch.float64)
tensor([ -7.0675, -10.6989,  -7.7575,  -9.7386,  -7.0105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6157, device='cuda:0', dtype=torch.float64)
tensor([ -7.1773, -10.8276,  -7.8687,  -9.9850,  -7.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5698, device='cuda:0', dtype=torch.float64)
tensor([ -7.2601, -11.0025,  -8.0087, -10.2661,  -7.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3623, device='cuda:0', dtype=torch.float64)
tensor([ -7.3233, -11.2100,  -8.1692, -10.5829,  -7.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3216, device='cuda:0', dtype=torch.float64)
tensor([ -7.3962, -11.3936,  -8.3051, -10.8809,  -7.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7618, device='cuda:0', dtype=torch.float64)
tensor([ -7.4502, -11.7296,  -8.4119, -11.2061,  -7.4256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4434, device='cuda:0', dtype=torch.float64)
tensor([ -7.4818, -11.9362,  -8.4869, -11.4748,  -7.5313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5281, device='cuda:0', dtype=torch.float64)
tensor([ -7.4834, -12.0820,  -8.5610, -11.7391,  -7.6502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5975, device='cuda:0', dtype=torch.float64)
tensor([ -7.4648, -12.1880,  -8.6353, -11.8928,  -7.7761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8400, device='cuda:0', dtype=torch.float64)
tensor([ -7.4426, -12.3722,  -8.7240, -12.0457,  -7.8920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4623, device='cuda:0', dtype=torch.float64)
tensor([ -7.3871, -12.4754,  -8.8099, -12.1914,  -7.9825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6185, device='cuda:0', dtype=torch.float64)
tensor([ -7.3466, -12.4924,  -8.9054, -12.4057,  -8.1028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5318, device='cuda:0', dtype=torch.float64)
tensor([ -7.2835, -12.3871,  -8.9561, -12.5294,  -8.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5943, device='cuda:0', dtype=torch.float64)
tensor([ -7.2616, -12.4936,  -9.0547, -12.6864,  -8.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4233, device='cuda:0', dtype=torch.float64)
tensor([ -7.2857, -12.6178,  -9.1771, -12.9055,  -8.4928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4274, device='cuda:0', dtype=torch.float64)
tensor([ -7.2993, -12.7029,  -9.3167, -13.0868,  -8.6257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3474, device='cuda:0', dtype=torch.float64)
tensor([ -7.3710, -12.9759,  -9.4472, -13.3073,  -8.8231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1578, device='cuda:0', dtype=torch.float64)
tensor([ -7.4171, -13.1006,  -9.5951, -13.4943,  -8.9945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3459, device='cuda:0', dtype=torch.float64)
tensor([ -7.4417, -13.2308,  -9.7453, -13.6736,  -9.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5151, device='cuda:0', dtype=torch.float64)
tensor([ -7.4252, -13.2301,  -9.8390, -13.8370,  -9.2634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5656, device='cuda:0', dtype=torch.float64)
tensor([ -7.4366, -13.2565,  -9.9671, -14.0655,  -9.4202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4908, device='cuda:0', dtype=torch.float64)
tensor([ -7.4366, -13.2201, -10.0994, -14.2333,  -9.5482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2168, device='cuda:0', dtype=torch.float64)
tensor([ -7.4408, -13.2888, -10.2060, -14.3357,  -9.6230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4729, device='cuda:0', dtype=torch.float64)
tensor([ -7.4428, -13.2601, -10.2674, -14.3941,  -9.6984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7190, device='cuda:0', dtype=torch.float64)
tensor([ -7.4814, -13.4288, -10.3595, -14.4622,  -9.7453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2883, device='cuda:0', dtype=torch.float64)
tensor([ -7.5045, -13.6720, -10.4502, -14.5171,  -9.7699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5278, device='cuda:0', dtype=torch.float64)
tensor([ -7.5579, -13.9124, -10.5594, -14.6993,  -9.8465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3526, device='cuda:0', dtype=torch.float64)
tensor([ -7.6049, -14.1741, -10.6917, -14.8971,  -9.9145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6286, device='cuda:0', dtype=torch.float64)
tensor([ -7.6660, -14.2842, -10.7893, -15.0652,  -9.9208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4072, device='cuda:0', dtype=torch.float64)
tensor([ -7.7555, -14.5965, -10.8839, -15.2993,  -9.9901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3711, device='cuda:0', dtype=torch.float64)
tensor([ -7.8363, -14.9282, -10.9885, -15.4933, -10.0049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4176, device='cuda:0', dtype=torch.float64)
tensor([ -7.9473, -15.3806, -11.1432, -15.7291, -10.0475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6664, device='cuda:0', dtype=torch.float64)
tensor([ -8.0973, -15.8492, -11.3746, -16.0088, -10.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3546, device='cuda:0', dtype=torch.float64)
tensor([ -8.2250, -16.2220, -11.6319, -16.3006, -10.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3333, device='cuda:0', dtype=torch.float64)
tensor([ -8.3792, -16.4598, -11.9945, -16.5028, -10.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4852, device='cuda:0', dtype=torch.float64)
tensor([ -8.5549, -16.6086, -12.4039, -16.7667, -10.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5274, device='cuda:0', dtype=torch.float64)
tensor([ -8.7098, -16.7630, -12.8043, -16.9435, -10.4910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1765, device='cuda:0', dtype=torch.float64)
tensor([ -8.8923, -16.9941, -13.2212, -17.2038, -10.6091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2031, device='cuda:0', dtype=torch.float64)
tensor([ -9.0595, -17.2661, -13.5375, -17.4139, -10.7165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5381, device='cuda:0', dtype=torch.float64)
tensor([ -9.1891, -17.5766, -13.9099, -17.6233, -10.8052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4783, device='cuda:0', dtype=torch.float64)
tensor([ -9.3368, -17.8213, -14.1899, -17.8946, -10.9293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5610, device='cuda:0', dtype=torch.float64)
tensor([ -9.4665, -18.2165, -14.4837, -18.2667, -11.0788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([ -9.5791, -18.4896, -14.6874, -18.6729, -11.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3000, device='cuda:0', dtype=torch.float64)
tensor([ -9.7053, -18.8560, -14.9146, -19.1253, -11.4309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4797, device='cuda:0', dtype=torch.float64)
tensor([ -9.8266, -19.4749, -15.2533, -19.5090, -11.6422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1805, device='cuda:0', dtype=torch.float64)
tensor([-10.0007, -20.2898, -15.6441, -19.8710, -11.8125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3986, device='cuda:0', dtype=torch.float64)
tensor([-10.1245, -20.9654, -15.9660, -20.2082, -11.9589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6115, device='cuda:0', dtype=torch.float64)
tensor([-10.1858, -21.4777, -16.2015, -20.4128, -12.0343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4914, device='cuda:0', dtype=torch.float64)
tensor([-10.2922, -21.8376, -16.3437, -20.6243, -12.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5735, device='cuda:0', dtype=torch.float64)
tensor([-10.2855, -22.0241, -16.3858, -20.7651, -12.2900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5704, device='cuda:0', dtype=torch.float64)
tensor([-10.3343, -22.2333, -16.4373, -20.8903, -12.4364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1694, device='cuda:0', dtype=torch.float64)
tensor([-10.3886, -22.5074, -16.4403, -21.0175, -12.5788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2124, device='cuda:0', dtype=torch.float64)
tensor([-10.4112, -22.7555, -16.5085, -21.0929, -12.7388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0242, device='cuda:0', dtype=torch.float64)
tensor([-10.4305, -22.9475, -16.6514, -21.1278, -12.8680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2821, device='cuda:0', dtype=torch.float64)
tensor([-10.4471, -22.9803, -16.7402, -21.1090, -13.0026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2000, device='cuda:0', dtype=torch.float64)
tensor([-10.4641, -22.9911, -16.8479, -21.1352, -13.1846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([-10.4691, -23.0094, -16.9912, -21.1755, -13.3901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4098, device='cuda:0', dtype=torch.float64)
tensor([-10.4234, -22.9174, -17.0331, -21.0963, -13.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5053, device='cuda:0', dtype=torch.float64)
tensor([-10.4635, -23.0203, -17.0370, -21.1746, -13.6820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1375, device='cuda:0', dtype=torch.float64)
tensor([-10.4879, -23.1033, -17.0207, -21.2108, -13.7825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5751, device='cuda:0', dtype=torch.float64)
tensor([-10.6278, -23.5609, -17.3196, -21.3743, -13.9954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3977, device='cuda:0', dtype=torch.float64)
tensor([-10.7410, -23.8672, -17.4609, -21.4243, -14.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2651, device='cuda:0', dtype=torch.float64)
tensor([-10.8984, -24.3030, -17.7865, -21.5177, -14.3675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([-11.0585, -24.7607, -18.0004, -21.6430, -14.5449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-11.2185, -25.4531, -18.2051, -21.9110, -14.8234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1632, device='cuda:0', dtype=torch.float64)
tensor([-11.3675, -26.1249, -18.4359, -22.2489, -15.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3487, device='cuda:0', dtype=torch.float64)
tensor([-11.5063, -26.5358, -18.5997, -22.4767, -15.3777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6032, device='cuda:0', dtype=torch.float64)
tensor([-11.5171, -26.6545, -18.5925, -22.6567, -15.5293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-11.5477, -26.7517, -18.6127, -22.8516, -15.6693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3763, device='cuda:0', dtype=torch.float64)
tensor([-11.5327, -26.9020, -18.5864, -23.0162, -15.8247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4788, device='cuda:0', dtype=torch.float64)
tensor([-11.5181, -27.1575, -18.5761, -23.1734, -16.0014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3225, device='cuda:0', dtype=torch.float64)
tensor([-11.4932, -27.4123, -18.5843, -23.4274, -16.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1149, device='cuda:0', dtype=torch.float64)
tensor([-11.4761, -27.5739, -18.4574, -23.5744, -16.2227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5920, device='cuda:0', dtype=torch.float64)
tensor([-11.5156, -27.9139, -18.3904, -23.7449, -16.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3945, device='cuda:0', dtype=torch.float64)
tensor([-11.4706, -27.9449, -18.2690, -23.8418, -16.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2846, device='cuda:0', dtype=torch.float64)
tensor([-11.4450, -27.9627, -18.1034, -24.0443, -16.3565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0704, device='cuda:0', dtype=torch.float64)
tensor([-11.4404, -27.9142, -17.9900, -24.1852, -16.3152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3491, device='cuda:0', dtype=torch.float64)
tensor([-11.3760, -27.6010, -17.8400, -24.2257, -16.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2603, device='cuda:0', dtype=torch.float64)
tensor([-11.3475, -27.3930, -17.7593, -24.2722, -16.0276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4142, device='cuda:0', dtype=torch.float64)
tensor([-11.3216, -27.2097, -17.7069, -24.2295, -15.8799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6285, device='cuda:0', dtype=torch.float64)
tensor([-11.3517, -27.2295, -17.7709, -24.2377, -15.7925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0715, device='cuda:0', dtype=torch.float64)
tensor([-11.3354, -27.1250, -17.8613, -24.2012, -15.6963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2837, device='cuda:0', dtype=torch.float64)
tensor([-11.3838, -27.0257, -18.0358, -24.0199, -15.5720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3980, device='cuda:0', dtype=torch.float64)
tensor([-11.4713, -27.0013, -18.3026, -23.8946, -15.5590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0991, device='cuda:0', dtype=torch.float64)
tensor([-11.5962, -27.0862, -18.5513, -23.7956, -15.6162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3264, device='cuda:0', dtype=torch.float64)
tensor([-11.7230, -27.1896, -18.7927, -23.6490, -15.6544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2596, device='cuda:0', dtype=torch.float64)
tensor([-11.8912, -27.1447, -19.0817, -23.5327, -15.7564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5809, device='cuda:0', dtype=torch.float64)
tensor([-12.0738, -27.1471, -19.2392, -23.4550, -15.9403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1587, device='cuda:0', dtype=torch.float64)
tensor([-12.1616, -27.0312, -19.3025, -23.3773, -16.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2632, device='cuda:0', dtype=torch.float64)
tensor([-12.2192, -26.7933, -19.3343, -23.2724, -16.3407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0676, device='cuda:0', dtype=torch.float64)
tensor([-12.2295, -26.5713, -19.2957, -23.1819, -16.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2015, device='cuda:0', dtype=torch.float64)
tensor([-12.2167, -26.5372, -19.2923, -23.1733, -16.6241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2665, device='cuda:0', dtype=torch.float64)
tensor([-12.2212, -26.5181, -19.2887, -23.3242, -16.8630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2984, device='cuda:0', dtype=torch.float64)
tensor([-12.2832, -26.5415, -19.3489, -23.5943, -17.0798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3203, device='cuda:0', dtype=torch.float64)
tensor([-12.3148, -26.4163, -19.3569, -23.7837, -17.2397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2788, device='cuda:0', dtype=torch.float64)
tensor([-12.3836, -26.3845, -19.4544, -24.1206, -17.4704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2796, device='cuda:0', dtype=torch.float64)
tensor([-12.3894, -26.1157, -19.4772, -24.3275, -17.5753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-12.4284, -25.9821, -19.4654, -24.5063, -17.6618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1145, device='cuda:0', dtype=torch.float64)
tensor([-12.4704, -25.9983, -19.5037, -24.7590, -17.8010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1861, device='cuda:0', dtype=torch.float64)
tensor([-12.5134, -26.0641, -19.6044, -25.1297, -17.9127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1009, device='cuda:0', dtype=torch.float64)
tensor([-12.5710, -26.1156, -19.7961, -25.4985, -18.0020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1862, device='cuda:0', dtype=torch.float64)
tensor([-12.6478, -26.2724, -19.9632, -25.9374, -18.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3681, device='cuda:0', dtype=torch.float64)
tensor([-12.8195, -26.7233, -20.3708, -26.5050, -18.2971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0602, device='cuda:0', dtype=torch.float64)
tensor([-13.0506, -27.0268, -20.7283, -26.8974, -18.4713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2255, device='cuda:0', dtype=torch.float64)
tensor([-13.3273, -27.4345, -21.2111, -27.2420, -18.6422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9931, device='cuda:0', dtype=torch.float64)
tensor([-13.6229, -27.8286, -21.6284, -27.5398, -18.7668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0998, device='cuda:0', dtype=torch.float64)
tensor([-13.8463, -28.0619, -21.8804, -27.7980, -18.8727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0609, device='cuda:0', dtype=torch.float64)
tensor([-13.9957, -28.1987, -21.9578, -28.0814, -18.9850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0853, device='cuda:0', dtype=torch.float64)
tensor([-14.1700, -28.4479, -22.1010, -28.5272, -19.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0294, device='cuda:0', dtype=torch.float64)
tensor([-14.2153, -28.5337, -22.0842, -28.8688, -19.3304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2662, device='cuda:0', dtype=torch.float64)
tensor([-14.2553, -28.4263, -21.9267, -28.9829, -19.4493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2721, device='cuda:0', dtype=torch.float64)
tensor([-14.1639, -28.1554, -21.5370, -29.0585, -19.4892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3767, device='cuda:0', dtype=torch.float64)
tensor([-14.1411, -27.9372, -21.2748, -29.1280, -19.5072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2210, device='cuda:0', dtype=torch.float64)
tensor([-14.1163, -27.6694, -20.9879, -29.1559, -19.5351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1510, device='cuda:0', dtype=torch.float64)
tensor([-14.0491, -27.4871, -20.6209, -29.1135, -19.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0685, device='cuda:0', dtype=torch.float64)
tensor([-13.8911, -27.2064, -20.1692, -28.8937, -19.3320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1651, device='cuda:0', dtype=torch.float64)
tensor([-13.8707, -27.0632, -19.8874, -28.8445, -19.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0524, device='cuda:0', dtype=torch.float64)
tensor([-13.9029, -26.9581, -19.6782, -28.7666, -19.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1014, device='cuda:0', dtype=torch.float64)
tensor([-13.8832, -26.9541, -19.4380, -28.7992, -19.0874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1034, device='cuda:0', dtype=torch.float64)
tensor([-13.8614, -26.8140, -19.2662, -28.8124, -18.9854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9054, device='cuda:0', dtype=torch.float64)
tensor([-13.8458, -26.5547, -19.0883, -28.8332, -18.9543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1051, device='cuda:0', dtype=torch.float64)
tensor([-13.8950, -26.3354, -18.9574, -28.8861, -18.9474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1564, device='cuda:0', dtype=torch.float64)
tensor([-13.9707, -26.3415, -18.9245, -29.0577, -19.0008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0233, device='cuda:0', dtype=torch.float64)
tensor([-14.0617, -26.3884, -18.8875, -29.2223, -19.0689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3965, device='cuda:0', dtype=torch.float64)
tensor([-14.0966, -26.5380, -18.8198, -29.2714, -19.0854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2075, device='cuda:0', dtype=torch.float64)
tensor([-14.2101, -26.8362, -18.8022, -29.3492, -19.0123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1633, device='cuda:0', dtype=torch.float64)
tensor([-14.3183, -27.0368, -18.8706, -29.4423, -19.0086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1164, device='cuda:0', dtype=torch.float64)
tensor([-14.3865, -27.1912, -19.0286, -29.6456, -19.0523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2201, device='cuda:0', dtype=torch.float64)
tensor([-14.3571, -27.1622, -19.0931, -29.5921, -19.0198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1421, device='cuda:0', dtype=torch.float64)
tensor([-14.3267, -27.0792, -19.1090, -29.6134, -18.9589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3347, device='cuda:0', dtype=torch.float64)
tensor([-14.3332, -27.0656, -19.1500, -29.7451, -18.9971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-14.2992, -27.0198, -19.1877, -29.8116, -19.0480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2242, device='cuda:0', dtype=torch.float64)
tensor([-14.3344, -26.9612, -19.2161, -29.9487, -19.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9081, device='cuda:0', dtype=torch.float64)
tensor([-14.4035, -27.0264, -19.2644, -30.0445, -19.0724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3374, device='cuda:0', dtype=torch.float64)
tensor([-14.4273, -27.2006, -19.2092, -30.0454, -19.0519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1630, device='cuda:0', dtype=torch.float64)
tensor([-14.4436, -27.2455, -19.1509, -30.1248, -19.0530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0268, device='cuda:0', dtype=torch.float64)
tensor([-14.5044, -27.5486, -19.0879, -30.2567, -19.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2275, device='cuda:0', dtype=torch.float64)
tensor([-14.4837, -27.7502, -19.0058, -30.3484, -19.0817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0811, device='cuda:0', dtype=torch.float64)
tensor([-14.5137, -28.1202, -18.9245, -30.5544, -19.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1917, device='cuda:0', dtype=torch.float64)
tensor([-14.4689, -28.3258, -18.7849, -30.6636, -19.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9407, device='cuda:0', dtype=torch.float64)
tensor([-14.4538, -28.4748, -18.6968, -30.7701, -19.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-14.4679, -28.5436, -18.6506, -30.8830, -19.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9726, device='cuda:0', dtype=torch.float64)
tensor([-14.5163, -28.6125, -18.6342, -31.1333, -19.3184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1146, device='cuda:0', dtype=torch.float64)
tensor([-14.6087, -28.5084, -18.6277, -31.2773, -19.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8534, device='cuda:0', dtype=torch.float64)
tensor([-14.6463, -28.5486, -18.6243, -31.3643, -19.3846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0105, device='cuda:0', dtype=torch.float64)
tensor([-14.6925, -28.8081, -18.6807, -31.4767, -19.4370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([-14.7184, -28.7863, -18.6482, -31.4155, -19.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-14.7957, -28.6951, -18.6473, -31.4152, -19.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-14.8630, -28.5728, -18.5795, -31.3575, -19.3407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8630, device='cuda:0', dtype=torch.float64)
tensor([-14.9421, -28.4760, -18.5547, -31.2822, -19.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9483, device='cuda:0', dtype=torch.float64)
tensor([-15.0564, -28.0764, -18.5224, -31.2597, -19.4452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9357, device='cuda:0', dtype=torch.float64)
tensor([-15.1956, -27.7960, -18.5711, -31.3374, -19.5264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0260, device='cuda:0', dtype=torch.float64)
tensor([-15.2716, -27.6031, -18.5849, -31.4886, -19.5985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0383, device='cuda:0', dtype=torch.float64)
tensor([-15.3337, -27.4559, -18.6203, -31.6701, -19.6530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0892, device='cuda:0', dtype=torch.float64)
tensor([-15.4603, -27.2436, -18.7451, -31.9042, -19.7616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9811, device='cuda:0', dtype=torch.float64)
tensor([-15.5604, -27.1507, -18.8608, -32.1668, -19.9479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0253, device='cuda:0', dtype=torch.float64)
tensor([-15.7100, -27.1511, -18.9602, -32.4402, -20.1042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-15.7971, -27.1087, -19.0559, -32.6538, -20.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0644, device='cuda:0', dtype=torch.float64)
tensor([-15.9239, -27.2720, -19.1926, -32.9671, -20.3675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0418, device='cuda:0', dtype=torch.float64)
tensor([-16.0312, -27.4931, -19.2976, -33.2072, -20.5358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9253, device='cuda:0', dtype=torch.float64)
tensor([-16.0717, -27.6327, -19.3425, -33.3859, -20.6878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7797, device='cuda:0', dtype=torch.float64)
tensor([-16.0807, -27.6836, -19.3201, -33.4808, -20.8129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9493, device='cuda:0', dtype=torch.float64)
tensor([-16.1415, -27.7650, -19.4206, -33.5764, -20.9460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-16.2080, -27.8710, -19.4935, -33.7782, -21.1097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1202, device='cuda:0', dtype=torch.float64)
tensor([-16.2379, -27.8923, -19.5278, -33.9853, -21.3352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0271, device='cuda:0', dtype=torch.float64)
tensor([-16.3738, -28.0981, -19.6706, -34.3267, -21.6172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7519, device='cuda:0', dtype=torch.float64)
tensor([-16.5175, -28.3306, -19.8393, -34.6774, -21.8989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([-16.6838, -28.8513, -20.0859, -35.1382, -22.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1054, device='cuda:0', dtype=torch.float64)
tensor([-16.8116, -28.8913, -20.2354, -35.4384, -22.6647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0560, device='cuda:0', dtype=torch.float64)
tensor([-16.9565, -28.9048, -20.3933, -35.6958, -23.0505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-17.0782, -28.8491, -20.5016, -35.8155, -23.4208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9080, device='cuda:0', dtype=torch.float64)
tensor([-17.2495, -29.0901, -20.6064, -35.9598, -23.8420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([-17.3730, -29.2898, -20.6312, -35.9869, -24.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1651, device='cuda:0', dtype=torch.float64)
tensor([-17.5102, -29.0170, -20.5565, -35.7961, -24.4858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8837, device='cuda:0', dtype=torch.float64)
tensor([-17.6397, -28.7385, -20.4849, -35.5261, -24.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8950, device='cuda:0', dtype=torch.float64)
tensor([-17.7408, -28.3418, -20.4089, -35.2813, -24.7620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9182, device='cuda:0', dtype=torch.float64)
tensor([-17.8925, -28.2599, -20.3570, -35.0645, -24.8989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1097, device='cuda:0', dtype=torch.float64)
tensor([-18.0457, -28.0883, -20.2494, -34.8567, -25.0726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-18.2050, -28.1021, -20.2295, -34.7702, -25.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9331, device='cuda:0', dtype=torch.float64)
tensor([-18.3208, -27.7804, -20.1310, -34.6107, -25.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1067, device='cuda:0', dtype=torch.float64)
tensor([-18.4292, -27.4546, -20.0530, -34.3942, -25.4128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1927, device='cuda:0', dtype=torch.float64)
tensor([-18.6122, -27.2085, -20.0549, -34.2754, -25.4459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0086, device='cuda:0', dtype=torch.float64)
tensor([-18.8636, -27.3754, -20.1443, -34.3030, -25.4593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8874, device='cuda:0', dtype=torch.float64)
tensor([-19.0294, -27.5321, -20.2275, -34.2983, -25.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9394, device='cuda:0', dtype=torch.float64)
tensor([-19.1033, -27.3551, -20.2259, -34.2760, -25.3495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1124, device='cuda:0', dtype=torch.float64)
tensor([-19.2442, -27.3700, -20.2928, -34.3885, -25.2862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7421, device='cuda:0', dtype=torch.float64)
tensor([-19.4019, -27.2273, -20.3594, -34.4289, -25.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9721, device='cuda:0', dtype=torch.float64)
tensor([-19.6151, -27.2494, -20.4168, -34.4752, -25.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8553, device='cuda:0', dtype=torch.float64)
tensor([-19.7813, -27.0803, -20.4247, -34.4683, -24.9051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7392, device='cuda:0', dtype=torch.float64)
tensor([-19.9490, -27.1189, -20.4203, -34.4679, -24.8375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8366, device='cuda:0', dtype=torch.float64)
tensor([-20.0918, -27.2247, -20.3663, -34.4201, -24.7302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8366, device='cuda:0', dtype=torch.float64)
tensor([-20.2182, -27.0043, -20.3088, -34.4524, -24.6881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8510, device='cuda:0', dtype=torch.float64)
tensor([-20.3151, -26.8572, -20.2792, -34.5217, -24.7003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8787, device='cuda:0', dtype=torch.float64)
tensor([-20.3123, -26.4954, -20.2694, -34.5657, -24.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8635, device='cuda:0', dtype=torch.float64)
tensor([-20.2459, -26.0552, -20.2907, -34.7126, -24.6583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7633, device='cuda:0', dtype=torch.float64)
tensor([-20.3201, -25.8022, -20.3925, -34.9417, -24.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8932, device='cuda:0', dtype=torch.float64)
tensor([-20.4451, -25.4230, -20.5273, -35.1931, -24.5929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7487, device='cuda:0', dtype=torch.float64)
tensor([-20.4962, -25.1630, -20.5977, -35.3898, -24.5921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9614, device='cuda:0', dtype=torch.float64)
tensor([-20.4192, -24.9980, -20.6158, -35.5844, -24.6391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9130, device='cuda:0', dtype=torch.float64)
tensor([-20.3459, -24.9697, -20.6248, -35.8666, -24.8151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7212, device='cuda:0', dtype=torch.float64)
tensor([-20.2738, -24.7897, -20.6041, -36.1228, -25.0225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8250, device='cuda:0', dtype=torch.float64)
tensor([-20.2843, -24.5245, -20.6562, -36.3484, -25.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8856, device='cuda:0', dtype=torch.float64)
tensor([-20.4200, -24.4101, -20.7665, -36.5684, -25.4453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8904, device='cuda:0', dtype=torch.float64)
tensor([-20.6984, -24.1521, -20.9317, -36.8226, -25.6356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1040, device='cuda:0', dtype=torch.float64)
tensor([-20.8719, -23.9107, -21.0939, -37.0697, -25.9259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8434, device='cuda:0', dtype=torch.float64)
tensor([-21.0002, -23.6453, -21.1681, -37.2204, -26.1459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8085, device='cuda:0', dtype=torch.float64)
tensor([-21.1813, -23.5626, -21.2828, -37.3834, -26.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7880, device='cuda:0', dtype=torch.float64)
tensor([-21.3615, -23.5511, -21.3659, -37.5115, -26.4867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8340, device='cuda:0', dtype=torch.float64)
tensor([-21.4972, -23.5461, -21.4319, -37.5724, -26.5565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7505, device='cuda:0', dtype=torch.float64)
tensor([-21.5816, -23.4255, -21.4902, -37.6306, -26.5818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([-21.7814, -23.2136, -21.6285, -37.6439, -26.5972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8525, device='cuda:0', dtype=torch.float64)
tensor([-22.0126, -22.9940, -21.8205, -37.7594, -26.5710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7652, device='cuda:0', dtype=torch.float64)
tensor([-22.1068, -22.7753, -21.9426, -37.8924, -26.5711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7361, device='cuda:0', dtype=torch.float64)
tensor([-22.2238, -22.7700, -22.0570, -38.1562, -26.6905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8172, device='cuda:0', dtype=torch.float64)
tensor([-22.3890, -22.6125, -22.1965, -38.3751, -26.8157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8545, device='cuda:0', dtype=torch.float64)
tensor([-22.5223, -22.6110, -22.2478, -38.4713, -26.8248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7688, device='cuda:0', dtype=torch.float64)
tensor([-22.4630, -22.3929, -22.2088, -38.4473, -26.7850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8097, device='cuda:0', dtype=torch.float64)
tensor([-22.2929, -22.2059, -22.1420, -38.4969, -26.7532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8787, device='cuda:0', dtype=torch.float64)
tensor([-22.1975, -22.1963, -22.1169, -38.6278, -26.7699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7816, device='cuda:0', dtype=torch.float64)
tensor([-22.0627, -22.1162, -22.1205, -38.8213, -26.8161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0757, device='cuda:0', dtype=torch.float64)
tensor([-21.9392, -21.8958, -22.1459, -38.8355, -26.8234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8747, device='cuda:0', dtype=torch.float64)
tensor([-21.7352, -21.5496, -22.0998, -38.7465, -26.7055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7799, device='cuda:0', dtype=torch.float64)
tensor([-21.6033, -21.2365, -22.0565, -38.5868, -26.5226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-21.3671, -20.9861, -21.9314, -38.4245, -26.4262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6033, device='cuda:0', dtype=torch.float64)
tensor([-21.1768, -20.7198, -21.8397, -38.2509, -26.3625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8459, device='cuda:0', dtype=torch.float64)
tensor([-20.9824, -20.4663, -21.7376, -38.0499, -26.2674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7297, device='cuda:0', dtype=torch.float64)
tensor([-20.7202, -20.1715, -21.5825, -37.7940, -26.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8157, device='cuda:0', dtype=torch.float64)
tensor([-20.4754, -19.8710, -21.4392, -37.6139, -26.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6951, device='cuda:0', dtype=torch.float64)
tensor([-20.2699, -19.6491, -21.3384, -37.5166, -26.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6470, device='cuda:0', dtype=torch.float64)
tensor([-20.1352, -19.4354, -21.2704, -37.4359, -26.0823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-19.9678, -19.2705, -21.1438, -37.3962, -26.0347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7773, device='cuda:0', dtype=torch.float64)
tensor([-19.7727, -19.1385, -21.0237, -37.4015, -26.0059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7342, device='cuda:0', dtype=torch.float64)
tensor([-19.5924, -19.0785, -20.9746, -37.5007, -25.9561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7728, device='cuda:0', dtype=torch.float64)
tensor([-19.4351, -19.0152, -20.9466, -37.5884, -25.9482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([-19.3066, -18.8980, -20.9064, -37.5410, -25.9033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5739, device='cuda:0', dtype=torch.float64)
tensor([-19.1177, -18.7709, -20.8628, -37.4843, -25.8736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6663, device='cuda:0', dtype=torch.float64)
tensor([-18.9163, -18.7722, -20.8562, -37.4863, -25.8607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6995, device='cuda:0', dtype=torch.float64)
tensor([-18.7448, -18.6832, -20.8280, -37.4097, -25.8086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7804, device='cuda:0', dtype=torch.float64)
tensor([-18.6029, -18.6006, -20.7552, -37.3009, -25.6869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6667, device='cuda:0', dtype=torch.float64)
tensor([-18.4651, -18.6047, -20.7185, -37.2387, -25.5422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-18.4035, -18.6896, -20.8099, -37.5397, -25.4968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7596, device='cuda:0', dtype=torch.float64)
tensor([-18.4292, -18.7365, -20.9338, -37.8656, -25.4491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6795, device='cuda:0', dtype=torch.float64)
tensor([-18.6120, -18.8632, -21.1370, -38.2791, -25.3938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8763, device='cuda:0', dtype=torch.float64)
tensor([-18.7314, -19.0939, -21.3094, -38.7118, -25.4257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6399, device='cuda:0', dtype=torch.float64)
tensor([-18.8684, -19.2076, -21.4443, -39.1480, -25.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6740, device='cuda:0', dtype=torch.float64)
tensor([-18.9752, -19.3097, -21.5429, -39.4397, -25.2870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7943, device='cuda:0', dtype=torch.float64)
tensor([-19.0837, -19.4951, -21.6729, -39.8043, -25.2819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8257, device='cuda:0', dtype=torch.float64)
tensor([-19.1194, -19.5740, -21.7250, -40.0532, -25.2750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7174, device='cuda:0', dtype=torch.float64)
tensor([-19.2488, -19.7122, -21.8629, -40.3720, -25.3532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7245, device='cuda:0', dtype=torch.float64)
tensor([-19.3104, -19.9605, -21.9507, -40.6753, -25.4580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6883, device='cuda:0', dtype=torch.float64)
tensor([-19.3517, -20.1101, -21.9801, -40.8264, -25.5258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6265, device='cuda:0', dtype=torch.float64)
tensor([-19.3507, -20.1831, -21.9207, -40.8022, -25.4851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7185, device='cuda:0', dtype=torch.float64)
tensor([-19.2739, -20.2579, -21.8735, -40.7574, -25.4678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6419, device='cuda:0', dtype=torch.float64)
tensor([-19.1772, -20.2988, -21.8441, -40.5970, -25.4320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6008, device='cuda:0', dtype=torch.float64)
tensor([-19.1025, -20.3617, -21.8221, -40.4401, -25.4166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7076, device='cuda:0', dtype=torch.float64)
tensor([-18.9767, -20.4507, -21.7876, -40.3885, -25.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7002, device='cuda:0', dtype=torch.float64)
tensor([-18.8437, -20.5704, -21.7647, -40.2822, -25.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6544, device='cuda:0', dtype=torch.float64)
tensor([-18.6549, -20.7951, -21.6948, -40.2530, -25.5671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8221, device='cuda:0', dtype=torch.float64)
tensor([-18.4568, -20.9693, -21.5519, -40.0533, -25.6119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7039, device='cuda:0', dtype=torch.float64)
tensor([-18.2484, -21.1603, -21.3699, -39.8634, -25.7352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6244, device='cuda:0', dtype=torch.float64)
tensor([-18.0568, -21.3792, -21.1860, -39.7380, -25.8587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6635, device='cuda:0', dtype=torch.float64)
tensor([-17.7740, -21.5649, -20.9422, -39.5342, -25.9036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7801, device='cuda:0', dtype=torch.float64)
tensor([-17.5859, -21.8239, -20.7884, -39.4323, -25.9526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([-17.4323, -22.0829, -20.6491, -39.3124, -26.0009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5154, device='cuda:0', dtype=torch.float64)
tensor([-17.3035, -22.3969, -20.5351, -39.2718, -26.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5888, device='cuda:0', dtype=torch.float64)
tensor([-17.2822, -22.7760, -20.5221, -39.3750, -26.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6421, device='cuda:0', dtype=torch.float64)
tensor([-17.3369, -23.1613, -20.5375, -39.5260, -26.5207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6845, device='cuda:0', dtype=torch.float64)
tensor([-17.3157, -23.5264, -20.5174, -39.6300, -26.7095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6771, device='cuda:0', dtype=torch.float64)
tensor([-17.3368, -23.8985, -20.5289, -39.7758, -26.9507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6702, device='cuda:0', dtype=torch.float64)
tensor([-17.4194, -24.1776, -20.5275, -39.9102, -27.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6638, device='cuda:0', dtype=torch.float64)
tensor([-17.5122, -24.2865, -20.4973, -39.8851, -27.1560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6736, device='cuda:0', dtype=torch.float64)
tensor([-17.5517, -24.4385, -20.5047, -39.9068, -27.2733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4943, device='cuda:0', dtype=torch.float64)
tensor([-17.5653, -24.6608, -20.5142, -40.0047, -27.4485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6323, device='cuda:0', dtype=torch.float64)
tensor([-17.6778, -24.7608, -20.5523, -40.1616, -27.6270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-17.7448, -24.8807, -20.5768, -40.2977, -27.7530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5655, device='cuda:0', dtype=torch.float64)
tensor([-17.7496, -24.9941, -20.5656, -40.4003, -27.8124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6423, device='cuda:0', dtype=torch.float64)
tensor([-17.8341, -25.2142, -20.5909, -40.6966, -27.9704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6159, device='cuda:0', dtype=torch.float64)
tensor([-17.9414, -25.4507, -20.6259, -40.9838, -28.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6215, device='cuda:0', dtype=torch.float64)
tensor([-18.1025, -25.7481, -20.7029, -41.2892, -28.3886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6148, device='cuda:0', dtype=torch.float64)
tensor([-18.2077, -25.9726, -20.7718, -41.5198, -28.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4931, device='cuda:0', dtype=torch.float64)
tensor([-18.2982, -26.2639, -20.8521, -41.7804, -28.7285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5632, device='cuda:0', dtype=torch.float64)
tensor([-18.3735, -26.4971, -20.9408, -41.9891, -28.9279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4578, device='cuda:0', dtype=torch.float64)
tensor([-18.3952, -26.6807, -20.9682, -42.1367, -29.0593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5232, device='cuda:0', dtype=torch.float64)
tensor([-18.4795, -26.9106, -21.0584, -42.3230, -29.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5645, device='cuda:0', dtype=torch.float64)
tensor([-18.4428, -27.0429, -21.0430, -42.3761, -29.3959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6012, device='cuda:0', dtype=torch.float64)
tensor([-18.3633, -27.1088, -20.9722, -42.3469, -29.5000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5342, device='cuda:0', dtype=torch.float64)
tensor([-18.2424, -27.1598, -20.9184, -42.3105, -29.6462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5612, device='cuda:0', dtype=torch.float64)
tensor([-18.1505, -27.2111, -20.8920, -42.2940, -29.7579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4805, device='cuda:0', dtype=torch.float64)
tensor([-18.0027, -27.2643, -20.8736, -42.2719, -29.8043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5130, device='cuda:0', dtype=torch.float64)
tensor([-17.7866, -27.3747, -20.8138, -42.1626, -29.8544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5299, device='cuda:0', dtype=torch.float64)
tensor([-17.5882, -27.4662, -20.7978, -42.1325, -29.9212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6203, device='cuda:0', dtype=torch.float64)
tensor([-17.3791, -27.5927, -20.7800, -42.2400, -30.0030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5348, device='cuda:0', dtype=torch.float64)
tensor([-17.2333, -27.7089, -20.7930, -42.3394, -30.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5881, device='cuda:0', dtype=torch.float64)
tensor([-17.1194, -27.8666, -20.8068, -42.4888, -30.2962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5394, device='cuda:0', dtype=torch.float64)
tensor([-16.9997, -28.0476, -20.8356, -42.6367, -30.4266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6464, device='cuda:0', dtype=torch.float64)
tensor([-16.9386, -28.3316, -20.9064, -42.7989, -30.6364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5373, device='cuda:0', dtype=torch.float64)
tensor([-16.9380, -28.5753, -21.0052, -42.9855, -30.8599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5731, device='cuda:0', dtype=torch.float64)
tensor([-16.9496, -28.8126, -21.1323, -43.2047, -31.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4928, device='cuda:0', dtype=torch.float64)
tensor([-16.9284, -28.9964, -21.2093, -43.3458, -31.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5708, device='cuda:0', dtype=torch.float64)
tensor([-16.8929, -29.1616, -21.3294, -43.5401, -31.4397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5375, device='cuda:0', dtype=torch.float64)
tensor([-16.8450, -29.3458, -21.4490, -43.7454, -31.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5364, device='cuda:0', dtype=torch.float64)
tensor([-16.7737, -29.5169, -21.5361, -43.8525, -31.7389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5029, device='cuda:0', dtype=torch.float64)
tensor([-16.6839, -29.6992, -21.5795, -43.9418, -31.8236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4664, device='cuda:0', dtype=torch.float64)
tensor([-16.6289, -29.8240, -21.5963, -44.0157, -31.8793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4967, device='cuda:0', dtype=torch.float64)
tensor([-16.5935, -29.9970, -21.6245, -44.1736, -31.9364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4517, device='cuda:0', dtype=torch.float64)
tensor([-16.5674, -30.2120, -21.6365, -44.3894, -32.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4164, device='cuda:0', dtype=torch.float64)
tensor([-16.5567, -30.4027, -21.6233, -44.5804, -32.1076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4775, device='cuda:0', dtype=torch.float64)
tensor([-16.5330, -30.6344, -21.5879, -44.7454, -32.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5095, device='cuda:0', dtype=torch.float64)
tensor([-16.5296, -30.7767, -21.5457, -44.8871, -32.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4730, device='cuda:0', dtype=torch.float64)
tensor([-16.5382, -30.9759, -21.4661, -44.9389, -32.0884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4179, device='cuda:0', dtype=torch.float64)
tensor([-16.5221, -31.2006, -21.3845, -45.0000, -32.0557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4723, device='cuda:0', dtype=torch.float64)
tensor([-16.4851, -31.3683, -21.2509, -45.0452, -32.0085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3918, device='cuda:0', dtype=torch.float64)
tensor([-16.4486, -31.4396, -21.1500, -45.0523, -31.9402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5454, device='cuda:0', dtype=torch.float64)
tensor([-16.3749, -31.3343, -21.0066, -44.9688, -31.7487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4348, device='cuda:0', dtype=torch.float64)
tensor([-16.3471, -31.3425, -20.8815, -44.9410, -31.6095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4464, device='cuda:0', dtype=torch.float64)
tensor([-16.3195, -31.3575, -20.7551, -44.9709, -31.5018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4619, device='cuda:0', dtype=torch.float64)
tensor([-16.3441, -31.4396, -20.6593, -45.0750, -31.4196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4489, device='cuda:0', dtype=torch.float64)
tensor([-16.3805, -31.4414, -20.5709, -45.1457, -31.3005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4637, device='cuda:0', dtype=torch.float64)
tensor([-16.4014, -31.2529, -20.4435, -45.1249, -31.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4564, device='cuda:0', dtype=torch.float64)
tensor([-16.4145, -30.9901, -20.3030, -45.0425, -30.9910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4080, device='cuda:0', dtype=torch.float64)
tensor([-16.3653, -30.6402, -20.1301, -44.8407, -30.8543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4843, device='cuda:0', dtype=torch.float64)
tensor([-16.3701, -30.2574, -20.0064, -44.6574, -30.6948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4119, device='cuda:0', dtype=torch.float64)
tensor([-16.3376, -29.8877, -19.8677, -44.4364, -30.5465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3422, device='cuda:0', dtype=torch.float64)
tensor([-16.3212, -29.6255, -19.7708, -44.2473, -30.4385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4142, device='cuda:0', dtype=torch.float64)
tensor([-16.2525, -29.2785, -19.6648, -43.9281, -30.2864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4594, device='cuda:0', dtype=torch.float64)
tensor([-16.1490, -29.0221, -19.5369, -43.6149, -30.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3976, device='cuda:0', dtype=torch.float64)
tensor([-16.0310, -28.7887, -19.4026, -43.3124, -29.9925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4409, device='cuda:0', dtype=torch.float64)
tensor([-15.9307, -28.5520, -19.2684, -43.0126, -29.8696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4545, device='cuda:0', dtype=torch.float64)
tensor([-15.7808, -28.2974, -19.0922, -42.6436, -29.7085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4043, device='cuda:0', dtype=torch.float64)
tensor([-15.6198, -28.1763, -18.9296, -42.3058, -29.6023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3540, device='cuda:0', dtype=torch.float64)
tensor([-15.4644, -28.0556, -18.7821, -42.0014, -29.4820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3875, device='cuda:0', dtype=torch.float64)
tensor([-15.3516, -27.9280, -18.6646, -41.7018, -29.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3834, device='cuda:0', dtype=torch.float64)
tensor([-15.2743, -27.7688, -18.5658, -41.4551, -29.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4449, device='cuda:0', dtype=torch.float64)
tensor([-15.2105, -27.6612, -18.4739, -41.2393, -29.0951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3483, device='cuda:0', dtype=torch.float64)
tensor([-15.1533, -27.5645, -18.3996, -41.0637, -28.9789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4704, device='cuda:0', dtype=torch.float64)
tensor([-15.1424, -27.4470, -18.3392, -40.9385, -28.8718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3441, device='cuda:0', dtype=torch.float64)
tensor([-15.1051, -27.3135, -18.2667, -40.7119, -28.7405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3391, device='cuda:0', dtype=torch.float64)
tensor([-15.0844, -27.1534, -18.2161, -40.5119, -28.6087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3730, device='cuda:0', dtype=torch.float64)
tensor([-15.0762, -26.8826, -18.1508, -40.2782, -28.4367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3901, device='cuda:0', dtype=torch.float64)
tensor([-15.0726, -26.7292, -18.1090, -40.1294, -28.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4158, device='cuda:0', dtype=torch.float64)
tensor([-15.0757, -26.7020, -18.0718, -40.0184, -28.3066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2871, device='cuda:0', dtype=torch.float64)
tensor([-15.0871, -26.6799, -18.0372, -39.8687, -28.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4203, device='cuda:0', dtype=torch.float64)
tensor([-15.0866, -26.6146, -17.9774, -39.6840, -28.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4210, device='cuda:0', dtype=torch.float64)
tensor([-15.0600, -26.5468, -17.9191, -39.4637, -27.9100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4725, device='cuda:0', dtype=torch.float64)
tensor([-15.0710, -26.4868, -17.8853, -39.2836, -27.7745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3546, device='cuda:0', dtype=torch.float64)
tensor([-15.0465, -26.3933, -17.8422, -39.0799, -27.6124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3606, device='cuda:0', dtype=torch.float64)
tensor([-15.0315, -26.3731, -17.8322, -38.9322, -27.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4124, device='cuda:0', dtype=torch.float64)
tensor([-15.0290, -26.3254, -17.8236, -38.7665, -27.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3237, device='cuda:0', dtype=torch.float64)
tensor([-15.0438, -26.2782, -17.8154, -38.5692, -27.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4323, device='cuda:0', dtype=torch.float64)
tensor([-15.0666, -26.1737, -17.8196, -38.4144, -27.0272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3197, device='cuda:0', dtype=torch.float64)
tensor([-15.0921, -26.1499, -17.8240, -38.2937, -26.8925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3696, device='cuda:0', dtype=torch.float64)
tensor([-15.1108, -26.1442, -17.8181, -38.1907, -26.7905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3458, device='cuda:0', dtype=torch.float64)
tensor([-15.1511, -26.1586, -17.8122, -38.1387, -26.6950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3481, device='cuda:0', dtype=torch.float64)
tensor([-15.1641, -26.1866, -17.8115, -38.1069, -26.5975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3304, device='cuda:0', dtype=torch.float64)
tensor([-15.2130, -26.2089, -17.8244, -38.1457, -26.5268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3524, device='cuda:0', dtype=torch.float64)
tensor([-15.2854, -26.2183, -17.8484, -38.2217, -26.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3611, device='cuda:0', dtype=torch.float64)
tensor([-15.3537, -26.2795, -17.8786, -38.2702, -26.4477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2387, device='cuda:0', dtype=torch.float64)
tensor([-15.4042, -26.3037, -17.8903, -38.2986, -26.3991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3101, device='cuda:0', dtype=torch.float64)
tensor([-15.4401, -26.3473, -17.8802, -38.3067, -26.3279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2950, device='cuda:0', dtype=torch.float64)
tensor([-15.4810, -26.3604, -17.8748, -38.2724, -26.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3158, device='cuda:0', dtype=torch.float64)
tensor([-15.5357, -26.2984, -17.8860, -38.1942, -26.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2202, device='cuda:0', dtype=torch.float64)
tensor([-15.5924, -26.2104, -17.9062, -38.1319, -26.1018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2694, device='cuda:0', dtype=torch.float64)
tensor([-15.6591, -26.1791, -17.9181, -38.0939, -26.0680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3453, device='cuda:0', dtype=torch.float64)
tensor([-15.6942, -26.0698, -17.8957, -37.9792, -25.9575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3665, device='cuda:0', dtype=torch.float64)
tensor([-15.7294, -25.9557, -17.8661, -37.9133, -25.8699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3455, device='cuda:0', dtype=torch.float64)
tensor([-15.7771, -25.8442, -17.8498, -37.8829, -25.8132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2878, device='cuda:0', dtype=torch.float64)
tensor([-15.8339, -25.7427, -17.8396, -37.8685, -25.7367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3011, device='cuda:0', dtype=torch.float64)
tensor([-15.8878, -25.7174, -17.8323, -37.8836, -25.7109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3254, device='cuda:0', dtype=torch.float64)
tensor([-15.9111, -25.6110, -17.7877, -37.8472, -25.6288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2656, device='cuda:0', dtype=torch.float64)
tensor([-15.9387, -25.5817, -17.7626, -37.8417, -25.5552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2849, device='cuda:0', dtype=torch.float64)
tensor([-15.9309, -25.5174, -17.7063, -37.7948, -25.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2432, device='cuda:0', dtype=torch.float64)
tensor([-15.9240, -25.4475, -17.6536, -37.7370, -25.4490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2753, device='cuda:0', dtype=torch.float64)
tensor([-15.9365, -25.5132, -17.6224, -37.7251, -25.4574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2529, device='cuda:0', dtype=torch.float64)
tensor([-15.9603, -25.5383, -17.5990, -37.6859, -25.4449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2654, device='cuda:0', dtype=torch.float64)
tensor([-15.9619, -25.5118, -17.5881, -37.6712, -25.4416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3423, device='cuda:0', dtype=torch.float64)
tensor([-15.9279, -25.5037, -17.5587, -37.5968, -25.4243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2529, device='cuda:0', dtype=torch.float64)
tensor([-15.8880, -25.5103, -17.5265, -37.5254, -25.3938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2807, device='cuda:0', dtype=torch.float64)
tensor([-15.8148, -25.4751, -17.4637, -37.3893, -25.3380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3313, device='cuda:0', dtype=torch.float64)
tensor([-15.7721, -25.5964, -17.4269, -37.3079, -25.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2864, device='cuda:0', dtype=torch.float64)
tensor([-15.7458, -25.7267, -17.3943, -37.2223, -25.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2889, device='cuda:0', dtype=torch.float64)
tensor([-15.7190, -25.8565, -17.3735, -37.1562, -25.4060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2372, device='cuda:0', dtype=torch.float64)
tensor([-15.6864, -25.9437, -17.3453, -37.0515, -25.4604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2567, device='cuda:0', dtype=torch.float64)
tensor([-15.6764, -26.0072, -17.3199, -36.9587, -25.4936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2563, device='cuda:0', dtype=torch.float64)
tensor([-15.6728, -26.0296, -17.2627, -36.8393, -25.4962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1940, device='cuda:0', dtype=torch.float64)
tensor([-15.6693, -26.0560, -17.2183, -36.7612, -25.4917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2681, device='cuda:0', dtype=torch.float64)
tensor([-15.6889, -26.0988, -17.1967, -36.7556, -25.5041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2203, device='cuda:0', dtype=torch.float64)
tensor([-15.6913, -26.1323, -17.1627, -36.7302, -25.5019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2222, device='cuda:0', dtype=torch.float64)
tensor([-15.6889, -26.1577, -17.1285, -36.6658, -25.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3061, device='cuda:0', dtype=torch.float64)
tensor([-15.6668, -26.1184, -17.0878, -36.6086, -25.4967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2715, device='cuda:0', dtype=torch.float64)
tensor([-15.6425, -26.0308, -17.0366, -36.5595, -25.4758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2336, device='cuda:0', dtype=torch.float64)
tensor([-15.6338, -25.9525, -16.9890, -36.5337, -25.4531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2509, device='cuda:0', dtype=torch.float64)
tensor([-15.6225, -25.9184, -16.9402, -36.4804, -25.4247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2168, device='cuda:0', dtype=torch.float64)
tensor([-15.6153, -25.8740, -16.8915, -36.3969, -25.3941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2217, device='cuda:0', dtype=torch.float64)
tensor([-15.6030, -25.8312, -16.8491, -36.2942, -25.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2279, device='cuda:0', dtype=torch.float64)
tensor([-15.5995, -25.8536, -16.8207, -36.1710, -25.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2215, device='cuda:0', dtype=torch.float64)
tensor([-15.6111, -25.9075, -16.8183, -36.0838, -25.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2172, device='cuda:0', dtype=torch.float64)
tensor([-15.6205, -25.9700, -16.8190, -36.0118, -25.3886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1904, device='cuda:0', dtype=torch.float64)
tensor([-15.6399, -26.0352, -16.8175, -35.9601, -25.4120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1776, device='cuda:0', dtype=torch.float64)
tensor([-15.6508, -26.1081, -16.8072, -35.8869, -25.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1855, device='cuda:0', dtype=torch.float64)
tensor([-15.6322, -26.1839, -16.7912, -35.8018, -25.4314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2665, device='cuda:0', dtype=torch.float64)
tensor([-15.6114, -26.2419, -16.7797, -35.7212, -25.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2194, device='cuda:0', dtype=torch.float64)
tensor([-15.6118, -26.3022, -16.7752, -35.6468, -25.4119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2066, device='cuda:0', dtype=torch.float64)
tensor([-15.6150, -26.3684, -16.7747, -35.5632, -25.4049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1886, device='cuda:0', dtype=torch.float64)
tensor([-15.6116, -26.4469, -16.7754, -35.4638, -25.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2165, device='cuda:0', dtype=torch.float64)
tensor([-15.6203, -26.5664, -16.7950, -35.4171, -25.4317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1943, device='cuda:0', dtype=torch.float64)
tensor([-15.6211, -26.6349, -16.8024, -35.3549, -25.4336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2596, device='cuda:0', dtype=torch.float64)
tensor([-15.6017, -26.6081, -16.7755, -35.2152, -25.3914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1858, device='cuda:0', dtype=torch.float64)
tensor([-15.5777, -26.6425, -16.7414, -35.1016, -25.3717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1948, device='cuda:0', dtype=torch.float64)
tensor([-15.5523, -26.7122, -16.7027, -34.9901, -25.3661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2069, device='cuda:0', dtype=torch.float64)
tensor([-15.5285, -26.7631, -16.6701, -34.8918, -25.3532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1730, device='cuda:0', dtype=torch.float64)
tensor([-15.5270, -26.8495, -16.6382, -34.8063, -25.3609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2005, device='cuda:0', dtype=torch.float64)
tensor([-15.5299, -26.9384, -16.5975, -34.7199, -25.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2223, device='cuda:0', dtype=torch.float64)
tensor([-15.5545, -27.0544, -16.5854, -34.6842, -25.4312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2207, device='cuda:0', dtype=torch.float64)
tensor([-15.5707, -27.1322, -16.5510, -34.5844, -25.4384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1927, device='cuda:0', dtype=torch.float64)
tensor([-15.5658, -27.2142, -16.5053, -34.4842, -25.4519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1967, device='cuda:0', dtype=torch.float64)
tensor([-15.5614, -27.2617, -16.4682, -34.3788, -25.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1669, device='cuda:0', dtype=torch.float64)
tensor([-15.5418, -27.2961, -16.4232, -34.2351, -25.4364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1623, device='cuda:0', dtype=torch.float64)
tensor([-15.5386, -27.3391, -16.3788, -34.1108, -25.4156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1904, device='cuda:0', dtype=torch.float64)
tensor([-15.5245, -27.4156, -16.3319, -33.9962, -25.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1540, device='cuda:0', dtype=torch.float64)
tensor([-15.5033, -27.4464, -16.2851, -33.8771, -25.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1706, device='cuda:0', dtype=torch.float64)
tensor([-15.4872, -27.4744, -16.2421, -33.7381, -25.3411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1616, device='cuda:0', dtype=torch.float64)
tensor([-15.4633, -27.4831, -16.1865, -33.6007, -25.3040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1977, device='cuda:0', dtype=torch.float64)
tensor([-15.4407, -27.4932, -16.1230, -33.4441, -25.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1461, device='cuda:0', dtype=torch.float64)
tensor([-15.4142, -27.4968, -16.0703, -33.3162, -25.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1747, device='cuda:0', dtype=torch.float64)
tensor([-15.3850, -27.4844, -16.0160, -33.2243, -25.2084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1570, device='cuda:0', dtype=torch.float64)
tensor([-15.3542, -27.4869, -15.9573, -33.1294, -25.1542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-15.3183, -27.5093, -15.9044, -33.0510, -25.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1786, device='cuda:0', dtype=torch.float64)
tensor([-15.2850, -27.5345, -15.8465, -32.9942, -25.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1846, device='cuda:0', dtype=torch.float64)
tensor([-15.2559, -27.5821, -15.7844, -32.9434, -25.0084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1443, device='cuda:0', dtype=torch.float64)
tensor([-15.2282, -27.6670, -15.7285, -32.8972, -24.9866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1718, device='cuda:0', dtype=torch.float64)
tensor([-15.1923, -27.7221, -15.6851, -32.8116, -24.9378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2101, device='cuda:0', dtype=torch.float64)
tensor([-15.1515, -27.7507, -15.6392, -32.7229, -24.8828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1803, device='cuda:0', dtype=torch.float64)
tensor([-15.1158, -27.7962, -15.5842, -32.6287, -24.8348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1744, device='cuda:0', dtype=torch.float64)
tensor([-15.0904, -27.8397, -15.5409, -32.5371, -24.7914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1628, device='cuda:0', dtype=torch.float64)
tensor([-15.0585, -27.9008, -15.5088, -32.4574, -24.7475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1620, device='cuda:0', dtype=torch.float64)
tensor([-15.0356, -27.9217, -15.4758, -32.3792, -24.6904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1677, device='cuda:0', dtype=torch.float64)
tensor([-15.0170, -27.9500, -15.4516, -32.3022, -24.6342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1610, device='cuda:0', dtype=torch.float64)
tensor([-15.0009, -27.9810, -15.4199, -32.2154, -24.5933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1979, device='cuda:0', dtype=torch.float64)
tensor([-14.9872, -27.9642, -15.3875, -32.1613, -24.5608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1616, device='cuda:0', dtype=torch.float64)
tensor([-14.9902, -27.9735, -15.3531, -32.1345, -24.5360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1843, device='cuda:0', dtype=torch.float64)
tensor([-14.9886, -27.9741, -15.3275, -32.1242, -24.5239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1534, device='cuda:0', dtype=torch.float64)
tensor([-14.9874, -27.9590, -15.2981, -32.1121, -24.5096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1512, device='cuda:0', dtype=torch.float64)
tensor([-14.9776, -27.9441, -15.2617, -32.0928, -24.4814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1469, device='cuda:0', dtype=torch.float64)
tensor([-14.9537, -27.9461, -15.2190, -32.0597, -24.4600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1882, device='cuda:0', dtype=torch.float64)
tensor([-14.9299, -27.9853, -15.1827, -32.0362, -24.4592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1681, device='cuda:0', dtype=torch.float64)
tensor([-14.9160, -28.0173, -15.1450, -32.0029, -24.4671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1766, device='cuda:0', dtype=torch.float64)
tensor([-14.9026, -28.0413, -15.0951, -31.9567, -24.4737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1604, device='cuda:0', dtype=torch.float64)
tensor([-14.8839, -28.0627, -15.0486, -31.9289, -24.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1829, device='cuda:0', dtype=torch.float64)
tensor([-14.8749, -28.0952, -15.0142, -31.9183, -24.5053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1939, device='cuda:0', dtype=torch.float64)
tensor([-14.8640, -28.1293, -14.9808, -31.9053, -24.5217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1893, device='cuda:0', dtype=torch.float64)
tensor([-14.8476, -28.1131, -14.9479, -31.8518, -24.5194], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_043009.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(210.4302, device='cuda:0', dtype=torch.float64)
tensor([-3.1079, -7.4463, -5.2167, -8.0442, -8.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.0798, device='cuda:0', dtype=torch.float64)
tensor([-2.6079, -5.9091, -4.8346, -5.6567, -6.6415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.2182, device='cuda:0', dtype=torch.float64)
tensor([-2.9343, -4.0558, -5.9168, -6.4420, -8.9274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(62.5373, device='cuda:0', dtype=torch.float64)
tensor([ -7.3430,  -3.7999,  -7.2168,  -7.6377, -11.8291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(87.4158, device='cuda:0', dtype=torch.float64)
tensor([ -7.0441,  -4.4465,  -7.5386,  -8.1717, -12.8930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(87.5305, device='cuda:0', dtype=torch.float64)
tensor([ -3.5014,  -5.2291,  -6.5832,  -7.0833, -11.5185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.3490, device='cuda:0', dtype=torch.float64)
tensor([-2.5648, -5.4639, -5.4209, -5.8460, -9.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.9399, device='cuda:0', dtype=torch.float64)
tensor([-2.6024, -5.0843, -4.8057, -5.2733, -7.5998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.7247, device='cuda:0', dtype=torch.float64)
tensor([-2.7522, -4.7769, -4.6398, -5.2640, -6.9382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.1882, device='cuda:0', dtype=torch.float64)
tensor([-2.9131, -4.9569, -4.7078, -5.7282, -6.5202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.1968, device='cuda:0', dtype=torch.float64)
tensor([-2.9685, -5.5304, -4.8504, -6.6616, -6.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.8986, device='cuda:0', dtype=torch.float64)
tensor([-2.9492, -6.3101, -4.8924, -7.2051, -6.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.8820, device='cuda:0', dtype=torch.float64)
tensor([-2.9706, -5.9271, -4.7196, -6.8225, -6.5344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.8218, device='cuda:0', dtype=torch.float64)
tensor([-2.7095, -5.0232, -4.4512, -6.1363, -6.6135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.1700, device='cuda:0', dtype=torch.float64)
tensor([-2.5293, -4.5560, -4.2863, -5.6292, -6.6076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.6244, device='cuda:0', dtype=torch.float64)
tensor([-2.4015, -4.1628, -4.3211, -5.3959, -6.6314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.4280, device='cuda:0', dtype=torch.float64)
tensor([-2.2864, -3.8347, -4.5587, -5.4424, -6.6892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.7463, device='cuda:0', dtype=torch.float64)
tensor([-2.1924, -3.5987, -4.9274, -5.7659, -6.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6569, device='cuda:0', dtype=torch.float64)
tensor([-2.1422, -3.4345, -5.2999, -6.1824, -6.9179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.9913, device='cuda:0', dtype=torch.float64)
tensor([-2.1325, -3.3218, -5.5589, -6.3182, -7.0414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.3844, device='cuda:0', dtype=torch.float64)
tensor([-2.1171, -3.2588, -5.6622, -6.0882, -7.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7007, device='cuda:0', dtype=torch.float64)
tensor([-2.0888, -3.2538, -5.6168, -5.7133, -6.7591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7697, device='cuda:0', dtype=torch.float64)
tensor([-2.0809, -3.3139, -5.4549, -5.4155, -6.3950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.8087, device='cuda:0', dtype=torch.float64)
tensor([-2.1130, -3.4257, -5.2203, -5.2376, -6.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0987, device='cuda:0', dtype=torch.float64)
tensor([-2.1812, -3.5553, -4.9700, -5.1212, -6.0035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7211, device='cuda:0', dtype=torch.float64)
tensor([-2.2613, -3.6735, -4.7468, -5.0085, -5.9843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0478, device='cuda:0', dtype=torch.float64)
tensor([-2.3268, -3.7622, -4.5646, -4.8924, -6.0169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.6598, device='cuda:0', dtype=torch.float64)
tensor([-2.3695, -3.8140, -4.4236, -4.7821, -6.0569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.4669, device='cuda:0', dtype=torch.float64)
tensor([-2.3911, -3.8294, -4.3190, -4.6614, -6.0772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0096, device='cuda:0', dtype=torch.float64)
tensor([-2.3963, -3.8189, -4.2507, -4.5327, -6.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7941, device='cuda:0', dtype=torch.float64)
tensor([-2.3907, -3.7969, -4.2229, -4.4293, -6.0568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1266, device='cuda:0', dtype=torch.float64)
tensor([-2.3798, -3.7717, -4.2374, -4.3809, -6.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3834, device='cuda:0', dtype=torch.float64)
tensor([-2.3660, -3.7508, -4.2860, -4.3950, -6.0143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4995, device='cuda:0', dtype=torch.float64)
tensor([-2.3491, -3.7422, -4.3418, -4.4512, -5.9998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.8157, device='cuda:0', dtype=torch.float64)
tensor([-2.3269, -3.7508, -4.3677, -4.5236, -5.9915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2276, device='cuda:0', dtype=torch.float64)
tensor([-2.3002, -3.7672, -4.3478, -4.5988, -5.9871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7241, device='cuda:0', dtype=torch.float64)
tensor([-2.2726, -3.7722, -4.2961, -4.6819, -5.9782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6937, device='cuda:0', dtype=torch.float64)
tensor([-2.2490, -3.7576, -4.2490, -4.7811, -5.9593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6643, device='cuda:0', dtype=torch.float64)
tensor([-2.2336, -3.7371, -4.2254, -4.8943, -5.9331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8147, device='cuda:0', dtype=torch.float64)
tensor([-2.2278, -3.7217, -4.2302, -5.0092, -5.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4147, device='cuda:0', dtype=torch.float64)
tensor([-2.2282, -3.7143, -4.2581, -5.1139, -5.8926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4265, device='cuda:0', dtype=torch.float64)
tensor([-2.2305, -3.7101, -4.2986, -5.1919, -5.8860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5572, device='cuda:0', dtype=torch.float64)
tensor([-2.2306, -3.6978, -4.3420, -5.2302, -5.8829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7719, device='cuda:0', dtype=torch.float64)
tensor([-2.2273, -3.6731, -4.3792, -5.2255, -5.8804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8636, device='cuda:0', dtype=torch.float64)
tensor([-2.2231, -3.6412, -4.4016, -5.1815, -5.8804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5696, device='cuda:0', dtype=torch.float64)
tensor([-2.2190, -3.6136, -4.4033, -5.1101, -5.8847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2702, device='cuda:0', dtype=torch.float64)
tensor([-2.2153, -3.5948, -4.3781, -5.0201, -5.8913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8403, device='cuda:0', dtype=torch.float64)
tensor([-2.2102, -3.5846, -4.3336, -4.9276, -5.8965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4344, device='cuda:0', dtype=torch.float64)
tensor([-2.2042, -3.5801, -4.2783, -4.8442, -5.8958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2812, device='cuda:0', dtype=torch.float64)
tensor([-2.1980, -3.5798, -4.2213, -4.7735, -5.8868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3863, device='cuda:0', dtype=torch.float64)
tensor([-2.1943, -3.5827, -4.1711, -4.7143, -5.8722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5403, device='cuda:0', dtype=torch.float64)
tensor([-2.1949, -3.5892, -4.1316, -4.6651, -5.8522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4436, device='cuda:0', dtype=torch.float64)
tensor([-2.2004, -3.5978, -4.1003, -4.6273, -5.8285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2404, device='cuda:0', dtype=torch.float64)
tensor([-2.2120, -3.6080, -4.0740, -4.6032, -5.8018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0168, device='cuda:0', dtype=torch.float64)
tensor([-2.2274, -3.6181, -4.0538, -4.5969, -5.7749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8850, device='cuda:0', dtype=torch.float64)
tensor([-2.2437, -3.6238, -4.0419, -4.6058, -5.7503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8148, device='cuda:0', dtype=torch.float64)
tensor([-2.2551, -3.6216, -4.0438, -4.6253, -5.7288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9162, device='cuda:0', dtype=torch.float64)
tensor([-2.2606, -3.6141, -4.0583, -4.6525, -5.7104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8402, device='cuda:0', dtype=torch.float64)
tensor([-2.2615, -3.6017, -4.0848, -4.6817, -5.6932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7774, device='cuda:0', dtype=torch.float64)
tensor([-2.2593, -3.5864, -4.1192, -4.7099, -5.6792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5999, device='cuda:0', dtype=torch.float64)
tensor([-2.2560, -3.5717, -4.1541, -4.7332, -5.6712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4547, device='cuda:0', dtype=torch.float64)
tensor([-2.2510, -3.5582, -4.1879, -4.7487, -5.6663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4287, device='cuda:0', dtype=torch.float64)
tensor([-2.2467, -3.5469, -4.2136, -4.7558, -5.6640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([-2.2420, -3.5375, -4.2252, -4.7558, -5.6622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7049, device='cuda:0', dtype=torch.float64)
tensor([-2.2390, -3.5336, -4.2170, -4.7469, -5.6607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5406, device='cuda:0', dtype=torch.float64)
tensor([-2.2357, -3.5306, -4.1900, -4.7352, -5.6586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5276, device='cuda:0', dtype=torch.float64)
tensor([-2.2331, -3.5255, -4.1550, -4.7223, -5.6562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4311, device='cuda:0', dtype=torch.float64)
tensor([-2.2324, -3.5213, -4.1152, -4.7064, -5.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2928, device='cuda:0', dtype=torch.float64)
tensor([-2.2328, -3.5164, -4.0820, -4.6925, -5.6467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3076, device='cuda:0', dtype=torch.float64)
tensor([-2.2348, -3.5120, -4.0592, -4.6804, -5.6440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1611, device='cuda:0', dtype=torch.float64)
tensor([-2.2376, -3.5097, -4.0480, -4.6698, -5.6419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2939, device='cuda:0', dtype=torch.float64)
tensor([-2.2414, -3.5091, -4.0494, -4.6630, -5.6392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3534, device='cuda:0', dtype=torch.float64)
tensor([-2.2442, -3.5089, -4.0618, -4.6600, -5.6389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-2.2450, -3.5082, -4.0800, -4.6602, -5.6396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2473, device='cuda:0', dtype=torch.float64)
tensor([-2.2448, -3.5066, -4.1001, -4.6652, -5.6390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3643, device='cuda:0', dtype=torch.float64)
tensor([-2.2462, -3.5081, -4.1137, -4.6735, -5.6387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-2.2472, -3.5100, -4.1202, -4.6847, -5.6333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([-2.2469, -3.5117, -4.1182, -4.6977, -5.6232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1844, device='cuda:0', dtype=torch.float64)
tensor([-2.2466, -3.5148, -4.1157, -4.7044, -5.6149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1963, device='cuda:0', dtype=torch.float64)
tensor([-2.2465, -3.5168, -4.1090, -4.7077, -5.6076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2252, device='cuda:0', dtype=torch.float64)
tensor([-2.2492, -3.5181, -4.1011, -4.7031, -5.6033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1382, device='cuda:0', dtype=torch.float64)
tensor([-2.2517, -3.5161, -4.0922, -4.6983, -5.5997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0222, device='cuda:0', dtype=torch.float64)
tensor([-2.2541, -3.5117, -4.0816, -4.6918, -5.6005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0500, device='cuda:0', dtype=torch.float64)
tensor([-2.2560, -3.5082, -4.0747, -4.6871, -5.6020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1914, device='cuda:0', dtype=torch.float64)
tensor([-2.2574, -3.5059, -4.0691, -4.6789, -5.6046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0870, device='cuda:0', dtype=torch.float64)
tensor([-2.2599, -3.5028, -4.0637, -4.6704, -5.6069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2532, device='cuda:0', dtype=torch.float64)
tensor([-2.2621, -3.5000, -4.0575, -4.6598, -5.6095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-2.2624, -3.4972, -4.0546, -4.6496, -5.6076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([-2.2619, -3.4964, -4.0533, -4.6395, -5.5996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-2.2584, -3.4950, -4.0582, -4.6314, -5.5866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1303, device='cuda:0', dtype=torch.float64)
tensor([-2.2549, -3.4969, -4.0617, -4.6245, -5.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0669, device='cuda:0', dtype=torch.float64)
tensor([-2.2495, -3.4991, -4.0667, -4.6239, -5.5633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([-2.2435, -3.5007, -4.0688, -4.6273, -5.5525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0286, device='cuda:0', dtype=torch.float64)
tensor([-2.2371, -3.5022, -4.0713, -4.6366, -5.5439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1621, device='cuda:0', dtype=torch.float64)
tensor([-2.2354, -3.5012, -4.0681, -4.6493, -5.5414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-2.2357, -3.5013, -4.0600, -4.6573, -5.5400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([-2.2383, -3.5021, -4.0522, -4.6626, -5.5426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-2.2418, -3.5023, -4.0466, -4.6683, -5.5478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2405, device='cuda:0', dtype=torch.float64)
tensor([-2.2434, -3.5011, -4.0484, -4.6758, -5.5525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0166, device='cuda:0', dtype=torch.float64)
tensor([-2.2450, -3.4998, -4.0488, -4.6811, -5.5561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0392, device='cuda:0', dtype=torch.float64)
tensor([-2.2472, -3.4980, -4.0509, -4.6827, -5.5602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1809, device='cuda:0', dtype=torch.float64)
tensor([-2.2490, -3.4970, -4.0561, -4.6871, -5.5642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1170, device='cuda:0', dtype=torch.float64)
tensor([-2.2508, -3.4943, -4.0651, -4.6905, -5.5629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0998, device='cuda:0', dtype=torch.float64)
tensor([-2.2532, -3.4918, -4.0686, -4.6900, -5.5559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2289, device='cuda:0', dtype=torch.float64)
tensor([-2.2522, -3.4892, -4.0653, -4.6887, -5.5472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1241, device='cuda:0', dtype=torch.float64)
tensor([-2.2511, -3.4873, -4.0594, -4.6900, -5.5358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1860, device='cuda:0', dtype=torch.float64)
tensor([-2.2501, -3.4849, -4.0524, -4.6910, -5.5245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-2.2495, -3.4832, -4.0491, -4.6941, -5.5080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2629, device='cuda:0', dtype=torch.float64)
tensor([-2.2507, -3.4824, -4.0451, -4.6986, -5.4921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-2.2544, -3.4833, -4.0389, -4.6989, -5.4813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1865, device='cuda:0', dtype=torch.float64)
tensor([-2.2589, -3.4831, -4.0302, -4.6921, -5.4758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1416, device='cuda:0', dtype=torch.float64)
tensor([-2.2663, -3.4869, -4.0230, -4.6798, -5.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2043, device='cuda:0', dtype=torch.float64)
tensor([-2.2707, -3.4881, -4.0217, -4.6693, -5.4821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2159, device='cuda:0', dtype=torch.float64)
tensor([-2.2738, -3.4862, -4.0231, -4.6580, -5.4942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3047, device='cuda:0', dtype=torch.float64)
tensor([-2.2746, -3.4874, -4.0284, -4.6496, -5.5038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0746, device='cuda:0', dtype=torch.float64)
tensor([-2.2719, -3.4902, -4.0328, -4.6463, -5.5064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2890, device='cuda:0', dtype=torch.float64)
tensor([-2.2698, -3.4919, -4.0294, -4.6394, -5.5135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2245, device='cuda:0', dtype=torch.float64)
tensor([-2.2668, -3.4957, -4.0275, -4.6340, -5.5139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1377, device='cuda:0', dtype=torch.float64)
tensor([-2.2645, -3.4983, -4.0280, -4.6283, -5.5131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2225, device='cuda:0', dtype=torch.float64)
tensor([-2.2622, -3.5014, -4.0261, -4.6226, -5.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2328, device='cuda:0', dtype=torch.float64)
tensor([-2.2580, -3.4960, -4.0272, -4.6191, -5.5015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2188, device='cuda:0', dtype=torch.float64)
tensor([-2.2576, -3.4921, -4.0255, -4.6113, -5.4957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3696, device='cuda:0', dtype=torch.float64)
tensor([-2.2587, -3.4907, -4.0181, -4.6087, -5.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0794, device='cuda:0', dtype=torch.float64)
tensor([-2.2624, -3.4883, -4.0078, -4.6067, -5.4813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-2.2666, -3.4889, -4.0056, -4.6089, -5.4779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2859, device='cuda:0', dtype=torch.float64)
tensor([-2.2690, -3.4950, -4.0105, -4.6183, -5.4721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1830, device='cuda:0', dtype=torch.float64)
tensor([-2.2709, -3.4979, -4.0246, -4.6326, -5.4712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3598, device='cuda:0', dtype=torch.float64)
tensor([-2.2692, -3.4973, -4.0364, -4.6478, -5.4668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2850, device='cuda:0', dtype=torch.float64)
tensor([-2.2678, -3.4947, -4.0444, -4.6583, -5.4603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-2.2663, -3.4923, -4.0503, -4.6725, -5.4524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-2.2669, -3.4906, -4.0453, -4.6750, -5.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([-2.2703, -3.4876, -4.0374, -4.6693, -5.4502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1794, device='cuda:0', dtype=torch.float64)
tensor([-2.2742, -3.4857, -4.0264, -4.6581, -5.4479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2607, device='cuda:0', dtype=torch.float64)
tensor([-2.2786, -3.4847, -4.0148, -4.6449, -5.4467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4309, device='cuda:0', dtype=torch.float64)
tensor([-2.2844, -3.4834, -4.0032, -4.6339, -5.4456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3143, device='cuda:0', dtype=torch.float64)
tensor([-2.2931, -3.4860, -3.9928, -4.6161, -5.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4346, device='cuda:0', dtype=torch.float64)
tensor([-2.2991, -3.4858, -3.9952, -4.5972, -5.4445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2230, device='cuda:0', dtype=torch.float64)
tensor([-2.3050, -3.4887, -3.9993, -4.5853, -5.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3234, device='cuda:0', dtype=torch.float64)
tensor([-2.3091, -3.4928, -4.0031, -4.5806, -5.4301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2656, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.4996, -4.0013, -4.5863, -5.4199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3137, device='cuda:0', dtype=torch.float64)
tensor([-2.3119, -3.5053, -3.9901, -4.5901, -5.4106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3325, device='cuda:0', dtype=torch.float64)
tensor([-2.3114, -3.5054, -3.9797, -4.5881, -5.3993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3282, device='cuda:0', dtype=torch.float64)
tensor([-2.3112, -3.5078, -3.9768, -4.5884, -5.3913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2467, device='cuda:0', dtype=torch.float64)
tensor([-2.3103, -3.5137, -3.9783, -4.5894, -5.3842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3514, device='cuda:0', dtype=torch.float64)
tensor([-2.3094, -3.5147, -3.9861, -4.5964, -5.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6412, device='cuda:0', dtype=torch.float64)
tensor([-2.3053, -3.5203, -4.0031, -4.6115, -5.3854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3209, device='cuda:0', dtype=torch.float64)
tensor([-2.3049, -3.5213, -4.0274, -4.6282, -5.3837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4097, device='cuda:0', dtype=torch.float64)
tensor([-2.3029, -3.5206, -4.0464, -4.6441, -5.3854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4062, device='cuda:0', dtype=torch.float64)
tensor([-2.3050, -3.5162, -4.0694, -4.6460, -5.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4156, device='cuda:0', dtype=torch.float64)
tensor([-2.3053, -3.5119, -4.0820, -4.6430, -5.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6924, device='cuda:0', dtype=torch.float64)
tensor([-2.3067, -3.5016, -4.0759, -4.6419, -5.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5494, device='cuda:0', dtype=torch.float64)
tensor([-2.3073, -3.5018, -4.0616, -4.6370, -5.3677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2954, device='cuda:0', dtype=torch.float64)
tensor([-2.3074, -3.4977, -4.0411, -4.6284, -5.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4669, device='cuda:0', dtype=torch.float64)
tensor([-2.3089, -3.4974, -4.0179, -4.6111, -5.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4804, device='cuda:0', dtype=torch.float64)
tensor([-2.3100, -3.4935, -4.0065, -4.5899, -5.3746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4188, device='cuda:0', dtype=torch.float64)
tensor([-2.3118, -3.4944, -4.0025, -4.5705, -5.3884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3685, device='cuda:0', dtype=torch.float64)
tensor([-2.3143, -3.4980, -4.0037, -4.5578, -5.4034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6829, device='cuda:0', dtype=torch.float64)
tensor([-2.3130, -3.5023, -4.0138, -4.5483, -5.4110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5926, device='cuda:0', dtype=torch.float64)
tensor([-2.3100, -3.5097, -4.0209, -4.5497, -5.4060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2914, device='cuda:0', dtype=torch.float64)
tensor([-2.3098, -3.5159, -4.0268, -4.5578, -5.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4556, device='cuda:0', dtype=torch.float64)
tensor([-2.3107, -3.5224, -4.0279, -4.5728, -5.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5670, device='cuda:0', dtype=torch.float64)
tensor([-2.3081, -3.5165, -4.0253, -4.5770, -5.3549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9469, device='cuda:0', dtype=torch.float64)
tensor([-2.3081, -3.5083, -4.0169, -4.5773, -5.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6429, device='cuda:0', dtype=torch.float64)
tensor([-2.3097, -3.5033, -4.0156, -4.5776, -5.3431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3744, device='cuda:0', dtype=torch.float64)
tensor([-2.3155, -3.5052, -4.0149, -4.5846, -5.3432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6511, device='cuda:0', dtype=torch.float64)
tensor([-2.3253, -3.5113, -4.0056, -4.5879, -5.3525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6024, device='cuda:0', dtype=torch.float64)
tensor([-2.3326, -3.5113, -3.9994, -4.5976, -5.3560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5381, device='cuda:0', dtype=torch.float64)
tensor([-2.3339, -3.5029, -3.9964, -4.6105, -5.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5474, device='cuda:0', dtype=torch.float64)
tensor([-2.3355, -3.4945, -3.9955, -4.6261, -5.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4946, device='cuda:0', dtype=torch.float64)
tensor([-2.3332, -3.4850, -3.9989, -4.6398, -5.3676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4716, device='cuda:0', dtype=torch.float64)
tensor([-2.3294, -3.4769, -3.9975, -4.6454, -5.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7592, device='cuda:0', dtype=torch.float64)
tensor([-2.3283, -3.4674, -3.9986, -4.6399, -5.3600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6554, device='cuda:0', dtype=torch.float64)
tensor([-2.3314, -3.4717, -4.0082, -4.6227, -5.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0050, device='cuda:0', dtype=torch.float64)
tensor([-2.3361, -3.4925, -4.0155, -4.6005, -5.3369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7086, device='cuda:0', dtype=torch.float64)
tensor([-2.3397, -3.5198, -4.0197, -4.5946, -5.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6705, device='cuda:0', dtype=torch.float64)
tensor([-2.3472, -3.5461, -4.0234, -4.5801, -5.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2460, device='cuda:0', dtype=torch.float64)
tensor([-2.3539, -3.5681, -4.0270, -4.5672, -5.2996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7184, device='cuda:0', dtype=torch.float64)
tensor([-2.3584, -3.5832, -4.0392, -4.5687, -5.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9945, device='cuda:0', dtype=torch.float64)
tensor([-2.3631, -3.5860, -4.0456, -4.5504, -5.2999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6947, device='cuda:0', dtype=torch.float64)
tensor([-2.3630, -3.5697, -4.0380, -4.5336, -5.3080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2944, device='cuda:0', dtype=torch.float64)
tensor([-2.3629, -3.5500, -4.0243, -4.5073, -5.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4674, device='cuda:0', dtype=torch.float64)
tensor([-2.3698, -3.5327, -4.0008, -4.4764, -5.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4141, device='cuda:0', dtype=torch.float64)
tensor([-2.3736, -3.5183, -3.9925, -4.4649, -5.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5460, device='cuda:0', dtype=torch.float64)
tensor([-2.3711, -3.5090, -3.9932, -4.4693, -5.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9316, device='cuda:0', dtype=torch.float64)
tensor([-2.3724, -3.5166, -3.9981, -4.4839, -5.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6130, device='cuda:0', dtype=torch.float64)
tensor([-2.3770, -3.5222, -4.0093, -4.5175, -5.3280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7656, device='cuda:0', dtype=torch.float64)
tensor([-2.3751, -3.5244, -4.0327, -4.5639, -5.3122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3427, device='cuda:0', dtype=torch.float64)
tensor([-2.3722, -3.5243, -4.0586, -4.6108, -5.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6008, device='cuda:0', dtype=torch.float64)
tensor([-2.3703, -3.5259, -4.0947, -4.6477, -5.2993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8091, device='cuda:0', dtype=torch.float64)
tensor([-2.3748, -3.5330, -4.1194, -4.6772, -5.2957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5430, device='cuda:0', dtype=torch.float64)
tensor([-2.3850, -3.5488, -4.1191, -4.7014, -5.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5727, device='cuda:0', dtype=torch.float64)
tensor([-2.3893, -3.5662, -4.1053, -4.7168, -5.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6182, device='cuda:0', dtype=torch.float64)
tensor([-2.3993, -3.5856, -4.0779, -4.7105, -5.3099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1573, device='cuda:0', dtype=torch.float64)
tensor([-2.4067, -3.6024, -4.0534, -4.6920, -5.3222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4786, device='cuda:0', dtype=torch.float64)
tensor([-2.4077, -3.6129, -4.0257, -4.6637, -5.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7132, device='cuda:0', dtype=torch.float64)
tensor([-2.4108, -3.6178, -4.0079, -4.6380, -5.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7381, device='cuda:0', dtype=torch.float64)
tensor([-2.4084, -3.6144, -4.0161, -4.6205, -5.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5501, device='cuda:0', dtype=torch.float64)
tensor([-2.4076, -3.6116, -4.0343, -4.6062, -5.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7288, device='cuda:0', dtype=torch.float64)
tensor([-2.4117, -3.6030, -4.0500, -4.5939, -5.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4314, device='cuda:0', dtype=torch.float64)
tensor([-2.4160, -3.5881, -4.0638, -4.5835, -5.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3037, device='cuda:0', dtype=torch.float64)
tensor([-2.4176, -3.5762, -4.0781, -4.5725, -5.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6775, device='cuda:0', dtype=torch.float64)
tensor([-2.4163, -3.5645, -4.0753, -4.5628, -5.3327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4533, device='cuda:0', dtype=torch.float64)
tensor([-2.4147, -3.5621, -4.0669, -4.5575, -5.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4874, device='cuda:0', dtype=torch.float64)
tensor([-2.4092, -3.5676, -4.0683, -4.5639, -5.3051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8204, device='cuda:0', dtype=torch.float64)
tensor([-2.4026, -3.5747, -4.0648, -4.5646, -5.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9740, device='cuda:0', dtype=torch.float64)
tensor([-2.3968, -3.5727, -4.0680, -4.5639, -5.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7733, device='cuda:0', dtype=torch.float64)
tensor([-2.3968, -3.5657, -4.0747, -4.5644, -5.2774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4598, device='cuda:0', dtype=torch.float64)
tensor([-2.3959, -3.5567, -4.0913, -4.5734, -5.2717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6736, device='cuda:0', dtype=torch.float64)
tensor([-2.3983, -3.5520, -4.1045, -4.5926, -5.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3034, device='cuda:0', dtype=torch.float64)
tensor([-2.4051, -3.5492, -4.1126, -4.6125, -5.2674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7618, device='cuda:0', dtype=torch.float64)
tensor([-2.4169, -3.5496, -4.1298, -4.6354, -5.2554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6535, device='cuda:0', dtype=torch.float64)
tensor([-2.4244, -3.5590, -4.1294, -4.6493, -5.2542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6597, device='cuda:0', dtype=torch.float64)
tensor([-2.4367, -3.5638, -4.1215, -4.6520, -5.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4755, device='cuda:0', dtype=torch.float64)
tensor([-2.4458, -3.5701, -4.1101, -4.6579, -5.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5887, device='cuda:0', dtype=torch.float64)
tensor([-2.4537, -3.5812, -4.0926, -4.6628, -5.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5165, device='cuda:0', dtype=torch.float64)
tensor([-2.4623, -3.5883, -4.0827, -4.6662, -5.2723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3769, device='cuda:0', dtype=torch.float64)
tensor([-2.4768, -3.5988, -4.0636, -4.6571, -5.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2465, device='cuda:0', dtype=torch.float64)
tensor([-2.4925, -3.6099, -4.0471, -4.6457, -5.2521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7456, device='cuda:0', dtype=torch.float64)
tensor([-2.5028, -3.6150, -4.0388, -4.6327, -5.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6477, device='cuda:0', dtype=torch.float64)
tensor([-2.5151, -3.6212, -4.0390, -4.6187, -5.2538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6555, device='cuda:0', dtype=torch.float64)
tensor([-2.5224, -3.6290, -4.0515, -4.6156, -5.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7830, device='cuda:0', dtype=torch.float64)
tensor([-2.5312, -3.6346, -4.0625, -4.6116, -5.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4846, device='cuda:0', dtype=torch.float64)
tensor([-2.5315, -3.6287, -4.0714, -4.6054, -5.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9292, device='cuda:0', dtype=torch.float64)
tensor([-2.5244, -3.6086, -4.0752, -4.6121, -5.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5636, device='cuda:0', dtype=torch.float64)
tensor([-2.5199, -3.5927, -4.0756, -4.6334, -5.2504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5991, device='cuda:0', dtype=torch.float64)
tensor([-2.5118, -3.5776, -4.0726, -4.6631, -5.2544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7824, device='cuda:0', dtype=torch.float64)
tensor([-2.4995, -3.5708, -4.0679, -4.6901, -5.2486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6340, device='cuda:0', dtype=torch.float64)
tensor([-2.4887, -3.5818, -4.0646, -4.7108, -5.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6633, device='cuda:0', dtype=torch.float64)
tensor([-2.4850, -3.6056, -4.0650, -4.7129, -5.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7643, device='cuda:0', dtype=torch.float64)
tensor([-2.4881, -3.6284, -4.0734, -4.7152, -5.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7754, device='cuda:0', dtype=torch.float64)
tensor([-2.4967, -3.6429, -4.0849, -4.7062, -5.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6321, device='cuda:0', dtype=torch.float64)
tensor([-2.5112, -3.6500, -4.0977, -4.7034, -5.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8125, device='cuda:0', dtype=torch.float64)
tensor([-2.5216, -3.6399, -4.1046, -4.7050, -5.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9993, device='cuda:0', dtype=torch.float64)
tensor([-2.5298, -3.6258, -4.1131, -4.7252, -5.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2292, device='cuda:0', dtype=torch.float64)
tensor([-2.5372, -3.6189, -4.1215, -4.7569, -5.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7079, device='cuda:0', dtype=torch.float64)
tensor([-2.5503, -3.6143, -4.1240, -4.7579, -5.1424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4110, device='cuda:0', dtype=torch.float64)
tensor([-2.5558, -3.6098, -4.1257, -4.7480, -5.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7422, device='cuda:0', dtype=torch.float64)
tensor([-2.5675, -3.6028, -4.1219, -4.7155, -5.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7554, device='cuda:0', dtype=torch.float64)
tensor([-2.5847, -3.6013, -4.1098, -4.6696, -5.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4406, device='cuda:0', dtype=torch.float64)
tensor([-2.6009, -3.6014, -4.1040, -4.6212, -5.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4401, device='cuda:0', dtype=torch.float64)
tensor([-2.6187, -3.6085, -4.0995, -4.5834, -5.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0220, device='cuda:0', dtype=torch.float64)
tensor([-2.6232, -3.6149, -4.0928, -4.5701, -5.2455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9216, device='cuda:0', dtype=torch.float64)
tensor([-2.6177, -3.6144, -4.1011, -4.5661, -5.2612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6238, device='cuda:0', dtype=torch.float64)
tensor([-2.6077, -3.6067, -4.1269, -4.5762, -5.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9220, device='cuda:0', dtype=torch.float64)
tensor([-2.6008, -3.6054, -4.1540, -4.5972, -5.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1595, device='cuda:0', dtype=torch.float64)
tensor([-2.6062, -3.6169, -4.1767, -4.6196, -5.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7668, device='cuda:0', dtype=torch.float64)
tensor([-2.6118, -3.6301, -4.2011, -4.6454, -5.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6323, device='cuda:0', dtype=torch.float64)
tensor([-2.6210, -3.6430, -4.2222, -4.6695, -5.2151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6355, device='cuda:0', dtype=torch.float64)
tensor([-2.6245, -3.6622, -4.2265, -4.7045, -5.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9666, device='cuda:0', dtype=torch.float64)
tensor([-2.6249, -3.6720, -4.2369, -4.7364, -5.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8812, device='cuda:0', dtype=torch.float64)
tensor([-2.6256, -3.6776, -4.2362, -4.7527, -5.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6262, device='cuda:0', dtype=torch.float64)
tensor([-2.6345, -3.6858, -4.2180, -4.7489, -5.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0141, device='cuda:0', dtype=torch.float64)
tensor([-2.6451, -3.6968, -4.2049, -4.7387, -5.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8598, device='cuda:0', dtype=torch.float64)
tensor([-2.6455, -3.7062, -4.1947, -4.7315, -5.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9163, device='cuda:0', dtype=torch.float64)
tensor([-2.6453, -3.7171, -4.1806, -4.7154, -5.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6276, device='cuda:0', dtype=torch.float64)
tensor([-2.6533, -3.7331, -4.1742, -4.6997, -5.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5810, device='cuda:0', dtype=torch.float64)
tensor([-2.6680, -3.7498, -4.1757, -4.6851, -5.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8764, device='cuda:0', dtype=torch.float64)
tensor([-2.6733, -3.7534, -4.1873, -4.6762, -5.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0722, device='cuda:0', dtype=torch.float64)
tensor([-2.6747, -3.7428, -4.2175, -4.6793, -5.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0909, device='cuda:0', dtype=torch.float64)
tensor([-2.6772, -3.7317, -4.2496, -4.6704, -5.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0886, device='cuda:0', dtype=torch.float64)
tensor([-2.6871, -3.7260, -4.2655, -4.6462, -5.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0888, device='cuda:0', dtype=torch.float64)
tensor([-2.6984, -3.7185, -4.2775, -4.6280, -5.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0412, device='cuda:0', dtype=torch.float64)
tensor([-2.7145, -3.7288, -4.2932, -4.6250, -5.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3948, device='cuda:0', dtype=torch.float64)
tensor([-2.7304, -3.7412, -4.2907, -4.6249, -5.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7575, device='cuda:0', dtype=torch.float64)
tensor([-2.7496, -3.7619, -4.2649, -4.6172, -5.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0552, device='cuda:0', dtype=torch.float64)
tensor([-2.7680, -3.7946, -4.2658, -4.6275, -5.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4676, device='cuda:0', dtype=torch.float64)
tensor([-2.7770, -3.8259, -4.2711, -4.6468, -5.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8092, device='cuda:0', dtype=torch.float64)
tensor([-2.7742, -3.8405, -4.2650, -4.6742, -5.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7778, device='cuda:0', dtype=torch.float64)
tensor([-2.7580, -3.8446, -4.2736, -4.7405, -5.2440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6490, device='cuda:0', dtype=torch.float64)
tensor([-2.7462, -3.8398, -4.2959, -4.8292, -5.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7710, device='cuda:0', dtype=torch.float64)
tensor([-2.7366, -3.8373, -4.3158, -4.9252, -5.2862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9499, device='cuda:0', dtype=torch.float64)
tensor([-2.7335, -3.8443, -4.3353, -4.9957, -5.3010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8382, device='cuda:0', dtype=torch.float64)
tensor([-2.7250, -3.8301, -4.3559, -5.0333, -5.3081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0419, device='cuda:0', dtype=torch.float64)
tensor([-2.7268, -3.8156, -4.3710, -5.0320, -5.3173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1562, device='cuda:0', dtype=torch.float64)
tensor([-2.7379, -3.8014, -4.4115, -5.0454, -5.3287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7622, device='cuda:0', dtype=torch.float64)
tensor([-2.7587, -3.7952, -4.4692, -5.0840, -5.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7692, device='cuda:0', dtype=torch.float64)
tensor([-2.7820, -3.8006, -4.5165, -5.1006, -5.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5576, device='cuda:0', dtype=torch.float64)
tensor([-2.7979, -3.8173, -4.5515, -5.1120, -5.3664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7296, device='cuda:0', dtype=torch.float64)
tensor([-2.8093, -3.8279, -4.5593, -5.1310, -5.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9910, device='cuda:0', dtype=torch.float64)
tensor([-2.8403, -3.8464, -4.5366, -5.1240, -5.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7508, device='cuda:0', dtype=torch.float64)
tensor([-2.8766, -3.8726, -4.5121, -5.1292, -5.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7495, device='cuda:0', dtype=torch.float64)
tensor([-2.9187, -3.9029, -4.4888, -5.1492, -5.2949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6693, device='cuda:0', dtype=torch.float64)
tensor([-2.9602, -3.9323, -4.4464, -5.1647, -5.2884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5068, device='cuda:0', dtype=torch.float64)
tensor([-2.9980, -3.9599, -4.4018, -5.1857, -5.2795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5722, device='cuda:0', dtype=torch.float64)
tensor([-3.0439, -3.9964, -4.3542, -5.1764, -5.2721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9333, device='cuda:0', dtype=torch.float64)
tensor([-3.0916, -4.0269, -4.3197, -5.1436, -5.2704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6856, device='cuda:0', dtype=torch.float64)
tensor([-3.1355, -4.0625, -4.2991, -5.0922, -5.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8729, device='cuda:0', dtype=torch.float64)
tensor([-3.1649, -4.1003, -4.2807, -5.0481, -5.2901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2547, device='cuda:0', dtype=torch.float64)
tensor([-3.1785, -4.1348, -4.2778, -5.0330, -5.2968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8791, device='cuda:0', dtype=torch.float64)
tensor([-3.1919, -4.1693, -4.2893, -5.0074, -5.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5687, device='cuda:0', dtype=torch.float64)
tensor([-3.2115, -4.2232, -4.3004, -4.9778, -5.3421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5908, device='cuda:0', dtype=torch.float64)
tensor([-3.2453, -4.2748, -4.3092, -4.9552, -5.3746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6425, device='cuda:0', dtype=torch.float64)
tensor([-3.2807, -4.3208, -4.3343, -4.9512, -5.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2582, device='cuda:0', dtype=torch.float64)
tensor([-3.3109, -4.3686, -4.3539, -4.9484, -5.4513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6987, device='cuda:0', dtype=torch.float64)
tensor([-3.3274, -4.3958, -4.3720, -4.9466, -5.4885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9978, device='cuda:0', dtype=torch.float64)
tensor([-3.3502, -4.4349, -4.3904, -4.9541, -5.5258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8333, device='cuda:0', dtype=torch.float64)
tensor([-3.3740, -4.4670, -4.4119, -4.9830, -5.5624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6439, device='cuda:0', dtype=torch.float64)
tensor([-3.4018, -4.4931, -4.4386, -5.0095, -5.5905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1873, device='cuda:0', dtype=torch.float64)
tensor([-3.4289, -4.5051, -4.4590, -5.0517, -5.6231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7514, device='cuda:0', dtype=torch.float64)
tensor([-3.4496, -4.5183, -4.4800, -5.1033, -5.6578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7126, device='cuda:0', dtype=torch.float64)
tensor([-3.4684, -4.5672, -4.5104, -5.1728, -5.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4304, device='cuda:0', dtype=torch.float64)
tensor([-3.4823, -4.5917, -4.5451, -5.2379, -5.7116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5530, device='cuda:0', dtype=torch.float64)
tensor([-3.4839, -4.6278, -4.5924, -5.2836, -5.7354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0208, device='cuda:0', dtype=torch.float64)
tensor([-3.4839, -4.7038, -4.6526, -5.3432, -5.7443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5660, device='cuda:0', dtype=torch.float64)
tensor([-3.4877, -4.8963, -4.7098, -5.3846, -5.7573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8797, device='cuda:0', dtype=torch.float64)
tensor([-3.5021, -5.2551, -4.7729, -5.4522, -5.7779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7443, device='cuda:0', dtype=torch.float64)
tensor([-3.5154, -5.4014, -4.8136, -5.5039, -5.7810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9766, device='cuda:0', dtype=torch.float64)
tensor([-3.5338, -5.2601, -4.8773, -5.5620, -5.7832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7280, device='cuda:0', dtype=torch.float64)
tensor([-3.5540, -5.1383, -4.9305, -5.6159, -5.7900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2257, device='cuda:0', dtype=torch.float64)
tensor([-3.5901, -4.9427, -4.9627, -5.6322, -5.7841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7134, device='cuda:0', dtype=torch.float64)
tensor([-3.6235, -4.8086, -5.0126, -5.6784, -5.7664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9990, device='cuda:0', dtype=torch.float64)
tensor([-3.6573, -4.7043, -5.0918, -5.7453, -5.7655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5618, device='cuda:0', dtype=torch.float64)
tensor([-3.6991, -4.6665, -5.1649, -5.8311, -5.7667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6530, device='cuda:0', dtype=torch.float64)
tensor([-3.7522, -4.6853, -5.2191, -5.8986, -5.7902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5172, device='cuda:0', dtype=torch.float64)
tensor([-3.8208, -4.7300, -5.2510, -5.9827, -5.8102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0235, device='cuda:0', dtype=torch.float64)
tensor([-3.8960, -4.8110, -5.3163, -6.1260, -5.8475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9021, device='cuda:0', dtype=torch.float64)
tensor([-3.9891, -4.9001, -5.3672, -6.2276, -5.8953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3975, device='cuda:0', dtype=torch.float64)
tensor([-4.0784, -4.9882, -5.4241, -6.3032, -5.9324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5938, device='cuda:0', dtype=torch.float64)
tensor([-4.1865, -5.0788, -5.4762, -6.3717, -5.9806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6884, device='cuda:0', dtype=torch.float64)
tensor([-4.2827, -5.1804, -5.5441, -6.5511, -6.0229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9588, device='cuda:0', dtype=torch.float64)
tensor([-4.3854, -5.2570, -5.6200, -6.7329, -6.0789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7954, device='cuda:0', dtype=torch.float64)
tensor([-4.4826, -5.3118, -5.6914, -6.8808, -6.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4550, device='cuda:0', dtype=torch.float64)
tensor([-4.5827, -5.3798, -5.7674, -7.0490, -6.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7359, device='cuda:0', dtype=torch.float64)
tensor([-4.6759, -5.4641, -5.8588, -7.3086, -6.3835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8785, device='cuda:0', dtype=torch.float64)
tensor([-4.7551, -5.5816, -5.9427, -7.4724, -6.5026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8558, device='cuda:0', dtype=torch.float64)
tensor([-4.8594, -5.7351, -6.0476, -7.6504, -6.6468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6824, device='cuda:0', dtype=torch.float64)
tensor([-4.9790, -5.9236, -6.1787, -7.8387, -6.7861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7703, device='cuda:0', dtype=torch.float64)
tensor([-5.0887, -6.1235, -6.3148, -8.0555, -6.9873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8779, device='cuda:0', dtype=torch.float64)
tensor([-5.2110, -6.3378, -6.4771, -8.3401, -7.2445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8571, device='cuda:0', dtype=torch.float64)
tensor([-5.3330, -6.5309, -6.6961, -8.6013, -7.5511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7708, device='cuda:0', dtype=torch.float64)
tensor([-5.4825, -6.7358, -6.9467, -8.8592, -7.8514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0855, device='cuda:0', dtype=torch.float64)
tensor([-5.6180, -6.9332, -7.2579, -9.1274, -8.1217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4712, device='cuda:0', dtype=torch.float64)
tensor([-5.7863, -7.1466, -7.5745, -9.4538, -8.3911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6970, device='cuda:0', dtype=torch.float64)
tensor([-5.9624, -7.4154, -7.8711, -9.7644, -8.6208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3769, device='cuda:0', dtype=torch.float64)
tensor([ -6.1468,  -7.7161,  -8.2223, -10.1443,  -8.9138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9023, device='cuda:0', dtype=torch.float64)
tensor([ -6.4162,  -8.1331,  -8.5888, -10.5075,  -9.2960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7588, device='cuda:0', dtype=torch.float64)
tensor([ -6.7353,  -8.7170,  -8.9543, -10.8519,  -9.6602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4035, device='cuda:0', dtype=torch.float64)
tensor([ -7.0798,  -9.4791,  -9.3960, -11.1313,  -9.9616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6661, device='cuda:0', dtype=torch.float64)
tensor([ -7.5276, -10.5704, -10.0064, -11.3676, -10.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8592, device='cuda:0', dtype=torch.float64)
tensor([ -7.9874, -11.7208, -10.7015, -11.6446, -10.5295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5865, device='cuda:0', dtype=torch.float64)
tensor([ -8.4610, -12.7843, -11.5118, -11.9266, -10.8214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3041, device='cuda:0', dtype=torch.float64)
tensor([ -8.9515, -13.8141, -12.3328, -12.2610, -11.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3964, device='cuda:0', dtype=torch.float64)
tensor([ -9.4337, -14.8033, -13.0666, -12.5514, -11.4185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7924, device='cuda:0', dtype=torch.float64)
tensor([ -9.8804, -15.7616, -13.6505, -12.7240, -11.5797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7137, device='cuda:0', dtype=torch.float64)
tensor([-10.2956, -16.8057, -14.0922, -12.9391, -11.7339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5815, device='cuda:0', dtype=torch.float64)
tensor([-10.5980, -17.7408, -14.4296, -13.2090, -11.9967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0223, device='cuda:0', dtype=torch.float64)
tensor([-10.6530, -18.0016, -14.5384, -13.5475, -12.2561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7535, device='cuda:0', dtype=torch.float64)
tensor([-10.7945, -18.6991, -14.7581, -13.9704, -12.4150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6310, device='cuda:0', dtype=torch.float64)
tensor([-11.0640, -19.3083, -15.0580, -14.4006, -12.7029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5127, device='cuda:0', dtype=torch.float64)
tensor([-11.3546, -19.8645, -15.3675, -14.8270, -12.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8181, device='cuda:0', dtype=torch.float64)
tensor([-11.6508, -20.6014, -15.7887, -15.1579, -13.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3778, device='cuda:0', dtype=torch.float64)
tensor([-11.9453, -21.3424, -16.1077, -15.4272, -13.2497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3911, device='cuda:0', dtype=torch.float64)
tensor([-12.3110, -22.2973, -16.3753, -15.7510, -13.3504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6557, device='cuda:0', dtype=torch.float64)
tensor([-12.6771, -22.6567, -16.6212, -15.9988, -13.5100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4822, device='cuda:0', dtype=torch.float64)
tensor([-13.0736, -22.7130, -16.7646, -16.2555, -13.5461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6382, device='cuda:0', dtype=torch.float64)
tensor([-13.7126, -23.0682, -16.9889, -16.5095, -13.5418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7854, device='cuda:0', dtype=torch.float64)
tensor([-14.3755, -23.5348, -17.1443, -16.8568, -13.4711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7323, device='cuda:0', dtype=torch.float64)
tensor([-15.0215, -24.3087, -17.3043, -17.2854, -13.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4361, device='cuda:0', dtype=torch.float64)
tensor([-15.6093, -25.1217, -17.4363, -17.7148, -13.1402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7138, device='cuda:0', dtype=torch.float64)
tensor([-16.3250, -26.4361, -17.7613, -18.3523, -12.9829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5368, device='cuda:0', dtype=torch.float64)
tensor([-16.8348, -27.3707, -17.9740, -18.8127, -12.9073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6920, device='cuda:0', dtype=torch.float64)
tensor([-17.3255, -28.2305, -18.2576, -19.4616, -12.9484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4631, device='cuda:0', dtype=torch.float64)
tensor([-17.9177, -29.4645, -18.7230, -20.2689, -13.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6935, device='cuda:0', dtype=torch.float64)
tensor([-18.3232, -30.3390, -19.1388, -21.0385, -13.5089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8294, device='cuda:0', dtype=torch.float64)
tensor([-18.6559, -31.1185, -19.4008, -21.6676, -13.8919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8225, device='cuda:0', dtype=torch.float64)
tensor([-18.9119, -31.9620, -19.4633, -22.2704, -14.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8839, device='cuda:0', dtype=torch.float64)
tensor([-19.1626, -32.4254, -19.7730, -22.8327, -14.5534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0420, device='cuda:0', dtype=torch.float64)
tensor([-19.3084, -32.4847, -20.0121, -23.2567, -14.7894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4461, device='cuda:0', dtype=torch.float64)
tensor([-19.4046, -32.3534, -20.3699, -23.5596, -15.0828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8106, device='cuda:0', dtype=torch.float64)
tensor([-19.4251, -32.1289, -20.6802, -23.6296, -15.2835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5102, device='cuda:0', dtype=torch.float64)
tensor([-19.4667, -31.9713, -21.0597, -23.7292, -15.4770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7853, device='cuda:0', dtype=torch.float64)
tensor([-19.3352, -31.4500, -21.3386, -23.6653, -15.6551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5926, device='cuda:0', dtype=torch.float64)
tensor([-19.2307, -30.7873, -21.5887, -23.6720, -15.7889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7873, device='cuda:0', dtype=torch.float64)
tensor([-19.0306, -29.7875, -21.6227, -23.4563, -15.7456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4613, device='cuda:0', dtype=torch.float64)
tensor([-19.0156, -29.4382, -21.7257, -23.6026, -15.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5542, device='cuda:0', dtype=torch.float64)
tensor([-19.0908, -29.0864, -21.7850, -23.6801, -15.7931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5261, device='cuda:0', dtype=torch.float64)
tensor([-19.2099, -28.9669, -21.7523, -23.7998, -15.6256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3763, device='cuda:0', dtype=torch.float64)
tensor([-19.2963, -28.6487, -21.7272, -23.7623, -15.4636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4656, device='cuda:0', dtype=torch.float64)
tensor([-19.2711, -28.4104, -21.7292, -23.4551, -15.4493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8109, device='cuda:0', dtype=torch.float64)
tensor([-19.1284, -27.8585, -21.6820, -23.1613, -15.4811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3158, device='cuda:0', dtype=torch.float64)
tensor([-18.9833, -27.2480, -21.5380, -22.9435, -15.6132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6951, device='cuda:0', dtype=torch.float64)
tensor([-18.7766, -26.6656, -21.4717, -22.7892, -15.8750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5994, device='cuda:0', dtype=torch.float64)
tensor([-18.6558, -26.2931, -21.3560, -22.7515, -16.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4742, device='cuda:0', dtype=torch.float64)
tensor([-18.5297, -26.0261, -21.2684, -22.7584, -16.5132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4772, device='cuda:0', dtype=torch.float64)
tensor([-18.4637, -25.5756, -21.1837, -22.8455, -16.5741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5197, device='cuda:0', dtype=torch.float64)
tensor([-18.2206, -24.7334, -20.9295, -22.9145, -16.6217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4882, device='cuda:0', dtype=torch.float64)
tensor([-18.0486, -24.2133, -20.7146, -22.8354, -16.5795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5279, device='cuda:0', dtype=torch.float64)
tensor([-17.8387, -23.7249, -20.3739, -22.7217, -16.5117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5725, device='cuda:0', dtype=torch.float64)
tensor([-17.7030, -23.1716, -20.1310, -22.5772, -16.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8799, device='cuda:0', dtype=torch.float64)
tensor([-17.4557, -22.5737, -19.5608, -22.3628, -16.6260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3553, device='cuda:0', dtype=torch.float64)
tensor([-17.1485, -21.8377, -18.8518, -22.0174, -16.6089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4041, device='cuda:0', dtype=torch.float64)
tensor([-16.9668, -21.1095, -18.1672, -21.8497, -16.4154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5402, device='cuda:0', dtype=torch.float64)
tensor([-16.9714, -20.4671, -17.6186, -21.7569, -16.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4591, device='cuda:0', dtype=torch.float64)
tensor([-16.9512, -19.8975, -17.2033, -21.8726, -16.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5155, device='cuda:0', dtype=torch.float64)
tensor([-17.0364, -19.5052, -16.9120, -22.1224, -16.3194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5460, device='cuda:0', dtype=torch.float64)
tensor([-17.3049, -19.2198, -16.7395, -22.5515, -16.5129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5404, device='cuda:0', dtype=torch.float64)
tensor([-17.5911, -19.0813, -16.6736, -22.9064, -16.6263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7456, device='cuda:0', dtype=torch.float64)
tensor([-17.8198, -18.9293, -16.6938, -23.2371, -16.7949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([-18.1239, -18.8683, -16.8412, -23.5481, -16.9454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7652, device='cuda:0', dtype=torch.float64)
tensor([-18.5745, -18.7728, -17.1147, -23.7930, -17.0110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6136, device='cuda:0', dtype=torch.float64)
tensor([-19.0580, -18.8982, -17.4584, -24.0181, -16.9282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5178, device='cuda:0', dtype=torch.float64)
tensor([-19.5657, -19.2242, -17.8152, -24.3216, -16.7415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4972, device='cuda:0', dtype=torch.float64)
tensor([-20.0273, -19.6511, -18.0365, -24.7103, -16.6431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6269, device='cuda:0', dtype=torch.float64)
tensor([-20.5228, -20.4305, -18.2997, -25.1230, -16.5614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5577, device='cuda:0', dtype=torch.float64)
tensor([-21.0576, -21.4078, -18.5163, -25.5622, -16.5329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4121, device='cuda:0', dtype=torch.float64)
tensor([-21.7511, -22.5281, -18.8921, -26.2811, -16.6246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9605, device='cuda:0', dtype=torch.float64)
tensor([-22.0547, -23.4748, -19.1425, -26.7961, -16.7454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5369, device='cuda:0', dtype=torch.float64)
tensor([-22.3486, -24.5774, -19.4644, -27.3399, -16.9267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6478, device='cuda:0', dtype=torch.float64)
tensor([-22.4318, -25.3678, -19.7335, -27.6219, -17.0656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3899, device='cuda:0', dtype=torch.float64)
tensor([-22.4840, -25.8585, -19.8669, -27.8410, -17.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3565, device='cuda:0', dtype=torch.float64)
tensor([-22.3648, -26.5668, -19.9079, -28.0237, -17.2624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2896, device='cuda:0', dtype=torch.float64)
tensor([-22.2078, -27.2670, -19.8641, -28.1160, -17.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9042, device='cuda:0', dtype=torch.float64)
tensor([-22.0686, -27.7293, -19.8156, -28.1370, -17.4510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5422, device='cuda:0', dtype=torch.float64)
tensor([-21.7910, -28.1911, -19.6595, -28.0558, -17.6283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4758, device='cuda:0', dtype=torch.float64)
tensor([-21.6796, -28.4995, -19.6692, -28.1228, -17.7815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7815, device='cuda:0', dtype=torch.float64)
tensor([-21.5289, -28.3450, -19.8558, -28.0121, -17.9089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5485, device='cuda:0', dtype=torch.float64)
tensor([-21.4564, -28.4148, -19.9632, -27.8177, -18.1159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3822, device='cuda:0', dtype=torch.float64)
tensor([-21.3810, -28.5389, -19.9962, -27.7691, -18.3975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([-21.2648, -28.6104, -20.0480, -27.8215, -18.7755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2961, device='cuda:0', dtype=torch.float64)
tensor([-21.1207, -28.9095, -19.9994, -27.9589, -19.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5611, device='cuda:0', dtype=torch.float64)
tensor([-20.8437, -29.1047, -20.0274, -27.9907, -19.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4825, device='cuda:0', dtype=torch.float64)
tensor([-20.4372, -28.7762, -20.0344, -28.0134, -20.1193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6446, device='cuda:0', dtype=torch.float64)
tensor([-20.1559, -28.2483, -20.1438, -28.1686, -20.4913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5022, device='cuda:0', dtype=torch.float64)
tensor([-19.9624, -27.8568, -20.2374, -28.4588, -20.7131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5992, device='cuda:0', dtype=torch.float64)
tensor([-19.8289, -27.5134, -20.3076, -28.8170, -20.9563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7672, device='cuda:0', dtype=torch.float64)
tensor([-19.9217, -27.3776, -20.7793, -29.3827, -21.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6143, device='cuda:0', dtype=torch.float64)
tensor([-19.7935, -27.3356, -21.1286, -29.9386, -21.6300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6790, device='cuda:0', dtype=torch.float64)
tensor([-19.7620, -27.7984, -21.4662, -30.6235, -22.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3880, device='cuda:0', dtype=torch.float64)
tensor([-19.9215, -28.4308, -21.9149, -31.4414, -22.5791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6551, device='cuda:0', dtype=torch.float64)
tensor([-20.3207, -29.5882, -22.6481, -32.5545, -23.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2432, device='cuda:0', dtype=torch.float64)
tensor([-20.7563, -30.4456, -23.4958, -33.5999, -23.9020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4841, device='cuda:0', dtype=torch.float64)
tensor([-21.2130, -30.9396, -24.3345, -34.3986, -24.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4793, device='cuda:0', dtype=torch.float64)
tensor([-21.6102, -31.3797, -25.1258, -35.3504, -24.9077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2552, device='cuda:0', dtype=torch.float64)
tensor([-22.1589, -31.5414, -26.2412, -36.4557, -25.5816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-22.8734, -32.0794, -27.5033, -37.5416, -26.3078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3586, device='cuda:0', dtype=torch.float64)
tensor([-23.5940, -32.9106, -28.7875, -38.5980, -26.9125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4708, device='cuda:0', dtype=torch.float64)
tensor([-24.6505, -34.0460, -30.2650, -39.6809, -27.6774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5046, device='cuda:0', dtype=torch.float64)
tensor([-26.0135, -35.0770, -32.0317, -40.7560, -28.5062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6243, device='cuda:0', dtype=torch.float64)
tensor([-26.7847, -35.3548, -33.2355, -41.5778, -29.1334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6186, device='cuda:0', dtype=torch.float64)
tensor([-27.6763, -35.6238, -34.4128, -42.4647, -29.6916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5570, device='cuda:0', dtype=torch.float64)
tensor([-28.3490, -36.0509, -35.3774, -43.2545, -30.2414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8769, device='cuda:0', dtype=torch.float64)
tensor([-28.9298, -36.6931, -36.2858, -43.6520, -30.4059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2083, device='cuda:0', dtype=torch.float64)
tensor([-29.3389, -37.9899, -36.9953, -43.9785, -30.4591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8802, device='cuda:0', dtype=torch.float64)
tensor([-29.4684, -39.1598, -37.3626, -43.8742, -30.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4167, device='cuda:0', dtype=torch.float64)
tensor([-29.4103, -39.4793, -37.5493, -43.6708, -30.0804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6668, device='cuda:0', dtype=torch.float64)
tensor([-29.2576, -39.4386, -37.6223, -43.3614, -29.8333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3343, device='cuda:0', dtype=torch.float64)
tensor([-28.9989, -38.9113, -37.2969, -43.1602, -29.5432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5599, device='cuda:0', dtype=torch.float64)
tensor([-28.4327, -37.9969, -36.6566, -43.0264, -29.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4965, device='cuda:0', dtype=torch.float64)
tensor([-27.7660, -36.8036, -35.8932, -42.7738, -28.8765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3341, device='cuda:0', dtype=torch.float64)
tensor([-27.2055, -35.9595, -35.0886, -42.6599, -28.5900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3885, device='cuda:0', dtype=torch.float64)
tensor([-26.4447, -35.4638, -33.9856, -42.4004, -28.3173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5198, device='cuda:0', dtype=torch.float64)
tensor([-25.8707, -34.9113, -33.1259, -42.1524, -28.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7501, device='cuda:0', dtype=torch.float64)
tensor([-24.9522, -33.8807, -32.1019, -41.6761, -28.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3135, device='cuda:0', dtype=torch.float64)
tensor([-23.9583, -33.0759, -31.0228, -41.4450, -27.9044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6217, device='cuda:0', dtype=torch.float64)
tensor([-22.9445, -31.9332, -29.8764, -41.2244, -27.6776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2126, device='cuda:0', dtype=torch.float64)
tensor([-21.9578, -30.7590, -28.7225, -40.9703, -27.5705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4736, device='cuda:0', dtype=torch.float64)
tensor([-21.2855, -30.2473, -27.8491, -41.0624, -27.5612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3017, device='cuda:0', dtype=torch.float64)
tensor([-20.7699, -29.6636, -27.0865, -41.1450, -27.5402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2221, device='cuda:0', dtype=torch.float64)
tensor([-20.3362, -29.0450, -26.5957, -41.4937, -27.6800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3020, device='cuda:0', dtype=torch.float64)
tensor([-20.0979, -28.4055, -26.2544, -41.8166, -27.7521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-20.1110, -28.2149, -26.2013, -42.5362, -28.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3269, device='cuda:0', dtype=torch.float64)
tensor([-20.1607, -28.3908, -26.1039, -43.4158, -28.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1993, device='cuda:0', dtype=torch.float64)
tensor([-20.3050, -28.8827, -26.0975, -44.3098, -28.7408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6251, device='cuda:0', dtype=torch.float64)
tensor([-20.3066, -29.7047, -26.0524, -45.1139, -29.0039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3598, device='cuda:0', dtype=torch.float64)
tensor([-20.4287, -30.8041, -26.0228, -45.6565, -29.1056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1254, device='cuda:0', dtype=torch.float64)
tensor([-20.6147, -31.7656, -26.2520, -46.1910, -29.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3480, device='cuda:0', dtype=torch.float64)
tensor([-20.5866, -32.4254, -26.2776, -46.3468, -29.5591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5240, device='cuda:0', dtype=torch.float64)
tensor([-20.4309, -33.4236, -26.3234, -46.6755, -29.7168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3002, device='cuda:0', dtype=torch.float64)
tensor([-20.4810, -34.6159, -26.6927, -47.0857, -29.9366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3687, device='cuda:0', dtype=torch.float64)
tensor([-20.5587, -35.9412, -27.1593, -47.5659, -30.1258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3705, device='cuda:0', dtype=torch.float64)
tensor([-20.5739, -37.2826, -27.7141, -48.2767, -30.5977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2421, device='cuda:0', dtype=torch.float64)
tensor([-20.5958, -38.3608, -28.1774, -49.1463, -31.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4423, device='cuda:0', dtype=torch.float64)
tensor([-20.5586, -39.3488, -28.5360, -49.9635, -31.7845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5670, device='cuda:0', dtype=torch.float64)
tensor([-20.6487, -40.2660, -28.8016, -50.7722, -32.4081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2941, device='cuda:0', dtype=torch.float64)
tensor([-20.6426, -40.8769, -28.9639, -51.5184, -32.9480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6844, device='cuda:0', dtype=torch.float64)
tensor([-20.6795, -41.1008, -28.8859, -51.9851, -33.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4948, device='cuda:0', dtype=torch.float64)
tensor([-20.6971, -41.2657, -28.7655, -52.1658, -33.4621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4247, device='cuda:0', dtype=torch.float64)
tensor([-20.7980, -42.0018, -28.7303, -52.6760, -33.8238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5075, device='cuda:0', dtype=torch.float64)
tensor([-20.9490, -42.6203, -28.6574, -53.1426, -33.9632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2984, device='cuda:0', dtype=torch.float64)
tensor([-21.3588, -43.2786, -28.8432, -53.7338, -34.0843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7396, device='cuda:0', dtype=torch.float64)
tensor([-21.7588, -44.1255, -29.0785, -54.6069, -34.3276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3500, device='cuda:0', dtype=torch.float64)
tensor([-22.1016, -45.0244, -29.1771, -55.1720, -34.4772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5199, device='cuda:0', dtype=torch.float64)
tensor([-22.4441, -45.8130, -29.2112, -55.7759, -34.6776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3966, device='cuda:0', dtype=torch.float64)
tensor([-22.9429, -46.2861, -29.1944, -56.3424, -34.8588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2491, device='cuda:0', dtype=torch.float64)
tensor([-23.5091, -46.9436, -29.2469, -56.9915, -35.0395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3396, device='cuda:0', dtype=torch.float64)
tensor([-24.0325, -47.6822, -29.3786, -57.5667, -35.2797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5215, device='cuda:0', dtype=torch.float64)
tensor([-24.5164, -48.6845, -29.6288, -57.9628, -35.5208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4746, device='cuda:0', dtype=torch.float64)
tensor([-24.9448, -49.4754, -29.7089, -58.2933, -35.7411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4471, device='cuda:0', dtype=torch.float64)
tensor([-25.4369, -50.0043, -29.8675, -58.7236, -35.9706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4842, device='cuda:0', dtype=torch.float64)
tensor([-25.9508, -50.6078, -30.1149, -59.1079, -36.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-26.3327, -51.0486, -30.3942, -59.3094, -36.6791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4309, device='cuda:0', dtype=torch.float64)
tensor([-26.6043, -51.2314, -30.5086, -59.4465, -36.8380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7012, device='cuda:0', dtype=torch.float64)
tensor([-26.7738, -51.4668, -30.6125, -59.7979, -37.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3289, device='cuda:0', dtype=torch.float64)
tensor([-26.8381, -52.0630, -30.8058, -60.3756, -37.7173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3015, device='cuda:0', dtype=torch.float64)
tensor([-26.7613, -52.5461, -30.9409, -60.7300, -38.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5454, device='cuda:0', dtype=torch.float64)
tensor([-26.9159, -53.0363, -31.3771, -61.0784, -38.6758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6449, device='cuda:0', dtype=torch.float64)
tensor([-27.0678, -53.2358, -31.7447, -61.1955, -39.0515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5894, device='cuda:0', dtype=torch.float64)
tensor([-27.1085, -53.3782, -31.9952, -61.0284, -39.4086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4472, device='cuda:0', dtype=torch.float64)
tensor([-27.1385, -53.2850, -32.0776, -60.4524, -39.4702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6436, device='cuda:0', dtype=torch.float64)
tensor([-26.9124, -52.4520, -31.9341, -59.1892, -38.9456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4274, device='cuda:0', dtype=torch.float64)
tensor([-26.6211, -51.5892, -31.7075, -57.9579, -38.4034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3945, device='cuda:0', dtype=torch.float64)
tensor([-26.2329, -50.8413, -31.4782, -56.8055, -37.9402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4675, device='cuda:0', dtype=torch.float64)
tensor([-25.7480, -49.9847, -31.1100, -55.6728, -37.4725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7228, device='cuda:0', dtype=torch.float64)
tensor([-25.5869, -49.1773, -31.0172, -54.8555, -37.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3774, device='cuda:0', dtype=torch.float64)
tensor([-25.4773, -48.4627, -30.9658, -54.1076, -37.0218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4737, device='cuda:0', dtype=torch.float64)
tensor([-25.3594, -48.0425, -30.8973, -53.6563, -37.0981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3566, device='cuda:0', dtype=torch.float64)
tensor([-25.1503, -47.3240, -30.6650, -52.9862, -36.9627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4217, device='cuda:0', dtype=torch.float64)
tensor([-25.0979, -46.3552, -30.6267, -52.4026, -36.5450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5442, device='cuda:0', dtype=torch.float64)
tensor([-25.0716, -45.6852, -30.6453, -52.1534, -36.3296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3515, device='cuda:0', dtype=torch.float64)
tensor([-24.9557, -45.3125, -30.7183, -52.0357, -36.2034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4240, device='cuda:0', dtype=torch.float64)
tensor([-24.7946, -44.7188, -30.7844, -51.6259, -36.0008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3150, device='cuda:0', dtype=torch.float64)
tensor([-24.6106, -44.4153, -30.8658, -51.5791, -35.9031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3079, device='cuda:0', dtype=torch.float64)
tensor([-24.5411, -44.3174, -30.8971, -51.4428, -35.9121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5117, device='cuda:0', dtype=torch.float64)
tensor([-24.6002, -44.2270, -31.0713, -51.4922, -35.8739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4190, device='cuda:0', dtype=torch.float64)
tensor([-24.6888, -44.1287, -31.2953, -51.5331, -35.8917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5092, device='cuda:0', dtype=torch.float64)
tensor([-24.8802, -44.0693, -31.8641, -51.8554, -35.9077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5662, device='cuda:0', dtype=torch.float64)
tensor([-24.9974, -44.1394, -32.4010, -52.5521, -35.9825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4547, device='cuda:0', dtype=torch.float64)
tensor([-25.2358, -44.6763, -33.1117, -53.3528, -36.1042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4400, device='cuda:0', dtype=torch.float64)
tensor([-25.5699, -45.2656, -34.0033, -54.1834, -36.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4355, device='cuda:0', dtype=torch.float64)
tensor([-25.8747, -46.1380, -35.0954, -55.4009, -36.5446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4194, device='cuda:0', dtype=torch.float64)
tensor([-26.2349, -46.8795, -36.1322, -56.5706, -36.8881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2332, device='cuda:0', dtype=torch.float64)
tensor([-26.4686, -47.0854, -36.7294, -57.2816, -37.0725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2943, device='cuda:0', dtype=torch.float64)
tensor([-26.6483, -47.0555, -37.3692, -57.8679, -37.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2422, device='cuda:0', dtype=torch.float64)
tensor([-26.6614, -47.2052, -37.7492, -58.5305, -37.5231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4350, device='cuda:0', dtype=torch.float64)
tensor([-26.4858, -47.4883, -37.8842, -58.9854, -37.9496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2992, device='cuda:0', dtype=torch.float64)
tensor([-26.2727, -47.4241, -37.9861, -59.2496, -38.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5123, device='cuda:0', dtype=torch.float64)
tensor([-26.0299, -46.9095, -37.8218, -59.1968, -38.2985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6225, device='cuda:0', dtype=torch.float64)
tensor([-25.8019, -46.6045, -37.4828, -58.8024, -38.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1662, device='cuda:0', dtype=torch.float64)
tensor([-25.8374, -46.4903, -37.3110, -58.6423, -38.5065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3909, device='cuda:0', dtype=torch.float64)
tensor([-25.8082, -46.1203, -36.8331, -58.2830, -38.9234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3480, device='cuda:0', dtype=torch.float64)
tensor([-25.6467, -45.6235, -36.2030, -57.8049, -39.3824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3105, device='cuda:0', dtype=torch.float64)
tensor([-25.6879, -45.5723, -35.8125, -57.3796, -39.8275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1984, device='cuda:0', dtype=torch.float64)
tensor([-25.6042, -45.3346, -35.3058, -57.0053, -40.0697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2734, device='cuda:0', dtype=torch.float64)
tensor([-25.4853, -45.0867, -34.7841, -56.6487, -40.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4949, device='cuda:0', dtype=torch.float64)
tensor([-25.3888, -44.7236, -34.5672, -56.4401, -40.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1672, device='cuda:0', dtype=torch.float64)
tensor([-25.3286, -44.3225, -34.3308, -56.3196, -40.3366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1497, device='cuda:0', dtype=torch.float64)
tensor([-25.3509, -44.1942, -33.9768, -56.0874, -40.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0742, device='cuda:0', dtype=torch.float64)
tensor([-25.3705, -44.1006, -33.6881, -55.9983, -40.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3341, device='cuda:0', dtype=torch.float64)
tensor([-25.3676, -44.4456, -33.7208, -56.2748, -40.9518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2708, device='cuda:0', dtype=torch.float64)
tensor([-25.2272, -44.5425, -33.5533, -56.2806, -41.3088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1299, device='cuda:0', dtype=torch.float64)
tensor([-25.0018, -44.6892, -33.2621, -56.2871, -41.7538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4586, device='cuda:0', dtype=torch.float64)
tensor([-24.9235, -44.8528, -32.9835, -56.4609, -42.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3782, device='cuda:0', dtype=torch.float64)
tensor([-24.7123, -44.7516, -32.6810, -56.4105, -42.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3299, device='cuda:0', dtype=torch.float64)
tensor([-24.5491, -44.3744, -32.4125, -56.1175, -42.0738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5299, device='cuda:0', dtype=torch.float64)
tensor([-24.3904, -44.1193, -32.1628, -55.7778, -41.7879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-24.2777, -44.3239, -31.9931, -55.8122, -41.7578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0377, device='cuda:0', dtype=torch.float64)
tensor([-24.1214, -44.5741, -31.9011, -55.7459, -41.8105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2165, device='cuda:0', dtype=torch.float64)
tensor([-23.9952, -44.8365, -31.8181, -55.5459, -41.7401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2182, device='cuda:0', dtype=torch.float64)
tensor([-23.9072, -44.9762, -31.7216, -55.2229, -41.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1283, device='cuda:0', dtype=torch.float64)
tensor([-23.7774, -45.2106, -31.6707, -54.9910, -41.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4861, device='cuda:0', dtype=torch.float64)
tensor([-23.7703, -45.4786, -31.6624, -54.8360, -41.5855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2635, device='cuda:0', dtype=torch.float64)
tensor([-23.6777, -45.3803, -31.4279, -54.5030, -41.4791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5026, device='cuda:0', dtype=torch.float64)
tensor([-23.5650, -45.5645, -31.3154, -54.6321, -41.4457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3377, device='cuda:0', dtype=torch.float64)
tensor([-23.4537, -45.9874, -31.3242, -54.7365, -41.4960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4099, device='cuda:0', dtype=torch.float64)
tensor([-23.4822, -46.6408, -31.2171, -54.8016, -41.6410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5101, device='cuda:0', dtype=torch.float64)
tensor([-23.5398, -47.5080, -31.2143, -55.0753, -41.8396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2136, device='cuda:0', dtype=torch.float64)
tensor([-23.7378, -48.3583, -31.3164, -55.4148, -41.8514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0504, device='cuda:0', dtype=torch.float64)
tensor([-23.9423, -49.1378, -31.5863, -55.6919, -41.7015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2227, device='cuda:0', dtype=torch.float64)
tensor([-24.2214, -50.2009, -31.9522, -56.0557, -41.5002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3514, device='cuda:0', dtype=torch.float64)
tensor([-24.3703, -51.2438, -32.3240, -56.4882, -41.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2533, device='cuda:0', dtype=torch.float64)
tensor([-24.4183, -52.1016, -32.7260, -57.0751, -41.2565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6423, device='cuda:0', dtype=torch.float64)
tensor([-24.4085, -52.8936, -33.0584, -57.7262, -41.3091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1900, device='cuda:0', dtype=torch.float64)
tensor([-24.3670, -53.7226, -33.5380, -58.2945, -41.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2578, device='cuda:0', dtype=torch.float64)
tensor([-24.3710, -54.8222, -34.1233, -59.1584, -41.3504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3174, device='cuda:0', dtype=torch.float64)
tensor([-24.4950, -55.8744, -34.8948, -59.9885, -41.4656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3666, device='cuda:0', dtype=torch.float64)
tensor([-24.6547, -57.0251, -35.6947, -61.0966, -41.9360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-24.7923, -58.0349, -36.3107, -62.1109, -42.4221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4435, device='cuda:0', dtype=torch.float64)
tensor([-25.0184, -59.3726, -36.9063, -63.6441, -43.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3070, device='cuda:0', dtype=torch.float64)
tensor([-25.1161, -60.6411, -37.4192, -64.9767, -44.0336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0418, device='cuda:0', dtype=torch.float64)
tensor([-25.2676, -61.9302, -38.0356, -66.2590, -44.6074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2796, device='cuda:0', dtype=torch.float64)
tensor([-25.3627, -63.2208, -38.5758, -67.6777, -45.0456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0743, device='cuda:0', dtype=torch.float64)
tensor([-25.5063, -64.5799, -38.9969, -68.9366, -45.5444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1735, device='cuda:0', dtype=torch.float64)
tensor([-25.7257, -65.9735, -39.4708, -70.0162, -46.3340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2191, device='cuda:0', dtype=torch.float64)
tensor([-25.9075, -66.8895, -39.7979, -70.7295, -47.0061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2713, device='cuda:0', dtype=torch.float64)
tensor([-26.1236, -67.2899, -40.1902, -71.3668, -47.5232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2450, device='cuda:0', dtype=torch.float64)
tensor([-26.2633, -67.8481, -40.5845, -71.9480, -48.0407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1302, device='cuda:0', dtype=torch.float64)
tensor([-26.4907, -68.3223, -41.0237, -72.3118, -48.6334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0459, device='cuda:0', dtype=torch.float64)
tensor([-26.7870, -68.7572, -41.4817, -72.8051, -49.2777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-27.1604, -69.9610, -42.0904, -73.5902, -50.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2713, device='cuda:0', dtype=torch.float64)
tensor([-27.6123, -71.1915, -42.7372, -74.3166, -51.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1826, device='cuda:0', dtype=torch.float64)
tensor([-27.9916, -72.0432, -43.2385, -74.9178, -52.0535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3017, device='cuda:0', dtype=torch.float64)
tensor([-28.2227, -72.6654, -43.2717, -75.0763, -52.7225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0827, device='cuda:0', dtype=torch.float64)
tensor([-28.3886, -73.3316, -43.2612, -75.1332, -53.5607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0934, device='cuda:0', dtype=torch.float64)
tensor([-28.6090, -74.2257, -43.4140, -75.3584, -54.3861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1669, device='cuda:0', dtype=torch.float64)
tensor([-28.7333, -75.5025, -43.5255, -75.8083, -55.3163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4510, device='cuda:0', dtype=torch.float64)
tensor([-28.9504, -76.8040, -43.7129, -76.4040, -56.3942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([-29.3334, -78.5760, -44.0565, -77.0859, -57.6781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([-29.7387, -80.3164, -44.4068, -77.6234, -58.7873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2885, device='cuda:0', dtype=torch.float64)
tensor([-29.8559, -81.3732, -44.2732, -77.6556, -59.5845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1772, device='cuda:0', dtype=torch.float64)
tensor([-29.9431, -82.7815, -43.9531, -77.9022, -60.5057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0179, device='cuda:0', dtype=torch.float64)
tensor([-30.0322, -83.7868, -43.4923, -78.1303, -61.2604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1333, device='cuda:0', dtype=torch.float64)
tensor([-30.1338, -84.1693, -43.2681, -77.8914, -61.6542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0680, device='cuda:0', dtype=torch.float64)
tensor([-30.2438, -84.0205, -43.0276, -77.5041, -61.7930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-30.2897, -83.7354, -42.8189, -77.3157, -61.8777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2390, device='cuda:0', dtype=torch.float64)
tensor([-30.4183, -82.9928, -42.6094, -77.1734, -61.4927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3123, device='cuda:0', dtype=torch.float64)
tensor([-30.7145, -82.0014, -42.4392, -76.6368, -60.8568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0723, device='cuda:0', dtype=torch.float64)
tensor([-31.0520, -81.3570, -42.3184, -76.4136, -60.5530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0465, device='cuda:0', dtype=torch.float64)
tensor([-31.2914, -80.6853, -41.9797, -76.2642, -60.2686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9910, device='cuda:0', dtype=torch.float64)
tensor([-31.7090, -80.1586, -41.9744, -76.1418, -60.0785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0248, device='cuda:0', dtype=torch.float64)
tensor([-32.2048, -79.4429, -42.0981, -75.9726, -59.7501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0899, device='cuda:0', dtype=torch.float64)
tensor([-32.7309, -78.9013, -42.2304, -75.7753, -59.5100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2912, device='cuda:0', dtype=torch.float64)
tensor([-32.8510, -77.7928, -42.0276, -75.4283, -58.9144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9945, device='cuda:0', dtype=torch.float64)
tensor([-33.1751, -77.2219, -41.9447, -75.1648, -58.6142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9300, device='cuda:0', dtype=torch.float64)
tensor([-33.4820, -76.5993, -42.0506, -74.8420, -58.4209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0682, device='cuda:0', dtype=torch.float64)
tensor([-33.9837, -76.4645, -42.4276, -74.6516, -58.4183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0799, device='cuda:0', dtype=torch.float64)
tensor([-34.3360, -76.7635, -42.4844, -74.3085, -58.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1920, device='cuda:0', dtype=torch.float64)
tensor([-34.6360, -77.0709, -42.6283, -73.9471, -58.4448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-35.0827, -77.6482, -42.9926, -73.8248, -58.7077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0002, device='cuda:0', dtype=torch.float64)
tensor([-35.3149, -78.0769, -43.0729, -73.2602, -59.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1520, device='cuda:0', dtype=torch.float64)
tensor([-35.4740, -78.9013, -43.1897, -72.9017, -59.6346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1652, device='cuda:0', dtype=torch.float64)
tensor([-35.6327, -79.7172, -43.3914, -72.7570, -60.3977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1442, device='cuda:0', dtype=torch.float64)
tensor([-35.6105, -79.8857, -43.3474, -72.5508, -60.9172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-35.6489, -79.6881, -43.3803, -72.2681, -61.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0786, device='cuda:0', dtype=torch.float64)
tensor([-35.9710, -79.5877, -43.4117, -71.9619, -61.5596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1175, device='cuda:0', dtype=torch.float64)
tensor([-36.4052, -79.1906, -43.6059, -71.6968, -61.7196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-36.6467, -79.4476, -43.5940, -71.5516, -62.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-36.9194, -79.5867, -43.6605, -71.4612, -62.5445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1936, device='cuda:0', dtype=torch.float64)
tensor([-37.1331, -79.7869, -43.7195, -71.3958, -62.8411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3375, device='cuda:0', dtype=torch.float64)
tensor([-37.3733, -79.9828, -43.8836, -71.3901, -62.9822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-37.4851, -79.7836, -43.8698, -71.2814, -63.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1307, device='cuda:0', dtype=torch.float64)
tensor([-37.6921, -79.3847, -44.0081, -71.2034, -63.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1603, device='cuda:0', dtype=torch.float64)
tensor([-37.8898, -79.3956, -44.1577, -71.2793, -63.5805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9417, device='cuda:0', dtype=torch.float64)
tensor([-38.1686, -79.4883, -44.2281, -71.2939, -64.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0742, device='cuda:0', dtype=torch.float64)
tensor([-38.1755, -79.5870, -44.1260, -71.5586, -64.5460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1890, device='cuda:0', dtype=torch.float64)
tensor([-37.8844, -79.5336, -43.8238, -71.3771, -64.5656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1245, device='cuda:0', dtype=torch.float64)
tensor([-37.6934, -79.2196, -43.4596, -71.1296, -64.4801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-37.4341, -78.5348, -43.0468, -70.6463, -64.2099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1196, device='cuda:0', dtype=torch.float64)
tensor([-37.1111, -77.4802, -42.4993, -69.9899, -63.5847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0286, device='cuda:0', dtype=torch.float64)
tensor([-37.0348, -76.3471, -42.2089, -69.4603, -62.8611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1815, device='cuda:0', dtype=torch.float64)
tensor([-36.7990, -75.2822, -41.9252, -69.0302, -62.0865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9411, device='cuda:0', dtype=torch.float64)
tensor([-36.6534, -74.3843, -41.8152, -68.6606, -61.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0602, device='cuda:0', dtype=torch.float64)
tensor([-36.4393, -73.4430, -41.5194, -68.4239, -60.7437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1878, device='cuda:0', dtype=torch.float64)
tensor([-36.2435, -72.9820, -41.0848, -68.3151, -60.5042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0181, device='cuda:0', dtype=torch.float64)
tensor([-36.2173, -72.7297, -40.8282, -68.0897, -60.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0404, device='cuda:0', dtype=torch.float64)
tensor([-36.3364, -72.8569, -40.8296, -68.0263, -60.5730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1449, device='cuda:0', dtype=torch.float64)
tensor([-36.5072, -73.5623, -40.6819, -68.0409, -61.0184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0262, device='cuda:0', dtype=torch.float64)
tensor([-36.7062, -74.1883, -40.4679, -68.0398, -61.2698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0529, device='cuda:0', dtype=torch.float64)
tensor([-36.7682, -74.9165, -40.3731, -68.1909, -61.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2011, device='cuda:0', dtype=torch.float64)
tensor([-36.8337, -75.8722, -40.3891, -68.5543, -62.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0686, device='cuda:0', dtype=torch.float64)
tensor([-37.1047, -76.4011, -40.6425, -68.9461, -62.5983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0404, device='cuda:0', dtype=torch.float64)
tensor([-37.2950, -76.8774, -40.7518, -69.2520, -62.9746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1669, device='cuda:0', dtype=torch.float64)
tensor([-37.5440, -77.6399, -41.0206, -69.7824, -63.6200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8275, device='cuda:0', dtype=torch.float64)
tensor([-37.6352, -78.0786, -41.1256, -70.2047, -64.0374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1833, device='cuda:0', dtype=torch.float64)
tensor([-37.6971, -78.3977, -41.1658, -70.9543, -64.4346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0638, device='cuda:0', dtype=torch.float64)
tensor([-37.7748, -78.2868, -41.1724, -71.6014, -64.4393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1812, device='cuda:0', dtype=torch.float64)
tensor([-37.6093, -77.4344, -40.8262, -72.0307, -64.0670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0857, device='cuda:0', dtype=torch.float64)
tensor([-37.5734, -77.0029, -40.6413, -72.3218, -63.8809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1129, device='cuda:0', dtype=torch.float64)
tensor([-37.6662, -76.7426, -40.5540, -72.7040, -63.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0640, device='cuda:0', dtype=torch.float64)
tensor([-37.9498, -76.6903, -40.6433, -73.1655, -63.3995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1582, device='cuda:0', dtype=torch.float64)
tensor([-38.0487, -75.8681, -40.4307, -73.2129, -62.7355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1159, device='cuda:0', dtype=torch.float64)
tensor([-38.1987, -74.6371, -40.2650, -73.1520, -61.8471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0364, device='cuda:0', dtype=torch.float64)
tensor([-38.1968, -73.7350, -39.9136, -73.1138, -61.1659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0547, device='cuda:0', dtype=torch.float64)
tensor([-38.0629, -72.7955, -39.3722, -72.9860, -60.6137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([-38.2726, -72.6187, -39.1343, -73.2893, -60.4508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2084, device='cuda:0', dtype=torch.float64)
tensor([-38.5281, -71.9643, -38.9538, -73.5090, -60.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0039, device='cuda:0', dtype=torch.float64)
tensor([-38.8513, -71.1195, -38.8630, -73.5735, -60.1095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9751, device='cuda:0', dtype=torch.float64)
tensor([-39.1455, -69.8378, -38.8866, -73.5112, -59.8638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9801, device='cuda:0', dtype=torch.float64)
tensor([-39.3696, -68.8690, -39.0064, -73.5678, -59.7749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1003, device='cuda:0', dtype=torch.float64)
tensor([-39.6285, -68.0339, -39.0758, -73.6088, -59.7555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-39.8044, -67.1300, -39.0372, -73.5082, -59.7377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1665, device='cuda:0', dtype=torch.float64)
tensor([-40.0496, -66.0790, -38.8504, -73.3748, -59.7319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1750, device='cuda:0', dtype=torch.float64)
tensor([-40.5046, -65.2005, -38.6454, -73.2730, -59.6564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1491, device='cuda:0', dtype=torch.float64)
tensor([-40.9867, -64.2773, -38.3785, -73.2836, -59.5074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-41.6363, -63.5784, -38.3698, -73.3803, -59.5883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2257, device='cuda:0', dtype=torch.float64)
tensor([-41.9282, -62.8081, -38.1752, -73.1531, -59.6524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0785, device='cuda:0', dtype=torch.float64)
tensor([-42.1811, -61.9723, -38.0275, -72.9033, -59.5522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1206, device='cuda:0', dtype=torch.float64)
tensor([-42.4734, -61.5501, -38.0897, -72.8556, -59.8077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([-42.6337, -61.0589, -38.0745, -72.5813, -59.9226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9924, device='cuda:0', dtype=torch.float64)
tensor([-42.7414, -60.3833, -38.1757, -72.4566, -59.7506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0790, device='cuda:0', dtype=torch.float64)
tensor([-42.6108, -59.9916, -37.9999, -72.3525, -59.7195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9255, device='cuda:0', dtype=torch.float64)
tensor([-42.4159, -59.8717, -37.8266, -72.4387, -59.8846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1287, device='cuda:0', dtype=torch.float64)
tensor([-42.4014, -59.6099, -37.6461, -72.2915, -59.6927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9999, device='cuda:0', dtype=torch.float64)
tensor([-42.3334, -59.4619, -37.3281, -72.1544, -59.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1127, device='cuda:0', dtype=torch.float64)
tensor([-42.3556, -59.5848, -37.1217, -72.1885, -58.9789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2041, device='cuda:0', dtype=torch.float64)
tensor([-42.5716, -59.8074, -37.2196, -72.7872, -58.5414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([-42.8476, -60.1728, -37.5385, -73.6079, -58.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0973, device='cuda:0', dtype=torch.float64)
tensor([-43.1878, -60.5784, -37.9122, -74.3611, -57.7289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8682, device='cuda:0', dtype=torch.float64)
tensor([-43.6047, -60.7716, -38.2340, -74.9748, -57.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-44.0208, -60.9298, -38.5083, -75.5653, -57.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9890, device='cuda:0', dtype=torch.float64)
tensor([-44.5852, -60.8440, -38.9507, -75.9979, -56.8783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-45.0449, -60.8804, -39.1940, -76.1299, -56.5815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0885, device='cuda:0', dtype=torch.float64)
tensor([-45.7114, -61.4147, -39.7119, -76.5712, -56.5631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1261, device='cuda:0', dtype=torch.float64)
tensor([-46.6960, -62.2496, -40.4068, -77.0948, -56.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1316, device='cuda:0', dtype=torch.float64)
tensor([-47.7297, -63.1401, -41.1783, -77.6458, -56.3926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-48.5518, -63.9091, -41.9207, -78.2344, -56.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2496, device='cuda:0', dtype=torch.float64)
tensor([-49.0731, -64.0542, -42.5203, -78.4960, -55.9598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8125, device='cuda:0', dtype=torch.float64)
tensor([-49.6611, -64.4179, -43.2068, -78.8486, -55.6619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1008, device='cuda:0', dtype=torch.float64)
tensor([-50.1637, -64.7299, -43.7890, -79.1629, -55.4633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9591, device='cuda:0', dtype=torch.float64)
tensor([-50.5107, -64.9063, -44.1880, -79.4284, -55.4459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0712, device='cuda:0', dtype=torch.float64)
tensor([-50.3324, -64.7629, -43.9658, -79.3672, -55.4747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8739, device='cuda:0', dtype=torch.float64)
tensor([-50.2270, -64.3282, -43.8358, -79.3730, -55.5655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1015, device='cuda:0', dtype=torch.float64)
tensor([-50.1714, -63.9513, -43.7655, -79.2716, -55.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9103, device='cuda:0', dtype=torch.float64)
tensor([-50.2208, -63.8016, -43.6181, -79.4440, -55.7429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9615, device='cuda:0', dtype=torch.float64)
tensor([-50.4069, -64.2180, -43.6004, -79.7907, -56.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9599, device='cuda:0', dtype=torch.float64)
tensor([-50.3816, -64.1943, -43.3800, -79.8909, -56.4913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0545, device='cuda:0', dtype=torch.float64)
tensor([-50.4406, -64.0479, -43.2616, -80.1399, -56.8961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0462, device='cuda:0', dtype=torch.float64)
tensor([-50.6260, -64.2046, -43.1918, -80.5631, -57.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1439, device='cuda:0', dtype=torch.float64)
tensor([-51.3945, -64.7400, -43.3969, -81.3448, -57.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9257, device='cuda:0', dtype=torch.float64)
tensor([-52.0878, -65.4695, -43.4643, -82.2133, -57.6987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1806, device='cuda:0', dtype=torch.float64)
tensor([-52.7856, -66.5042, -43.6453, -83.2164, -58.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8718, device='cuda:0', dtype=torch.float64)
tensor([-53.4170, -67.2440, -43.7589, -83.9577, -58.8797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-54.2523, -68.1729, -44.1878, -84.8295, -59.4412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9745, device='cuda:0', dtype=torch.float64)
tensor([-54.6336, -69.4832, -44.3062, -85.4738, -60.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0074, device='cuda:0', dtype=torch.float64)
tensor([-54.8281, -70.4210, -44.5145, -86.0050, -60.9938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9530, device='cuda:0', dtype=torch.float64)
tensor([-55.0613, -71.4710, -44.6592, -86.4917, -61.5898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-55.2822, -72.1004, -44.9292, -86.9534, -62.0173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2574, device='cuda:0', dtype=torch.float64)
tensor([-55.5174, -73.2782, -45.1652, -87.2465, -62.5490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1123, device='cuda:0', dtype=torch.float64)
tensor([-55.6765, -73.9981, -45.4414, -87.6313, -63.0580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1035, device='cuda:0', dtype=torch.float64)
tensor([-56.3034, -74.7215, -45.8690, -88.1919, -63.4651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0215, device='cuda:0', dtype=torch.float64)
tensor([-57.0691, -75.3396, -46.4938, -88.7905, -63.6027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8376, device='cuda:0', dtype=torch.float64)
tensor([-57.9655, -75.8467, -47.2740, -89.5377, -63.7886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0508, device='cuda:0', dtype=torch.float64)
tensor([-58.6560, -76.5348, -47.7539, -90.1383, -63.9934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9208, device='cuda:0', dtype=torch.float64)
tensor([-59.3454, -77.1789, -48.3143, -90.8650, -64.1864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9053, device='cuda:0', dtype=torch.float64)
tensor([-59.9481, -78.0359, -48.8359, -91.6830, -64.3746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7868, device='cuda:0', dtype=torch.float64)
tensor([-60.6346, -79.1259, -49.4800, -92.6851, -64.7285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0037, device='cuda:0', dtype=torch.float64)
tensor([-61.7704, -80.2009, -50.5809, -94.1686, -65.0843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9364, device='cuda:0', dtype=torch.float64)
tensor([-63.0148, -81.2359, -51.8511, -95.7105, -65.3965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9147, device='cuda:0', dtype=torch.float64)
tensor([-64.0782, -81.9506, -53.1203, -97.2250, -65.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9193, device='cuda:0', dtype=torch.float64)
tensor([-65.2679, -82.5363, -54.6420, -98.8588, -65.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9736, device='cuda:0', dtype=torch.float64)
tensor([-65.9083, -82.7272, -55.5197, -99.7000, -65.2912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([ -66.2797,  -82.5988,  -56.2044, -100.4725,  -65.1760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8948, device='cuda:0', dtype=torch.float64)
tensor([ -66.7703,  -82.4104,  -57.0878, -101.1787,  -64.8906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9309, device='cuda:0', dtype=torch.float64)
tensor([ -67.5424,  -82.0061,  -58.2174, -102.0457,  -64.6291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([ -68.3448,  -82.1220,  -59.3193, -103.1161,  -64.9680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0758, device='cuda:0', dtype=torch.float64)
tensor([ -68.6431,  -82.1460,  -60.0520, -103.9107,  -65.2961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9876, device='cuda:0', dtype=torch.float64)
tensor([ -68.8615,  -81.8149,  -60.5278, -104.2351,  -65.5362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9099, device='cuda:0', dtype=torch.float64)
tensor([ -68.8747,  -81.7887,  -60.6873, -104.4047,  -66.1122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9526, device='cuda:0', dtype=torch.float64)
tensor([ -68.6992,  -81.3963,  -60.3620, -104.2110,  -66.8424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9819, device='cuda:0', dtype=torch.float64)
tensor([ -68.3600,  -80.8057,  -59.5922, -103.7929,  -67.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9711, device='cuda:0', dtype=torch.float64)
tensor([ -68.3522,  -80.6659,  -59.1836, -103.7061,  -68.5678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9641, device='cuda:0', dtype=torch.float64)
tensor([ -67.9311,  -80.0601,  -58.3888, -103.3301,  -69.3162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1286, device='cuda:0', dtype=torch.float64)
tensor([ -67.3063,  -79.3422,  -57.2294, -102.8491,  -70.4565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9025, device='cuda:0', dtype=torch.float64)
tensor([ -66.8878,  -78.7184,  -56.3574, -102.5215,  -71.6563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9240, device='cuda:0', dtype=torch.float64)
tensor([ -66.6788,  -78.5973,  -55.7314, -102.3113,  -72.9925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8437, device='cuda:0', dtype=torch.float64)
tensor([ -66.4689,  -78.2811,  -55.2767, -102.2165,  -73.9996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9061, device='cuda:0', dtype=torch.float64)
tensor([ -66.3616,  -78.0197,  -55.0049, -102.3343,  -74.8901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8869, device='cuda:0', dtype=torch.float64)
tensor([ -66.5174,  -78.0067,  -55.0781, -102.6006,  -75.6809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8646, device='cuda:0', dtype=torch.float64)
tensor([ -66.5985,  -77.8002,  -55.1395, -102.6049,  -76.2415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([ -66.7207,  -77.1235,  -55.2385, -102.2649,  -76.4586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9355, device='cuda:0', dtype=torch.float64)
tensor([ -67.1977,  -76.8597,  -55.5042, -102.2145,  -76.7018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9063, device='cuda:0', dtype=torch.float64)
tensor([ -67.5845,  -76.7305,  -55.6762, -102.0094,  -76.8771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9904, device='cuda:0', dtype=torch.float64)
tensor([ -67.7164,  -76.2461,  -55.6936, -101.5601,  -76.5254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8818, device='cuda:0', dtype=torch.float64)
tensor([ -67.9518,  -75.9599,  -55.8137, -101.2792,  -76.1641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8524, device='cuda:0', dtype=torch.float64)
tensor([ -68.2690,  -75.6872,  -56.1813, -101.0238,  -75.3723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8662, device='cuda:0', dtype=torch.float64)
tensor([ -68.6013,  -75.3985,  -56.4603, -100.7670,  -74.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9929, device='cuda:0', dtype=torch.float64)
tensor([ -68.7132,  -74.7380,  -56.5138, -100.3459,  -73.4164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9114, device='cuda:0', dtype=torch.float64)
tensor([ -68.7521,  -74.3116,  -56.7222, -100.2320,  -72.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7688, device='cuda:0', dtype=torch.float64)
tensor([-68.6874, -73.8495, -56.8354, -99.9971, -71.5066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8213, device='cuda:0', dtype=torch.float64)
tensor([-68.5250, -73.3822, -56.9266, -99.8452, -70.7788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-68.3849, -73.2515, -57.1719, -99.8906, -70.3051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8460, device='cuda:0', dtype=torch.float64)
tensor([ -68.4126,  -73.5651,  -57.5411, -100.0327,  -69.9749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([ -68.7771,  -74.3290,  -58.2880, -100.4601,  -69.5014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0186, device='cuda:0', dtype=torch.float64)
tensor([ -69.2623,  -74.9220,  -59.3113, -101.1964,  -68.7746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9166, device='cuda:0', dtype=torch.float64)
tensor([ -69.7290,  -75.3976,  -60.4506, -101.7931,  -68.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9105, device='cuda:0', dtype=torch.float64)
tensor([ -70.4927,  -76.0665,  -61.5716, -102.4323,  -67.6609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9525, device='cuda:0', dtype=torch.float64)
tensor([ -71.2521,  -76.6911,  -62.4848, -103.1421,  -67.3453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8797, device='cuda:0', dtype=torch.float64)
tensor([ -71.9183,  -77.2420,  -63.2426, -103.7581,  -66.8204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7784, device='cuda:0', dtype=torch.float64)
tensor([ -72.4517,  -77.4558,  -63.8209, -104.1500,  -66.0670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8648, device='cuda:0', dtype=torch.float64)
tensor([ -73.0811,  -77.7546,  -64.5310, -104.5472,  -65.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0671, device='cuda:0', dtype=torch.float64)
tensor([ -73.3559,  -77.9031,  -65.0919, -104.6673,  -65.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8061, device='cuda:0', dtype=torch.float64)
tensor([ -73.6107,  -78.0914,  -65.7699, -104.8529,  -65.2314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8041, device='cuda:0', dtype=torch.float64)
tensor([ -74.0698,  -78.5340,  -66.5021, -105.1885,  -65.2569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0013, device='cuda:0', dtype=torch.float64)
tensor([ -74.5558,  -78.7770,  -67.3287, -105.4807,  -65.3138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9281, device='cuda:0', dtype=torch.float64)
tensor([ -75.2413,  -79.2293,  -68.1888, -105.9004,  -65.3811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8816, device='cuda:0', dtype=torch.float64)
tensor([ -76.0701,  -79.8255,  -69.1785, -106.4155,  -65.4713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7985, device='cuda:0', dtype=torch.float64)
tensor([ -76.5070,  -80.2076,  -69.9275, -106.5905,  -65.5742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0346, device='cuda:0', dtype=torch.float64)
tensor([ -76.9749,  -80.7203,  -70.5046, -106.7338,  -65.5461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9282, device='cuda:0', dtype=torch.float64)
tensor([ -77.3593,  -81.2734,  -70.8260, -106.7798,  -65.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9038, device='cuda:0', dtype=torch.float64)
tensor([ -78.0598,  -82.2653,  -71.5074, -107.2207,  -66.1331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8836, device='cuda:0', dtype=torch.float64)
tensor([ -78.3944,  -82.8037,  -71.6970, -107.3259,  -66.4904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8001, device='cuda:0', dtype=torch.float64)
tensor([ -79.1263,  -83.9393,  -72.0703, -107.8680,  -67.1795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8198, device='cuda:0', dtype=torch.float64)
tensor([ -80.0760,  -84.9389,  -72.7117, -108.4634,  -67.9185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9211, device='cuda:0', dtype=torch.float64)
tensor([ -80.7973,  -85.5018,  -73.1466, -108.9096,  -68.8333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([ -80.9984,  -85.7120,  -73.2374, -108.9338,  -69.7172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9034, device='cuda:0', dtype=torch.float64)
tensor([ -81.3465,  -85.8845,  -73.5791, -108.9893,  -70.1200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8221, device='cuda:0', dtype=torch.float64)
tensor([ -81.4991,  -86.2336,  -73.8795, -109.0453,  -70.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8824, device='cuda:0', dtype=torch.float64)
tensor([ -81.4549,  -86.4111,  -73.8556, -108.9698,  -70.6895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7914, device='cuda:0', dtype=torch.float64)
tensor([ -81.4849,  -86.8291,  -73.7074, -109.2162,  -71.4830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8663, device='cuda:0', dtype=torch.float64)
tensor([ -81.4429,  -87.1324,  -73.7086, -109.6248,  -71.9857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8317, device='cuda:0', dtype=torch.float64)
tensor([ -80.9294,  -87.3720,  -73.2703, -109.6861,  -72.5527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8987, device='cuda:0', dtype=torch.float64)
tensor([ -80.4901,  -87.6005,  -72.9937, -109.7718,  -72.8881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7950, device='cuda:0', dtype=torch.float64)
tensor([ -80.1172,  -87.7553,  -72.7942, -109.8844,  -73.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8708, device='cuda:0', dtype=torch.float64)
tensor([ -79.5028,  -87.6057,  -72.4767, -109.9826,  -73.5383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9498, device='cuda:0', dtype=torch.float64)
tensor([ -78.6717,  -87.3268,  -71.8747, -109.9786,  -73.6845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8865, device='cuda:0', dtype=torch.float64)
tensor([ -77.9330,  -87.1318,  -71.2101, -109.8942,  -73.9110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9272, device='cuda:0', dtype=torch.float64)
tensor([ -77.0472,  -86.8283,  -70.2670, -109.5240,  -74.0448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9151, device='cuda:0', dtype=torch.float64)
tensor([ -76.4283,  -86.8592,  -69.6345, -109.5100,  -74.4401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8969, device='cuda:0', dtype=torch.float64)
tensor([ -75.4459,  -86.1088,  -68.6996, -109.0107,  -74.3857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([ -74.5825,  -85.4920,  -67.8872, -108.5181,  -74.4871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7734, device='cuda:0', dtype=torch.float64)
tensor([ -73.9178,  -84.8137,  -67.2697, -108.1618,  -74.5674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7199, device='cuda:0', dtype=torch.float64)
tensor([ -73.5015,  -84.1662,  -66.7316, -107.8095,  -74.4829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8223, device='cuda:0', dtype=torch.float64)
tensor([ -72.6997,  -82.6944,  -65.7643, -106.9224,  -74.1522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8105, device='cuda:0', dtype=torch.float64)
tensor([ -72.0947,  -81.3472,  -64.9694, -106.0391,  -73.6302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8932, device='cuda:0', dtype=torch.float64)
tensor([ -71.5014,  -79.5066,  -64.2560, -105.2527,  -73.0609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8586, device='cuda:0', dtype=torch.float64)
tensor([ -70.8228,  -77.6423,  -63.3787, -104.3093,  -72.4227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7342, device='cuda:0', dtype=torch.float64)
tensor([ -70.4321,  -76.1400,  -62.8452, -103.5114,  -71.6516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7236, device='cuda:0', dtype=torch.float64)
tensor([ -69.9430,  -74.4982,  -62.2765, -102.5209,  -70.8757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8649, device='cuda:0', dtype=torch.float64)
tensor([ -69.5402,  -73.2271,  -61.9309, -101.6694,  -70.1105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8534, device='cuda:0', dtype=torch.float64)
tensor([ -69.0721,  -72.0043,  -61.3168, -100.6196,  -69.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7135, device='cuda:0', dtype=torch.float64)
tensor([-68.8012, -71.2725, -60.7805, -99.6656, -69.4133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7605, device='cuda:0', dtype=torch.float64)
tensor([-68.3714, -70.6766, -60.1575, -98.7350, -69.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7614, device='cuda:0', dtype=torch.float64)
tensor([-67.9109, -70.0895, -59.6517, -97.8022, -69.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7693, device='cuda:0', dtype=torch.float64)
tensor([-67.4658, -69.4261, -59.2740, -96.9206, -69.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7397, device='cuda:0', dtype=torch.float64)
tensor([-67.0275, -68.6652, -58.8307, -95.9517, -69.3072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8370, device='cuda:0', dtype=torch.float64)
tensor([-66.5090, -67.8995, -58.1828, -94.9778, -69.4028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7209, device='cuda:0', dtype=torch.float64)
tensor([-66.0857, -67.2416, -57.5402, -94.2387, -69.5028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8488, device='cuda:0', dtype=torch.float64)
tensor([-66.0174, -67.0323, -57.2543, -93.9271, -69.7550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-65.9575, -66.7827, -57.2146, -93.6648, -69.8326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7246, device='cuda:0', dtype=torch.float64)
tensor([-66.0390, -66.7424, -57.1976, -93.4513, -69.9010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([-66.4667, -67.1334, -57.4868, -93.5734, -70.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8301, device='cuda:0', dtype=torch.float64)
tensor([-66.8331, -67.2379, -57.8270, -93.7270, -70.9495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6580, device='cuda:0', dtype=torch.float64)
tensor([-67.0093, -67.4170, -57.9021, -93.8569, -71.7949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-67.5652, -68.0648, -58.4333, -94.3854, -72.7661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7358, device='cuda:0', dtype=torch.float64)
tensor([-68.0373, -68.4670, -58.8935, -94.7998, -73.6073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8169, device='cuda:0', dtype=torch.float64)
tensor([-68.4460, -68.7131, -59.2625, -94.9632, -74.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8833, device='cuda:0', dtype=torch.float64)
tensor([-68.8500, -68.9514, -59.4542, -94.9861, -74.9347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8565, device='cuda:0', dtype=torch.float64)
tensor([-68.9344, -68.5343, -59.3937, -94.5776, -75.1423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6554, device='cuda:0', dtype=torch.float64)
tensor([-69.1564, -68.0078, -59.4419, -94.3368, -75.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7215, device='cuda:0', dtype=torch.float64)
tensor([-69.4406, -67.5401, -59.7841, -94.2447, -75.0518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6844, device='cuda:0', dtype=torch.float64)
tensor([-69.7598, -67.2098, -60.1753, -94.2585, -74.7607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8033, device='cuda:0', dtype=torch.float64)
tensor([-70.0311, -66.7918, -60.6148, -94.3614, -74.7693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6585, device='cuda:0', dtype=torch.float64)
tensor([-70.1750, -66.3802, -60.8542, -94.3360, -74.7038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6727, device='cuda:0', dtype=torch.float64)
tensor([-70.2292, -66.2338, -61.0220, -94.4023, -74.7491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7460, device='cuda:0', dtype=torch.float64)
tensor([-70.2336, -66.2872, -60.9555, -94.5243, -74.9264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-70.1868, -66.4798, -60.8917, -94.5410, -75.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6640, device='cuda:0', dtype=torch.float64)
tensor([-69.8329, -66.3772, -60.5435, -94.2800, -75.5314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8052, device='cuda:0', dtype=torch.float64)
tensor([-69.4001, -65.7406, -60.0893, -93.7793, -75.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8480, device='cuda:0', dtype=torch.float64)
tensor([-68.9210, -65.4319, -59.6993, -93.3217, -75.7032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6811, device='cuda:0', dtype=torch.float64)
tensor([-68.4524, -65.2235, -59.2931, -92.8614, -75.9536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7205, device='cuda:0', dtype=torch.float64)
tensor([-68.1077, -65.2144, -58.7904, -92.5261, -76.4732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5856, device='cuda:0', dtype=torch.float64)
tensor([-67.8588, -65.4680, -58.3812, -92.3528, -76.8974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-67.8199, -65.6275, -58.1949, -92.3455, -77.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6511, device='cuda:0', dtype=torch.float64)
tensor([-67.6467, -65.9094, -57.8648, -92.3737, -77.4910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7155, device='cuda:0', dtype=torch.float64)
tensor([-67.4754, -66.2477, -57.6197, -92.5106, -77.9308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7219, device='cuda:0', dtype=torch.float64)
tensor([-67.4405, -66.7606, -57.3583, -92.6329, -78.4054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6720, device='cuda:0', dtype=torch.float64)
tensor([-67.5223, -67.7207, -57.0624, -92.8845, -78.9679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6576, device='cuda:0', dtype=torch.float64)
tensor([-67.7206, -68.6945, -56.9062, -93.1253, -79.3498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6258, device='cuda:0', dtype=torch.float64)
tensor([-67.9865, -69.5476, -56.9466, -93.3912, -79.6658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7481, device='cuda:0', dtype=torch.float64)
tensor([-68.0785, -70.3766, -57.0109, -93.5283, -80.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7241, device='cuda:0', dtype=torch.float64)
tensor([-68.1504, -71.2988, -57.1769, -93.6755, -80.3890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6210, device='cuda:0', dtype=torch.float64)
tensor([-68.2190, -72.2324, -57.4753, -93.8834, -80.6780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6805, device='cuda:0', dtype=torch.float64)
tensor([-68.2843, -72.9144, -57.6130, -93.8284, -81.0062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6492, device='cuda:0', dtype=torch.float64)
tensor([-68.2934, -73.8338, -57.7302, -94.0790, -81.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7200, device='cuda:0', dtype=torch.float64)
tensor([-68.3434, -74.7470, -57.9986, -94.4467, -81.7715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8316, device='cuda:0', dtype=torch.float64)
tensor([-68.3894, -75.7212, -58.3784, -94.8230, -82.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6396, device='cuda:0', dtype=torch.float64)
tensor([-68.4798, -76.7507, -58.7326, -95.1606, -82.6566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5995, device='cuda:0', dtype=torch.float64)
tensor([-68.7492, -77.5225, -59.2279, -95.4352, -82.9451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6847, device='cuda:0', dtype=torch.float64)
tensor([-68.9767, -78.6812, -59.6125, -95.9378, -83.3975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7330, device='cuda:0', dtype=torch.float64)
tensor([-69.3633, -80.2204, -60.0674, -96.6215, -84.0749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7409, device='cuda:0', dtype=torch.float64)
tensor([-69.7207, -81.0702, -60.5814, -97.3632, -84.5430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6363, device='cuda:0', dtype=torch.float64)
tensor([-69.9608, -81.8160, -60.8397, -97.8655, -84.9163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6716, device='cuda:0', dtype=torch.float64)
tensor([-70.0470, -82.2329, -60.9476, -98.3699, -85.4087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8034, device='cuda:0', dtype=torch.float64)
tensor([-70.1448, -82.3264, -61.1585, -98.9379, -85.8739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6026, device='cuda:0', dtype=torch.float64)
tensor([-70.1341, -82.6788, -61.3755, -99.4818, -86.4595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6183, device='cuda:0', dtype=torch.float64)
tensor([-70.1676, -83.0662, -61.6492, -99.9986, -86.9318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5744, device='cuda:0', dtype=torch.float64)
tensor([ -70.1849,  -83.6373,  -61.9881, -100.6077,  -87.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6585, device='cuda:0', dtype=torch.float64)
tensor([ -70.1363,  -84.4992,  -62.2199, -101.4188,  -88.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6202, device='cuda:0', dtype=torch.float64)
tensor([ -69.9964,  -84.9967,  -62.3477, -102.0960,  -88.9743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7075, device='cuda:0', dtype=torch.float64)
tensor([ -70.0504,  -85.2023,  -62.5783, -102.5489,  -89.5353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6927, device='cuda:0', dtype=torch.float64)
tensor([ -69.9567,  -85.0882,  -62.5004, -102.7202,  -90.0324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7364, device='cuda:0', dtype=torch.float64)
tensor([ -69.8640,  -85.4238,  -62.6586, -103.0210,  -90.4729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5499, device='cuda:0', dtype=torch.float64)
tensor([ -70.0537,  -85.6450,  -63.0530, -103.4751,  -90.8384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6410, device='cuda:0', dtype=torch.float64)
tensor([ -70.2517,  -85.9450,  -63.4928, -103.9027,  -91.4247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([ -70.3879,  -86.2154,  -64.0373, -104.4362,  -91.6809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5895, device='cuda:0', dtype=torch.float64)
tensor([ -70.5818,  -86.8621,  -64.6570, -105.1089,  -91.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6381, device='cuda:0', dtype=torch.float64)
tensor([ -70.9652,  -87.6635,  -65.4766, -105.9940,  -92.5623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6694, device='cuda:0', dtype=torch.float64)
tensor([ -71.1981,  -88.1485,  -66.1455, -106.6823,  -92.9703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6134, device='cuda:0', dtype=torch.float64)
tensor([ -71.4294,  -88.6782,  -66.7462, -107.5282,  -93.2148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6152, device='cuda:0', dtype=torch.float64)
tensor([ -71.4447,  -89.0197,  -67.2750, -108.2078,  -93.3093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5843, device='cuda:0', dtype=torch.float64)
tensor([ -71.4403,  -89.1059,  -67.7265, -108.7368,  -93.2769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6030, device='cuda:0', dtype=torch.float64)
tensor([ -71.3998,  -88.9371,  -68.0245, -109.1005,  -93.2865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6673, device='cuda:0', dtype=torch.float64)
tensor([ -71.2480,  -88.6154,  -68.2527, -109.2338,  -93.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6187, device='cuda:0', dtype=torch.float64)
tensor([ -71.2445,  -88.1367,  -68.5954, -109.3084,  -92.9988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5306, device='cuda:0', dtype=torch.float64)
tensor([ -71.2590,  -87.9233,  -68.9596, -109.5127,  -92.7402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7186, device='cuda:0', dtype=torch.float64)
tensor([ -71.5001,  -87.5461,  -69.3463, -109.8776,  -92.5287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5742, device='cuda:0', dtype=torch.float64)
tensor([ -71.6977,  -86.7293,  -69.4097, -109.8631,  -92.0924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7282, device='cuda:0', dtype=torch.float64)
tensor([ -71.7308,  -85.9772,  -69.2014, -109.7652,  -91.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5996, device='cuda:0', dtype=torch.float64)
tensor([ -71.8881,  -85.4293,  -69.2200, -109.8668,  -91.4451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6334, device='cuda:0', dtype=torch.float64)
tensor([ -71.7798,  -84.9423,  -68.9860, -109.7712,  -90.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6138, device='cuda:0', dtype=torch.float64)
tensor([ -71.3870,  -84.3154,  -68.6227, -109.5556,  -90.1986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5622, device='cuda:0', dtype=torch.float64)
tensor([ -70.8685,  -83.6474,  -68.0567, -109.3456,  -89.6038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5832, device='cuda:0', dtype=torch.float64)
tensor([ -70.4299,  -83.0869,  -67.6251, -109.1969,  -88.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6163, device='cuda:0', dtype=torch.float64)
tensor([ -69.7553,  -82.6938,  -67.1034, -109.0762,  -88.4075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6229, device='cuda:0', dtype=torch.float64)
tensor([ -69.0326,  -82.4880,  -66.3603, -108.6925,  -88.1339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7671, device='cuda:0', dtype=torch.float64)
tensor([ -68.5438,  -82.4092,  -65.9344, -108.6231,  -88.0171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6038, device='cuda:0', dtype=torch.float64)
tensor([ -67.9084,  -82.5029,  -65.4151, -108.4599,  -87.9921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5409, device='cuda:0', dtype=torch.float64)
tensor([ -67.4133,  -82.6235,  -64.9966, -108.4656,  -88.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6328, device='cuda:0', dtype=torch.float64)
tensor([ -66.9034,  -82.7113,  -64.5808, -108.2912,  -87.8731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6494, device='cuda:0', dtype=torch.float64)
tensor([ -66.4795,  -82.7495,  -64.2328, -108.3034,  -87.9529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5364, device='cuda:0', dtype=torch.float64)
tensor([ -66.1615,  -83.1272,  -63.9291, -108.4730,  -88.2052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5573, device='cuda:0', dtype=torch.float64)
tensor([ -65.8015,  -83.3683,  -63.5551, -108.6016,  -88.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5460, device='cuda:0', dtype=torch.float64)
tensor([ -65.5287,  -83.8961,  -63.3716, -108.8094,  -88.8142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4883, device='cuda:0', dtype=torch.float64)
tensor([ -65.2933,  -84.3907,  -63.2136, -108.9469,  -89.2898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5409, device='cuda:0', dtype=torch.float64)
tensor([ -65.0598,  -84.9770,  -63.0052, -108.9741,  -89.8046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4512, device='cuda:0', dtype=torch.float64)
tensor([ -64.7328,  -85.4880,  -62.6464, -108.9454,  -90.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6444, device='cuda:0', dtype=torch.float64)
tensor([ -64.4027,  -86.0143,  -62.1850, -108.8606,  -90.8152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6776, device='cuda:0', dtype=torch.float64)
tensor([ -64.2065,  -87.0301,  -61.9153, -109.0319,  -91.3756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5495, device='cuda:0', dtype=torch.float64)
tensor([ -64.2007,  -87.9869,  -61.7535, -109.4232,  -91.8556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5047, device='cuda:0', dtype=torch.float64)
tensor([ -64.2229,  -89.2140,  -61.6933, -109.9785,  -92.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6432, device='cuda:0', dtype=torch.float64)
tensor([ -64.3262,  -90.2609,  -61.6496, -110.5583,  -93.2389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5195, device='cuda:0', dtype=torch.float64)
tensor([ -64.3254,  -91.1484,  -61.4777, -110.9322,  -93.6922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5513, device='cuda:0', dtype=torch.float64)
tensor([ -64.3084,  -91.9979,  -61.3631, -111.2831,  -94.1966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5915, device='cuda:0', dtype=torch.float64)
tensor([ -64.3518,  -92.9750,  -61.5929, -111.7177,  -94.6431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6059, device='cuda:0', dtype=torch.float64)
tensor([ -64.3980,  -93.7676,  -61.8025, -112.1388,  -94.9606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6031, device='cuda:0', dtype=torch.float64)
tensor([ -64.4837,  -94.0401,  -62.1309, -112.4537,  -95.2207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5317, device='cuda:0', dtype=torch.float64)
tensor([ -64.5112,  -94.4480,  -62.2367, -112.6450,  -95.2954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6056, device='cuda:0', dtype=torch.float64)
tensor([ -64.4013,  -94.2640,  -62.1964, -112.5021,  -95.1272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6100, device='cuda:0', dtype=torch.float64)
tensor([ -64.3524,  -94.1556,  -62.1622, -112.3067,  -94.7628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5972, device='cuda:0', dtype=torch.float64)
tensor([ -64.2923,  -93.9892,  -62.1305, -112.1965,  -94.6060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5481, device='cuda:0', dtype=torch.float64)
tensor([ -64.3490,  -94.1181,  -62.0073, -112.1590,  -94.7376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5070, device='cuda:0', dtype=torch.float64)
tensor([ -64.5289,  -94.2499,  -61.9103, -112.2222,  -95.1469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6287, device='cuda:0', dtype=torch.float64)
tensor([ -64.6787,  -94.3138,  -61.8955, -112.2499,  -95.2945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4985, device='cuda:0', dtype=torch.float64)
tensor([ -64.7131,  -94.4722,  -61.7116, -112.0730,  -95.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4867, device='cuda:0', dtype=torch.float64)
tensor([ -64.7875,  -94.7849,  -61.6191, -111.9525,  -95.7228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5226, device='cuda:0', dtype=torch.float64)
tensor([ -65.0107,  -95.1667,  -61.7250, -111.9359,  -96.0528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5151, device='cuda:0', dtype=torch.float64)
tensor([ -65.3431,  -95.6084,  -62.0846, -112.1155,  -96.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5298, device='cuda:0', dtype=torch.float64)
tensor([ -65.6969,  -96.0612,  -62.3765, -112.1763,  -97.0609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6096, device='cuda:0', dtype=torch.float64)
tensor([ -66.1809,  -96.6176,  -62.7315, -112.2938,  -97.5137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6266, device='cuda:0', dtype=torch.float64)
tensor([ -66.7166,  -97.2070,  -62.9775, -112.4583,  -97.9759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4654, device='cuda:0', dtype=torch.float64)
tensor([ -67.2200,  -97.8688,  -63.2049, -112.5390,  -98.4803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4170, device='cuda:0', dtype=torch.float64)
tensor([ -67.4167,  -98.1708,  -63.3772, -112.4155,  -98.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5617, device='cuda:0', dtype=torch.float64)
tensor([ -67.7731,  -98.5589,  -63.5723, -112.4157,  -99.1067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4643, device='cuda:0', dtype=torch.float64)
tensor([ -68.0857,  -98.8777,  -63.8868, -112.4582,  -99.4290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4525, device='cuda:0', dtype=torch.float64)
tensor([ -68.3503,  -99.1729,  -64.2102, -112.4244,  -99.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4489, device='cuda:0', dtype=torch.float64)
tensor([ -68.5810,  -99.2807,  -64.3906, -112.3150, -100.1461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5290, device='cuda:0', dtype=torch.float64)
tensor([ -68.6171,  -99.0997,  -64.3366, -111.9240, -100.2918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4722, device='cuda:0', dtype=torch.float64)
tensor([ -68.6750,  -99.2259,  -64.2254, -111.5010, -100.6643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5479, device='cuda:0', dtype=torch.float64)
tensor([ -68.6844,  -99.8632,  -64.1970, -111.1146, -101.5074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5290, device='cuda:0', dtype=torch.float64)
tensor([ -68.7475, -100.2627,  -64.3215, -110.7648, -102.1597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4628, device='cuda:0', dtype=torch.float64)
tensor([ -68.8990, -100.8331,  -64.6232, -110.5309, -102.9243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4591, device='cuda:0', dtype=torch.float64)
tensor([ -69.0059, -101.4457,  -64.9714, -110.3724, -103.5430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4830, device='cuda:0', dtype=torch.float64)
tensor([ -69.1634, -102.2468,  -65.3653, -110.3767, -104.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4276, device='cuda:0', dtype=torch.float64)
tensor([ -69.3842, -103.1112,  -65.7716, -110.3329, -104.6869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5092, device='cuda:0', dtype=torch.float64)
tensor([ -69.6518, -104.1149,  -66.3401, -110.4480, -105.3670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5234, device='cuda:0', dtype=torch.float64)
tensor([ -70.0621, -105.4171,  -66.9767, -110.8096, -106.2650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5022, device='cuda:0', dtype=torch.float64)
tensor([ -70.4339, -107.0737,  -67.5454, -111.2481, -107.4344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5827, device='cuda:0', dtype=torch.float64)
tensor([ -70.8424, -109.1118,  -68.1784, -111.5406, -108.8730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4334, device='cuda:0', dtype=torch.float64)
tensor([ -71.1850, -111.2871,  -68.7364, -111.9546, -110.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5410, device='cuda:0', dtype=torch.float64)
tensor([ -71.4820, -113.1925,  -69.3144, -112.2436, -111.4632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5475, device='cuda:0', dtype=torch.float64)
tensor([ -71.8294, -115.0996,  -69.8658, -112.6437, -112.8876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4611, device='cuda:0', dtype=torch.float64)
tensor([ -72.2794, -116.6572,  -70.4946, -113.0353, -114.0634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5014, device='cuda:0', dtype=torch.float64)
tensor([ -72.7432, -117.8595,  -71.0849, -113.3719, -114.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4888, device='cuda:0', dtype=torch.float64)
tensor([ -73.2586, -118.6764,  -71.5429, -113.7330, -115.3609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4817, device='cuda:0', dtype=torch.float64)
tensor([ -73.6847, -119.1893,  -71.8951, -114.0394, -115.5638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4685, device='cuda:0', dtype=torch.float64)
tensor([ -74.0430, -119.4155,  -72.1578, -114.3612, -115.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4431, device='cuda:0', dtype=torch.float64)
tensor([ -74.2626, -119.3369,  -72.2931, -114.5307, -115.4291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5258, device='cuda:0', dtype=torch.float64)
tensor([ -74.5383, -119.3071,  -72.3374, -114.5594, -115.1052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4445, device='cuda:0', dtype=torch.float64)
tensor([ -74.8458, -119.0135,  -72.5398, -114.5956, -114.5731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4937, device='cuda:0', dtype=torch.float64)
tensor([ -75.0860, -118.2864,  -72.7552, -114.5171, -113.5694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4785, device='cuda:0', dtype=torch.float64)
tensor([ -75.3287, -117.2660,  -72.9027, -114.3061, -112.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4988, device='cuda:0', dtype=torch.float64)
tensor([ -75.5893, -116.3760,  -73.2788, -114.3057, -111.3094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4065, device='cuda:0', dtype=torch.float64)
tensor([ -75.8499, -115.8923,  -73.7123, -114.3840, -110.4210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5053, device='cuda:0', dtype=torch.float64)
tensor([ -76.2838, -115.2832,  -74.1668, -114.4142, -109.7092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4268, device='cuda:0', dtype=torch.float64)
tensor([ -76.7012, -114.7033,  -74.5753, -114.4413, -109.1545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4199, device='cuda:0', dtype=torch.float64)
tensor([ -77.0935, -114.2488,  -74.9933, -114.5097, -108.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5533, device='cuda:0', dtype=torch.float64)
tensor([ -77.5678, -114.0654,  -75.6511, -114.7562, -108.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4508, device='cuda:0', dtype=torch.float64)
tensor([ -77.9581, -114.2006,  -76.2465, -114.9829, -108.1405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4916, device='cuda:0', dtype=torch.float64)
tensor([ -78.1584, -113.9977,  -76.4245, -114.8701, -108.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5860, device='cuda:0', dtype=torch.float64)
tensor([ -78.4194, -113.7613,  -76.6452, -114.9603, -108.0457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4757, device='cuda:0', dtype=torch.float64)
tensor([ -78.6652, -113.7457,  -76.9327, -115.1490, -108.0950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4158, device='cuda:0', dtype=torch.float64)
tensor([ -78.9835, -113.7722,  -77.2954, -115.4218, -108.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4663, device='cuda:0', dtype=torch.float64)
tensor([ -79.2071, -113.2437,  -77.4669, -115.5270, -107.8458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5575, device='cuda:0', dtype=torch.float64)
tensor([ -79.2967, -113.0170,  -77.5096, -115.7214, -108.0579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4730, device='cuda:0', dtype=torch.float64)
tensor([ -79.2808, -112.8411,  -77.5458, -115.8243, -108.3267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4557, device='cuda:0', dtype=torch.float64)
tensor([ -79.2885, -112.5993,  -77.5959, -115.9826, -108.6227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4840, device='cuda:0', dtype=torch.float64)
tensor([ -79.1819, -111.9985,  -77.7054, -116.1583, -108.6146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5634, device='cuda:0', dtype=torch.float64)
tensor([ -78.9316, -111.0763,  -77.6966, -115.9135, -108.3573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3934, device='cuda:0', dtype=torch.float64)
tensor([ -78.5910, -110.0668,  -77.7478, -115.5687, -107.9502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4683, device='cuda:0', dtype=torch.float64)
tensor([ -78.3753, -109.3079,  -77.8780, -115.2172, -107.5590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4643, device='cuda:0', dtype=torch.float64)
tensor([ -78.1639, -108.7132,  -77.9571, -114.8289, -107.1847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3951, device='cuda:0', dtype=torch.float64)
tensor([ -77.9252, -108.0809,  -77.9039, -114.3646, -106.8300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4122, device='cuda:0', dtype=torch.float64)
tensor([ -77.6580, -107.6779,  -77.8569, -113.8687, -106.5295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4500, device='cuda:0', dtype=torch.float64)
tensor([ -77.5025, -107.0147,  -77.8364, -113.4208, -106.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3955, device='cuda:0', dtype=torch.float64)
tensor([ -77.3157, -106.3801,  -77.7559, -112.9313, -105.7304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4267, device='cuda:0', dtype=torch.float64)
tensor([ -77.1675, -105.7401,  -77.6115, -112.3708, -105.5031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4582, device='cuda:0', dtype=torch.float64)
tensor([ -77.1980, -105.2064,  -77.4019, -111.8783, -105.3456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4480, device='cuda:0', dtype=torch.float64)
tensor([ -77.2618, -104.5953,  -77.1414, -111.3767, -104.9819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4715, device='cuda:0', dtype=torch.float64)
tensor([ -77.5100, -104.1099,  -77.1314, -111.1181, -104.7195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4700, device='cuda:0', dtype=torch.float64)
tensor([ -77.6606, -103.7200,  -77.1371, -110.8196, -104.4757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4435, device='cuda:0', dtype=torch.float64)
tensor([ -77.8386, -103.5272,  -77.1467, -110.5964, -104.3669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4488, device='cuda:0', dtype=torch.float64)
tensor([ -77.9598, -103.3704,  -77.2173, -110.3479, -104.2617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3877, device='cuda:0', dtype=torch.float64)
tensor([ -78.0969, -103.0731,  -77.3552, -110.0002, -103.9723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4046, device='cuda:0', dtype=torch.float64)
tensor([ -78.1608, -102.9081,  -77.4950, -109.6910, -103.8492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4582, device='cuda:0', dtype=torch.float64)
tensor([ -78.1556, -102.5940,  -77.6394, -109.4056, -103.5897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4571, device='cuda:0', dtype=torch.float64)
tensor([ -78.1752, -102.5252,  -77.8721, -109.2464, -103.4250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3813, device='cuda:0', dtype=torch.float64)
tensor([ -78.1521, -102.3992,  -78.0478, -109.0193, -103.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4632, device='cuda:0', dtype=torch.float64)
tensor([ -78.1024, -102.1556,  -78.2474, -108.7797, -102.9211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4342, device='cuda:0', dtype=torch.float64)
tensor([ -78.2459, -102.0406,  -78.6837, -108.6813, -102.5593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3911, device='cuda:0', dtype=torch.float64)
tensor([ -78.3755, -102.1159,  -79.0531, -108.6099, -102.3242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3715, device='cuda:0', dtype=torch.float64)
tensor([ -78.4806, -102.1669,  -79.3724, -108.6169, -102.1457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4844, device='cuda:0', dtype=torch.float64)
tensor([ -78.5035, -102.3219,  -79.6440, -108.6137, -102.1456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4665, device='cuda:0', dtype=torch.float64)
tensor([ -78.4361, -102.1182,  -79.7001, -108.5977, -102.0841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4295, device='cuda:0', dtype=torch.float64)
tensor([ -78.4967, -102.0217,  -79.7925, -108.6643, -102.2096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4166, device='cuda:0', dtype=torch.float64)
tensor([ -78.6695, -101.8721,  -79.9347, -108.7218, -102.1650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4738, device='cuda:0', dtype=torch.float64)
tensor([ -78.7747, -101.6564,  -79.9625, -108.6628, -102.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4093, device='cuda:0', dtype=torch.float64)
tensor([ -78.7155, -101.2579,  -79.8557, -108.5533, -101.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3232, device='cuda:0', dtype=torch.float64)
tensor([ -78.6635, -100.9722,  -79.6481, -108.4205, -101.7649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4073, device='cuda:0', dtype=torch.float64)
tensor([ -78.7099, -100.7341,  -79.5563, -108.3495, -101.7421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5503, device='cuda:0', dtype=torch.float64)
tensor([ -78.7673, -100.4720,  -79.5669, -108.4255, -101.7629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3674, device='cuda:0', dtype=torch.float64)
tensor([ -78.8562, -100.4541,  -79.7046, -108.6166, -101.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3722, device='cuda:0', dtype=torch.float64)
tensor([ -79.0074, -100.5434,  -79.8954, -108.9788, -101.9729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4069, device='cuda:0', dtype=torch.float64)
tensor([ -79.2530, -100.8701,  -80.2694, -109.5406, -102.3209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3653, device='cuda:0', dtype=torch.float64)
tensor([ -79.4833, -101.0789,  -80.5145, -110.0055, -102.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4145, device='cuda:0', dtype=torch.float64)
tensor([ -79.6335, -101.1149,  -80.6799, -110.4453, -103.1096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3509, device='cuda:0', dtype=torch.float64)
tensor([ -79.7926, -101.1457,  -80.9718, -110.8527, -103.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3302, device='cuda:0', dtype=torch.float64)
tensor([ -79.8160, -101.2822,  -81.0735, -111.1176, -103.9953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4480, device='cuda:0', dtype=torch.float64)
tensor([ -79.8380, -101.1799,  -81.2388, -111.5359, -104.4573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3949, device='cuda:0', dtype=torch.float64)
tensor([ -79.9847, -101.0885,  -81.7211, -112.1331, -104.7595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4079, device='cuda:0', dtype=torch.float64)
tensor([ -80.1597, -101.1313,  -82.2802, -112.8398, -105.1056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3725, device='cuda:0', dtype=torch.float64)
tensor([ -80.3095, -101.2143,  -82.7840, -113.4831, -105.3933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4569, device='cuda:0', dtype=torch.float64)
tensor([ -80.4163, -101.4127,  -83.2520, -114.0086, -105.6750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3979, device='cuda:0', dtype=torch.float64)
tensor([ -80.5394, -101.6673,  -83.7901, -114.5503, -106.0262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3691, device='cuda:0', dtype=torch.float64)
tensor([ -80.6615, -102.3500,  -84.2649, -115.0041, -106.5767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3295, device='cuda:0', dtype=torch.float64)
tensor([ -80.8949, -103.0964,  -84.7450, -115.4331, -107.0393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3400, device='cuda:0', dtype=torch.float64)
tensor([ -81.0939, -103.5487,  -85.1721, -115.8110, -107.3071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4146, device='cuda:0', dtype=torch.float64)
tensor([ -81.2076, -104.0138,  -85.4706, -116.0335, -107.5878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3389, device='cuda:0', dtype=torch.float64)
tensor([ -81.3504, -104.5889,  -85.8464, -116.3200, -107.8786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4015, device='cuda:0', dtype=torch.float64)
tensor([ -81.3834, -104.9163,  -85.9772, -116.3678, -108.1480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3734, device='cuda:0', dtype=torch.float64)
tensor([ -81.5286, -105.3038,  -86.2418, -116.5219, -108.3310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3173, device='cuda:0', dtype=torch.float64)
tensor([ -81.8011, -105.6125,  -86.5838, -116.7628, -108.4523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3613, device='cuda:0', dtype=torch.float64)
tensor([ -82.0541, -105.9540,  -86.8987, -116.9983, -108.5244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3312, device='cuda:0', dtype=torch.float64)
tensor([ -82.3019, -106.4483,  -87.1926, -117.1890, -108.7373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4761, device='cuda:0', dtype=torch.float64)
tensor([ -82.4582, -106.9204,  -87.4816, -117.3938, -108.9318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3316, device='cuda:0', dtype=torch.float64)
tensor([ -82.7188, -107.5284,  -87.8456, -117.7628, -109.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3834, device='cuda:0', dtype=torch.float64)
tensor([ -82.9659, -108.2533,  -88.1665, -118.1656, -109.3117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4172, device='cuda:0', dtype=torch.float64)
tensor([ -83.0430, -109.0179,  -88.2742, -118.3662, -109.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4251, device='cuda:0', dtype=torch.float64)
tensor([ -83.0192, -109.5795,  -88.3157, -118.5025, -109.6735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4212, device='cuda:0', dtype=torch.float64)
tensor([ -83.0285, -110.0499,  -88.3536, -118.6062, -109.8219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4107, device='cuda:0', dtype=torch.float64)
tensor([ -82.9928, -110.3117,  -88.3143, -118.7078, -109.8898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4033, device='cuda:0', dtype=torch.float64)
tensor([ -82.9750, -110.6637,  -88.2854, -118.8795, -110.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3723, device='cuda:0', dtype=torch.float64)
tensor([ -83.0890, -110.9368,  -88.3687, -119.0350, -110.3272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3640, device='cuda:0', dtype=torch.float64)
tensor([ -83.2491, -111.2136,  -88.4702, -119.2431, -110.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3326, device='cuda:0', dtype=torch.float64)
tensor([ -83.4057, -111.4861,  -88.6929, -119.4941, -110.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3525, device='cuda:0', dtype=torch.float64)
tensor([ -83.5468, -111.5751,  -88.9626, -119.6884, -110.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4021, device='cuda:0', dtype=torch.float64)
tensor([ -83.8841, -111.8395,  -89.4577, -120.0908, -111.1803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3367, device='cuda:0', dtype=torch.float64)
tensor([ -84.0237, -111.8609,  -89.6891, -120.2621, -111.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3083, device='cuda:0', dtype=torch.float64)
tensor([ -84.1261, -111.5656,  -89.7600, -120.2210, -111.2527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3504, device='cuda:0', dtype=torch.float64)
tensor([ -84.2749, -111.1555,  -89.7331, -120.1252, -111.2568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3425, device='cuda:0', dtype=torch.float64)
tensor([ -84.3770, -110.5585,  -89.5551, -119.8531, -111.1523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3547, device='cuda:0', dtype=torch.float64)
tensor([ -84.4952, -110.0053,  -89.2730, -119.5992, -111.0854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3306, device='cuda:0', dtype=torch.float64)
tensor([ -84.5534, -109.4892,  -88.9190, -119.2760, -110.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2990, device='cuda:0', dtype=torch.float64)
tensor([ -84.6293, -109.2679,  -88.6567, -119.0286, -110.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3607, device='cuda:0', dtype=torch.float64)
tensor([ -84.7223, -109.2381,  -88.4360, -118.7968, -110.5541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3626, device='cuda:0', dtype=torch.float64)
tensor([ -84.7396, -109.2277,  -88.1807, -118.4906, -110.4136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2795, device='cuda:0', dtype=torch.float64)
tensor([ -84.7925, -108.9538,  -87.9380, -118.1771, -110.2219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3168, device='cuda:0', dtype=torch.float64)
tensor([ -84.8085, -108.4173,  -87.7494, -117.8794, -109.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3677, device='cuda:0', dtype=torch.float64)
tensor([ -84.8126, -108.0176,  -87.6172, -117.6884, -109.6823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3095, device='cuda:0', dtype=torch.float64)
tensor([ -84.8108, -107.7316,  -87.4678, -117.4541, -109.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3047, device='cuda:0', dtype=torch.float64)
tensor([ -84.7670, -107.2975,  -87.2973, -117.1297, -109.2518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2908, device='cuda:0', dtype=torch.float64)
tensor([ -84.7198, -106.9262,  -87.1422, -116.8063, -108.9658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2870, device='cuda:0', dtype=torch.float64)
tensor([ -84.6172, -106.5850,  -87.0063, -116.4597, -108.6091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2849, device='cuda:0', dtype=torch.float64)
tensor([ -84.5573, -106.2949,  -86.9566, -116.1478, -108.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2871, device='cuda:0', dtype=torch.float64)
tensor([ -84.4364, -105.8299,  -86.8092, -115.7468, -107.8493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3332, device='cuda:0', dtype=torch.float64)
tensor([ -84.1958, -105.2811,  -86.5129, -115.2644, -107.3162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3153, device='cuda:0', dtype=torch.float64)
tensor([ -84.1014, -104.9775,  -86.3891, -114.9162, -107.0011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2869, device='cuda:0', dtype=torch.float64)
tensor([ -84.0633, -104.9902,  -86.3329, -114.6075, -106.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3916, device='cuda:0', dtype=torch.float64)
tensor([ -84.0542, -105.1203,  -86.3925, -114.3991, -106.7378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2993, device='cuda:0', dtype=torch.float64)
tensor([ -84.0163, -105.0209,  -86.3753, -114.1845, -106.5865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2767, device='cuda:0', dtype=torch.float64)
tensor([ -84.0722, -104.9162,  -86.4043, -114.0445, -106.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3440, device='cuda:0', dtype=torch.float64)
tensor([ -84.1827, -104.9961,  -86.5192, -113.9136, -106.6528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3153, device='cuda:0', dtype=torch.float64)
tensor([ -84.2531, -104.9537,  -86.5960, -113.7405, -106.5482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2652, device='cuda:0', dtype=torch.float64)
tensor([ -84.3226, -105.0226,  -86.6815, -113.5253, -106.4272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3406, device='cuda:0', dtype=torch.float64)
tensor([ -84.4047, -104.9953,  -86.7208, -113.2965, -106.3463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3056, device='cuda:0', dtype=torch.float64)
tensor([ -84.4104, -105.1312,  -86.7845, -113.1213, -106.2994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3308, device='cuda:0', dtype=torch.float64)
tensor([ -84.4256, -105.0469,  -86.7817, -112.7845, -106.2478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2869, device='cuda:0', dtype=torch.float64)
tensor([ -84.3716, -104.8516,  -86.7615, -112.4503, -106.0182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3550, device='cuda:0', dtype=torch.float64)
tensor([ -84.2094, -104.6185,  -86.7244, -112.0424, -105.7271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2862, device='cuda:0', dtype=torch.float64)
tensor([ -84.0878, -104.3237,  -86.8301, -111.7325, -105.3817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2645, device='cuda:0', dtype=torch.float64)
tensor([ -83.8999, -104.0985,  -86.8196, -111.4377, -105.1485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2932, device='cuda:0', dtype=torch.float64)
tensor([ -83.6959, -103.9279,  -86.8111, -111.1959, -104.9065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2573, device='cuda:0', dtype=torch.float64)
tensor([ -83.5323, -103.7363,  -86.8127, -110.9813, -104.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3341, device='cuda:0', dtype=torch.float64)
tensor([ -83.4830, -103.5340,  -86.9377, -110.7517, -104.5388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3595, device='cuda:0', dtype=torch.float64)
tensor([ -83.3534, -103.2923,  -86.9668, -110.4175, -104.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3046, device='cuda:0', dtype=torch.float64)
tensor([ -83.3131, -103.3019,  -87.0462, -110.2046, -104.3338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2859, device='cuda:0', dtype=torch.float64)
tensor([ -83.2406, -103.3723,  -87.0591, -109.9730, -104.4056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2378, device='cuda:0', dtype=torch.float64)
tensor([ -83.3126, -103.3488,  -87.1866, -109.8664, -104.6014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2625, device='cuda:0', dtype=torch.float64)
tensor([ -83.3617, -103.1226,  -87.3245, -109.7142, -104.7117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2664, device='cuda:0', dtype=torch.float64)
tensor([ -83.5382, -102.8569,  -87.5821, -109.6661, -104.7630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2549, device='cuda:0', dtype=torch.float64)
tensor([ -83.6592, -102.6656,  -87.7181, -109.5403, -104.7500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2839, device='cuda:0', dtype=torch.float64)
tensor([ -83.8279, -102.2806,  -87.8551, -109.3668, -104.7395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3060, device='cuda:0', dtype=torch.float64)
tensor([ -83.7620, -101.9311,  -87.8445, -109.0861, -104.7502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2573, device='cuda:0', dtype=torch.float64)
tensor([ -83.5987, -101.5161,  -87.8686, -108.8129, -104.7437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2555, device='cuda:0', dtype=torch.float64)
tensor([ -83.4693, -101.1585,  -87.9342, -108.6393, -104.6717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2669, device='cuda:0', dtype=torch.float64)
tensor([ -83.3915, -100.8652,  -87.9918, -108.4484, -104.5694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2938, device='cuda:0', dtype=torch.float64)
tensor([ -83.3237, -100.7453,  -88.0864, -108.4080, -104.6690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2503, device='cuda:0', dtype=torch.float64)
tensor([ -83.2142, -100.7934,  -88.1769, -108.4118, -104.8477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2868, device='cuda:0', dtype=torch.float64)
tensor([ -83.0743, -100.7943,  -88.2021, -108.3907, -104.9528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2316, device='cuda:0', dtype=torch.float64)
tensor([ -82.9420, -100.5788,  -88.2407, -108.3670, -104.9241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2405, device='cuda:0', dtype=torch.float64)
tensor([ -82.8143, -100.3153,  -88.2707, -108.3503, -104.8673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2909, device='cuda:0', dtype=torch.float64)
tensor([ -82.8029, -100.0228,  -88.4417, -108.3725, -105.0291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2933, device='cuda:0', dtype=torch.float64)
tensor([ -82.8145,  -99.7066,  -88.5657, -108.3445, -105.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2600, device='cuda:0', dtype=torch.float64)
tensor([ -82.9523,  -99.4733,  -88.7488, -108.4041, -105.3232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2934, device='cuda:0', dtype=torch.float64)
tensor([ -83.0084,  -99.2827,  -88.8368, -108.3606, -105.6285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2725, device='cuda:0', dtype=torch.float64)
tensor([ -83.1751,  -98.9697,  -88.9376, -108.3509, -105.8680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2258, device='cuda:0', dtype=torch.float64)
tensor([ -83.3359,  -98.6917,  -88.9856, -108.2536, -106.0999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2159, device='cuda:0', dtype=torch.float64)
tensor([ -83.5603,  -98.4025,  -89.1105, -108.1829, -106.3961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2398, device='cuda:0', dtype=torch.float64)
tensor([ -83.7049,  -98.2548,  -89.2259, -108.0584, -106.7482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2436, device='cuda:0', dtype=torch.float64)
tensor([ -83.8855,  -98.1936,  -89.2640, -107.9305, -107.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2236, device='cuda:0', dtype=torch.float64)
tensor([ -83.9902,  -98.2384,  -89.2369, -107.7169, -107.7028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2678, device='cuda:0', dtype=torch.float64)
tensor([ -84.0901,  -98.3170,  -89.1908, -107.5347, -108.1605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2479, device='cuda:0', dtype=torch.float64)
tensor([ -84.2052,  -98.4794,  -89.1221, -107.3640, -108.5111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2167, device='cuda:0', dtype=torch.float64)
tensor([ -84.2517,  -98.5862,  -88.9639, -107.1642, -108.7705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3067, device='cuda:0', dtype=torch.float64)
tensor([ -84.3291,  -98.9272,  -88.8767, -107.0554, -109.0910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2802, device='cuda:0', dtype=torch.float64)
tensor([ -84.4307,  -99.2091,  -88.8923, -107.0390, -109.2529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2733, device='cuda:0', dtype=torch.float64)
tensor([ -84.4838,  -99.3120,  -88.7846, -106.8904, -109.3779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2509, device='cuda:0', dtype=torch.float64)
tensor([ -84.5820,  -99.4597,  -88.6938, -106.7283, -109.4585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2530, device='cuda:0', dtype=torch.float64)
tensor([ -84.6854,  -99.7476,  -88.6415, -106.5367, -109.7010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2348, device='cuda:0', dtype=torch.float64)
tensor([ -84.7546,  -99.7844,  -88.4569, -106.1586, -109.8859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1916, device='cuda:0', dtype=torch.float64)
tensor([ -84.9001,  -99.8292,  -88.3158, -105.8660, -110.1009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2195, device='cuda:0', dtype=torch.float64)
tensor([ -84.9954,  -99.8408,  -88.1945, -105.5178, -110.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1945, device='cuda:0', dtype=torch.float64)
tensor([ -84.9768,  -99.8203,  -88.0123, -105.1902, -110.3556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2189, device='cuda:0', dtype=torch.float64)
tensor([ -84.8608,  -99.7410,  -87.7931, -104.8268, -110.2709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2085, device='cuda:0', dtype=torch.float64)
tensor([ -84.6417,  -99.4757,  -87.5527, -104.4127, -109.9365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2624, device='cuda:0', dtype=torch.float64)
tensor([ -84.4833,  -99.1926,  -87.3617, -104.0425, -109.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2385, device='cuda:0', dtype=torch.float64)
tensor([ -84.3077,  -98.9936,  -87.1800, -103.7231, -109.0192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2317, device='cuda:0', dtype=torch.float64)
tensor([ -84.1371,  -98.8030,  -86.9858, -103.4123, -108.6413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1903, device='cuda:0', dtype=torch.float64)
tensor([ -84.0272,  -98.5541,  -86.8491, -103.1779, -108.3422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2064, device='cuda:0', dtype=torch.float64)
tensor([ -83.9183,  -98.3136,  -86.6646, -102.9296, -108.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2347, device='cuda:0', dtype=torch.float64)
tensor([ -83.8378,  -98.0999,  -86.4604, -102.6964, -107.9426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2458, device='cuda:0', dtype=torch.float64)
tensor([ -83.7972,  -97.7849,  -86.2662, -102.4854, -107.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2020, device='cuda:0', dtype=torch.float64)
tensor([ -83.7947,  -97.5345,  -86.1444, -102.3838, -107.2603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2608, device='cuda:0', dtype=torch.float64)
tensor([ -83.6880,  -97.2964,  -85.9262, -102.1699, -106.8783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1880, device='cuda:0', dtype=torch.float64)
tensor([ -83.6116,  -97.1820,  -85.7839, -102.0051, -106.6036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2153, device='cuda:0', dtype=torch.float64)
tensor([ -83.4933,  -96.9199,  -85.6529, -101.8445, -106.3644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2084, device='cuda:0', dtype=torch.float64)
tensor([ -83.4487,  -96.5486,  -85.6071, -101.7665, -106.1646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2119, device='cuda:0', dtype=torch.float64)
tensor([ -83.4860,  -96.1452,  -85.6851, -101.7222, -105.7581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2219, device='cuda:0', dtype=torch.float64)
tensor([ -83.5258,  -95.7548,  -85.6833, -101.6193, -105.4058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2209, device='cuda:0', dtype=torch.float64)
tensor([ -83.6018,  -95.2553,  -85.7466, -101.5436, -105.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1932, device='cuda:0', dtype=torch.float64)
tensor([ -83.6783,  -94.7810,  -85.7846, -101.4928, -104.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2213, device='cuda:0', dtype=torch.float64)
tensor([ -83.7612,  -94.4261,  -85.8122, -101.4274, -104.4554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1948, device='cuda:0', dtype=torch.float64)
tensor([ -83.9210,  -93.9634,  -85.9351, -101.3610, -104.0820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2283, device='cuda:0', dtype=torch.float64)
tensor([ -84.0726,  -93.7298,  -86.0698, -101.4337, -103.8474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1817, device='cuda:0', dtype=torch.float64)
tensor([ -84.2239,  -93.5698,  -86.2525, -101.6017, -103.7253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2054, device='cuda:0', dtype=torch.float64)
tensor([ -84.4359,  -93.5347,  -86.4999, -101.8000, -103.6387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2136, device='cuda:0', dtype=torch.float64)
tensor([ -84.6356,  -93.5430,  -86.7616, -101.9501, -103.4453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1958, device='cuda:0', dtype=torch.float64)
tensor([ -84.8497,  -93.3061,  -87.0004, -102.0890, -103.2529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1945, device='cuda:0', dtype=torch.float64)
tensor([ -84.9673,  -93.1591,  -87.1663, -102.1725, -103.2768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2256, device='cuda:0', dtype=torch.float64)
tensor([ -85.0271,  -92.9310,  -87.2476, -102.1851, -103.2748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1996, device='cuda:0', dtype=torch.float64)
tensor([ -85.0822,  -92.7089,  -87.3242, -102.2237, -103.2769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1832, device='cuda:0', dtype=torch.float64)
tensor([ -85.1757,  -92.6080,  -87.4678, -102.3269, -103.4398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1867, device='cuda:0', dtype=torch.float64)
tensor([ -85.2095,  -92.4914,  -87.5622, -102.3697, -103.5648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2060, device='cuda:0', dtype=torch.float64)
tensor([ -85.2263,  -92.4310,  -87.7053, -102.4266, -103.7171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2161, device='cuda:0', dtype=torch.float64)
tensor([ -85.2371,  -92.5664,  -87.7840, -102.4989, -104.0192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1955, device='cuda:0', dtype=torch.float64)
tensor([ -85.1879,  -92.5541,  -87.7931, -102.5081, -104.2403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2136, device='cuda:0', dtype=torch.float64)
tensor([ -85.1664,  -92.6071,  -87.8097, -102.5608, -104.5515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2098, device='cuda:0', dtype=torch.float64)
tensor([ -85.0772,  -92.6885,  -87.7140, -102.5422, -104.7888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1789, device='cuda:0', dtype=torch.float64)
tensor([ -85.0236,  -92.8475,  -87.6422, -102.4793, -105.0231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1988, device='cuda:0', dtype=torch.float64)
tensor([ -84.8973,  -93.0176,  -87.4967, -102.3254, -105.1489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1811, device='cuda:0', dtype=torch.float64)
tensor([ -84.7740,  -93.1773,  -87.3115, -102.2065, -105.3705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2030, device='cuda:0', dtype=torch.float64)
tensor([ -84.6901,  -93.4028,  -87.1786, -102.0999, -105.5689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1632, device='cuda:0', dtype=torch.float64)
tensor([ -84.6293,  -93.6715,  -86.9904, -101.9887, -105.7344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1758, device='cuda:0', dtype=torch.float64)
tensor([ -84.5092,  -93.9080,  -86.7693, -101.8359, -105.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1649, device='cuda:0', dtype=torch.float64)
tensor([ -84.3837,  -94.1907,  -86.5111, -101.6657, -106.1053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1605, device='cuda:0', dtype=torch.float64)
tensor([ -84.3141,  -94.4981,  -86.3404, -101.5313, -106.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1631, device='cuda:0', dtype=torch.float64)
tensor([ -84.1841,  -94.8404,  -86.1221, -101.3961, -106.4475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1779, device='cuda:0', dtype=torch.float64)
tensor([ -84.0585,  -95.2480,  -85.9073, -101.2675, -106.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1696, device='cuda:0', dtype=torch.float64)
tensor([ -83.9100,  -95.7723,  -85.6698, -101.1672, -107.0836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1615, device='cuda:0', dtype=torch.float64)
tensor([ -83.7598,  -96.0498,  -85.4358, -101.0385, -107.2548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1548, device='cuda:0', dtype=torch.float64)
tensor([ -83.6272,  -96.4775,  -85.1997, -101.0313, -107.4844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1700, device='cuda:0', dtype=torch.float64)
tensor([ -83.5391,  -96.8120,  -85.0546, -101.0784, -107.6834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1865, device='cuda:0', dtype=torch.float64)
tensor([ -83.4628,  -97.1225,  -84.8917, -101.0691, -107.9173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1396, device='cuda:0', dtype=torch.float64)
tensor([ -83.3640,  -97.3942,  -84.7108, -101.0507, -108.1274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1726, device='cuda:0', dtype=torch.float64)
tensor([ -83.2732,  -97.7256,  -84.5480, -101.0855, -108.5148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1605, device='cuda:0', dtype=torch.float64)
tensor([ -83.2224,  -97.9590,  -84.4506, -101.1027, -108.8712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1526, device='cuda:0', dtype=torch.float64)
tensor([ -83.2069,  -97.9956,  -84.4197, -101.0934, -109.1213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1237, device='cuda:0', dtype=torch.float64)
tensor([ -83.2000,  -98.0205,  -84.4106, -101.0432, -109.3617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1679, device='cuda:0', dtype=torch.float64)
tensor([ -83.2048,  -98.0027,  -84.4165, -100.9930, -109.5865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1336, device='cuda:0', dtype=torch.float64)
tensor([ -83.1967,  -97.9116,  -84.4154, -100.9403, -109.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1386, device='cuda:0', dtype=torch.float64)
tensor([ -83.2011,  -97.7177,  -84.3800, -100.8549, -109.8644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1248, device='cuda:0', dtype=torch.float64)
tensor([ -83.2599,  -97.5934,  -84.3998, -100.8302, -110.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1540, device='cuda:0', dtype=torch.float64)
tensor([ -83.2861,  -97.4650,  -84.3925, -100.8024, -110.1207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1413, device='cuda:0', dtype=torch.float64)
tensor([ -83.3120,  -97.4722,  -84.3980, -100.8137, -110.3133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1756, device='cuda:0', dtype=torch.float64)
tensor([ -83.2718,  -97.8102,  -84.3844, -100.8406, -110.5845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1668, device='cuda:0', dtype=torch.float64)
tensor([ -83.2952,  -98.2204,  -84.4337, -100.9118, -110.9389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1267, device='cuda:0', dtype=torch.float64)
tensor([ -83.2999,  -98.5235,  -84.4768, -100.9408, -111.1712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1583, device='cuda:0', dtype=torch.float64)
tensor([ -83.2437,  -98.8943,  -84.5106, -101.0041, -111.4006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([ -83.1585,  -99.1719,  -84.4992, -101.0311, -111.5668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1362, device='cuda:0', dtype=torch.float64)
tensor([ -83.0409,  -99.3474,  -84.4208, -101.0161, -111.6579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1540, device='cuda:0', dtype=torch.float64)
tensor([ -82.9014,  -99.5514,  -84.3113, -101.0117, -111.7430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1622, device='cuda:0', dtype=torch.float64)
tensor([ -82.7753,  -99.5750,  -84.2515, -100.9822, -111.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1264, device='cuda:0', dtype=torch.float64)
tensor([ -82.6921,  -99.5430,  -84.2490, -100.9842, -111.6930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1130, device='cuda:0', dtype=torch.float64)
tensor([ -82.6285,  -99.4770,  -84.2564, -100.9639, -111.6524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([ -82.6241,  -99.4490,  -84.3438, -100.9796, -111.6386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1435, device='cuda:0', dtype=torch.float64)
tensor([ -82.6075,  -99.4836,  -84.4068, -101.0155, -111.7287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1436, device='cuda:0', dtype=torch.float64)
tensor([ -82.6319,  -99.5358,  -84.5365, -101.0966, -111.8357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1224, device='cuda:0', dtype=torch.float64)
tensor([ -82.6326,  -99.5166,  -84.6095, -101.1276, -111.8539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1333, device='cuda:0', dtype=torch.float64)
tensor([ -82.5975,  -99.4789,  -84.6598, -101.1581, -111.8006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1243, device='cuda:0', dtype=torch.float64)
tensor([ -82.6238,  -99.4756,  -84.7424, -101.1896, -111.8791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1383, device='cuda:0', dtype=torch.float64)
tensor([ -82.6351,  -99.4085,  -84.8227, -101.1896, -111.9629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1226, device='cuda:0', dtype=torch.float64)
tensor([ -82.6557,  -99.4353,  -84.9484, -101.2460, -112.0319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1406, device='cuda:0', dtype=torch.float64)
tensor([ -82.7087,  -99.5578,  -85.0738, -101.3203, -112.1560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1669, device='cuda:0', dtype=torch.float64)
tensor([ -82.7226,  -99.7090,  -85.1315, -101.3329, -112.2227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1067, device='cuda:0', dtype=torch.float64)
tensor([ -82.7354,  -99.8404,  -85.2042, -101.3469, -112.2898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1212, device='cuda:0', dtype=torch.float64)
tensor([ -82.7271,  -99.9155,  -85.2833, -101.3878, -112.3031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1232, device='cuda:0', dtype=torch.float64)
tensor([ -82.7444, -100.0074,  -85.3830, -101.4265, -112.3134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1288, device='cuda:0', dtype=torch.float64)
tensor([ -82.7640,  -99.9814,  -85.4629, -101.4547, -112.2449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1214, device='cuda:0', dtype=torch.float64)
tensor([ -82.7544,  -99.8536,  -85.5113, -101.4291, -112.1070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([ -82.7519,  -99.7284,  -85.5554, -101.3945, -111.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1359, device='cuda:0', dtype=torch.float64)
tensor([ -82.7335,  -99.5624,  -85.6184, -101.3622, -111.8064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1420, device='cuda:0', dtype=torch.float64)
tensor([ -82.7628,  -99.4661,  -85.7230, -101.3284, -111.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1087, device='cuda:0', dtype=torch.float64)
tensor([ -82.8128,  -99.3768,  -85.8576, -101.3003, -111.7431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1221, device='cuda:0', dtype=torch.float64)
tensor([ -82.8365,  -99.3501,  -85.9554, -101.2268, -111.6863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1493, device='cuda:0', dtype=torch.float64)
tensor([ -82.8152,  -99.2603,  -86.0289, -101.1055, -111.5654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1389, device='cuda:0', dtype=torch.float64)
tensor([ -82.7723,  -99.2378,  -86.0601, -100.9485, -111.4377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1384, device='cuda:0', dtype=torch.float64)
tensor([ -82.7269,  -99.3520,  -86.1658, -100.8793, -111.4833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1296, device='cuda:0', dtype=torch.float64)
tensor([ -82.6745,  -99.4619,  -86.2529, -100.8151, -111.5174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1321, device='cuda:0', dtype=torch.float64)
tensor([ -82.6785,  -99.5651,  -86.4274, -100.8330, -111.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1135, device='cuda:0', dtype=torch.float64)
tensor([ -82.6632,  -99.5737,  -86.5814, -100.8649, -111.4588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0998, device='cuda:0', dtype=torch.float64)
tensor([ -82.6211,  -99.6185,  -86.7126, -100.8872, -111.4361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1435, device='cuda:0', dtype=torch.float64)
tensor([ -82.5328,  -99.6439,  -86.7987, -100.8883, -111.3491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1319, device='cuda:0', dtype=torch.float64)
tensor([ -82.4560,  -99.7012,  -86.8826, -100.9441, -111.3612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1207, device='cuda:0', dtype=torch.float64)
tensor([ -82.3282,  -99.7268,  -86.8959, -100.9338, -111.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1141, device='cuda:0', dtype=torch.float64)
tensor([ -82.1592,  -99.7265,  -86.8363, -100.8706, -111.2873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1091, device='cuda:0', dtype=torch.float64)
tensor([ -82.0276,  -99.7303,  -86.8159, -100.8903, -111.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1457, device='cuda:0', dtype=torch.float64)
tensor([ -81.8557,  -99.6948,  -86.7308, -100.8536, -111.1725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1176, device='cuda:0', dtype=torch.float64)
tensor([ -81.7140,  -99.5989,  -86.6181, -100.7806, -111.0908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1163, device='cuda:0', dtype=torch.float64)
tensor([ -81.5689,  -99.5322,  -86.4997, -100.7123, -111.0158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([ -81.4127,  -99.4075,  -86.3551, -100.5953, -110.9354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1205, device='cuda:0', dtype=torch.float64)
tensor([ -81.2674,  -99.2604,  -86.2165, -100.4536, -110.7990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1205, device='cuda:0', dtype=torch.float64)
tensor([ -81.1844,  -99.1628,  -86.1355, -100.3771, -110.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1246, device='cuda:0', dtype=torch.float64)
tensor([ -81.1385,  -99.0930,  -86.0803, -100.3363, -110.7848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1061, device='cuda:0', dtype=torch.float64)
tensor([ -81.1013,  -99.0646,  -86.0464, -100.3341, -110.9038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1065, device='cuda:0', dtype=torch.float64)
tensor([ -81.0814,  -98.9801,  -86.0188, -100.3241, -111.0496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1056, device='cuda:0', dtype=torch.float64)
tensor([ -81.0528,  -98.9140,  -86.0115, -100.3076, -111.1651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1050, device='cuda:0', dtype=torch.float64)
tensor([ -81.0208,  -98.8121,  -85.9893, -100.2875, -111.2911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1157, device='cuda:0', dtype=torch.float64)
tensor([ -81.0406,  -98.7667,  -86.0254, -100.3251, -111.5501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1015, device='cuda:0', dtype=torch.float64)
tensor([ -81.0352,  -98.6488,  -86.0247, -100.3145, -111.6698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([ -81.0195,  -98.5339,  -86.0268, -100.3077, -111.7756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0974, device='cuda:0', dtype=torch.float64)
tensor([ -80.9599,  -98.5085,  -85.9534, -100.2611, -111.8899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1021, device='cuda:0', dtype=torch.float64)
tensor([ -80.9033,  -98.5205,  -85.8890, -100.1986, -111.9793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0968, device='cuda:0', dtype=torch.float64)
tensor([ -80.8446,  -98.5251,  -85.8499, -100.1682, -112.0568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1157, device='cuda:0', dtype=torch.float64)
tensor([ -80.7543,  -98.4644,  -85.7998, -100.1164, -112.1347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0937, device='cuda:0', dtype=torch.float64)
tensor([ -80.6829,  -98.3736,  -85.7284, -100.0353, -112.1945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1360, device='cuda:0', dtype=torch.float64)
tensor([ -80.5841,  -98.3418,  -85.6212,  -99.8980, -112.2111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1135, device='cuda:0', dtype=torch.float64)
tensor([ -80.4328,  -98.2374,  -85.4677,  -99.7029, -112.1478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1175, device='cuda:0', dtype=torch.float64)
tensor([ -80.2825,  -98.1411,  -85.2992,  -99.5071, -112.0943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1190, device='cuda:0', dtype=torch.float64)
tensor([ -80.1306,  -98.1041,  -85.1516,  -99.3733, -112.0772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0998, device='cuda:0', dtype=torch.float64)
tensor([ -80.0137,  -98.0888,  -84.9885,  -99.2396, -112.1638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1200, device='cuda:0', dtype=torch.float64)
tensor([ -79.9170,  -98.0910,  -84.8716,  -99.1450, -112.3058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1052, device='cuda:0', dtype=torch.float64)
tensor([ -79.8400,  -98.0593,  -84.7895,  -99.0560, -112.4221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1056, device='cuda:0', dtype=torch.float64)
tensor([ -79.7719,  -97.8974,  -84.7401,  -98.9583, -112.4858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1225, device='cuda:0', dtype=torch.float64)
tensor([ -79.6833,  -97.7550,  -84.6308,  -98.8037, -112.4120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([ -79.5689,  -97.5375,  -84.5220,  -98.6157, -112.2654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([ -79.4917,  -97.3346,  -84.4369,  -98.4500, -112.1506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1219, device='cuda:0', dtype=torch.float64)
tensor([ -79.3848,  -97.3082,  -84.3224,  -98.3191, -112.1370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1178, device='cuda:0', dtype=torch.float64)
tensor([ -79.2191,  -97.2371,  -84.1474,  -98.0883, -112.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0962, device='cuda:0', dtype=torch.float64)
tensor([ -79.0572,  -97.1836,  -83.9672,  -97.8863, -112.1137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1143, device='cuda:0', dtype=torch.float64)
tensor([ -78.9231,  -97.2317,  -83.8271,  -97.7587, -112.2732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1430, device='cuda:0', dtype=torch.float64)
tensor([ -78.8412,  -97.1752,  -83.7406,  -97.6510, -112.3747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([ -78.7780,  -97.0850,  -83.6792,  -97.5404, -112.4573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1286, device='cuda:0', dtype=torch.float64)
tensor([ -78.6779,  -96.9130,  -83.6142,  -97.4098, -112.4692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1186, device='cuda:0', dtype=torch.float64)
tensor([ -78.5253,  -96.7911,  -83.5298,  -97.2356, -112.4297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1087, device='cuda:0', dtype=torch.float64)
tensor([ -78.3955,  -96.8312,  -83.4620,  -97.1475, -112.4713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1102, device='cuda:0', dtype=torch.float64)
tensor([ -78.2575,  -96.8842,  -83.3567,  -97.0410, -112.5379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1238, device='cuda:0', dtype=torch.float64)
tensor([ -78.1239,  -97.0138,  -83.2792,  -96.9813, -112.6821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1194, device='cuda:0', dtype=torch.float64)
tensor([ -77.9755,  -97.0002,  -83.1840,  -96.8418, -112.6955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1042, device='cuda:0', dtype=torch.float64)
tensor([ -77.8471,  -96.9709,  -83.1320,  -96.7026, -112.6813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0954, device='cuda:0', dtype=torch.float64)
tensor([ -77.7180,  -96.9286,  -83.0754,  -96.5681, -112.6979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1407, device='cuda:0', dtype=torch.float64)
tensor([ -77.5577,  -96.9969,  -82.9862,  -96.4140, -112.8318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([ -77.3432,  -97.0966,  -82.8264,  -96.2292, -112.9738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1279, device='cuda:0', dtype=torch.float64)
tensor([ -77.1468,  -97.1984,  -82.7161,  -96.0796, -113.0682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0939, device='cuda:0', dtype=torch.float64)
tensor([ -76.9908,  -97.2662,  -82.6598,  -95.9856, -113.1497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1106, device='cuda:0', dtype=torch.float64)
tensor([ -76.8117,  -97.2408,  -82.5931,  -95.8841, -113.2069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0961, device='cuda:0', dtype=torch.float64)
tensor([ -76.6805,  -97.2295,  -82.5822,  -95.8183, -113.2690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1088, device='cuda:0', dtype=torch.float64)
tensor([ -76.5580,  -97.2695,  -82.6030,  -95.8026, -113.3555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([ -76.4345,  -97.2296,  -82.6084,  -95.7594, -113.3888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1263, device='cuda:0', dtype=torch.float64)
tensor([ -76.2795,  -97.1285,  -82.6113,  -95.6657, -113.3255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1074, device='cuda:0', dtype=torch.float64)
tensor([ -76.1403,  -97.0118,  -82.6189,  -95.5896, -113.2903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1280, device='cuda:0', dtype=torch.float64)
tensor([ -75.9948,  -97.0810,  -82.5870,  -95.4999, -113.2734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([ -75.8726,  -97.1846,  -82.5349,  -95.4232, -113.2718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1028, device='cuda:0', dtype=torch.float64)
tensor([ -75.7736,  -97.2580,  -82.4646,  -95.2980, -113.2837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1295, device='cuda:0', dtype=torch.float64)
tensor([ -75.7197,  -97.2881,  -82.4687,  -95.1595, -113.3073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1201, device='cuda:0', dtype=torch.float64)
tensor([ -75.6865,  -97.3533,  -82.4563,  -95.0585, -113.3155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1080, device='cuda:0', dtype=torch.float64)
tensor([ -75.6131,  -97.4121,  -82.4032,  -94.9510, -113.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1275, device='cuda:0', dtype=torch.float64)
tensor([ -75.5745,  -97.4303,  -82.4182,  -94.8457, -113.5277],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_043009.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(212.0979, device='cuda:0', dtype=torch.float64)
tensor([-3.1031, -7.4154, -5.2043, -7.9934, -8.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.0185, device='cuda:0', dtype=torch.float64)
tensor([-2.5994, -5.8807, -4.8385, -5.6568, -6.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.7175, device='cuda:0', dtype=torch.float64)
tensor([-2.9745, -4.0410, -5.9353, -6.4595, -8.9755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(63.7382, device='cuda:0', dtype=torch.float64)
tensor([ -7.3699,  -3.8037,  -7.2369,  -7.6662, -11.8696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(88.4326, device='cuda:0', dtype=torch.float64)
tensor([ -6.9814,  -4.4609,  -7.5328,  -8.1705, -12.8954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(88.8928, device='cuda:0', dtype=torch.float64)
tensor([ -3.3975,  -5.2378,  -6.5447,  -7.0348, -11.4434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.1995, device='cuda:0', dtype=torch.float64)
tensor([-2.5583, -5.4482, -5.3835, -5.8042, -9.0259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.7377, device='cuda:0', dtype=torch.float64)
tensor([-2.6030, -5.0597, -4.7845, -5.2584, -7.5524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.6698, device='cuda:0', dtype=torch.float64)
tensor([-2.7572, -4.7728, -4.6340, -5.2741, -6.9082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.4283, device='cuda:0', dtype=torch.float64)
tensor([-2.9177, -4.9799, -4.7128, -5.7779, -6.5001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.3562, device='cuda:0', dtype=torch.float64)
tensor([-2.9636, -5.5804, -4.8555, -6.7265, -6.3046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.2602, device='cuda:0', dtype=torch.float64)
tensor([-2.9506, -6.3206, -4.8825, -7.2012, -6.3719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.0702, device='cuda:0', dtype=torch.float64)
tensor([-2.9538, -5.8390, -4.6926, -6.7548, -6.5421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.2863, device='cuda:0', dtype=torch.float64)
tensor([-2.6821, -4.9551, -4.4239, -6.0654, -6.6071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.9470, device='cuda:0', dtype=torch.float64)
tensor([-2.5105, -4.5031, -4.2771, -5.5815, -6.6004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.5224, device='cuda:0', dtype=torch.float64)
tensor([-2.3830, -4.1112, -4.3384, -5.3802, -6.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.2772, device='cuda:0', dtype=torch.float64)
tensor([-2.2681, -3.7940, -4.6032, -5.4692, -6.6966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.0212, device='cuda:0', dtype=torch.float64)
tensor([-2.1783, -3.5691, -4.9867, -5.8349, -6.7982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.3917, device='cuda:0', dtype=torch.float64)
tensor([-2.1358, -3.4127, -5.3540, -6.2349, -6.9471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.3079, device='cuda:0', dtype=torch.float64)
tensor([-2.1280, -3.3074, -5.5904, -6.3021, -7.0584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7721, device='cuda:0', dtype=torch.float64)
tensor([-2.1066, -3.2530, -5.6624, -6.0152, -6.9868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.4203, device='cuda:0', dtype=torch.float64)
tensor([-2.0782, -3.2599, -5.5865, -5.6352, -6.6799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7530, device='cuda:0', dtype=torch.float64)
tensor([-2.0775, -3.3341, -5.3994, -5.3629, -6.3159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.3632, device='cuda:0', dtype=torch.float64)
tensor([-2.1196, -3.4542, -5.1525, -5.2079, -6.0795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7052, device='cuda:0', dtype=torch.float64)
tensor([-2.1942, -3.5848, -4.9039, -5.0987, -5.9876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0571, device='cuda:0', dtype=torch.float64)
tensor([-2.2728, -3.6978, -4.6891, -4.9829, -5.9879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.0512, device='cuda:0', dtype=torch.float64)
tensor([-2.3319, -3.7768, -4.5167, -4.8659, -6.0277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6609, device='cuda:0', dtype=torch.float64)
tensor([-2.3677, -3.8165, -4.3842, -4.7484, -6.0645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.1698, device='cuda:0', dtype=torch.float64)
tensor([-2.3833, -3.8212, -4.2896, -4.6169, -6.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0308, device='cuda:0', dtype=torch.float64)
tensor([-2.3834, -3.8046, -4.2351, -4.4882, -6.0659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3446, device='cuda:0', dtype=torch.float64)
tensor([-2.3740, -3.7792, -4.2259, -4.4011, -6.0449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3622, device='cuda:0', dtype=torch.float64)
tensor([-2.3612, -3.7537, -4.2600, -4.3805, -6.0219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0172, device='cuda:0', dtype=torch.float64)
tensor([-2.3454, -3.7367, -4.3186, -4.4194, -6.0029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6252, device='cuda:0', dtype=torch.float64)
tensor([-2.3256, -3.7357, -4.3636, -4.4882, -5.9917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7968, device='cuda:0', dtype=torch.float64)
tensor([-2.3001, -3.7507, -4.3621, -4.5629, -5.9864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6677, device='cuda:0', dtype=torch.float64)
tensor([-2.2714, -3.7633, -4.3168, -4.6416, -5.9806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7054, device='cuda:0', dtype=torch.float64)
tensor([-2.2444, -3.7565, -4.2595, -4.7353, -5.9666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4712, device='cuda:0', dtype=torch.float64)
tensor([-2.2246, -3.7359, -4.2221, -4.8482, -5.9426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4019, device='cuda:0', dtype=torch.float64)
tensor([-2.2145, -3.7182, -4.2154, -4.9712, -5.9164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8251, device='cuda:0', dtype=torch.float64)
tensor([-2.2130, -3.7095, -4.2364, -5.0867, -5.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6636, device='cuda:0', dtype=torch.float64)
tensor([-2.2149, -3.7052, -4.2768, -5.1795, -5.8879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8310, device='cuda:0', dtype=torch.float64)
tensor([-2.2155, -3.6948, -4.3241, -5.2326, -5.8834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0783, device='cuda:0', dtype=torch.float64)
tensor([-2.2126, -3.6714, -4.3676, -5.2391, -5.8801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1994, device='cuda:0', dtype=torch.float64)
tensor([-2.2074, -3.6389, -4.3986, -5.2020, -5.8798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0946, device='cuda:0', dtype=torch.float64)
tensor([-2.2020, -3.6082, -4.4079, -5.1301, -5.8840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6301, device='cuda:0', dtype=torch.float64)
tensor([-2.1966, -3.5872, -4.3889, -5.0378, -5.8919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1579, device='cuda:0', dtype=torch.float64)
tensor([-2.1911, -3.5760, -4.3402, -4.9389, -5.8987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7214, device='cuda:0', dtype=torch.float64)
tensor([-2.1850, -3.5717, -4.2759, -4.8488, -5.9004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5512, device='cuda:0', dtype=torch.float64)
tensor([-2.1796, -3.5718, -4.2113, -4.7743, -5.8939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6336, device='cuda:0', dtype=torch.float64)
tensor([-2.1759, -3.5745, -4.1551, -4.7135, -5.8782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7938, device='cuda:0', dtype=torch.float64)
tensor([-2.1766, -3.5792, -4.1103, -4.6626, -5.8566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6846, device='cuda:0', dtype=torch.float64)
tensor([-2.1831, -3.5869, -4.0767, -4.6233, -5.8313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3641, device='cuda:0', dtype=torch.float64)
tensor([-2.1943, -3.5966, -4.0527, -4.6019, -5.8041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1112, device='cuda:0', dtype=torch.float64)
tensor([-2.2088, -3.6057, -4.0357, -4.5989, -5.7758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0722, device='cuda:0', dtype=torch.float64)
tensor([-2.2223, -3.6107, -4.0279, -4.6120, -5.7492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0403, device='cuda:0', dtype=torch.float64)
tensor([-2.2326, -3.6077, -4.0328, -4.6340, -5.7263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9308, device='cuda:0', dtype=torch.float64)
tensor([-2.2370, -3.5964, -4.0528, -4.6595, -5.7073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9477, device='cuda:0', dtype=torch.float64)
tensor([-2.2363, -3.5798, -4.0845, -4.6856, -5.6933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8227, device='cuda:0', dtype=torch.float64)
tensor([-2.2321, -3.5599, -4.1224, -4.7090, -5.6828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6776, device='cuda:0', dtype=torch.float64)
tensor([-2.2262, -3.5407, -4.1615, -4.7280, -5.6754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5280, device='cuda:0', dtype=torch.float64)
tensor([-2.2200, -3.5259, -4.1942, -4.7406, -5.6707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4812, device='cuda:0', dtype=torch.float64)
tensor([-2.2135, -3.5161, -4.2143, -4.7458, -5.6654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5942, device='cuda:0', dtype=torch.float64)
tensor([-2.2074, -3.5112, -4.2139, -4.7446, -5.6588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7259, device='cuda:0', dtype=torch.float64)
tensor([-2.2024, -3.5085, -4.1888, -4.7384, -5.6510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7762, device='cuda:0', dtype=torch.float64)
tensor([-2.1996, -3.5074, -4.1471, -4.7269, -5.6445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5709, device='cuda:0', dtype=torch.float64)
tensor([-2.1985, -3.5052, -4.1010, -4.7130, -5.6401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4613, device='cuda:0', dtype=torch.float64)
tensor([-2.1998, -3.5009, -4.0632, -4.6978, -5.6391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3045, device='cuda:0', dtype=torch.float64)
tensor([-2.2023, -3.4962, -4.0379, -4.6839, -5.6390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2446, device='cuda:0', dtype=torch.float64)
tensor([-2.2050, -3.4918, -4.0275, -4.6734, -5.6410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4049, device='cuda:0', dtype=torch.float64)
tensor([-2.2078, -3.4887, -4.0308, -4.6662, -5.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4438, device='cuda:0', dtype=torch.float64)
tensor([-2.2102, -3.4878, -4.0453, -4.6622, -5.6458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3802, device='cuda:0', dtype=torch.float64)
tensor([-2.2127, -3.4881, -4.0663, -4.6624, -5.6450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2710, device='cuda:0', dtype=torch.float64)
tensor([-2.2139, -3.4884, -4.0871, -4.6659, -5.6426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1859, device='cuda:0', dtype=torch.float64)
tensor([-2.2131, -3.4860, -4.1008, -4.6716, -5.6391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2736, device='cuda:0', dtype=torch.float64)
tensor([-2.2116, -3.4807, -4.1057, -4.6761, -5.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2029, device='cuda:0', dtype=torch.float64)
tensor([-2.2109, -3.4753, -4.1020, -4.6779, -5.6296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1371, device='cuda:0', dtype=torch.float64)
tensor([-2.2101, -3.4699, -4.0934, -4.6785, -5.6241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1047, device='cuda:0', dtype=torch.float64)
tensor([-2.2091, -3.4650, -4.0823, -4.6786, -5.6179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0491, device='cuda:0', dtype=torch.float64)
tensor([-2.2083, -3.4628, -4.0720, -4.6753, -5.6128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0528, device='cuda:0', dtype=torch.float64)
tensor([-2.2083, -3.4631, -4.0614, -4.6701, -5.6089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0409, device='cuda:0', dtype=torch.float64)
tensor([-2.2097, -3.4652, -4.0530, -4.6626, -5.6065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0431, device='cuda:0', dtype=torch.float64)
tensor([-2.2113, -3.4668, -4.0462, -4.6561, -5.6025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0319, device='cuda:0', dtype=torch.float64)
tensor([-2.2124, -3.4673, -4.0396, -4.6482, -5.5997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0336, device='cuda:0', dtype=torch.float64)
tensor([-2.2121, -3.4670, -4.0363, -4.6419, -5.5953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0636, device='cuda:0', dtype=torch.float64)
tensor([-2.2115, -3.4671, -4.0345, -4.6335, -5.5897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0131, device='cuda:0', dtype=torch.float64)
tensor([-2.2114, -3.4659, -4.0333, -4.6246, -5.5827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0139, device='cuda:0', dtype=torch.float64)
tensor([-2.2112, -3.4635, -4.0342, -4.6168, -5.5756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9872, device='cuda:0', dtype=torch.float64)
tensor([-2.2101, -3.4616, -4.0368, -4.6117, -5.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9677, device='cuda:0', dtype=torch.float64)
tensor([-2.2087, -3.4602, -4.0382, -4.6088, -5.5604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0035, device='cuda:0', dtype=torch.float64)
tensor([-2.2054, -3.4576, -4.0401, -4.6102, -5.5518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9552, device='cuda:0', dtype=torch.float64)
tensor([-2.2014, -3.4555, -4.0374, -4.6133, -5.5452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9678, device='cuda:0', dtype=torch.float64)
tensor([-2.1956, -3.4523, -4.0323, -4.6192, -5.5403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9720, device='cuda:0', dtype=torch.float64)
tensor([-2.1892, -3.4480, -4.0273, -4.6280, -5.5367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9292, device='cuda:0', dtype=torch.float64)
tensor([-2.1828, -3.4442, -4.0240, -4.6397, -5.5329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9517, device='cuda:0', dtype=torch.float64)
tensor([-2.1796, -3.4412, -4.0210, -4.6516, -5.5318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9312, device='cuda:0', dtype=torch.float64)
tensor([-2.1786, -3.4395, -4.0191, -4.6577, -5.5314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9302, device='cuda:0', dtype=torch.float64)
tensor([-2.1805, -3.4397, -4.0202, -4.6593, -5.5325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9407, device='cuda:0', dtype=torch.float64)
tensor([-2.1840, -3.4407, -4.0222, -4.6574, -5.5333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0123, device='cuda:0', dtype=torch.float64)
tensor([-2.1873, -3.4414, -4.0259, -4.6552, -5.5329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9663, device='cuda:0', dtype=torch.float64)
tensor([-2.1905, -3.4419, -4.0261, -4.6514, -5.5304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8843, device='cuda:0', dtype=torch.float64)
tensor([-2.1939, -3.4429, -4.0243, -4.6453, -5.5270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9616, device='cuda:0', dtype=torch.float64)
tensor([-2.1963, -3.4441, -4.0202, -4.6401, -5.5247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([-2.1976, -3.4444, -4.0169, -4.6367, -5.5206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9202, device='cuda:0', dtype=torch.float64)
tensor([-2.1984, -3.4443, -4.0106, -4.6333, -5.5150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-2.1963, -3.4415, -4.0038, -4.6322, -5.5076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8992, device='cuda:0', dtype=torch.float64)
tensor([-2.1936, -3.4380, -3.9954, -4.6333, -5.5007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8749, device='cuda:0', dtype=torch.float64)
tensor([-2.1900, -3.4318, -3.9894, -4.6363, -5.4944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8982, device='cuda:0', dtype=torch.float64)
tensor([-2.1865, -3.4252, -3.9883, -4.6402, -5.4852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9431, device='cuda:0', dtype=torch.float64)
tensor([-2.1850, -3.4197, -3.9889, -4.6458, -5.4755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9282, device='cuda:0', dtype=torch.float64)
tensor([-2.1851, -3.4159, -3.9897, -4.6473, -5.4692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9765, device='cuda:0', dtype=torch.float64)
tensor([-2.1865, -3.4138, -3.9883, -4.6439, -5.4653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9333, device='cuda:0', dtype=torch.float64)
tensor([-2.1898, -3.4135, -3.9846, -4.6351, -5.4624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9462, device='cuda:0', dtype=torch.float64)
tensor([-2.1919, -3.4113, -3.9833, -4.6263, -5.4613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8880, device='cuda:0', dtype=torch.float64)
tensor([-2.1930, -3.4084, -3.9849, -4.6186, -5.4611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9216, device='cuda:0', dtype=torch.float64)
tensor([-2.1933, -3.4083, -3.9883, -4.6125, -5.4597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9009, device='cuda:0', dtype=torch.float64)
tensor([-2.1929, -3.4101, -3.9884, -4.6071, -5.4561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9986, device='cuda:0', dtype=torch.float64)
tensor([-2.1933, -3.4111, -3.9817, -4.6010, -5.4551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9911, device='cuda:0', dtype=torch.float64)
tensor([-2.1941, -3.4138, -3.9735, -4.5948, -5.4525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([-2.1957, -3.4159, -3.9668, -4.5887, -5.4515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9726, device='cuda:0', dtype=torch.float64)
tensor([-2.1969, -3.4175, -3.9615, -4.5819, -5.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9620, device='cuda:0', dtype=torch.float64)
tensor([-2.1962, -3.4156, -3.9582, -4.5768, -5.4454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9338, device='cuda:0', dtype=torch.float64)
tensor([-2.1955, -3.4130, -3.9565, -4.5741, -5.4398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0098, device='cuda:0', dtype=torch.float64)
tensor([-2.1947, -3.4115, -3.9507, -4.5741, -5.4316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9144, device='cuda:0', dtype=torch.float64)
tensor([-2.1949, -3.4083, -3.9469, -4.5740, -5.4260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9257, device='cuda:0', dtype=torch.float64)
tensor([-2.1956, -3.4064, -3.9509, -4.5738, -5.4208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9373, device='cuda:0', dtype=torch.float64)
tensor([-2.1955, -3.4061, -3.9569, -4.5752, -5.4164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9058, device='cuda:0', dtype=torch.float64)
tensor([-2.1947, -3.4027, -3.9670, -4.5771, -5.4164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9379, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -3.3977, -3.9753, -4.5826, -5.4150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8637, device='cuda:0', dtype=torch.float64)
tensor([-2.1871, -3.3929, -3.9767, -4.5875, -5.4118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9564, device='cuda:0', dtype=torch.float64)
tensor([-2.1826, -3.3902, -3.9732, -4.5926, -5.4067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9924, device='cuda:0', dtype=torch.float64)
tensor([-2.1810, -3.3883, -3.9597, -4.5910, -5.4032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9505, device='cuda:0', dtype=torch.float64)
tensor([-2.1820, -3.3853, -3.9456, -4.5859, -5.4012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9086, device='cuda:0', dtype=torch.float64)
tensor([-2.1844, -3.3841, -3.9354, -4.5790, -5.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9108, device='cuda:0', dtype=torch.float64)
tensor([-2.1873, -3.3844, -3.9288, -4.5733, -5.3870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9924, device='cuda:0', dtype=torch.float64)
tensor([-2.1910, -3.3872, -3.9244, -4.5694, -5.3806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9722, device='cuda:0', dtype=torch.float64)
tensor([-2.1953, -3.3919, -3.9236, -4.5635, -5.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9501, device='cuda:0', dtype=torch.float64)
tensor([-2.1984, -3.3956, -3.9239, -4.5582, -5.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9672, device='cuda:0', dtype=torch.float64)
tensor([-2.2010, -3.4002, -3.9243, -4.5544, -5.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0320, device='cuda:0', dtype=torch.float64)
tensor([-2.2015, -3.4006, -3.9220, -4.5507, -5.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-2.2003, -3.4024, -3.9210, -4.5488, -5.3520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-2.1988, -3.4021, -3.9193, -4.5437, -5.3496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0252, device='cuda:0', dtype=torch.float64)
tensor([-2.1963, -3.4013, -3.9218, -4.5391, -5.3476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9919, device='cuda:0', dtype=torch.float64)
tensor([-2.1926, -3.3975, -3.9287, -4.5395, -5.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9986, device='cuda:0', dtype=torch.float64)
tensor([-2.1876, -3.3944, -3.9362, -4.5431, -5.3426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-2.1822, -3.3881, -3.9409, -4.5496, -5.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([-2.1762, -3.3852, -3.9413, -4.5557, -5.3391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0121, device='cuda:0', dtype=torch.float64)
tensor([-2.1751, -3.3826, -3.9372, -4.5603, -5.3353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9591, device='cuda:0', dtype=torch.float64)
tensor([-2.1767, -3.3829, -3.9276, -4.5587, -5.3318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0436, device='cuda:0', dtype=torch.float64)
tensor([-2.1828, -3.3855, -3.9192, -4.5471, -5.3283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9914, device='cuda:0', dtype=torch.float64)
tensor([-2.1873, -3.3883, -3.9132, -4.5344, -5.3263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1491, device='cuda:0', dtype=torch.float64)
tensor([-2.1907, -3.3891, -3.9121, -4.5267, -5.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9839, device='cuda:0', dtype=torch.float64)
tensor([-2.1923, -3.3922, -3.9142, -4.5233, -5.3138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0148, device='cuda:0', dtype=torch.float64)
tensor([-2.1915, -3.3915, -3.9172, -4.5229, -5.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-2.1914, -3.3897, -3.9221, -4.5220, -5.3038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9996, device='cuda:0', dtype=torch.float64)
tensor([-2.1911, -3.3884, -3.9267, -4.5214, -5.3001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0253, device='cuda:0', dtype=torch.float64)
tensor([-2.1904, -3.3859, -3.9263, -4.5187, -5.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0446, device='cuda:0', dtype=torch.float64)
tensor([-2.1894, -3.3817, -3.9199, -4.5173, -5.2950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0979, device='cuda:0', dtype=torch.float64)
tensor([-2.1865, -3.3760, -3.9120, -4.5226, -5.2894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9989, device='cuda:0', dtype=torch.float64)
tensor([-2.1850, -3.3717, -3.9044, -4.5241, -5.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-2.1834, -3.3626, -3.9018, -4.5255, -5.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-2.1832, -3.3552, -3.9021, -4.5234, -5.2746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9445, device='cuda:0', dtype=torch.float64)
tensor([-2.1795, -3.3481, -3.9046, -4.5239, -5.2748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1433, device='cuda:0', dtype=torch.float64)
tensor([-2.1772, -3.3487, -3.9030, -4.5258, -5.2714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0448, device='cuda:0', dtype=torch.float64)
tensor([-2.1768, -3.3555, -3.9031, -4.5272, -5.2680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9440, device='cuda:0', dtype=torch.float64)
tensor([-2.1797, -3.3663, -3.9006, -4.5319, -5.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0637, device='cuda:0', dtype=torch.float64)
tensor([-2.1858, -3.3768, -3.8980, -4.5319, -5.2613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9693, device='cuda:0', dtype=torch.float64)
tensor([-2.1919, -3.3787, -3.8997, -4.5318, -5.2578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9276, device='cuda:0', dtype=torch.float64)
tensor([-2.1948, -3.3713, -3.9010, -4.5301, -5.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0512, device='cuda:0', dtype=torch.float64)
tensor([-2.1972, -3.3589, -3.9012, -4.5280, -5.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1208, device='cuda:0', dtype=torch.float64)
tensor([-2.1961, -3.3475, -3.8985, -4.5254, -5.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9716, device='cuda:0', dtype=torch.float64)
tensor([-2.1924, -3.3403, -3.8930, -4.5231, -5.2512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1551, device='cuda:0', dtype=torch.float64)
tensor([-2.1887, -3.3370, -3.8875, -4.5190, -5.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1295, device='cuda:0', dtype=torch.float64)
tensor([-2.1872, -3.3427, -3.8817, -4.5097, -5.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1475, device='cuda:0', dtype=torch.float64)
tensor([-2.1857, -3.3516, -3.8736, -4.4951, -5.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-2.1824, -3.3619, -3.8690, -4.4902, -5.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0283, device='cuda:0', dtype=torch.float64)
tensor([-2.1809, -3.3681, -3.8675, -4.4895, -5.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0443, device='cuda:0', dtype=torch.float64)
tensor([-2.1794, -3.3677, -3.8689, -4.4892, -5.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0473, device='cuda:0', dtype=torch.float64)
tensor([-2.1817, -3.3684, -3.8729, -4.4891, -5.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1726, device='cuda:0', dtype=torch.float64)
tensor([-2.1865, -3.3654, -3.8763, -4.4740, -5.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0483, device='cuda:0', dtype=torch.float64)
tensor([-2.1903, -3.3564, -3.8743, -4.4568, -5.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([-2.1935, -3.3507, -3.8697, -4.4439, -5.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0197, device='cuda:0', dtype=torch.float64)
tensor([-2.1977, -3.3503, -3.8635, -4.4376, -5.2050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9986, device='cuda:0', dtype=torch.float64)
tensor([-2.1986, -3.3514, -3.8628, -4.4432, -5.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0412, device='cuda:0', dtype=torch.float64)
tensor([-2.1964, -3.3542, -3.8677, -4.4561, -5.1934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1982, device='cuda:0', dtype=torch.float64)
tensor([-2.1937, -3.3570, -3.8750, -4.4702, -5.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -3.3562, -3.8827, -4.4901, -5.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9947, device='cuda:0', dtype=torch.float64)
tensor([-2.1856, -3.3507, -3.8874, -4.5079, -5.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-2.1801, -3.3514, -3.8890, -4.5181, -5.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-2.1776, -3.3538, -3.8877, -4.5124, -5.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1889, device='cuda:0', dtype=torch.float64)
tensor([-2.1779, -3.3560, -3.8840, -4.4929, -5.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1393, device='cuda:0', dtype=torch.float64)
tensor([-2.1797, -3.3553, -3.8789, -4.4724, -5.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1729, device='cuda:0', dtype=torch.float64)
tensor([-2.1796, -3.3534, -3.8708, -4.4612, -5.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-2.1837, -3.3533, -3.8620, -4.4561, -5.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-2.1885, -3.3510, -3.8570, -4.4566, -5.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1163, device='cuda:0', dtype=torch.float64)
tensor([-2.1933, -3.3474, -3.8570, -4.4572, -5.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0745, device='cuda:0', dtype=torch.float64)
tensor([-2.2003, -3.3447, -3.8598, -4.4565, -5.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([-2.2051, -3.3432, -3.8660, -4.4545, -5.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1533, device='cuda:0', dtype=torch.float64)
tensor([-2.2085, -3.3497, -3.8697, -4.4558, -5.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1225, device='cuda:0', dtype=torch.float64)
tensor([-2.2089, -3.3561, -3.8616, -4.4547, -5.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1174, device='cuda:0', dtype=torch.float64)
tensor([-2.2065, -3.3563, -3.8558, -4.4539, -5.1573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1207, device='cuda:0', dtype=torch.float64)
tensor([-2.2037, -3.3581, -3.8577, -4.4537, -5.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2337, device='cuda:0', dtype=torch.float64)
tensor([-2.2005, -3.3524, -3.8676, -4.4498, -5.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([-2.1947, -3.3459, -3.8790, -4.4498, -5.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1383, device='cuda:0', dtype=torch.float64)
tensor([-2.1858, -3.3350, -3.8894, -4.4533, -5.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3041, device='cuda:0', dtype=torch.float64)
tensor([-2.1804, -3.3225, -3.8921, -4.4609, -5.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1414, device='cuda:0', dtype=torch.float64)
tensor([-2.1781, -3.3090, -3.8893, -4.4695, -5.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1151, device='cuda:0', dtype=torch.float64)
tensor([-2.1786, -3.2979, -3.8814, -4.4721, -5.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2441, device='cuda:0', dtype=torch.float64)
tensor([-2.1788, -3.2909, -3.8761, -4.4718, -5.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-2.1807, -3.2891, -3.8703, -4.4699, -5.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0306, device='cuda:0', dtype=torch.float64)
tensor([-2.1835, -3.2956, -3.8639, -4.4658, -5.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1741, device='cuda:0', dtype=torch.float64)
tensor([-2.1873, -3.3091, -3.8642, -4.4624, -5.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0344, device='cuda:0', dtype=torch.float64)
tensor([-2.1863, -3.3212, -3.8653, -4.4557, -5.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2199, device='cuda:0', dtype=torch.float64)
tensor([-2.1848, -3.3270, -3.8680, -4.4442, -5.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0296, device='cuda:0', dtype=torch.float64)
tensor([-2.1804, -3.3300, -3.8736, -4.4398, -5.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([-2.1770, -3.3385, -3.8789, -4.4427, -5.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-2.1778, -3.3422, -3.8833, -4.4456, -5.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2193, device='cuda:0', dtype=torch.float64)
tensor([-2.1796, -3.3391, -3.8794, -4.4550, -5.1154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9281, device='cuda:0', dtype=torch.float64)
tensor([-2.1868, -3.3331, -3.8683, -4.4608, -5.0966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2365, device='cuda:0', dtype=torch.float64)
tensor([-2.1947, -3.3226, -3.8556, -4.4559, -5.0872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0524, device='cuda:0', dtype=torch.float64)
tensor([-2.2044, -3.3185, -3.8455, -4.4468, -5.0911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0154, device='cuda:0', dtype=torch.float64)
tensor([-2.2090, -3.3196, -3.8403, -4.4422, -5.0964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2482, device='cuda:0', dtype=torch.float64)
tensor([-2.2106, -3.3235, -3.8303, -4.4442, -5.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-2.2060, -3.3305, -3.8161, -4.4505, -5.0937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2109, device='cuda:0', dtype=torch.float64)
tensor([-2.1981, -3.3340, -3.8067, -4.4632, -5.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3579, device='cuda:0', dtype=torch.float64)
tensor([-2.1955, -3.3323, -3.7964, -4.4636, -5.0723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4102, device='cuda:0', dtype=torch.float64)
tensor([-2.1957, -3.3300, -3.7920, -4.4526, -5.0724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0935, device='cuda:0', dtype=torch.float64)
tensor([-2.1980, -3.3283, -3.7910, -4.4380, -5.0773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4594, device='cuda:0', dtype=torch.float64)
tensor([-2.1986, -3.3261, -3.8015, -4.4332, -5.0722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4491, device='cuda:0', dtype=torch.float64)
tensor([-2.2022, -3.3246, -3.8172, -4.4345, -5.0617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1882, device='cuda:0', dtype=torch.float64)
tensor([-2.2061, -3.3183, -3.8322, -4.4340, -5.0535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4449, device='cuda:0', dtype=torch.float64)
tensor([-2.2114, -3.3136, -3.8373, -4.4210, -5.0471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2797, device='cuda:0', dtype=torch.float64)
tensor([-2.2174, -3.3124, -3.8338, -4.4091, -5.0399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4146, device='cuda:0', dtype=torch.float64)
tensor([-2.2211, -3.3166, -3.8148, -4.4082, -5.0404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4079, device='cuda:0', dtype=torch.float64)
tensor([-2.2179, -3.3240, -3.8054, -4.4236, -5.0388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0755, device='cuda:0', dtype=torch.float64)
tensor([-2.2112, -3.3318, -3.8032, -4.4442, -5.0411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0709, device='cuda:0', dtype=torch.float64)
tensor([-2.2034, -3.3295, -3.8071, -4.4549, -5.0426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1867, device='cuda:0', dtype=torch.float64)
tensor([-2.1958, -3.3190, -3.8144, -4.4546, -5.0453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2233, device='cuda:0', dtype=torch.float64)
tensor([-2.1925, -3.3122, -3.8169, -4.4389, -5.0450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1097, device='cuda:0', dtype=torch.float64)
tensor([-2.1896, -3.3047, -3.8231, -4.4267, -5.0392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4227, device='cuda:0', dtype=torch.float64)
tensor([-2.1851, -3.2931, -3.8293, -4.4205, -5.0261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-2.1845, -3.2886, -3.8246, -4.4179, -5.0100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1312, device='cuda:0', dtype=torch.float64)
tensor([-2.1863, -3.2877, -3.8161, -4.4170, -5.0024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4569, device='cuda:0', dtype=torch.float64)
tensor([-2.1898, -3.2926, -3.8122, -4.4086, -4.9942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2706, device='cuda:0', dtype=torch.float64)
tensor([-2.1983, -3.2998, -3.8065, -4.3995, -4.9915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3214, device='cuda:0', dtype=torch.float64)
tensor([-2.2071, -3.3037, -3.7851, -4.3875, -4.9837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4541, device='cuda:0', dtype=torch.float64)
tensor([-2.2120, -3.3076, -3.7780, -4.3829, -4.9683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3492, device='cuda:0', dtype=torch.float64)
tensor([-2.2121, -3.3146, -3.7803, -4.3954, -4.9528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0166, device='cuda:0', dtype=torch.float64)
tensor([-2.2101, -3.3152, -3.7919, -4.4059, -4.9448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-2.2073, -3.3174, -3.8036, -4.4114, -4.9485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3507, device='cuda:0', dtype=torch.float64)
tensor([-2.2026, -3.3138, -3.8285, -4.4180, -4.9603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1103, device='cuda:0', dtype=torch.float64)
tensor([-2.1993, -3.3084, -3.8445, -4.4234, -4.9696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2497, device='cuda:0', dtype=torch.float64)
tensor([-2.1978, -3.3015, -3.8417, -4.4197, -4.9700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3177, device='cuda:0', dtype=torch.float64)
tensor([-2.1959, -3.2904, -3.8342, -4.4226, -4.9666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2396, device='cuda:0', dtype=torch.float64)
tensor([-2.1914, -3.2855, -3.8265, -4.4226, -4.9639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2967, device='cuda:0', dtype=torch.float64)
tensor([-2.1898, -3.2831, -3.8165, -4.4172, -4.9675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2047, device='cuda:0', dtype=torch.float64)
tensor([-2.1880, -3.2928, -3.8102, -4.4039, -4.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3323, device='cuda:0', dtype=torch.float64)
tensor([-2.1855, -3.3030, -3.8114, -4.3950, -4.9941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4626, device='cuda:0', dtype=torch.float64)
tensor([-2.1825, -3.3053, -3.8164, -4.3930, -5.0051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3864, device='cuda:0', dtype=torch.float64)
tensor([-2.1817, -3.3068, -3.8198, -4.3961, -5.0076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6292, device='cuda:0', dtype=torch.float64)
tensor([-2.1807, -3.3030, -3.8258, -4.4101, -4.9925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6405, device='cuda:0', dtype=torch.float64)
tensor([-2.1841, -3.3039, -3.8301, -4.4108, -4.9703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7596, device='cuda:0', dtype=torch.float64)
tensor([-2.1935, -3.3078, -3.8237, -4.3890, -4.9526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3149, device='cuda:0', dtype=torch.float64)
tensor([-2.2051, -3.3103, -3.8134, -4.3552, -4.9463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5237, device='cuda:0', dtype=torch.float64)
tensor([-2.2120, -3.3175, -3.8014, -4.3256, -4.9458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4903, device='cuda:0', dtype=torch.float64)
tensor([-2.2128, -3.3209, -3.7985, -4.3109, -4.9512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3440, device='cuda:0', dtype=torch.float64)
tensor([-2.2077, -3.3202, -3.8085, -4.3184, -4.9583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4127, device='cuda:0', dtype=torch.float64)
tensor([-2.1970, -3.3159, -3.8264, -4.3374, -4.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3189, device='cuda:0', dtype=torch.float64)
tensor([-2.1829, -3.3091, -3.8354, -4.3556, -4.9776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5159, device='cuda:0', dtype=torch.float64)
tensor([-2.1729, -3.3056, -3.8255, -4.3757, -4.9741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2981, device='cuda:0', dtype=torch.float64)
tensor([-2.1718, -3.3040, -3.8197, -4.3943, -4.9614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6254, device='cuda:0', dtype=torch.float64)
tensor([-2.1762, -3.3087, -3.8037, -4.3874, -4.9545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3095, device='cuda:0', dtype=torch.float64)
tensor([-2.1797, -3.3126, -3.7960, -4.3717, -4.9494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5943, device='cuda:0', dtype=torch.float64)
tensor([-2.1786, -3.3037, -3.8038, -4.3529, -4.9508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6197, device='cuda:0', dtype=torch.float64)
tensor([-2.1763, -3.2924, -3.8250, -4.3473, -4.9534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4800, device='cuda:0', dtype=torch.float64)
tensor([-2.1715, -3.2851, -3.8465, -4.3655, -4.9556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1591, device='cuda:0', dtype=torch.float64)
tensor([-2.1708, -3.2794, -3.8485, -4.3870, -4.9490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2712, device='cuda:0', dtype=torch.float64)
tensor([-2.1788, -3.2842, -3.8369, -4.3994, -4.9362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9714, device='cuda:0', dtype=torch.float64)
tensor([-2.1988, -3.3008, -3.8069, -4.3799, -4.9197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4307, device='cuda:0', dtype=torch.float64)
tensor([-2.2193, -3.3193, -3.7826, -4.3543, -4.9018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3119, device='cuda:0', dtype=torch.float64)
tensor([-2.2351, -3.3322, -3.7668, -4.3439, -4.8866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4710, device='cuda:0', dtype=torch.float64)
tensor([-2.2428, -3.3344, -3.7746, -4.3539, -4.8728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6993, device='cuda:0', dtype=torch.float64)
tensor([-2.2411, -3.3354, -3.8007, -4.3878, -4.8571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2992, device='cuda:0', dtype=torch.float64)
tensor([-2.2335, -3.3314, -3.8282, -4.4226, -4.8522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4446, device='cuda:0', dtype=torch.float64)
tensor([-2.2215, -3.3256, -3.8469, -4.4373, -4.8655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7331, device='cuda:0', dtype=torch.float64)
tensor([-2.2175, -3.3225, -3.8403, -4.4180, -4.8943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-2.2174, -3.3243, -3.8157, -4.3919, -4.9082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5094, device='cuda:0', dtype=torch.float64)
tensor([-2.2071, -3.3254, -3.7870, -4.3742, -4.9063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8301, device='cuda:0', dtype=torch.float64)
tensor([-2.1982, -3.3232, -3.7767, -4.3708, -4.8855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6409, device='cuda:0', dtype=torch.float64)
tensor([-2.1950, -3.3236, -3.7778, -4.3697, -4.8683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5014, device='cuda:0', dtype=torch.float64)
tensor([-2.1966, -3.3193, -3.7804, -4.3656, -4.8547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3817, device='cuda:0', dtype=torch.float64)
tensor([-2.2036, -3.3171, -3.7864, -4.3525, -4.8546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4417, device='cuda:0', dtype=torch.float64)
tensor([-2.2130, -3.3143, -3.7831, -4.3331, -4.8699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8750, device='cuda:0', dtype=torch.float64)
tensor([-2.2175, -3.3089, -3.7726, -4.3256, -4.8900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6892, device='cuda:0', dtype=torch.float64)
tensor([-2.2199, -3.3020, -3.7547, -4.3304, -4.9028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3968, device='cuda:0', dtype=torch.float64)
tensor([-2.2242, -3.3027, -3.7428, -4.3416, -4.9172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3617, device='cuda:0', dtype=torch.float64)
tensor([-2.2305, -3.3032, -3.7441, -4.3391, -4.9219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4793, device='cuda:0', dtype=torch.float64)
tensor([-2.2334, -3.3082, -3.7585, -4.3376, -4.9092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2268, device='cuda:0', dtype=torch.float64)
tensor([-2.2326, -3.3117, -3.7875, -4.3406, -4.8894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3882, device='cuda:0', dtype=torch.float64)
tensor([-2.2284, -3.3146, -3.8139, -4.3547, -4.8749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3249, device='cuda:0', dtype=torch.float64)
tensor([-2.2158, -3.3108, -3.8339, -4.3698, -4.8604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7251, device='cuda:0', dtype=torch.float64)
tensor([-2.2076, -3.3133, -3.8468, -4.3723, -4.8567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5965, device='cuda:0', dtype=torch.float64)
tensor([-2.2025, -3.3077, -3.8350, -4.3690, -4.8583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3177, device='cuda:0', dtype=torch.float64)
tensor([-2.1974, -3.3038, -3.8188, -4.3673, -4.8659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3913, device='cuda:0', dtype=torch.float64)
tensor([-2.1944, -3.2928, -3.7956, -4.3641, -4.8821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([-2.1973, -3.2831, -3.7808, -4.3584, -4.8957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4353, device='cuda:0', dtype=torch.float64)
tensor([-2.2012, -3.2803, -3.7700, -4.3560, -4.8905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-2.2104, -3.2834, -3.7647, -4.3565, -4.8894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5502, device='cuda:0', dtype=torch.float64)
tensor([-2.2279, -3.2993, -3.7615, -4.3551, -4.8983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4018, device='cuda:0', dtype=torch.float64)
tensor([-2.2450, -3.3115, -3.7511, -4.3546, -4.9016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4332, device='cuda:0', dtype=torch.float64)
tensor([-2.2623, -3.3281, -3.7335, -4.3423, -4.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3768, device='cuda:0', dtype=torch.float64)
tensor([-2.2748, -3.3333, -3.7232, -4.3455, -4.8944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5806, device='cuda:0', dtype=torch.float64)
tensor([-2.2792, -3.3317, -3.7175, -4.3552, -4.8773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1376, device='cuda:0', dtype=torch.float64)
tensor([-2.2769, -3.3284, -3.7136, -4.3578, -4.8549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5634, device='cuda:0', dtype=torch.float64)
tensor([-2.2732, -3.3261, -3.6996, -4.3355, -4.8389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4479, device='cuda:0', dtype=torch.float64)
tensor([-2.2656, -3.3247, -3.6878, -4.3096, -4.8244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5361, device='cuda:0', dtype=torch.float64)
tensor([-2.2569, -3.3170, -3.6812, -4.2962, -4.8232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5733, device='cuda:0', dtype=torch.float64)
tensor([-2.2501, -3.3082, -3.6773, -4.2760, -4.8300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8599, device='cuda:0', dtype=torch.float64)
tensor([-2.2349, -3.2914, -3.6826, -4.2656, -4.8184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8261, device='cuda:0', dtype=torch.float64)
tensor([-2.2128, -3.2658, -3.7152, -4.2624, -4.8044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7254, device='cuda:0', dtype=torch.float64)
tensor([-2.2014, -3.2543, -3.7490, -4.2523, -4.7985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2942, device='cuda:0', dtype=torch.float64)
tensor([-2.2010, -3.2543, -3.7835, -4.2612, -4.7927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4524, device='cuda:0', dtype=torch.float64)
tensor([-2.2033, -3.2620, -3.8174, -4.2906, -4.7917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5331, device='cuda:0', dtype=torch.float64)
tensor([-2.2122, -3.2803, -3.8284, -4.3172, -4.7841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5224, device='cuda:0', dtype=torch.float64)
tensor([-2.2176, -3.2988, -3.8183, -4.3349, -4.7853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2833, device='cuda:0', dtype=torch.float64)
tensor([-2.2231, -3.3104, -3.7984, -4.3499, -4.7941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5843, device='cuda:0', dtype=torch.float64)
tensor([-2.2316, -3.3091, -3.7886, -4.3373, -4.8154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3194, device='cuda:0', dtype=torch.float64)
tensor([-2.2347, -3.3077, -3.7841, -4.3121, -4.8398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6078, device='cuda:0', dtype=torch.float64)
tensor([-2.2376, -3.3072, -3.7796, -4.2824, -4.8673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5372, device='cuda:0', dtype=torch.float64)
tensor([-2.2432, -3.3165, -3.7935, -4.2658, -4.8787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3957, device='cuda:0', dtype=torch.float64)
tensor([-2.2469, -3.3265, -3.8056, -4.2561, -4.8743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8010, device='cuda:0', dtype=torch.float64)
tensor([-2.2574, -3.3431, -3.8115, -4.2415, -4.8550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6877, device='cuda:0', dtype=torch.float64)
tensor([-2.2649, -3.3510, -3.8218, -4.2348, -4.8262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4970, device='cuda:0', dtype=torch.float64)
tensor([-2.2730, -3.3597, -3.8188, -4.2459, -4.7995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3429, device='cuda:0', dtype=torch.float64)
tensor([-2.2726, -3.3476, -3.8157, -4.2792, -4.7742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4543, device='cuda:0', dtype=torch.float64)
tensor([-2.2625, -3.3301, -3.8007, -4.2995, -4.7591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5000, device='cuda:0', dtype=torch.float64)
tensor([-2.2507, -3.3035, -3.7782, -4.3077, -4.7447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4894, device='cuda:0', dtype=torch.float64)
tensor([-2.2474, -3.2768, -3.7638, -4.3108, -4.7530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5288, device='cuda:0', dtype=torch.float64)
tensor([-2.2552, -3.2585, -3.7610, -4.2982, -4.7733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3341, device='cuda:0', dtype=torch.float64)
tensor([-2.2625, -3.2435, -3.7611, -4.2938, -4.7825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6214, device='cuda:0', dtype=torch.float64)
tensor([-2.2659, -3.2347, -3.7627, -4.3090, -4.7833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6569, device='cuda:0', dtype=torch.float64)
tensor([-2.2622, -3.2480, -3.7801, -4.3286, -4.7658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4404, device='cuda:0', dtype=torch.float64)
tensor([-2.2571, -3.2742, -3.7929, -4.3540, -4.7451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5459, device='cuda:0', dtype=torch.float64)
tensor([-2.2549, -3.3044, -3.7900, -4.3645, -4.7471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7224, device='cuda:0', dtype=torch.float64)
tensor([-2.2605, -3.3395, -3.7768, -4.3781, -4.7560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5627, device='cuda:0', dtype=torch.float64)
tensor([-2.2615, -3.3612, -3.7732, -4.4033, -4.7615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4252, device='cuda:0', dtype=torch.float64)
tensor([-2.2530, -3.3559, -3.7763, -4.4198, -4.7646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6772, device='cuda:0', dtype=torch.float64)
tensor([-2.2455, -3.3468, -3.7878, -4.4166, -4.7690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5146, device='cuda:0', dtype=torch.float64)
tensor([-2.2408, -3.3321, -3.7993, -4.3967, -4.7719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3554, device='cuda:0', dtype=torch.float64)
tensor([-2.2336, -3.3136, -3.8094, -4.3780, -4.7682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4482, device='cuda:0', dtype=torch.float64)
tensor([-2.2325, -3.2907, -3.8074, -4.3515, -4.7645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9296, device='cuda:0', dtype=torch.float64)
tensor([-2.2425, -3.2877, -3.7858, -4.3292, -4.7617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6541, device='cuda:0', dtype=torch.float64)
tensor([-2.2450, -3.2924, -3.7792, -4.3229, -4.7604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7033, device='cuda:0', dtype=torch.float64)
tensor([-2.2542, -3.2953, -3.7808, -4.3352, -4.7704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7679, device='cuda:0', dtype=torch.float64)
tensor([-2.2656, -3.2950, -3.7683, -4.3575, -4.7866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3289, device='cuda:0', dtype=torch.float64)
tensor([-2.2678, -3.2960, -3.7491, -4.3814, -4.7844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5602, device='cuda:0', dtype=torch.float64)
tensor([-2.2723, -3.2972, -3.7154, -4.3689, -4.7904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7419, device='cuda:0', dtype=torch.float64)
tensor([-2.2768, -3.3099, -3.6821, -4.3488, -4.8010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8300, device='cuda:0', dtype=torch.float64)
tensor([-2.2778, -3.3188, -3.6620, -4.3344, -4.8072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6624, device='cuda:0', dtype=torch.float64)
tensor([-2.2706, -3.3400, -3.6581, -4.3215, -4.8139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4023, device='cuda:0', dtype=torch.float64)
tensor([-2.2582, -3.3546, -3.6778, -4.3261, -4.8207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4272, device='cuda:0', dtype=torch.float64)
tensor([-2.2492, -3.3354, -3.7149, -4.3320, -4.8160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7022, device='cuda:0', dtype=torch.float64)
tensor([-2.2420, -3.3259, -3.7842, -4.3390, -4.8171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5793, device='cuda:0', dtype=torch.float64)
tensor([-2.2417, -3.3310, -3.8584, -4.3589, -4.8181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9081, device='cuda:0', dtype=torch.float64)
tensor([-2.2438, -3.3361, -3.8515, -4.3689, -4.8039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8129, device='cuda:0', dtype=torch.float64)
tensor([-2.2481, -3.3370, -3.8245, -4.3860, -4.7818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6899, device='cuda:0', dtype=torch.float64)
tensor([-2.2634, -3.3374, -3.7961, -4.3919, -4.7666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6275, device='cuda:0', dtype=torch.float64)
tensor([-2.2716, -3.3429, -3.7789, -4.3822, -4.7599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5431, device='cuda:0', dtype=torch.float64)
tensor([-2.2730, -3.3434, -3.7736, -4.3616, -4.7495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9980, device='cuda:0', dtype=torch.float64)
tensor([-2.2518, -3.3197, -3.7939, -4.3477, -4.7390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5076, device='cuda:0', dtype=torch.float64)
tensor([-2.2260, -3.2928, -3.8343, -4.3514, -4.7346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7620, device='cuda:0', dtype=torch.float64)
tensor([-2.2155, -3.2713, -3.8631, -4.3514, -4.7357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9390, device='cuda:0', dtype=torch.float64)
tensor([-2.2060, -3.2664, -3.8668, -4.3527, -4.7440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5647, device='cuda:0', dtype=torch.float64)
tensor([-2.2099, -3.2831, -3.8577, -4.3430, -4.7519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8181, device='cuda:0', dtype=torch.float64)
tensor([-2.2175, -3.2947, -3.8460, -4.3335, -4.7483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7649, device='cuda:0', dtype=torch.float64)
tensor([-2.2349, -3.3123, -3.8313, -4.3050, -4.7482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7889, device='cuda:0', dtype=torch.float64)
tensor([-2.2421, -3.3407, -3.8215, -4.2801, -4.7387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3768, device='cuda:0', dtype=torch.float64)
tensor([-2.2512, -3.3718, -3.8085, -4.2540, -4.7273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8807, device='cuda:0', dtype=torch.float64)
tensor([-2.2564, -3.4008, -3.7848, -4.2252, -4.7208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9151, device='cuda:0', dtype=torch.float64)
tensor([-2.2673, -3.4119, -3.7623, -4.2166, -4.7188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6472, device='cuda:0', dtype=torch.float64)
tensor([-2.2740, -3.4067, -3.7440, -4.1836, -4.7363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5947, device='cuda:0', dtype=torch.float64)
tensor([-2.2844, -3.3959, -3.7270, -4.1519, -4.7633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5907, device='cuda:0', dtype=torch.float64)
tensor([-2.2855, -3.3721, -3.7306, -4.1492, -4.7816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6600, device='cuda:0', dtype=torch.float64)
tensor([-2.2768, -3.3545, -3.7483, -4.1724, -4.7898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6153, device='cuda:0', dtype=torch.float64)
tensor([-2.2714, -3.3448, -3.7726, -4.2014, -4.7891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6521, device='cuda:0', dtype=torch.float64)
tensor([-2.2699, -3.3404, -3.7842, -4.2280, -4.7936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3757, device='cuda:0', dtype=torch.float64)
tensor([-2.2802, -3.3467, -3.7655, -4.2573, -4.7883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4479, device='cuda:0', dtype=torch.float64)
tensor([-2.2912, -3.3630, -3.7400, -4.2744, -4.7750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7519, device='cuda:0', dtype=torch.float64)
tensor([-2.3040, -3.3819, -3.7361, -4.2876, -4.7707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6721, device='cuda:0', dtype=torch.float64)
tensor([-2.3142, -3.3893, -3.7368, -4.2975, -4.7780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7522, device='cuda:0', dtype=torch.float64)
tensor([-2.3131, -3.3891, -3.7536, -4.3202, -4.7688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6028, device='cuda:0', dtype=torch.float64)
tensor([-2.3068, -3.3833, -3.7796, -4.3264, -4.7659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5226, device='cuda:0', dtype=torch.float64)
tensor([-2.3083, -3.3781, -3.8056, -4.3277, -4.7643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6185, device='cuda:0', dtype=torch.float64)
tensor([-2.3155, -3.3814, -3.8233, -4.3063, -4.7782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5135, device='cuda:0', dtype=torch.float64)
tensor([-2.3226, -3.3774, -3.8255, -4.2835, -4.7897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3847, device='cuda:0', dtype=torch.float64)
tensor([-2.3330, -3.3799, -3.8121, -4.2666, -4.8036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9558, device='cuda:0', dtype=torch.float64)
tensor([-2.3428, -3.4019, -3.8035, -4.2584, -4.7957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7115, device='cuda:0', dtype=torch.float64)
tensor([-2.3489, -3.4228, -3.7966, -4.2519, -4.7761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5288, device='cuda:0', dtype=torch.float64)
tensor([-2.3471, -3.4389, -3.7969, -4.2507, -4.7642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7115, device='cuda:0', dtype=torch.float64)
tensor([-2.3286, -3.4257, -3.7988, -4.2712, -4.7572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6448, device='cuda:0', dtype=torch.float64)
tensor([-2.3084, -3.3960, -3.8129, -4.3141, -4.7484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8570, device='cuda:0', dtype=torch.float64)
tensor([-2.3052, -3.3751, -3.8202, -4.3473, -4.7548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1886, device='cuda:0', dtype=torch.float64)
tensor([-2.3028, -3.3552, -3.8450, -4.3882, -4.7459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0401, device='cuda:0', dtype=torch.float64)
tensor([-2.3166, -3.3546, -3.8611, -4.3834, -4.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8322, device='cuda:0', dtype=torch.float64)
tensor([-2.3434, -3.3634, -3.8841, -4.3565, -4.7427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6444, device='cuda:0', dtype=torch.float64)
tensor([-2.3648, -3.3718, -3.8841, -4.3256, -4.7332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2348, device='cuda:0', dtype=torch.float64)
tensor([-2.3813, -3.3823, -3.8616, -4.3084, -4.7055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8089, device='cuda:0', dtype=torch.float64)
tensor([-2.3937, -3.3835, -3.8265, -4.2796, -4.6835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4986, device='cuda:0', dtype=torch.float64)
tensor([-2.3911, -3.3769, -3.7977, -4.2813, -4.6630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1269, device='cuda:0', dtype=torch.float64)
tensor([-2.3840, -3.3692, -3.7764, -4.3026, -4.6517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9217, device='cuda:0', dtype=torch.float64)
tensor([-2.3717, -3.3654, -3.7741, -4.3231, -4.6543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7137, device='cuda:0', dtype=torch.float64)
tensor([-2.3614, -3.3708, -3.7668, -4.3463, -4.6612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8966, device='cuda:0', dtype=torch.float64)
tensor([-2.3499, -3.3913, -3.7570, -4.3772, -4.6820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6778, device='cuda:0', dtype=torch.float64)
tensor([-2.3490, -3.4079, -3.7549, -4.3929, -4.7218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0093, device='cuda:0', dtype=torch.float64)
tensor([-2.3566, -3.4231, -3.7660, -4.3703, -4.7389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9115, device='cuda:0', dtype=torch.float64)
tensor([-2.3591, -3.4231, -3.7976, -4.3421, -4.7328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8986, device='cuda:0', dtype=torch.float64)
tensor([-2.3646, -3.4133, -3.8051, -4.3131, -4.7143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6686, device='cuda:0', dtype=torch.float64)
tensor([-2.3701, -3.4115, -3.8129, -4.2940, -4.6828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5761, device='cuda:0', dtype=torch.float64)
tensor([-2.3730, -3.4141, -3.8236, -4.3031, -4.6587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9933, device='cuda:0', dtype=torch.float64)
tensor([-2.3699, -3.4060, -3.8476, -4.3017, -4.6384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8429, device='cuda:0', dtype=torch.float64)
tensor([-2.3709, -3.4038, -3.8748, -4.2946, -4.6227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6645, device='cuda:0', dtype=torch.float64)
tensor([-2.3709, -3.3942, -3.9004, -4.3052, -4.6084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7429, device='cuda:0', dtype=torch.float64)
tensor([-2.3645, -3.3866, -3.9166, -4.3100, -4.5921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8550, device='cuda:0', dtype=torch.float64)
tensor([-2.3511, -3.3722, -3.9392, -4.3226, -4.5770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5934, device='cuda:0', dtype=torch.float64)
tensor([-2.3446, -3.3675, -3.9449, -4.3177, -4.5700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7496, device='cuda:0', dtype=torch.float64)
tensor([-2.3393, -3.3643, -3.9466, -4.3228, -4.5708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7975, device='cuda:0', dtype=torch.float64)
tensor([-2.3409, -3.3534, -3.9214, -4.3215, -4.5866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4100, device='cuda:0', dtype=torch.float64)
tensor([-2.3509, -3.3602, -3.8824, -4.3185, -4.5973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6516, device='cuda:0', dtype=torch.float64)
tensor([-2.3603, -3.3701, -3.8412, -4.3113, -4.6050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5127, device='cuda:0', dtype=torch.float64)
tensor([-2.3722, -3.3830, -3.8056, -4.3111, -4.6119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5753, device='cuda:0', dtype=torch.float64)
tensor([-2.3808, -3.3883, -3.7729, -4.3070, -4.6356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5201, device='cuda:0', dtype=torch.float64)
tensor([-2.3887, -3.3955, -3.7585, -4.3088, -4.6606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7854, device='cuda:0', dtype=torch.float64)
tensor([-2.3992, -3.4017, -3.7575, -4.3270, -4.6801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7605, device='cuda:0', dtype=torch.float64)
tensor([-2.4064, -3.4134, -3.7603, -4.3406, -4.7001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5836, device='cuda:0', dtype=torch.float64)
tensor([-2.3996, -3.4253, -3.7808, -4.3647, -4.7358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5495, device='cuda:0', dtype=torch.float64)
tensor([-2.3841, -3.4327, -3.8129, -4.3862, -4.7482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8360, device='cuda:0', dtype=torch.float64)
tensor([-2.3527, -3.4161, -3.8424, -4.3904, -4.7461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9496, device='cuda:0', dtype=torch.float64)
tensor([-2.3134, -3.3865, -3.8778, -4.4099, -4.7384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3466, device='cuda:0', dtype=torch.float64)
tensor([-2.2838, -3.3745, -3.9091, -4.4204, -4.7263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5142, device='cuda:0', dtype=torch.float64)
tensor([-2.2596, -3.3722, -3.9270, -4.4266, -4.7164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7927, device='cuda:0', dtype=torch.float64)
tensor([-2.2591, -3.3782, -3.9306, -4.4190, -4.7025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8252, device='cuda:0', dtype=torch.float64)
tensor([-2.2697, -3.3761, -3.9156, -4.4053, -4.6839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9003, device='cuda:0', dtype=torch.float64)
tensor([-2.2909, -3.3737, -3.8746, -4.3985, -4.6647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8059, device='cuda:0', dtype=torch.float64)
tensor([-2.3284, -3.3750, -3.8260, -4.3821, -4.6833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8869, device='cuda:0', dtype=torch.float64)
tensor([-2.3608, -3.3690, -3.7898, -4.3631, -4.7079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9884, device='cuda:0', dtype=torch.float64)
tensor([-2.3785, -3.3536, -3.7869, -4.3557, -4.7305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8823, device='cuda:0', dtype=torch.float64)
tensor([-2.3818, -3.3419, -3.7985, -4.3666, -4.7223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6187, device='cuda:0', dtype=torch.float64)
tensor([-2.3867, -3.3440, -3.8102, -4.3762, -4.7061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7226, device='cuda:0', dtype=torch.float64)
tensor([-2.3934, -3.3585, -3.8172, -4.3844, -4.6899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6952, device='cuda:0', dtype=torch.float64)
tensor([-2.4039, -3.3854, -3.8078, -4.3907, -4.6703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1766, device='cuda:0', dtype=torch.float64)
tensor([-2.4094, -3.4260, -3.8025, -4.3988, -4.6343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7013, device='cuda:0', dtype=torch.float64)
tensor([-2.4226, -3.4564, -3.7890, -4.3712, -4.6153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8186, device='cuda:0', dtype=torch.float64)
tensor([-2.4434, -3.4927, -3.7706, -4.3244, -4.6248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8563, device='cuda:0', dtype=torch.float64)
tensor([-2.4626, -3.5177, -3.7565, -4.2901, -4.6483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2403, device='cuda:0', dtype=torch.float64)
tensor([-2.4617, -3.4954, -3.7617, -4.2577, -4.6712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5892, device='cuda:0', dtype=torch.float64)
tensor([-2.4545, -3.4606, -3.7770, -4.2573, -4.6873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1304, device='cuda:0', dtype=torch.float64)
tensor([-2.4380, -3.4349, -3.7907, -4.2877, -4.6942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6619, device='cuda:0', dtype=torch.float64)
tensor([-2.4314, -3.4235, -3.8071, -4.3189, -4.7194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6063, device='cuda:0', dtype=torch.float64)
tensor([-2.4317, -3.4232, -3.8120, -4.3226, -4.7309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1105, device='cuda:0', dtype=torch.float64)
tensor([-2.4384, -3.4197, -3.8054, -4.3189, -4.7386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0694, device='cuda:0', dtype=torch.float64)
tensor([-2.4393, -3.4206, -3.7777, -4.3184, -4.7224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7988, device='cuda:0', dtype=torch.float64)
tensor([-2.4496, -3.4518, -3.7673, -4.3223, -4.6998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7780, device='cuda:0', dtype=torch.float64)
tensor([-2.4558, -3.4968, -3.7596, -4.3257, -4.6703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6025, device='cuda:0', dtype=torch.float64)
tensor([-2.4634, -3.5285, -3.7699, -4.3343, -4.6367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8716, device='cuda:0', dtype=torch.float64)
tensor([-2.4535, -3.5144, -3.8037, -4.3508, -4.6032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9207, device='cuda:0', dtype=torch.float64)
tensor([-2.4368, -3.4954, -3.8558, -4.3819, -4.5759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8012, device='cuda:0', dtype=torch.float64)
tensor([-2.4247, -3.4870, -3.9148, -4.4138, -4.5623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4874, device='cuda:0', dtype=torch.float64)
tensor([-2.4224, -3.5030, -3.9421, -4.4071, -4.5726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4332, device='cuda:0', dtype=torch.float64)
tensor([-2.4136, -3.4979, -3.9210, -4.3742, -4.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7595, device='cuda:0', dtype=torch.float64)
tensor([-2.4062, -3.4783, -3.9035, -4.3440, -4.6260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6619, device='cuda:0', dtype=torch.float64)
tensor([-2.4065, -3.4800, -3.8894, -4.3075, -4.6664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8321, device='cuda:0', dtype=torch.float64)
tensor([-2.4068, -3.4893, -3.8808, -4.2833, -4.6917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2116, device='cuda:0', dtype=torch.float64)
tensor([-2.4099, -3.4901, -3.8746, -4.2612, -4.6976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9588, device='cuda:0', dtype=torch.float64)
tensor([-2.4166, -3.4891, -3.8877, -4.2320, -4.6848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9549, device='cuda:0', dtype=torch.float64)
tensor([-2.4238, -3.4821, -3.9094, -4.2016, -4.6592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0683, device='cuda:0', dtype=torch.float64)
tensor([-2.4354, -3.4834, -3.9270, -4.2005, -4.6353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9456, device='cuda:0', dtype=torch.float64)
tensor([-2.4435, -3.4985, -3.9359, -4.2191, -4.6210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0039, device='cuda:0', dtype=torch.float64)
tensor([-2.4447, -3.5003, -3.9079, -4.2523, -4.6289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7057, device='cuda:0', dtype=torch.float64)
tensor([-2.4655, -3.5073, -3.8680, -4.2770, -4.6546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5945, device='cuda:0', dtype=torch.float64)
tensor([-2.4659, -3.4955, -3.8377, -4.2844, -4.6916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3452, device='cuda:0', dtype=torch.float64)
tensor([-2.4770, -3.4767, -3.8047, -4.2605, -4.7146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7886, device='cuda:0', dtype=torch.float64)
tensor([-2.4743, -3.4548, -3.7927, -4.2448, -4.7295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7907, device='cuda:0', dtype=torch.float64)
tensor([-2.4715, -3.4320, -3.7910, -4.2347, -4.7203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7642, device='cuda:0', dtype=torch.float64)
tensor([-2.4831, -3.4248, -3.8144, -4.2266, -4.7040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0374, device='cuda:0', dtype=torch.float64)
tensor([-2.4823, -3.4189, -3.8292, -4.2249, -4.6770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1977, device='cuda:0', dtype=torch.float64)
tensor([-2.4617, -3.4094, -3.8591, -4.2519, -4.6477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4648, device='cuda:0', dtype=torch.float64)
tensor([-2.4302, -3.4131, -3.9123, -4.3123, -4.6319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8523, device='cuda:0', dtype=torch.float64)
tensor([-2.4190, -3.4181, -3.9525, -4.3484, -4.6311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3764, device='cuda:0', dtype=torch.float64)
tensor([-2.4201, -3.4163, -3.9965, -4.3704, -4.6231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7467, device='cuda:0', dtype=torch.float64)
tensor([-2.4163, -3.4211, -4.0466, -4.4064, -4.6332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0416, device='cuda:0', dtype=torch.float64)
tensor([-2.4157, -3.4238, -4.0818, -4.4257, -4.6343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1716, device='cuda:0', dtype=torch.float64)
tensor([-2.4188, -3.4380, -4.0822, -4.4355, -4.6438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8624, device='cuda:0', dtype=torch.float64)
tensor([-2.4484, -3.4717, -4.0293, -4.4424, -4.6502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1432, device='cuda:0', dtype=torch.float64)
tensor([-2.4989, -3.5176, -3.9398, -4.4006, -4.6673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9569, device='cuda:0', dtype=torch.float64)
tensor([-2.5571, -3.5631, -3.8763, -4.3109, -4.6755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8343, device='cuda:0', dtype=torch.float64)
tensor([-2.6034, -3.5954, -3.8156, -4.2197, -4.6846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8606, device='cuda:0', dtype=torch.float64)
tensor([-2.6283, -3.5983, -3.7805, -4.1590, -4.6853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8001, device='cuda:0', dtype=torch.float64)
tensor([-2.6393, -3.5830, -3.7851, -4.1144, -4.6919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6519, device='cuda:0', dtype=torch.float64)
tensor([-2.6424, -3.5659, -3.8123, -4.1150, -4.6887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7721, device='cuda:0', dtype=torch.float64)
tensor([-2.6342, -3.5404, -3.8627, -4.1710, -4.6936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8170, device='cuda:0', dtype=torch.float64)
tensor([-2.6144, -3.5320, -3.9087, -4.2489, -4.6879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9596, device='cuda:0', dtype=torch.float64)
tensor([-2.5965, -3.5267, -3.9682, -4.3625, -4.6815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6666, device='cuda:0', dtype=torch.float64)
tensor([-2.5742, -3.5282, -3.9796, -4.4540, -4.6561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7538, device='cuda:0', dtype=torch.float64)
tensor([-2.5604, -3.5504, -3.9697, -4.5242, -4.6262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0712, device='cuda:0', dtype=torch.float64)
tensor([-2.5449, -3.5767, -3.9786, -4.5421, -4.5946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8921, device='cuda:0', dtype=torch.float64)
tensor([-2.5314, -3.6040, -3.9993, -4.5559, -4.5657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1626, device='cuda:0', dtype=torch.float64)
tensor([-2.5190, -3.6457, -4.0134, -4.5706, -4.5312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0243, device='cuda:0', dtype=torch.float64)
tensor([-2.5220, -3.6843, -4.0276, -4.5755, -4.5053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8777, device='cuda:0', dtype=torch.float64)
tensor([-2.5257, -3.7047, -4.0259, -4.5468, -4.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9825, device='cuda:0', dtype=torch.float64)
tensor([-2.5335, -3.6972, -4.0186, -4.5178, -4.5028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.5442, -3.6647, -4.0315, -4.4769, -4.5355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6762, device='cuda:0', dtype=torch.float64)
tensor([-2.5620, -3.6313, -4.0318, -4.4295, -4.5630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5344, device='cuda:0', dtype=torch.float64)
tensor([-2.5914, -3.6007, -3.9977, -4.3661, -4.5687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7448, device='cuda:0', dtype=torch.float64)
tensor([-2.6273, -3.5815, -3.9609, -4.3001, -4.5763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7380, device='cuda:0', dtype=torch.float64)
tensor([-2.6674, -3.5774, -3.9503, -4.2507, -4.5944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6361, device='cuda:0', dtype=torch.float64)
tensor([-2.7022, -3.5776, -3.9503, -4.2162, -4.6012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8174, device='cuda:0', dtype=torch.float64)
tensor([-2.7101, -3.5710, -3.9659, -4.2139, -4.6133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2591, device='cuda:0', dtype=torch.float64)
tensor([-2.7155, -3.5814, -4.0032, -4.1886, -4.6353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9003, device='cuda:0', dtype=torch.float64)
tensor([-2.7028, -3.5794, -4.0477, -4.1941, -4.6511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6170, device='cuda:0', dtype=torch.float64)
tensor([-2.6897, -3.5713, -4.1108, -4.2180, -4.6602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6868, device='cuda:0', dtype=torch.float64)
tensor([-2.6658, -3.5530, -4.1204, -4.2826, -4.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9329, device='cuda:0', dtype=torch.float64)
tensor([-2.6516, -3.5358, -4.1185, -4.3515, -4.6609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7466, device='cuda:0', dtype=torch.float64)
tensor([-2.6338, -3.5103, -4.1111, -4.3938, -4.6646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9768, device='cuda:0', dtype=torch.float64)
tensor([-2.6253, -3.5134, -4.0879, -4.4230, -4.6730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9050, device='cuda:0', dtype=torch.float64)
tensor([-2.6295, -3.5302, -4.0658, -4.4524, -4.6851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9733, device='cuda:0', dtype=torch.float64)
tensor([-2.6400, -3.5427, -4.0612, -4.4851, -4.7026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8391, device='cuda:0', dtype=torch.float64)
tensor([-2.6539, -3.5608, -4.0801, -4.5422, -4.7021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8857, device='cuda:0', dtype=torch.float64)
tensor([-2.6571, -3.5818, -4.0955, -4.5638, -4.6867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7800, device='cuda:0', dtype=torch.float64)
tensor([-2.6582, -3.5912, -4.0962, -4.5456, -4.6838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0961, device='cuda:0', dtype=torch.float64)
tensor([-2.6471, -3.6044, -4.1059, -4.5305, -4.6731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6643, device='cuda:0', dtype=torch.float64)
tensor([-2.6391, -3.6106, -4.0948, -4.5067, -4.6772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2992, device='cuda:0', dtype=torch.float64)
tensor([-2.6283, -3.6059, -4.0905, -4.4919, -4.6835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8472, device='cuda:0', dtype=torch.float64)
tensor([-2.6196, -3.5998, -4.0953, -4.4720, -4.6868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7816, device='cuda:0', dtype=torch.float64)
tensor([-2.6122, -3.6079, -4.1176, -4.4597, -4.6984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9151, device='cuda:0', dtype=torch.float64)
tensor([-2.6020, -3.6139, -4.1724, -4.4583, -4.7126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4289, device='cuda:0', dtype=torch.float64)
tensor([-2.5945, -3.5936, -4.2137, -4.4567, -4.6908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9583, device='cuda:0', dtype=torch.float64)
tensor([-2.5898, -3.5599, -4.2460, -4.4712, -4.6568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1653, device='cuda:0', dtype=torch.float64)
tensor([-2.5807, -3.5243, -4.2321, -4.4746, -4.6294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2255, device='cuda:0', dtype=torch.float64)
tensor([-2.5955, -3.4999, -4.2063, -4.4795, -4.6236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2717, device='cuda:0', dtype=torch.float64)
tensor([-2.6457, -3.4967, -4.1784, -4.4824, -4.6295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9230, device='cuda:0', dtype=torch.float64)
tensor([-2.7005, -3.5015, -4.1322, -4.4469, -4.6440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8664, device='cuda:0', dtype=torch.float64)
tensor([-2.7649, -3.5134, -4.1011, -4.4354, -4.6591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9173, device='cuda:0', dtype=torch.float64)
tensor([-2.8393, -3.5453, -4.0602, -4.4046, -4.6851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7446, device='cuda:0', dtype=torch.float64)
tensor([-2.8996, -3.5914, -4.0448, -4.4174, -4.7361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8976, device='cuda:0', dtype=torch.float64)
tensor([-2.9263, -3.6424, -4.0236, -4.4675, -4.7754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8114, device='cuda:0', dtype=torch.float64)
tensor([-2.9331, -3.6939, -4.0075, -4.5042, -4.8070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9009, device='cuda:0', dtype=torch.float64)
tensor([-2.9338, -3.7332, -3.9915, -4.5106, -4.8196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9116, device='cuda:0', dtype=torch.float64)
tensor([-2.9119, -3.7561, -4.0165, -4.5053, -4.8214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9111, device='cuda:0', dtype=torch.float64)
tensor([-2.8858, -3.7722, -4.0496, -4.4997, -4.8011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7342, device='cuda:0', dtype=torch.float64)
tensor([-2.8436, -3.7732, -4.0718, -4.4652, -4.7744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9717, device='cuda:0', dtype=torch.float64)
tensor([-2.8163, -3.7813, -4.0789, -4.4511, -4.7184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0316, device='cuda:0', dtype=torch.float64)
tensor([-2.8050, -3.7792, -4.0642, -4.4254, -4.6762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7590, device='cuda:0', dtype=torch.float64)
tensor([-2.7957, -3.7952, -4.0506, -4.4196, -4.6696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5675, device='cuda:0', dtype=torch.float64)
tensor([-2.7926, -3.8149, -4.0427, -4.4417, -4.7018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9279, device='cuda:0', dtype=torch.float64)
tensor([-2.7902, -3.8220, -4.0338, -4.4585, -4.7453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3532, device='cuda:0', dtype=torch.float64)
tensor([-2.7929, -3.7687, -4.0093, -4.4646, -4.7881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6085, device='cuda:0', dtype=torch.float64)
tensor([-2.7911, -3.7327, -4.0346, -4.4689, -4.8129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2507, device='cuda:0', dtype=torch.float64)
tensor([-2.7975, -3.7193, -4.0913, -4.5169, -4.8358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8814, device='cuda:0', dtype=torch.float64)
tensor([-2.8138, -3.7086, -4.1451, -4.5803, -4.8571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5408, device='cuda:0', dtype=torch.float64)
tensor([-2.8386, -3.7348, -4.1877, -4.6338, -4.8890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3281, device='cuda:0', dtype=torch.float64)
tensor([-2.8645, -3.7741, -4.2137, -4.6542, -4.9158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6429, device='cuda:0', dtype=torch.float64)
tensor([-2.9059, -3.8326, -4.2205, -4.6526, -4.9167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8617, device='cuda:0', dtype=torch.float64)
tensor([-2.9225, -3.8826, -4.2250, -4.6657, -4.9001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4595, device='cuda:0', dtype=torch.float64)
tensor([-2.9272, -3.9367, -4.2204, -4.6639, -4.8671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2448, device='cuda:0', dtype=torch.float64)
tensor([-2.9228, -3.9410, -4.2323, -4.6549, -4.8393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7960, device='cuda:0', dtype=torch.float64)
tensor([-2.9164, -3.9615, -4.2434, -4.6304, -4.8129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0622, device='cuda:0', dtype=torch.float64)
tensor([-2.9220, -4.0063, -4.2521, -4.5870, -4.7757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9468, device='cuda:0', dtype=torch.float64)
tensor([-2.9483, -4.0401, -4.2427, -4.5336, -4.7335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6675, device='cuda:0', dtype=torch.float64)
tensor([-2.9774, -4.0599, -4.2432, -4.4944, -4.7056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1448, device='cuda:0', dtype=torch.float64)
tensor([-3.0117, -4.0898, -4.2304, -4.4559, -4.6953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7066, device='cuda:0', dtype=torch.float64)
tensor([-3.0346, -4.1107, -4.1983, -4.4382, -4.7168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6434, device='cuda:0', dtype=torch.float64)
tensor([-3.0486, -4.1053, -4.1797, -4.4358, -4.7396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8521, device='cuda:0', dtype=torch.float64)
tensor([-3.0609, -4.0864, -4.1528, -4.4346, -4.7569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8447, device='cuda:0', dtype=torch.float64)
tensor([-3.0635, -4.0586, -4.1680, -4.4783, -4.7643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8860, device='cuda:0', dtype=torch.float64)
tensor([-3.0629, -4.0249, -4.1983, -4.5548, -4.7999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7582, device='cuda:0', dtype=torch.float64)
tensor([-3.0525, -3.9810, -4.2316, -4.6491, -4.8307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7419, device='cuda:0', dtype=torch.float64)
tensor([-3.0365, -3.9500, -4.2791, -4.7438, -4.8523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8755, device='cuda:0', dtype=torch.float64)
tensor([-3.0312, -3.9527, -4.3294, -4.8211, -4.8974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9924, device='cuda:0', dtype=torch.float64)
tensor([-3.0263, -3.9485, -4.3948, -4.9360, -4.9416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7749, device='cuda:0', dtype=torch.float64)
tensor([-3.0325, -3.9527, -4.4421, -5.0131, -4.9610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9961, device='cuda:0', dtype=torch.float64)
tensor([-3.0383, -3.9668, -4.4861, -5.0655, -4.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8019, device='cuda:0', dtype=torch.float64)
tensor([-3.0597, -3.9762, -4.5146, -5.0908, -5.0005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7879, device='cuda:0', dtype=torch.float64)
tensor([-3.0695, -3.9814, -4.5393, -5.0999, -5.0121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8305, device='cuda:0', dtype=torch.float64)
tensor([-3.0658, -3.9928, -4.5323, -5.0751, -5.0114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8388, device='cuda:0', dtype=torch.float64)
tensor([-3.0796, -4.0181, -4.4933, -4.9914, -5.0261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6805, device='cuda:0', dtype=torch.float64)
tensor([-3.0988, -4.0631, -4.4693, -4.9205, -5.0350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8255, device='cuda:0', dtype=torch.float64)
tensor([-3.1173, -4.1102, -4.4411, -4.8520, -5.0403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9716, device='cuda:0', dtype=torch.float64)
tensor([-3.1159, -4.1171, -4.4176, -4.7701, -5.0214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8061, device='cuda:0', dtype=torch.float64)
tensor([-3.1222, -4.1292, -4.3984, -4.6958, -4.9999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4983, device='cuda:0', dtype=torch.float64)
tensor([-3.1344, -4.1371, -4.3862, -4.6478, -4.9948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6803, device='cuda:0', dtype=torch.float64)
tensor([-3.1536, -4.1334, -4.3991, -4.6405, -4.9789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7182, device='cuda:0', dtype=torch.float64)
tensor([-3.1631, -4.1316, -4.4271, -4.6270, -4.9629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8456, device='cuda:0', dtype=torch.float64)
tensor([-3.1683, -4.1398, -4.4385, -4.6274, -4.9650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8223, device='cuda:0', dtype=torch.float64)
tensor([-3.1682, -4.1356, -4.4531, -4.6344, -4.9606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6309, device='cuda:0', dtype=torch.float64)
tensor([-3.1746, -4.1380, -4.4858, -4.6497, -4.9561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1471, device='cuda:0', dtype=torch.float64)
tensor([-3.1705, -4.1343, -4.5101, -4.6716, -4.9549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0328, device='cuda:0', dtype=torch.float64)
tensor([-3.1639, -4.1514, -4.5236, -4.7024, -4.9637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8135, device='cuda:0', dtype=torch.float64)
tensor([-3.1455, -4.1502, -4.5400, -4.7016, -4.9826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1486, device='cuda:0', dtype=torch.float64)
tensor([-3.1717, -4.1908, -4.5552, -4.6770, -5.0019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8771, device='cuda:0', dtype=torch.float64)
tensor([-3.2087, -4.2215, -4.5972, -4.6797, -5.0181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7961, device='cuda:0', dtype=torch.float64)
tensor([-3.2489, -4.2478, -4.6557, -4.7041, -5.0453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9142, device='cuda:0', dtype=torch.float64)
tensor([-3.2790, -4.2803, -4.7227, -4.7538, -5.0957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1721, device='cuda:0', dtype=torch.float64)
tensor([-3.2959, -4.3072, -4.7753, -4.8778, -5.1530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8734, device='cuda:0', dtype=torch.float64)
tensor([-3.3105, -4.3335, -4.8248, -5.0478, -5.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7334, device='cuda:0', dtype=torch.float64)
tensor([-3.3235, -4.3756, -4.8474, -5.1666, -5.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6863, device='cuda:0', dtype=torch.float64)
tensor([-3.3338, -4.4193, -4.8871, -5.3263, -5.3370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3883, device='cuda:0', dtype=torch.float64)
tensor([-3.3828, -4.4441, -4.9003, -5.3373, -5.3943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0070, device='cuda:0', dtype=torch.float64)
tensor([-3.4421, -4.4733, -4.9018, -5.2490, -5.4214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5933, device='cuda:0', dtype=torch.float64)
tensor([-3.4993, -4.4996, -4.8552, -5.1167, -5.4492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8108, device='cuda:0', dtype=torch.float64)
tensor([-3.5717, -4.5477, -4.8621, -5.0031, -5.5192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8065, device='cuda:0', dtype=torch.float64)
tensor([-3.6488, -4.6053, -4.8495, -4.9288, -5.5500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4647, device='cuda:0', dtype=torch.float64)
tensor([-3.7324, -4.6705, -4.8153, -4.9172, -5.5755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4206, device='cuda:0', dtype=torch.float64)
tensor([-3.8131, -4.7136, -4.7891, -4.9144, -5.5989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3037, device='cuda:0', dtype=torch.float64)
tensor([-3.8788, -4.7511, -4.7789, -4.9008, -5.6521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9531, device='cuda:0', dtype=torch.float64)
tensor([-3.9091, -4.7853, -4.7768, -4.9325, -5.6736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4572, device='cuda:0', dtype=torch.float64)
tensor([-3.8976, -4.8006, -4.7584, -5.0141, -5.6379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9396, device='cuda:0', dtype=torch.float64)
tensor([-3.9048, -4.8312, -4.7479, -5.1613, -5.5638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5988, device='cuda:0', dtype=torch.float64)
tensor([-3.9164, -4.8598, -4.7644, -5.3519, -5.5126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4608, device='cuda:0', dtype=torch.float64)
tensor([-3.9255, -4.9058, -4.7853, -5.5570, -5.4528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8420, device='cuda:0', dtype=torch.float64)
tensor([-3.9330, -4.9483, -4.8085, -5.7371, -5.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6944, device='cuda:0', dtype=torch.float64)
tensor([-3.9593, -5.0875, -4.8493, -5.9194, -5.4238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3307, device='cuda:0', dtype=torch.float64)
tensor([-4.0066, -5.2549, -4.9141, -6.1073, -5.4731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8144, device='cuda:0', dtype=torch.float64)
tensor([-4.0327, -5.3682, -4.9507, -6.1829, -5.5429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8585, device='cuda:0', dtype=torch.float64)
tensor([-4.0705, -5.4667, -5.0037, -6.2902, -5.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0987, device='cuda:0', dtype=torch.float64)
tensor([-4.1490, -5.7080, -5.0600, -6.2877, -5.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9212, device='cuda:0', dtype=torch.float64)
tensor([-4.1927, -5.4789, -5.1090, -6.1503, -5.6951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3754, device='cuda:0', dtype=torch.float64)
tensor([-4.2315, -5.2901, -5.1269, -5.9710, -5.7499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5959, device='cuda:0', dtype=torch.float64)
tensor([-4.2567, -5.2066, -5.1383, -5.8276, -5.7862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8745, device='cuda:0', dtype=torch.float64)
tensor([-4.2989, -5.1907, -5.1599, -5.7334, -5.9455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7389, device='cuda:0', dtype=torch.float64)
tensor([-4.3623, -5.2624, -5.2215, -5.7546, -6.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4499, device='cuda:0', dtype=torch.float64)
tensor([-4.4578, -5.4045, -5.2603, -5.8872, -6.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6995, device='cuda:0', dtype=torch.float64)
tensor([-4.5746, -5.5627, -5.3586, -6.1831, -6.5981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0390, device='cuda:0', dtype=torch.float64)
tensor([-4.7284, -5.7972, -5.4908, -6.7433, -6.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1599, device='cuda:0', dtype=torch.float64)
tensor([-4.9608, -6.1121, -5.6182, -7.3686, -7.2621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8158, device='cuda:0', dtype=torch.float64)
tensor([-5.1590, -6.3507, -5.7038, -7.9036, -7.5505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9088, device='cuda:0', dtype=torch.float64)
tensor([-5.2845, -6.4345, -5.8162, -8.1424, -7.7550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8245, device='cuda:0', dtype=torch.float64)
tensor([-5.3770, -6.4758, -5.8998, -8.2074, -7.7705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6284, device='cuda:0', dtype=torch.float64)
tensor([-5.5193, -6.6090, -6.0233, -8.2387, -7.8963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8542, device='cuda:0', dtype=torch.float64)
tensor([-5.7766, -6.8152, -6.1414, -8.2964, -8.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5911, device='cuda:0', dtype=torch.float64)
tensor([-6.1325, -7.0166, -6.2568, -8.3675, -8.3371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9826, device='cuda:0', dtype=torch.float64)
tensor([-6.6327, -7.4747, -6.3486, -8.5209, -8.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8663, device='cuda:0', dtype=torch.float64)
tensor([-7.2026, -8.2263, -6.4725, -8.8499, -8.7605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4047, device='cuda:0', dtype=torch.float64)
tensor([-7.8956, -9.4275, -6.7173, -9.2442, -9.1027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4257, device='cuda:0', dtype=torch.float64)
tensor([ -8.7018, -11.4038,  -7.0635,  -9.6757,  -9.3485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8885, device='cuda:0', dtype=torch.float64)
tensor([ -9.5714, -13.6342,  -7.6029, -10.3077,  -9.6924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4711, device='cuda:0', dtype=torch.float64)
tensor([-10.2319, -15.5799,  -8.0563, -10.8255, -10.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9269, device='cuda:0', dtype=torch.float64)
tensor([-10.8706, -18.2078,  -8.7269, -11.3940, -10.6828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7826, device='cuda:0', dtype=torch.float64)
tensor([-11.5334, -20.5749,  -9.4940, -11.8226, -11.1864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5274, device='cuda:0', dtype=torch.float64)
tensor([-12.1230, -22.6865, -10.1557, -12.1436, -11.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5847, device='cuda:0', dtype=torch.float64)
tensor([-12.4568, -24.3442, -10.6139, -12.5084, -11.8016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4449, device='cuda:0', dtype=torch.float64)
tensor([-12.4490, -25.3844, -10.7623, -12.7388, -11.8742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6924, device='cuda:0', dtype=torch.float64)
tensor([-12.4508, -26.7976, -10.9107, -12.9817, -12.0126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6835, device='cuda:0', dtype=torch.float64)
tensor([-12.4082, -27.4958, -10.9608, -13.2752, -12.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6130, device='cuda:0', dtype=torch.float64)
tensor([-12.6421, -29.4340, -11.2976, -13.9474, -12.7278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8686, device='cuda:0', dtype=torch.float64)
tensor([-12.8192, -29.8537, -11.4567, -14.5220, -12.9286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6946, device='cuda:0', dtype=torch.float64)
tensor([-12.7432, -29.7468, -11.6575, -15.0924, -12.9254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7287, device='cuda:0', dtype=torch.float64)
tensor([-12.6996, -30.1512, -12.0905, -15.7122, -12.8576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8002, device='cuda:0', dtype=torch.float64)
tensor([-12.8332, -30.8702, -12.7705, -16.3076, -12.7359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8820, device='cuda:0', dtype=torch.float64)
tensor([-12.7674, -30.9564, -13.3343, -16.7994, -12.5628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5835, device='cuda:0', dtype=torch.float64)
tensor([-12.3922, -30.1322, -13.6594, -17.2765, -12.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6303, device='cuda:0', dtype=torch.float64)
tensor([-12.2742, -29.3807, -14.2316, -17.5164, -12.2538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4578, device='cuda:0', dtype=torch.float64)
tensor([-12.3526, -28.7932, -14.7932, -17.8328, -12.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6819, device='cuda:0', dtype=torch.float64)
tensor([-12.6608, -28.6687, -15.4570, -18.3033, -12.3450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3836, device='cuda:0', dtype=torch.float64)
tensor([-13.0084, -28.6608, -16.0626, -18.7080, -12.7170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9204, device='cuda:0', dtype=torch.float64)
tensor([-13.2218, -28.1022, -16.5251, -19.1891, -13.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3960, device='cuda:0', dtype=torch.float64)
tensor([-13.3636, -27.1305, -16.8033, -19.7148, -14.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5855, device='cuda:0', dtype=torch.float64)
tensor([-13.4714, -26.9408, -17.0814, -20.4721, -15.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7722, device='cuda:0', dtype=torch.float64)
tensor([-13.5615, -27.7404, -17.2499, -21.3955, -15.9796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6695, device='cuda:0', dtype=torch.float64)
tensor([-13.7343, -28.5441, -17.6151, -22.2121, -16.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7637, device='cuda:0', dtype=torch.float64)
tensor([-13.9295, -29.1915, -18.0722, -23.1459, -16.5178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6820, device='cuda:0', dtype=torch.float64)
tensor([-14.1073, -29.9222, -18.2955, -23.9803, -16.6908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2910, device='cuda:0', dtype=torch.float64)
tensor([-14.2336, -30.3885, -18.4398, -24.6496, -16.6907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9099, device='cuda:0', dtype=torch.float64)
tensor([-14.5756, -30.7892, -18.6701, -25.3385, -16.7550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7270, device='cuda:0', dtype=torch.float64)
tensor([-14.6319, -30.6525, -18.4852, -25.4795, -16.7315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8365, device='cuda:0', dtype=torch.float64)
tensor([-14.8698, -29.5922, -18.3777, -25.7212, -16.9372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6182, device='cuda:0', dtype=torch.float64)
tensor([-14.9034, -28.5772, -18.1118, -25.7994, -16.9660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7393, device='cuda:0', dtype=torch.float64)
tensor([-15.2780, -28.0644, -18.0750, -26.1563, -17.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5826, device='cuda:0', dtype=torch.float64)
tensor([-15.5990, -28.2894, -17.7315, -26.7899, -17.6879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7128, device='cuda:0', dtype=torch.float64)
tensor([-15.8260, -27.8715, -17.4551, -26.9185, -17.9560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4236, device='cuda:0', dtype=torch.float64)
tensor([-16.2000, -27.0301, -17.3890, -26.6651, -17.9164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7975, device='cuda:0', dtype=torch.float64)
tensor([-16.6834, -26.1327, -17.4959, -26.4024, -18.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8103, device='cuda:0', dtype=torch.float64)
tensor([-16.8166, -25.4572, -17.6119, -25.9952, -18.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6429, device='cuda:0', dtype=torch.float64)
tensor([-16.9306, -24.7246, -18.0823, -25.8606, -18.9541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9610, device='cuda:0', dtype=torch.float64)
tensor([-17.5308, -24.3995, -18.5311, -25.9189, -19.7370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6544, device='cuda:0', dtype=torch.float64)
tensor([-17.8007, -24.0565, -18.6363, -25.4611, -20.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5547, device='cuda:0', dtype=torch.float64)
tensor([-18.1306, -23.6297, -18.9267, -24.9280, -20.6539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7984, device='cuda:0', dtype=torch.float64)
tensor([-18.4620, -24.3337, -19.0434, -24.7671, -20.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4539, device='cuda:0', dtype=torch.float64)
tensor([-18.9570, -25.4065, -19.2842, -24.5172, -21.2912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6963, device='cuda:0', dtype=torch.float64)
tensor([-19.2773, -26.9975, -19.5764, -24.6829, -21.6151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9835, device='cuda:0', dtype=torch.float64)
tensor([-19.4781, -28.0159, -19.5648, -24.6627, -21.5216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6147, device='cuda:0', dtype=torch.float64)
tensor([-19.6982, -28.7978, -19.0711, -24.7376, -21.9347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3865, device='cuda:0', dtype=torch.float64)
tensor([-19.7813, -28.9234, -18.6256, -24.7112, -22.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9459, device='cuda:0', dtype=torch.float64)
tensor([-19.7098, -30.1752, -18.0428, -24.8915, -22.9659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6374, device='cuda:0', dtype=torch.float64)
tensor([-19.6456, -31.4148, -17.6561, -25.2164, -23.7705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5685, device='cuda:0', dtype=torch.float64)
tensor([-19.6644, -32.9300, -17.3699, -25.5507, -24.2754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8019, device='cuda:0', dtype=torch.float64)
tensor([-19.6259, -34.8309, -16.8494, -25.9852, -24.8321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2428, device='cuda:0', dtype=torch.float64)
tensor([-19.5661, -36.7560, -16.6028, -26.4217, -25.2173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8157, device='cuda:0', dtype=torch.float64)
tensor([-19.4526, -38.2326, -16.2855, -26.6837, -25.3026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7230, device='cuda:0', dtype=torch.float64)
tensor([-19.3630, -39.2701, -15.9798, -27.3065, -25.5249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6102, device='cuda:0', dtype=torch.float64)
tensor([-19.1896, -41.7568, -15.3646, -28.4116, -26.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6062, device='cuda:0', dtype=torch.float64)
tensor([-19.0405, -43.0585, -14.9695, -29.6947, -26.8915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6408, device='cuda:0', dtype=torch.float64)
tensor([-18.6980, -43.9920, -14.5684, -31.0783, -27.6029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6536, device='cuda:0', dtype=torch.float64)
tensor([-18.5413, -44.3186, -14.3532, -32.4255, -28.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5234, device='cuda:0', dtype=torch.float64)
tensor([-18.5712, -45.0294, -14.2822, -33.6253, -28.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4020, device='cuda:0', dtype=torch.float64)
tensor([-18.7717, -45.2022, -14.1982, -34.7884, -28.2675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4304, device='cuda:0', dtype=torch.float64)
tensor([-19.1244, -44.3994, -14.3498, -35.6336, -28.0536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5975, device='cuda:0', dtype=torch.float64)
tensor([-19.3870, -43.3758, -14.5741, -36.2668, -27.7514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6582, device='cuda:0', dtype=torch.float64)
tensor([-19.8620, -42.3066, -14.8463, -36.4163, -27.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5037, device='cuda:0', dtype=torch.float64)
tensor([-20.0233, -42.5059, -15.0616, -36.7576, -26.2468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6606, device='cuda:0', dtype=torch.float64)
tensor([-20.2071, -44.7354, -15.4564, -37.0989, -25.4198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6740, device='cuda:0', dtype=torch.float64)
tensor([-20.6711, -48.4064, -16.1111, -37.7568, -25.0533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6351, device='cuda:0', dtype=torch.float64)
tensor([-21.0991, -51.8763, -16.9879, -38.1950, -24.8090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7137, device='cuda:0', dtype=torch.float64)
tensor([-21.8287, -54.3391, -18.1677, -38.2141, -25.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6855, device='cuda:0', dtype=torch.float64)
tensor([-22.4431, -56.7820, -19.4746, -38.1818, -25.1205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3832, device='cuda:0', dtype=torch.float64)
tensor([-23.0080, -58.2146, -20.7517, -38.0071, -24.9647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4652, device='cuda:0', dtype=torch.float64)
tensor([-23.6282, -59.1789, -22.0419, -37.8889, -25.0969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7257, device='cuda:0', dtype=torch.float64)
tensor([-24.4888, -60.5938, -23.5929, -37.9016, -24.9102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9228, device='cuda:0', dtype=torch.float64)
tensor([-25.2745, -61.6125, -24.9459, -37.8763, -24.4967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9010, device='cuda:0', dtype=torch.float64)
tensor([-26.4454, -64.4993, -26.7558, -38.1351, -24.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5077, device='cuda:0', dtype=torch.float64)
tensor([-27.3162, -66.0066, -27.9803, -38.2717, -24.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6426, device='cuda:0', dtype=torch.float64)
tensor([-27.9201, -66.9913, -28.7701, -38.4958, -24.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4404, device='cuda:0', dtype=torch.float64)
tensor([-28.8160, -69.8374, -29.7175, -39.1865, -24.6431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4641, device='cuda:0', dtype=torch.float64)
tensor([-30.3984, -74.0208, -31.3564, -40.3623, -25.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6087, device='cuda:0', dtype=torch.float64)
tensor([-31.6739, -76.3712, -32.4792, -41.5175, -24.9336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7583, device='cuda:0', dtype=torch.float64)
tensor([-32.9523, -78.9071, -33.5266, -42.6342, -24.6734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5063, device='cuda:0', dtype=torch.float64)
tensor([-34.3033, -80.8929, -34.5483, -43.4526, -24.2937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5494, device='cuda:0', dtype=torch.float64)
tensor([-35.3127, -82.9508, -35.0488, -44.1153, -23.7707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6590, device='cuda:0', dtype=torch.float64)
tensor([-36.0110, -84.3071, -35.3958, -44.5342, -22.8975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2754, device='cuda:0', dtype=torch.float64)
tensor([-36.4298, -85.4072, -35.4768, -44.7848, -21.9847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7379, device='cuda:0', dtype=torch.float64)
tensor([-36.7712, -86.0454, -35.9757, -44.9356, -21.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8404, device='cuda:0', dtype=torch.float64)
tensor([-36.5197, -86.4034, -36.2327, -45.3612, -20.5229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3592, device='cuda:0', dtype=torch.float64)
tensor([-36.4674, -86.9210, -36.8082, -45.6863, -20.0454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5690, device='cuda:0', dtype=torch.float64)
tensor([-36.8801, -87.3234, -37.6001, -45.5202, -19.7020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6353, device='cuda:0', dtype=torch.float64)
tensor([-37.1993, -87.5945, -37.8742, -45.6045, -19.6567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6570, device='cuda:0', dtype=torch.float64)
tensor([-36.8613, -87.1934, -38.3278, -45.8711, -19.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5053, device='cuda:0', dtype=torch.float64)
tensor([-36.3371, -85.3261, -38.4637, -45.9166, -19.0404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5808, device='cuda:0', dtype=torch.float64)
tensor([-36.2090, -83.8819, -38.4782, -46.1211, -18.9246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8034, device='cuda:0', dtype=torch.float64)
tensor([-36.3623, -82.2972, -38.3764, -46.5765, -18.7192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5987, device='cuda:0', dtype=torch.float64)
tensor([-36.4321, -81.2841, -38.2729, -47.6062, -18.6492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7424, device='cuda:0', dtype=torch.float64)
tensor([-35.9939, -80.5378, -37.6084, -48.3696, -18.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4620, device='cuda:0', dtype=torch.float64)
tensor([-35.0070, -78.4357, -36.0063, -48.9092, -18.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4880, device='cuda:0', dtype=torch.float64)
tensor([-33.7580, -76.8322, -34.5143, -49.6801, -18.0086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5286, device='cuda:0', dtype=torch.float64)
tensor([-32.5972, -74.5296, -33.2788, -50.2383, -18.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5234, device='cuda:0', dtype=torch.float64)
tensor([-31.7185, -72.6369, -32.1835, -50.6010, -18.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-30.7683, -70.3765, -30.5288, -50.7484, -18.4718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8635, device='cuda:0', dtype=torch.float64)
tensor([-30.0518, -68.7493, -29.3139, -50.9689, -18.8519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7613, device='cuda:0', dtype=torch.float64)
tensor([-29.8737, -67.7859, -28.4178, -51.0089, -18.8733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7215, device='cuda:0', dtype=torch.float64)
tensor([-29.4852, -67.2801, -27.6471, -51.0952, -18.8258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5875, device='cuda:0', dtype=torch.float64)
tensor([-29.2423, -67.4507, -27.2019, -50.6719, -18.9389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6686, device='cuda:0', dtype=torch.float64)
tensor([-29.0334, -66.7213, -26.6819, -50.3446, -19.0810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6055, device='cuda:0', dtype=torch.float64)
tensor([-28.7230, -65.1859, -25.8326, -49.3757, -18.9261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7810, device='cuda:0', dtype=torch.float64)
tensor([-28.7284, -63.7838, -25.4379, -48.4081, -18.7410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4790, device='cuda:0', dtype=torch.float64)
tensor([-28.5615, -62.4842, -25.0903, -47.7220, -18.4786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4633, device='cuda:0', dtype=torch.float64)
tensor([-28.4508, -61.0641, -24.6181, -46.8999, -18.3030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7790, device='cuda:0', dtype=torch.float64)
tensor([-28.3110, -59.5135, -24.2566, -45.9254, -18.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5835, device='cuda:0', dtype=torch.float64)
tensor([-28.3324, -58.1319, -24.1318, -45.2530, -18.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7321, device='cuda:0', dtype=torch.float64)
tensor([-28.5168, -57.6387, -24.1599, -45.0256, -18.4592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6698, device='cuda:0', dtype=torch.float64)
tensor([-28.7152, -58.1402, -24.3315, -45.1831, -18.5537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9463, device='cuda:0', dtype=torch.float64)
tensor([-28.8001, -57.4101, -23.6218, -44.7028, -18.9341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3297, device='cuda:0', dtype=torch.float64)
tensor([-28.8836, -56.6738, -23.1159, -44.1902, -19.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6514, device='cuda:0', dtype=torch.float64)
tensor([-29.1557, -56.1383, -22.6774, -43.9854, -19.7537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3957, device='cuda:0', dtype=torch.float64)
tensor([-29.3987, -55.5204, -22.0953, -43.8589, -20.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6674, device='cuda:0', dtype=torch.float64)
tensor([-29.3466, -55.0815, -21.6052, -43.7664, -20.5215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7017, device='cuda:0', dtype=torch.float64)
tensor([-29.4345, -54.8427, -21.0890, -43.6610, -20.8103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1804, device='cuda:0', dtype=torch.float64)
tensor([-29.9369, -54.7113, -20.8225, -43.5277, -20.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6437, device='cuda:0', dtype=torch.float64)
tensor([-30.6570, -55.2620, -20.8021, -44.0139, -19.9090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6602, device='cuda:0', dtype=torch.float64)
tensor([-31.5561, -55.1406, -20.9124, -44.4481, -19.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7244, device='cuda:0', dtype=torch.float64)
tensor([-32.2644, -55.3003, -21.1735, -44.6995, -18.7674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7469, device='cuda:0', dtype=torch.float64)
tensor([-33.3359, -54.6523, -21.1488, -44.8860, -18.4766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4439, device='cuda:0', dtype=torch.float64)
tensor([-34.0223, -54.4458, -21.3908, -45.0099, -18.2439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6640, device='cuda:0', dtype=torch.float64)
tensor([-34.6850, -54.6798, -21.6140, -44.5857, -18.2257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9322, device='cuda:0', dtype=torch.float64)
tensor([-34.9059, -54.7316, -21.7083, -44.3501, -18.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7588, device='cuda:0', dtype=torch.float64)
tensor([-35.2741, -55.9282, -21.9802, -44.3237, -18.3587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4545, device='cuda:0', dtype=torch.float64)
tensor([-35.4580, -57.5934, -22.3171, -44.5448, -18.7839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8333, device='cuda:0', dtype=torch.float64)
tensor([-35.7269, -59.5279, -22.5608, -44.7163, -19.4502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4923, device='cuda:0', dtype=torch.float64)
tensor([-36.3335, -60.9350, -22.8540, -44.7710, -20.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5387, device='cuda:0', dtype=torch.float64)
tensor([-36.9885, -61.5697, -22.9665, -45.0912, -20.9640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7429, device='cuda:0', dtype=torch.float64)
tensor([-38.3675, -62.3110, -23.7150, -45.3208, -21.6396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6810, device='cuda:0', dtype=torch.float64)
tensor([-39.4006, -63.2007, -24.2581, -45.2655, -22.6344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4980, device='cuda:0', dtype=torch.float64)
tensor([-40.4678, -63.7932, -24.7604, -45.4118, -23.7457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9066, device='cuda:0', dtype=torch.float64)
tensor([-41.6433, -64.0959, -25.6447, -45.9850, -25.0556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8070, device='cuda:0', dtype=torch.float64)
tensor([-42.6846, -64.6573, -26.4675, -46.7636, -26.3783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6359, device='cuda:0', dtype=torch.float64)
tensor([-43.5462, -64.4653, -26.8782, -47.4302, -27.4150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5772, device='cuda:0', dtype=torch.float64)
tensor([-43.9790, -63.9245, -26.9268, -48.0796, -27.9720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0439, device='cuda:0', dtype=torch.float64)
tensor([-44.3529, -63.1291, -26.6084, -48.3440, -28.2103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7018, device='cuda:0', dtype=torch.float64)
tensor([-45.0080, -61.9780, -26.5095, -48.4855, -28.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5081, device='cuda:0', dtype=torch.float64)
tensor([-45.5578, -60.9717, -25.7536, -48.4548, -28.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5390, device='cuda:0', dtype=torch.float64)
tensor([-46.5138, -59.2710, -24.7826, -48.6543, -27.5918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6676, device='cuda:0', dtype=torch.float64)
tensor([-47.5726, -57.9802, -24.0225, -49.1514, -27.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3984, device='cuda:0', dtype=torch.float64)
tensor([-48.2395, -56.3168, -23.3297, -49.4147, -26.7858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8203, device='cuda:0', dtype=torch.float64)
tensor([-48.9516, -55.3762, -22.9365, -49.3992, -26.5101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7446, device='cuda:0', dtype=torch.float64)
tensor([-49.5845, -54.7181, -22.8104, -49.7556, -26.4676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4239, device='cuda:0', dtype=torch.float64)
tensor([-49.9684, -54.4805, -22.7913, -49.9634, -26.5743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7092, device='cuda:0', dtype=torch.float64)
tensor([-50.3803, -54.2638, -23.1004, -50.3432, -26.7687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0868, device='cuda:0', dtype=torch.float64)
tensor([-50.0938, -53.7530, -23.0637, -49.8245, -26.6875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3811, device='cuda:0', dtype=torch.float64)
tensor([-49.1359, -53.1269, -22.8315, -48.7703, -26.5290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7646, device='cuda:0', dtype=torch.float64)
tensor([-48.3483, -52.5795, -23.0966, -47.9341, -26.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7015, device='cuda:0', dtype=torch.float64)
tensor([-48.1347, -51.7573, -23.7631, -47.6064, -25.7258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6636, device='cuda:0', dtype=torch.float64)
tensor([-47.5561, -50.6187, -24.7011, -46.9978, -25.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5541, device='cuda:0', dtype=torch.float64)
tensor([-47.6672, -50.1476, -25.7370, -46.7311, -24.6905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7417, device='cuda:0', dtype=torch.float64)
tensor([-47.5383, -49.8031, -26.5377, -46.5523, -24.5910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8350, device='cuda:0', dtype=torch.float64)
tensor([-47.5117, -49.3670, -27.8972, -46.7058, -24.3896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6332, device='cuda:0', dtype=torch.float64)
tensor([-47.5271, -48.9212, -29.5784, -47.1610, -24.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6007, device='cuda:0', dtype=torch.float64)
tensor([-47.0827, -48.4185, -30.7974, -47.4513, -24.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5666, device='cuda:0', dtype=torch.float64)
tensor([-47.1055, -48.2937, -31.9774, -47.9690, -24.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9319, device='cuda:0', dtype=torch.float64)
tensor([-47.4841, -48.4995, -32.8297, -48.5703, -24.3238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6388, device='cuda:0', dtype=torch.float64)
tensor([-47.9689, -49.0540, -33.3128, -49.6142, -24.6185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5037, device='cuda:0', dtype=torch.float64)
tensor([-48.6531, -50.2610, -34.3366, -50.9660, -25.0355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9029, device='cuda:0', dtype=torch.float64)
tensor([-49.4393, -51.2912, -35.4099, -52.5017, -25.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7772, device='cuda:0', dtype=torch.float64)
tensor([-50.4006, -52.7787, -36.8292, -54.3865, -25.8836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3818, device='cuda:0', dtype=torch.float64)
tensor([-51.1606, -53.1928, -38.2476, -55.3817, -25.9060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8622, device='cuda:0', dtype=torch.float64)
tensor([-51.8865, -53.1786, -39.7228, -55.9502, -26.0024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8511, device='cuda:0', dtype=torch.float64)
tensor([-52.9395, -53.5808, -41.3874, -56.6482, -26.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7704, device='cuda:0', dtype=torch.float64)
tensor([-53.8080, -53.6423, -43.2738, -57.1909, -26.8587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7698, device='cuda:0', dtype=torch.float64)
tensor([-54.8761, -53.1932, -45.4504, -57.2627, -27.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4472, device='cuda:0', dtype=torch.float64)
tensor([-55.8746, -52.6216, -47.0044, -56.8272, -27.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5216, device='cuda:0', dtype=torch.float64)
tensor([-57.1842, -52.1453, -48.1815, -56.3009, -27.4521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8396, device='cuda:0', dtype=torch.float64)
tensor([-58.8065, -52.4055, -49.6121, -56.7227, -28.1081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4377, device='cuda:0', dtype=torch.float64)
tensor([-60.4368, -52.5903, -50.7859, -57.0217, -28.8300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5910, device='cuda:0', dtype=torch.float64)
tensor([-61.7844, -53.1803, -51.5775, -57.0215, -29.3057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9686, device='cuda:0', dtype=torch.float64)
tensor([-62.7876, -52.9148, -51.8945, -56.5340, -29.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5337, device='cuda:0', dtype=torch.float64)
tensor([-63.5264, -52.3098, -51.9017, -55.4644, -28.8979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3136, device='cuda:0', dtype=torch.float64)
tensor([-64.0577, -52.2104, -51.7710, -54.5194, -28.6994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3773, device='cuda:0', dtype=torch.float64)
tensor([-64.5897, -51.9704, -52.0800, -53.8193, -28.5557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9778, device='cuda:0', dtype=torch.float64)
tensor([-65.6846, -51.9161, -52.4988, -53.7883, -28.7294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0964, device='cuda:0', dtype=torch.float64)
tensor([-67.0475, -51.5979, -53.2724, -53.1623, -28.7065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5100, device='cuda:0', dtype=torch.float64)
tensor([-68.1458, -51.5335, -53.3129, -52.2236, -28.6837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6012, device='cuda:0', dtype=torch.float64)
tensor([-69.3524, -51.7449, -53.1305, -51.4682, -28.6334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6531, device='cuda:0', dtype=torch.float64)
tensor([-70.2745, -51.3902, -52.4710, -50.4077, -28.5430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3399, device='cuda:0', dtype=torch.float64)
tensor([-71.3388, -51.2488, -51.7948, -49.3566, -28.6751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6022, device='cuda:0', dtype=torch.float64)
tensor([-72.3166, -51.1062, -51.1326, -48.2823, -28.7329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5482, device='cuda:0', dtype=torch.float64)
tensor([-73.0820, -50.9157, -50.3737, -47.4986, -28.7731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5327, device='cuda:0', dtype=torch.float64)
tensor([-73.7117, -51.3544, -50.5051, -47.2483, -28.9344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8724, device='cuda:0', dtype=torch.float64)
tensor([-74.3994, -52.1827, -50.2081, -46.8970, -29.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4794, device='cuda:0', dtype=torch.float64)
tensor([-75.2542, -53.0826, -50.2624, -46.5988, -29.4579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7862, device='cuda:0', dtype=torch.float64)
tensor([-75.9999, -53.6068, -50.1943, -46.1348, -29.7119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7430, device='cuda:0', dtype=torch.float64)
tensor([-76.3318, -53.8730, -50.3243, -46.1811, -30.0000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7424, device='cuda:0', dtype=torch.float64)
tensor([-76.2710, -53.9444, -50.2659, -46.4902, -30.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6697, device='cuda:0', dtype=torch.float64)
tensor([-76.5485, -54.0630, -49.7984, -46.9013, -30.6914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2669, device='cuda:0', dtype=torch.float64)
tensor([-76.7521, -54.1092, -49.1477, -47.2776, -31.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6008, device='cuda:0', dtype=torch.float64)
tensor([-76.8757, -54.3793, -48.3393, -47.5694, -31.6038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4121, device='cuda:0', dtype=torch.float64)
tensor([-76.9419, -54.6761, -47.5714, -48.1145, -32.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7247, device='cuda:0', dtype=torch.float64)
tensor([-77.1751, -55.4602, -47.2015, -48.8613, -33.1149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8300, device='cuda:0', dtype=torch.float64)
tensor([-77.3694, -55.7154, -47.3335, -50.4372, -33.9210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9063, device='cuda:0', dtype=torch.float64)
tensor([-77.4262, -55.4437, -47.6197, -52.4215, -34.9225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7971, device='cuda:0', dtype=torch.float64)
tensor([-76.8484, -54.3238, -47.4306, -53.7389, -35.5091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6121, device='cuda:0', dtype=torch.float64)
tensor([-76.2848, -53.0242, -47.7220, -55.1510, -35.9079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6765, device='cuda:0', dtype=torch.float64)
tensor([-75.2146, -51.4702, -47.9491, -56.9581, -36.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7855, device='cuda:0', dtype=torch.float64)
tensor([-74.4395, -50.1846, -48.4453, -58.7394, -37.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8637, device='cuda:0', dtype=torch.float64)
tensor([-73.4039, -49.0376, -48.4028, -59.9320, -37.8224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7692, device='cuda:0', dtype=torch.float64)
tensor([-72.4818, -48.1889, -48.4853, -60.9688, -38.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4843, device='cuda:0', dtype=torch.float64)
tensor([-71.5783, -48.1314, -48.3818, -62.0113, -38.6986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5364, device='cuda:0', dtype=torch.float64)
tensor([-70.7181, -48.5578, -47.9213, -62.9188, -39.3539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5738, device='cuda:0', dtype=torch.float64)
tensor([-70.2767, -49.5075, -47.5884, -63.6107, -39.6940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8533, device='cuda:0', dtype=torch.float64)
tensor([-70.2767, -50.2407, -47.3143, -63.7407, -39.6567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6233, device='cuda:0', dtype=torch.float64)
tensor([-70.2607, -51.8765, -46.7375, -63.9349, -39.6470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6105, device='cuda:0', dtype=torch.float64)
tensor([-70.6273, -53.6131, -46.1956, -63.9288, -39.7322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6321, device='cuda:0', dtype=torch.float64)
tensor([-71.0662, -54.8591, -45.8534, -63.7546, -39.8888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5699, device='cuda:0', dtype=torch.float64)
tensor([-71.3328, -56.3120, -45.5843, -63.8379, -40.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6535, device='cuda:0', dtype=torch.float64)
tensor([-71.7731, -58.3303, -45.5246, -64.0104, -40.4276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8281, device='cuda:0', dtype=torch.float64)
tensor([-72.2939, -60.4182, -45.6119, -64.7314, -40.7516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6121, device='cuda:0', dtype=torch.float64)
tensor([-72.9162, -62.2347, -45.8265, -65.2971, -41.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3098, device='cuda:0', dtype=torch.float64)
tensor([-73.8069, -64.1212, -46.2098, -66.0640, -41.7465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4411, device='cuda:0', dtype=torch.float64)
tensor([-74.9754, -65.7091, -46.9956, -66.7843, -42.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4932, device='cuda:0', dtype=torch.float64)
tensor([-75.6966, -67.8462, -47.4731, -67.6505, -42.6337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8534, device='cuda:0', dtype=torch.float64)
tensor([-76.2289, -69.8694, -47.6931, -68.8611, -43.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8096, device='cuda:0', dtype=torch.float64)
tensor([-77.0166, -71.5511, -48.1537, -69.7140, -43.5263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0408, device='cuda:0', dtype=torch.float64)
tensor([-77.4960, -72.4976, -48.2785, -70.7196, -43.8313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6286, device='cuda:0', dtype=torch.float64)
tensor([-77.3041, -72.9335, -48.0061, -71.6581, -43.6947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4623, device='cuda:0', dtype=torch.float64)
tensor([-77.2722, -73.6549, -48.1868, -72.3470, -43.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5966, device='cuda:0', dtype=torch.float64)
tensor([-77.0801, -74.8726, -48.4088, -73.1300, -43.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7249, device='cuda:0', dtype=torch.float64)
tensor([-77.1787, -76.0611, -48.5121, -73.9503, -43.4269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1643, device='cuda:0', dtype=torch.float64)
tensor([-77.3664, -76.5070, -48.0339, -74.4105, -43.6043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5671, device='cuda:0', dtype=torch.float64)
tensor([-77.2025, -77.0745, -48.0329, -75.2882, -44.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3269, device='cuda:0', dtype=torch.float64)
tensor([-77.2378, -77.9208, -48.2362, -75.8852, -45.0523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6864, device='cuda:0', dtype=torch.float64)
tensor([-77.4118, -78.1311, -48.3389, -76.8345, -46.0496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7534, device='cuda:0', dtype=torch.float64)
tensor([-77.0661, -77.9667, -47.8726, -77.7286, -46.8955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6298, device='cuda:0', dtype=torch.float64)
tensor([-76.8468, -76.5686, -47.6407, -78.3922, -47.8011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4409, device='cuda:0', dtype=torch.float64)
tensor([-76.5122, -74.7009, -47.2047, -78.6652, -48.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7591, device='cuda:0', dtype=torch.float64)
tensor([-76.4042, -73.1493, -46.8759, -79.0839, -48.4845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2834, device='cuda:0', dtype=torch.float64)
tensor([-75.9118, -72.1779, -46.9684, -79.4360, -49.0374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5861, device='cuda:0', dtype=torch.float64)
tensor([-75.4516, -72.4826, -47.3472, -80.0320, -49.7929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4863, device='cuda:0', dtype=torch.float64)
tensor([-75.4008, -73.7447, -48.1695, -80.7109, -50.8197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5375, device='cuda:0', dtype=torch.float64)
tensor([-75.5128, -75.3652, -49.0253, -81.1570, -51.9188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4394, device='cuda:0', dtype=torch.float64)
tensor([-75.8680, -76.8239, -50.2073, -81.5475, -53.0454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5509, device='cuda:0', dtype=torch.float64)
tensor([-76.1457, -77.5333, -51.2516, -81.6197, -53.8817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4593, device='cuda:0', dtype=torch.float64)
tensor([-76.0042, -78.5255, -51.8091, -81.3942, -54.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6323, device='cuda:0', dtype=torch.float64)
tensor([-75.9562, -79.0224, -52.5920, -81.5776, -55.6268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6057, device='cuda:0', dtype=torch.float64)
tensor([-75.8069, -79.4919, -52.9288, -82.0241, -56.8328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7205, device='cuda:0', dtype=torch.float64)
tensor([-75.8397, -79.7568, -53.6476, -82.8645, -58.4106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3598, device='cuda:0', dtype=torch.float64)
tensor([-75.7207, -80.3285, -54.7651, -83.6126, -60.1335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7440, device='cuda:0', dtype=torch.float64)
tensor([-75.3037, -80.9529, -55.4806, -83.6353, -61.6199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6610, device='cuda:0', dtype=torch.float64)
tensor([-75.2871, -82.0351, -56.2778, -83.8993, -63.6061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4504, device='cuda:0', dtype=torch.float64)
tensor([-75.7109, -82.5550, -56.8458, -84.0012, -64.9976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4424, device='cuda:0', dtype=torch.float64)
tensor([-76.3830, -83.1107, -57.1957, -83.8034, -66.0875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3666, device='cuda:0', dtype=torch.float64)
tensor([-76.9761, -83.2478, -57.4355, -83.4618, -67.2689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5241, device='cuda:0', dtype=torch.float64)
tensor([-77.4105, -82.3335, -58.0531, -83.4147, -68.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2407, device='cuda:0', dtype=torch.float64)
tensor([-78.1605, -81.4429, -58.6903, -83.6393, -70.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5372, device='cuda:0', dtype=torch.float64)
tensor([-78.3766, -81.0679, -59.1167, -83.3945, -71.7608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3241, device='cuda:0', dtype=torch.float64)
tensor([-78.5352, -81.6399, -59.3039, -83.3434, -73.7412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2837, device='cuda:0', dtype=torch.float64)
tensor([-78.5818, -82.3402, -59.5970, -83.3294, -75.7631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8699, device='cuda:0', dtype=torch.float64)
tensor([-78.4773, -83.8306, -60.4073, -83.9199, -78.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4517, device='cuda:0', dtype=torch.float64)
tensor([-78.4962, -85.5875, -61.3140, -84.3224, -80.4202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5061, device='cuda:0', dtype=torch.float64)
tensor([-78.5944, -87.2259, -61.9290, -84.7106, -82.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7030, device='cuda:0', dtype=torch.float64)
tensor([-78.5030, -89.3930, -62.9103, -85.4298, -84.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5685, device='cuda:0', dtype=torch.float64)
tensor([-78.8650, -92.2250, -63.7292, -86.6294, -86.2842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5821, device='cuda:0', dtype=torch.float64)
tensor([-79.2008, -95.1326, -64.2465, -87.7166, -88.2803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8869, device='cuda:0', dtype=torch.float64)
tensor([-79.2509, -97.8397, -64.7950, -87.8613, -88.9396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3065, device='cuda:0', dtype=torch.float64)
tensor([ -79.6655, -101.2433,  -65.4544,  -88.6922,  -89.7037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6115, device='cuda:0', dtype=torch.float64)
tensor([ -80.3402, -104.4195,  -66.3800,  -90.0031,  -90.7688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6578, device='cuda:0', dtype=torch.float64)
tensor([ -81.2602, -106.2813,  -67.1686,  -91.1780,  -91.2350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5985, device='cuda:0', dtype=torch.float64)
tensor([ -82.0159, -106.5840,  -67.5349,  -91.7436,  -90.5516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3933, device='cuda:0', dtype=torch.float64)
tensor([ -82.7275, -107.7369,  -68.4297,  -92.2601,  -89.5383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4564, device='cuda:0', dtype=torch.float64)
tensor([ -83.3689, -108.0612,  -69.3382,  -92.4820,  -88.5768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3167, device='cuda:0', dtype=torch.float64)
tensor([ -83.8899, -108.1149,  -70.5173,  -92.5039,  -87.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3254, device='cuda:0', dtype=torch.float64)
tensor([ -84.2788, -108.6093,  -71.7223,  -92.5451,  -86.2427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2052, device='cuda:0', dtype=torch.float64)
tensor([ -84.7721, -109.2252,  -72.4721,  -92.3711,  -85.3874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4668, device='cuda:0', dtype=torch.float64)
tensor([ -85.2196, -108.9648,  -73.0971,  -92.0316,  -84.2813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5510, device='cuda:0', dtype=torch.float64)
tensor([ -85.5945, -107.9983,  -73.8521,  -91.5463,  -83.2606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7223, device='cuda:0', dtype=torch.float64)
tensor([ -86.3106, -107.2025,  -74.9222,  -91.7512,  -82.4787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8600, device='cuda:0', dtype=torch.float64)
tensor([ -87.3450, -104.4135,  -75.5616,  -91.6896,  -81.2669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4404, device='cuda:0', dtype=torch.float64)
tensor([ -87.8375, -102.6530,  -75.6723,  -91.6722,  -80.5047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3928, device='cuda:0', dtype=torch.float64)
tensor([ -88.4802, -101.5060,  -75.3588,  -91.7287,  -79.9131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6717, device='cuda:0', dtype=torch.float64)
tensor([ -89.1112, -100.4926,  -74.8893,  -92.0302,  -80.0354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3120, device='cuda:0', dtype=torch.float64)
tensor([-89.8987, -99.8196, -74.5464, -92.6133, -80.5247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2957, device='cuda:0', dtype=torch.float64)
tensor([-90.6476, -98.1740, -73.8594, -92.4700, -80.4767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4014, device='cuda:0', dtype=torch.float64)
tensor([-91.4334, -96.9348, -73.5135, -92.4800, -80.9489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6097, device='cuda:0', dtype=torch.float64)
tensor([-91.8094, -95.5432, -72.7233, -91.8047, -80.9740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5966, device='cuda:0', dtype=torch.float64)
tensor([-92.9664, -94.3474, -72.1259, -91.3135, -80.8630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6459, device='cuda:0', dtype=torch.float64)
tensor([-94.0582, -93.2454, -71.2310, -90.5770, -80.8022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4735, device='cuda:0', dtype=torch.float64)
tensor([-94.7770, -92.0477, -70.1686, -89.3488, -80.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6753, device='cuda:0', dtype=torch.float64)
tensor([-95.6901, -90.4193, -69.3545, -87.9320, -79.2504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5265, device='cuda:0', dtype=torch.float64)
tensor([-96.4665, -88.9874, -68.7589, -86.6146, -78.4833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2643, device='cuda:0', dtype=torch.float64)
tensor([-97.4125, -88.4627, -68.1446, -85.6527, -77.9920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4006, device='cuda:0', dtype=torch.float64)
tensor([-98.1469, -87.7878, -67.6232, -85.1482, -77.5822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5474, device='cuda:0', dtype=torch.float64)
tensor([-98.0180, -87.6635, -66.6672, -84.8500, -77.3929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4225, device='cuda:0', dtype=torch.float64)
tensor([-97.8085, -87.7122, -65.8664, -84.8333, -77.6547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5761, device='cuda:0', dtype=torch.float64)
tensor([-97.5367, -88.2743, -65.1969, -84.9577, -77.7649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4168, device='cuda:0', dtype=torch.float64)
tensor([-97.0675, -88.6529, -64.3638, -85.0107, -77.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3647, device='cuda:0', dtype=torch.float64)
tensor([-95.9713, -88.4236, -63.1981, -84.5775, -77.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2589, device='cuda:0', dtype=torch.float64)
tensor([-94.5210, -88.3906, -61.9369, -83.8834, -76.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5103, device='cuda:0', dtype=torch.float64)
tensor([-93.5544, -89.0517, -60.6372, -83.5472, -75.7221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5747, device='cuda:0', dtype=torch.float64)
tensor([-92.6944, -89.1253, -59.8140, -83.2032, -75.0976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4753, device='cuda:0', dtype=torch.float64)
tensor([-92.3428, -89.2004, -59.6302, -83.0023, -74.9746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4408, device='cuda:0', dtype=torch.float64)
tensor([-92.5401, -89.6026, -59.7961, -83.3449, -75.2532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4375, device='cuda:0', dtype=torch.float64)
tensor([-92.8036, -91.1990, -59.9301, -83.9277, -75.5497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5127, device='cuda:0', dtype=torch.float64)
tensor([-93.1012, -92.8859, -60.1883, -84.4100, -75.8714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4744, device='cuda:0', dtype=torch.float64)
tensor([-94.1583, -95.1302, -60.5382, -85.1951, -75.9865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4124, device='cuda:0', dtype=torch.float64)
tensor([-94.8477, -97.3978, -61.1773, -86.3040, -76.7105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2612, device='cuda:0', dtype=torch.float64)
tensor([-95.6186, -99.6961, -62.0018, -87.4507, -77.5519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4950, device='cuda:0', dtype=torch.float64)
tensor([ -96.4819, -101.8321,  -62.8077,  -88.3638,  -78.2339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3514, device='cuda:0', dtype=torch.float64)
tensor([ -97.9837, -103.8266,  -63.6224,  -89.5029,  -78.7231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([ -99.5073, -106.3148,  -64.4532,  -90.7262,  -79.1195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4484, device='cuda:0', dtype=torch.float64)
tensor([-100.8387, -108.7384,  -65.0868,  -92.0495,  -79.4203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2510, device='cuda:0', dtype=torch.float64)
tensor([-101.9563, -111.7845,  -65.5408,  -93.6095,  -80.0892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4475, device='cuda:0', dtype=torch.float64)
tensor([-102.7558, -114.9334,  -66.0416,  -95.3587,  -81.3454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3311, device='cuda:0', dtype=torch.float64)
tensor([-103.1629, -118.0992,  -66.2932,  -96.9352,  -82.5579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4181, device='cuda:0', dtype=torch.float64)
tensor([-103.2264, -121.2369,  -65.8058,  -98.6569,  -83.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5608, device='cuda:0', dtype=torch.float64)
tensor([-103.7057, -124.0417,  -65.6077, -100.4363,  -85.0227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2246, device='cuda:0', dtype=torch.float64)
tensor([-104.3027, -126.8179,  -65.5681, -102.2467,  -86.0205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4424, device='cuda:0', dtype=torch.float64)
tensor([-105.0542, -128.9409,  -65.9516, -103.9002,  -87.0283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7684, device='cuda:0', dtype=torch.float64)
tensor([-105.5236, -130.7620,  -65.8149, -105.0892,  -87.5651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6776, device='cuda:0', dtype=torch.float64)
tensor([-106.1548, -132.6769,  -66.1875, -106.7654,  -87.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3481, device='cuda:0', dtype=torch.float64)
tensor([-106.4343, -133.6573,  -66.1753, -108.2408,  -88.5473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7033, device='cuda:0', dtype=torch.float64)
tensor([-107.0054, -134.5504,  -65.7595, -109.7585,  -89.6238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3501, device='cuda:0', dtype=torch.float64)
tensor([-107.5990, -134.5348,  -65.7134, -111.2786,  -90.5593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3429, device='cuda:0', dtype=torch.float64)
tensor([-107.7741, -134.8789,  -65.6999, -112.5140,  -91.5963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4827, device='cuda:0', dtype=torch.float64)
tensor([-107.7599, -135.3658,  -65.5094, -113.7218,  -92.4845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5477, device='cuda:0', dtype=torch.float64)
tensor([-107.9318, -135.7223,  -65.3313, -114.4165,  -93.3781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1772, device='cuda:0', dtype=torch.float64)
tensor([-108.1615, -136.9577,  -65.3140, -115.1866,  -94.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([-108.3713, -137.5381,  -65.2662, -115.3620,  -95.3819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4573, device='cuda:0', dtype=torch.float64)
tensor([-108.9675, -138.4053,  -65.1335, -115.6538,  -96.5051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3680, device='cuda:0', dtype=torch.float64)
tensor([-109.0760, -138.1280,  -65.2145, -115.5012,  -97.6603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3263, device='cuda:0', dtype=torch.float64)
tensor([-109.3735, -137.4175,  -65.2635, -115.1794,  -98.4047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2664, device='cuda:0', dtype=torch.float64)
tensor([-109.9117, -136.5385,  -65.5034, -115.0743,  -99.6432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5699, device='cuda:0', dtype=torch.float64)
tensor([-110.3418, -136.0549,  -65.9116, -115.0972, -101.4213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5902, device='cuda:0', dtype=torch.float64)
tensor([-111.5894, -135.5371,  -66.5231, -115.8484, -102.5925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6266, device='cuda:0', dtype=torch.float64)
tensor([-112.3103, -134.8079,  -66.8088, -116.0309, -103.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3916, device='cuda:0', dtype=torch.float64)
tensor([-112.7580, -133.8993,  -67.3154, -116.6220, -104.9059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4000, device='cuda:0', dtype=torch.float64)
tensor([-114.0973, -134.1490,  -68.1834, -118.2322, -106.2556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3648, device='cuda:0', dtype=torch.float64)
tensor([-114.7352, -135.6524,  -68.6092, -119.7300, -107.3953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([-115.8489, -137.4374,  -69.1868, -121.5046, -108.8577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3088, device='cuda:0', dtype=torch.float64)
tensor([-116.6755, -138.6052,  -69.6240, -122.6218, -109.6321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2974, device='cuda:0', dtype=torch.float64)
tensor([-116.7547, -139.9388,  -69.7581, -123.2043, -109.9572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3574, device='cuda:0', dtype=torch.float64)
tensor([-116.8541, -141.6723,  -69.9044, -123.7547, -110.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5519, device='cuda:0', dtype=torch.float64)
tensor([-116.3803, -142.3788,  -70.0096, -123.9921, -110.3450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2894, device='cuda:0', dtype=torch.float64)
tensor([-116.2753, -143.5454,  -70.1448, -124.4575, -111.1347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4150, device='cuda:0', dtype=torch.float64)
tensor([-115.8988, -144.9157,  -70.3636, -124.5179, -112.2215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2464, device='cuda:0', dtype=torch.float64)
tensor([-116.1872, -146.0998,  -70.8375, -124.4140, -113.2655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6154, device='cuda:0', dtype=torch.float64)
tensor([-116.8634, -146.7462,  -71.4214, -124.1744, -114.2826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4868, device='cuda:0', dtype=torch.float64)
tensor([-117.8122, -147.0074,  -72.1329, -124.0450, -114.9519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6362, device='cuda:0', dtype=torch.float64)
tensor([-118.9656, -146.4653,  -72.6548, -123.6553, -114.7397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3966, device='cuda:0', dtype=torch.float64)
tensor([-120.9177, -145.8161,  -73.5077, -123.3822, -113.8043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4282, device='cuda:0', dtype=torch.float64)
tensor([-123.4369, -145.5799,  -74.7355, -123.6727, -113.3346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5073, device='cuda:0', dtype=torch.float64)
tensor([-126.6371, -146.3346,  -76.1565, -124.5737, -113.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1785, device='cuda:0', dtype=torch.float64)
tensor([-129.3804, -146.8580,  -77.6753, -125.6310, -114.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5819, device='cuda:0', dtype=torch.float64)
tensor([-132.1103, -148.3160,  -79.0380, -126.6703, -115.8472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4464, device='cuda:0', dtype=torch.float64)
tensor([-134.4281, -151.2059,  -80.0711, -127.8022, -117.1238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4745, device='cuda:0', dtype=torch.float64)
tensor([-137.0397, -154.7957,  -81.3490, -129.6625, -118.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4041, device='cuda:0', dtype=torch.float64)
tensor([-139.3035, -158.1640,  -82.6904, -131.4024, -120.9424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2907, device='cuda:0', dtype=torch.float64)
tensor([-140.5898, -160.4676,  -83.8301, -132.6084, -122.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7468, device='cuda:0', dtype=torch.float64)
tensor([-141.3541, -162.0275,  -84.8204, -133.4937, -123.7693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2709, device='cuda:0', dtype=torch.float64)
tensor([-140.9985, -162.8272,  -85.3431, -133.2447, -124.3872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4087, device='cuda:0', dtype=torch.float64)
tensor([-140.2956, -163.3457,  -85.6248, -133.0495, -124.4835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3537, device='cuda:0', dtype=torch.float64)
tensor([-139.7690, -163.3674,  -86.0266, -133.1431, -124.1716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4567, device='cuda:0', dtype=torch.float64)
tensor([-139.6767, -164.0755,  -86.8210, -133.8305, -124.9545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4415, device='cuda:0', dtype=torch.float64)
tensor([-138.9994, -165.0102,  -87.2134, -134.2661, -125.5899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2681, device='cuda:0', dtype=torch.float64)
tensor([-138.6639, -165.7371,  -87.4515, -134.3140, -125.9321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5495, device='cuda:0', dtype=torch.float64)
tensor([-137.8175, -165.6618,  -87.3914, -133.9174, -126.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-137.4350, -164.7428,  -87.1170, -133.4652, -126.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3132, device='cuda:0', dtype=torch.float64)
tensor([-136.9544, -163.5277,  -86.5873, -132.7746, -126.4169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2369, device='cuda:0', dtype=torch.float64)
tensor([-137.1708, -163.0611,  -86.4029, -132.7214, -127.5853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5313, device='cuda:0', dtype=torch.float64)
tensor([-137.8839, -160.5444,  -86.0460, -132.2486, -127.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4058, device='cuda:0', dtype=torch.float64)
tensor([-138.2237, -157.7305,  -86.0630, -131.6128, -126.8675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1338, device='cuda:0', dtype=torch.float64)
tensor([-138.5496, -155.6484,  -86.1938, -131.0944, -126.7815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2925, device='cuda:0', dtype=torch.float64)
tensor([-138.5905, -153.5683,  -86.1414, -130.4365, -125.6525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3117, device='cuda:0', dtype=torch.float64)
tensor([-139.3066, -153.4994,  -86.5293, -131.0171, -125.8168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3776, device='cuda:0', dtype=torch.float64)
tensor([-140.5462, -153.6346,  -87.1364, -131.7129, -126.2768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2080, device='cuda:0', dtype=torch.float64)
tensor([-142.0848, -152.8522,  -88.0295, -132.7058, -126.8197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3838, device='cuda:0', dtype=torch.float64)
tensor([-143.8187, -152.7258,  -89.3207, -134.1907, -127.5292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4211, device='cuda:0', dtype=torch.float64)
tensor([-145.7275, -152.5762,  -90.5274, -135.8166, -128.6257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4274, device='cuda:0', dtype=torch.float64)
tensor([-147.3370, -152.1987,  -91.7329, -137.5166, -129.8449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6068, device='cuda:0', dtype=torch.float64)
tensor([-149.4426, -152.5194,  -93.1341, -139.8028, -131.8410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1432, device='cuda:0', dtype=torch.float64)
tensor([-151.2835, -152.8994,  -94.6379, -142.1340, -133.6309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3946, device='cuda:0', dtype=torch.float64)
tensor([-151.6102, -153.6682,  -95.3344, -143.1570, -134.6374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3051, device='cuda:0', dtype=torch.float64)
tensor([-151.5812, -155.2029,  -96.0006, -144.1951, -135.4683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5762, device='cuda:0', dtype=torch.float64)
tensor([-149.8098, -155.6034,  -96.2666, -144.2133, -135.3421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3853, device='cuda:0', dtype=torch.float64)
tensor([-148.5639, -155.8586,  -96.7497, -144.6802, -135.4877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3322, device='cuda:0', dtype=torch.float64)
tensor([-147.3890, -155.6642,  -97.0475, -144.6528, -135.1822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4441, device='cuda:0', dtype=torch.float64)
tensor([-146.4359, -154.5965,  -97.3849, -144.4410, -134.9695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-145.7611, -153.2119,  -97.5906, -144.3347, -134.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([-144.0343, -151.8960,  -97.3728, -143.4163, -134.1368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0668, device='cuda:0', dtype=torch.float64)
tensor([-142.5959, -150.1310,  -97.2914, -142.6613, -133.9141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2117, device='cuda:0', dtype=torch.float64)
tensor([-141.5859, -149.1112,  -97.4558, -142.3867, -134.0917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4048, device='cuda:0', dtype=torch.float64)
tensor([-140.8643, -149.1720,  -97.7145, -142.2512, -134.7757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3701, device='cuda:0', dtype=torch.float64)
tensor([-140.2658, -149.2330,  -97.8919, -142.1880, -134.9469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3748, device='cuda:0', dtype=torch.float64)
tensor([-139.9916, -150.0563,  -98.2541, -142.2382, -136.3869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3213, device='cuda:0', dtype=torch.float64)
tensor([-139.8310, -151.3406,  -98.5040, -142.3468, -138.1687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2720, device='cuda:0', dtype=torch.float64)
tensor([-139.8723, -153.5833,  -98.9386, -142.7563, -140.5013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-140.1310, -155.7761,  -99.3248, -143.4734, -142.8480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1947, device='cuda:0', dtype=torch.float64)
tensor([-140.6665, -157.7912,  -99.6224, -144.0393, -145.5846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2839, device='cuda:0', dtype=torch.float64)
tensor([-141.0138, -159.7399,  -99.9724, -144.6365, -147.9252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4133, device='cuda:0', dtype=torch.float64)
tensor([-141.2626, -160.6002, -100.4316, -145.3784, -150.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2691, device='cuda:0', dtype=torch.float64)
tensor([-141.0341, -160.9470, -100.9253, -145.7732, -153.3208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1690, device='cuda:0', dtype=torch.float64)
tensor([-141.1642, -160.4441, -100.9998, -146.0735, -155.8558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3140, device='cuda:0', dtype=torch.float64)
tensor([-141.6098, -161.3619, -101.0286, -146.7346, -158.9658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3028, device='cuda:0', dtype=torch.float64)
tensor([-141.9319, -161.7155, -101.2496, -147.5763, -161.2334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2196, device='cuda:0', dtype=torch.float64)
tensor([-142.8119, -164.0166, -101.7479, -148.9996, -164.1268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4070, device='cuda:0', dtype=torch.float64)
tensor([-142.8456, -165.8946, -101.7034, -149.8612, -166.2874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2409, device='cuda:0', dtype=torch.float64)
tensor([-142.4368, -167.8964, -101.1524, -150.2595, -167.9778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3348, device='cuda:0', dtype=torch.float64)
tensor([-141.6481, -169.9138, -100.3383, -150.3006, -169.2153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2088, device='cuda:0', dtype=torch.float64)
tensor([-140.7151, -172.7547,  -99.5285, -150.0119, -171.0220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2025, device='cuda:0', dtype=torch.float64)
tensor([-139.5155, -176.2249,  -98.9656, -149.6201, -173.0378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4494, device='cuda:0', dtype=torch.float64)
tensor([-138.5482, -180.3542,  -98.2698, -149.2072, -176.0361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9989, device='cuda:0', dtype=torch.float64)
tensor([-137.7667, -184.1742,  -97.5570, -148.9394, -178.1573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3157, device='cuda:0', dtype=torch.float64)
tensor([-136.9890, -186.9624,  -96.6615, -148.5371, -179.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3873, device='cuda:0', dtype=torch.float64)
tensor([-137.2159, -189.6259,  -95.9235, -149.2276, -180.7196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3476, device='cuda:0', dtype=torch.float64)
tensor([-137.1798, -191.9343,  -95.2150, -149.9427, -181.5720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2741, device='cuda:0', dtype=torch.float64)
tensor([-136.8301, -193.8065,  -94.1979, -149.9747, -182.2513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1437, device='cuda:0', dtype=torch.float64)
tensor([-136.8370, -194.7363,  -93.6820, -150.0000, -182.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3012, device='cuda:0', dtype=torch.float64)
tensor([-137.2795, -195.6302,  -93.2986, -150.2396, -183.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1752, device='cuda:0', dtype=torch.float64)
tensor([-137.2204, -196.6591,  -92.8644, -150.1162, -182.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3276, device='cuda:0', dtype=torch.float64)
tensor([-137.2868, -198.5321,  -92.8071, -150.2942, -183.3527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1937, device='cuda:0', dtype=torch.float64)
tensor([-137.5702, -200.4857,  -92.8625, -150.7015, -184.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2666, device='cuda:0', dtype=torch.float64)
tensor([-137.8642, -202.0614,  -92.7452, -150.8688, -184.3186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4523, device='cuda:0', dtype=torch.float64)
tensor([-138.1253, -205.2753,  -92.5406, -151.8089, -185.3798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9797, device='cuda:0', dtype=torch.float64)
tensor([-138.8859, -207.8815,  -92.5948, -152.8417, -186.5134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1284, device='cuda:0', dtype=torch.float64)
tensor([-139.9209, -210.2355,  -92.8900, -153.7160, -187.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1535, device='cuda:0', dtype=torch.float64)
tensor([-141.1727, -212.8601,  -93.7162, -154.9427, -188.9453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3048, device='cuda:0', dtype=torch.float64)
tensor([-142.8196, -215.4871,  -94.4235, -156.1227, -191.0145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3439, device='cuda:0', dtype=torch.float64)
tensor([-144.6759, -217.7805,  -95.3656, -157.6639, -192.9298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3904, device='cuda:0', dtype=torch.float64)
tensor([-146.4071, -220.9332,  -96.3626, -159.7140, -195.0271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0975, device='cuda:0', dtype=torch.float64)
tensor([-148.0842, -223.8071,  -97.4393, -161.2859, -196.7498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3331, device='cuda:0', dtype=torch.float64)
tensor([-150.0636, -227.9615,  -98.7705, -163.7994, -199.3207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4681, device='cuda:0', dtype=torch.float64)
tensor([-152.7807, -231.6957, -100.1278, -166.4196, -201.7330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3361, device='cuda:0', dtype=torch.float64)
tensor([-155.3738, -234.2999, -101.1306, -168.8243, -203.7619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3368, device='cuda:0', dtype=torch.float64)
tensor([-158.0321, -236.2467, -101.8179, -170.8968, -205.3106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2331, device='cuda:0', dtype=torch.float64)
tensor([-160.2842, -238.0692, -102.1088, -172.8238, -207.2369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2471, device='cuda:0', dtype=torch.float64)
tensor([-161.8065, -240.1844, -102.1324, -174.5318, -208.8380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2854, device='cuda:0', dtype=torch.float64)
tensor([-163.7548, -242.7855, -102.2403, -176.7107, -210.6858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1945, device='cuda:0', dtype=torch.float64)
tensor([-165.0018, -246.2273, -102.0278, -178.5162, -212.0615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3423, device='cuda:0', dtype=torch.float64)
tensor([-166.6605, -249.6498, -102.0602, -180.5574, -212.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9424, device='cuda:0', dtype=torch.float64)
tensor([-168.1185, -253.9435, -102.4108, -182.8692, -213.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2213, device='cuda:0', dtype=torch.float64)
tensor([-169.7886, -256.2336, -102.8255, -184.7680, -213.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3141, device='cuda:0', dtype=torch.float64)
tensor([-170.6120, -257.4740, -102.6466, -185.9519, -212.6899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1619, device='cuda:0', dtype=torch.float64)
tensor([-171.1398, -260.4798, -102.1586, -187.2324, -211.9582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3396, device='cuda:0', dtype=torch.float64)
tensor([-170.6373, -264.1969, -101.0411, -187.9991, -210.7433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0202, device='cuda:0', dtype=torch.float64)
tensor([-169.7957, -266.7490,  -99.8852, -188.3889, -209.0319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3067, device='cuda:0', dtype=torch.float64)
tensor([-168.4123, -266.9991,  -98.8149, -188.2094, -207.1410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3388, device='cuda:0', dtype=torch.float64)
tensor([-168.4528, -267.8803,  -98.5076, -188.9278, -206.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3539, device='cuda:0', dtype=torch.float64)
tensor([-167.5898, -268.4262,  -97.9681, -189.2666, -205.3149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2701, device='cuda:0', dtype=torch.float64)
tensor([-166.4150, -269.7776,  -97.6846, -189.0501, -204.4142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0703, device='cuda:0', dtype=torch.float64)
tensor([-164.8739, -270.3723,  -97.7087, -188.8776, -203.2827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2020, device='cuda:0', dtype=torch.float64)
tensor([-163.8578, -272.2095,  -97.6570, -189.0671, -202.6933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-163.2455, -273.2757,  -97.8059, -189.3182, -202.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9327, device='cuda:0', dtype=torch.float64)
tensor([-162.2178, -273.7240,  -97.5371, -189.0449, -201.8301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3346, device='cuda:0', dtype=torch.float64)
tensor([-161.2533, -273.9029,  -97.2564, -188.5392, -202.1569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1606, device='cuda:0', dtype=torch.float64)
tensor([-161.0601, -273.8268,  -97.3493, -188.3708, -203.0017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3017, device='cuda:0', dtype=torch.float64)
tensor([-160.7221, -273.6187,  -97.4090, -187.9354, -204.1891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2767, device='cuda:0', dtype=torch.float64)
tensor([-161.1154, -273.3963,  -98.1918, -188.1224, -205.9174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2901, device='cuda:0', dtype=torch.float64)
tensor([-161.0260, -272.5473,  -98.6446, -187.6675, -207.7864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-160.3475, -271.0937,  -98.7369, -186.8213, -208.7343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2390, device='cuda:0', dtype=torch.float64)
tensor([-160.0307, -271.1566,  -98.8909, -186.1764, -210.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2876, device='cuda:0', dtype=torch.float64)
tensor([-159.5734, -270.9542,  -99.0838, -185.3715, -211.0258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1533, device='cuda:0', dtype=torch.float64)
tensor([-159.7445, -271.0066,  -99.7771, -185.0746, -211.7641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4061, device='cuda:0', dtype=torch.float64)
tensor([-160.9651, -270.7195, -100.7492, -185.3251, -212.0687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2353, device='cuda:0', dtype=torch.float64)
tensor([-162.3170, -272.7909, -101.6691, -185.8442, -213.7685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3089, device='cuda:0', dtype=torch.float64)
tensor([-164.2864, -274.6517, -102.6287, -186.8749, -215.4069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9482, device='cuda:0', dtype=torch.float64)
tensor([-166.2778, -276.4071, -103.4489, -188.3182, -217.0270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2016, device='cuda:0', dtype=torch.float64)
tensor([-168.1545, -277.0214, -104.0827, -189.7830, -218.3466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9976, device='cuda:0', dtype=torch.float64)
tensor([-169.3725, -277.9115, -104.4677, -190.8026, -219.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([-169.6053, -276.1674, -104.4938, -190.9896, -220.1514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2482, device='cuda:0', dtype=torch.float64)
tensor([-169.6631, -275.0452, -104.6352, -191.0648, -220.1734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([-169.6542, -273.1767, -105.0333, -191.2302, -219.9921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1206, device='cuda:0', dtype=torch.float64)
tensor([-169.7559, -273.2474, -105.2499, -191.3131, -219.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0459, device='cuda:0', dtype=torch.float64)
tensor([-169.2812, -273.5439, -105.2945, -190.6112, -219.4606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2192, device='cuda:0', dtype=torch.float64)
tensor([-168.4073, -272.2422, -105.1448, -189.6392, -218.4262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0706, device='cuda:0', dtype=torch.float64)
tensor([-167.8366, -272.6159, -104.9238, -188.9856, -218.2980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0408, device='cuda:0', dtype=torch.float64)
tensor([-167.0889, -272.2699, -104.9354, -188.3966, -218.3295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-166.3928, -271.5991, -105.1799, -187.6555, -218.2904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9587, device='cuda:0', dtype=torch.float64)
tensor([-165.9296, -271.2965, -105.4496, -186.7635, -218.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-165.9867, -270.6224, -106.1892, -186.4191, -219.5578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2136, device='cuda:0', dtype=torch.float64)
tensor([-166.1422, -270.1970, -107.2162, -186.5333, -221.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2327, device='cuda:0', dtype=torch.float64)
tensor([-166.8648, -273.6736, -108.2552, -187.4744, -223.9500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5440, device='cuda:0', dtype=torch.float64)
tensor([-167.6786, -276.1029, -109.0937, -188.5967, -225.8522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2790, device='cuda:0', dtype=torch.float64)
tensor([-169.0095, -277.0786, -110.3558, -190.0676, -227.3641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0083, device='cuda:0', dtype=torch.float64)
tensor([-170.2473, -278.8466, -111.4287, -191.4536, -228.7931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0176, device='cuda:0', dtype=torch.float64)
tensor([-171.6707, -279.6771, -112.7959, -192.8890, -229.6718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1863, device='cuda:0', dtype=torch.float64)
tensor([-172.4124, -279.3961, -113.9470, -193.9023, -229.9412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1958, device='cuda:0', dtype=torch.float64)
tensor([-173.3283, -276.1689, -114.7558, -194.7284, -230.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0569, device='cuda:0', dtype=torch.float64)
tensor([-174.1269, -273.5701, -115.5337, -195.5485, -229.8548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-174.9390, -272.4937, -116.1007, -196.4183, -229.7119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1336, device='cuda:0', dtype=torch.float64)
tensor([-175.0062, -271.1641, -116.2148, -196.5756, -229.2367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3205, device='cuda:0', dtype=torch.float64)
tensor([-175.8680, -268.6374, -116.5969, -197.2819, -228.1037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9726, device='cuda:0', dtype=torch.float64)
tensor([-176.5131, -266.3316, -116.8786, -197.8473, -227.7079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9736, device='cuda:0', dtype=torch.float64)
tensor([-176.9885, -265.0956, -117.1622, -198.5884, -227.7857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2543, device='cuda:0', dtype=torch.float64)
tensor([-177.5249, -265.7568, -117.6716, -199.4054, -227.9538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9994, device='cuda:0', dtype=torch.float64)
tensor([-177.7964, -264.0362, -118.1396, -199.5301, -227.7501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1271, device='cuda:0', dtype=torch.float64)
tensor([-178.1845, -263.0553, -118.7412, -199.9994, -227.9594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-178.3674, -260.6036, -119.3823, -200.0406, -228.1017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9949, device='cuda:0', dtype=torch.float64)
tensor([-178.2542, -258.9880, -119.9593, -200.0994, -227.3820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-178.3197, -260.5907, -120.7330, -200.6364, -227.1127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-177.8033, -262.2599, -121.2775, -200.5587, -226.4737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9906, device='cuda:0', dtype=torch.float64)
tensor([-177.7390, -262.2865, -121.8283, -200.3737, -225.9931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9075, device='cuda:0', dtype=torch.float64)
tensor([-177.8733, -265.0580, -122.2519, -200.3242, -226.0611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0090, device='cuda:0', dtype=torch.float64)
tensor([-177.6696, -268.1348, -122.2826, -199.7390, -225.6644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2381, device='cuda:0', dtype=torch.float64)
tensor([-176.8788, -271.0767, -122.0169, -199.1483, -225.2450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9451, device='cuda:0', dtype=torch.float64)
tensor([-176.1731, -272.1629, -121.7201, -198.4617, -224.5205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9469, device='cuda:0', dtype=torch.float64)
tensor([-175.1541, -275.1588, -121.0092, -197.5041, -224.6255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3239, device='cuda:0', dtype=torch.float64)
tensor([-173.9411, -277.3948, -120.0329, -196.0204, -225.0250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1455, device='cuda:0', dtype=torch.float64)
tensor([-172.4982, -279.0300, -118.6793, -194.4224, -225.3025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1174, device='cuda:0', dtype=torch.float64)
tensor([-171.3639, -280.1128, -117.3374, -192.8244, -225.9466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1842, device='cuda:0', dtype=torch.float64)
tensor([-169.7221, -282.6740, -115.7986, -191.3025, -227.3097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8090, device='cuda:0', dtype=torch.float64)
tensor([-168.6495, -283.1635, -114.3046, -189.9003, -227.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0510, device='cuda:0', dtype=torch.float64)
tensor([-168.0798, -284.3943, -113.1645, -189.1363, -229.3328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1369, device='cuda:0', dtype=torch.float64)
tensor([-168.2415, -286.2071, -112.4738, -189.2909, -230.7357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9358, device='cuda:0', dtype=torch.float64)
tensor([-168.2718, -287.2726, -111.6236, -189.2957, -231.0393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2174, device='cuda:0', dtype=torch.float64)
tensor([-168.2397, -284.3460, -110.7879, -189.2418, -230.5382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1273, device='cuda:0', dtype=torch.float64)
tensor([-167.9435, -283.2323, -109.8275, -189.0191, -230.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9700, device='cuda:0', dtype=torch.float64)
tensor([-167.7101, -280.3071, -109.1078, -188.7014, -230.8564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1068, device='cuda:0', dtype=torch.float64)
tensor([-167.2937, -281.0820, -108.3681, -188.4977, -231.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0174, device='cuda:0', dtype=torch.float64)
tensor([-166.9684, -282.6769, -107.9013, -188.4487, -232.5506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0210, device='cuda:0', dtype=torch.float64)
tensor([-166.6491, -282.2537, -107.4333, -188.3380, -232.9230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0183, device='cuda:0', dtype=torch.float64)
tensor([-166.6299, -281.2122, -107.0861, -188.5537, -233.5792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1165, device='cuda:0', dtype=torch.float64)
tensor([-167.3059, -278.1990, -106.8909, -188.9142, -233.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0889, device='cuda:0', dtype=torch.float64)
tensor([-167.9025, -274.8850, -106.7100, -188.7653, -233.9587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1353, device='cuda:0', dtype=torch.float64)
tensor([-168.8241, -268.7872, -106.9075, -188.7061, -233.8786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-169.5973, -263.8222, -107.1597, -188.6423, -234.4366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0972, device='cuda:0', dtype=torch.float64)
tensor([-170.6804, -260.7014, -107.8640, -189.1262, -235.3960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-171.7232, -260.3934, -108.5977, -189.3332, -236.8720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0129, device='cuda:0', dtype=torch.float64)
tensor([-172.4043, -259.2925, -109.2913, -189.4566, -237.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([-172.8985, -257.2478, -109.9863, -189.2954, -237.8211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-173.3319, -257.3105, -110.6324, -189.5306, -238.5192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0308, device='cuda:0', dtype=torch.float64)
tensor([-173.7838, -256.1710, -111.2580, -189.7271, -238.6726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9871, device='cuda:0', dtype=torch.float64)
tensor([-174.0636, -254.7113, -111.8655, -189.8362, -237.4537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9684, device='cuda:0', dtype=torch.float64)
tensor([-174.1997, -251.8944, -112.3844, -190.0522, -236.0039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9816, device='cuda:0', dtype=torch.float64)
tensor([-174.6068, -248.6776, -112.8724, -190.3801, -234.9472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0051, device='cuda:0', dtype=torch.float64)
tensor([-174.8727, -244.7927, -113.1901, -190.2954, -234.1719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-175.5061, -243.0423, -113.6713, -190.9616, -233.4767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0645, device='cuda:0', dtype=torch.float64)
tensor([-176.4431, -238.9434, -114.3069, -191.5759, -232.3327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9091, device='cuda:0', dtype=torch.float64)
tensor([-177.6529, -234.3002, -114.9077, -192.1998, -231.1775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8378, device='cuda:0', dtype=torch.float64)
tensor([-178.8263, -231.0983, -115.2780, -193.0047, -231.2354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0300, device='cuda:0', dtype=torch.float64)
tensor([-180.3165, -229.8521, -115.5888, -193.8806, -232.0832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1505, device='cuda:0', dtype=torch.float64)
tensor([-181.2574, -233.5319, -115.9367, -195.6669, -233.1388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9570, device='cuda:0', dtype=torch.float64)
tensor([-182.3019, -235.8419, -116.2847, -197.2325, -233.7881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([-182.7666, -238.6039, -116.3976, -198.4014, -233.7285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9951, device='cuda:0', dtype=torch.float64)
tensor([-183.1095, -242.6005, -116.3716, -199.6131, -233.3294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([-183.4354, -249.4631, -116.5914, -201.0181, -234.0038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-183.6743, -256.6011, -116.7448, -202.1135, -234.6864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8758, device='cuda:0', dtype=torch.float64)
tensor([-184.1566, -261.9949, -117.1306, -203.3531, -235.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9236, device='cuda:0', dtype=torch.float64)
tensor([-184.8258, -266.9983, -117.4889, -204.6369, -234.9205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0400, device='cuda:0', dtype=torch.float64)
tensor([-185.8850, -271.6371, -117.9651, -206.1896, -234.9188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9924, device='cuda:0', dtype=torch.float64)
tensor([-186.7811, -276.3123, -118.4473, -207.6710, -235.2837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-187.7341, -279.0344, -119.0230, -208.8169, -235.4651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0324, device='cuda:0', dtype=torch.float64)
tensor([-188.8797, -281.1900, -119.7303, -210.2561, -236.3230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0027, device='cuda:0', dtype=torch.float64)
tensor([-189.9485, -282.9952, -120.3861, -211.3858, -236.9867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-190.7352, -282.7178, -120.7193, -211.8289, -237.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9614, device='cuda:0', dtype=torch.float64)
tensor([-191.3114, -282.6633, -120.9509, -212.2839, -238.7194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1288, device='cuda:0', dtype=torch.float64)
tensor([-191.9231, -284.6348, -121.2917, -212.4990, -239.4270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-192.5213, -288.1554, -121.6143, -212.9204, -240.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0441, device='cuda:0', dtype=torch.float64)
tensor([-193.5830, -293.4572, -122.2699, -213.7461, -242.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-194.4737, -296.9663, -122.8487, -214.4313, -243.9888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0128, device='cuda:0', dtype=torch.float64)
tensor([-195.2673, -299.3211, -123.4305, -214.6747, -245.6054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0504, device='cuda:0', dtype=torch.float64)
tensor([-195.7562, -300.9447, -123.8473, -214.8769, -246.5693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9476, device='cuda:0', dtype=torch.float64)
tensor([-195.9932, -300.2503, -124.0817, -214.5909, -246.7116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9613, device='cuda:0', dtype=torch.float64)
tensor([-196.7343, -299.6400, -124.4966, -214.8007, -248.2174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9684, device='cuda:0', dtype=torch.float64)
tensor([-197.3587, -299.9124, -124.9164, -215.0405, -249.7853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0273, device='cuda:0', dtype=torch.float64)
tensor([-197.8109, -301.7875, -125.5719, -215.6615, -251.9961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([-198.3341, -304.2770, -126.4134, -216.3956, -254.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9537, device='cuda:0', dtype=torch.float64)
tensor([-199.3861, -305.5263, -127.3254, -217.2009, -258.2823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9657, device='cuda:0', dtype=torch.float64)
tensor([-200.3574, -306.9214, -127.8627, -217.6981, -261.6651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8751, device='cuda:0', dtype=torch.float64)
tensor([-201.1776, -307.2402, -128.3326, -218.1612, -264.4819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0341, device='cuda:0', dtype=torch.float64)
tensor([-202.4818, -306.4275, -128.9933, -218.9737, -267.0635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9357, device='cuda:0', dtype=torch.float64)
tensor([-203.7262, -307.5671, -129.7877, -219.9090, -270.5994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1315, device='cuda:0', dtype=torch.float64)
tensor([-204.7422, -306.2803, -130.4622, -220.5036, -271.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8371, device='cuda:0', dtype=torch.float64)
tensor([-205.4818, -304.8721, -130.8163, -220.5239, -272.6524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8820, device='cuda:0', dtype=torch.float64)
tensor([-206.4177, -302.2436, -131.0383, -220.5164, -271.9377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8212, device='cuda:0', dtype=torch.float64)
tensor([-207.1664, -299.5505, -131.1928, -220.3396, -271.3262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9333, device='cuda:0', dtype=torch.float64)
tensor([-207.8401, -297.9016, -131.2179, -219.9955, -269.7866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7832, device='cuda:0', dtype=torch.float64)
tensor([-208.9755, -296.8722, -131.3451, -220.0589, -269.0583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0338, device='cuda:0', dtype=torch.float64)
tensor([-209.5501, -294.5807, -131.2761, -219.5298, -266.4575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9143, device='cuda:0', dtype=torch.float64)
tensor([-210.0205, -292.3669, -131.1969, -219.0461, -263.4130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9271, device='cuda:0', dtype=torch.float64)
tensor([-210.0903, -291.9911, -130.9092, -218.1311, -260.6160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9840, device='cuda:0', dtype=torch.float64)
tensor([-210.3220, -291.0110, -130.6768, -217.3405, -257.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8893, device='cuda:0', dtype=torch.float64)
tensor([-210.4662, -290.4033, -130.5464, -216.4866, -256.1666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9648, device='cuda:0', dtype=torch.float64)
tensor([-210.8721, -286.4108, -130.9170, -216.0743, -254.8677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8515, device='cuda:0', dtype=torch.float64)
tensor([-211.2544, -282.0921, -131.3417, -215.6291, -253.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9660, device='cuda:0', dtype=torch.float64)
tensor([-211.8690, -278.7235, -131.8139, -215.3419, -253.6720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9404, device='cuda:0', dtype=torch.float64)
tensor([-213.1045, -273.6379, -132.7149, -215.6417, -253.2998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0484, device='cuda:0', dtype=torch.float64)
tensor([-214.1311, -269.5454, -133.4208, -215.9761, -252.5791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8471, device='cuda:0', dtype=torch.float64)
tensor([-215.0996, -267.3936, -134.1243, -216.4046, -253.3180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-215.7373, -265.4868, -134.6842, -216.7429, -253.0902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8546, device='cuda:0', dtype=torch.float64)
tensor([-216.7805, -264.0131, -135.4768, -217.5233, -253.2332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8614, device='cuda:0', dtype=torch.float64)
tensor([-217.6192, -262.5755, -136.1844, -217.9557, -252.9842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-218.5654, -263.1204, -136.9361, -218.4802, -253.3785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8036, device='cuda:0', dtype=torch.float64)
tensor([-219.6071, -264.0546, -137.7322, -219.3150, -255.4821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0485, device='cuda:0', dtype=torch.float64)
tensor([-220.5122, -265.2000, -138.5426, -220.2704, -258.0035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0525, device='cuda:0', dtype=torch.float64)
tensor([-221.6093, -267.4629, -139.4924, -221.8436, -261.7455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8114, device='cuda:0', dtype=torch.float64)
tensor([-222.7048, -269.0817, -140.2283, -223.3521, -263.8559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([-223.5858, -273.0767, -140.9678, -225.3020, -268.1428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9687, device='cuda:0', dtype=torch.float64)
tensor([-224.4006, -277.2540, -141.5781, -226.9655, -272.4486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([-225.5501, -281.9109, -142.3215, -228.7942, -277.4821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9997, device='cuda:0', dtype=torch.float64)
tensor([-227.0090, -286.1354, -143.2062, -231.1423, -282.5948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-228.3588, -289.1044, -143.8105, -232.9146, -286.8864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9430, device='cuda:0', dtype=torch.float64)
tensor([-229.4659, -290.7880, -144.4023, -234.2755, -289.9064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9498, device='cuda:0', dtype=torch.float64)
tensor([-230.1714, -292.2309, -144.7064, -235.1772, -291.7695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9257, device='cuda:0', dtype=torch.float64)
tensor([-230.8387, -293.3120, -144.8890, -235.9965, -293.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8394, device='cuda:0', dtype=torch.float64)
tensor([-230.9670, -295.4239, -144.8290, -236.6853, -294.6328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9928, device='cuda:0', dtype=torch.float64)
tensor([-231.1503, -294.7674, -144.6181, -236.7194, -294.9142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8543, device='cuda:0', dtype=torch.float64)
tensor([-231.3848, -295.3009, -144.4211, -237.0074, -295.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8716, device='cuda:0', dtype=torch.float64)
tensor([-231.2011, -295.3887, -143.7149, -236.5665, -295.5145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9589, device='cuda:0', dtype=torch.float64)
tensor([-231.0975, -296.1555, -143.0631, -236.3121, -296.0821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8255, device='cuda:0', dtype=torch.float64)
tensor([-231.3626, -297.6063, -142.5954, -236.5672, -297.1562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1187, device='cuda:0', dtype=torch.float64)
tensor([-231.5372, -300.5206, -142.1089, -236.8453, -299.0662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0208, device='cuda:0', dtype=torch.float64)
tensor([-231.4154, -302.3897, -141.4954, -237.1707, -299.4933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9355, device='cuda:0', dtype=torch.float64)
tensor([-231.5074, -303.6382, -141.0104, -237.5155, -299.5497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8107, device='cuda:0', dtype=torch.float64)
tensor([-231.6984, -305.0529, -140.6234, -237.8072, -299.5880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6807, device='cuda:0', dtype=torch.float64)
tensor([-231.9143, -307.8565, -140.4137, -238.4545, -300.6181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8677, device='cuda:0', dtype=torch.float64)
tensor([-231.6713, -308.8016, -139.9714, -238.4277, -300.5870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8918, device='cuda:0', dtype=torch.float64)
tensor([-231.4398, -310.5843, -139.5832, -238.2915, -300.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([-231.2427, -312.8819, -139.1946, -238.0354, -301.2408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8169, device='cuda:0', dtype=torch.float64)
tensor([-231.3993, -314.6589, -138.8828, -238.0661, -301.6791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7063, device='cuda:0', dtype=torch.float64)
tensor([-231.2801, -317.1238, -138.6112, -237.9586, -302.3667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8555, device='cuda:0', dtype=torch.float64)
tensor([-231.2691, -317.3153, -138.0838, -237.4781, -301.2374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7119, device='cuda:0', dtype=torch.float64)
tensor([-231.1938, -317.3101, -137.6888, -237.2206, -299.9789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7972, device='cuda:0', dtype=torch.float64)
tensor([-231.1634, -315.6703, -137.3004, -237.0642, -297.7538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7578, device='cuda:0', dtype=torch.float64)
tensor([-231.1142, -313.2863, -136.9757, -236.9688, -295.1732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0726, device='cuda:0', dtype=torch.float64)
tensor([-232.2030, -310.1039, -137.5914, -238.2334, -293.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8991, device='cuda:0', dtype=torch.float64)
tensor([-233.2632, -307.1633, -137.9207, -238.8918, -292.4388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7922, device='cuda:0', dtype=torch.float64)
tensor([-234.5599, -305.6979, -138.3735, -239.8118, -292.5089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0092, device='cuda:0', dtype=torch.float64)
tensor([-235.5382, -302.3175, -138.7555, -240.0229, -291.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8244, device='cuda:0', dtype=torch.float64)
tensor([-236.5519, -299.5938, -139.1771, -240.4257, -291.1926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9390, device='cuda:0', dtype=torch.float64)
tensor([-238.4483, -298.0487, -140.0145, -241.5290, -292.4814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8277, device='cuda:0', dtype=torch.float64)
tensor([-240.6752, -296.9444, -141.0352, -242.9534, -294.1203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7994, device='cuda:0', dtype=torch.float64)
tensor([-242.9401, -297.3167, -142.0480, -244.5656, -296.5487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7877, device='cuda:0', dtype=torch.float64)
tensor([-245.3215, -298.0252, -143.3082, -246.6378, -299.2760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8027, device='cuda:0', dtype=torch.float64)
tensor([-247.6457, -298.4621, -144.6530, -248.8889, -301.6143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8381, device='cuda:0', dtype=torch.float64)
tensor([-248.9187, -297.7349, -145.4461, -249.9597, -301.9344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9939, device='cuda:0', dtype=torch.float64)
tensor([-249.5907, -295.8706, -145.7662, -250.4534, -300.4538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6908, device='cuda:0', dtype=torch.float64)
tensor([-249.7620, -294.0668, -145.7525, -250.4990, -298.8406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7835, device='cuda:0', dtype=torch.float64)
tensor([-249.9129, -293.1807, -145.9811, -250.9788, -297.5895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7941, device='cuda:0', dtype=torch.float64)
tensor([-250.3036, -291.3701, -146.2830, -251.4736, -296.1818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6976, device='cuda:0', dtype=torch.float64)
tensor([-251.1202, -289.9605, -146.6681, -252.1969, -295.5234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([-251.7578, -288.1895, -146.8751, -252.6474, -294.1833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7574, device='cuda:0', dtype=torch.float64)
tensor([-252.4208, -285.4387, -146.9794, -252.8930, -291.8559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7388, device='cuda:0', dtype=torch.float64)
tensor([-252.6275, -282.5054, -146.6836, -252.5636, -289.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7961, device='cuda:0', dtype=torch.float64)
tensor([-252.9829, -281.7394, -146.7269, -253.0030, -288.1439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7763, device='cuda:0', dtype=torch.float64)
tensor([-254.0533, -281.5837, -147.2816, -254.4281, -288.5091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7791, device='cuda:0', dtype=torch.float64)
tensor([-254.9712, -281.3887, -147.7768, -255.8711, -288.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8811, device='cuda:0', dtype=torch.float64)
tensor([-255.8830, -282.9113, -148.5154, -257.9843, -290.2898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9199, device='cuda:0', dtype=torch.float64)
tensor([-256.6206, -283.6026, -149.2506, -259.9049, -290.7195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-257.1230, -284.6311, -149.7649, -261.2912, -291.1348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-258.1433, -286.2794, -150.5574, -262.9601, -292.6483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8294, device='cuda:0', dtype=torch.float64)
tensor([-259.0242, -290.4430, -151.4055, -265.0799, -295.5998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7845, device='cuda:0', dtype=torch.float64)
tensor([-260.7216, -295.5340, -152.8433, -268.1481, -299.0373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8235, device='cuda:0', dtype=torch.float64)
tensor([-262.1886, -303.0721, -154.5340, -271.4134, -302.9552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6542, device='cuda:0', dtype=torch.float64)
tensor([-263.2701, -310.7224, -156.6595, -274.3710, -305.8213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6257, device='cuda:0', dtype=torch.float64)
tensor([-264.2191, -316.7012, -159.0107, -277.0098, -307.6674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9491, device='cuda:0', dtype=torch.float64)
tensor([-264.8898, -317.4354, -159.9838, -277.8719, -307.6468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6844, device='cuda:0', dtype=torch.float64)
tensor([-265.4647, -321.7142, -162.0851, -279.3296, -308.7440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7691, device='cuda:0', dtype=torch.float64)
tensor([-265.6140, -320.8933, -162.3589, -279.3993, -307.7686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7744, device='cuda:0', dtype=torch.float64)
tensor([-265.4566, -318.0470, -162.3651, -279.5532, -305.7665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7852, device='cuda:0', dtype=torch.float64)
tensor([-264.8458, -312.8610, -161.0097, -278.4803, -302.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6846, device='cuda:0', dtype=torch.float64)
tensor([-264.4081, -309.8430, -160.5592, -278.2485, -300.6628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6784, device='cuda:0', dtype=torch.float64)
tensor([-263.4843, -309.3606, -160.4585, -277.9657, -299.0905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6315, device='cuda:0', dtype=torch.float64)
tensor([-262.5121, -307.0861, -160.0140, -277.2957, -296.5767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6457, device='cuda:0', dtype=torch.float64)
tensor([-261.6909, -307.1011, -160.0875, -277.0037, -295.1049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6580, device='cuda:0', dtype=torch.float64)
tensor([-261.4003, -309.5683, -161.1922, -277.5969, -294.6009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6218, device='cuda:0', dtype=torch.float64)
tensor([-261.6957, -312.4549, -163.0495, -278.9344, -294.7353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6340, device='cuda:0', dtype=torch.float64)
tensor([-262.3550, -318.8511, -165.8766, -281.4521, -296.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7168, device='cuda:0', dtype=torch.float64)
tensor([-262.4939, -320.8114, -167.0805, -282.9105, -296.0217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8785, device='cuda:0', dtype=torch.float64)
tensor([-263.9211, -330.5649, -171.2284, -287.2392, -299.0848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6771, device='cuda:0', dtype=torch.float64)
tensor([-265.3543, -337.2689, -174.3474, -290.4354, -300.5938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6993, device='cuda:0', dtype=torch.float64)
tensor([-266.0112, -345.5100, -176.4695, -292.4628, -302.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6838, device='cuda:0', dtype=torch.float64)
tensor([-267.4852, -359.8835, -179.9265, -295.9514, -305.7410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6671, device='cuda:0', dtype=torch.float64)
tensor([-268.9037, -371.2982, -182.5904, -298.7527, -309.4012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5515, device='cuda:0', dtype=torch.float64)
tensor([-270.2653, -374.6390, -183.6254, -300.1493, -310.7296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5891, device='cuda:0', dtype=torch.float64)
tensor([-271.2859, -375.8300, -183.9849, -300.8856, -311.1374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5434, device='cuda:0', dtype=torch.float64)
tensor([-272.0111, -376.0444, -184.0017, -301.4061, -310.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5099, device='cuda:0', dtype=torch.float64)
tensor([-273.1467, -377.7089, -184.6894, -302.6537, -311.4696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5487, device='cuda:0', dtype=torch.float64)
tensor([-273.3965, -378.6822, -184.6528, -302.7677, -311.1202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5532, device='cuda:0', dtype=torch.float64)
tensor([-273.8746, -380.9739, -185.4326, -303.5917, -311.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7527, device='cuda:0', dtype=torch.float64)
tensor([-273.9741, -378.9957, -184.5220, -303.3489, -309.7091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6053, device='cuda:0', dtype=torch.float64)
tensor([-274.4698, -377.4410, -184.0691, -303.5933, -308.5437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6849, device='cuda:0', dtype=torch.float64)
tensor([-275.0680, -371.9904, -182.8952, -303.5988, -305.9126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5867, device='cuda:0', dtype=torch.float64)
tensor([-275.6910, -365.6057, -181.7254, -303.5398, -302.7810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6215, device='cuda:0', dtype=torch.float64)
tensor([-276.6410, -358.5428, -180.6606, -303.5045, -299.6421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7039, device='cuda:0', dtype=torch.float64)
tensor([-278.2147, -357.0425, -181.3827, -305.0755, -299.0410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5314, device='cuda:0', dtype=torch.float64)
tensor([-279.4947, -357.6314, -182.2684, -306.2403, -299.1211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6234, device='cuda:0', dtype=torch.float64)
tensor([-281.6751, -362.1778, -185.4079, -308.7652, -301.8003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5460, device='cuda:0', dtype=torch.float64)
tensor([-284.0707, -365.2293, -188.8793, -311.0888, -304.2283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6428, device='cuda:0', dtype=torch.float64)
tensor([-285.3290, -365.1860, -190.1708, -311.4741, -304.4676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5470, device='cuda:0', dtype=torch.float64)
tensor([-285.4887, -364.9043, -190.7433, -311.1354, -303.9918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6384, device='cuda:0', dtype=torch.float64)
tensor([-285.6384, -365.4726, -191.7663, -311.0300, -303.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5528, device='cuda:0', dtype=torch.float64)
tensor([-287.1077, -366.8112, -194.0452, -312.0468, -304.8293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6034, device='cuda:0', dtype=torch.float64)
tensor([-288.9407, -367.1955, -195.8838, -312.8126, -305.4351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6258, device='cuda:0', dtype=torch.float64)
tensor([-291.3642, -367.6369, -198.1449, -313.9967, -306.5840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5820, device='cuda:0', dtype=torch.float64)
tensor([-292.6652, -366.9869, -198.6671, -313.6185, -306.5044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6222, device='cuda:0', dtype=torch.float64)
tensor([-292.1616, -365.0177, -197.2994, -311.2828, -304.6598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6856, device='cuda:0', dtype=torch.float64)
tensor([-293.5857, -365.5469, -198.2473, -310.9607, -304.9333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6073, device='cuda:0', dtype=torch.float64)
tensor([-293.6648, -365.3339, -197.9488, -309.5205, -303.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5125, device='cuda:0', dtype=torch.float64)
tensor([-293.3962, -365.0844, -197.3313, -307.8701, -302.4537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4507, device='cuda:0', dtype=torch.float64)
tensor([-293.6686, -365.0771, -197.1975, -306.8054, -301.4243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5408, device='cuda:0', dtype=torch.float64)
tensor([-293.6211, -366.0355, -197.1388, -305.7179, -300.4652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6526, device='cuda:0', dtype=torch.float64)
tensor([-295.4814, -366.5427, -198.4373, -306.6294, -300.3953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5396, device='cuda:0', dtype=torch.float64)
tensor([-298.2447, -366.2060, -200.0105, -308.7216, -300.4988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7463, device='cuda:0', dtype=torch.float64)
tensor([-302.7113, -365.1086, -202.2724, -312.6886, -300.8847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5054, device='cuda:0', dtype=torch.float64)
tensor([-306.2309, -363.1320, -203.3389, -315.5787, -300.4850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5159, device='cuda:0', dtype=torch.float64)
tensor([-312.7884, -361.6731, -205.9585, -321.3429, -301.4035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5447, device='cuda:0', dtype=torch.float64)
tensor([-320.2786, -360.0189, -208.4159, -327.0292, -302.1930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5447, device='cuda:0', dtype=torch.float64)
tensor([-331.6357, -358.3544, -211.9132, -334.7940, -303.7505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5203, device='cuda:0', dtype=torch.float64)
tensor([-343.0778, -356.1599, -214.5225, -340.2159, -304.3164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6118, device='cuda:0', dtype=torch.float64)
tensor([-356.9309, -353.4329, -217.1118, -345.6682, -304.9173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5402, device='cuda:0', dtype=torch.float64)
tensor([-371.8229, -351.1416, -219.2271, -350.2696, -305.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5483, device='cuda:0', dtype=torch.float64)
tensor([-390.4503, -348.9164, -221.5253, -354.9746, -306.0399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6122, device='cuda:0', dtype=torch.float64)
tensor([-415.2647, -346.6487, -224.0226, -359.6608, -306.5447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4384, device='cuda:0', dtype=torch.float64)
tensor([-447.2119, -344.4252, -226.7245, -365.1434, -307.4694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5758, device='cuda:0', dtype=torch.float64)
tensor([-482.1710, -341.6231, -229.3376, -370.4322, -308.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4675, device='cuda:0', dtype=torch.float64)
tensor([-521.8823, -338.5265, -231.8436, -375.9671, -310.5071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5306, device='cuda:0', dtype=torch.float64)
tensor([-556.2295, -335.3186, -233.8689, -381.1680, -312.5093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4875, device='cuda:0', dtype=torch.float64)
tensor([-583.1011, -332.4171, -235.3956, -385.4450, -313.8787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5202, device='cuda:0', dtype=torch.float64)
tensor([-604.8680, -329.4837, -236.8487, -389.4304, -315.1133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5664, device='cuda:0', dtype=torch.float64)
tensor([-623.4557, -326.7559, -238.0695, -392.7360, -316.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5569, device='cuda:0', dtype=torch.float64)
tensor([-639.6467, -324.4329, -239.2073, -395.6799, -317.1792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4954, device='cuda:0', dtype=torch.float64)
tensor([-651.0103, -322.6716, -240.1938, -398.2314, -318.0822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3658, device='cuda:0', dtype=torch.float64)
tensor([-657.9629, -320.8656, -240.9578, -400.2172, -318.8167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4051, device='cuda:0', dtype=torch.float64)
tensor([-663.7053, -319.2314, -241.8595, -402.1304, -319.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4279, device='cuda:0', dtype=torch.float64)
tensor([-666.1930, -317.9246, -242.1383, -402.8904, -319.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4587, device='cuda:0', dtype=torch.float64)
tensor([-668.2630, -316.7197, -242.3822, -403.5313, -319.4392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4417, device='cuda:0', dtype=torch.float64)
tensor([-673.0824, -315.1951, -243.2289, -404.9031, -320.2605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4574, device='cuda:0', dtype=torch.float64)
tensor([-677.5239, -313.7693, -243.8428, -405.7324, -320.7091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4124, device='cuda:0', dtype=torch.float64)
tensor([-682.2345, -311.9192, -244.2822, -406.6949, -321.1823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4495, device='cuda:0', dtype=torch.float64)
tensor([-685.9864, -310.2877, -244.5257, -407.4647, -321.3589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3816, device='cuda:0', dtype=torch.float64)
tensor([-688.0826, -308.6344, -244.6466, -407.9628, -321.0242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4242, device='cuda:0', dtype=torch.float64)
tensor([-690.9173, -306.7145, -245.3419, -409.5363, -321.8456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4477, device='cuda:0', dtype=torch.float64)
tensor([-695.1110, -304.9117, -246.6332, -412.1886, -324.2108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3952, device='cuda:0', dtype=torch.float64)
tensor([-698.3585, -302.9221, -247.7303, -414.8485, -326.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3355, device='cuda:0', dtype=torch.float64)
tensor([-699.5835, -301.3515, -248.3448, -416.4909, -327.8585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3796, device='cuda:0', dtype=torch.float64)
tensor([-698.0991, -299.5397, -248.0642, -416.4650, -326.8631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3628, device='cuda:0', dtype=torch.float64)
tensor([-695.9532, -297.8720, -247.4877, -415.9826, -325.1903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4207, device='cuda:0', dtype=torch.float64)
tensor([-693.3008, -296.3698, -246.8389, -415.0860, -322.9100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3142, device='cuda:0', dtype=torch.float64)
tensor([-690.5734, -295.2190, -246.1885, -413.8699, -320.5648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3583, device='cuda:0', dtype=torch.float64)
tensor([-687.2644, -293.7367, -245.2442, -412.0440, -317.6519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3381, device='cuda:0', dtype=torch.float64)
tensor([-683.7573, -292.4665, -244.2737, -410.0259, -314.7223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3899, device='cuda:0', dtype=torch.float64)
tensor([-679.9237, -291.1119, -243.1034, -407.5546, -311.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3973, device='cuda:0', dtype=torch.float64)
tensor([-676.3966, -289.9904, -242.1479, -405.3258, -308.5601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3644, device='cuda:0', dtype=torch.float64)
tensor([-672.1729, -289.0109, -241.2366, -402.7401, -305.2906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3673, device='cuda:0', dtype=torch.float64)
tensor([-666.6676, -288.2567, -239.9798, -399.4910, -301.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3261, device='cuda:0', dtype=torch.float64)
tensor([-661.6331, -287.3842, -238.8247, -396.6947, -297.8898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3849, device='cuda:0', dtype=torch.float64)
tensor([-656.8367, -286.4518, -237.8294, -394.1542, -294.8328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3201, device='cuda:0', dtype=torch.float64)
tensor([-652.3712, -285.2548, -236.9872, -392.0439, -292.2652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3651, device='cuda:0', dtype=torch.float64)
tensor([-649.2441, -284.0186, -236.6944, -390.8832, -290.6171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3617, device='cuda:0', dtype=torch.float64)
tensor([-646.6556, -282.7898, -236.4884, -389.9963, -289.3431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3609, device='cuda:0', dtype=torch.float64)
tensor([-645.5370, -281.3602, -236.7538, -389.8876, -289.1274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3756, device='cuda:0', dtype=torch.float64)
tensor([-643.8545, -280.0269, -236.9979, -389.4418, -288.6653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3480, device='cuda:0', dtype=torch.float64)
tensor([-644.2342, -278.3564, -237.9229, -390.1210, -289.6574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4085, device='cuda:0', dtype=torch.float64)
tensor([-645.8170, -276.7475, -239.2237, -391.4482, -291.5198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3498, device='cuda:0', dtype=torch.float64)
tensor([-647.0880, -275.0875, -240.3191, -392.9277, -293.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3750, device='cuda:0', dtype=torch.float64)
tensor([-648.1810, -273.3259, -241.6012, -394.8337, -295.1186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3081, device='cuda:0', dtype=torch.float64)
tensor([-647.9344, -271.9935, -242.5176, -395.8856, -296.2038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3692, device='cuda:0', dtype=torch.float64)
tensor([-647.0463, -270.8399, -243.0991, -396.2699, -296.4342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3675, device='cuda:0', dtype=torch.float64)
tensor([-644.8138, -269.8950, -243.0273, -395.3286, -295.3250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3254, device='cuda:0', dtype=torch.float64)
tensor([-643.4357, -269.0896, -243.2028, -395.0069, -295.1401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3218, device='cuda:0', dtype=torch.float64)
tensor([-642.1752, -268.1762, -243.4209, -394.8720, -295.0164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3259, device='cuda:0', dtype=torch.float64)
tensor([-642.3371, -267.3260, -244.1986, -396.1590, -296.3919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3815, device='cuda:0', dtype=torch.float64)
tensor([-642.6159, -266.4818, -244.9084, -397.4615, -297.8705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3741, device='cuda:0', dtype=torch.float64)
tensor([-643.1719, -265.8103, -245.7380, -399.1855, -299.7684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3571, device='cuda:0', dtype=torch.float64)
tensor([-643.5139, -264.5884, -246.3566, -400.7775, -301.3215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3755, device='cuda:0', dtype=torch.float64)
tensor([-643.3978, -263.4421, -246.7561, -402.0505, -302.4708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2850, device='cuda:0', dtype=torch.float64)
tensor([-643.5131, -262.0244, -247.2476, -403.7139, -304.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3528, device='cuda:0', dtype=torch.float64)
tensor([-643.1175, -260.7148, -247.6560, -404.8586, -305.2493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2742, device='cuda:0', dtype=torch.float64)
tensor([-641.6215, -259.2928, -247.6761, -404.7552, -304.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3330, device='cuda:0', dtype=torch.float64)
tensor([-640.1685, -257.7062, -247.7154, -404.8209, -304.3589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3507, device='cuda:0', dtype=torch.float64)
tensor([-639.4998, -256.3122, -247.9274, -405.6029, -305.0244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3467, device='cuda:0', dtype=torch.float64)
tensor([-638.0601, -255.0564, -247.8780, -405.5257, -304.5824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3499, device='cuda:0', dtype=torch.float64)
tensor([-637.0069, -253.9737, -248.0534, -405.7872, -304.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2578, device='cuda:0', dtype=torch.float64)
tensor([-635.9540, -252.9276, -248.2096, -406.1034, -305.2674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3412, device='cuda:0', dtype=torch.float64)
tensor([-634.4477, -251.8977, -248.3387, -406.2451, -305.0053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2788, device='cuda:0', dtype=torch.float64)
tensor([-632.5821, -250.9774, -248.3318, -405.7243, -304.2386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3223, device='cuda:0', dtype=torch.float64)
tensor([-630.6774, -249.7783, -248.3051, -405.4277, -303.4441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2766, device='cuda:0', dtype=torch.float64)
tensor([-628.2523, -248.3888, -248.0107, -404.4196, -301.9323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3532, device='cuda:0', dtype=torch.float64)
tensor([-626.0837, -247.1193, -247.8978, -403.6939, -301.0621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2792, device='cuda:0', dtype=torch.float64)
tensor([-624.0815, -245.7850, -247.8066, -403.3327, -300.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2537, device='cuda:0', dtype=torch.float64)
tensor([-621.2748, -244.3960, -247.4714, -401.8974, -298.3413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2491, device='cuda:0', dtype=torch.float64)
tensor([-618.7733, -242.9793, -247.1984, -400.7695, -296.7804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3933, device='cuda:0', dtype=torch.float64)
tensor([-616.8733, -242.0532, -247.1681, -400.1840, -296.1792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2750, device='cuda:0', dtype=torch.float64)
tensor([-614.7299, -240.9972, -246.9542, -399.1689, -295.1037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3190, device='cuda:0', dtype=torch.float64)
tensor([-612.4001, -239.9817, -246.9168, -398.2703, -294.3760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2502, device='cuda:0', dtype=torch.float64)
tensor([-609.9003, -239.0876, -246.9242, -397.0242, -293.2964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2482, device='cuda:0', dtype=torch.float64)
tensor([-607.3613, -238.3527, -246.8620, -395.6502, -292.1745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2585, device='cuda:0', dtype=torch.float64)
tensor([-604.8221, -237.3310, -246.6063, -394.3475, -290.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2027, device='cuda:0', dtype=torch.float64)
tensor([-602.1769, -236.0900, -246.2149, -392.6885, -288.9411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2351, device='cuda:0', dtype=torch.float64)
tensor([-600.1115, -234.7333, -245.9891, -391.9757, -288.0701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3056, device='cuda:0', dtype=torch.float64)
tensor([-598.3333, -233.6214, -245.9959, -391.4959, -287.7981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2630, device='cuda:0', dtype=torch.float64)
tensor([-596.7976, -232.3713, -246.0728, -391.4678, -287.8432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2461, device='cuda:0', dtype=torch.float64)
tensor([-594.8374, -230.9250, -245.9762, -391.0506, -287.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2359, device='cuda:0', dtype=torch.float64)
tensor([-593.1463, -229.4957, -245.9689, -390.7702, -286.9818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2353, device='cuda:0', dtype=torch.float64)
tensor([-591.4654, -228.1287, -245.9683, -390.4671, -286.8817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2708, device='cuda:0', dtype=torch.float64)
tensor([-589.5795, -226.9641, -245.8330, -389.5336, -286.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1801, device='cuda:0', dtype=torch.float64)
tensor([-587.6030, -225.6533, -245.5702, -388.5229, -285.0717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2594, device='cuda:0', dtype=torch.float64)
tensor([-586.0839, -224.2778, -245.5121, -388.5029, -284.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2192, device='cuda:0', dtype=torch.float64)
tensor([-584.6437, -223.1842, -245.5311, -388.4044, -284.6010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2658, device='cuda:0', dtype=torch.float64)
tensor([-583.2229, -222.1302, -245.5850, -388.4270, -284.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([-582.2440, -221.2410, -245.8839, -389.2904, -284.5594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([-581.3493, -220.4176, -246.2729, -390.1863, -285.1452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2841, device='cuda:0', dtype=torch.float64)
tensor([-580.1719, -219.7761, -246.6086, -390.7559, -285.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2749, device='cuda:0', dtype=torch.float64)
tensor([-578.5024, -218.9114, -246.6294, -390.4376, -284.6828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2749, device='cuda:0', dtype=torch.float64)
tensor([-577.0041, -218.4948, -246.7206, -390.3201, -284.3554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1797, device='cuda:0', dtype=torch.float64)
tensor([-575.4806, -218.0828, -246.8337, -390.3297, -284.0622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2663, device='cuda:0', dtype=torch.float64)
tensor([-573.5569, -217.5604, -246.6772, -389.8640, -283.0517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2556, device='cuda:0', dtype=torch.float64)
tensor([-572.2324, -217.3191, -246.8029, -390.3927, -282.9297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2286, device='cuda:0', dtype=torch.float64)
tensor([-571.1506, -217.1988, -246.9797, -391.1967, -283.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2704, device='cuda:0', dtype=torch.float64)
tensor([-570.6197, -217.3664, -247.3331, -392.5505, -284.4286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1772, device='cuda:0', dtype=torch.float64)
tensor([-570.2222, -217.5678, -247.7300, -393.9018, -286.1253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2502, device='cuda:0', dtype=torch.float64)
tensor([-569.7849, -217.9907, -248.1259, -394.9903, -287.8822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1980, device='cuda:0', dtype=torch.float64)
tensor([-569.3151, -218.6017, -248.4403, -395.8847, -289.6883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2919, device='cuda:0', dtype=torch.float64)
tensor([-568.4788, -218.7828, -248.6663, -396.4352, -290.8950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1409, device='cuda:0', dtype=torch.float64)
tensor([-567.6434, -219.0207, -248.8700, -396.9389, -292.0658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1826, device='cuda:0', dtype=torch.float64)
tensor([-566.2111, -219.2389, -248.7760, -396.5890, -292.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1774, device='cuda:0', dtype=torch.float64)
tensor([-564.7377, -219.2099, -248.6551, -396.1694, -292.1776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2287, device='cuda:0', dtype=torch.float64)
tensor([-562.7981, -219.0860, -248.2763, -395.0642, -291.3465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2569, device='cuda:0', dtype=torch.float64)
tensor([-560.7325, -218.6093, -247.7345, -393.6218, -290.1586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2020, device='cuda:0', dtype=torch.float64)
tensor([-558.4483, -217.8770, -246.9852, -391.7991, -288.5909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1840, device='cuda:0', dtype=torch.float64)
tensor([-556.1581, -216.8683, -246.2357, -390.1103, -286.8508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2057, device='cuda:0', dtype=torch.float64)
tensor([-554.0902, -215.7471, -245.6364, -388.8049, -285.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1893, device='cuda:0', dtype=torch.float64)
tensor([-552.2408, -214.7891, -245.0495, -387.7021, -284.6630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1896, device='cuda:0', dtype=torch.float64)
tensor([-550.0792, -213.8169, -244.3439, -386.3168, -283.0587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3631, device='cuda:0', dtype=torch.float64)
tensor([-547.5964, -212.4887, -243.4141, -384.3912, -280.7012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1893, device='cuda:0', dtype=torch.float64)
tensor([-545.0603, -211.1097, -242.5190, -382.6020, -278.0948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2319, device='cuda:0', dtype=torch.float64)
tensor([-542.4702, -209.7995, -241.5747, -380.4949, -275.0487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1741, device='cuda:0', dtype=torch.float64)
tensor([-539.8778, -208.4448, -240.6944, -378.2771, -271.8789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3164, device='cuda:0', dtype=torch.float64)
tensor([-537.7358, -207.2131, -240.0731, -376.7869, -269.4189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2151, device='cuda:0', dtype=torch.float64)
tensor([-535.8900, -206.1229, -239.6209, -375.8058, -267.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2035, device='cuda:0', dtype=torch.float64)
tensor([-534.4082, -205.1296, -239.3973, -375.4838, -266.9485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2129, device='cuda:0', dtype=torch.float64)
tensor([-533.0047, -204.1661, -239.1732, -375.3047, -266.2034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1946, device='cuda:0', dtype=torch.float64)
tensor([-531.7254, -203.4786, -239.0212, -375.1657, -265.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2675, device='cuda:0', dtype=torch.float64)
tensor([-530.8163, -202.8927, -239.0560, -375.6230, -266.2459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2498, device='cuda:0', dtype=torch.float64)
tensor([-530.2691, -202.3948, -239.3769, -376.7117, -267.8606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1855, device='cuda:0', dtype=torch.float64)
tensor([-529.5799, -201.7611, -239.6641, -377.5936, -269.0697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2357, device='cuda:0', dtype=torch.float64)
tensor([-528.7492, -201.3481, -240.1065, -378.8995, -270.1737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1824, device='cuda:0', dtype=torch.float64)
tensor([-528.0505, -201.1527, -240.6626, -380.4866, -271.5530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1823, device='cuda:0', dtype=torch.float64)
tensor([-527.3576, -201.1790, -241.1689, -381.9649, -272.7746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1884, device='cuda:0', dtype=torch.float64)
tensor([-526.1884, -201.2457, -241.3859, -382.4630, -273.1671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1604, device='cuda:0', dtype=torch.float64)
tensor([-525.1916, -201.4856, -241.6615, -383.0236, -273.7956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1950, device='cuda:0', dtype=torch.float64)
tensor([-523.9875, -201.7336, -241.7148, -382.6677, -274.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2527, device='cuda:0', dtype=torch.float64)
tensor([-522.7003, -201.9497, -241.5896, -382.1839, -274.4235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1571, device='cuda:0', dtype=torch.float64)
tensor([-521.4656, -202.1428, -241.4205, -381.4630, -274.6859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2781, device='cuda:0', dtype=torch.float64)
tensor([-519.6053, -202.0548, -240.9289, -379.8826, -273.3926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1962, device='cuda:0', dtype=torch.float64)
tensor([-517.8774, -202.1141, -240.5557, -378.4898, -272.3145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2131, device='cuda:0', dtype=torch.float64)
tensor([-516.2539, -202.1359, -240.1758, -377.1486, -271.3509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1364, device='cuda:0', dtype=torch.float64)
tensor([-514.8089, -202.2367, -239.9325, -376.0988, -270.5645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1795, device='cuda:0', dtype=torch.float64)
tensor([-513.0221, -202.3819, -239.5487, -374.4949, -269.2008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1548, device='cuda:0', dtype=torch.float64)
tensor([-511.3825, -202.5820, -239.2458, -373.1745, -268.0586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1982, device='cuda:0', dtype=torch.float64)
tensor([-510.0128, -202.7211, -239.1327, -372.3487, -267.4372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1854, device='cuda:0', dtype=torch.float64)
tensor([-508.9713, -202.8811, -239.1658, -371.8790, -267.4351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1997, device='cuda:0', dtype=torch.float64)
tensor([-508.1065, -203.2049, -239.3837, -371.8363, -267.9164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1186, device='cuda:0', dtype=torch.float64)
tensor([-507.3423, -203.4830, -239.6054, -371.9060, -268.4283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1698, device='cuda:0', dtype=torch.float64)
tensor([-506.3497, -203.6676, -239.6684, -371.6173, -268.2475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2303, device='cuda:0', dtype=torch.float64)
tensor([-505.4868, -203.8321, -239.7562, -371.3238, -268.3614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1653, device='cuda:0', dtype=torch.float64)
tensor([-504.7217, -203.9782, -239.8879, -371.1803, -268.6195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1772, device='cuda:0', dtype=torch.float64)
tensor([-503.7909, -203.8696, -240.0559, -371.0258, -268.6566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([-502.6289, -203.6930, -240.1095, -370.6022, -268.0309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1489, device='cuda:0', dtype=torch.float64)
tensor([-501.2705, -203.6188, -240.0479, -369.8658, -267.0985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1810, device='cuda:0', dtype=torch.float64)
tensor([-499.5403, -203.4732, -239.7173, -368.4025, -265.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1920, device='cuda:0', dtype=torch.float64)
tensor([-498.0360, -203.6099, -239.4830, -367.0842, -263.6226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1535, device='cuda:0', dtype=torch.float64)
tensor([-496.5930, -203.5621, -239.1923, -365.6862, -262.2082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1728, device='cuda:0', dtype=torch.float64)
tensor([-495.4479, -203.6008, -239.0333, -364.7789, -261.5448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1888, device='cuda:0', dtype=torch.float64)
tensor([-494.4148, -203.6310, -238.8976, -364.0433, -260.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1829, device='cuda:0', dtype=torch.float64)
tensor([-493.7019, -203.6247, -238.9403, -363.8960, -261.2024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2507, device='cuda:0', dtype=torch.float64)
tensor([-493.1840, -203.6850, -239.1519, -364.2862, -261.9333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1599, device='cuda:0', dtype=torch.float64)
tensor([-492.8158, -203.7937, -239.4802, -365.1230, -263.1000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1652, device='cuda:0', dtype=torch.float64)
tensor([-492.7555, -204.0212, -239.9778, -366.2750, -264.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2131, device='cuda:0', dtype=torch.float64)
tensor([-492.4661, -204.3458, -240.3775, -367.0357, -266.1681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1828, device='cuda:0', dtype=torch.float64)
tensor([-492.0721, -204.5962, -240.7812, -367.7456, -267.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1459, device='cuda:0', dtype=torch.float64)
tensor([-491.8674, -204.8113, -241.2404, -368.6803, -268.9112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1570, device='cuda:0', dtype=torch.float64)
tensor([-491.6138, -205.0148, -241.5908, -369.3423, -270.1955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1651, device='cuda:0', dtype=torch.float64)
tensor([-491.3640, -205.1336, -241.8489, -369.7921, -271.3212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2262, device='cuda:0', dtype=torch.float64)
tensor([-491.0542, -205.2137, -242.1177, -370.1042, -272.3071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1342, device='cuda:0', dtype=torch.float64)
tensor([-490.7116, -205.1713, -242.2930, -370.2523, -273.2233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1701, device='cuda:0', dtype=torch.float64)
tensor([-490.2620, -205.2021, -242.4751, -370.1804, -274.0066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1618, device='cuda:0', dtype=torch.float64)
tensor([-489.6732, -205.4146, -242.6290, -369.8836, -274.6273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1983, device='cuda:0', dtype=torch.float64)
tensor([-488.8960, -205.5119, -242.6680, -369.4026, -274.8324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1568, device='cuda:0', dtype=torch.float64)
tensor([-487.8523, -205.4783, -242.6548, -368.8522, -274.6622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1625, device='cuda:0', dtype=torch.float64)
tensor([-486.3898, -205.2679, -242.4192, -367.8976, -273.3876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1376, device='cuda:0', dtype=torch.float64)
tensor([-485.0204, -204.8821, -242.1980, -366.7454, -272.1539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1631, device='cuda:0', dtype=torch.float64)
tensor([-483.7986, -204.8313, -242.1553, -366.0294, -271.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1701, device='cuda:0', dtype=torch.float64)
tensor([-482.7516, -204.7513, -242.2375, -365.9061, -270.9882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2176, device='cuda:0', dtype=torch.float64)
tensor([-481.5223, -204.3835, -242.1715, -365.3227, -269.7372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1592, device='cuda:0', dtype=torch.float64)
tensor([-480.3971, -204.0017, -242.1342, -364.7538, -268.5144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1850, device='cuda:0', dtype=torch.float64)
tensor([-479.0913, -203.4945, -241.9143, -363.8715, -266.7179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1446, device='cuda:0', dtype=torch.float64)
tensor([-477.7782, -203.1055, -241.6894, -363.0194, -265.1592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1453, device='cuda:0', dtype=torch.float64)
tensor([-476.3966, -202.6822, -241.3402, -362.1293, -263.2003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1743, device='cuda:0', dtype=torch.float64)
tensor([-475.2771, -202.3620, -241.0987, -361.4048, -261.7414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1686, device='cuda:0', dtype=torch.float64)
tensor([-473.9102, -201.8837, -240.6939, -360.3005, -259.6704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2048, device='cuda:0', dtype=torch.float64)
tensor([-472.7859, -201.7534, -240.5568, -359.4617, -258.4524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1111, device='cuda:0', dtype=torch.float64)
tensor([-471.5849, -201.6357, -240.4793, -358.7377, -257.2112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1479, device='cuda:0', dtype=torch.float64)
tensor([-470.4549, -201.3322, -240.3763, -357.9544, -256.0412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1351, device='cuda:0', dtype=torch.float64)
tensor([-469.5560, -201.2701, -240.5391, -357.6181, -255.6446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1712, device='cuda:0', dtype=torch.float64)
tensor([-468.7706, -201.3138, -240.8432, -357.6087, -255.7483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1087, device='cuda:0', dtype=torch.float64)
tensor([-468.0082, -201.5507, -241.2394, -357.7911, -256.0208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1400, device='cuda:0', dtype=torch.float64)
tensor([-467.2329, -201.6887, -241.6078, -358.0793, -256.3209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1584, device='cuda:0', dtype=torch.float64)
tensor([-466.5360, -201.7633, -242.0848, -358.5191, -257.0676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-465.8300, -201.6808, -242.4679, -358.7330, -257.5650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1379, device='cuda:0', dtype=torch.float64)
tensor([-465.1401, -201.4724, -242.8058, -358.9630, -257.9753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1056, device='cuda:0', dtype=torch.float64)
tensor([-464.5059, -201.2640, -243.1853, -359.3568, -258.6584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1330, device='cuda:0', dtype=torch.float64)
tensor([-463.7148, -201.0963, -243.3410, -359.2490, -258.8364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1320, device='cuda:0', dtype=torch.float64)
tensor([-463.0803, -200.8860, -243.6100, -359.5127, -259.1920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1559, device='cuda:0', dtype=torch.float64)
tensor([-462.4066, -200.5148, -243.7220, -359.5093, -259.3352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1361, device='cuda:0', dtype=torch.float64)
tensor([-461.5584, -200.0478, -243.7148, -359.2073, -259.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1310, device='cuda:0', dtype=torch.float64)
tensor([-460.8784, -199.6509, -243.8389, -359.1894, -259.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2244, device='cuda:0', dtype=torch.float64)
tensor([-460.3147, -199.2543, -244.0010, -359.4260, -259.7957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1390, device='cuda:0', dtype=torch.float64)
tensor([-459.6537, -198.8569, -244.1095, -359.6006, -259.9236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1698, device='cuda:0', dtype=torch.float64)
tensor([-458.8384, -198.3351, -244.0373, -359.4896, -259.5755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1284, device='cuda:0', dtype=torch.float64)
tensor([-458.1529, -197.9234, -244.0033, -359.3898, -259.5591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1530, device='cuda:0', dtype=torch.float64)
tensor([-457.3202, -197.5016, -243.8166, -359.0353, -259.2340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1540, device='cuda:0', dtype=torch.float64)
tensor([-456.3013, -197.1368, -243.4820, -358.3989, -258.5992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-455.3003, -196.7367, -243.1991, -357.9237, -257.9556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1936, device='cuda:0', dtype=torch.float64)
tensor([-453.8166, -196.2556, -242.6108, -356.7214, -256.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1147, device='cuda:0', dtype=torch.float64)
tensor([-452.1362, -195.6479, -241.8838, -355.1103, -254.1016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1217, device='cuda:0', dtype=torch.float64)
tensor([-450.7237, -195.1614, -241.2666, -353.6997, -252.4027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1647, device='cuda:0', dtype=torch.float64)
tensor([-449.5490, -194.7848, -240.7860, -352.5096, -251.2416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1437, device='cuda:0', dtype=torch.float64)
tensor([-448.6618, -194.6754, -240.6698, -351.9047, -250.7179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([-447.7652, -194.6982, -240.5707, -351.3384, -250.2811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1269, device='cuda:0', dtype=torch.float64)
tensor([-447.1962, -194.8475, -240.6450, -351.2349, -250.5179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1325, device='cuda:0', dtype=torch.float64)
tensor([-446.5124, -195.0829, -240.7243, -350.9811, -250.6263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1454, device='cuda:0', dtype=torch.float64)
tensor([-445.8424, -195.4213, -240.8228, -350.6899, -250.8224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1072, device='cuda:0', dtype=torch.float64)
tensor([-445.1929, -195.8676, -240.8456, -350.1325, -250.9907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1289, device='cuda:0', dtype=torch.float64)
tensor([-444.6144, -196.3222, -240.9904, -349.8496, -251.4701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1464, device='cuda:0', dtype=torch.float64)
tensor([-443.9118, -196.6108, -240.9323, -349.1094, -251.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1506, device='cuda:0', dtype=torch.float64)
tensor([-443.4631, -197.0242, -241.1004, -348.8085, -252.1035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1112, device='cuda:0', dtype=torch.float64)
tensor([-443.0490, -197.3012, -241.2921, -348.5272, -252.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1028, device='cuda:0', dtype=torch.float64)
tensor([-442.7736, -197.6967, -241.5298, -348.3329, -253.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1380, device='cuda:0', dtype=torch.float64)
tensor([-442.4464, -198.0347, -241.7315, -348.2210, -253.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1469, device='cuda:0', dtype=torch.float64)
tensor([-441.9652, -198.2960, -241.8124, -347.9995, -254.3048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-441.7056, -198.8117, -242.0772, -348.0364, -255.0698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1626, device='cuda:0', dtype=torch.float64)
tensor([-441.4731, -199.3957, -242.3920, -348.2638, -255.8828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1445, device='cuda:0', dtype=torch.float64)
tensor([-440.9743, -199.8261, -242.5901, -348.2226, -256.3085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1507, device='cuda:0', dtype=torch.float64)
tensor([-440.4388, -200.2295, -242.8243, -348.2099, -256.6133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1037, device='cuda:0', dtype=torch.float64)
tensor([-440.2234, -200.7108, -243.2359, -348.6663, -257.6088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1703, device='cuda:0', dtype=torch.float64)
tensor([-439.4696, -200.8134, -243.3169, -348.4100, -257.3156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1241, device='cuda:0', dtype=torch.float64)
tensor([-438.6398, -200.7130, -243.2343, -347.9329, -256.5989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1235, device='cuda:0', dtype=torch.float64)
tensor([-437.5573, -200.5114, -242.9712, -347.0529, -255.3434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1221, device='cuda:0', dtype=torch.float64)
tensor([-436.3538, -200.2414, -242.6412, -346.0648, -253.8487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1415, device='cuda:0', dtype=torch.float64)
tensor([-435.1071, -199.8601, -242.2296, -344.9369, -252.1608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1373, device='cuda:0', dtype=torch.float64)
tensor([-433.9146, -199.5605, -241.8937, -343.9091, -250.6197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1057, device='cuda:0', dtype=torch.float64)
tensor([-432.9673, -199.5427, -241.7659, -343.4247, -249.7613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1365, device='cuda:0', dtype=torch.float64)
tensor([-431.9591, -199.3969, -241.5887, -342.9170, -248.9403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1150, device='cuda:0', dtype=torch.float64)
tensor([-431.1854, -199.4257, -241.5827, -342.7519, -248.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-430.5957, -199.5200, -241.7202, -342.9941, -248.6232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1382, device='cuda:0', dtype=torch.float64)
tensor([-430.1633, -199.8606, -241.9969, -343.4687, -249.0202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1282, device='cuda:0', dtype=torch.float64)
tensor([-429.5379, -200.1175, -242.1625, -343.7003, -248.9821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0927, device='cuda:0', dtype=torch.float64)
tensor([-428.9078, -200.2659, -242.2281, -343.7458, -248.8560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1568, device='cuda:0', dtype=torch.float64)
tensor([-428.1587, -200.2039, -242.1407, -343.3841, -248.3906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0987, device='cuda:0', dtype=torch.float64)
tensor([-427.4538, -200.1173, -242.0316, -342.9158, -247.8762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1127, device='cuda:0', dtype=torch.float64)
tensor([-426.8277, -200.2468, -241.9901, -342.5947, -247.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0849, device='cuda:0', dtype=torch.float64)
tensor([-426.1197, -200.2273, -241.8692, -342.2312, -247.1884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1065, device='cuda:0', dtype=torch.float64)
tensor([-425.4722, -200.0646, -241.6797, -341.7017, -246.6545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1481, device='cuda:0', dtype=torch.float64)
tensor([-424.7303, -199.8006, -241.4777, -341.1636, -245.9266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1077, device='cuda:0', dtype=torch.float64)
tensor([-423.8647, -199.5245, -241.2746, -340.6873, -245.1357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1237, device='cuda:0', dtype=torch.float64)
tensor([-423.0335, -199.3279, -241.1126, -340.2312, -244.4947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1041, device='cuda:0', dtype=torch.float64)
tensor([-422.2600, -199.1147, -241.0639, -340.0274, -243.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1250, device='cuda:0', dtype=torch.float64)
tensor([-421.3572, -198.8304, -240.9315, -339.6609, -243.2126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1075, device='cuda:0', dtype=torch.float64)
tensor([-420.4720, -198.3696, -240.6477, -339.0914, -242.1932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0885, device='cuda:0', dtype=torch.float64)
tensor([-419.5031, -197.9683, -240.2948, -338.2258, -241.1072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1530, device='cuda:0', dtype=torch.float64)
tensor([-418.3393, -197.4159, -239.7467, -336.9865, -239.5573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-417.4056, -196.8905, -239.3199, -336.0068, -238.4752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1141, device='cuda:0', dtype=torch.float64)
tensor([-416.7970, -196.6220, -239.1692, -335.5392, -238.1253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1249, device='cuda:0', dtype=torch.float64)
tensor([-416.1762, -196.6114, -239.1126, -335.1855, -237.9336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1140, device='cuda:0', dtype=torch.float64)
tensor([-415.5364, -196.5993, -239.0317, -334.8166, -237.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1460, device='cuda:0', dtype=torch.float64)
tensor([-414.8764, -196.6826, -238.9705, -334.5425, -237.2756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1305, device='cuda:0', dtype=torch.float64)
tensor([-414.0968, -196.7554, -238.9028, -334.1590, -236.7917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0976, device='cuda:0', dtype=torch.float64)
tensor([-413.2437, -196.7891, -238.7871, -333.7738, -236.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1117, device='cuda:0', dtype=torch.float64)
tensor([-412.6001, -196.8891, -238.9242, -333.9053, -236.3172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1350, device='cuda:0', dtype=torch.float64)
tensor([-411.9905, -197.0337, -239.0538, -334.0281, -236.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1903, device='cuda:0', dtype=torch.float64)
tensor([-411.3760, -197.0819, -239.0817, -333.8693, -236.1566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0928, device='cuda:0', dtype=torch.float64)
tensor([-410.8318, -197.1868, -239.2307, -333.9494, -236.2063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0974, device='cuda:0', dtype=torch.float64)
tensor([-410.2163, -197.2134, -239.3098, -333.8714, -236.1602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1405, device='cuda:0', dtype=torch.float64)
tensor([-409.6927, -197.2797, -239.4777, -333.9713, -236.2563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1017, device='cuda:0', dtype=torch.float64)
tensor([-409.1845, -197.3293, -239.5308, -333.8824, -236.2532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1155, device='cuda:0', dtype=torch.float64)
tensor([-408.7089, -197.2937, -239.5538, -333.7331, -236.1963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1058, device='cuda:0', dtype=torch.float64)
tensor([-408.1199, -197.1436, -239.4434, -333.3827, -235.8592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0969, device='cuda:0', dtype=torch.float64)
tensor([-407.7197, -197.1934, -239.4856, -333.2575, -235.9400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-407.4035, -197.2832, -239.6053, -333.3139, -236.2802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1406, device='cuda:0', dtype=torch.float64)
tensor([-407.0378, -197.3242, -239.6662, -333.1875, -236.5476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0847, device='cuda:0', dtype=torch.float64)
tensor([-406.7346, -197.5222, -239.7357, -333.0973, -236.8636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1056, device='cuda:0', dtype=torch.float64)
tensor([-406.2707, -197.6239, -239.7055, -332.7290, -236.8658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([-405.8978, -197.9667, -239.8106, -332.5474, -237.2389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1127, device='cuda:0', dtype=torch.float64)
tensor([-405.5750, -198.1332, -239.8401, -332.4667, -237.5416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1249, device='cuda:0', dtype=torch.float64)
tensor([-405.2312, -198.4172, -239.8597, -332.2892, -237.8491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1055, device='cuda:0', dtype=torch.float64)
tensor([-404.9073, -198.6418, -239.8778, -332.0210, -238.1743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1038, device='cuda:0', dtype=torch.float64)
tensor([-404.4981, -198.9505, -239.8023, -331.4875, -238.2932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1447, device='cuda:0', dtype=torch.float64)
tensor([-404.1957, -199.3630, -239.8619, -331.3124, -238.7222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1520, device='cuda:0', dtype=torch.float64)
tensor([-403.6707, -199.5236, -239.7091, -330.6783, -238.6357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1095, device='cuda:0', dtype=torch.float64)
tensor([-403.0218, -199.5646, -239.4008, -329.6292, -238.1957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([-402.2507, -199.4866, -238.9825, -328.2710, -237.5682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1111, device='cuda:0', dtype=torch.float64)
tensor([-401.4201, -199.3104, -238.4427, -326.8087, -236.6494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-400.7785, -199.2160, -238.0203, -325.6037, -235.9124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1049, device='cuda:0', dtype=torch.float64)
tensor([-400.0028, -198.8957, -237.4314, -324.1035, -234.7470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0976, device='cuda:0', dtype=torch.float64)
tensor([-399.5089, -198.6999, -237.1861, -323.4935, -234.3177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2816, device='cuda:0', dtype=torch.float64)
tensor([-399.1620, -198.7413, -237.1345, -323.0359, -234.1908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0843, device='cuda:0', dtype=torch.float64)
tensor([-398.8808, -198.8796, -237.2362, -323.0176, -234.3148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1627, device='cuda:0', dtype=torch.float64)
tensor([-398.5622, -198.7015, -237.1878, -322.6498, -234.2683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0999, device='cuda:0', dtype=torch.float64)
tensor([-398.3249, -198.7372, -237.3409, -322.7111, -234.6286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1305, device='cuda:0', dtype=torch.float64)
tensor([-398.3356, -198.8687, -237.6925, -323.3378, -235.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0779, device='cuda:0', dtype=torch.float64)
tensor([-398.2975, -199.0285, -238.0187, -323.9484, -236.2966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0924, device='cuda:0', dtype=torch.float64)
tensor([-398.3500, -199.2292, -238.4494, -324.6667, -237.2598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0844, device='cuda:0', dtype=torch.float64)
tensor([-398.3019, -199.2994, -238.7943, -325.2296, -237.9396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0941, device='cuda:0', dtype=torch.float64)
tensor([-398.1754, -199.2668, -239.0898, -325.6280, -238.4888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1073, device='cuda:0', dtype=torch.float64)
tensor([-398.2066, -199.1717, -239.4378, -326.0731, -239.1997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0903, device='cuda:0', dtype=torch.float64)
tensor([-398.2865, -199.1222, -239.8450, -326.7082, -240.1027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0959, device='cuda:0', dtype=torch.float64)
tensor([-398.2772, -199.0396, -240.1970, -327.3087, -240.8645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0913, device='cuda:0', dtype=torch.float64)
tensor([-398.1613, -198.8869, -240.4590, -327.5707, -241.3456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-397.9407, -198.6230, -240.6286, -327.7237, -241.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1064, device='cuda:0', dtype=torch.float64)
tensor([-397.5234, -198.2470, -240.5568, -327.4406, -241.4025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0836, device='cuda:0', dtype=torch.float64)
tensor([-397.2391, -197.8352, -240.5534, -327.3319, -241.3371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1302, device='cuda:0', dtype=torch.float64)
tensor([-396.7498, -197.3572, -240.4906, -327.1966, -241.0239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0899, device='cuda:0', dtype=torch.float64)
tensor([-396.0898, -196.9270, -240.2833, -326.6678, -240.5007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0894, device='cuda:0', dtype=torch.float64)
tensor([-395.2298, -196.4519, -239.9087, -325.7703, -239.5748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1074, device='cuda:0', dtype=torch.float64)
tensor([-394.4683, -196.2041, -239.6146, -325.0660, -238.8715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0963, device='cuda:0', dtype=torch.float64)
tensor([-393.8300, -196.0081, -239.3539, -324.4772, -238.3303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([-392.8964, -195.6204, -238.8770, -323.4779, -237.2674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1321, device='cuda:0', dtype=torch.float64)
tensor([-392.0618, -195.2759, -238.4213, -322.4975, -236.3296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0816, device='cuda:0', dtype=torch.float64)
tensor([-391.3417, -195.1003, -238.1104, -321.6949, -235.5934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1237, device='cuda:0', dtype=torch.float64)
tensor([-390.7540, -195.1048, -237.8905, -321.1930, -235.0691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0936, device='cuda:0', dtype=torch.float64)
tensor([-390.2468, -195.2879, -237.7852, -320.8288, -234.7504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0987, device='cuda:0', dtype=torch.float64)
tensor([-389.7134, -195.4926, -237.8009, -320.6598, -234.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-389.0070, -195.5783, -237.5811, -320.0574, -233.9135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-388.4102, -195.6824, -237.4641, -319.6830, -233.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0991, device='cuda:0', dtype=torch.float64)
tensor([-387.8312, -195.8832, -237.3462, -319.1743, -233.2188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-387.2770, -196.0009, -237.2432, -318.6228, -232.9541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-386.9127, -196.2205, -237.3277, -318.5252, -233.0809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0921, device='cuda:0', dtype=torch.float64)
tensor([-386.5085, -196.4362, -237.3704, -318.2783, -233.1089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1445, device='cuda:0', dtype=torch.float64)
tensor([-386.1674, -196.6414, -237.5460, -318.2383, -233.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0855, device='cuda:0', dtype=torch.float64)
tensor([-386.0495, -196.9064, -237.9499, -318.7900, -233.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0901, device='cuda:0', dtype=torch.float64)
tensor([-386.0917, -197.3088, -238.3885, -319.4692, -234.6221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-386.1758, -197.8176, -238.9366, -320.3030, -235.5493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0889, device='cuda:0', dtype=torch.float64)
tensor([-386.3342, -198.2594, -239.5544, -321.3046, -236.6884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0885, device='cuda:0', dtype=torch.float64)
tensor([-386.1569, -198.6439, -239.9809, -321.7074, -237.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0841, device='cuda:0', dtype=torch.float64)
tensor([-385.8492, -199.0149, -240.2764, -321.8758, -237.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0837, device='cuda:0', dtype=torch.float64)
tensor([-385.3608, -199.1984, -240.3191, -321.5550, -237.6224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0732, device='cuda:0', dtype=torch.float64)
tensor([-384.9311, -199.3605, -240.3809, -321.1966, -237.6575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([-384.4228, -199.5762, -240.4103, -320.6922, -237.5773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1034, device='cuda:0', dtype=torch.float64)
tensor([-383.8786, -199.7460, -240.3954, -320.0947, -237.4431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0663, device='cuda:0', dtype=torch.float64)
tensor([-383.4335, -199.9526, -240.4877, -319.7942, -237.4825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-382.9666, -200.2220, -240.5940, -319.3885, -237.5616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0903, device='cuda:0', dtype=torch.float64)
tensor([-382.3136, -200.3188, -240.5563, -318.7265, -237.3973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0659, device='cuda:0', dtype=torch.float64)
tensor([-381.6209, -200.4019, -240.4635, -317.9251, -237.1905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1021, device='cuda:0', dtype=torch.float64)
tensor([-380.9160, -200.4425, -240.4138, -317.3178, -236.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0755, device='cuda:0', dtype=torch.float64)
tensor([-380.1260, -200.4369, -240.3065, -316.5079, -236.6137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0662, device='cuda:0', dtype=torch.float64)
tensor([-379.3383, -200.3579, -240.1426, -315.6287, -236.1628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0840, device='cuda:0', dtype=torch.float64)
tensor([-378.5266, -200.2686, -239.9285, -314.7224, -235.5791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([-377.7442, -200.1938, -239.6926, -313.8057, -234.9672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-376.9701, -200.0863, -239.4856, -312.9698, -234.4146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0826, device='cuda:0', dtype=torch.float64)
tensor([-376.3741, -200.1018, -239.3983, -312.4266, -234.0957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1046, device='cuda:0', dtype=torch.float64)
tensor([-375.8317, -199.9355, -239.2053, -311.8396, -233.6949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0981, device='cuda:0', dtype=torch.float64)
tensor([-375.2241, -199.6903, -238.9264, -311.1895, -233.1408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1110, device='cuda:0', dtype=torch.float64)
tensor([-374.6739, -199.5784, -238.7527, -310.8075, -232.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-374.0695, -199.4100, -238.4864, -310.3690, -232.2481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-373.6404, -199.3240, -238.3473, -310.1898, -231.9682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1221, device='cuda:0', dtype=torch.float64)
tensor([-373.2666, -199.2807, -238.2160, -310.1692, -231.7301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-373.0059, -199.0429, -238.0788, -310.3151, -231.4336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0888, device='cuda:0', dtype=torch.float64)
tensor([-372.7199, -198.8163, -237.9056, -310.3189, -231.0396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0979, device='cuda:0', dtype=torch.float64)
tensor([-372.4267, -198.5140, -237.7606, -310.3252, -230.7054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1218, device='cuda:0', dtype=torch.float64)
tensor([-372.0862, -198.3043, -237.6974, -310.3832, -230.4255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0910, device='cuda:0', dtype=torch.float64)
tensor([-371.7277, -198.2123, -237.6502, -310.3913, -230.2646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1072, device='cuda:0', dtype=torch.float64)
tensor([-371.4391, -198.0244, -237.6606, -310.6312, -230.1847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-370.9564, -197.5991, -237.4369, -310.4024, -229.6088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-370.5392, -197.3213, -237.3537, -310.3517, -229.2781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0675, device='cuda:0', dtype=torch.float64)
tensor([-370.1722, -197.1592, -237.2479, -310.1372, -229.0921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1064, device='cuda:0', dtype=torch.float64)
tensor([-369.9355, -197.1835, -237.2809, -310.2616, -229.1500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1621, device='cuda:0', dtype=torch.float64)
tensor([-369.6570, -197.2598, -237.2580, -310.1930, -229.1880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0783, device='cuda:0', dtype=torch.float64)
tensor([-369.4116, -197.5327, -237.3568, -310.3121, -229.4197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0904, device='cuda:0', dtype=torch.float64)
tensor([-369.1486, -197.7428, -237.3975, -310.3059, -229.5034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0926, device='cuda:0', dtype=torch.float64)
tensor([-369.0107, -198.0399, -237.5416, -310.4176, -229.8223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-368.8216, -198.2800, -237.6480, -310.4801, -230.0479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1028, device='cuda:0', dtype=torch.float64)
tensor([-368.5388, -198.3723, -237.5569, -310.2842, -229.9652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0958, device='cuda:0', dtype=torch.float64)
tensor([-368.2821, -198.5071, -237.4927, -310.1052, -229.9024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0923, device='cuda:0', dtype=torch.float64)
tensor([-367.7809, -198.4711, -237.2373, -309.5716, -229.3880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0957, device='cuda:0', dtype=torch.float64)
tensor([-367.3853, -198.5619, -237.1348, -309.3005, -229.1469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1009, device='cuda:0', dtype=torch.float64)
tensor([-366.9450, -198.5626, -236.9441, -308.9333, -228.7129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0747, device='cuda:0', dtype=torch.float64)
tensor([-366.3749, -198.4882, -236.5953, -308.2869, -227.9743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1188, device='cuda:0', dtype=torch.float64)
tensor([-365.8573, -198.4073, -236.2678, -307.6487, -227.3588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0841, device='cuda:0', dtype=torch.float64)
tensor([-365.2739, -198.3134, -235.8750, -306.9007, -226.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-364.7330, -198.2073, -235.5128, -306.2158, -225.8815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-364.2556, -198.0659, -235.1829, -305.5781, -225.3322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-363.7455, -197.7766, -234.7545, -304.8333, -224.6131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0727, device='cuda:0', dtype=torch.float64)
tensor([-363.1879, -197.5220, -234.2551, -303.9388, -223.8436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1010, device='cuda:0', dtype=torch.float64)
tensor([-362.7818, -197.2895, -233.8922, -303.3508, -223.3238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0843, device='cuda:0', dtype=torch.float64)
tensor([-362.3887, -197.1487, -233.4747, -302.6110, -222.7430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1100, device='cuda:0', dtype=torch.float64)
tensor([-362.0598, -197.0992, -233.1928, -302.1763, -222.3485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-361.8328, -197.0407, -233.0319, -302.0266, -222.1917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-361.7718, -197.1021, -233.1451, -302.4369, -222.4763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0814, device='cuda:0', dtype=torch.float64)
tensor([-361.8108, -197.3614, -233.3854, -303.0050, -223.0121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-361.8759, -197.6383, -233.6795, -303.5559, -223.5832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0769, device='cuda:0', dtype=torch.float64)
tensor([-362.0330, -197.8445, -234.0796, -304.2632, -224.3525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0962, device='cuda:0', dtype=torch.float64)
tensor([-362.2118, -198.2567, -234.6599, -305.1847, -225.3284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1309, device='cuda:0', dtype=torch.float64)
tensor([-362.3471, -198.7102, -235.2241, -305.9789, -226.3363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0967, device='cuda:0', dtype=torch.float64)
tensor([-362.4241, -199.0954, -235.7094, -306.5906, -227.1525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0851, device='cuda:0', dtype=torch.float64)
tensor([-362.5480, -199.4684, -236.2039, -307.2191, -228.0190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-362.7177, -199.7814, -236.7035, -307.7937, -228.8663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0843, device='cuda:0', dtype=torch.float64)
tensor([-362.7466, -199.9119, -236.9872, -307.9349, -229.3801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0808, device='cuda:0', dtype=torch.float64)
tensor([-362.5814, -199.8257, -237.0150, -307.6105, -229.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1086, device='cuda:0', dtype=torch.float64)
tensor([-362.3293, -199.6967, -236.9559, -307.1399, -229.5361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1280, device='cuda:0', dtype=torch.float64)
tensor([-362.0598, -199.5447, -236.8633, -306.6508, -229.3696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0711, device='cuda:0', dtype=torch.float64)
tensor([-361.6639, -199.3920, -236.6142, -305.9004, -228.9211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-361.2672, -199.2759, -236.4065, -305.1758, -228.5461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0858, device='cuda:0', dtype=torch.float64)
tensor([-360.7992, -199.0414, -236.0941, -304.3008, -228.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-360.4584, -198.9069, -235.9175, -303.7609, -227.7432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-360.1545, -198.8275, -235.7981, -303.2985, -227.5177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-359.8087, -198.7155, -235.6013, -302.7911, -227.1508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-359.3322, -198.3721, -235.1663, -301.8336, -226.4223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1155, device='cuda:0', dtype=torch.float64)
tensor([-358.7680, -197.9758, -234.6149, -300.7199, -225.4760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0892, device='cuda:0', dtype=torch.float64)
tensor([-358.1585, -197.5899, -233.9946, -299.4779, -224.4200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-357.6582, -197.3100, -233.4753, -298.4335, -223.5733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([-357.1843, -196.9535, -232.9364, -297.3671, -222.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0632, device='cuda:0', dtype=torch.float64)
tensor([-356.8243, -196.8205, -232.5716, -296.5568, -222.2326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-356.5732, -196.7542, -232.4010, -296.0786, -222.0482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-356.3973, -196.9497, -232.4797, -296.0797, -222.2310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0948, device='cuda:0', dtype=torch.float64)
tensor([-356.3237, -197.0425, -232.5733, -296.1571, -222.4608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0869, device='cuda:0', dtype=torch.float64)
tensor([-356.2381, -197.3004, -232.7947, -296.3719, -222.8667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0787, device='cuda:0', dtype=torch.float64)
tensor([-356.1846, -197.5743, -233.0505, -296.7604, -223.3162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0684, device='cuda:0', dtype=torch.float64)
tensor([-356.0967, -197.8881, -233.3747, -297.2854, -223.7867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0712, device='cuda:0', dtype=torch.float64)
tensor([-355.9676, -198.2797, -233.6384, -297.7415, -224.1866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0639, device='cuda:0', dtype=torch.float64)
tensor([-355.7820, -198.6166, -233.8484, -298.1495, -224.4707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0734, device='cuda:0', dtype=torch.float64)
tensor([-355.5482, -198.7007, -233.9276, -298.2808, -224.5841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1984, device='cuda:0', dtype=torch.float64)
tensor([-355.3736, -198.7667, -234.0249, -298.3615, -224.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1384, device='cuda:0', dtype=torch.float64)
tensor([-355.2903, -198.8705, -234.2487, -298.7243, -225.1432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-355.3769, -199.1623, -234.6700, -299.4661, -225.7668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-355.4525, -199.4579, -235.0702, -300.1474, -226.3518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0674, device='cuda:0', dtype=torch.float64)
tensor([-355.6245, -199.8086, -235.5357, -300.9042, -227.0456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-355.7185, -200.1238, -235.8949, -301.4600, -227.6126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-355.7212, -200.1946, -236.0909, -301.7150, -227.9812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0600, device='cuda:0', dtype=torch.float64)
tensor([-355.4649, -200.0095, -236.0072, -301.5066, -227.8662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-355.0973, -199.7044, -235.7953, -301.0976, -227.5497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-354.6212, -199.4271, -235.4504, -300.3089, -227.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0860, device='cuda:0', dtype=torch.float64)
tensor([-354.0691, -199.1354, -235.0487, -299.3474, -226.5281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-353.4538, -198.7681, -234.6187, -298.3597, -225.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0609, device='cuda:0', dtype=torch.float64)
tensor([-352.9940, -198.6902, -234.5303, -297.9619, -225.8422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1723, device='cuda:0', dtype=torch.float64)
tensor([-352.3862, -198.4867, -234.2423, -297.2120, -225.3444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-351.8576, -198.3427, -233.9295, -296.4044, -224.9380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-351.3654, -198.1825, -233.5865, -295.5314, -224.5109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-350.9618, -198.2162, -233.3959, -294.8939, -224.3563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-350.5710, -198.3470, -233.2988, -294.4466, -224.3091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0675, device='cuda:0', dtype=torch.float64)
tensor([-350.2168, -198.5045, -233.2012, -294.1198, -224.2805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-349.8325, -198.5041, -233.0056, -293.6265, -224.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-349.4438, -198.3783, -232.8030, -293.1441, -223.9226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-348.9831, -198.1645, -232.4510, -292.4363, -223.4895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-348.6323, -198.1849, -232.3273, -292.1832, -223.3418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-348.3374, -198.2288, -232.2631, -292.0625, -223.2705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-348.0003, -198.2685, -232.1922, -291.9078, -223.1230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-347.7597, -198.2975, -232.0964, -291.7383, -222.9793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-347.6525, -198.5053, -232.2248, -291.9070, -223.1755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-347.5208, -198.7273, -232.3462, -292.0470, -223.3953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0591, device='cuda:0', dtype=torch.float64)
tensor([-347.3631, -198.9203, -232.4377, -292.2107, -223.5663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-347.2150, -199.1746, -232.5654, -292.3966, -223.8253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0784, device='cuda:0', dtype=torch.float64)
tensor([-346.9759, -199.2416, -232.5150, -292.3382, -223.8424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0660, device='cuda:0', dtype=torch.float64)
tensor([-346.8234, -199.4088, -232.5681, -292.3542, -224.0805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-346.7866, -199.6546, -232.7307, -292.5774, -224.5037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-346.5944, -199.7475, -232.7666, -292.6129, -224.6844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1320, device='cuda:0', dtype=torch.float64)
tensor([-346.5222, -200.0583, -232.9692, -292.8195, -225.0969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-346.4989, -200.3120, -233.2194, -293.1478, -225.5327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-346.4289, -200.3598, -233.3102, -293.2089, -225.8014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0569, device='cuda:0', dtype=torch.float64)
tensor([-346.3485, -200.4086, -233.3934, -293.3332, -226.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-346.3271, -200.4195, -233.5506, -293.5911, -226.3927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0745, device='cuda:0', dtype=torch.float64)
tensor([-346.3379, -200.4745, -233.7057, -293.9213, -226.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0854, device='cuda:0', dtype=torch.float64)
tensor([-346.3775, -200.5668, -233.9082, -294.3140, -227.0570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-346.2468, -200.6266, -233.9724, -294.3961, -227.1156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-345.9914, -200.5260, -233.8683, -294.2170, -226.9080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-345.6243, -200.3075, -233.6041, -293.8050, -226.4500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-345.2131, -200.0164, -233.3159, -293.2708, -225.9576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0742, device='cuda:0', dtype=torch.float64)
tensor([-344.7601, -199.7343, -232.8951, -292.4682, -225.3354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-344.2820, -199.4469, -232.4261, -291.6206, -224.6602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-343.9937, -199.3106, -232.2200, -291.1719, -224.3724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0571, device='cuda:0', dtype=torch.float64)
tensor([-343.7105, -199.2257, -232.0258, -290.6947, -224.1313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-343.5350, -199.2266, -232.0148, -290.5500, -224.1349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-343.2653, -199.0944, -231.8015, -290.1053, -223.8915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0924, device='cuda:0', dtype=torch.float64)
tensor([-342.9204, -198.7675, -231.4020, -289.4129, -223.3627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0619, device='cuda:0', dtype=torch.float64)
tensor([-342.5615, -198.3767, -230.9146, -288.5651, -222.7344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-342.3196, -198.1177, -230.5962, -287.9699, -222.3456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0849, device='cuda:0', dtype=torch.float64)
tensor([-342.0223, -197.7618, -230.2034, -287.2500, -221.8163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0737, device='cuda:0', dtype=torch.float64)
tensor([-341.7527, -197.4557, -229.8615, -286.6158, -221.4276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0674, device='cuda:0', dtype=torch.float64)
tensor([-341.4962, -197.1919, -229.5307, -286.0838, -221.0188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-341.2159, -196.8598, -229.1411, -285.4369, -220.4953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-340.9895, -196.6023, -228.8592, -284.9361, -220.0862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-340.7758, -196.4775, -228.7454, -284.7096, -219.8972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-340.6326, -196.5621, -228.8122, -284.7622, -219.9902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-340.5869, -196.7734, -229.0192, -285.0259, -220.2964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-340.6142, -196.9895, -229.2715, -285.3100, -220.7489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-340.5451, -197.0284, -229.2763, -285.1526, -220.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0853, device='cuda:0', dtype=torch.float64)
tensor([-340.4743, -197.0908, -229.1813, -284.7858, -220.9725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-340.6400, -197.2500, -229.3831, -284.9390, -221.4130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0601, device='cuda:0', dtype=torch.float64)
tensor([-340.9458, -197.5829, -229.6927, -285.2744, -222.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-341.1460, -197.8033, -229.9991, -285.6663, -222.5698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0823, device='cuda:0', dtype=torch.float64)
tensor([-341.3436, -197.9414, -230.3053, -286.1495, -223.0029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-341.3943, -197.9465, -230.4060, -286.2204, -223.1744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-341.3704, -197.9649, -230.5214, -286.3366, -223.3341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-341.3070, -198.0349, -230.6483, -286.4327, -223.4680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-341.3008, -198.2119, -230.8896, -286.6043, -223.7990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-341.2456, -198.2319, -231.0190, -286.6463, -223.9828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-341.0708, -198.2882, -230.9460, -286.3853, -223.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-340.7859, -198.2676, -230.8041, -286.0505, -223.6307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-340.4056, -198.3487, -230.6217, -285.5821, -223.3085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-339.9160, -198.1971, -230.1666, -284.7491, -222.6240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-339.4601, -198.1493, -229.7557, -284.0450, -222.0230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0601, device='cuda:0', dtype=torch.float64)
tensor([-339.0039, -198.2390, -229.3840, -283.4309, -221.5304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-338.5721, -198.3956, -229.0962, -282.9751, -221.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-338.0931, -198.4477, -228.7969, -282.4105, -220.6581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-337.6371, -198.4900, -228.5482, -281.8794, -220.2932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-337.1619, -198.4301, -228.1464, -281.1674, -219.7467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-336.7467, -198.4161, -227.8881, -280.6573, -219.3912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-336.4184, -198.3940, -227.7063, -280.3026, -219.1484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-336.0453, -198.2578, -227.4061, -279.7559, -218.7643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-335.8239, -198.4596, -227.5020, -279.8903, -218.8714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-335.5738, -198.5580, -227.5114, -279.8388, -218.8394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0781, device='cuda:0', dtype=torch.float64)
tensor([-335.3938, -198.9534, -227.7474, -280.0421, -219.1280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-335.3039, -199.4105, -228.0787, -280.3862, -219.6160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0695, device='cuda:0', dtype=torch.float64)
tensor([-335.2215, -199.8792, -228.4284, -280.7036, -220.1109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-335.0386, -200.2200, -228.6419, -280.8027, -220.3789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-334.9126, -200.4692, -228.8264, -280.8880, -220.6027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-334.7727, -200.7582, -229.0140, -280.9647, -220.8540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-334.5773, -201.0370, -229.1406, -280.9173, -221.0439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0983, device='cuda:0', dtype=torch.float64)
tensor([-334.4242, -201.1732, -229.2738, -280.8775, -221.2498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0571, device='cuda:0', dtype=torch.float64)
tensor([-334.2720, -201.1695, -229.3198, -280.7238, -221.3714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-334.0803, -201.0734, -229.3011, -280.5309, -221.3853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-333.8358, -200.9173, -229.1340, -280.0411, -221.2709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-333.6298, -200.8532, -228.9909, -279.5951, -221.1838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-333.3912, -200.5865, -228.6770, -279.0287, -220.8729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-333.3370, -200.5875, -228.6507, -278.9105, -220.9999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-333.1871, -200.2940, -228.3915, -278.4599, -220.7886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-333.0691, -200.0520, -228.1926, -278.0887, -220.6818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-333.0369, -199.9022, -228.1561, -278.0232, -220.7407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-332.9352, -199.6727, -228.0271, -277.7755, -220.6867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1004, device='cuda:0', dtype=torch.float64)
tensor([-332.7872, -199.3951, -227.8452, -277.4422, -220.5494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-332.6563, -199.0194, -227.6035, -277.0508, -220.3021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-332.5228, -198.6042, -227.2969, -276.5532, -220.0124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0749, device='cuda:0', dtype=torch.float64)
tensor([-332.3405, -198.1046, -226.9022, -275.9035, -219.5856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-332.1975, -197.7597, -226.6681, -275.5547, -219.3415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-332.1002, -197.5151, -226.4947, -275.2598, -219.1993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-331.9604, -197.2314, -226.2263, -274.8310, -218.9120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-332.0934, -197.3035, -226.3855, -275.1830, -219.2117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-332.1816, -197.5053, -226.6585, -275.7079, -219.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-332.2933, -197.7731, -227.0305, -276.3963, -220.0699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-332.3529, -197.8998, -227.2468, -276.8026, -220.3598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-332.4035, -198.0164, -227.4659, -277.1690, -220.6474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-332.3447, -197.8568, -227.4445, -277.2058, -220.5756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-332.3051, -197.8269, -227.4711, -277.3076, -220.6048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-332.2669, -197.8179, -227.4996, -277.3978, -220.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-332.1917, -197.8352, -227.4235, -277.3763, -220.6356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-332.0975, -197.8524, -227.3251, -277.3638, -220.5552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-331.9996, -197.8143, -227.1811, -277.2792, -220.4018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-331.9699, -197.9400, -227.2215, -277.4318, -220.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-331.7681, -197.8887, -226.9848, -277.1758, -220.2646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-331.4455, -197.6481, -226.5363, -276.5761, -219.7170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-331.1152, -197.4326, -226.1341, -276.0229, -219.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-330.8896, -197.3474, -225.8712, -275.6990, -218.9625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0635, device='cuda:0', dtype=torch.float64)
tensor([-330.5891, -197.1872, -225.5579, -275.2527, -218.6226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-330.3723, -197.1316, -225.4733, -275.1754, -218.5333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-330.2180, -197.1473, -225.4961, -275.2391, -218.5762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-330.0992, -197.1783, -225.5401, -275.3605, -218.6204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-329.9191, -197.0273, -225.4524, -275.3423, -218.4439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-329.7750, -197.0394, -225.5538, -275.5935, -218.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-329.6873, -197.1135, -225.7441, -275.9946, -218.6811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-329.6359, -197.2577, -225.9731, -276.4186, -218.9847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-329.6779, -197.4117, -226.3743, -277.0604, -219.5199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0723, device='cuda:0', dtype=torch.float64)
tensor([-329.6569, -197.4642, -226.6975, -277.5287, -219.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-329.5950, -197.4524, -226.9340, -277.8145, -220.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-329.5992, -197.6025, -227.3301, -278.2921, -220.6306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1257, device='cuda:0', dtype=torch.float64)
tensor([-329.4657, -197.6916, -227.5346, -278.4697, -220.8722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-329.3015, -197.7345, -227.6514, -278.5478, -221.0370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-329.0781, -197.7721, -227.6760, -278.4837, -221.0436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-328.7047, -197.6610, -227.4184, -278.0029, -220.7369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-328.1809, -197.3217, -226.8642, -277.1186, -220.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-327.6487, -197.0202, -226.2612, -276.1537, -219.2763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0619, device='cuda:0', dtype=torch.float64)
tensor([-327.2223, -196.7901, -225.7867, -275.4206, -218.6447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-326.8867, -196.6548, -225.4965, -274.9626, -218.2537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-326.6476, -196.6152, -225.3736, -274.7581, -218.0821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0844, device='cuda:0', dtype=torch.float64)
tensor([-326.4926, -196.7599, -225.4869, -274.9255, -218.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-326.3762, -196.7991, -225.6013, -275.1092, -218.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-326.1985, -196.5893, -225.4986, -274.9856, -218.0121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-326.0420, -196.4356, -225.4456, -274.9727, -217.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-325.8451, -196.1779, -225.3170, -274.8199, -217.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-325.7001, -196.1299, -225.3285, -274.9150, -217.5355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-325.5195, -195.9496, -225.3025, -274.9259, -217.4545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-325.3343, -195.8100, -225.2700, -274.9030, -217.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-325.1545, -195.6949, -225.1925, -274.7871, -217.2523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-324.9095, -195.5165, -225.0034, -274.4674, -216.9880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-324.7009, -195.3593, -224.8654, -274.2683, -216.7972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-324.5218, -195.4016, -224.9157, -274.3749, -216.8132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-324.3734, -195.5054, -225.0588, -274.5567, -216.9661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-324.1888, -195.5642, -225.0711, -274.5281, -216.9801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-324.0678, -195.6864, -225.2553, -274.7007, -217.2293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-323.9278, -195.8238, -225.4233, -274.8332, -217.4342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-323.7235, -195.9449, -225.4399, -274.7105, -217.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-323.4023, -196.0377, -225.3150, -274.3658, -217.2985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-323.2121, -196.2300, -225.4203, -274.3168, -217.4510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-323.0913, -196.5937, -225.6419, -274.4300, -217.7296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-322.9452, -196.9041, -225.7855, -274.4515, -217.9306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-322.7710, -197.1100, -225.8759, -274.4181, -218.0899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-322.6058, -197.2959, -225.9501, -274.3621, -218.2240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-322.4768, -197.5314, -226.0685, -274.4251, -218.4280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-322.3564, -197.7524, -226.2181, -274.5367, -218.6381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-322.2058, -197.8990, -226.2897, -274.4927, -218.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-321.8666, -197.7911, -226.0441, -274.0091, -218.5197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-321.5460, -197.6867, -225.8369, -273.5950, -218.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-321.3532, -197.6030, -225.7614, -273.3782, -218.1857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-321.0408, -197.2632, -225.4060, -272.7981, -217.7729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0449, device='cuda:0', dtype=torch.float64)
tensor([-320.6645, -196.8542, -224.9352, -272.0943, -217.2019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-320.2250, -196.4725, -224.3726, -271.2814, -216.4933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-319.7209, -195.9500, -223.6664, -270.1583, -215.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-319.3607, -195.6178, -223.1593, -269.3632, -215.0773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-318.9939, -195.1986, -222.5608, -268.4037, -214.3912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-318.6306, -194.7242, -221.9671, -267.4363, -213.7030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0666, device='cuda:0', dtype=torch.float64)
tensor([-318.4392, -194.5430, -221.6942, -267.0047, -213.4411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-318.2276, -194.3794, -221.4476, -266.5394, -213.1998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-318.1142, -194.4261, -221.4917, -266.5524, -213.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-318.0560, -194.5415, -221.6203, -266.6885, -213.5281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-318.0017, -194.6005, -221.7539, -266.8249, -213.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-317.9860, -194.7442, -221.8661, -267.0068, -214.0570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-318.0813, -195.1467, -222.2897, -267.6582, -214.7186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-318.1845, -195.5309, -222.6847, -268.2677, -215.3424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-318.3535, -195.9224, -223.1808, -269.1008, -216.0628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-318.5460, -196.3223, -223.7130, -269.9274, -216.8378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-318.7059, -196.6353, -224.2167, -270.7315, -217.5026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-318.7589, -196.6934, -224.4678, -271.1855, -217.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-318.8011, -196.7144, -224.6606, -271.5641, -217.9407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-318.8882, -196.8376, -224.9595, -272.0422, -218.2584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-318.9219, -197.0384, -225.2729, -272.4372, -218.5910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-318.9939, -197.3147, -225.6275, -272.8917, -219.0087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-319.0275, -197.4963, -225.8747, -273.1723, -219.3016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-318.9492, -197.4243, -225.8435, -273.0693, -219.2497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-318.9246, -197.3322, -225.8077, -273.0138, -219.2416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-318.8285, -197.2485, -225.7091, -272.8578, -219.1067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-318.6895, -197.1163, -225.5877, -272.6713, -218.9112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-318.5456, -197.0565, -225.4880, -272.5065, -218.7556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-318.4281, -196.9525, -225.3209, -272.2421, -218.5798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-318.1937, -196.7469, -224.9652, -271.7115, -218.1471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-317.8503, -196.4251, -224.4737, -270.9256, -217.5693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0815, device='cuda:0', dtype=torch.float64)
tensor([-317.4503, -196.0361, -223.9472, -270.0358, -216.9547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-317.1436, -195.7101, -223.5989, -269.4464, -216.5681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-316.8756, -195.4149, -223.3032, -268.9988, -216.2652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-316.6265, -195.0305, -222.9550, -268.4748, -215.8676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-316.3561, -194.7344, -222.6155, -267.8899, -215.5029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-316.0240, -194.4062, -222.1855, -267.1115, -215.0569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-315.7125, -194.1216, -221.8484, -266.4700, -214.6686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-315.4480, -193.9516, -221.6591, -266.0963, -214.4396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-315.1460, -193.6672, -221.3847, -265.6052, -214.0935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-314.9052, -193.6247, -221.3377, -265.5122, -213.9996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-314.6699, -193.6886, -221.4388, -265.6471, -214.0626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-314.4383, -193.8021, -221.5699, -265.8351, -214.1665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-314.2677, -194.0695, -221.8098, -266.1847, -214.4149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-314.2490, -194.5783, -222.3542, -267.0370, -215.0203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0658, device='cuda:0', dtype=torch.float64)
tensor([-314.1611, -194.9823, -222.7521, -267.6429, -215.4494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-314.1623, -195.4220, -223.2114, -268.3321, -215.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-314.1025, -195.8323, -223.5920, -268.9092, -216.4392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-313.9777, -196.1292, -223.8836, -269.3057, -216.7707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-313.7721, -196.3478, -224.0224, -269.5037, -216.9198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-313.6353, -196.5423, -224.1926, -269.7315, -217.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0653, device='cuda:0', dtype=torch.float64)
tensor([-313.5895, -196.8586, -224.4774, -270.1126, -217.4651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-313.5268, -197.1884, -224.7648, -270.4748, -217.8413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-313.5368, -197.5139, -225.1130, -270.8884, -218.3278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-313.5242, -197.8050, -225.3981, -271.1883, -218.7185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-313.5138, -198.0971, -225.6726, -271.5123, -219.0620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-313.4614, -198.2554, -225.8004, -271.6486, -219.2793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-313.2059, -198.1139, -225.5893, -271.2756, -219.0803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-312.7910, -197.8486, -225.1530, -270.5930, -218.5842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-312.2834, -197.4188, -224.5454, -269.6448, -217.8493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-311.7449, -196.7312, -223.7863, -268.4651, -216.9294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-311.3129, -196.1262, -223.1669, -267.4565, -216.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-310.9637, -195.6594, -222.6720, -266.6313, -215.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-310.7081, -195.1174, -222.2671, -265.9839, -215.0438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-310.4458, -194.6117, -221.8888, -265.3645, -214.4963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-310.2803, -194.2702, -221.7689, -265.1593, -214.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-310.1909, -193.9963, -221.7231, -265.0782, -214.0989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-310.2109, -194.0057, -221.9467, -265.4443, -214.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-310.2553, -193.9294, -222.1161, -265.7571, -214.3455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-310.3314, -193.8738, -222.3022, -266.1347, -214.4589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-310.3685, -193.8700, -222.4547, -266.4711, -214.5809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-310.3882, -193.9391, -222.5789, -266.7773, -214.6857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-310.3385, -193.9784, -222.5343, -266.8038, -214.6436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-310.2316, -193.9338, -222.3536, -266.6475, -214.4225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-310.1721, -193.9824, -222.2675, -266.6785, -214.2668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-310.0645, -193.9572, -222.0595, -266.5435, -213.9821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-309.9082, -193.8714, -221.7403, -266.2567, -213.6022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-309.7917, -193.8795, -221.5189, -266.1049, -213.3693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-309.5954, -193.8245, -221.2059, -265.7770, -213.0237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-309.5117, -194.0287, -221.1077, -265.7885, -213.0059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-309.4216, -194.1801, -221.0199, -265.7941, -213.0405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-309.3814, -194.4372, -221.1066, -266.0143, -213.2601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-309.2934, -194.5307, -221.0517, -265.9921, -213.2638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-309.1812, -194.7009, -221.0538, -266.0713, -213.3407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-309.0314, -194.7392, -220.9515, -265.9558, -213.3071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-308.8612, -194.6423, -220.7841, -265.7562, -213.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-308.6758, -194.4216, -220.5206, -265.4187, -212.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-308.4747, -194.2363, -220.2871, -265.0806, -212.5902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-308.3142, -194.0596, -220.1416, -264.8809, -212.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-308.1789, -193.9340, -220.0289, -264.7030, -212.2885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1234, device='cuda:0', dtype=torch.float64)
tensor([-308.0828, -193.9255, -220.0821, -264.8067, -212.2921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-307.9844, -193.9229, -220.1694, -264.9480, -212.3306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-307.8533, -193.8608, -220.1423, -264.9079, -212.2675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-307.6819, -193.7184, -219.9804, -264.6535, -212.0498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-307.4752, -193.4932, -219.7647, -264.2954, -211.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-307.3338, -193.3070, -219.6365, -264.0699, -211.5678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-307.3030, -193.3597, -219.7921, -264.3290, -211.7241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-307.1994, -193.3605, -219.8323, -264.4095, -211.7603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-307.0225, -193.2529, -219.7042, -264.2072, -211.5982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-306.8578, -193.2544, -219.6568, -264.1112, -211.5288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-306.7592, -193.3583, -219.7782, -264.2967, -211.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-306.7227, -193.5477, -219.9304, -264.5443, -211.8516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0659, device='cuda:0', dtype=torch.float64)
tensor([-306.5793, -193.6341, -219.9811, -264.6017, -211.8852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-306.3944, -193.6705, -219.9252, -264.4766, -211.8184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-306.1594, -193.7045, -219.8361, -264.2660, -211.7358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-305.9684, -193.7249, -219.7379, -264.0743, -211.7214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-305.7235, -193.6763, -219.6021, -263.8099, -211.6432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-305.6386, -193.8156, -219.8004, -264.0673, -211.9155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-305.6130, -194.0926, -220.1636, -264.5379, -212.4022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0711, device='cuda:0', dtype=torch.float64)
tensor([-305.6522, -194.3254, -220.5607, -265.0874, -212.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-305.6721, -194.5653, -220.9291, -265.6058, -213.3473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-305.6650, -194.8055, -221.2291, -266.0500, -213.7113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-305.5803, -194.9825, -221.4330, -266.2981, -213.9388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-305.3883, -194.9539, -221.3717, -266.1523, -213.8647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-305.0335, -194.7974, -221.0708, -265.6418, -213.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-304.8069, -194.7669, -220.9551, -265.4050, -213.3422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-304.6690, -194.9188, -220.9962, -265.3436, -213.4536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-304.5539, -195.0460, -221.0250, -265.2451, -213.5598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-304.4614, -195.2574, -221.1427, -265.2807, -213.7910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-304.3579, -195.3581, -221.1989, -265.2425, -213.9013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-304.1435, -195.3261, -221.0407, -264.9474, -213.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-304.0492, -195.2914, -220.9719, -264.7839, -213.7219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-303.9451, -195.3255, -220.9602, -264.6969, -213.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-303.7460, -195.2507, -220.7643, -264.3369, -213.4385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-303.5292, -195.1524, -220.5081, -263.8911, -213.1324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-303.3773, -194.8952, -220.2014, -263.3842, -212.8154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-303.2807, -194.5988, -219.9036, -262.9034, -212.5565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-303.1550, -194.2402, -219.5640, -262.3670, -212.2138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-303.0022, -193.9090, -219.1692, -261.7437, -211.8167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-302.9611, -193.7774, -219.0395, -261.5502, -211.7217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-302.9429, -193.6632, -218.9566, -261.4001, -211.6866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-302.8898, -193.4668, -218.7575, -261.1221, -211.5134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1298, device='cuda:0', dtype=torch.float64)
tensor([-302.9786, -193.3049, -218.7376, -261.0867, -211.5567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-303.0928, -193.1531, -218.7482, -261.0954, -211.6227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-303.1507, -192.9134, -218.6416, -260.9622, -211.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-303.1400, -192.6543, -218.4639, -260.7389, -211.3036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-303.1001, -192.4006, -218.2351, -260.4348, -211.0432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-303.0192, -192.1306, -217.9313, -260.0034, -210.7461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-302.9854, -191.9706, -217.7201, -259.7269, -210.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-302.9130, -191.8456, -217.4410, -259.3421, -210.3606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-302.7477, -191.5529, -216.9541, -258.5758, -209.8945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0969, device='cuda:0', dtype=torch.float64)
tensor([-302.6451, -191.2798, -216.4930, -257.8063, -209.4912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-302.5982, -191.2433, -216.2703, -257.4495, -209.3542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-302.5845, -191.3795, -216.1874, -257.3196, -209.4131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-302.5907, -191.6193, -216.2442, -257.4229, -209.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-302.5621, -191.8394, -216.2851, -257.4687, -209.7772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-302.5918, -192.1045, -216.4534, -257.7309, -210.1304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-302.5771, -192.2039, -216.4577, -257.7310, -210.2746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-302.5650, -192.3398, -216.4779, -257.7582, -210.4413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-302.6721, -192.6392, -216.7703, -258.2666, -210.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-302.7498, -192.8834, -217.0135, -258.6904, -211.2992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-302.7789, -193.1062, -217.1722, -258.9778, -211.6087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-302.7983, -193.1869, -217.2901, -259.2364, -211.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-302.7089, -193.2358, -217.2786, -259.2967, -211.8138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-302.5797, -193.1859, -217.1369, -259.1271, -211.6624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-302.4906, -193.1427, -217.0723, -259.0404, -211.5760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-302.3757, -193.0008, -216.9039, -258.7975, -211.3912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-302.2798, -192.7883, -216.7529, -258.5969, -211.1861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-302.2545, -192.7550, -216.7964, -258.6931, -211.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-302.2775, -192.7744, -216.9179, -258.8891, -211.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-302.2430, -192.6908, -216.8973, -258.8940, -211.2849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-302.2068, -192.6198, -216.9140, -258.9675, -211.2751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-302.2438, -192.5164, -217.0177, -259.1580, -211.3358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-302.2513, -192.3379, -217.0300, -259.2147, -211.2759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-302.2039, -192.1996, -216.9413, -259.1795, -211.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-302.0562, -191.8965, -216.5778, -258.7039, -210.6788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-301.9110, -191.6063, -216.2528, -258.2974, -210.2917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-301.7319, -191.4047, -215.9445, -257.9047, -209.9251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-301.4744, -191.2093, -215.5811, -257.4316, -209.4764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-301.2474, -191.0311, -215.3130, -257.1056, -209.1167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-301.0582, -190.8153, -215.0698, -256.8029, -208.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-300.9152, -190.6066, -214.8934, -256.5830, -208.5854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-300.8240, -190.3979, -214.7952, -256.5199, -208.4084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-300.7032, -190.1915, -214.7514, -256.5084, -208.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-300.6645, -190.1010, -214.9220, -256.8254, -208.3364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-300.7614, -190.2195, -215.3780, -257.5933, -208.7503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-300.8150, -190.2920, -215.7517, -258.1589, -209.1004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-300.8967, -190.3942, -216.1427, -258.7240, -209.5089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-300.8937, -190.4474, -216.3447, -259.0033, -209.7484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-300.9423, -190.6495, -216.6368, -259.4051, -210.1540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-300.8785, -190.7913, -216.7025, -259.4708, -210.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-300.7366, -190.9212, -216.6277, -259.3343, -210.4273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-300.4785, -190.8560, -216.2715, -258.7898, -210.1895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-300.2153, -190.7818, -215.9301, -258.2890, -209.9149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-299.8544, -190.6067, -215.4636, -257.5971, -209.4198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-299.5196, -190.4493, -215.0060, -256.9096, -208.9560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-299.2897, -190.3324, -214.6770, -256.4102, -208.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-299.1585, -190.2176, -214.4656, -256.1400, -208.4099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-299.0260, -190.1321, -214.2584, -255.8876, -208.1916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-299.0294, -190.2351, -214.3444, -256.1156, -208.3175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-299.0681, -190.3131, -214.4428, -256.3650, -208.4436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-299.0610, -190.3250, -214.4263, -256.4193, -208.4478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-299.1153, -190.4678, -214.5789, -256.7535, -208.6552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-299.1137, -190.5197, -214.6232, -256.9155, -208.7057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-299.1154, -190.5419, -214.6707, -257.1034, -208.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-299.1736, -190.5954, -214.8162, -257.4483, -208.9521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-299.1664, -190.7355, -214.9303, -257.7734, -209.1102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-299.2034, -190.9028, -215.1237, -258.1969, -209.3496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-299.2224, -191.0754, -215.2768, -258.5322, -209.5421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-299.2666, -191.2084, -215.4289, -258.8288, -209.7787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-299.3447, -191.3575, -215.6209, -259.1791, -210.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-299.3510, -191.4673, -215.7205, -259.3894, -210.3062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-299.3707, -191.5514, -215.8250, -259.6349, -210.4823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-299.3022, -191.5349, -215.7990, -259.6764, -210.4944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-299.2705, -191.6292, -215.8558, -259.8624, -210.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-299.1923, -191.6636, -215.8620, -259.9429, -210.6474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-298.9846, -191.5920, -215.6762, -259.7163, -210.4515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-298.8731, -191.6722, -215.6694, -259.7690, -210.4604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-298.7467, -191.7536, -215.6204, -259.7744, -210.3972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-298.6367, -191.9012, -215.6145, -259.8406, -210.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-298.4773, -192.0313, -215.5668, -259.8180, -210.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-298.3320, -192.1799, -215.5354, -259.8293, -210.3845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-298.1561, -192.2374, -215.4274, -259.6973, -210.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-298.0303, -192.3625, -215.3672, -259.6300, -210.2886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-297.8361, -192.4318, -215.1301, -259.2747, -210.1285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-297.6303, -192.4192, -214.8746, -258.8873, -209.9135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-297.4150, -192.3550, -214.5840, -258.4382, -209.6680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-297.2791, -192.3803, -214.4076, -258.1881, -209.5401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-297.1545, -192.3786, -214.2055, -257.9133, -209.4268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-297.0113, -192.3401, -213.9533, -257.5458, -209.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-296.7865, -192.1714, -213.5810, -256.9696, -208.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-296.6493, -192.1442, -213.4240, -256.7549, -208.7978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-296.5568, -192.2444, -213.3809, -256.7628, -208.8464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-296.5266, -192.3916, -213.4299, -256.9227, -209.0418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-296.5647, -192.5790, -213.5331, -257.1929, -209.3271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-296.5791, -192.6471, -213.5935, -257.3494, -209.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-296.5755, -192.6261, -213.6453, -257.4603, -209.6814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-296.5817, -192.6020, -213.7116, -257.5827, -209.8284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-296.6076, -192.6082, -213.8246, -257.8049, -209.9873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-296.6910, -192.6728, -214.0159, -258.1465, -210.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-296.8472, -192.7349, -214.2590, -258.5700, -210.5625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-297.0650, -192.8914, -214.6475, -259.1821, -211.0457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-297.1387, -192.9463, -214.8845, -259.5374, -211.3079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-297.1906, -193.0694, -215.0968, -259.9093, -211.5112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-297.1341, -193.0840, -215.1323, -259.9819, -211.5142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-296.9653, -193.0279, -215.0333, -259.8635, -211.3295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-296.8147, -192.9499, -214.9661, -259.7918, -211.1574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-296.5364, -192.8128, -214.6992, -259.4317, -210.8249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0657, device='cuda:0', dtype=torch.float64)
tensor([-296.2387, -192.6145, -214.4387, -259.0114, -210.4484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-295.9625, -192.4035, -214.2046, -258.6190, -210.1168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-295.8004, -192.1814, -214.0288, -258.3175, -209.9206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-295.5075, -191.8886, -213.6796, -257.6797, -209.5356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-295.2604, -191.6631, -213.4581, -257.2479, -209.2598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-294.9668, -191.4153, -213.1511, -256.6827, -208.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-294.7131, -191.1980, -212.9478, -256.2521, -208.5977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-294.5498, -191.0309, -212.8360, -255.9964, -208.4444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-294.4269, -190.7746, -212.6644, -255.6562, -208.2145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-294.2788, -190.5925, -212.4841, -255.3021, -208.0171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-294.1199, -190.3808, -212.2751, -254.9023, -207.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-293.9438, -190.1619, -212.0522, -254.4725, -207.5046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-293.8633, -190.0057, -212.0113, -254.3797, -207.4299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-293.8351, -189.9275, -212.0328, -254.4373, -207.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-293.8446, -189.8723, -212.0789, -254.5357, -207.5286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-293.8037, -189.7938, -212.0996, -254.5730, -207.5555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-293.8643, -189.8909, -212.3035, -255.0178, -207.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-293.9286, -190.0153, -212.4973, -255.4329, -208.0885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-294.0157, -190.1009, -212.6595, -255.7770, -208.3430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-294.0739, -190.2013, -212.8193, -256.0995, -208.5780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-294.1495, -190.2624, -212.9382, -256.3381, -208.7475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-294.1021, -190.2412, -212.8798, -256.2500, -208.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-294.1377, -190.2262, -212.9121, -256.3091, -208.7688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-294.1098, -190.1134, -212.8836, -256.2624, -208.7253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-294.0584, -190.0604, -212.8479, -256.1830, -208.7282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-294.0337, -189.9753, -212.8472, -256.1389, -208.7614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-294.0187, -189.9184, -212.8704, -256.1810, -208.8072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-293.9637, -189.8439, -212.8985, -256.2468, -208.7794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-294.0279, -189.8512, -213.0997, -256.6098, -208.9934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-294.1095, -189.8548, -213.2530, -256.8891, -209.1796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-294.1792, -189.8808, -213.4376, -257.2355, -209.3723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-294.1456, -189.7706, -213.4547, -257.2906, -209.3212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-294.0828, -189.7002, -213.4313, -257.2659, -209.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-294.0236, -189.6544, -213.4178, -257.2354, -209.2229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-293.9435, -189.6338, -213.3617, -257.1347, -209.1650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-293.8180, -189.5497, -213.2340, -256.9381, -209.0008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-293.8543, -189.5263, -213.2722, -257.0425, -209.0087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-293.9024, -189.4841, -213.2795, -257.0609, -209.0039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-293.9271, -189.4454, -213.2748, -257.0612, -208.9457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-293.9531, -189.4078, -213.2825, -257.1014, -208.9235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-293.8974, -189.3154, -213.1449, -256.9437, -208.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-293.7562, -189.1179, -212.8968, -256.5690, -208.3211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-293.6553, -188.9238, -212.6747, -256.2195, -208.0104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-293.5507, -188.7225, -212.4417, -255.8624, -207.6846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-293.4725, -188.5432, -212.2710, -255.6090, -207.4137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-293.4097, -188.3869, -212.1342, -255.4114, -207.1710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-293.3797, -188.2185, -212.0353, -255.2537, -206.9890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-293.3303, -188.0992, -211.9035, -255.0624, -206.7903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-293.2699, -188.0637, -211.7421, -254.8382, -206.6032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-293.2101, -188.0813, -211.6045, -254.6709, -206.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0648, device='cuda:0', dtype=torch.float64)
tensor([-293.2188, -188.1550, -211.5995, -254.7420, -206.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-293.2454, -188.2105, -211.6452, -254.8885, -206.6182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-293.2766, -188.3310, -211.7262, -255.0975, -206.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-293.2809, -188.3895, -211.7648, -255.1903, -206.8929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-293.3071, -188.4700, -211.7982, -255.2911, -207.0134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-293.2900, -188.5199, -211.7747, -255.2789, -207.0201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-293.2112, -188.5153, -211.7114, -255.1788, -206.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-293.1107, -188.4983, -211.6126, -254.9961, -206.8080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-293.0281, -188.4631, -211.5361, -254.8459, -206.7254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-292.9442, -188.4527, -211.4321, -254.6701, -206.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-292.8573, -188.4599, -211.3526, -254.5595, -206.5962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-292.7966, -188.4464, -211.2886, -254.4883, -206.5527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-292.7587, -188.4326, -211.2354, -254.4588, -206.5231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-292.6907, -188.3657, -211.1586, -254.3752, -206.4120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-292.6661, -188.3666, -211.1269, -254.3838, -206.4222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-292.6900, -188.4250, -211.1731, -254.5598, -206.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-292.8342, -188.5266, -211.3654, -255.0446, -206.8990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-293.0076, -188.6562, -211.5934, -255.6090, -207.2326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-293.3148, -188.8667, -212.0468, -256.5526, -207.8441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-293.5567, -189.0556, -212.4229, -257.3109, -208.3639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-293.7245, -189.1583, -212.6800, -257.8264, -208.7125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-293.8804, -189.2589, -212.8853, -258.2529, -209.0063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-294.0263, -189.3022, -213.0689, -258.6301, -209.2596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-294.0590, -189.3476, -213.1383, -258.8214, -209.3562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-294.0484, -189.3653, -213.1441, -258.9098, -209.3747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-293.9503, -189.3477, -213.0357, -258.8184, -209.2262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-293.9124, -189.3826, -213.0269, -258.8780, -209.2017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-293.8006, -189.3779, -212.9247, -258.7933, -209.0716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-293.6377, -189.2767, -212.7228, -258.5771, -208.8047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-293.3651, -189.1206, -212.4027, -258.1292, -208.4250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-293.2527, -189.0812, -212.2842, -258.0297, -208.3290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-293.1405, -189.0221, -212.1443, -257.8565, -208.2522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-293.0085, -188.9036, -211.9647, -257.6280, -208.0701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-292.8479, -188.7760, -211.7237, -257.2909, -207.8224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-292.6674, -188.6326, -211.4794, -256.9400, -207.5217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-292.5270, -188.4427, -211.2657, -256.6128, -207.2610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-292.4357, -188.3005, -211.1224, -256.3969, -207.1305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-292.3629, -188.1206, -210.9479, -256.1034, -206.9926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-292.2772, -187.9106, -210.7289, -255.6726, -206.8306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-292.1688, -187.6904, -210.4828, -255.1604, -206.6141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-292.0726, -187.5089, -210.2673, -254.6955, -206.4226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-291.9993, -187.3785, -210.0893, -254.3081, -206.2923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-291.9425, -187.2337, -209.8664, -253.8116, -206.1381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-291.8306, -187.2112, -209.6498, -253.3336, -206.0163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-291.7393, -187.2115, -209.4838, -252.9793, -205.9223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-291.6567, -187.2348, -209.3617, -252.7502, -205.8560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-291.6332, -187.2060, -209.2866, -252.6166, -205.8235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-291.6298, -187.1698, -209.2702, -252.6251, -205.8623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-291.6157, -187.0830, -209.2125, -252.5257, -205.8354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-291.5868, -187.0856, -209.1931, -252.5518, -205.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-291.5770, -187.1341, -209.2407, -252.7761, -206.1315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-291.5637, -187.1872, -209.2818, -252.9738, -206.3202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-291.5931, -187.1969, -209.3658, -253.2603, -206.4892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-291.6270, -187.2029, -209.4941, -253.6121, -206.7025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-291.7223, -187.2321, -209.7257, -254.1864, -207.0537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-291.8251, -187.2613, -209.9283, -254.7174, -207.3825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-291.9832, -187.2978, -210.2299, -255.4444, -207.7760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-292.1126, -187.3353, -210.4815, -256.0612, -208.1022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-292.2324, -187.3787, -210.6898, -256.5961, -208.3670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-292.3594, -187.3761, -210.8716, -257.0728, -208.5790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-292.4988, -187.3782, -211.0358, -257.5228, -208.7673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-292.5610, -187.3283, -211.1000, -257.7977, -208.7696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-292.5274, -187.2409, -211.0238, -257.7916, -208.6340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-292.5108, -187.1823, -210.9829, -257.8577, -208.5322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-292.4555, -187.0983, -210.9023, -257.8141, -208.3513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-292.3770, -187.0206, -210.8121, -257.7242, -208.1630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-292.2835, -186.9102, -210.6663, -257.5172, -207.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-292.2055, -186.7995, -210.5488, -257.3601, -207.6776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-292.0679, -186.6626, -210.3530, -257.0820, -207.3246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-291.9117, -186.5253, -210.1440, -256.7598, -206.9931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-291.7231, -186.4404, -209.9340, -256.4260, -206.6738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-291.5096, -186.3640, -209.6501, -255.9550, -206.2834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-291.2650, -186.3041, -209.3341, -255.3747, -205.8803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-291.0698, -186.2558, -209.0844, -254.8966, -205.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-290.8941, -186.1771, -208.8539, -254.4296, -205.2204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-290.7794, -186.0424, -208.6236, -253.9278, -204.8836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-290.7052, -185.9265, -208.4374, -253.5333, -204.6094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-290.6754, -185.7918, -208.3523, -253.3685, -204.4546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-290.6445, -185.7069, -208.3228, -253.3728, -204.3906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-290.5965, -185.6260, -208.3182, -253.4096, -204.3642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-290.5567, -185.5493, -208.3720, -253.6059, -204.4434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-290.5638, -185.4480, -208.4499, -253.8262, -204.5383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-290.5618, -185.3830, -208.5673, -254.1902, -204.6808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-290.5818, -185.3323, -208.7022, -254.6133, -204.8665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-290.6190, -185.2899, -208.8368, -255.0292, -205.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-290.6483, -185.2557, -208.9495, -255.3948, -205.2496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-290.6994, -185.2070, -209.1384, -255.8833, -205.4847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-290.7443, -185.1716, -209.2950, -256.2962, -205.6805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-290.7927, -185.1419, -209.4544, -256.7159, -205.8561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-290.8466, -185.1194, -209.6194, -257.1686, -206.0396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-290.9166, -185.0774, -209.7988, -257.6679, -206.2081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-290.9177, -184.9786, -209.8180, -257.8633, -206.1665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-290.9176, -184.8474, -209.8022, -258.0020, -206.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-290.8894, -184.7034, -209.6903, -257.9452, -205.8454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-290.8367, -184.5807, -209.5490, -257.8212, -205.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-290.7886, -184.4444, -209.3766, -257.6302, -205.3257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-290.7043, -184.3416, -209.1377, -257.3150, -204.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-290.6337, -184.2743, -208.9261, -257.0105, -204.7078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-290.5833, -184.2160, -208.7229, -256.7248, -204.4461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-290.5395, -184.1697, -208.4602, -256.2975, -204.1101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-290.5132, -184.1590, -208.1874, -255.8279, -203.7999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-290.5112, -184.1497, -207.9326, -255.4029, -203.5205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-290.5058, -184.1701, -207.7184, -255.0796, -203.2885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-290.5115, -184.1962, -207.4957, -254.6923, -203.0400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-290.5517, -184.1902, -207.3377, -254.4253, -202.8865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-290.6130, -184.1763, -207.1882, -254.1456, -202.7604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-290.6780, -184.1773, -207.0264, -253.7998, -202.6368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-290.7727, -184.1992, -206.8413, -253.4298, -202.5001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-290.8499, -184.2375, -206.6918, -253.1487, -202.4763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-290.9247, -184.3010, -206.5309, -252.8649, -202.4167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-291.0401, -184.3692, -206.3622, -252.5464, -202.3179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-291.1839, -184.4358, -206.2018, -252.2495, -202.2082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-291.3376, -184.5198, -206.0594, -251.9861, -202.1318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-291.5172, -184.6306, -205.9189, -251.7522, -202.0563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-291.7016, -184.7466, -205.7837, -251.5262, -201.9956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-291.8379, -184.8266, -205.6893, -251.4401, -202.0066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-291.9070, -184.9049, -205.6112, -251.3819, -202.0766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-291.9250, -185.0163, -205.5374, -251.3131, -202.1468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-291.9562, -185.1191, -205.4537, -251.2303, -202.2476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-291.9504, -185.2037, -205.3981, -251.2099, -202.3419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-291.9625, -185.2980, -205.3174, -251.1030, -202.4794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-291.9368, -185.3241, -205.2852, -251.1288, -202.6543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-291.9395, -185.4273, -205.2045, -251.0067, -202.7869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-291.9275, -185.5394, -205.1172, -250.8861, -202.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-291.8905, -185.6363, -205.0600, -250.8680, -203.0543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-291.8371, -185.6603, -205.0607, -250.9767, -203.1739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-291.7648, -185.6643, -205.1019, -251.2065, -203.2858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-291.7402, -185.6565, -205.1329, -251.3894, -203.3680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-291.6752, -185.6388, -205.1725, -251.6259, -203.4656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-291.6196, -185.6399, -205.1959, -251.7995, -203.5425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-291.5678, -185.5652, -205.2974, -252.1275, -203.7572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-291.5062, -185.5339, -205.3764, -252.4120, -203.9456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-291.4740, -185.4919, -205.4460, -252.6796, -204.1043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-291.4769, -185.5003, -205.4616, -252.7746, -204.2355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-291.4562, -185.6069, -205.3818, -252.6360, -204.3033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-291.4618, -185.7186, -205.2771, -252.4104, -204.3172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-291.4806, -185.8368, -205.1653, -252.1809, -204.3228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-291.5081, -185.9307, -205.0962, -252.0503, -204.3982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-291.5561, -186.0340, -205.0051, -251.8748, -204.4803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-291.5989, -186.1650, -204.9072, -251.6799, -204.5514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-291.6275, -186.2240, -204.8724, -251.6668, -204.6763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-291.6664, -186.2979, -204.8098, -251.5833, -204.8029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-291.7698, -186.4309, -204.6911, -251.3508, -204.8856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-291.9046, -186.6536, -204.5096, -250.9570, -204.9316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-292.0540, -186.8647, -204.3263, -250.6014, -204.9420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-292.1787, -187.0440, -204.1740, -250.3175, -204.9864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-292.3019, -187.1656, -204.0789, -250.1690, -205.0879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-292.4900, -187.3302, -203.9459, -249.8888, -205.0962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-292.7030, -187.5848, -203.7643, -249.5244, -205.1054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-292.8915, -187.8814, -203.5770, -249.1691, -205.1241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-293.0611, -188.2092, -203.3933, -248.8306, -205.1753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-293.2610, -188.6042, -203.1830, -248.4552, -205.2204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-293.4176, -188.9417, -203.0152, -248.1967, -205.3005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-293.5694, -189.2601, -202.8531, -247.9443, -205.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-293.6846, -189.5753, -202.7148, -247.7417, -205.4817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-293.8147, -189.8899, -202.5660, -247.5086, -205.5702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-293.9872, -190.3011, -202.3949, -247.1880, -205.6786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-294.1193, -190.6786, -202.2479, -246.9474, -205.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-294.0459, -190.8366, -202.1948, -246.9708, -206.0196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-294.0365, -191.0207, -202.1453, -246.9563, -206.2115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-294.0195, -191.2033, -202.1052, -246.9529, -206.4588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-294.1294, -191.5594, -201.9973, -246.7561, -206.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-294.2004, -191.9138, -201.8962, -246.5919, -206.9648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-294.2256, -192.2891, -201.7978, -246.4247, -207.2203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-294.3266, -192.6724, -201.7060, -246.2109, -207.4984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-294.4693, -193.0615, -201.6097, -245.9831, -207.7901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-294.6248, -193.4555, -201.5156, -245.7873, -208.0557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-294.9543, -194.0407, -201.3511, -245.3902, -208.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-295.2854, -194.6255, -201.1866, -244.9760, -208.5825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-295.6101, -195.2249, -201.0197, -244.5623, -208.8581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-295.7644, -195.5662, -200.9303, -244.4059, -209.0443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-295.9370, -195.8584, -200.8577, -244.2818, -209.2264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-296.0840, -196.1006, -200.7971, -244.1842, -209.4124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-296.3121, -196.4676, -200.6935, -243.9881, -209.6188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-296.5719, -196.7697, -200.5940, -243.8289, -209.7901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-296.7227, -196.9059, -200.5420, -243.7781, -209.9243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-296.8638, -197.0136, -200.4852, -243.7541, -210.0457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-296.9694, -197.0996, -200.4439, -243.7484, -210.1630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-297.0292, -197.0933, -200.4244, -243.7987, -210.2786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-297.1031, -197.1773, -200.3859, -243.8094, -210.3662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-297.1451, -197.1588, -200.3599, -243.8601, -210.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-297.2153, -197.1824, -200.3288, -243.8708, -210.3224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-297.1962, -197.1171, -200.3152, -243.9341, -210.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-297.2500, -197.0898, -200.2989, -243.9761, -210.2389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-297.3770, -197.1949, -200.2434, -243.9647, -210.2057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-297.5405, -197.2770, -200.1906, -243.9187, -210.1903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-297.8124, -197.4946, -200.0915, -243.7745, -210.1920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-298.1431, -197.8079, -199.9625, -243.6097, -210.2010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-298.3550, -198.0237, -199.8681, -243.5347, -210.2192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-298.6725, -198.4382, -199.7267, -243.3446, -210.2598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-298.7921, -198.6329, -199.6440, -243.3188, -210.2480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-298.8379, -198.8228, -199.5626, -243.3134, -210.2249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-298.9107, -199.1423, -199.4517, -243.2458, -210.1911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-299.0121, -199.5495, -199.3269, -243.1177, -210.1879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-299.1756, -200.0418, -199.1796, -242.9403, -210.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-299.3984, -200.6525, -199.0166, -242.7001, -210.3581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-299.5686, -201.1255, -198.8887, -242.5768, -210.4552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-299.9154, -201.8477, -198.7087, -242.3176, -210.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-300.0520, -202.3679, -198.5843, -242.1703, -210.8035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-300.1321, -202.7832, -198.4772, -242.0779, -210.9426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-300.3011, -203.3177, -198.3538, -241.9198, -211.1343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-300.4823, -203.8509, -198.2312, -241.7252, -211.3768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-300.6442, -204.2532, -198.1388, -241.5855, -211.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-300.7658, -204.4988, -198.0757, -241.5340, -211.7760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-300.7874, -204.5715, -198.0462, -241.5538, -211.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-300.8600, -204.6440, -198.0096, -241.5429, -212.1222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-300.9819, -204.7583, -197.9781, -241.5099, -212.3336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-301.2199, -204.9851, -197.9262, -241.3967, -212.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-301.4195, -205.1172, -197.8861, -241.3462, -212.8226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-301.5963, -205.2167, -197.8436, -241.3009, -213.0593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-301.7296, -205.3593, -197.7998, -241.2701, -213.2972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-302.0162, -205.7363, -197.7123, -241.1043, -213.6205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-302.2573, -206.0597, -197.6426, -240.9902, -213.8939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-302.5597, -206.4578, -197.5534, -240.8614, -214.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-302.7946, -206.6918, -197.4794, -240.8168, -214.3224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-303.1335, -207.0242, -197.3889, -240.6992, -214.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-303.3517, -207.3067, -197.3068, -240.6199, -214.7619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-303.7328, -207.7681, -197.1879, -240.4823, -215.0272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-304.2689, -208.6067, -197.0246, -240.2412, -215.4063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-304.9077, -209.5823, -196.8425, -239.9621, -215.8341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-305.4615, -210.4705, -196.6858, -239.7344, -216.2549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-306.0020, -211.2593, -196.5545, -239.5385, -216.6579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-306.6371, -212.1561, -196.4126, -239.3267, -217.1322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-307.0782, -212.8195, -196.3065, -239.2017, -217.5087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-307.3557, -213.3320, -196.2241, -239.1387, -217.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-307.7023, -213.8953, -196.1393, -239.0595, -218.1702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-308.1001, -214.5396, -196.0433, -238.9524, -218.5587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-308.6332, -215.3181, -195.9445, -238.8006, -218.9979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-309.2329, -216.1684, -195.8524, -238.6235, -219.5030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-309.8922, -217.1228, -195.7548, -238.4560, -220.0246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-310.4996, -218.0313, -195.6591, -238.3282, -220.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-311.0580, -218.9745, -195.5593, -238.2178, -220.9391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-311.6909, -220.0589, -195.4524, -238.0555, -221.4381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-312.1470, -220.9691, -195.3918, -238.0012, -221.9065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-312.5075, -221.7794, -195.3367, -237.9602, -222.3356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-312.6598, -222.3821, -195.3050, -237.9842, -222.6890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-312.7417, -222.9607, -195.2966, -238.0250, -223.0899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-312.8402, -223.6224, -195.2868, -238.0631, -223.5113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-313.0065, -224.2947, -195.2750, -238.1010, -223.9462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-313.0888, -224.8249, -195.2815, -238.1631, -224.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-313.3737, -225.4416, -195.2697, -238.2039, -224.7946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-313.5805, -226.0843, -195.2655, -238.2634, -225.2307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-313.8898, -226.8361, -195.2530, -238.2974, -225.7234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-314.2586, -227.7819, -195.2186, -238.3033, -226.2712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-314.5701, -228.6797, -195.1916, -238.3219, -226.8128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-314.7968, -229.4752, -195.1847, -238.3751, -227.3234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-315.2763, -230.4723, -195.1450, -238.3746, -227.8707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-315.7964, -231.5448, -195.1104, -238.3554, -228.4572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-316.4228, -232.7017, -195.0467, -238.3030, -229.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-316.9603, -233.7971, -194.9865, -238.2607, -229.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-317.4347, -234.8595, -194.9312, -238.2220, -230.3114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-317.8152, -235.8791, -194.9118, -238.2234, -230.9947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-318.2654, -236.9665, -194.8821, -238.2395, -231.6494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-318.6014, -237.9391, -194.8565, -238.2765, -232.2082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-318.9349, -238.9563, -194.8321, -238.3104, -232.8026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-319.2588, -239.8431, -194.8208, -238.3481, -233.3677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-319.6327, -240.8004, -194.7955, -238.4015, -233.9477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-319.9393, -241.6811, -194.7689, -238.4701, -234.4839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-320.2613, -242.5247, -194.7572, -238.5476, -235.0612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-320.5270, -243.4127, -194.7511, -238.6477, -235.6443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-320.8272, -244.4483, -194.7302, -238.7487, -236.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-321.1076, -245.4281, -194.7173, -238.8540, -236.9385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-321.4869, -246.5339, -194.7108, -238.9332, -237.6271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-321.9095, -247.7485, -194.7067, -239.0060, -238.3700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-322.4340, -249.1441, -194.6932, -239.0824, -239.2029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-322.9952, -250.5463, -194.6927, -239.1680, -240.0851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-323.6284, -252.1234, -194.6949, -239.2494, -241.0476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-324.0080, -253.3746, -194.7162, -239.3833, -241.8724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-324.6413, -254.9971, -194.7404, -239.5109, -242.8816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-325.1654, -256.5156, -194.7599, -239.6674, -243.8087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-325.8623, -258.2930, -194.7626, -239.8263, -244.8495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-326.5137, -260.0333, -194.7716, -240.0104, -245.8731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-327.1951, -261.8897, -194.7953, -240.2037, -247.0017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-327.9127, -263.7097, -194.8094, -240.4182, -248.1037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-328.7368, -265.5917, -194.8239, -240.6287, -249.2878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-329.4663, -267.4290, -194.8724, -240.8575, -250.5092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-330.1744, -269.4273, -194.9469, -241.1104, -251.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-330.9499, -271.6420, -195.0418, -241.4064, -253.2747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-331.6505, -273.8774, -195.1614, -241.7484, -254.7476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-332.2716, -276.0132, -195.2781, -242.1058, -256.1822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-332.8684, -278.1656, -195.4033, -242.4713, -257.6272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-333.3523, -280.2592, -195.5412, -242.8362, -259.0509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-333.6518, -282.0725, -195.6847, -243.1924, -260.3531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-333.9686, -284.0647, -195.8591, -243.5569, -261.7687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-334.2569, -285.9395, -196.0171, -243.9162, -263.0956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-334.5808, -287.9127, -196.1953, -244.2989, -264.5035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-334.6119, -289.4702, -196.3488, -244.6674, -265.6555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0449, device='cuda:0', dtype=torch.float64)
tensor([-334.5159, -290.9611, -196.5121, -245.0322, -266.8001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-334.1758, -292.1940, -196.6654, -245.3859, -267.7994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-334.0444, -293.4939, -196.8093, -245.7221, -268.8321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-333.8956, -294.6657, -196.9353, -246.0556, -269.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-333.6970, -296.0352, -197.0829, -246.4175, -270.8293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-333.4579, -297.3789, -197.1971, -246.7795, -271.8167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-333.3042, -298.9156, -197.3042, -247.1612, -272.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-333.0586, -300.5209, -197.4216, -247.5664, -274.0163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-332.7354, -301.9314, -197.5335, -247.9444, -275.0214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-332.3720, -303.3665, -197.6496, -248.3233, -276.0261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-332.1721, -305.2309, -197.7858, -248.7188, -277.3033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-332.0028, -307.0577, -197.9307, -249.1178, -278.5365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-331.7757, -308.7198, -198.0446, -249.4986, -279.6558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-331.4402, -310.5053, -198.1567, -249.8967, -280.8542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-330.9779, -311.9663, -198.2511, -250.2674, -281.8875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-330.6225, -313.4507, -198.3421, -250.6381, -282.9348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-330.4008, -315.1171, -198.4504, -251.0021, -284.1071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-330.2042, -316.7080, -198.5475, -251.3570, -285.2155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-329.6850, -318.1602, -198.6428, -251.7108, -286.2364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-329.2514, -319.8093, -198.7591, -252.0673, -287.3685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-328.9961, -321.3853, -198.8947, -252.4238, -288.4942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-328.6380, -322.8219, -199.0228, -252.7679, -289.5628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-328.1781, -324.0089, -199.1284, -253.0983, -290.4825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-327.4968, -325.6045, -199.2833, -253.4652, -291.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-326.7680, -327.3951, -199.4655, -253.8514, -292.8832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-326.1832, -329.2013, -199.6583, -254.2406, -294.1428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-325.3482, -331.2032, -199.8541, -254.6287, -295.5228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-324.6107, -333.5964, -200.1217, -255.0856, -297.1394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-323.7703, -335.8441, -200.3829, -255.5277, -298.6336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-323.3417, -338.0771, -200.6279, -255.9627, -300.1226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-322.9670, -339.9948, -200.8184, -256.3667, -301.4810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-322.4285, -341.7277, -200.9694, -256.7431, -302.7251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-321.8025, -343.7243, -201.1394, -257.1513, -304.1469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-321.1551, -345.5459, -201.2973, -257.5464, -305.4570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-320.3300, -347.5670, -201.4885, -257.9591, -306.9122],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_043009.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(212.9317, device='cuda:0', dtype=torch.float64)
tensor([-3.1008, -7.4002, -5.1983, -7.9684, -8.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(44.9869, device='cuda:0', dtype=torch.float64)
tensor([-2.5953, -5.8665, -4.8405, -5.6569, -6.6451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.9690, device='cuda:0', dtype=torch.float64)
tensor([-2.9954, -4.0338, -5.9446, -6.4683, -8.9995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.3426, device='cuda:0', dtype=torch.float64)
tensor([ -7.3821,  -3.8057,  -7.2468,  -7.6801, -11.8896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(88.9381, device='cuda:0', dtype=torch.float64)
tensor([ -6.9488,  -4.4682,  -7.5298,  -8.1693, -12.8962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(89.5649, device='cuda:0', dtype=torch.float64)
tensor([ -3.3482,  -5.2421,  -6.5257,  -7.0107, -11.4060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.1011, device='cuda:0', dtype=torch.float64)
tensor([-2.5554, -5.4401, -5.3654, -5.7841, -8.9825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.6433, device='cuda:0', dtype=torch.float64)
tensor([-2.6035, -5.0475, -4.7744, -5.2518, -7.5296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.6480, device='cuda:0', dtype=torch.float64)
tensor([-2.7597, -4.7712, -4.6315, -5.2798, -6.8935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.5402, device='cuda:0', dtype=torch.float64)
tensor([-2.9198, -4.9916, -4.7155, -5.8032, -6.4904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.9497, device='cuda:0', dtype=torch.float64)
tensor([-2.9610, -5.6057, -4.8581, -6.7576, -6.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(31.9525, device='cuda:0', dtype=torch.float64)
tensor([-2.9521, -6.3220, -4.8775, -7.1970, -6.3777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.6583, device='cuda:0', dtype=torch.float64)
tensor([-2.9446, -5.7933, -4.6792, -6.7201, -6.5454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.4562, device='cuda:0', dtype=torch.float64)
tensor([-2.6693, -4.9231, -4.4112, -6.0308, -6.6037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.8248, device='cuda:0', dtype=torch.float64)
tensor([-2.5014, -4.4771, -4.2738, -5.5596, -6.5974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.4457, device='cuda:0', dtype=torch.float64)
tensor([-2.3738, -4.0863, -4.3484, -5.3747, -6.6331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.2023, device='cuda:0', dtype=torch.float64)
tensor([-2.2592, -3.7745, -4.6263, -5.4849, -6.7011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.1777, device='cuda:0', dtype=torch.float64)
tensor([-2.1717, -3.5548, -5.0161, -5.8693, -6.8087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8171, device='cuda:0', dtype=torch.float64)
tensor([-2.1329, -3.4022, -5.3790, -6.2576, -6.9614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.9810, device='cuda:0', dtype=torch.float64)
tensor([-2.1252, -3.3006, -5.6029, -6.2904, -7.0635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.4320, device='cuda:0', dtype=torch.float64)
tensor([-2.1008, -3.2508, -5.6595, -5.9790, -6.9661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.7225, device='cuda:0', dtype=torch.float64)
tensor([-2.0730, -3.2641, -5.5690, -5.6003, -6.6382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7004, device='cuda:0', dtype=torch.float64)
tensor([-2.0764, -3.3455, -5.3708, -5.3411, -6.2790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.1231, device='cuda:0', dtype=torch.float64)
tensor([-2.1233, -3.4695, -5.1196, -5.1963, -6.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.5543, device='cuda:0', dtype=torch.float64)
tensor([-2.2004, -3.5997, -4.8727, -5.0886, -5.9825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.3299, device='cuda:0', dtype=torch.float64)
tensor([-2.2775, -3.7091, -4.6623, -4.9708, -5.9913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.6101, device='cuda:0', dtype=torch.float64)
tensor([-2.3335, -3.7827, -4.4944, -4.8525, -6.0335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.3662, -3.8161, -4.3662, -4.7302, -6.0678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.4146, device='cuda:0', dtype=torch.float64)
tensor([-2.3790, -3.8160, -4.2766, -4.5938, -6.0755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.9243, device='cuda:0', dtype=torch.float64)
tensor([-2.3771, -3.7968, -4.2293, -4.4673, -6.0621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.0322, device='cuda:0', dtype=torch.float64)
tensor([-2.3665, -3.7702, -4.2290, -4.3904, -6.0397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0513, device='cuda:0', dtype=torch.float64)
tensor([-2.3528, -3.7452, -4.2719, -4.3838, -6.0162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4522, device='cuda:0', dtype=torch.float64)
tensor([-2.3360, -3.7309, -4.3332, -4.4326, -5.9981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2120, device='cuda:0', dtype=torch.float64)
tensor([-2.3144, -3.7345, -4.3704, -4.5047, -5.9883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1816, device='cuda:0', dtype=torch.float64)
tensor([-2.2874, -3.7513, -4.3550, -4.5800, -5.9839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7630, device='cuda:0', dtype=torch.float64)
tensor([-2.2580, -3.7599, -4.3002, -4.6623, -5.9767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6211, device='cuda:0', dtype=torch.float64)
tensor([-2.2321, -3.7476, -4.2432, -4.7631, -5.9597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3317, device='cuda:0', dtype=torch.float64)
tensor([-2.2148, -3.7264, -4.2124, -4.8833, -5.9340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3193, device='cuda:0', dtype=torch.float64)
tensor([-2.2076, -3.7118, -4.2139, -5.0097, -5.9092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8822, device='cuda:0', dtype=torch.float64)
tensor([-2.2078, -3.7064, -4.2423, -5.1227, -5.8937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8478, device='cuda:0', dtype=torch.float64)
tensor([-2.2095, -3.7021, -4.2873, -5.2050, -5.8865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1026, device='cuda:0', dtype=torch.float64)
tensor([-2.2086, -3.6873, -4.3358, -5.2423, -5.8827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3341, device='cuda:0', dtype=torch.float64)
tensor([-2.2043, -3.6585, -4.3771, -5.2315, -5.8803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3634, device='cuda:0', dtype=torch.float64)
tensor([-2.1982, -3.6238, -4.4030, -5.1789, -5.8815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1296, device='cuda:0', dtype=torch.float64)
tensor([-2.1918, -3.5946, -4.4039, -5.0959, -5.8874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6091, device='cuda:0', dtype=torch.float64)
tensor([-2.1853, -3.5760, -4.3735, -4.9975, -5.8957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0765, device='cuda:0', dtype=torch.float64)
tensor([-2.1791, -3.5670, -4.3154, -4.8990, -5.9013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7207, device='cuda:0', dtype=torch.float64)
tensor([-2.1731, -3.5645, -4.2461, -4.8133, -5.9004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7062, device='cuda:0', dtype=torch.float64)
tensor([-2.1686, -3.5659, -4.1808, -4.7435, -5.8903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8761, device='cuda:0', dtype=torch.float64)
tensor([-2.1672, -3.5697, -4.1265, -4.6860, -5.8714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9266, device='cuda:0', dtype=torch.float64)
tensor([-2.1707, -3.5759, -4.0848, -4.6396, -5.8465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6735, device='cuda:0', dtype=torch.float64)
tensor([-2.1803, -3.5852, -4.0546, -4.6082, -5.8188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3154, device='cuda:0', dtype=torch.float64)
tensor([-2.1940, -3.5958, -4.0339, -4.5969, -5.7902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1445, device='cuda:0', dtype=torch.float64)
tensor([-2.2087, -3.6035, -4.0220, -4.6038, -5.7622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1311, device='cuda:0', dtype=torch.float64)
tensor([-2.2203, -3.6044, -4.0221, -4.6226, -5.7369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0897, device='cuda:0', dtype=torch.float64)
tensor([-2.2270, -3.5965, -4.0367, -4.6470, -5.7159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0323, device='cuda:0', dtype=torch.float64)
tensor([-2.2278, -3.5806, -4.0653, -4.6727, -5.6994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9772, device='cuda:0', dtype=torch.float64)
tensor([-2.2242, -3.5601, -4.1026, -4.6973, -5.6880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8167, device='cuda:0', dtype=torch.float64)
tensor([-2.2179, -3.5384, -4.1431, -4.7181, -5.6804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6598, device='cuda:0', dtype=torch.float64)
tensor([-2.2104, -3.5194, -4.1806, -4.7334, -5.6755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6018, device='cuda:0', dtype=torch.float64)
tensor([-2.2028, -3.5064, -4.2065, -4.7418, -5.6709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6758, device='cuda:0', dtype=torch.float64)
tensor([-2.1956, -3.4996, -4.2124, -4.7430, -5.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7961, device='cuda:0', dtype=torch.float64)
tensor([-2.1898, -3.4974, -4.1925, -4.7376, -5.6549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8364, device='cuda:0', dtype=torch.float64)
tensor([-2.1861, -3.4970, -4.1509, -4.7271, -5.6459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7589, device='cuda:0', dtype=torch.float64)
tensor([-2.1850, -3.4964, -4.1015, -4.7126, -5.6389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5266, device='cuda:0', dtype=torch.float64)
tensor([-2.1858, -3.4937, -4.0576, -4.6974, -5.6348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3582, device='cuda:0', dtype=torch.float64)
tensor([-2.1878, -3.4890, -4.0278, -4.6840, -5.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3160, device='cuda:0', dtype=torch.float64)
tensor([-2.1905, -3.4842, -4.0143, -4.6735, -5.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4633, device='cuda:0', dtype=torch.float64)
tensor([-2.1931, -3.4806, -4.0167, -4.6664, -5.6379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5714, device='cuda:0', dtype=torch.float64)
tensor([-2.1952, -3.4783, -4.0319, -4.6620, -5.6411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4698, device='cuda:0', dtype=torch.float64)
tensor([-2.1968, -3.4776, -4.0546, -4.6607, -5.6430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3021, device='cuda:0', dtype=torch.float64)
tensor([-2.1979, -3.4769, -4.0773, -4.6626, -5.6423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2253, device='cuda:0', dtype=torch.float64)
tensor([-2.1981, -3.4748, -4.0927, -4.6659, -5.6394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2668, device='cuda:0', dtype=torch.float64)
tensor([-2.1971, -3.4697, -4.0971, -4.6690, -5.6350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2960, device='cuda:0', dtype=torch.float64)
tensor([-2.1958, -3.4624, -4.0922, -4.6698, -5.6299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1952, device='cuda:0', dtype=torch.float64)
tensor([-2.1947, -3.4556, -4.0814, -4.6683, -5.6250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1415, device='cuda:0', dtype=torch.float64)
tensor([-2.1938, -3.4500, -4.0685, -4.6661, -5.6200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1128, device='cuda:0', dtype=torch.float64)
tensor([-2.1931, -3.4463, -4.0557, -4.6640, -5.6148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0742, device='cuda:0', dtype=torch.float64)
tensor([-2.1928, -3.4458, -4.0453, -4.6597, -5.6104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0703, device='cuda:0', dtype=torch.float64)
tensor([-2.1934, -3.4477, -4.0369, -4.6537, -5.6062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0650, device='cuda:0', dtype=torch.float64)
tensor([-2.1942, -3.4502, -4.0318, -4.6455, -5.6022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0891, device='cuda:0', dtype=torch.float64)
tensor([-2.1945, -3.4513, -4.0284, -4.6370, -5.5971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0623, device='cuda:0', dtype=torch.float64)
tensor([-2.1940, -3.4509, -4.0258, -4.6281, -5.5917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0582, device='cuda:0', dtype=torch.float64)
tensor([-2.1923, -3.4499, -4.0249, -4.6213, -5.5849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0486, device='cuda:0', dtype=torch.float64)
tensor([-2.1905, -3.4489, -4.0250, -4.6148, -5.5777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9986, device='cuda:0', dtype=torch.float64)
tensor([-2.1893, -3.4477, -4.0259, -4.6091, -5.5708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0097, device='cuda:0', dtype=torch.float64)
tensor([-2.1885, -3.4461, -4.0274, -4.6050, -5.5650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0327, device='cuda:0', dtype=torch.float64)
tensor([-2.1873, -3.4443, -4.0288, -4.6038, -5.5592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-2.1855, -3.4421, -4.0280, -4.6056, -5.5537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9917, device='cuda:0', dtype=torch.float64)
tensor([-2.1820, -3.4385, -4.0251, -4.6116, -5.5473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-2.1774, -3.4350, -4.0182, -4.6201, -5.5414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9548, device='cuda:0', dtype=torch.float64)
tensor([-2.1716, -3.4310, -4.0106, -4.6299, -5.5363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-2.1656, -3.4275, -4.0052, -4.6398, -5.5326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9139, device='cuda:0', dtype=torch.float64)
tensor([-2.1605, -3.4245, -4.0036, -4.6480, -5.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9176, device='cuda:0', dtype=torch.float64)
tensor([-2.1580, -3.4220, -4.0046, -4.6525, -5.5292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9218, device='cuda:0', dtype=torch.float64)
tensor([-2.1576, -3.4203, -4.0071, -4.6512, -5.5287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9137, device='cuda:0', dtype=torch.float64)
tensor([-2.1594, -3.4195, -4.0102, -4.6463, -5.5277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9220, device='cuda:0', dtype=torch.float64)
tensor([-2.1624, -3.4189, -4.0110, -4.6401, -5.5252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9334, device='cuda:0', dtype=torch.float64)
tensor([-2.1656, -3.4180, -4.0097, -4.6346, -5.5205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9125, device='cuda:0', dtype=torch.float64)
tensor([-2.1683, -3.4168, -4.0049, -4.6294, -5.5142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8760, device='cuda:0', dtype=torch.float64)
tensor([-2.1710, -3.4161, -3.9984, -4.6234, -5.5086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9168, device='cuda:0', dtype=torch.float64)
tensor([-2.1730, -3.4160, -3.9910, -4.6180, -5.5047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8953, device='cuda:0', dtype=torch.float64)
tensor([-2.1738, -3.4152, -3.9856, -4.6148, -5.5018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([-2.1740, -3.4140, -3.9806, -4.6122, -5.4988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8703, device='cuda:0', dtype=torch.float64)
tensor([-2.1719, -3.4112, -3.9768, -4.6122, -5.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8696, device='cuda:0', dtype=torch.float64)
tensor([-2.1685, -3.4073, -3.9728, -4.6145, -5.4903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8570, device='cuda:0', dtype=torch.float64)
tensor([-2.1645, -3.4017, -3.9697, -4.6178, -5.4843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8535, device='cuda:0', dtype=torch.float64)
tensor([-2.1611, -3.3959, -3.9686, -4.6205, -5.4763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-2.1597, -3.3912, -3.9684, -4.6215, -5.4675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8792, device='cuda:0', dtype=torch.float64)
tensor([-2.1603, -3.3887, -3.9683, -4.6181, -5.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8879, device='cuda:0', dtype=torch.float64)
tensor([-2.1622, -3.3879, -3.9677, -4.6119, -5.4561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8510, device='cuda:0', dtype=torch.float64)
tensor([-2.1651, -3.3880, -3.9664, -4.6045, -5.4517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8684, device='cuda:0', dtype=torch.float64)
tensor([-2.1666, -3.3864, -3.9662, -4.5989, -5.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8554, device='cuda:0', dtype=torch.float64)
tensor([-2.1667, -3.3836, -3.9663, -4.5952, -5.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8677, device='cuda:0', dtype=torch.float64)
tensor([-2.1658, -3.3815, -3.9657, -4.5938, -5.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8469, device='cuda:0', dtype=torch.float64)
tensor([-2.1648, -3.3808, -3.9619, -4.5929, -5.4399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-2.1646, -3.3802, -3.9543, -4.5906, -5.4380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8543, device='cuda:0', dtype=torch.float64)
tensor([-2.1651, -3.3810, -3.9469, -4.5863, -5.4359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8440, device='cuda:0', dtype=torch.float64)
tensor([-2.1659, -3.3815, -3.9417, -4.5803, -5.4344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8625, device='cuda:0', dtype=torch.float64)
tensor([-2.1663, -3.3811, -3.9390, -4.5734, -5.4309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8425, device='cuda:0', dtype=torch.float64)
tensor([-2.1654, -3.3790, -3.9383, -4.5680, -5.4268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8683, device='cuda:0', dtype=torch.float64)
tensor([-2.1640, -3.3763, -3.9386, -4.5642, -5.4204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-2.1625, -3.3738, -3.9365, -4.5619, -5.4128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8320, device='cuda:0', dtype=torch.float64)
tensor([-2.1616, -3.3716, -3.9341, -4.5599, -5.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8771, device='cuda:0', dtype=torch.float64)
tensor([-2.1611, -3.3706, -3.9341, -4.5580, -5.4027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8493, device='cuda:0', dtype=torch.float64)
tensor([-2.1604, -3.3704, -3.9352, -4.5576, -5.3995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8484, device='cuda:0', dtype=torch.float64)
tensor([-2.1592, -3.3691, -3.9382, -4.5586, -5.3984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-2.1565, -3.3663, -3.9398, -4.5628, -5.3955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8305, device='cuda:0', dtype=torch.float64)
tensor([-2.1541, -3.3635, -3.9378, -4.5662, -5.3907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8745, device='cuda:0', dtype=torch.float64)
tensor([-2.1518, -3.3613, -3.9326, -4.5682, -5.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8739, device='cuda:0', dtype=torch.float64)
tensor([-2.1512, -3.3595, -3.9228, -4.5651, -5.3770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8622, device='cuda:0', dtype=torch.float64)
tensor([-2.1523, -3.3571, -3.9132, -4.5586, -5.3723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8414, device='cuda:0', dtype=torch.float64)
tensor([-2.1541, -3.3557, -3.9064, -4.5508, -5.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8542, device='cuda:0', dtype=torch.float64)
tensor([-2.1555, -3.3548, -3.9024, -4.5447, -5.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([-2.1562, -3.3548, -3.9003, -4.5412, -5.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8724, device='cuda:0', dtype=torch.float64)
tensor([-2.1564, -3.3553, -3.9000, -4.5380, -5.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8671, device='cuda:0', dtype=torch.float64)
tensor([-2.1560, -3.3552, -3.9001, -4.5351, -5.3429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8838, device='cuda:0', dtype=torch.float64)
tensor([-2.1554, -3.3557, -3.8992, -4.5341, -5.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9263, device='cuda:0', dtype=torch.float64)
tensor([-2.1548, -3.3556, -3.8981, -4.5336, -5.3332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8694, device='cuda:0', dtype=torch.float64)
tensor([-2.1538, -3.3571, -3.8979, -4.5336, -5.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9076, device='cuda:0', dtype=torch.float64)
tensor([-2.1536, -3.3575, -3.8962, -4.5315, -5.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9339, device='cuda:0', dtype=torch.float64)
tensor([-2.1529, -3.3565, -3.8956, -4.5285, -5.3238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8703, device='cuda:0', dtype=torch.float64)
tensor([-2.1515, -3.3540, -3.8965, -4.5276, -5.3202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8580, device='cuda:0', dtype=torch.float64)
tensor([-2.1493, -3.3510, -3.8984, -4.5276, -5.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8581, device='cuda:0', dtype=torch.float64)
tensor([-2.1471, -3.3466, -3.8991, -4.5283, -5.3125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-2.1450, -3.3437, -3.8976, -4.5280, -5.3083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8601, device='cuda:0', dtype=torch.float64)
tensor([-2.1451, -3.3407, -3.8944, -4.5267, -5.3030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8520, device='cuda:0', dtype=torch.float64)
tensor([-2.1465, -3.3396, -3.8888, -4.5232, -5.2982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8628, device='cuda:0', dtype=torch.float64)
tensor([-2.1485, -3.3400, -3.8836, -4.5168, -5.2941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8358, device='cuda:0', dtype=torch.float64)
tensor([-2.1496, -3.3399, -3.8795, -4.5104, -5.2910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9088, device='cuda:0', dtype=torch.float64)
tensor([-2.1493, -3.3384, -3.8779, -4.5062, -5.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8346, device='cuda:0', dtype=torch.float64)
tensor([-2.1487, -3.3388, -3.8780, -4.5039, -5.2828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8699, device='cuda:0', dtype=torch.float64)
tensor([-2.1470, -3.3373, -3.8791, -4.5027, -5.2792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9408, device='cuda:0', dtype=torch.float64)
tensor([-2.1459, -3.3344, -3.8801, -4.5004, -5.2769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8681, device='cuda:0', dtype=torch.float64)
tensor([-2.1442, -3.3315, -3.8801, -4.5002, -5.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8378, device='cuda:0', dtype=torch.float64)
tensor([-2.1428, -3.3284, -3.8763, -4.4996, -5.2694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8389, device='cuda:0', dtype=torch.float64)
tensor([-2.1426, -3.3256, -3.8693, -4.4984, -5.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8314, device='cuda:0', dtype=torch.float64)
tensor([-2.1418, -3.3224, -3.8636, -4.4993, -5.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8496, device='cuda:0', dtype=torch.float64)
tensor([-2.1416, -3.3202, -3.8592, -4.4986, -5.2553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8877, device='cuda:0', dtype=torch.float64)
tensor([-2.1415, -3.3173, -3.8583, -4.4986, -5.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8645, device='cuda:0', dtype=torch.float64)
tensor([-2.1420, -3.3158, -3.8585, -4.4977, -5.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8212, device='cuda:0', dtype=torch.float64)
tensor([-2.1408, -3.3139, -3.8579, -4.4967, -5.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8294, device='cuda:0', dtype=torch.float64)
tensor([-2.1402, -3.3144, -3.8561, -4.4940, -5.2434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8496, device='cuda:0', dtype=torch.float64)
tensor([-2.1405, -3.3172, -3.8555, -4.4891, -5.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8254, device='cuda:0', dtype=torch.float64)
tensor([-2.1419, -3.3196, -3.8542, -4.4848, -5.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8019, device='cuda:0', dtype=torch.float64)
tensor([-2.1431, -3.3210, -3.8543, -4.4834, -5.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-2.1426, -3.3172, -3.8571, -4.4871, -5.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8111, device='cuda:0', dtype=torch.float64)
tensor([-2.1410, -3.3099, -3.8584, -4.4905, -5.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8567, device='cuda:0', dtype=torch.float64)
tensor([-2.1398, -3.3032, -3.8574, -4.4910, -5.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7950, device='cuda:0', dtype=torch.float64)
tensor([-2.1380, -3.2990, -3.8534, -4.4872, -5.2191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8196, device='cuda:0', dtype=torch.float64)
tensor([-2.1354, -3.2966, -3.8471, -4.4812, -5.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8677, device='cuda:0', dtype=torch.float64)
tensor([-2.1327, -3.2947, -3.8404, -4.4755, -5.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7917, device='cuda:0', dtype=torch.float64)
tensor([-2.1305, -3.2942, -3.8357, -4.4720, -5.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-2.1291, -3.2955, -3.8317, -4.4653, -5.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8521, device='cuda:0', dtype=torch.float64)
tensor([-2.1277, -3.2981, -3.8313, -4.4612, -5.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8295, device='cuda:0', dtype=torch.float64)
tensor([-2.1289, -3.3007, -3.8305, -4.4575, -5.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7955, device='cuda:0', dtype=torch.float64)
tensor([-2.1309, -3.3017, -3.8297, -4.4538, -5.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8650, device='cuda:0', dtype=torch.float64)
tensor([-2.1344, -3.3028, -3.8293, -4.4508, -5.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9089, device='cuda:0', dtype=torch.float64)
tensor([-2.1386, -3.3022, -3.8282, -4.4401, -5.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8672, device='cuda:0', dtype=torch.float64)
tensor([-2.1410, -3.2982, -3.8259, -4.4320, -5.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8848, device='cuda:0', dtype=torch.float64)
tensor([-2.1414, -3.2955, -3.8221, -4.4281, -5.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8547, device='cuda:0', dtype=torch.float64)
tensor([-2.1419, -3.2949, -3.8177, -4.4254, -5.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8866, device='cuda:0', dtype=torch.float64)
tensor([-2.1399, -3.2942, -3.8175, -4.4256, -5.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8155, device='cuda:0', dtype=torch.float64)
tensor([-2.1362, -3.2939, -3.8191, -4.4306, -5.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8248, device='cuda:0', dtype=torch.float64)
tensor([-2.1307, -3.2924, -3.8219, -4.4385, -5.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-2.1252, -3.2891, -3.8251, -4.4484, -5.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8654, device='cuda:0', dtype=torch.float64)
tensor([-2.1201, -3.2832, -3.8284, -4.4574, -5.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-2.1177, -3.2808, -3.8296, -4.4605, -5.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9331, device='cuda:0', dtype=torch.float64)
tensor([-2.1191, -3.2806, -3.8289, -4.4529, -5.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9147, device='cuda:0', dtype=torch.float64)
tensor([-2.1233, -3.2814, -3.8257, -4.4380, -5.1388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9098, device='cuda:0', dtype=torch.float64)
tensor([-2.1269, -3.2817, -3.8205, -4.4279, -5.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9738, device='cuda:0', dtype=torch.float64)
tensor([-2.1290, -3.2815, -3.8118, -4.4237, -5.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7702, device='cuda:0', dtype=torch.float64)
tensor([-2.1328, -3.2816, -3.8020, -4.4222, -5.1259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8845, device='cuda:0', dtype=torch.float64)
tensor([-2.1362, -3.2823, -3.7961, -4.4195, -5.1174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9213, device='cuda:0', dtype=torch.float64)
tensor([-2.1383, -3.2831, -3.7949, -4.4139, -5.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8065, device='cuda:0', dtype=torch.float64)
tensor([-2.1395, -3.2828, -3.7954, -4.4076, -5.1112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8076, device='cuda:0', dtype=torch.float64)
tensor([-2.1373, -3.2804, -3.7996, -4.4064, -5.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8889, device='cuda:0', dtype=torch.float64)
tensor([-2.1340, -3.2793, -3.8018, -4.4085, -5.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8013, device='cuda:0', dtype=torch.float64)
tensor([-2.1300, -3.2774, -3.7984, -4.4100, -5.0998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8923, device='cuda:0', dtype=torch.float64)
tensor([-2.1277, -3.2734, -3.7953, -4.4101, -5.0962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9071, device='cuda:0', dtype=torch.float64)
tensor([-2.1280, -3.2702, -3.7956, -4.4088, -5.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8600, device='cuda:0', dtype=torch.float64)
tensor([-2.1282, -3.2634, -3.7998, -4.4066, -5.0881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8550, device='cuda:0', dtype=torch.float64)
tensor([-2.1279, -3.2585, -3.8016, -4.4072, -5.0859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0013, device='cuda:0', dtype=torch.float64)
tensor([-2.1241, -3.2533, -3.8033, -4.4136, -5.0865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8537, device='cuda:0', dtype=torch.float64)
tensor([-2.1203, -3.2474, -3.8017, -4.4201, -5.0839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0338, device='cuda:0', dtype=torch.float64)
tensor([-2.1174, -3.2412, -3.7983, -4.4204, -5.0816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9377, device='cuda:0', dtype=torch.float64)
tensor([-2.1158, -3.2363, -3.7932, -4.4148, -5.0809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8530, device='cuda:0', dtype=torch.float64)
tensor([-2.1151, -3.2358, -3.7904, -4.4081, -5.0779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8985, device='cuda:0', dtype=torch.float64)
tensor([-2.1171, -3.2406, -3.7832, -4.4024, -5.0709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7887, device='cuda:0', dtype=torch.float64)
tensor([-2.1203, -3.2505, -3.7761, -4.3987, -5.0629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([-2.1244, -3.2625, -3.7733, -4.3962, -5.0554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([-2.1253, -3.2670, -3.7732, -4.3896, -5.0509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8850, device='cuda:0', dtype=torch.float64)
tensor([-2.1238, -3.2622, -3.7757, -4.3836, -5.0485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8795, device='cuda:0', dtype=torch.float64)
tensor([-2.1188, -3.2550, -3.7794, -4.3841, -5.0437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9104, device='cuda:0', dtype=torch.float64)
tensor([-2.1153, -3.2532, -3.7804, -4.3873, -5.0372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8091, device='cuda:0', dtype=torch.float64)
tensor([-2.1154, -3.2537, -3.7804, -4.3864, -5.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-2.1178, -3.2528, -3.7766, -4.3845, -5.0201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9215, device='cuda:0', dtype=torch.float64)
tensor([-2.1220, -3.2473, -3.7703, -4.3776, -5.0115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7999, device='cuda:0', dtype=torch.float64)
tensor([-2.1247, -3.2408, -3.7648, -4.3738, -5.0069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9204, device='cuda:0', dtype=torch.float64)
tensor([-2.1248, -3.2392, -3.7603, -4.3770, -5.0081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9115, device='cuda:0', dtype=torch.float64)
tensor([-2.1221, -3.2408, -3.7590, -4.3860, -5.0070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8105, device='cuda:0', dtype=torch.float64)
tensor([-2.1209, -3.2441, -3.7554, -4.3916, -5.0050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-2.1185, -3.2479, -3.7527, -4.3883, -5.0012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9564, device='cuda:0', dtype=torch.float64)
tensor([-2.1180, -3.2487, -3.7518, -4.3773, -4.9977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8860, device='cuda:0', dtype=torch.float64)
tensor([-2.1206, -3.2461, -3.7465, -4.3629, -4.9957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8689, device='cuda:0', dtype=torch.float64)
tensor([-2.1223, -3.2422, -3.7404, -4.3532, -4.9972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8608, device='cuda:0', dtype=torch.float64)
tensor([-2.1246, -3.2382, -3.7349, -4.3495, -4.9999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-2.1251, -3.2363, -3.7358, -4.3507, -4.9962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8268, device='cuda:0', dtype=torch.float64)
tensor([-2.1263, -3.2377, -3.7421, -4.3514, -4.9891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-2.1269, -3.2361, -3.7513, -4.3515, -4.9818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([-2.1267, -3.2396, -3.7548, -4.3499, -4.9743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9118, device='cuda:0', dtype=torch.float64)
tensor([-2.1255, -3.2451, -3.7523, -4.3499, -4.9631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8534, device='cuda:0', dtype=torch.float64)
tensor([-2.1223, -3.2466, -3.7441, -4.3496, -4.9584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9518, device='cuda:0', dtype=torch.float64)
tensor([-2.1178, -3.2431, -3.7411, -4.3502, -4.9534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9811, device='cuda:0', dtype=torch.float64)
tensor([-2.1128, -3.2365, -3.7414, -4.3472, -4.9551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8544, device='cuda:0', dtype=torch.float64)
tensor([-2.1082, -3.2271, -3.7449, -4.3437, -4.9556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8789, device='cuda:0', dtype=torch.float64)
tensor([-2.1047, -3.2189, -3.7483, -4.3451, -4.9539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0263, device='cuda:0', dtype=torch.float64)
tensor([-2.1037, -3.2147, -3.7461, -4.3473, -4.9490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9554, device='cuda:0', dtype=torch.float64)
tensor([-2.1052, -3.2130, -3.7433, -4.3485, -4.9414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9078, device='cuda:0', dtype=torch.float64)
tensor([-2.1081, -3.2123, -3.7438, -4.3439, -4.9327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-2.1135, -3.2150, -3.7427, -4.3270, -4.9272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8410, device='cuda:0', dtype=torch.float64)
tensor([-2.1190, -3.2178, -3.7418, -4.3136, -4.9246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8815, device='cuda:0', dtype=torch.float64)
tensor([-2.1214, -3.2216, -3.7376, -4.3106, -4.9207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8746, device='cuda:0', dtype=torch.float64)
tensor([-2.1214, -3.2232, -3.7321, -4.3160, -4.9153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9172, device='cuda:0', dtype=torch.float64)
tensor([-2.1203, -3.2207, -3.7261, -4.3206, -4.9109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9229, device='cuda:0', dtype=torch.float64)
tensor([-2.1174, -3.2186, -3.7270, -4.3267, -4.9047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8600, device='cuda:0', dtype=torch.float64)
tensor([-2.1143, -3.2175, -3.7282, -4.3297, -4.8968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8762, device='cuda:0', dtype=torch.float64)
tensor([-2.1102, -3.2150, -3.7306, -4.3282, -4.8881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8493, device='cuda:0', dtype=torch.float64)
tensor([-2.1064, -3.2138, -3.7329, -4.3254, -4.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9028, device='cuda:0', dtype=torch.float64)
tensor([-2.1049, -3.2106, -3.7416, -4.3210, -4.8831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8220, device='cuda:0', dtype=torch.float64)
tensor([-2.1041, -3.2059, -3.7495, -4.3177, -4.8837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8496, device='cuda:0', dtype=torch.float64)
tensor([-2.1041, -3.2020, -3.7478, -4.3139, -4.8851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8973, device='cuda:0', dtype=torch.float64)
tensor([-2.1065, -3.1994, -3.7359, -4.3148, -4.8857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8092, device='cuda:0', dtype=torch.float64)
tensor([-2.1065, -3.2008, -3.7226, -4.3193, -4.8833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8641, device='cuda:0', dtype=torch.float64)
tensor([-2.1079, -3.2036, -3.7103, -4.3203, -4.8801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8411, device='cuda:0', dtype=torch.float64)
tensor([-2.1079, -3.2077, -3.7024, -4.3173, -4.8790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8605, device='cuda:0', dtype=torch.float64)
tensor([-2.1063, -3.2087, -3.7033, -4.3159, -4.8759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9078, device='cuda:0', dtype=torch.float64)
tensor([-2.1038, -3.2052, -3.7063, -4.3126, -4.8717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8787, device='cuda:0', dtype=torch.float64)
tensor([-2.1026, -3.2008, -3.7080, -4.3055, -4.8685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0179, device='cuda:0', dtype=torch.float64)
tensor([-2.1028, -3.1985, -3.7080, -4.2976, -4.8610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9299, device='cuda:0', dtype=torch.float64)
tensor([-2.1045, -3.1995, -3.7098, -4.2886, -4.8512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8134, device='cuda:0', dtype=torch.float64)
tensor([-2.1073, -3.1992, -3.7112, -4.2797, -4.8417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8950, device='cuda:0', dtype=torch.float64)
tensor([-2.1102, -3.1975, -3.7082, -4.2735, -4.8377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9245, device='cuda:0', dtype=torch.float64)
tensor([-2.1093, -3.1958, -3.7033, -4.2748, -4.8392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8914, device='cuda:0', dtype=torch.float64)
tensor([-2.1065, -3.1942, -3.7015, -4.2763, -4.8443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9043, device='cuda:0', dtype=torch.float64)
tensor([-2.1029, -3.1950, -3.7008, -4.2774, -4.8508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8951, device='cuda:0', dtype=torch.float64)
tensor([-2.0973, -3.1996, -3.6954, -4.2822, -4.8551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-2.0912, -3.2017, -3.6904, -4.2845, -4.8568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8923, device='cuda:0', dtype=torch.float64)
tensor([-2.0872, -3.2018, -3.6834, -4.2911, -4.8521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([-2.0863, -3.1974, -3.6876, -4.2991, -4.8412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9163, device='cuda:0', dtype=torch.float64)
tensor([-2.0879, -3.1925, -3.6948, -4.3001, -4.8332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-2.0914, -3.1855, -3.7004, -4.2981, -4.8292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8664, device='cuda:0', dtype=torch.float64)
tensor([-2.0926, -3.1809, -3.7045, -4.2929, -4.8299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0200, device='cuda:0', dtype=torch.float64)
tensor([-2.0924, -3.1821, -3.6979, -4.2924, -4.8247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9464, device='cuda:0', dtype=torch.float64)
tensor([-2.0929, -3.1844, -3.6806, -4.2936, -4.8161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0756, device='cuda:0', dtype=torch.float64)
tensor([-2.0918, -3.1837, -3.6645, -4.2916, -4.8064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9498, device='cuda:0', dtype=torch.float64)
tensor([-2.0907, -3.1825, -3.6587, -4.2865, -4.7939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-2.0947, -3.1871, -3.6584, -4.2783, -4.7864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0223, device='cuda:0', dtype=torch.float64)
tensor([-2.0984, -3.1876, -3.6650, -4.2760, -4.7823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8487, device='cuda:0', dtype=torch.float64)
tensor([-2.1021, -3.1847, -3.6724, -4.2786, -4.7789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0166, device='cuda:0', dtype=torch.float64)
tensor([-2.1077, -3.1783, -3.6772, -4.2789, -4.7783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9273, device='cuda:0', dtype=torch.float64)
tensor([-2.1121, -3.1742, -3.6779, -4.2769, -4.7758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8362, device='cuda:0', dtype=torch.float64)
tensor([-2.1131, -3.1711, -3.6741, -4.2735, -4.7737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8661, device='cuda:0', dtype=torch.float64)
tensor([-2.1101, -3.1721, -3.6668, -4.2682, -4.7777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9347, device='cuda:0', dtype=torch.float64)
tensor([-2.1057, -3.1781, -3.6557, -4.2604, -4.7794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9215, device='cuda:0', dtype=torch.float64)
tensor([-2.1023, -3.1881, -3.6498, -4.2559, -4.7732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-2.0969, -3.1955, -3.6548, -4.2574, -4.7652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9937, device='cuda:0', dtype=torch.float64)
tensor([-2.0961, -3.1948, -3.6646, -4.2568, -4.7533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9906, device='cuda:0', dtype=torch.float64)
tensor([-2.0992, -3.1936, -3.6676, -4.2525, -4.7438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8224, device='cuda:0', dtype=torch.float64)
tensor([-2.1005, -3.1882, -3.6634, -4.2439, -4.7384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-2.0983, -3.1785, -3.6611, -4.2401, -4.7395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8676, device='cuda:0', dtype=torch.float64)
tensor([-2.0978, -3.1719, -3.6601, -4.2330, -4.7463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9853, device='cuda:0', dtype=torch.float64)
tensor([-2.0939, -3.1686, -3.6669, -4.2321, -4.7479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8502, device='cuda:0', dtype=torch.float64)
tensor([-2.0936, -3.1742, -3.6710, -4.2296, -4.7413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9530, device='cuda:0', dtype=torch.float64)
tensor([-2.0947, -3.1872, -3.6659, -4.2298, -4.7293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([-2.0934, -3.1936, -3.6617, -4.2302, -4.7161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9679, device='cuda:0', dtype=torch.float64)
tensor([-2.0889, -3.1933, -3.6599, -4.2349, -4.7065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8686, device='cuda:0', dtype=torch.float64)
tensor([-2.0854, -3.1880, -3.6563, -4.2332, -4.7072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8749, device='cuda:0', dtype=torch.float64)
tensor([-2.0842, -3.1827, -3.6528, -4.2325, -4.7195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9713, device='cuda:0', dtype=torch.float64)
tensor([-2.0838, -3.1797, -3.6531, -4.2354, -4.7342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0329, device='cuda:0', dtype=torch.float64)
tensor([-2.0866, -3.1774, -3.6582, -4.2328, -4.7480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-2.0876, -3.1739, -3.6540, -4.2386, -4.7487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9797, device='cuda:0', dtype=torch.float64)
tensor([-2.0858, -3.1705, -3.6511, -4.2453, -4.7411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9587, device='cuda:0', dtype=torch.float64)
tensor([-2.0846, -3.1638, -3.6474, -4.2494, -4.7352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8817, device='cuda:0', dtype=torch.float64)
tensor([-2.0871, -3.1637, -3.6432, -4.2454, -4.7250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0945, device='cuda:0', dtype=torch.float64)
tensor([-2.0906, -3.1681, -3.6386, -4.2354, -4.7120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9110, device='cuda:0', dtype=torch.float64)
tensor([-2.0943, -3.1741, -3.6320, -4.2296, -4.7076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1315, device='cuda:0', dtype=torch.float64)
tensor([-2.0985, -3.1806, -3.6224, -4.2238, -4.7060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8733, device='cuda:0', dtype=torch.float64)
tensor([-2.1008, -3.1817, -3.6124, -4.2234, -4.7004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0501, device='cuda:0', dtype=torch.float64)
tensor([-2.1051, -3.1778, -3.6019, -4.2164, -4.6933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9323, device='cuda:0', dtype=torch.float64)
tensor([-2.1075, -3.1700, -3.5970, -4.2120, -4.6889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9314, device='cuda:0', dtype=torch.float64)
tensor([-2.1075, -3.1649, -3.5944, -4.2044, -4.6870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9077, device='cuda:0', dtype=torch.float64)
tensor([-2.1061, -3.1646, -3.5919, -4.1969, -4.6830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9929, device='cuda:0', dtype=torch.float64)
tensor([-2.1015, -3.1673, -3.5867, -4.1944, -4.6813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0324, device='cuda:0', dtype=torch.float64)
tensor([-2.0933, -3.1666, -3.5911, -4.2036, -4.6788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1362, device='cuda:0', dtype=torch.float64)
tensor([-2.0883, -3.1607, -3.6040, -4.2029, -4.6808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0666, device='cuda:0', dtype=torch.float64)
tensor([-2.0890, -3.1570, -3.6151, -4.1849, -4.6825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9539, device='cuda:0', dtype=torch.float64)
tensor([-2.0916, -3.1551, -3.6263, -4.1709, -4.6725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-2.0914, -3.1543, -3.6386, -4.1622, -4.6575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1684, device='cuda:0', dtype=torch.float64)
tensor([-2.0944, -3.1574, -3.6418, -4.1642, -4.6499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9039, device='cuda:0', dtype=torch.float64)
tensor([-2.0962, -3.1594, -3.6447, -4.1770, -4.6495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1689, device='cuda:0', dtype=torch.float64)
tensor([-2.0922, -3.1566, -3.6450, -4.1908, -4.6490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9390, device='cuda:0', dtype=torch.float64)
tensor([-2.0849, -3.1548, -3.6432, -4.2071, -4.6445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0785, device='cuda:0', dtype=torch.float64)
tensor([-2.0766, -3.1523, -3.6366, -4.2233, -4.6419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1905, device='cuda:0', dtype=torch.float64)
tensor([-2.0752, -3.1518, -3.6205, -4.2249, -4.6449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0183, device='cuda:0', dtype=torch.float64)
tensor([-2.0819, -3.1539, -3.6146, -4.2158, -4.6487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-2.0896, -3.1566, -3.6119, -4.1961, -4.6550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0396, device='cuda:0', dtype=torch.float64)
tensor([-2.0946, -3.1503, -3.6072, -4.1777, -4.6563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9963, device='cuda:0', dtype=torch.float64)
tensor([-2.0992, -3.1434, -3.6049, -4.1750, -4.6518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8395, device='cuda:0', dtype=torch.float64)
tensor([-2.1032, -3.1376, -3.6071, -4.1742, -4.6454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1296, device='cuda:0', dtype=torch.float64)
tensor([-2.1111, -3.1392, -3.6074, -4.1645, -4.6412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9642, device='cuda:0', dtype=torch.float64)
tensor([-2.1142, -3.1390, -3.6048, -4.1560, -4.6387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([-2.1111, -3.1386, -3.5989, -4.1596, -4.6392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-2.1026, -3.1299, -3.5948, -4.1838, -4.6300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9564, device='cuda:0', dtype=torch.float64)
tensor([-2.0956, -3.1251, -3.5932, -4.1950, -4.6199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0203, device='cuda:0', dtype=torch.float64)
tensor([-2.0925, -3.1274, -3.5930, -4.1850, -4.6069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3269, device='cuda:0', dtype=torch.float64)
tensor([-2.0967, -3.1339, -3.5970, -4.1624, -4.6081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1921, device='cuda:0', dtype=torch.float64)
tensor([-2.1006, -3.1374, -3.5996, -4.1540, -4.6136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3896, device='cuda:0', dtype=torch.float64)
tensor([-2.0987, -3.1354, -3.6055, -4.1658, -4.6158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9433, device='cuda:0', dtype=torch.float64)
tensor([-2.0952, -3.1309, -3.6138, -4.1909, -4.6135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2874, device='cuda:0', dtype=torch.float64)
tensor([-2.0951, -3.1308, -3.6183, -4.1974, -4.6009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5912, device='cuda:0', dtype=torch.float64)
tensor([-2.0986, -3.1342, -3.6194, -4.1860, -4.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3219, device='cuda:0', dtype=torch.float64)
tensor([-2.0984, -3.1376, -3.6098, -4.1795, -4.5834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1892, device='cuda:0', dtype=torch.float64)
tensor([-2.0945, -3.1400, -3.5969, -4.1882, -4.5814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1336, device='cuda:0', dtype=torch.float64)
tensor([-2.0845, -3.1368, -3.5929, -4.2021, -4.5781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-2.0734, -3.1266, -3.5952, -4.1982, -4.5838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9966, device='cuda:0', dtype=torch.float64)
tensor([-2.0666, -3.1259, -3.5967, -4.1817, -4.5923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0842, device='cuda:0', dtype=torch.float64)
tensor([-2.0643, -3.1328, -3.5941, -4.1697, -4.5964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2016, device='cuda:0', dtype=torch.float64)
tensor([-2.0605, -3.1394, -3.5880, -4.1739, -4.5908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-2.0624, -3.1449, -3.5868, -4.1802, -4.5842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7975, device='cuda:0', dtype=torch.float64)
tensor([-2.0750, -3.1550, -3.5925, -4.1600, -4.5757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8614, device='cuda:0', dtype=torch.float64)
tensor([-2.0872, -3.1619, -3.6079, -4.1474, -4.5771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6468, device='cuda:0', dtype=torch.float64)
tensor([-2.0962, -3.1600, -3.6141, -4.1463, -4.5811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3007, device='cuda:0', dtype=torch.float64)
tensor([-2.0999, -3.1484, -3.6091, -4.1610, -4.5816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0289, device='cuda:0', dtype=torch.float64)
tensor([-2.0951, -3.1348, -3.5962, -4.1697, -4.5755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4332, device='cuda:0', dtype=torch.float64)
tensor([-2.0917, -3.1250, -3.5867, -4.1481, -4.5681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9508, device='cuda:0', dtype=torch.float64)
tensor([-2.0859, -3.1278, -3.5832, -4.1268, -4.5605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2383, device='cuda:0', dtype=torch.float64)
tensor([-2.0785, -3.1374, -3.5823, -4.1222, -4.5503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0377, device='cuda:0', dtype=torch.float64)
tensor([-2.0706, -3.1503, -3.5840, -4.1308, -4.5392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2211, device='cuda:0', dtype=torch.float64)
tensor([-2.0640, -3.1466, -3.5911, -4.1317, -4.5344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1854, device='cuda:0', dtype=torch.float64)
tensor([-2.0659, -3.1428, -3.5956, -4.1249, -4.5373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0071, device='cuda:0', dtype=torch.float64)
tensor([-2.0705, -3.1394, -3.5971, -4.1221, -4.5401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3444, device='cuda:0', dtype=torch.float64)
tensor([-2.0808, -3.1403, -3.5882, -4.1234, -4.5390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8823, device='cuda:0', dtype=torch.float64)
tensor([-2.0901, -3.1398, -3.5696, -4.1216, -4.5399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1720, device='cuda:0', dtype=torch.float64)
tensor([-2.0940, -3.1339, -3.5763, -4.1230, -4.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0111, device='cuda:0', dtype=torch.float64)
tensor([-2.0919, -3.1230, -3.5891, -4.1325, -4.5375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0481, device='cuda:0', dtype=torch.float64)
tensor([-2.0835, -3.1191, -3.6050, -4.1575, -4.5386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1625, device='cuda:0', dtype=torch.float64)
tensor([-2.0789, -3.1223, -3.6031, -4.1673, -4.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0112, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -3.1271, -3.5942, -4.1614, -4.5443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1542, device='cuda:0', dtype=torch.float64)
tensor([-2.0739, -3.1306, -3.5824, -4.1438, -4.5494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-2.0765, -3.1285, -3.5756, -4.1323, -4.5423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0323, device='cuda:0', dtype=torch.float64)
tensor([-2.0771, -3.1319, -3.5774, -4.1205, -4.5340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0269, device='cuda:0', dtype=torch.float64)
tensor([-2.0776, -3.1341, -3.5825, -4.1108, -4.5256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0842, device='cuda:0', dtype=torch.float64)
tensor([-2.0806, -3.1345, -3.5879, -4.1034, -4.5157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0849, device='cuda:0', dtype=torch.float64)
tensor([-2.0821, -3.1250, -3.5942, -4.0920, -4.5092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8404, device='cuda:0', dtype=torch.float64)
tensor([-2.0799, -3.1210, -3.5983, -4.0996, -4.5044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9780, device='cuda:0', dtype=torch.float64)
tensor([-2.0796, -3.1231, -3.5913, -4.1109, -4.4963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1303, device='cuda:0', dtype=torch.float64)
tensor([-2.0878, -3.1279, -3.5738, -4.1091, -4.4875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-2.0978, -3.1268, -3.5578, -4.1163, -4.4852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1387, device='cuda:0', dtype=torch.float64)
tensor([-2.1015, -3.1178, -3.5492, -4.1076, -4.4849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1134, device='cuda:0', dtype=torch.float64)
tensor([-2.1029, -3.1182, -3.5502, -4.0905, -4.4867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([-2.0927, -3.1171, -3.5593, -4.0880, -4.4845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2158, device='cuda:0', dtype=torch.float64)
tensor([-2.0795, -3.1226, -3.5576, -4.0888, -4.4884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0429, device='cuda:0', dtype=torch.float64)
tensor([-2.0678, -3.1319, -3.5513, -4.0998, -4.4892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5733, device='cuda:0', dtype=torch.float64)
tensor([-2.0592, -3.1333, -3.5447, -4.0981, -4.4904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0260, device='cuda:0', dtype=torch.float64)
tensor([-2.0610, -3.1313, -3.5363, -4.0930, -4.4914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2903, device='cuda:0', dtype=torch.float64)
tensor([-2.0708, -3.1334, -3.5251, -4.0926, -4.4802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4729, device='cuda:0', dtype=torch.float64)
tensor([-2.0785, -3.1329, -3.5208, -4.0929, -4.4700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1936, device='cuda:0', dtype=torch.float64)
tensor([-2.0862, -3.1228, -3.5261, -4.0903, -4.4646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5217, device='cuda:0', dtype=torch.float64)
tensor([-2.0907, -3.1051, -3.5412, -4.0695, -4.4634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9395, device='cuda:0', dtype=torch.float64)
tensor([-2.0910, -3.0950, -3.5530, -4.0548, -4.4595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2850, device='cuda:0', dtype=torch.float64)
tensor([-2.0889, -3.0901, -3.5568, -4.0604, -4.4512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0433, device='cuda:0', dtype=torch.float64)
tensor([-2.0907, -3.0927, -3.5581, -4.0711, -4.4447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4230, device='cuda:0', dtype=torch.float64)
tensor([-2.0886, -3.0947, -3.5668, -4.0756, -4.4414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3602, device='cuda:0', dtype=torch.float64)
tensor([-2.0911, -3.0990, -3.5709, -4.0712, -4.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1005, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -3.1072, -3.5710, -4.0780, -4.4506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2753, device='cuda:0', dtype=torch.float64)
tensor([-2.0907, -3.1084, -3.5752, -4.0953, -4.4388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0484, device='cuda:0', dtype=torch.float64)
tensor([-2.0869, -3.1067, -3.5758, -4.1006, -4.4336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0844, device='cuda:0', dtype=torch.float64)
tensor([-2.0833, -3.0996, -3.5749, -4.0865, -4.4372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0715, device='cuda:0', dtype=torch.float64)
tensor([-2.0799, -3.0932, -3.5699, -4.0649, -4.4338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1249, device='cuda:0', dtype=torch.float64)
tensor([-2.0798, -3.0937, -3.5570, -4.0604, -4.4354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9483, device='cuda:0', dtype=torch.float64)
tensor([-2.0784, -3.0893, -3.5459, -4.0660, -4.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-2.0828, -3.0857, -3.5396, -4.0532, -4.4301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1413, device='cuda:0', dtype=torch.float64)
tensor([-2.0886, -3.0872, -3.5365, -4.0311, -4.4332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0811, device='cuda:0', dtype=torch.float64)
tensor([-2.0917, -3.0919, -3.5438, -4.0258, -4.4272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3118, device='cuda:0', dtype=torch.float64)
tensor([-2.0880, -3.0980, -3.5438, -4.0350, -4.4223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0458, device='cuda:0', dtype=torch.float64)
tensor([-2.0814, -3.1070, -3.5340, -4.0541, -4.4267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1020, device='cuda:0', dtype=torch.float64)
tensor([-2.0720, -3.1108, -3.5173, -4.0814, -4.4220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4509, device='cuda:0', dtype=torch.float64)
tensor([-2.0659, -3.1104, -3.5086, -4.0951, -4.4147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([-2.0634, -3.1137, -3.5204, -4.1116, -4.3997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2607, device='cuda:0', dtype=torch.float64)
tensor([-2.0733, -3.1194, -3.5295, -4.1188, -4.3908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1387, device='cuda:0', dtype=torch.float64)
tensor([-2.0871, -3.1335, -3.5362, -4.1079, -4.3902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-2.1040, -3.1342, -3.5238, -4.0798, -4.3980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1561, device='cuda:0', dtype=torch.float64)
tensor([-2.1097, -3.1322, -3.5042, -4.0440, -4.3942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1343, device='cuda:0', dtype=torch.float64)
tensor([-2.1037, -3.1216, -3.4923, -4.0080, -4.3850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0838, device='cuda:0', dtype=torch.float64)
tensor([-2.0899, -3.1118, -3.4971, -3.9958, -4.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-2.0777, -3.1018, -3.5122, -3.9947, -4.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0322, device='cuda:0', dtype=torch.float64)
tensor([-2.0690, -3.0937, -3.5324, -4.0067, -4.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9920, device='cuda:0', dtype=torch.float64)
tensor([-2.0696, -3.0913, -3.5484, -4.0103, -4.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0334, device='cuda:0', dtype=torch.float64)
tensor([-2.0737, -3.0913, -3.5607, -4.0135, -4.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2481, device='cuda:0', dtype=torch.float64)
tensor([-2.0765, -3.0901, -3.5744, -4.0245, -4.3834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1456, device='cuda:0', dtype=torch.float64)
tensor([-2.0779, -3.0982, -3.5761, -4.0337, -4.3942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1018, device='cuda:0', dtype=torch.float64)
tensor([-2.0781, -3.1000, -3.5674, -4.0417, -4.3945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1815, device='cuda:0', dtype=torch.float64)
tensor([-2.0885, -3.1069, -3.5452, -4.0351, -4.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3492, device='cuda:0', dtype=torch.float64)
tensor([-2.0914, -3.1025, -3.5235, -4.0197, -4.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0867, device='cuda:0', dtype=torch.float64)
tensor([-2.0885, -3.0812, -3.5052, -4.0329, -4.3331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1072, device='cuda:0', dtype=torch.float64)
tensor([-2.0807, -3.0603, -3.5013, -4.0602, -4.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-2.0687, -3.0524, -3.5039, -4.0770, -4.3316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2997, device='cuda:0', dtype=torch.float64)
tensor([-2.0621, -3.0522, -3.5155, -4.0672, -4.3543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-2.0603, -3.0581, -3.5326, -4.0422, -4.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2690, device='cuda:0', dtype=torch.float64)
tensor([-2.0618, -3.0670, -3.5324, -4.0272, -4.3943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-2.0693, -3.0786, -3.5181, -4.0281, -4.3873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1664, device='cuda:0', dtype=torch.float64)
tensor([-2.0810, -3.0973, -3.4925, -4.0305, -4.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5994, device='cuda:0', dtype=torch.float64)
tensor([-2.0950, -3.1113, -3.4749, -4.0331, -4.3662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0174, device='cuda:0', dtype=torch.float64)
tensor([-2.0994, -3.1141, -3.4641, -4.0375, -4.3572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3553, device='cuda:0', dtype=torch.float64)
tensor([-2.0908, -3.1008, -3.4730, -4.0532, -4.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2500, device='cuda:0', dtype=torch.float64)
tensor([-2.0742, -3.0803, -3.4835, -4.0654, -4.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9680, device='cuda:0', dtype=torch.float64)
tensor([-2.0602, -3.0576, -3.4890, -4.0669, -4.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3181, device='cuda:0', dtype=torch.float64)
tensor([-2.0505, -3.0461, -3.4902, -4.0721, -4.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3447, device='cuda:0', dtype=torch.float64)
tensor([-2.0509, -3.0438, -3.4841, -4.0561, -4.3720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4839, device='cuda:0', dtype=torch.float64)
tensor([-2.0542, -3.0491, -3.4908, -4.0396, -4.3751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2261, device='cuda:0', dtype=torch.float64)
tensor([-2.0630, -3.0634, -3.4954, -4.0266, -4.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3793, device='cuda:0', dtype=torch.float64)
tensor([-2.0789, -3.0807, -3.4958, -4.0212, -4.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1236, device='cuda:0', dtype=torch.float64)
tensor([-2.0942, -3.0956, -3.5013, -4.0091, -4.3560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2710, device='cuda:0', dtype=torch.float64)
tensor([-2.0975, -3.0970, -3.5166, -4.0031, -4.3523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2298, device='cuda:0', dtype=torch.float64)
tensor([-2.0919, -3.0932, -3.5226, -4.0035, -4.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3185, device='cuda:0', dtype=torch.float64)
tensor([-2.0870, -3.0858, -3.5093, -4.0125, -4.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2691, device='cuda:0', dtype=torch.float64)
tensor([-2.0859, -3.0736, -3.4909, -4.0300, -4.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2810, device='cuda:0', dtype=torch.float64)
tensor([-2.0829, -3.0643, -3.4880, -4.0347, -4.3810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2992, device='cuda:0', dtype=torch.float64)
tensor([-2.0783, -3.0610, -3.5061, -4.0344, -4.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2587, device='cuda:0', dtype=torch.float64)
tensor([-2.0744, -3.0722, -3.5325, -4.0258, -4.3526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-2.0726, -3.0914, -3.5479, -4.0117, -4.3353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3591, device='cuda:0', dtype=torch.float64)
tensor([-2.0777, -3.1002, -3.5357, -3.9947, -4.3265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2736, device='cuda:0', dtype=torch.float64)
tensor([-2.0725, -3.0924, -3.5257, -3.9945, -4.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2471, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -3.0779, -3.5140, -4.0184, -4.3088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3254, device='cuda:0', dtype=torch.float64)
tensor([-2.0460, -3.0649, -3.5044, -4.0463, -4.3071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1598, device='cuda:0', dtype=torch.float64)
tensor([-2.0503, -3.0576, -3.4930, -4.0466, -4.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1869, device='cuda:0', dtype=torch.float64)
tensor([-2.0666, -3.0688, -3.4858, -4.0128, -4.3219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2631, device='cuda:0', dtype=torch.float64)
tensor([-2.0864, -3.0956, -3.4802, -3.9817, -4.3254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3700, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -3.1052, -3.4727, -3.9769, -4.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7001, device='cuda:0', dtype=torch.float64)
tensor([-2.0911, -3.0957, -3.4712, -3.9856, -4.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2708, device='cuda:0', dtype=torch.float64)
tensor([-2.0884, -3.0857, -3.4622, -3.9828, -4.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6079, device='cuda:0', dtype=torch.float64)
tensor([-2.0946, -3.0788, -3.4474, -3.9739, -4.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2097, device='cuda:0', dtype=torch.float64)
tensor([-2.0917, -3.0783, -3.4469, -3.9814, -4.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9445, device='cuda:0', dtype=torch.float64)
tensor([-2.0856, -3.0766, -3.4744, -3.9950, -4.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3075, device='cuda:0', dtype=torch.float64)
tensor([-2.0761, -3.0756, -3.5130, -4.0219, -4.2808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2303, device='cuda:0', dtype=torch.float64)
tensor([-2.0681, -3.0723, -3.5341, -4.0413, -4.2625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5578, device='cuda:0', dtype=torch.float64)
tensor([-2.0614, -3.0626, -3.5256, -4.0355, -4.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7286, device='cuda:0', dtype=torch.float64)
tensor([-2.0580, -3.0515, -3.4857, -4.0159, -4.2723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2357, device='cuda:0', dtype=torch.float64)
tensor([-2.0644, -3.0523, -3.4461, -3.9958, -4.2880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7058, device='cuda:0', dtype=torch.float64)
tensor([-2.0660, -3.0464, -3.4508, -3.9808, -4.2782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4284, device='cuda:0', dtype=torch.float64)
tensor([-2.0606, -3.0373, -3.4706, -3.9745, -4.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2891, device='cuda:0', dtype=torch.float64)
tensor([-2.0563, -3.0417, -3.4841, -3.9781, -4.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6052, device='cuda:0', dtype=torch.float64)
tensor([-2.0549, -3.0479, -3.4821, -3.9883, -4.2659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2606, device='cuda:0', dtype=torch.float64)
tensor([-2.0592, -3.0551, -3.4801, -3.9882, -4.2785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7238, device='cuda:0', dtype=torch.float64)
tensor([-2.0603, -3.0542, -3.4959, -3.9852, -4.2789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2783, device='cuda:0', dtype=torch.float64)
tensor([-2.0655, -3.0507, -3.5013, -3.9916, -4.2826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2464, device='cuda:0', dtype=torch.float64)
tensor([-2.0872, -3.0654, -3.5052, -4.0038, -4.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6518, device='cuda:0', dtype=torch.float64)
tensor([-2.1078, -3.0790, -3.4859, -3.9953, -4.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3930, device='cuda:0', dtype=torch.float64)
tensor([-2.1221, -3.0854, -3.4531, -3.9728, -4.2777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5830, device='cuda:0', dtype=torch.float64)
tensor([-2.1060, -3.0813, -3.4458, -3.9809, -4.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9082, device='cuda:0', dtype=torch.float64)
tensor([-2.0732, -3.0650, -3.4466, -3.9977, -4.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0574, device='cuda:0', dtype=torch.float64)
tensor([-2.0509, -3.0616, -3.4529, -4.0034, -4.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3306, device='cuda:0', dtype=torch.float64)
tensor([-2.0385, -3.0605, -3.4568, -3.9857, -4.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7179, device='cuda:0', dtype=torch.float64)
tensor([-2.0325, -3.0634, -3.4617, -3.9395, -4.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1342, device='cuda:0', dtype=torch.float64)
tensor([-2.0328, -3.0693, -3.4607, -3.9327, -4.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7459, device='cuda:0', dtype=torch.float64)
tensor([-2.0376, -3.0671, -3.4649, -3.9613, -4.2618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4364, device='cuda:0', dtype=torch.float64)
tensor([-2.0565, -3.0698, -3.4788, -3.9858, -4.2549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1786, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -3.0693, -3.4924, -4.0021, -4.2410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4002, device='cuda:0', dtype=torch.float64)
tensor([-2.0801, -3.0668, -3.4976, -4.0101, -4.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4712, device='cuda:0', dtype=torch.float64)
tensor([-2.0798, -3.0661, -3.4928, -4.0308, -4.2140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3075, device='cuda:0', dtype=torch.float64)
tensor([-2.0788, -3.0612, -3.4932, -4.0437, -4.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3955, device='cuda:0', dtype=torch.float64)
tensor([-2.0773, -3.0635, -3.4960, -4.0275, -4.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1398, device='cuda:0', dtype=torch.float64)
tensor([-2.0770, -3.0747, -3.5011, -4.0042, -4.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5340, device='cuda:0', dtype=torch.float64)
tensor([-2.0750, -3.0863, -3.4993, -3.9953, -4.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-2.0731, -3.0901, -3.4901, -3.9807, -4.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2985, device='cuda:0', dtype=torch.float64)
tensor([-2.0762, -3.0747, -3.4786, -3.9498, -4.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3155, device='cuda:0', dtype=torch.float64)
tensor([-2.0830, -3.0559, -3.4675, -3.9263, -4.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4204, device='cuda:0', dtype=torch.float64)
tensor([-2.0833, -3.0373, -3.4634, -3.9177, -4.1996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5177, device='cuda:0', dtype=torch.float64)
tensor([-2.0804, -3.0286, -3.4476, -3.9273, -4.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3003, device='cuda:0', dtype=torch.float64)
tensor([-2.0767, -3.0217, -3.4456, -3.9545, -4.2237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2159, device='cuda:0', dtype=torch.float64)
tensor([-2.0765, -3.0211, -3.4576, -3.9781, -4.2240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2040, device='cuda:0', dtype=torch.float64)
tensor([-2.0768, -3.0351, -3.4642, -3.9834, -4.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3716, device='cuda:0', dtype=torch.float64)
tensor([-2.0734, -3.0513, -3.4797, -3.9893, -4.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1792, device='cuda:0', dtype=torch.float64)
tensor([-2.0687, -3.0580, -3.4884, -3.9838, -4.2051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-2.0624, -3.0608, -3.4956, -3.9824, -4.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2698, device='cuda:0', dtype=torch.float64)
tensor([-2.0750, -3.0673, -3.4995, -3.9628, -4.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5222, device='cuda:0', dtype=torch.float64)
tensor([-2.0920, -3.0634, -3.4771, -3.9277, -4.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2758, device='cuda:0', dtype=torch.float64)
tensor([-2.1086, -3.0558, -3.4475, -3.8933, -4.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-2.1164, -3.0516, -3.4278, -3.8846, -4.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1794, device='cuda:0', dtype=torch.float64)
tensor([-2.1165, -3.0529, -3.4250, -3.8970, -4.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3858, device='cuda:0', dtype=torch.float64)
tensor([-2.1071, -3.0584, -3.4343, -3.9269, -4.1534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([-2.0922, -3.0643, -3.4584, -3.9637, -4.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3868, device='cuda:0', dtype=torch.float64)
tensor([-2.0779, -3.0594, -3.4784, -3.9938, -4.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1484, device='cuda:0', dtype=torch.float64)
tensor([-2.0661, -3.0438, -3.4825, -4.0073, -4.1934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4378, device='cuda:0', dtype=torch.float64)
tensor([-2.0648, -3.0341, -3.4754, -3.9790, -4.2103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1729, device='cuda:0', dtype=torch.float64)
tensor([-2.0669, -3.0258, -3.4519, -3.9431, -4.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0300, device='cuda:0', dtype=torch.float64)
tensor([-2.0657, -3.0288, -3.4188, -3.9282, -4.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5611, device='cuda:0', dtype=torch.float64)
tensor([-2.0595, -3.0298, -3.4199, -3.9345, -4.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8401, device='cuda:0', dtype=torch.float64)
tensor([-2.0514, -3.0282, -3.4431, -3.9225, -4.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([-2.0499, -3.0252, -3.4715, -3.9189, -4.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8846, device='cuda:0', dtype=torch.float64)
tensor([-2.0435, -3.0252, -3.4799, -3.9283, -4.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3182, device='cuda:0', dtype=torch.float64)
tensor([-2.0439, -3.0226, -3.4785, -3.9397, -4.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5790, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -3.0194, -3.4782, -3.9434, -4.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-2.0459, -3.0295, -3.4754, -3.9633, -4.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5329, device='cuda:0', dtype=torch.float64)
tensor([-2.0522, -3.0396, -3.4668, -3.9844, -4.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5864, device='cuda:0', dtype=torch.float64)
tensor([-2.0676, -3.0554, -3.4528, -3.9732, -4.1560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8816, device='cuda:0', dtype=torch.float64)
tensor([-2.0923, -3.0645, -3.4348, -3.9222, -4.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6151, device='cuda:0', dtype=torch.float64)
tensor([-2.0946, -3.0619, -3.4435, -3.8983, -4.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3442, device='cuda:0', dtype=torch.float64)
tensor([-2.0784, -3.0437, -3.4457, -3.9084, -4.1318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6765, device='cuda:0', dtype=torch.float64)
tensor([-2.0586, -3.0268, -3.4405, -3.9320, -4.1238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5133, device='cuda:0', dtype=torch.float64)
tensor([-2.0442, -3.0130, -3.4487, -3.9532, -4.1200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7373, device='cuda:0', dtype=torch.float64)
tensor([-2.0420, -3.0055, -3.4691, -3.9314, -4.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6579, device='cuda:0', dtype=torch.float64)
tensor([-2.0477, -2.9880, -3.5028, -3.9121, -4.1298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8337, device='cuda:0', dtype=torch.float64)
tensor([-2.0568, -2.9692, -3.5051, -3.9124, -4.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2555, device='cuda:0', dtype=torch.float64)
tensor([-2.0681, -2.9697, -3.4631, -3.9389, -4.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5076, device='cuda:0', dtype=torch.float64)
tensor([-2.0853, -2.9846, -3.4265, -3.9599, -4.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1466, device='cuda:0', dtype=torch.float64)
tensor([-2.0972, -2.9920, -3.4198, -3.9159, -4.1707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4056, device='cuda:0', dtype=torch.float64)
tensor([-2.1112, -3.0264, -3.4166, -3.8832, -4.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1978, device='cuda:0', dtype=torch.float64)
tensor([-2.1155, -3.0502, -3.4059, -3.8841, -4.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4791, device='cuda:0', dtype=torch.float64)
tensor([-2.1087, -3.0578, -3.4071, -3.9131, -4.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9037, device='cuda:0', dtype=torch.float64)
tensor([-2.0953, -3.0528, -3.4016, -3.9101, -4.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9134, device='cuda:0', dtype=torch.float64)
tensor([-2.0792, -3.0508, -3.3895, -3.8838, -4.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5327, device='cuda:0', dtype=torch.float64)
tensor([-2.0710, -3.0544, -3.3779, -3.8647, -4.1793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6433, device='cuda:0', dtype=torch.float64)
tensor([-2.0580, -3.0585, -3.3694, -3.8680, -4.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3765, device='cuda:0', dtype=torch.float64)
tensor([-2.0516, -3.0616, -3.3738, -3.8851, -4.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6484, device='cuda:0', dtype=torch.float64)
tensor([-2.0408, -3.0544, -3.3954, -3.9219, -4.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4956, device='cuda:0', dtype=torch.float64)
tensor([-2.0372, -3.0429, -3.4254, -3.9562, -4.1149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-2.0363, -3.0451, -3.4235, -3.9683, -4.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2974, device='cuda:0', dtype=torch.float64)
tensor([-2.0415, -3.0505, -3.3998, -3.9614, -4.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4157, device='cuda:0', dtype=torch.float64)
tensor([-2.0601, -3.0587, -3.3742, -3.9268, -4.0849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3451, device='cuda:0', dtype=torch.float64)
tensor([-2.0795, -3.0564, -3.3760, -3.9128, -4.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3655, device='cuda:0', dtype=torch.float64)
tensor([-2.0905, -3.0583, -3.3978, -3.9129, -4.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4291, device='cuda:0', dtype=torch.float64)
tensor([-2.0947, -3.0700, -3.4109, -3.9248, -4.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3867, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -3.0895, -3.4043, -3.9395, -4.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3567, device='cuda:0', dtype=torch.float64)
tensor([-2.0903, -3.1103, -3.4089, -3.9336, -4.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2828, device='cuda:0', dtype=torch.float64)
tensor([-2.0793, -3.1076, -3.4253, -3.9436, -4.1272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4126, device='cuda:0', dtype=torch.float64)
tensor([-2.0732, -3.0822, -3.4327, -3.9361, -4.1128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4988, device='cuda:0', dtype=torch.float64)
tensor([-2.0674, -3.0618, -3.4356, -3.9291, -4.1107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3693, device='cuda:0', dtype=torch.float64)
tensor([-2.0607, -3.0389, -3.4221, -3.8871, -4.1285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3784, device='cuda:0', dtype=torch.float64)
tensor([-2.0505, -3.0185, -3.4198, -3.8501, -4.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3482, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -3.0049, -3.4164, -3.8262, -4.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4610, device='cuda:0', dtype=torch.float64)
tensor([-2.0586, -3.0080, -3.4070, -3.8216, -4.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4837, device='cuda:0', dtype=torch.float64)
tensor([-2.0817, -3.0224, -3.3962, -3.8255, -4.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6677, device='cuda:0', dtype=torch.float64)
tensor([-2.1013, -3.0368, -3.4018, -3.8376, -4.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3064, device='cuda:0', dtype=torch.float64)
tensor([-2.1094, -3.0449, -3.4067, -3.8535, -4.1057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4184, device='cuda:0', dtype=torch.float64)
tensor([-2.1080, -3.0442, -3.3994, -3.8509, -4.0963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2953, device='cuda:0', dtype=torch.float64)
tensor([-2.0922, -3.0316, -3.4113, -3.8454, -4.1014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3838, device='cuda:0', dtype=torch.float64)
tensor([-2.0716, -3.0288, -3.4220, -3.8392, -4.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7483, device='cuda:0', dtype=torch.float64)
tensor([-2.0521, -3.0214, -3.4335, -3.8589, -4.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1886, device='cuda:0', dtype=torch.float64)
tensor([-2.0429, -3.0225, -3.4496, -3.8757, -4.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4909, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -3.0316, -3.4440, -3.8789, -4.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5543, device='cuda:0', dtype=torch.float64)
tensor([-2.0503, -3.0405, -3.4344, -3.8799, -4.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4208, device='cuda:0', dtype=torch.float64)
tensor([-2.0569, -3.0543, -3.4314, -3.8958, -4.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6384, device='cuda:0', dtype=torch.float64)
tensor([-2.0574, -3.0649, -3.4251, -3.9168, -4.1044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5864, device='cuda:0', dtype=torch.float64)
tensor([-2.0622, -3.0698, -3.4181, -3.9574, -4.0809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2616, device='cuda:0', dtype=torch.float64)
tensor([-2.0650, -3.0772, -3.3975, -3.9716, -4.0645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3107, device='cuda:0', dtype=torch.float64)
tensor([-2.0663, -3.0791, -3.3644, -3.9688, -4.0656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8787, device='cuda:0', dtype=torch.float64)
tensor([-2.0611, -3.0669, -3.3332, -3.9360, -4.0786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4154, device='cuda:0', dtype=torch.float64)
tensor([-2.0534, -3.0461, -3.3196, -3.9294, -4.0975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3697, device='cuda:0', dtype=torch.float64)
tensor([-2.0465, -3.0299, -3.3112, -3.9412, -4.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3266, device='cuda:0', dtype=torch.float64)
tensor([-2.0482, -3.0222, -3.3172, -3.9517, -4.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9481, device='cuda:0', dtype=torch.float64)
tensor([-2.0594, -3.0265, -3.3295, -3.9308, -4.1095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7368, device='cuda:0', dtype=torch.float64)
tensor([-2.0712, -3.0267, -3.3481, -3.8773, -4.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6420, device='cuda:0', dtype=torch.float64)
tensor([-2.0749, -3.0018, -3.3683, -3.8344, -4.1057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8613, device='cuda:0', dtype=torch.float64)
tensor([-2.0687, -2.9669, -3.4032, -3.8411, -4.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3536, device='cuda:0', dtype=torch.float64)
tensor([-2.0623, -2.9432, -3.4364, -3.8799, -4.0653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7066, device='cuda:0', dtype=torch.float64)
tensor([-2.0688, -2.9428, -3.4284, -3.8869, -4.0491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7869, device='cuda:0', dtype=torch.float64)
tensor([-2.0903, -2.9740, -3.4072, -3.8626, -4.0365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7501, device='cuda:0', dtype=torch.float64)
tensor([-2.1101, -3.0072, -3.4007, -3.8516, -4.0264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6458, device='cuda:0', dtype=torch.float64)
tensor([-2.1101, -3.0282, -3.4073, -3.8805, -4.0176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4180, device='cuda:0', dtype=torch.float64)
tensor([-2.1146, -3.0363, -3.4067, -3.8890, -4.0248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0009, device='cuda:0', dtype=torch.float64)
tensor([-2.1321, -3.0329, -3.3843, -3.8477, -4.0573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3329, device='cuda:0', dtype=torch.float64)
tensor([-2.1388, -3.0202, -3.3714, -3.8077, -4.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8539, device='cuda:0', dtype=torch.float64)
tensor([-2.1249, -2.9956, -3.3766, -3.7921, -4.1011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2900, device='cuda:0', dtype=torch.float64)
tensor([-2.1043, -2.9757, -3.3873, -3.8133, -4.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6093, device='cuda:0', dtype=torch.float64)
tensor([-2.0763, -2.9554, -3.3932, -3.8387, -4.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7081, device='cuda:0', dtype=torch.float64)
tensor([-2.0598, -2.9573, -3.3772, -3.8608, -4.0545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6930, device='cuda:0', dtype=torch.float64)
tensor([-2.0471, -2.9607, -3.3803, -3.9066, -4.0479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6421, device='cuda:0', dtype=torch.float64)
tensor([-2.0370, -2.9767, -3.3949, -3.9292, -4.0499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3800, device='cuda:0', dtype=torch.float64)
tensor([-2.0353, -3.0033, -3.4105, -3.9294, -4.0592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3588, device='cuda:0', dtype=torch.float64)
tensor([-2.0490, -3.0332, -3.4036, -3.9028, -4.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5179, device='cuda:0', dtype=torch.float64)
tensor([-2.0630, -3.0488, -3.3843, -3.8692, -4.0840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5448, device='cuda:0', dtype=torch.float64)
tensor([-2.0708, -3.0631, -3.3602, -3.8714, -4.0601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5022, device='cuda:0', dtype=torch.float64)
tensor([-2.0692, -3.0613, -3.3576, -3.8832, -4.0316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8651, device='cuda:0', dtype=torch.float64)
tensor([-2.0807, -3.0699, -3.3519, -3.8570, -4.0142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4236, device='cuda:0', dtype=torch.float64)
tensor([-2.0832, -3.0867, -3.3535, -3.8378, -4.0115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4314, device='cuda:0', dtype=torch.float64)
tensor([-2.0809, -3.0927, -3.3576, -3.8316, -4.0280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3172, device='cuda:0', dtype=torch.float64)
tensor([-2.0799, -3.0820, -3.3594, -3.8253, -4.0618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6921, device='cuda:0', dtype=torch.float64)
tensor([-2.0865, -3.0727, -3.3356, -3.8160, -4.0784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8040, device='cuda:0', dtype=torch.float64)
tensor([-2.0947, -3.0589, -3.3289, -3.8269, -4.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6614, device='cuda:0', dtype=torch.float64)
tensor([-2.1052, -3.0378, -3.3519, -3.8445, -4.0807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0274, device='cuda:0', dtype=torch.float64)
tensor([-2.1213, -3.0133, -3.3632, -3.8339, -4.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2930, device='cuda:0', dtype=torch.float64)
tensor([-2.1240, -2.9877, -3.3767, -3.8190, -4.0903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5769, device='cuda:0', dtype=torch.float64)
tensor([-2.1209, -2.9831, -3.3988, -3.8285, -4.0855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8366, device='cuda:0', dtype=torch.float64)
tensor([-2.1026, -2.9922, -3.3986, -3.8689, -4.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7304, device='cuda:0', dtype=torch.float64)
tensor([-2.0804, -3.0145, -3.4041, -3.9049, -4.0589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8130, device='cuda:0', dtype=torch.float64)
tensor([-2.0574, -3.0283, -3.4195, -3.8936, -4.0416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4515, device='cuda:0', dtype=torch.float64)
tensor([-2.0478, -3.0344, -3.4184, -3.8673, -4.0483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6842, device='cuda:0', dtype=torch.float64)
tensor([-2.0419, -3.0262, -3.4169, -3.8499, -4.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5483, device='cuda:0', dtype=torch.float64)
tensor([-2.0532, -3.0296, -3.4136, -3.8637, -4.0730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6218, device='cuda:0', dtype=torch.float64)
tensor([-2.0907, -3.0396, -3.3960, -3.8418, -4.0961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1583, device='cuda:0', dtype=torch.float64)
tensor([-2.1398, -3.0477, -3.3799, -3.7821, -4.1163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9644, device='cuda:0', dtype=torch.float64)
tensor([-2.1738, -3.0734, -3.3499, -3.7489, -4.1177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7056, device='cuda:0', dtype=torch.float64)
tensor([-2.1627, -3.0821, -3.3427, -3.7382, -4.1141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6271, device='cuda:0', dtype=torch.float64)
tensor([-2.1278, -3.0704, -3.3697, -3.7907, -4.1069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6987, device='cuda:0', dtype=torch.float64)
tensor([-2.0784, -3.0467, -3.4235, -3.8663, -4.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5158, device='cuda:0', dtype=torch.float64)
tensor([-2.0476, -3.0146, -3.4576, -3.9055, -4.0684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5970, device='cuda:0', dtype=torch.float64)
tensor([-2.0355, -2.9885, -3.4893, -3.9170, -4.0392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6950, device='cuda:0', dtype=torch.float64)
tensor([-2.0415, -2.9682, -3.4932, -3.8996, -4.0096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5234, device='cuda:0', dtype=torch.float64)
tensor([-2.0548, -2.9710, -3.4737, -3.8805, -3.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9836, device='cuda:0', dtype=torch.float64)
tensor([-2.0707, -2.9767, -3.4557, -3.8314, -3.9953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5711, device='cuda:0', dtype=torch.float64)
tensor([-2.0897, -2.9855, -3.4277, -3.7840, -4.0200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7135, device='cuda:0', dtype=torch.float64)
tensor([-2.0991, -3.0068, -3.4121, -3.7774, -4.0588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7522, device='cuda:0', dtype=torch.float64)
tensor([-2.0831, -3.0325, -3.4116, -3.8191, -4.0915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7548, device='cuda:0', dtype=torch.float64)
tensor([-2.0665, -3.0539, -3.4315, -3.8265, -4.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5574, device='cuda:0', dtype=torch.float64)
tensor([-2.0472, -3.0694, -3.4481, -3.8195, -4.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8264, device='cuda:0', dtype=torch.float64)
tensor([-2.0425, -3.0745, -3.4456, -3.7974, -4.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0730, device='cuda:0', dtype=torch.float64)
tensor([-2.0450, -3.0782, -3.4323, -3.7975, -4.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4524, device='cuda:0', dtype=torch.float64)
tensor([-2.0480, -3.0761, -3.4233, -3.8110, -4.0722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8104, device='cuda:0', dtype=torch.float64)
tensor([-2.0488, -3.0546, -3.4181, -3.8340, -4.0406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4340, device='cuda:0', dtype=torch.float64)
tensor([-2.0557, -3.0593, -3.4180, -3.8435, -4.0197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8496, device='cuda:0', dtype=torch.float64)
tensor([-2.0809, -3.0763, -3.3997, -3.8339, -4.0110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9529, device='cuda:0', dtype=torch.float64)
tensor([-2.1028, -3.0858, -3.3648, -3.8527, -4.0176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9862, device='cuda:0', dtype=torch.float64)
tensor([-2.1124, -3.1109, -3.3493, -3.8264, -4.0173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7341, device='cuda:0', dtype=torch.float64)
tensor([-2.1052, -3.1279, -3.3495, -3.8035, -4.0136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7900, device='cuda:0', dtype=torch.float64)
tensor([-2.0839, -3.1159, -3.3877, -3.8004, -4.0150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7103, device='cuda:0', dtype=torch.float64)
tensor([-2.0662, -3.0919, -3.3917, -3.8269, -4.0273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7118, device='cuda:0', dtype=torch.float64)
tensor([-2.0542, -3.0789, -3.3789, -3.8682, -4.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4624, device='cuda:0', dtype=torch.float64)
tensor([-2.0527, -3.0742, -3.3647, -3.9122, -4.0626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2447, device='cuda:0', dtype=torch.float64)
tensor([-2.0544, -3.0543, -3.3554, -3.9110, -4.0463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6948, device='cuda:0', dtype=torch.float64)
tensor([-2.0720, -3.0491, -3.3411, -3.8849, -4.0213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7554, device='cuda:0', dtype=torch.float64)
tensor([-2.0975, -3.0524, -3.3076, -3.8491, -4.0038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9580, device='cuda:0', dtype=torch.float64)
tensor([-2.1363, -3.0541, -3.2673, -3.8093, -4.0159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4870, device='cuda:0', dtype=torch.float64)
tensor([-2.1480, -3.0572, -3.2547, -3.7694, -4.0510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2974, device='cuda:0', dtype=torch.float64)
tensor([-2.1257, -3.0449, -3.3066, -3.7532, -4.0802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([-2.0854, -3.0336, -3.3384, -3.7563, -4.0849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5206, device='cuda:0', dtype=torch.float64)
tensor([-2.0561, -3.0147, -3.3330, -3.7600, -4.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4360, device='cuda:0', dtype=torch.float64)
tensor([-2.0388, -3.0197, -3.3249, -3.7780, -4.0818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3938, device='cuda:0', dtype=torch.float64)
tensor([-2.0268, -3.0359, -3.3424, -3.7994, -4.0845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9026, device='cuda:0', dtype=torch.float64)
tensor([-2.0297, -3.0373, -3.3760, -3.7809, -4.0711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5286, device='cuda:0', dtype=torch.float64)
tensor([-2.0471, -3.0321, -3.4169, -3.7619, -4.0549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8185, device='cuda:0', dtype=torch.float64)
tensor([-2.0676, -3.0269, -3.4440, -3.7672, -4.0368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5332, device='cuda:0', dtype=torch.float64)
tensor([-2.0957, -3.0251, -3.4332, -3.7953, -4.0294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4058, device='cuda:0', dtype=torch.float64)
tensor([-2.1156, -3.0048, -3.4084, -3.7966, -4.0385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6074, device='cuda:0', dtype=torch.float64)
tensor([-2.1315, -2.9891, -3.3786, -3.7772, -4.0532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4900, device='cuda:0', dtype=torch.float64)
tensor([-2.1351, -2.9800, -3.3772, -3.7603, -4.0541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7825, device='cuda:0', dtype=torch.float64)
tensor([-2.1281, -2.9806, -3.3976, -3.7724, -4.0507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5868, device='cuda:0', dtype=torch.float64)
tensor([-2.1208, -3.0082, -3.4162, -3.7911, -4.0622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9305, device='cuda:0', dtype=torch.float64)
tensor([-2.1163, -3.0292, -3.4231, -3.7728, -4.0687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5025, device='cuda:0', dtype=torch.float64)
tensor([-2.1093, -3.0416, -3.4204, -3.7782, -4.0723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8726, device='cuda:0', dtype=torch.float64)
tensor([-2.0996, -3.0543, -3.3873, -3.8059, -4.0643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8125, device='cuda:0', dtype=torch.float64)
tensor([-2.0918, -3.0471, -3.3580, -3.8691, -4.0412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3633, device='cuda:0', dtype=torch.float64)
tensor([-2.0964, -3.0378, -3.3576, -3.8593, -4.0104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6735, device='cuda:0', dtype=torch.float64)
tensor([-2.1110, -3.0356, -3.3738, -3.8528, -3.9921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8276, device='cuda:0', dtype=torch.float64)
tensor([-2.1272, -3.0424, -3.3675, -3.8704, -3.9874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9116, device='cuda:0', dtype=torch.float64)
tensor([-2.1299, -3.0294, -3.3426, -3.8911, -3.9893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8066, device='cuda:0', dtype=torch.float64)
tensor([-2.1027, -2.9931, -3.3477, -3.9316, -4.0000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8311, device='cuda:0', dtype=torch.float64)
tensor([-2.0826, -2.9731, -3.3723, -3.9430, -4.0002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5386, device='cuda:0', dtype=torch.float64)
tensor([-2.0808, -2.9683, -3.3879, -3.8914, -3.9982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2945, device='cuda:0', dtype=torch.float64)
tensor([-2.0894, -2.9760, -3.4100, -3.8499, -3.9849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6804, device='cuda:0', dtype=torch.float64)
tensor([-2.1053, -2.9794, -3.4279, -3.8148, -3.9775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8250, device='cuda:0', dtype=torch.float64)
tensor([-2.1156, -2.9871, -3.4312, -3.7835, -3.9847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2151, device='cuda:0', dtype=torch.float64)
tensor([-2.1104, -2.9955, -3.4222, -3.7561, -4.0026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7454, device='cuda:0', dtype=torch.float64)
tensor([-2.1014, -2.9986, -3.4205, -3.7330, -4.0265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7288, device='cuda:0', dtype=torch.float64)
tensor([-2.0953, -2.9970, -3.4128, -3.7188, -4.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9564, device='cuda:0', dtype=torch.float64)
tensor([-2.0892, -2.9981, -3.4118, -3.7184, -4.0328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9645, device='cuda:0', dtype=torch.float64)
tensor([-2.0972, -2.9972, -3.3776, -3.7285, -4.0241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8112, device='cuda:0', dtype=torch.float64)
tensor([-2.1240, -3.0023, -3.3355, -3.6911, -4.0188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6890, device='cuda:0', dtype=torch.float64)
tensor([-2.1438, -3.0164, -3.3048, -3.6770, -4.0239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6079, device='cuda:0', dtype=torch.float64)
tensor([-2.1479, -3.0433, -3.2656, -3.7067, -4.0214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6539, device='cuda:0', dtype=torch.float64)
tensor([-2.1456, -3.0659, -3.2602, -3.7763, -4.0222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8773, device='cuda:0', dtype=torch.float64)
tensor([-2.1444, -3.0726, -3.2933, -3.8080, -4.0219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1798, device='cuda:0', dtype=torch.float64)
tensor([-2.1197, -3.0636, -3.3524, -3.8041, -4.0084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8759, device='cuda:0', dtype=torch.float64)
tensor([-2.0831, -3.0366, -3.4116, -3.8342, -3.9843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0336, device='cuda:0', dtype=torch.float64)
tensor([-2.0581, -3.0168, -3.4405, -3.8426, -3.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9839, device='cuda:0', dtype=torch.float64)
tensor([-2.0577, -3.0133, -3.4581, -3.7986, -3.9680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2178, device='cuda:0', dtype=torch.float64)
tensor([-2.0846, -3.0265, -3.4210, -3.7217, -3.9881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1140, device='cuda:0', dtype=torch.float64)
tensor([-2.1020, -3.0398, -3.3814, -3.7062, -4.0019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2887, device='cuda:0', dtype=torch.float64)
tensor([-2.1025, -3.0246, -3.3647, -3.7298, -3.9952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0298, device='cuda:0', dtype=torch.float64)
tensor([-2.0853, -3.0058, -3.3753, -3.8041, -4.0093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3213, device='cuda:0', dtype=torch.float64)
tensor([-2.0706, -2.9899, -3.3882, -3.8917, -4.0173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2054, device='cuda:0', dtype=torch.float64)
tensor([-2.0762, -2.9989, -3.3870, -3.9051, -4.0281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3320, device='cuda:0', dtype=torch.float64)
tensor([-2.1058, -3.0492, -3.3883, -3.8330, -4.0401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9846, device='cuda:0', dtype=torch.float64)
tensor([-2.1154, -3.0755, -3.3854, -3.7757, -4.0099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5167, device='cuda:0', dtype=torch.float64)
tensor([-2.0991, -3.0372, -3.3881, -3.7601, -3.9366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0181, device='cuda:0', dtype=torch.float64)
tensor([-2.0759, -3.0398, -3.3831, -3.7857, -3.9047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8667, device='cuda:0', dtype=torch.float64)
tensor([-2.0822, -3.0519, -3.3496, -3.7796, -3.9247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6290, device='cuda:0', dtype=torch.float64)
tensor([-2.1124, -3.0464, -3.3113, -3.6986, -3.9724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7778, device='cuda:0', dtype=torch.float64)
tensor([-2.1342, -3.0615, -3.2995, -3.6829, -4.0416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4073, device='cuda:0', dtype=torch.float64)
tensor([-2.0991, -3.0276, -3.3309, -3.7726, -4.0795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1849, device='cuda:0', dtype=torch.float64)
tensor([-2.0518, -2.9946, -3.3592, -3.9043, -4.0844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9390, device='cuda:0', dtype=torch.float64)
tensor([-2.0323, -2.9914, -3.3559, -3.9831, -4.0725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1109, device='cuda:0', dtype=torch.float64)
tensor([-2.0581, -2.9911, -3.3131, -3.9218, -4.0639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8544, device='cuda:0', dtype=torch.float64)
tensor([-2.1167, -3.0238, -3.2588, -3.7658, -4.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0639, device='cuda:0', dtype=torch.float64)
tensor([-2.1727, -3.0452, -3.2449, -3.6784, -4.0454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7184, device='cuda:0', dtype=torch.float64)
tensor([-2.2003, -3.0421, -3.2566, -3.6659, -4.0067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4748, device='cuda:0', dtype=torch.float64)
tensor([-2.2073, -3.0372, -3.2870, -3.6948, -3.9783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5693, device='cuda:0', dtype=torch.float64)
tensor([-2.1881, -3.0262, -3.3113, -3.7212, -3.9702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7193, device='cuda:0', dtype=torch.float64)
tensor([-2.1457, -3.0113, -3.3422, -3.7257, -3.9764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6114, device='cuda:0', dtype=torch.float64)
tensor([-2.1031, -3.0015, -3.3820, -3.7489, -3.9911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6473, device='cuda:0', dtype=torch.float64)
tensor([-2.0642, -3.0015, -3.4125, -3.8137, -4.0078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6952, device='cuda:0', dtype=torch.float64)
tensor([-2.0421, -2.9827, -3.4438, -3.8668, -3.9993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7595, device='cuda:0', dtype=torch.float64)
tensor([-2.0348, -2.9805, -3.4556, -3.8742, -3.9816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8477, device='cuda:0', dtype=torch.float64)
tensor([-2.0628, -3.0107, -3.4437, -3.8413, -3.9711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6797, device='cuda:0', dtype=torch.float64)
tensor([-2.0958, -3.0390, -3.4364, -3.7947, -3.9545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6888, device='cuda:0', dtype=torch.float64)
tensor([-2.1381, -3.0673, -3.4291, -3.7486, -3.9501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5801, device='cuda:0', dtype=torch.float64)
tensor([-2.1612, -3.0784, -3.4219, -3.7275, -3.9487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7499, device='cuda:0', dtype=torch.float64)
tensor([-2.1634, -3.0803, -3.4234, -3.7329, -3.9656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8685, device='cuda:0', dtype=torch.float64)
tensor([-2.1500, -3.0822, -3.4232, -3.7804, -4.0036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9935, device='cuda:0', dtype=torch.float64)
tensor([-2.1401, -3.0849, -3.3933, -3.7968, -4.0412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9918, device='cuda:0', dtype=torch.float64)
tensor([-2.1227, -3.0851, -3.3690, -3.7617, -4.0407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7514, device='cuda:0', dtype=torch.float64)
tensor([-2.0984, -3.0660, -3.3469, -3.7464, -4.0170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8691, device='cuda:0', dtype=torch.float64)
tensor([-2.0728, -3.0295, -3.3415, -3.7494, -3.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0871, device='cuda:0', dtype=torch.float64)
tensor([-2.0664, -3.0051, -3.3418, -3.7746, -3.9716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6360, device='cuda:0', dtype=torch.float64)
tensor([-2.0673, -2.9950, -3.3310, -3.7742, -3.9591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6968, device='cuda:0', dtype=torch.float64)
tensor([-2.0875, -3.0056, -3.3299, -3.7653, -3.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4678, device='cuda:0', dtype=torch.float64)
tensor([-2.0867, -3.0185, -3.3438, -3.7861, -3.9769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7686, device='cuda:0', dtype=torch.float64)
tensor([-2.0675, -3.0148, -3.3777, -3.8341, -3.9638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8385, device='cuda:0', dtype=torch.float64)
tensor([-2.0627, -3.0228, -3.4097, -3.8695, -3.9262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3718, device='cuda:0', dtype=torch.float64)
tensor([-2.0726, -3.0366, -3.4090, -3.8618, -3.8791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8528, device='cuda:0', dtype=torch.float64)
tensor([-2.1028, -3.0624, -3.3644, -3.7980, -3.8760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3804, device='cuda:0', dtype=torch.float64)
tensor([-2.1330, -3.0928, -3.3008, -3.7389, -3.8989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6755, device='cuda:0', dtype=torch.float64)
tensor([-2.1514, -3.0885, -3.2497, -3.6986, -3.9414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6832, device='cuda:0', dtype=torch.float64)
tensor([-2.1577, -3.0711, -3.2362, -3.6811, -3.9870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6632, device='cuda:0', dtype=torch.float64)
tensor([-2.1540, -3.0729, -3.2418, -3.6858, -4.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7382, device='cuda:0', dtype=torch.float64)
tensor([-2.1219, -3.0614, -3.2878, -3.7355, -4.0265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9964, device='cuda:0', dtype=torch.float64)
tensor([-2.0946, -3.0487, -3.3240, -3.7776, -4.0202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9159, device='cuda:0', dtype=torch.float64)
tensor([-2.0905, -3.0362, -3.3452, -3.7797, -3.9893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9524, device='cuda:0', dtype=torch.float64)
tensor([-2.0989, -3.0400, -3.3449, -3.7898, -3.9421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4184, device='cuda:0', dtype=torch.float64)
tensor([-2.1326, -3.0536, -3.3265, -3.7750, -3.9011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8022, device='cuda:0', dtype=torch.float64)
tensor([-2.1543, -3.0637, -3.3083, -3.7568, -3.8676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0754, device='cuda:0', dtype=torch.float64)
tensor([-2.1773, -3.0716, -3.3200, -3.7172, -3.8691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4607, device='cuda:0', dtype=torch.float64)
tensor([-2.1770, -3.0812, -3.3467, -3.7088, -3.8914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0268, device='cuda:0', dtype=torch.float64)
tensor([-2.1624, -3.0958, -3.3864, -3.7369, -3.9280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8670, device='cuda:0', dtype=torch.float64)
tensor([-2.1264, -3.0904, -3.4220, -3.8072, -3.9765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6978, device='cuda:0', dtype=torch.float64)
tensor([-2.1042, -3.0756, -3.4325, -3.8011, -4.0056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6496, device='cuda:0', dtype=torch.float64)
tensor([-2.0906, -3.0517, -3.4056, -3.7940, -4.0027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9474, device='cuda:0', dtype=torch.float64)
tensor([-2.0744, -3.0265, -3.3894, -3.7953, -3.9695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8008, device='cuda:0', dtype=torch.float64)
tensor([-2.0593, -3.0106, -3.3957, -3.8203, -3.9374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1558, device='cuda:0', dtype=torch.float64)
tensor([-2.0442, -2.9978, -3.4308, -3.8443, -3.9259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.0666, -3.0080, -3.4486, -3.8389, -3.9468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7568, device='cuda:0', dtype=torch.float64)
tensor([-2.1173, -3.0318, -3.4414, -3.8002, -3.9767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1044, device='cuda:0', dtype=torch.float64)
tensor([-2.1886, -3.0539, -3.3739, -3.7390, -3.9959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3030, device='cuda:0', dtype=torch.float64)
tensor([-2.2269, -3.0765, -3.3129, -3.7423, -3.9955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9381, device='cuda:0', dtype=torch.float64)
tensor([-2.2506, -3.0713, -3.2842, -3.7244, -3.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1823, device='cuda:0', dtype=torch.float64)
tensor([-2.2339, -3.0518, -3.3138, -3.6834, -3.9439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1420, device='cuda:0', dtype=torch.float64)
tensor([-2.2190, -3.0434, -3.3665, -3.6304, -3.9530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4582, device='cuda:0', dtype=torch.float64)
tensor([-2.1960, -3.0275, -3.3944, -3.6146, -3.9564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9256, device='cuda:0', dtype=torch.float64)
tensor([-2.1658, -3.0176, -3.3947, -3.6624, -3.9820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8374, device='cuda:0', dtype=torch.float64)
tensor([-2.1438, -3.0196, -3.3933, -3.7660, -4.0168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7246, device='cuda:0', dtype=torch.float64)
tensor([-2.1262, -2.9908, -3.4223, -3.8451, -3.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7653, device='cuda:0', dtype=torch.float64)
tensor([-2.1154, -2.9972, -3.4455, -3.9137, -3.9746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2113, device='cuda:0', dtype=torch.float64)
tensor([-2.1262, -2.9926, -3.4277, -3.9158, -3.9407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5892, device='cuda:0', dtype=torch.float64)
tensor([-2.1572, -2.9917, -3.3473, -3.8709, -3.9246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8318, device='cuda:0', dtype=torch.float64)
tensor([-2.1734, -2.9963, -3.2786, -3.8173, -3.9397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6669, device='cuda:0', dtype=torch.float64)
tensor([-2.1627, -2.9544, -3.2431, -3.8138, -3.9216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9977, device='cuda:0', dtype=torch.float64)
tensor([-2.1391, -2.9372, -3.2280, -3.8369, -3.9110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2432, device='cuda:0', dtype=torch.float64)
tensor([-2.1267, -2.9635, -3.2138, -3.8373, -3.9347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0128, device='cuda:0', dtype=torch.float64)
tensor([-2.1282, -3.0081, -3.2176, -3.7674, -3.9590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9510, device='cuda:0', dtype=torch.float64)
tensor([-2.1295, -3.0630, -3.2459, -3.6920, -3.9681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0124, device='cuda:0', dtype=torch.float64)
tensor([-2.1291, -3.1021, -3.2811, -3.6277, -3.9568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5941, device='cuda:0', dtype=torch.float64)
tensor([-2.1015, -3.1051, -3.3390, -3.6287, -3.9397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3988, device='cuda:0', dtype=torch.float64)
tensor([-2.0786, -3.0672, -3.3787, -3.6905, -3.9474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1732, device='cuda:0', dtype=torch.float64)
tensor([-2.0992, -3.0349, -3.3887, -3.8083, -3.9841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6492, device='cuda:0', dtype=torch.float64)
tensor([-2.1120, -2.9963, -3.3902, -3.8703, -4.0034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9300, device='cuda:0', dtype=torch.float64)
tensor([-2.1405, -2.9900, -3.3542, -3.8721, -3.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7222, device='cuda:0', dtype=torch.float64)
tensor([-2.1619, -3.0084, -3.3228, -3.8643, -3.9715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4403, device='cuda:0', dtype=torch.float64)
tensor([-2.1613, -3.0116, -3.3053, -3.8780, -3.9253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6554, device='cuda:0', dtype=torch.float64)
tensor([-2.1408, -3.0431, -3.3048, -3.9075, -3.8908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1979, device='cuda:0', dtype=torch.float64)
tensor([-2.1186, -3.0842, -3.3010, -3.8447, -3.8608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7475, device='cuda:0', dtype=torch.float64)
tensor([-2.1006, -3.1191, -3.3109, -3.7948, -3.8586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6765, device='cuda:0', dtype=torch.float64)
tensor([-2.0956, -3.1313, -3.3064, -3.7562, -3.8657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0416, device='cuda:0', dtype=torch.float64)
tensor([-2.1055, -3.1176, -3.3086, -3.7247, -3.8958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7216, device='cuda:0', dtype=torch.float64)
tensor([-2.1414, -3.1015, -3.3046, -3.6710, -3.9272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6108, device='cuda:0', dtype=torch.float64)
tensor([-2.1666, -3.0832, -3.3063, -3.6453, -3.9498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7740, device='cuda:0', dtype=torch.float64)
tensor([-2.1659, -3.0634, -3.3270, -3.6634, -3.9542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2122, device='cuda:0', dtype=torch.float64)
tensor([-2.1295, -3.0459, -3.3448, -3.7351, -3.9590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7759, device='cuda:0', dtype=torch.float64)
tensor([-2.0924, -3.0414, -3.3753, -3.8229, -3.9565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8725, device='cuda:0', dtype=torch.float64)
tensor([-2.0730, -3.0576, -3.3994, -3.8477, -3.9386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2083, device='cuda:0', dtype=torch.float64)
tensor([-2.0697, -3.0567, -3.4291, -3.8290, -3.9253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8034, device='cuda:0', dtype=torch.float64)
tensor([-2.1047, -3.0343, -3.4272, -3.8088, -3.9059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0843, device='cuda:0', dtype=torch.float64)
tensor([-2.1492, -3.0200, -3.3841, -3.7931, -3.9007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9300, device='cuda:0', dtype=torch.float64)
tensor([-2.1867, -3.0107, -3.3548, -3.7937, -3.9289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5749, device='cuda:0', dtype=torch.float64)
tensor([-2.2325, -3.0346, -3.3204, -3.7296, -3.9295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9826, device='cuda:0', dtype=torch.float64)
tensor([-2.2508, -3.0599, -3.2986, -3.7164, -3.9451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1817, device='cuda:0', dtype=torch.float64)
tensor([-2.2297, -3.0598, -3.3395, -3.7657, -3.9469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4589, device='cuda:0', dtype=torch.float64)
tensor([-2.2039, -3.0661, -3.3568, -3.8022, -3.9104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2465, device='cuda:0', dtype=torch.float64)
tensor([-2.1881, -3.0670, -3.3297, -3.8091, -3.8677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8218, device='cuda:0', dtype=torch.float64)
tensor([-2.1615, -3.0722, -3.3141, -3.7625, -3.8588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1755, device='cuda:0', dtype=torch.float64)
tensor([-2.1268, -3.0584, -3.3179, -3.7307, -3.8661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4479, device='cuda:0', dtype=torch.float64)
tensor([-2.1095, -3.0117, -3.3432, -3.7360, -3.8426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1728, device='cuda:0', dtype=torch.float64)
tensor([-2.1117, -2.9881, -3.3878, -3.7472, -3.8449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8906, device='cuda:0', dtype=torch.float64)
tensor([-2.1357, -2.9945, -3.4171, -3.7530, -3.8492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4661, device='cuda:0', dtype=torch.float64)
tensor([-2.1713, -2.9976, -3.3942, -3.7384, -3.8768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9258, device='cuda:0', dtype=torch.float64)
tensor([-2.2110, -3.0335, -3.3463, -3.6737, -3.9039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0430, device='cuda:0', dtype=torch.float64)
tensor([-2.2280, -3.0676, -3.3264, -3.6310, -3.9286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5439, device='cuda:0', dtype=torch.float64)
tensor([-2.2279, -3.0942, -3.3485, -3.6478, -3.9515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9097, device='cuda:0', dtype=torch.float64)
tensor([-2.1754, -3.0956, -3.3591, -3.7091, -3.9670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1561, device='cuda:0', dtype=torch.float64)
tensor([-2.1079, -3.0929, -3.3652, -3.8598, -4.0153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4679, device='cuda:0', dtype=torch.float64)
tensor([-2.0519, -3.0658, -3.3575, -3.9002, -4.0373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3902, device='cuda:0', dtype=torch.float64)
tensor([-2.0373, -3.0689, -3.3323, -3.8056, -4.0127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7212, device='cuda:0', dtype=torch.float64)
tensor([-2.0791, -3.1099, -3.3059, -3.7053, -3.9956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6323, device='cuda:0', dtype=torch.float64)
tensor([-2.1337, -3.1356, -3.2985, -3.6360, -3.9690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8255, device='cuda:0', dtype=torch.float64)
tensor([-2.1761, -3.1390, -3.3091, -3.6638, -3.9307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9943, device='cuda:0', dtype=torch.float64)
tensor([-2.1873, -3.0877, -3.3482, -3.7815, -3.9302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2837, device='cuda:0', dtype=torch.float64)
tensor([-2.2030, -3.0387, -3.3571, -3.8085, -3.9428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9965, device='cuda:0', dtype=torch.float64)
tensor([-2.2243, -3.0496, -3.3618, -3.8738, -3.9713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7634, device='cuda:0', dtype=torch.float64)
tensor([-2.2226, -3.0298, -3.3527, -3.9233, -3.9681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7195, device='cuda:0', dtype=torch.float64)
tensor([-2.2262, -3.0096, -3.3448, -4.0173, -3.9558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5021, device='cuda:0', dtype=torch.float64)
tensor([-2.2218, -2.9875, -3.3453, -4.0281, -3.9514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4546, device='cuda:0', dtype=torch.float64)
tensor([-2.2065, -2.9635, -3.3498, -3.9409, -3.9496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0074, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -2.9612, -3.3520, -3.8920, -3.9589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8702, device='cuda:0', dtype=torch.float64)
tensor([-2.1763, -2.9817, -3.3357, -3.8354, -3.9760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1831, device='cuda:0', dtype=torch.float64)
tensor([-2.1780, -3.0126, -3.3076, -3.7975, -4.0014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1602, device='cuda:0', dtype=torch.float64)
tensor([-2.1778, -3.0277, -3.2970, -3.7950, -4.0066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1291, device='cuda:0', dtype=torch.float64)
tensor([-2.1407, -2.9955, -3.3294, -3.7616, -3.9784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5158, device='cuda:0', dtype=torch.float64)
tensor([-2.1179, -3.0067, -3.3557, -3.7356, -3.9580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5956, device='cuda:0', dtype=torch.float64)
tensor([-2.1226, -3.0106, -3.3560, -3.7481, -3.9470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0352, device='cuda:0', dtype=torch.float64)
tensor([-2.1559, -3.0284, -3.3600, -3.7387, -3.9471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9768, device='cuda:0', dtype=torch.float64)
tensor([-2.2046, -3.1020, -3.3677, -3.7192, -3.9873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9414, device='cuda:0', dtype=torch.float64)
tensor([-2.2276, -3.1505, -3.3944, -3.7374, -4.0129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1011, device='cuda:0', dtype=torch.float64)
tensor([-2.2269, -3.1769, -3.4209, -3.7616, -4.0149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1476, device='cuda:0', dtype=torch.float64)
tensor([-2.2111, -3.1725, -3.4691, -3.8054, -4.0240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7522, device='cuda:0', dtype=torch.float64)
tensor([-2.1858, -3.1958, -3.4939, -3.8403, -4.0325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4557, device='cuda:0', dtype=torch.float64)
tensor([-2.1716, -3.1927, -3.4450, -3.8119, -4.0088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1407, device='cuda:0', dtype=torch.float64)
tensor([-2.1747, -3.2043, -3.3820, -3.7270, -3.9926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1131, device='cuda:0', dtype=torch.float64)
tensor([-2.1693, -3.2037, -3.3493, -3.6277, -3.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0989, device='cuda:0', dtype=torch.float64)
tensor([-2.1599, -3.1899, -3.3394, -3.5960, -4.0048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7652, device='cuda:0', dtype=torch.float64)
tensor([-2.1130, -3.1528, -3.3825, -3.6445, -3.9910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2264, device='cuda:0', dtype=torch.float64)
tensor([-2.0715, -3.1460, -3.4493, -3.7249, -3.9786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3907, device='cuda:0', dtype=torch.float64)
tensor([-2.0448, -3.1231, -3.4364, -3.8529, -3.9954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8973, device='cuda:0', dtype=torch.float64)
tensor([-2.0623, -3.1181, -3.3967, -3.8230, -4.0410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2044, device='cuda:0', dtype=torch.float64)
tensor([-2.1073, -3.1210, -3.3966, -3.7729, -4.0675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4553, device='cuda:0', dtype=torch.float64)
tensor([-2.1669, -3.1436, -3.4143, -3.7318, -4.0402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7948, device='cuda:0', dtype=torch.float64)
tensor([-2.2011, -3.1516, -3.4308, -3.7150, -4.0121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9392, device='cuda:0', dtype=torch.float64)
tensor([-2.2166, -3.1333, -3.4265, -3.7505, -3.9811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1495, device='cuda:0', dtype=torch.float64)
tensor([-2.2252, -3.0854, -3.3961, -3.7472, -3.9557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9296, device='cuda:0', dtype=torch.float64)
tensor([-2.2112, -3.0870, -3.3753, -3.6867, -3.9426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7437, device='cuda:0', dtype=torch.float64)
tensor([-2.1839, -3.0748, -3.3967, -3.6841, -3.9534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0895, device='cuda:0', dtype=torch.float64)
tensor([-2.1671, -3.0080, -3.4284, -3.6970, -3.9519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9966, device='cuda:0', dtype=torch.float64)
tensor([-2.1599, -2.9815, -3.4103, -3.7476, -3.9554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7431, device='cuda:0', dtype=torch.float64)
tensor([-2.1504, -2.9929, -3.3883, -3.8259, -3.9573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2563, device='cuda:0', dtype=torch.float64)
tensor([-2.1555, -3.0204, -3.3431, -3.8391, -3.9679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0587, device='cuda:0', dtype=torch.float64)
tensor([-2.1607, -3.0563, -3.2990, -3.8530, -3.9937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5702, device='cuda:0', dtype=torch.float64)
tensor([-2.1638, -3.0861, -3.2776, -3.8494, -4.0327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2901, device='cuda:0', dtype=torch.float64)
tensor([-2.1853, -3.1034, -3.3061, -3.8821, -4.0608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9473, device='cuda:0', dtype=torch.float64)
tensor([-2.2130, -3.0675, -3.3558, -3.8931, -4.0504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9763, device='cuda:0', dtype=torch.float64)
tensor([-2.2555, -3.0420, -3.3828, -3.8340, -4.0143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9186, device='cuda:0', dtype=torch.float64)
tensor([-2.2745, -3.0691, -3.4224, -3.7437, -3.9553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1210, device='cuda:0', dtype=torch.float64)
tensor([-2.2764, -3.1274, -3.4653, -3.6635, -3.9096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7674, device='cuda:0', dtype=torch.float64)
tensor([-2.2442, -3.1719, -3.4833, -3.6362, -3.8642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7529, device='cuda:0', dtype=torch.float64)
tensor([-2.2054, -3.1829, -3.4777, -3.6451, -3.8472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1301, device='cuda:0', dtype=torch.float64)
tensor([-2.1762, -3.1429, -3.4373, -3.6469, -3.8364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9591, device='cuda:0', dtype=torch.float64)
tensor([-2.1725, -3.1028, -3.3667, -3.7202, -3.8532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9080, device='cuda:0', dtype=torch.float64)
tensor([-2.1682, -3.0854, -3.3235, -3.9315, -3.9006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0240, device='cuda:0', dtype=torch.float64)
tensor([-2.1538, -3.0511, -3.2937, -3.9555, -3.8787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2403, device='cuda:0', dtype=torch.float64)
tensor([-2.1481, -3.0253, -3.3026, -3.9466, -3.8513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1575, device='cuda:0', dtype=torch.float64)
tensor([-2.1469, -3.0173, -3.3499, -3.9327, -3.8415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1549, device='cuda:0', dtype=torch.float64)
tensor([-2.1360, -3.0189, -3.3606, -3.8878, -3.8485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0587, device='cuda:0', dtype=torch.float64)
tensor([-2.1498, -3.0554, -3.3734, -3.8218, -3.8648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9099, device='cuda:0', dtype=torch.float64)
tensor([-2.1888, -3.1261, -3.3624, -3.7515, -3.8955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.2217, -3.1481, -3.3463, -3.6611, -3.9447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2243, device='cuda:0', dtype=torch.float64)
tensor([-2.2221, -3.1752, -3.3439, -3.6287, -3.9944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1044, device='cuda:0', dtype=torch.float64)
tensor([-2.2052, -3.1724, -3.3566, -3.6359, -4.0175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5182, device='cuda:0', dtype=torch.float64)
tensor([-2.1698, -3.1315, -3.3833, -3.6841, -4.0241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2207, device='cuda:0', dtype=torch.float64)
tensor([-2.1428, -3.1136, -3.3970, -3.7482, -4.0145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4856, device='cuda:0', dtype=torch.float64)
tensor([-2.1767, -3.1125, -3.3779, -3.7191, -3.9975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8517, device='cuda:0', dtype=torch.float64)
tensor([-2.2331, -3.1010, -3.3535, -3.6473, -3.9721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0757, device='cuda:0', dtype=torch.float64)
tensor([-2.3089, -3.0988, -3.3144, -3.5766, -3.9617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9869, device='cuda:0', dtype=torch.float64)
tensor([-2.3463, -3.0583, -3.3230, -3.5806, -3.9641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6895, device='cuda:0', dtype=torch.float64)
tensor([-2.3625, -3.0428, -3.3699, -3.6095, -3.9602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8681, device='cuda:0', dtype=torch.float64)
tensor([-2.3416, -3.0645, -3.4078, -3.6371, -3.9492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4596, device='cuda:0', dtype=torch.float64)
tensor([-2.3160, -3.0916, -3.4338, -3.6444, -3.9184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6944, device='cuda:0', dtype=torch.float64)
tensor([-2.2875, -3.1040, -3.4614, -3.6655, -3.8979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1291, device='cuda:0', dtype=torch.float64)
tensor([-2.2581, -3.1129, -3.4800, -3.6973, -3.8847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6114, device='cuda:0', dtype=torch.float64)
tensor([-2.2171, -3.1220, -3.4780, -3.7338, -3.8699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8361, device='cuda:0', dtype=torch.float64)
tensor([-2.1921, -3.1697, -3.4689, -3.7884, -3.8751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0542, device='cuda:0', dtype=torch.float64)
tensor([-2.1742, -3.0695, -3.4983, -3.8131, -3.8563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8927, device='cuda:0', dtype=torch.float64)
tensor([-2.1851, -3.0550, -3.5162, -3.8268, -3.8587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7183, device='cuda:0', dtype=torch.float64)
tensor([-2.2055, -3.0482, -3.5005, -3.8635, -3.8472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7823, device='cuda:0', dtype=torch.float64)
tensor([-2.2234, -3.0594, -3.4949, -3.9013, -3.8489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1651, device='cuda:0', dtype=torch.float64)
tensor([-2.2410, -3.1017, -3.4701, -3.9256, -3.8668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2246, device='cuda:0', dtype=torch.float64)
tensor([-2.2682, -3.1318, -3.4459, -3.8961, -3.8998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3005, device='cuda:0', dtype=torch.float64)
tensor([-2.2600, -3.1424, -3.4196, -3.8479, -3.8956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0560, device='cuda:0', dtype=torch.float64)
tensor([-2.2135, -3.1469, -3.3996, -3.8438, -3.8767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7485, device='cuda:0', dtype=torch.float64)
tensor([-2.1543, -3.1349, -3.4021, -3.8847, -3.8656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5244, device='cuda:0', dtype=torch.float64)
tensor([-2.0994, -3.1118, -3.4113, -3.9334, -3.8864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0486, device='cuda:0', dtype=torch.float64)
tensor([-2.0791, -3.0721, -3.4146, -3.9003, -3.9061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8611, device='cuda:0', dtype=torch.float64)
tensor([-2.0911, -3.0074, -3.3939, -3.8330, -3.9179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7086, device='cuda:0', dtype=torch.float64)
tensor([-2.1140, -2.9713, -3.3560, -3.7937, -3.9263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8496, device='cuda:0', dtype=torch.float64)
tensor([-2.1400, -2.9764, -3.3231, -3.7737, -3.9344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3162, device='cuda:0', dtype=torch.float64)
tensor([-2.1784, -3.0236, -3.2908, -3.8166, -3.9471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9254, device='cuda:0', dtype=torch.float64)
tensor([-2.2026, -3.0649, -3.3076, -3.8542, -3.9375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2961, device='cuda:0', dtype=torch.float64)
tensor([-2.2348, -3.0996, -3.3160, -3.8400, -3.9192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8843, device='cuda:0', dtype=torch.float64)
tensor([-2.2631, -3.1271, -3.3504, -3.8389, -3.8995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1186, device='cuda:0', dtype=torch.float64)
tensor([-2.2848, -3.1478, -3.4025, -3.8398, -3.8908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2676, device='cuda:0', dtype=torch.float64)
tensor([-2.3094, -3.1352, -3.4237, -3.8198, -3.9008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1267, device='cuda:0', dtype=torch.float64)
tensor([-2.3561, -3.1247, -3.4066, -3.7185, -3.9469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3939, device='cuda:0', dtype=torch.float64)
tensor([-2.3792, -3.1363, -3.3957, -3.6692, -3.9907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5610, device='cuda:0', dtype=torch.float64)
tensor([-2.3363, -3.0860, -3.4074, -3.6969, -3.9633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2674, device='cuda:0', dtype=torch.float64)
tensor([-2.2741, -3.0357, -3.4482, -3.7668, -3.9254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6818, device='cuda:0', dtype=torch.float64)
tensor([-2.2272, -3.0280, -3.4617, -3.8118, -3.9297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3269, device='cuda:0', dtype=torch.float64)
tensor([-2.2048, -3.0692, -3.4461, -3.8695, -3.9767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3251, device='cuda:0', dtype=torch.float64)
tensor([-2.2194, -3.1480, -3.3893, -3.8815, -4.0034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4758, device='cuda:0', dtype=torch.float64)
tensor([-2.2537, -3.2358, -3.3308, -3.8980, -4.0437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8712, device='cuda:0', dtype=torch.float64)
tensor([-2.2615, -3.2889, -3.2980, -3.9149, -4.0694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5308, device='cuda:0', dtype=torch.float64)
tensor([-2.2545, -3.2668, -3.2812, -3.8386, -4.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2919, device='cuda:0', dtype=torch.float64)
tensor([-2.2539, -3.2349, -3.2968, -3.7489, -4.0844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9582, device='cuda:0', dtype=torch.float64)
tensor([-2.2361, -3.1796, -3.3310, -3.7462, -4.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1888, device='cuda:0', dtype=torch.float64)
tensor([-2.2213, -3.1447, -3.3996, -3.6987, -4.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3318, device='cuda:0', dtype=torch.float64)
tensor([-2.2136, -3.1261, -3.5180, -3.6471, -4.1303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5063, device='cuda:0', dtype=torch.float64)
tensor([-2.2042, -3.0966, -3.5345, -3.5967, -4.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2719, device='cuda:0', dtype=torch.float64)
tensor([-2.1869, -3.0549, -3.4950, -3.6181, -4.1482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9408, device='cuda:0', dtype=torch.float64)
tensor([-2.1892, -3.0495, -3.4991, -3.6736, -4.1259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4893, device='cuda:0', dtype=torch.float64)
tensor([-2.2156, -3.0639, -3.5031, -3.7555, -4.0787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0485, device='cuda:0', dtype=torch.float64)
tensor([-2.2518, -3.0811, -3.4949, -3.7802, -4.0186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9396, device='cuda:0', dtype=torch.float64)
tensor([-2.2956, -3.1218, -3.4787, -3.7667, -3.9753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6072, device='cuda:0', dtype=torch.float64)
tensor([-2.3333, -3.1701, -3.4269, -3.7507, -3.9718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2446, device='cuda:0', dtype=torch.float64)
tensor([-2.3444, -3.1939, -3.3848, -3.7959, -3.9588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1234, device='cuda:0', dtype=torch.float64)
tensor([-2.3416, -3.1848, -3.3716, -3.9268, -3.9561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9985, device='cuda:0', dtype=torch.float64)
tensor([-2.3088, -3.1558, -3.3731, -3.9082, -3.9550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7567, device='cuda:0', dtype=torch.float64)
tensor([-2.2899, -3.1381, -3.3489, -3.8398, -3.9243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4549, device='cuda:0', dtype=torch.float64)
tensor([-2.2781, -3.1375, -3.3419, -3.7969, -3.8915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5923, device='cuda:0', dtype=torch.float64)
tensor([-2.2786, -3.1491, -3.3370, -3.8045, -3.8970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3014, device='cuda:0', dtype=torch.float64)
tensor([-2.2829, -3.1526, -3.3567, -3.8272, -3.9328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2706, device='cuda:0', dtype=torch.float64)
tensor([-2.2693, -3.1439, -3.3563, -3.8082, -3.9313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1523, device='cuda:0', dtype=torch.float64)
tensor([-2.2358, -3.1382, -3.4519, -3.8332, -3.9382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4177, device='cuda:0', dtype=torch.float64)
tensor([-2.2403, -3.1525, -3.5563, -3.8644, -3.9572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3581, device='cuda:0', dtype=torch.float64)
tensor([-2.2405, -3.1358, -3.3981, -3.9373, -3.9552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6447, device='cuda:0', dtype=torch.float64)
tensor([-2.2725, -3.1285, -3.3258, -3.8994, -3.9739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9261, device='cuda:0', dtype=torch.float64)
tensor([-2.3128, -3.1206, -3.3194, -3.7767, -3.9965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9720, device='cuda:0', dtype=torch.float64)
tensor([-2.3485, -3.1114, -3.3572, -3.7335, -4.0155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1939, device='cuda:0', dtype=torch.float64)
tensor([-2.3336, -3.0834, -3.4097, -3.7988, -3.9874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7360, device='cuda:0', dtype=torch.float64)
tensor([-2.3168, -3.0966, -3.4366, -3.9842, -3.9728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7544, device='cuda:0', dtype=torch.float64)
tensor([-2.2988, -3.1227, -3.4342, -3.9424, -3.9824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0996, device='cuda:0', dtype=torch.float64)
tensor([-2.2801, -3.1352, -3.4661, -3.8604, -3.9946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2762, device='cuda:0', dtype=torch.float64)
tensor([-2.2695, -3.0937, -3.4750, -3.7907, -4.0078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4479, device='cuda:0', dtype=torch.float64)
tensor([-2.2496, -3.0702, -3.4290, -3.7428, -4.0282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0381, device='cuda:0', dtype=torch.float64)
tensor([-2.2224, -3.0697, -3.4133, -3.7846, -4.0566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0570, device='cuda:0', dtype=torch.float64)
tensor([-2.1926, -3.0538, -3.4361, -3.8304, -4.0551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4673, device='cuda:0', dtype=torch.float64)
tensor([-2.1742, -3.0103, -3.4652, -3.8455, -4.0586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9723, device='cuda:0', dtype=torch.float64)
tensor([-2.1903, -2.9959, -3.5048, -3.8621, -4.0681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5574, device='cuda:0', dtype=torch.float64)
tensor([-2.2223, -3.0175, -3.5375, -3.8576, -4.0900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0412, device='cuda:0', dtype=torch.float64)
tensor([-2.2805, -3.0475, -3.5436, -3.8170, -4.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1460, device='cuda:0', dtype=torch.float64)
tensor([-2.3433, -3.0813, -3.4973, -3.7780, -4.0851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2432, device='cuda:0', dtype=torch.float64)
tensor([-2.3860, -3.1373, -3.4737, -3.7647, -4.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5407, device='cuda:0', dtype=torch.float64)
tensor([-2.4153, -3.1667, -3.4246, -3.6881, -4.0876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3705, device='cuda:0', dtype=torch.float64)
tensor([-2.4245, -3.2197, -3.3200, -3.6360, -4.1105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2209, device='cuda:0', dtype=torch.float64)
tensor([-2.4078, -3.1948, -3.2254, -3.6489, -4.0697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1353, device='cuda:0', dtype=torch.float64)
tensor([-2.3721, -3.1435, -3.1959, -3.6998, -4.0015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0996, device='cuda:0', dtype=torch.float64)
tensor([-2.3143, -3.0931, -3.2423, -3.8368, -3.9421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9724, device='cuda:0', dtype=torch.float64)
tensor([-2.2697, -3.0969, -3.3180, -3.9394, -3.9148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4438, device='cuda:0', dtype=torch.float64)
tensor([-2.2356, -3.0951, -3.3899, -3.8739, -3.9179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8061, device='cuda:0', dtype=torch.float64)
tensor([-2.2018, -3.1034, -3.4541, -3.8295, -3.9343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2049, device='cuda:0', dtype=torch.float64)
tensor([-2.1913, -3.1290, -3.5253, -3.8510, -3.9582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7803, device='cuda:0', dtype=torch.float64)
tensor([-2.1995, -3.1246, -3.5977, -3.8450, -3.9408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5750, device='cuda:0', dtype=torch.float64)
tensor([-2.2232, -3.1469, -3.6442, -3.8903, -3.9369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8438, device='cuda:0', dtype=torch.float64)
tensor([-2.2493, -3.1974, -3.6962, -3.9716, -3.9352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1167, device='cuda:0', dtype=torch.float64)
tensor([-2.3010, -3.2716, -3.7392, -4.0097, -3.9408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0340, device='cuda:0', dtype=torch.float64)
tensor([-2.3548, -3.3385, -3.7483, -4.0288, -3.9361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0416, device='cuda:0', dtype=torch.float64)
tensor([-2.4116, -3.3614, -3.7189, -3.9814, -3.9210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8766, device='cuda:0', dtype=torch.float64)
tensor([-2.4430, -3.3605, -3.6732, -3.8904, -3.9197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1242, device='cuda:0', dtype=torch.float64)
tensor([-2.4224, -3.3205, -3.6166, -3.7980, -3.9289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9805, device='cuda:0', dtype=torch.float64)
tensor([-2.3590, -3.2554, -3.5855, -3.7891, -3.9409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9536, device='cuda:0', dtype=torch.float64)
tensor([-2.2986, -3.2189, -3.5381, -3.8255, -3.9574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9061, device='cuda:0', dtype=torch.float64)
tensor([-2.2575, -3.1938, -3.4722, -3.8412, -3.9920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9609, device='cuda:0', dtype=torch.float64)
tensor([-2.2301, -3.1488, -3.4178, -3.8497, -4.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9385, device='cuda:0', dtype=torch.float64)
tensor([-2.2319, -3.1323, -3.3661, -3.8103, -4.0297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7916, device='cuda:0', dtype=torch.float64)
tensor([-2.2399, -3.1123, -3.3426, -3.7844, -4.0301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9985, device='cuda:0', dtype=torch.float64)
tensor([-2.2481, -3.1159, -3.3688, -3.7510, -4.0487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5288, device='cuda:0', dtype=torch.float64)
tensor([-2.3190, -3.1317, -3.3974, -3.7012, -4.0842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8888, device='cuda:0', dtype=torch.float64)
tensor([-2.3883, -3.1512, -3.4299, -3.6589, -4.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3570, device='cuda:0', dtype=torch.float64)
tensor([-2.4273, -3.1217, -3.4802, -3.6037, -4.0768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2047, device='cuda:0', dtype=torch.float64)
tensor([-2.4462, -3.0956, -3.5404, -3.5817, -4.0499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1898, device='cuda:0', dtype=torch.float64)
tensor([-2.4733, -3.1040, -3.5824, -3.5673, -4.0521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6715, device='cuda:0', dtype=torch.float64)
tensor([-2.4691, -3.1063, -3.6301, -3.6007, -4.0483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2774, device='cuda:0', dtype=torch.float64)
tensor([-2.4525, -3.1136, -3.6450, -3.6663, -4.0273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0043, device='cuda:0', dtype=torch.float64)
tensor([-2.4307, -3.1412, -3.6505, -3.7358, -4.0021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9087, device='cuda:0', dtype=torch.float64)
tensor([-2.4014, -3.1676, -3.6580, -3.8044, -3.9923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1920, device='cuda:0', dtype=torch.float64)
tensor([-2.3857, -3.2492, -3.6636, -3.8494, -4.0157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2971, device='cuda:0', dtype=torch.float64)
tensor([-2.3862, -3.3026, -3.6769, -3.7828, -4.0359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2977, device='cuda:0', dtype=torch.float64)
tensor([-2.3999, -3.3367, -3.6466, -3.7164, -4.0369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9145, device='cuda:0', dtype=torch.float64)
tensor([-2.3890, -3.3362, -3.5555, -3.6815, -4.0068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2246, device='cuda:0', dtype=torch.float64)
tensor([-2.3974, -3.3688, -3.4685, -3.7067, -3.9855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1093, device='cuda:0', dtype=torch.float64)
tensor([-2.3990, -3.3381, -3.4192, -3.6644, -3.9260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1996, device='cuda:0', dtype=torch.float64)
tensor([-2.3994, -3.2763, -3.4313, -3.5981, -3.8950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2385, device='cuda:0', dtype=torch.float64)
tensor([-2.3998, -3.2674, -3.4780, -3.5903, -3.9097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8811, device='cuda:0', dtype=torch.float64)
tensor([-2.3916, -3.2023, -3.5409, -3.6719, -3.9344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2167, device='cuda:0', dtype=torch.float64)
tensor([-2.3886, -3.1345, -3.6044, -3.8030, -3.9425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4238, device='cuda:0', dtype=torch.float64)
tensor([-2.3815, -3.1405, -3.6360, -3.8274, -3.9424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9374, device='cuda:0', dtype=torch.float64)
tensor([-2.3854, -3.1848, -3.6641, -3.8271, -3.9421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3464, device='cuda:0', dtype=torch.float64)
tensor([-2.3538, -3.1945, -3.7751, -3.9384, -3.9073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8440, device='cuda:0', dtype=torch.float64)
tensor([-2.3122, -3.1590, -3.9015, -4.0340, -3.8649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2548, device='cuda:0', dtype=torch.float64)
tensor([-2.2836, -3.1522, -3.8614, -4.0819, -3.8366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0498, device='cuda:0', dtype=torch.float64)
tensor([-2.3042, -3.1788, -3.7495, -4.0725, -3.8574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1619, device='cuda:0', dtype=torch.float64)
tensor([-2.3401, -3.2060, -3.6427, -3.9943, -3.9114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8114, device='cuda:0', dtype=torch.float64)
tensor([-2.3632, -3.2443, -3.4993, -3.9168, -3.9867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5857, device='cuda:0', dtype=torch.float64)
tensor([-2.3728, -3.2279, -3.3922, -3.8845, -3.9976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6340, device='cuda:0', dtype=torch.float64)
tensor([-2.3488, -3.1824, -3.3479, -3.9449, -3.9897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5739, device='cuda:0', dtype=torch.float64)
tensor([-2.3621, -3.1798, -3.3088, -4.0099, -4.0127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0104, device='cuda:0', dtype=torch.float64)
tensor([-2.3750, -3.1889, -3.2282, -3.9433, -4.0150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7245, device='cuda:0', dtype=torch.float64)
tensor([-2.4063, -3.2420, -3.1532, -3.8521, -4.0420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1718, device='cuda:0', dtype=torch.float64)
tensor([-2.4172, -3.3347, -3.1449, -3.8148, -4.0655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5572, device='cuda:0', dtype=torch.float64)
tensor([-2.3997, -3.3467, -3.2244, -3.7915, -4.0372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9020, device='cuda:0', dtype=torch.float64)
tensor([-2.3326, -3.3319, -3.3574, -3.7973, -3.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4792, device='cuda:0', dtype=torch.float64)
tensor([-2.2681, -3.3765, -3.5307, -3.9021, -3.9579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4633, device='cuda:0', dtype=torch.float64)
tensor([-2.2548, -3.4632, -3.6506, -4.0445, -4.0139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5276, device='cuda:0', dtype=torch.float64)
tensor([-2.2831, -3.3388, -3.6212, -4.0559, -3.9977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4660, device='cuda:0', dtype=torch.float64)
tensor([-2.3570, -3.3414, -3.5253, -3.8912, -4.0498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2156, device='cuda:0', dtype=torch.float64)
tensor([-2.4534, -3.4130, -3.4742, -3.7012, -4.1290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6787, device='cuda:0', dtype=torch.float64)
tensor([-2.4953, -3.3863, -3.4812, -3.6301, -4.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8060, device='cuda:0', dtype=torch.float64)
tensor([-2.4569, -3.2563, -3.5453, -3.6785, -4.0292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2490, device='cuda:0', dtype=torch.float64)
tensor([-2.3994, -3.1857, -3.6106, -3.8433, -3.9772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1811, device='cuda:0', dtype=torch.float64)
tensor([-2.3773, -3.1715, -3.6350, -3.9853, -3.9599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3961, device='cuda:0', dtype=torch.float64)
tensor([-2.4023, -3.1502, -3.6314, -3.9779, -3.9485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9107, device='cuda:0', dtype=torch.float64)
tensor([-2.3732, -3.1464, -3.6173, -3.8867, -3.9035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9812, device='cuda:0', dtype=torch.float64)
tensor([-2.3551, -3.2128, -3.6035, -3.8089, -3.8916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7637, device='cuda:0', dtype=torch.float64)
tensor([-2.3578, -3.2986, -3.6290, -3.7705, -3.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1832, device='cuda:0', dtype=torch.float64)
tensor([-2.3890, -3.3775, -3.6645, -3.7225, -3.8701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0650, device='cuda:0', dtype=torch.float64)
tensor([-2.4208, -3.3748, -3.7094, -3.7183, -3.8206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9623, device='cuda:0', dtype=torch.float64)
tensor([-2.4405, -3.2891, -3.7521, -3.7477, -3.7865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8186, device='cuda:0', dtype=torch.float64)
tensor([-2.4712, -3.2620, -3.7748, -3.8089, -3.8255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2432, device='cuda:0', dtype=torch.float64)
tensor([-2.5305, -3.2863, -3.7122, -3.7563, -3.8945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4310, device='cuda:0', dtype=torch.float64)
tensor([-2.5811, -3.3195, -3.6352, -3.6260, -3.9635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2653, device='cuda:0', dtype=torch.float64)
tensor([-2.6254, -3.3581, -3.5850, -3.5343, -4.0333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2716, device='cuda:0', dtype=torch.float64)
tensor([-2.6169, -3.3386, -3.5453, -3.5027, -4.0720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6385, device='cuda:0', dtype=torch.float64)
tensor([-2.5576, -3.2550, -3.5432, -3.5342, -4.0503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8903, device='cuda:0', dtype=torch.float64)
tensor([-2.4900, -3.1871, -3.5654, -3.6331, -4.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2208, device='cuda:0', dtype=torch.float64)
tensor([-2.4261, -3.1509, -3.5991, -3.7232, -4.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3681, device='cuda:0', dtype=torch.float64)
tensor([-2.3915, -3.1398, -3.5921, -3.7286, -4.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2434, device='cuda:0', dtype=torch.float64)
tensor([-2.4118, -3.1819, -3.5843, -3.6878, -4.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7802, device='cuda:0', dtype=torch.float64)
tensor([-2.4380, -3.2626, -3.5544, -3.7091, -4.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8231, device='cuda:0', dtype=torch.float64)
tensor([-2.4903, -3.3089, -3.4989, -3.7746, -4.2658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1121, device='cuda:0', dtype=torch.float64)
tensor([-2.5143, -3.3315, -3.4910, -3.8461, -4.2773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5927, device='cuda:0', dtype=torch.float64)
tensor([-2.5227, -3.3543, -3.5214, -3.9275, -4.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6826, device='cuda:0', dtype=torch.float64)
tensor([-2.4897, -3.3559, -3.5678, -4.0397, -4.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1834, device='cuda:0', dtype=torch.float64)
tensor([-2.4949, -3.3444, -3.5712, -4.1326, -4.1448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7604, device='cuda:0', dtype=torch.float64)
tensor([-2.5021, -3.3343, -3.5440, -4.1857, -4.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6199, device='cuda:0', dtype=torch.float64)
tensor([-2.5263, -3.2974, -3.4966, -4.0646, -4.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0524, device='cuda:0', dtype=torch.float64)
tensor([-2.5390, -3.2915, -3.4417, -3.9442, -4.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3428, device='cuda:0', dtype=torch.float64)
tensor([-2.5179, -3.3261, -3.4019, -3.9106, -4.2089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3094, device='cuda:0', dtype=torch.float64)
tensor([-2.4608, -3.3454, -3.4271, -3.9489, -4.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0975, device='cuda:0', dtype=torch.float64)
tensor([-2.3941, -3.3047, -3.4860, -4.0255, -4.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1752, device='cuda:0', dtype=torch.float64)
tensor([-2.3383, -3.2695, -3.5835, -4.0932, -4.0208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0034, device='cuda:0', dtype=torch.float64)
tensor([-2.3427, -3.2532, -3.6042, -4.1134, -3.9739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4851, device='cuda:0', dtype=torch.float64)
tensor([-2.4148, -3.2137, -3.5233, -4.0368, -3.9508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7024, device='cuda:0', dtype=torch.float64)
tensor([-2.5339, -3.2446, -3.4460, -3.9513, -3.9458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0449, device='cuda:0', dtype=torch.float64)
tensor([-2.6301, -3.3183, -3.3995, -3.8900, -3.9467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7283, device='cuda:0', dtype=torch.float64)
tensor([-2.6776, -3.3851, -3.4100, -3.8836, -3.9497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8504, device='cuda:0', dtype=torch.float64)
tensor([-2.6557, -3.4209, -3.5112, -3.9637, -3.9688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8650, device='cuda:0', dtype=torch.float64)
tensor([-2.5965, -3.4782, -3.6114, -4.0601, -4.0089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1575, device='cuda:0', dtype=torch.float64)
tensor([-2.5225, -3.5399, -3.6960, -4.1496, -4.0438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9952, device='cuda:0', dtype=torch.float64)
tensor([-2.4459, -3.5328, -3.7540, -4.2394, -4.0472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8409, device='cuda:0', dtype=torch.float64)
tensor([-2.3956, -3.4949, -3.8072, -4.1989, -4.0603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2729, device='cuda:0', dtype=torch.float64)
tensor([-2.4008, -3.4575, -3.8585, -4.1642, -4.0645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1470, device='cuda:0', dtype=torch.float64)
tensor([-2.4523, -3.4079, -3.8221, -4.1016, -4.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9419, device='cuda:0', dtype=torch.float64)
tensor([-2.4926, -3.3565, -3.7778, -4.0140, -4.1002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9390, device='cuda:0', dtype=torch.float64)
tensor([-2.5494, -3.3338, -3.7234, -3.9087, -4.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8567, device='cuda:0', dtype=torch.float64)
tensor([-2.5763, -3.3384, -3.6505, -3.8020, -4.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4558, device='cuda:0', dtype=torch.float64)
tensor([-2.5844, -3.3606, -3.5757, -3.7108, -4.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5655, device='cuda:0', dtype=torch.float64)
tensor([-2.5484, -3.3623, -3.4993, -3.7095, -4.2481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1456, device='cuda:0', dtype=torch.float64)
tensor([-2.5189, -3.3831, -3.4584, -3.7838, -4.2535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5517, device='cuda:0', dtype=torch.float64)
tensor([-2.4914, -3.3971, -3.4608, -3.9588, -4.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1469, device='cuda:0', dtype=torch.float64)
tensor([-2.4934, -3.4338, -3.4860, -4.0697, -4.3258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8705, device='cuda:0', dtype=torch.float64)
tensor([-2.5455, -3.4426, -3.4814, -3.9755, -4.3187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2517, device='cuda:0', dtype=torch.float64)
tensor([-2.6093, -3.4743, -3.4709, -3.8482, -4.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3425, device='cuda:0', dtype=torch.float64)
tensor([-2.7028, -3.4956, -3.4780, -3.8048, -4.2774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2851, device='cuda:0', dtype=torch.float64)
tensor([-2.7146, -3.4940, -3.4595, -3.7929, -4.2978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0740, device='cuda:0', dtype=torch.float64)
tensor([-2.6653, -3.4952, -3.4659, -3.8474, -4.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3362, device='cuda:0', dtype=torch.float64)
tensor([-2.6176, -3.5392, -3.5106, -3.9096, -4.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8951, device='cuda:0', dtype=torch.float64)
tensor([-2.5806, -3.4374, -3.5827, -3.9451, -4.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0748, device='cuda:0', dtype=torch.float64)
tensor([-2.5525, -3.2827, -3.6319, -3.8972, -4.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0840, device='cuda:0', dtype=torch.float64)
tensor([-2.5071, -3.2461, -3.6956, -3.8552, -4.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9223, device='cuda:0', dtype=torch.float64)
tensor([-2.4490, -3.2248, -3.7550, -3.8346, -4.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2979, device='cuda:0', dtype=torch.float64)
tensor([-2.4070, -3.2467, -3.7652, -3.8608, -4.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0911, device='cuda:0', dtype=torch.float64)
tensor([-2.3897, -3.2728, -3.7586, -3.9711, -4.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2167, device='cuda:0', dtype=torch.float64)
tensor([-2.3761, -3.3372, -3.7708, -4.1580, -4.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2911, device='cuda:0', dtype=torch.float64)
tensor([-2.3822, -3.4124, -3.8028, -4.0584, -4.2226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9418, device='cuda:0', dtype=torch.float64)
tensor([-2.3852, -3.4468, -3.8556, -4.0787, -4.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5966, device='cuda:0', dtype=torch.float64)
tensor([-2.4126, -3.4307, -3.9279, -4.1147, -4.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9760, device='cuda:0', dtype=torch.float64)
tensor([-2.4885, -3.4130, -3.9274, -4.2146, -4.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8409, device='cuda:0', dtype=torch.float64)
tensor([-2.5244, -3.4291, -3.8990, -4.2800, -4.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2540, device='cuda:0', dtype=torch.float64)
tensor([-2.5163, -3.4331, -3.8200, -4.2185, -4.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2624, device='cuda:0', dtype=torch.float64)
tensor([-2.5101, -3.4373, -3.8330, -4.1903, -4.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1450, device='cuda:0', dtype=torch.float64)
tensor([-2.5172, -3.4446, -3.8295, -4.2088, -4.0644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1151, device='cuda:0', dtype=torch.float64)
tensor([-2.5639, -3.4481, -3.8039, -4.1887, -4.0628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1925, device='cuda:0', dtype=torch.float64)
tensor([-2.6335, -3.4931, -3.7491, -4.1022, -4.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9075, device='cuda:0', dtype=torch.float64)
tensor([-2.7155, -3.5684, -3.7133, -4.0309, -4.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8124, device='cuda:0', dtype=torch.float64)
tensor([-2.8020, -3.6272, -3.6582, -3.9660, -4.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8837, device='cuda:0', dtype=torch.float64)
tensor([-2.8823, -3.6299, -3.5785, -3.8737, -4.2942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8481, device='cuda:0', dtype=torch.float64)
tensor([-2.9184, -3.6078, -3.5510, -3.8394, -4.2960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6911, device='cuda:0', dtype=torch.float64)
tensor([-2.8983, -3.5848, -3.5658, -3.7557, -4.3052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6331, device='cuda:0', dtype=torch.float64)
tensor([-2.8695, -3.5656, -3.6029, -3.7722, -4.2914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8359, device='cuda:0', dtype=torch.float64)
tensor([-2.8390, -3.5297, -3.6251, -3.8801, -4.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0077, device='cuda:0', dtype=torch.float64)
tensor([-2.7953, -3.5163, -3.6373, -4.1415, -4.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7523, device='cuda:0', dtype=torch.float64)
tensor([-2.7412, -3.5384, -3.6772, -4.4044, -4.1158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0510, device='cuda:0', dtype=torch.float64)
tensor([-2.6930, -3.5734, -3.7381, -4.5263, -4.0346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0726, device='cuda:0', dtype=torch.float64)
tensor([-2.6421, -3.6019, -3.8302, -4.5725, -3.9629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0598, device='cuda:0', dtype=torch.float64)
tensor([-2.6208, -3.6232, -3.9435, -4.5787, -3.9154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8858, device='cuda:0', dtype=torch.float64)
tensor([-2.6113, -3.5222, -3.9721, -4.5879, -3.8751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3979, device='cuda:0', dtype=torch.float64)
tensor([-2.6049, -3.4416, -3.9448, -4.5857, -3.8590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2963, device='cuda:0', dtype=torch.float64)
tensor([-2.6051, -3.4442, -3.8524, -4.5467, -3.8854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9773, device='cuda:0', dtype=torch.float64)
tensor([-2.6054, -3.4587, -3.7921, -4.4844, -3.9474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0838, device='cuda:0', dtype=torch.float64)
tensor([-2.6292, -3.4651, -3.7278, -4.3466, -4.0145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3453, device='cuda:0', dtype=torch.float64)
tensor([-2.7225, -3.5137, -3.6730, -4.2228, -4.1292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4840, device='cuda:0', dtype=torch.float64)
tensor([-2.8265, -3.5660, -3.6319, -4.1447, -4.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6268, device='cuda:0', dtype=torch.float64)
tensor([-2.8392, -3.5825, -3.6144, -4.1250, -4.3208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1381, device='cuda:0', dtype=torch.float64)
tensor([-2.6965, -3.5601, -3.5988, -4.1390, -4.3772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8698, device='cuda:0', dtype=torch.float64)
tensor([-2.6135, -3.5389, -3.5864, -4.1880, -4.3771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5318, device='cuda:0', dtype=torch.float64)
tensor([-2.5948, -3.5385, -3.6116, -4.2610, -4.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3441, device='cuda:0', dtype=torch.float64)
tensor([-2.5750, -3.5235, -3.6950, -4.2371, -4.3573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3516, device='cuda:0', dtype=torch.float64)
tensor([-2.5879, -3.5527, -3.7650, -4.1140, -4.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7444, device='cuda:0', dtype=torch.float64)
tensor([-2.6096, -3.6001, -3.8136, -4.0109, -4.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6849, device='cuda:0', dtype=torch.float64)
tensor([-2.6452, -3.6612, -3.8700, -3.9779, -4.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1108, device='cuda:0', dtype=torch.float64)
tensor([-2.6906, -3.7174, -3.9599, -3.9563, -4.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3919, device='cuda:0', dtype=torch.float64)
tensor([-2.7397, -3.7924, -4.0350, -3.9237, -4.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0976, device='cuda:0', dtype=torch.float64)
tensor([-2.7955, -3.8531, -4.0968, -3.8821, -4.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1979, device='cuda:0', dtype=torch.float64)
tensor([-2.8373, -3.8930, -4.1585, -3.8629, -4.2929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6287, device='cuda:0', dtype=torch.float64)
tensor([-2.8307, -3.9190, -4.2250, -3.9090, -4.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9078, device='cuda:0', dtype=torch.float64)
tensor([-2.8455, -3.9113, -4.2335, -3.9704, -4.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6974, device='cuda:0', dtype=torch.float64)
tensor([-2.8550, -3.8749, -4.2396, -4.0553, -4.5005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1946, device='cuda:0', dtype=torch.float64)
tensor([-2.8257, -3.8530, -4.2210, -4.0427, -4.5682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8372, device='cuda:0', dtype=torch.float64)
tensor([-2.7618, -3.7959, -4.1921, -4.0714, -4.6473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7865, device='cuda:0', dtype=torch.float64)
tensor([-2.6770, -3.7084, -4.1405, -4.0903, -4.6513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2104, device='cuda:0', dtype=torch.float64)
tensor([-2.6209, -3.6581, -4.0479, -4.2140, -4.6244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9414, device='cuda:0', dtype=torch.float64)
tensor([-2.5773, -3.6436, -3.9594, -4.7638, -4.5529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2069, device='cuda:0', dtype=torch.float64)
tensor([-2.5677, -3.6107, -3.9138, -4.7400, -4.4625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8570, device='cuda:0', dtype=torch.float64)
tensor([-2.5938, -3.6112, -3.8483, -4.3503, -4.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4441, device='cuda:0', dtype=torch.float64)
tensor([-2.6610, -3.6176, -3.7782, -4.2183, -4.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9899, device='cuda:0', dtype=torch.float64)
tensor([-2.7239, -3.6154, -3.7220, -4.1364, -4.2925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4583, device='cuda:0', dtype=torch.float64)
tensor([-2.7687, -3.6282, -3.6938, -4.1846, -4.2851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9329, device='cuda:0', dtype=torch.float64)
tensor([-2.7504, -3.6363, -3.7399, -4.4713, -4.3006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1273, device='cuda:0', dtype=torch.float64)
tensor([-2.7025, -3.6108, -3.9046, -4.6688, -4.3033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4596, device='cuda:0', dtype=torch.float64)
tensor([-2.6708, -3.6165, -4.0996, -4.5860, -4.3274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4962, device='cuda:0', dtype=torch.float64)
tensor([-2.6506, -3.6537, -4.0628, -4.4859, -4.3968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0464, device='cuda:0', dtype=torch.float64)
tensor([-2.6700, -3.7121, -3.9334, -4.5460, -4.5238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3225, device='cuda:0', dtype=torch.float64)
tensor([-2.7462, -3.7626, -3.8628, -4.6005, -4.5390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8230, device='cuda:0', dtype=torch.float64)
tensor([-2.7966, -3.8822, -3.8437, -4.6699, -4.4570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0267, device='cuda:0', dtype=torch.float64)
tensor([-2.8823, -4.1898, -3.8278, -4.5801, -4.3590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4960, device='cuda:0', dtype=torch.float64)
tensor([-2.9681, -3.8806, -3.8543, -4.2712, -4.3078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0939, device='cuda:0', dtype=torch.float64)
tensor([-3.0433, -3.8602, -3.9219, -4.1090, -4.2891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0724, device='cuda:0', dtype=torch.float64)
tensor([-3.0314, -3.8100, -3.9688, -4.0394, -4.2851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9757, device='cuda:0', dtype=torch.float64)
tensor([-3.0027, -3.7689, -4.0143, -4.0098, -4.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9019, device='cuda:0', dtype=torch.float64)
tensor([-2.9807, -3.6679, -4.0686, -4.0295, -4.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2416, device='cuda:0', dtype=torch.float64)
tensor([-3.0105, -3.6234, -4.0724, -4.2044, -4.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3135, device='cuda:0', dtype=torch.float64)
tensor([-3.0595, -3.5851, -3.9492, -4.3362, -4.2147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6410, device='cuda:0', dtype=torch.float64)
tensor([-3.1154, -3.5789, -3.8710, -4.2760, -4.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2757, device='cuda:0', dtype=torch.float64)
tensor([-3.1549, -3.6171, -3.8436, -4.1696, -4.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1255, device='cuda:0', dtype=torch.float64)
tensor([-3.1848, -3.6471, -3.9333, -4.0476, -4.2510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1645, device='cuda:0', dtype=torch.float64)
tensor([-3.3165, -3.6676, -4.0504, -4.0470, -4.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2334, device='cuda:0', dtype=torch.float64)
tensor([-3.5420, -3.6424, -4.1279, -4.1178, -4.3058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3757, device='cuda:0', dtype=torch.float64)
tensor([-3.1402, -3.5506, -4.1133, -4.1327, -4.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1670, device='cuda:0', dtype=torch.float64)
tensor([-2.9019, -3.4760, -4.1036, -4.2016, -4.2753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7988, device='cuda:0', dtype=torch.float64)
tensor([-2.8517, -3.4571, -4.1339, -4.5711, -4.3467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1588, device='cuda:0', dtype=torch.float64)
tensor([-2.8606, -3.5131, -4.1356, -4.9857, -4.4804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5346, device='cuda:0', dtype=torch.float64)
tensor([-2.9211, -3.5971, -4.0436, -4.6492, -4.5304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5205, device='cuda:0', dtype=torch.float64)
tensor([-2.9512, -3.6383, -4.0149, -4.1398, -4.5446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0891, device='cuda:0', dtype=torch.float64)
tensor([-2.9938, -3.7085, -4.1694, -4.0337, -4.5466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8278, device='cuda:0', dtype=torch.float64)
tensor([-3.1356, -3.7975, -4.2568, -4.0816, -4.5860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6431, device='cuda:0', dtype=torch.float64)
tensor([-3.1142, -3.7738, -4.0374, -4.1507, -4.6170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4949, device='cuda:0', dtype=torch.float64)
tensor([-3.0260, -3.7004, -3.9673, -4.2206, -4.5732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3421, device='cuda:0', dtype=torch.float64)
tensor([-2.9485, -3.6418, -4.0288, -4.3824, -4.4695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9715, device='cuda:0', dtype=torch.float64)
tensor([-2.9491, -3.7394, -4.1307, -4.6065, -4.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3595, device='cuda:0', dtype=torch.float64)
tensor([-3.0098, -4.0381, -4.2839, -4.9332, -4.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4292, device='cuda:0', dtype=torch.float64)
tensor([-3.0041, -3.7168, -4.3948, -5.0974, -4.4526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9130, device='cuda:0', dtype=torch.float64)
tensor([-3.0307, -3.7804, -4.4322, -5.0839, -4.5757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4431, device='cuda:0', dtype=torch.float64)
tensor([-3.1642, -3.8673, -4.3938, -4.9234, -4.6861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7574, device='cuda:0', dtype=torch.float64)
tensor([-3.2831, -3.9119, -4.3784, -4.7412, -4.7412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8161, device='cuda:0', dtype=torch.float64)
tensor([-3.3986, -3.9934, -4.3931, -4.6020, -4.7835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0195, device='cuda:0', dtype=torch.float64)
tensor([-3.4780, -4.1388, -4.2330, -4.5011, -4.8195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8908, device='cuda:0', dtype=torch.float64)
tensor([-3.5546, -4.3117, -4.1012, -4.4478, -4.8604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0508, device='cuda:0', dtype=torch.float64)
tensor([-3.6356, -4.5810, -4.0619, -4.4476, -4.9574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9556, device='cuda:0', dtype=torch.float64)
tensor([-3.6766, -4.7626, -4.0315, -4.4875, -5.1541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6569, device='cuda:0', dtype=torch.float64)
tensor([-3.6640, -4.8879, -4.0167, -4.5304, -5.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4321, device='cuda:0', dtype=torch.float64)
tensor([-3.5838, -4.8650, -4.0050, -4.6330, -4.9881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7165, device='cuda:0', dtype=torch.float64)
tensor([-3.4696, -4.7792, -4.0345, -4.7378, -4.8241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1639, device='cuda:0', dtype=torch.float64)
tensor([-3.3375, -4.5144, -4.1134, -4.8595, -4.8367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8869, device='cuda:0', dtype=torch.float64)
tensor([-3.2287, -4.3732, -4.2114, -4.9696, -5.0547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8595, device='cuda:0', dtype=torch.float64)
tensor([-3.1362, -4.2789, -4.3181, -5.0215, -5.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1554, device='cuda:0', dtype=torch.float64)
tensor([-3.2674, -4.1886, -4.4782, -5.1132, -5.0872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0815, device='cuda:0', dtype=torch.float64)
tensor([-3.1497, -4.0693, -4.5193, -5.0911, -5.0315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1018, device='cuda:0', dtype=torch.float64)
tensor([-2.9129, -3.9846, -4.4428, -4.9755, -5.0435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8698, device='cuda:0', dtype=torch.float64)
tensor([-2.8059, -3.9825, -4.4018, -4.9409, -5.0879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2677, device='cuda:0', dtype=torch.float64)
tensor([-2.7929, -4.1889, -4.3925, -4.9160, -5.0492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0326, device='cuda:0', dtype=torch.float64)
tensor([-2.8579, -4.5696, -4.4028, -4.9838, -4.9964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8979, device='cuda:0', dtype=torch.float64)
tensor([-2.9951, -4.7267, -4.3573, -5.0930, -4.9502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9561, device='cuda:0', dtype=torch.float64)
tensor([-3.1175, -4.3648, -4.3654, -5.1169, -4.9120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0387, device='cuda:0', dtype=torch.float64)
tensor([-3.1645, -4.0225, -4.3181, -5.0976, -4.7988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6105, device='cuda:0', dtype=torch.float64)
tensor([-3.2056, -3.9131, -4.2582, -4.9443, -4.6924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7286, device='cuda:0', dtype=torch.float64)
tensor([-3.2482, -3.9409, -4.2347, -4.9170, -4.6943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1579, device='cuda:0', dtype=torch.float64)
tensor([-3.3447, -4.0880, -4.2035, -4.8829, -4.7386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6530, device='cuda:0', dtype=torch.float64)
tensor([-3.4625, -4.2720, -4.1950, -4.8290, -4.8170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2473, device='cuda:0', dtype=torch.float64)
tensor([-3.5958, -4.3262, -4.1504, -4.7141, -4.8554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9311, device='cuda:0', dtype=torch.float64)
tensor([-3.6887, -4.2172, -4.0421, -4.5980, -4.8370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7337, device='cuda:0', dtype=torch.float64)
tensor([-3.7880, -4.1568, -4.0294, -4.5260, -4.8529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7981, device='cuda:0', dtype=torch.float64)
tensor([-3.8343, -4.1801, -4.0281, -4.5050, -4.8710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7650, device='cuda:0', dtype=torch.float64)
tensor([-3.8351, -4.2764, -4.1071, -4.5709, -4.9043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0122, device='cuda:0', dtype=torch.float64)
tensor([-3.8143, -4.3236, -4.2817, -4.7007, -4.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0414, device='cuda:0', dtype=torch.float64)
tensor([-3.7708, -4.2226, -4.6482, -4.9010, -5.0886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5973, device='cuda:0', dtype=torch.float64)
tensor([-3.7234, -4.1493, -5.0320, -5.1252, -5.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6295, device='cuda:0', dtype=torch.float64)
tensor([-3.6749, -4.1195, -5.3341, -5.2951, -5.3996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7780, device='cuda:0', dtype=torch.float64)
tensor([-3.6267, -4.1248, -5.5976, -5.4491, -5.3325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6957, device='cuda:0', dtype=torch.float64)
tensor([-3.5834, -4.1490, -5.6322, -5.5279, -5.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1717, device='cuda:0', dtype=torch.float64)
tensor([-3.5265, -4.1757, -5.6383, -5.5632, -5.1313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7756, device='cuda:0', dtype=torch.float64)
tensor([-3.4923, -4.2269, -5.5592, -5.5676, -5.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0393, device='cuda:0', dtype=torch.float64)
tensor([-3.4954, -4.2609, -5.5211, -5.5689, -5.0432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6660, device='cuda:0', dtype=torch.float64)
tensor([-3.5829, -4.3756, -5.5492, -5.6725, -4.9989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2265, device='cuda:0', dtype=torch.float64)
tensor([-3.7172, -4.5192, -5.4773, -5.5800, -4.9992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1997, device='cuda:0', dtype=torch.float64)
tensor([-3.8420, -4.6576, -5.3824, -5.3855, -4.9930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0241, device='cuda:0', dtype=torch.float64)
tensor([-3.9558, -4.7316, -5.2237, -5.1699, -5.0518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4209, device='cuda:0', dtype=torch.float64)
tensor([-4.0105, -4.7155, -5.0615, -4.9837, -5.1299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0335, device='cuda:0', dtype=torch.float64)
tensor([-4.0496, -4.7220, -4.9170, -4.8400, -5.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9616, device='cuda:0', dtype=torch.float64)
tensor([-3.9802, -4.6878, -4.8346, -4.6908, -5.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7610, device='cuda:0', dtype=torch.float64)
tensor([-3.9419, -4.6909, -4.7607, -4.5579, -5.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9949, device='cuda:0', dtype=torch.float64)
tensor([-3.9186, -4.6700, -4.7201, -4.4737, -5.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9689, device='cuda:0', dtype=torch.float64)
tensor([-3.9045, -4.6053, -4.7216, -4.4859, -5.6052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7975, device='cuda:0', dtype=torch.float64)
tensor([-3.9010, -4.6056, -4.7643, -4.5605, -5.6944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0560, device='cuda:0', dtype=torch.float64)
tensor([-3.8871, -4.6574, -4.7831, -4.6063, -5.7241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7726, device='cuda:0', dtype=torch.float64)
tensor([-3.8386, -4.7082, -4.8223, -4.6814, -5.7013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9344, device='cuda:0', dtype=torch.float64)
tensor([-3.7908, -4.7216, -4.8609, -4.6887, -5.5682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8405, device='cuda:0', dtype=torch.float64)
tensor([-3.7762, -4.7961, -4.8831, -4.7188, -5.5153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7384, device='cuda:0', dtype=torch.float64)
tensor([-3.7965, -4.9788, -4.8892, -4.7514, -5.5276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4165, device='cuda:0', dtype=torch.float64)
tensor([-3.8643, -5.3070, -4.9280, -4.8482, -5.5542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9236, device='cuda:0', dtype=torch.float64)
tensor([-3.9569, -5.6002, -4.9198, -5.0360, -5.5536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3896, device='cuda:0', dtype=torch.float64)
tensor([-4.0696, -6.2110, -4.9432, -5.5384, -5.6021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8923, device='cuda:0', dtype=torch.float64)
tensor([-4.0665, -6.3803, -4.8567, -6.0027, -5.6219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0253, device='cuda:0', dtype=torch.float64)
tensor([-4.0924, -5.7653, -4.8154, -5.7320, -5.5956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5683, device='cuda:0', dtype=torch.float64)
tensor([-4.1767, -5.4312, -4.8043, -5.4582, -5.5752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6331, device='cuda:0', dtype=torch.float64)
tensor([-4.2551, -5.2214, -4.8342, -5.4174, -5.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7699, device='cuda:0', dtype=torch.float64)
tensor([-4.3533, -5.0812, -4.9011, -5.5254, -5.6126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7944, device='cuda:0', dtype=torch.float64)
tensor([-4.3734, -4.9819, -4.9433, -5.7032, -5.7424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8124, device='cuda:0', dtype=torch.float64)
tensor([-4.3037, -4.9562, -4.9620, -5.9422, -6.0426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5185, device='cuda:0', dtype=torch.float64)
tensor([-4.3220, -4.9342, -5.0511, -6.2212, -6.5357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4515, device='cuda:0', dtype=torch.float64)
tensor([-4.3232, -4.9240, -5.1195, -6.2766, -6.8182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6802, device='cuda:0', dtype=torch.float64)
tensor([-4.3386, -4.9603, -5.2041, -6.1350, -6.7958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5637, device='cuda:0', dtype=torch.float64)
tensor([-4.3685, -5.0373, -5.3499, -5.9550, -6.6712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8095, device='cuda:0', dtype=torch.float64)
tensor([-4.4546, -5.1774, -5.5114, -5.8812, -6.6258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6869, device='cuda:0', dtype=torch.float64)
tensor([-4.5622, -5.3687, -5.7728, -5.9487, -6.5831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0744, device='cuda:0', dtype=torch.float64)
tensor([-4.5972, -5.5608, -6.0269, -6.1331, -6.5007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8750, device='cuda:0', dtype=torch.float64)
tensor([-4.7099, -5.7747, -6.0232, -6.3969, -6.3221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7054, device='cuda:0', dtype=torch.float64)
tensor([-4.9209, -5.9768, -6.0544, -6.7529, -6.2396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5221, device='cuda:0', dtype=torch.float64)
tensor([-5.0891, -5.9829, -6.0294, -7.1029, -6.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7280, device='cuda:0', dtype=torch.float64)
tensor([-5.3937, -6.0254, -6.0787, -7.4622, -6.2393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5904, device='cuda:0', dtype=torch.float64)
tensor([-5.5783, -5.9712, -6.2194, -7.8109, -6.2471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8972, device='cuda:0', dtype=torch.float64)
tensor([-5.7284, -5.8762, -6.3001, -7.9807, -6.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7499, device='cuda:0', dtype=torch.float64)
tensor([-5.8094, -5.8202, -6.3089, -8.1644, -6.2219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7636, device='cuda:0', dtype=torch.float64)
tensor([-6.0590, -5.7832, -6.2429, -8.1305, -6.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6780, device='cuda:0', dtype=torch.float64)
tensor([-5.6176, -5.9189, -6.2818, -8.1519, -6.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9524, device='cuda:0', dtype=torch.float64)
tensor([-5.2073, -6.0887, -6.2121, -7.9910, -6.0374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8054, device='cuda:0', dtype=torch.float64)
tensor([-5.1796, -5.9931, -6.1117, -7.4664, -5.9749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8134, device='cuda:0', dtype=torch.float64)
tensor([-5.3586, -5.9655, -5.9731, -7.1729, -6.0173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3548, device='cuda:0', dtype=torch.float64)
tensor([-5.1884, -6.0179, -5.9367, -7.0910, -6.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5531, device='cuda:0', dtype=torch.float64)
tensor([-5.2325, -6.1904, -6.0159, -7.2403, -6.1330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7568, device='cuda:0', dtype=torch.float64)
tensor([-5.3728, -6.6049, -6.1267, -7.7532, -6.3287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8539, device='cuda:0', dtype=torch.float64)
tensor([-5.5223, -7.2535, -6.2768, -8.7732, -6.7093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3680, device='cuda:0', dtype=torch.float64)
tensor([-5.6500, -8.0192, -6.3620, -9.9423, -7.2251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7648, device='cuda:0', dtype=torch.float64)
tensor([ -5.7725,  -8.8358,  -6.4297, -11.1534,  -8.2869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8503, device='cuda:0', dtype=torch.float64)
tensor([ -5.9565,  -9.8846,  -6.5556, -12.5240,  -9.8439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9866, device='cuda:0', dtype=torch.float64)
tensor([ -6.3638, -10.8258,  -6.6953, -13.9489, -11.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6202, device='cuda:0', dtype=torch.float64)
tensor([ -7.1370, -12.5829,  -6.9908, -15.8772, -12.6111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8440, device='cuda:0', dtype=torch.float64)
tensor([ -7.7438, -14.0321,  -7.5277, -17.9778, -13.5489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8165, device='cuda:0', dtype=torch.float64)
tensor([ -8.4662, -15.5631,  -8.1927, -20.4731, -14.4599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7596, device='cuda:0', dtype=torch.float64)
tensor([ -9.4408, -17.3419,  -9.2533, -22.7703, -15.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2686, device='cuda:0', dtype=torch.float64)
tensor([-10.2388, -18.6349, -10.5507, -24.4535, -15.4208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5803, device='cuda:0', dtype=torch.float64)
tensor([-10.5269, -19.4226, -11.8652, -25.5156, -15.0201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3453, device='cuda:0', dtype=torch.float64)
tensor([-10.6343, -20.0874, -12.8012, -26.3583, -14.2297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6526, device='cuda:0', dtype=torch.float64)
tensor([-10.8704, -21.0195, -13.4231, -27.3391, -13.4876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6495, device='cuda:0', dtype=torch.float64)
tensor([-10.9335, -21.5618, -13.9091, -28.8976, -12.8374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8326, device='cuda:0', dtype=torch.float64)
tensor([-10.9291, -21.4816, -14.4476, -30.1315, -11.6723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3882, device='cuda:0', dtype=torch.float64)
tensor([-11.3429, -20.9855, -14.7324, -30.2540, -10.6272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6209, device='cuda:0', dtype=torch.float64)
tensor([-11.5990, -19.7629, -14.8697, -30.8776, -10.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6214, device='cuda:0', dtype=torch.float64)
tensor([-12.4429, -18.6525, -15.4311, -31.9925,  -9.8168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6029, device='cuda:0', dtype=torch.float64)
tensor([-13.5376, -17.8628, -15.6728, -32.9953,  -9.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8684, device='cuda:0', dtype=torch.float64)
tensor([-15.5129, -17.7349, -15.3951, -33.6129, -10.0258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4526, device='cuda:0', dtype=torch.float64)
tensor([-18.1522, -17.5098, -15.1818, -34.2953, -10.2856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6176, device='cuda:0', dtype=torch.float64)
tensor([-21.2913, -17.1221, -15.4325, -34.5935, -10.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1224, device='cuda:0', dtype=torch.float64)
tensor([-28.6782, -17.4689, -16.1854, -34.0625, -10.7602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8421, device='cuda:0', dtype=torch.float64)
tensor([-38.8238, -18.0007, -17.2534, -33.1227, -11.0196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5058, device='cuda:0', dtype=torch.float64)
tensor([-47.4850, -18.5124, -18.5317, -32.1144, -11.3350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6496, device='cuda:0', dtype=torch.float64)
tensor([-54.1282, -19.4943, -20.1930, -32.3134, -11.7500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8074, device='cuda:0', dtype=torch.float64)
tensor([-58.8712, -20.2486, -21.9745, -32.0986, -12.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6429, device='cuda:0', dtype=torch.float64)
tensor([-62.9108, -21.1222, -23.9705, -32.2515, -13.6508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8168, device='cuda:0', dtype=torch.float64)
tensor([-61.4757, -21.5754, -25.4486, -32.6478, -14.6232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5149, device='cuda:0', dtype=torch.float64)
tensor([-58.6268, -21.5796, -26.4820, -32.8073, -15.2608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4410, device='cuda:0', dtype=torch.float64)
tensor([-53.9666, -21.4017, -26.5381, -33.3844, -15.8170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7563, device='cuda:0', dtype=torch.float64)
tensor([-49.7238, -21.3475, -26.9399, -33.9433, -16.3301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7232, device='cuda:0', dtype=torch.float64)
tensor([-44.1912, -21.2268, -25.9305, -34.2410, -17.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8120, device='cuda:0', dtype=torch.float64)
tensor([-40.8254, -21.4233, -25.3821, -34.0966, -18.4030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5231, device='cuda:0', dtype=torch.float64)
tensor([-37.9341, -22.2198, -25.0732, -34.0855, -19.8214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7528, device='cuda:0', dtype=torch.float64)
tensor([-36.6476, -22.8332, -25.0293, -34.0800, -21.4494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9286, device='cuda:0', dtype=torch.float64)
tensor([-32.1961, -24.0535, -25.6669, -35.7937, -22.7096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6933, device='cuda:0', dtype=torch.float64)
tensor([-29.6035, -25.1994, -27.0368, -37.1932, -23.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7402, device='cuda:0', dtype=torch.float64)
tensor([-28.5290, -26.2944, -28.3189, -38.4876, -23.6251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9668, device='cuda:0', dtype=torch.float64)
tensor([-29.0841, -27.0717, -29.3610, -38.5445, -24.6636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4081, device='cuda:0', dtype=torch.float64)
tensor([-29.6025, -27.7633, -30.5785, -39.5322, -25.8943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7822, device='cuda:0', dtype=torch.float64)
tensor([-29.9546, -29.5951, -31.5162, -41.4881, -27.7603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9883, device='cuda:0', dtype=torch.float64)
tensor([-30.6616, -31.6119, -32.3753, -44.0167, -29.8014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0959, device='cuda:0', dtype=torch.float64)
tensor([-33.0428, -33.5701, -34.5498, -45.4384, -32.5631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7298, device='cuda:0', dtype=torch.float64)
tensor([-35.8943, -36.0408, -36.5136, -46.4411, -34.7854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0605, device='cuda:0', dtype=torch.float64)
tensor([-37.5609, -38.2215, -38.3261, -47.1753, -36.8524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5887, device='cuda:0', dtype=torch.float64)
tensor([-38.3771, -40.8986, -40.2899, -47.9363, -38.9461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4069, device='cuda:0', dtype=torch.float64)
tensor([-39.6356, -44.4630, -41.8713, -49.0401, -41.0733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5988, device='cuda:0', dtype=torch.float64)
tensor([-41.2010, -48.3134, -43.9231, -50.6971, -42.7225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8018, device='cuda:0', dtype=torch.float64)
tensor([-42.9523, -51.9313, -45.9022, -52.5261, -44.1034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6485, device='cuda:0', dtype=torch.float64)
tensor([-44.7302, -56.5924, -49.1476, -54.6495, -45.8980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8770, device='cuda:0', dtype=torch.float64)
tensor([-45.9311, -60.9397, -53.0485, -56.3208, -47.4291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7987, device='cuda:0', dtype=torch.float64)
tensor([-47.9048, -65.8497, -57.1581, -56.8794, -49.6882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4376, device='cuda:0', dtype=torch.float64)
tensor([-49.8168, -70.0725, -60.9061, -57.8345, -51.3140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-51.9411, -74.0534, -64.3984, -58.7490, -52.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7776, device='cuda:0', dtype=torch.float64)
tensor([-55.5632, -78.0885, -68.2857, -59.4534, -54.5346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7670, device='cuda:0', dtype=torch.float64)
tensor([-60.9991, -81.8646, -72.2987, -61.0975, -55.8525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4920, device='cuda:0', dtype=torch.float64)
tensor([-67.1959, -85.8297, -76.6848, -63.0625, -57.6655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6523, device='cuda:0', dtype=torch.float64)
tensor([-74.6245, -88.2359, -80.3942, -64.8809, -58.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0792, device='cuda:0', dtype=torch.float64)
tensor([-81.2239, -90.0264, -82.6091, -66.3373, -57.9236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6549, device='cuda:0', dtype=torch.float64)
tensor([-87.2661, -92.2273, -83.9720, -67.9974, -57.9513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4333, device='cuda:0', dtype=torch.float64)
tensor([-91.7441, -94.8552, -84.7216, -69.5659, -58.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9894, device='cuda:0', dtype=torch.float64)
tensor([-94.0508, -96.7424, -84.7259, -72.0118, -59.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9225, device='cuda:0', dtype=torch.float64)
tensor([-98.0540, -98.7428, -86.1895, -73.9662, -60.4164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7102, device='cuda:0', dtype=torch.float64)
tensor([-102.9421, -100.5318,  -88.1524,  -75.5853,  -61.2404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7608, device='cuda:0', dtype=torch.float64)
tensor([-108.6866, -102.8596,  -90.5400,  -77.2673,  -62.6674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3812, device='cuda:0', dtype=torch.float64)
tensor([-114.5097, -104.0173,  -92.2830,  -78.4239,  -63.4096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6330, device='cuda:0', dtype=torch.float64)
tensor([-120.9639, -107.1729,  -94.7079,  -80.0931,  -65.9265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5782, device='cuda:0', dtype=torch.float64)
tensor([-129.3737, -110.6317,  -97.5458,  -81.9792,  -68.8839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4453, device='cuda:0', dtype=torch.float64)
tensor([-138.4873, -113.5769, -100.1900,  -83.2082,  -71.4001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4573, device='cuda:0', dtype=torch.float64)
tensor([-146.5750, -117.0528, -103.2265,  -85.0196,  -73.2501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5784, device='cuda:0', dtype=torch.float64)
tensor([-156.0320, -121.3551, -108.1965,  -86.4387,  -74.7891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5564, device='cuda:0', dtype=torch.float64)
tensor([-164.7360, -125.7988, -113.4620,  -87.0125,  -75.8619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4721, device='cuda:0', dtype=torch.float64)
tensor([-171.3665, -129.9213, -118.2920,  -87.2572,  -77.4849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5697, device='cuda:0', dtype=torch.float64)
tensor([-179.4521, -134.4525, -123.6665,  -88.2495,  -80.4897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7955, device='cuda:0', dtype=torch.float64)
tensor([-185.3704, -136.9200, -127.8610,  -88.3886,  -82.9542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3798, device='cuda:0', dtype=torch.float64)
tensor([-196.5493, -140.8242, -133.6223,  -88.9969,  -85.6788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7316, device='cuda:0', dtype=torch.float64)
tensor([-208.7585, -146.7948, -140.9157,  -90.2464,  -91.0206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3876, device='cuda:0', dtype=torch.float64)
tensor([-217.7448, -150.3201, -146.4854,  -91.2062,  -95.5793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7016, device='cuda:0', dtype=torch.float64)
tensor([-226.1074, -152.6323, -150.1612,  -92.4508,  -99.1937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5475, device='cuda:0', dtype=torch.float64)
tensor([-234.1994, -155.2273, -152.6992,  -94.5937, -103.3021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1361, device='cuda:0', dtype=torch.float64)
tensor([-239.3147, -157.2128, -154.6807,  -96.8031, -107.0111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6270, device='cuda:0', dtype=torch.float64)
tensor([-244.2152, -158.8579, -156.7602,  -99.3413, -109.9755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4187, device='cuda:0', dtype=torch.float64)
tensor([-251.7257, -160.7317, -158.9732, -102.3666, -113.4003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1210, device='cuda:0', dtype=torch.float64)
tensor([-257.2335, -160.5829, -160.1531, -104.4244, -113.8754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8474, device='cuda:0', dtype=torch.float64)
tensor([-261.4405, -160.2111, -159.0586, -105.9062, -113.7284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5654, device='cuda:0', dtype=torch.float64)
tensor([-262.3581, -158.8352, -157.4882, -107.4796, -111.9455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4964, device='cuda:0', dtype=torch.float64)
tensor([-262.3871, -158.7043, -155.9934, -108.6390, -110.6059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6662, device='cuda:0', dtype=torch.float64)
tensor([-264.9824, -157.9847, -155.7347, -110.1626, -108.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3099, device='cuda:0', dtype=torch.float64)
tensor([-261.3915, -157.7801, -153.0247, -111.7346, -106.9770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5227, device='cuda:0', dtype=torch.float64)
tensor([-256.1372, -157.7922, -147.9719, -112.8938, -105.1740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6854, device='cuda:0', dtype=torch.float64)
tensor([-249.9312, -158.1478, -142.5170, -113.1313, -103.7930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3807, device='cuda:0', dtype=torch.float64)
tensor([-244.9544, -158.1187, -139.4665, -113.3179, -102.0184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5246, device='cuda:0', dtype=torch.float64)
tensor([-242.5002, -158.5395, -137.5065, -113.1709, -100.9035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8706, device='cuda:0', dtype=torch.float64)
tensor([-240.3182, -158.8661, -135.3439, -113.1092,  -99.5495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6156, device='cuda:0', dtype=torch.float64)
tensor([-235.5922, -157.0535, -132.9146, -112.7369,  -96.6652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7546, device='cuda:0', dtype=torch.float64)
tensor([-232.2303, -154.0041, -130.4106, -112.7061,  -93.1632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6252, device='cuda:0', dtype=torch.float64)
tensor([-229.2951, -150.4835, -128.2011, -113.4317,  -89.5934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6631, device='cuda:0', dtype=torch.float64)
tensor([-227.6568, -146.4136, -128.0852, -114.4044,  -86.3125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6699, device='cuda:0', dtype=torch.float64)
tensor([-224.2397, -140.5475, -127.9050, -115.6234,  -81.8651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5596, device='cuda:0', dtype=torch.float64)
tensor([-220.6603, -135.9965, -128.2117, -117.2691,  -77.9119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4943, device='cuda:0', dtype=torch.float64)
tensor([-219.4215, -133.1842, -128.4623, -118.9099,  -75.0890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3248, device='cuda:0', dtype=torch.float64)
tensor([-216.7165, -130.9097, -128.9729, -121.8767,  -72.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7131, device='cuda:0', dtype=torch.float64)
tensor([-211.6302, -128.5358, -128.4745, -123.7486,  -69.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5578, device='cuda:0', dtype=torch.float64)
tensor([-203.3304, -124.7016, -126.5622, -123.2917,  -65.7093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3005, device='cuda:0', dtype=torch.float64)
tensor([-197.5686, -121.9415, -125.0149, -123.4356,  -62.8123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5904, device='cuda:0', dtype=torch.float64)
tensor([-193.9235, -120.2404, -125.2942, -124.1249,  -60.5183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9984, device='cuda:0', dtype=torch.float64)
tensor([-190.4337, -119.5182, -124.7467, -124.8192,  -58.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7975, device='cuda:0', dtype=torch.float64)
tensor([-188.1095, -118.0348, -123.0840, -124.2999,  -57.3853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6209, device='cuda:0', dtype=torch.float64)
tensor([-187.0492, -117.8194, -121.8913, -124.9274,  -55.4540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7068, device='cuda:0', dtype=torch.float64)
tensor([-188.3773, -117.4819, -119.6380, -124.3576,  -53.6535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4937, device='cuda:0', dtype=torch.float64)
tensor([-188.2441, -118.1822, -117.3295, -124.1642,  -52.4091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7393, device='cuda:0', dtype=torch.float64)
tensor([-188.2241, -117.6829, -115.7902, -123.2776,  -51.6424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6281, device='cuda:0', dtype=torch.float64)
tensor([-189.3740, -115.3461, -113.2743, -120.5285,  -50.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4546, device='cuda:0', dtype=torch.float64)
tensor([-189.5854, -112.3264, -110.4533, -117.1807,  -49.7522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6706, device='cuda:0', dtype=torch.float64)
tensor([-188.6541, -109.6891, -107.1863, -114.0904,  -48.0113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5910, device='cuda:0', dtype=torch.float64)
tensor([-188.0433, -106.5078, -104.2027, -108.9438,  -45.9123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7131, device='cuda:0', dtype=torch.float64)
tensor([-185.9635, -103.1504, -100.3661, -104.6663,  -43.8961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7282, device='cuda:0', dtype=torch.float64)
tensor([-183.6070,  -98.6353,  -96.5605,  -99.7062,  -42.0769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3135, device='cuda:0', dtype=torch.float64)
tensor([-181.6803,  -94.9778,  -94.7746,  -95.8495,  -41.1799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6396, device='cuda:0', dtype=torch.float64)
tensor([-180.7235,  -92.0126,  -92.6990,  -92.0861,  -40.9570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7002, device='cuda:0', dtype=torch.float64)
tensor([-181.8307,  -91.9253,  -92.3690,  -90.8027,  -42.0951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3909, device='cuda:0', dtype=torch.float64)
tensor([-181.1877,  -94.0395,  -92.8291,  -91.2730,  -43.6461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6067, device='cuda:0', dtype=torch.float64)
tensor([-180.0101,  -95.2095,  -94.8525,  -91.2699,  -44.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6406, device='cuda:0', dtype=torch.float64)
tensor([-179.6604,  -96.3546,  -97.7312,  -91.3790,  -46.3194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1002, device='cuda:0', dtype=torch.float64)
tensor([-184.6515,  -99.0778, -101.0246,  -90.7097,  -49.1294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6212, device='cuda:0', dtype=torch.float64)
tensor([-183.6935, -100.4513, -101.9984,  -89.9755,  -50.7546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4125, device='cuda:0', dtype=torch.float64)
tensor([-180.6596,  -99.9224, -100.3054,  -88.1628,  -50.6910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4992, device='cuda:0', dtype=torch.float64)
tensor([-178.0377,  -99.5798,  -98.6172,  -86.7722,  -49.6910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4674, device='cuda:0', dtype=torch.float64)
tensor([-175.4958,  -99.1514,  -98.2499,  -85.9438,  -49.5288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5688, device='cuda:0', dtype=torch.float64)
tensor([-170.6928,  -98.4295,  -97.0690,  -85.1720,  -49.3478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3633, device='cuda:0', dtype=torch.float64)
tensor([-169.7106,  -97.2794,  -96.5210,  -84.4379,  -48.8646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8076, device='cuda:0', dtype=torch.float64)
tensor([-168.1701,  -96.4068,  -96.5692,  -84.8696,  -48.7193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6425, device='cuda:0', dtype=torch.float64)
tensor([-161.9951,  -92.7870,  -96.3579,  -84.3284,  -46.9577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5840, device='cuda:0', dtype=torch.float64)
tensor([-155.9546,  -90.2527,  -96.8499,  -83.9828,  -45.2202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3861, device='cuda:0', dtype=torch.float64)
tensor([-148.2182,  -87.9800,  -95.8138,  -83.7638,  -44.2940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6058, device='cuda:0', dtype=torch.float64)
tensor([-142.1972,  -86.7077,  -95.8435,  -84.5978,  -43.6824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9935, device='cuda:0', dtype=torch.float64)
tensor([-137.6932,  -86.3275,  -96.1325,  -84.2976,  -42.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3002, device='cuda:0', dtype=torch.float64)
tensor([-130.8704,  -85.6079,  -95.2426,  -83.9331,  -41.1104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0173, device='cuda:0', dtype=torch.float64)
tensor([-127.0478,  -84.3572,  -94.8045,  -83.9468,  -39.1979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5561, device='cuda:0', dtype=torch.float64)
tensor([-124.3139,  -84.1845,  -93.3979,  -83.0601,  -37.7214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7263, device='cuda:0', dtype=torch.float64)
tensor([-122.2908,  -84.2193,  -92.3463,  -83.6860,  -36.4088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5715, device='cuda:0', dtype=torch.float64)
tensor([-118.9327,  -83.8603,  -90.5750,  -84.3713,  -34.5847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8517, device='cuda:0', dtype=torch.float64)
tensor([-112.1231,  -83.4487,  -87.5326,  -83.9977,  -31.8445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5331, device='cuda:0', dtype=torch.float64)
tensor([-105.5974,  -83.3335,  -84.5106,  -83.8423,  -29.8918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3936, device='cuda:0', dtype=torch.float64)
tensor([-100.0970,  -83.5385,  -81.4837,  -84.3103,  -28.5071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7520, device='cuda:0', dtype=torch.float64)
tensor([-95.0399, -84.0626, -79.4735, -85.7402, -27.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8127, device='cuda:0', dtype=torch.float64)
tensor([-94.4072, -85.3807, -79.0378, -87.3410, -27.6349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0587, device='cuda:0', dtype=torch.float64)
tensor([-94.8022, -87.0185, -79.1011, -90.1150, -28.0174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5453, device='cuda:0', dtype=torch.float64)
tensor([-94.2817, -88.2382, -78.7477, -92.3581, -28.7089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6148, device='cuda:0', dtype=torch.float64)
tensor([-95.7865, -89.3881, -79.1194, -94.3347, -30.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9242, device='cuda:0', dtype=torch.float64)
tensor([-96.8581, -90.6434, -79.7148, -95.7054, -31.7833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8078, device='cuda:0', dtype=torch.float64)
tensor([-97.7624, -91.8267, -81.0428, -97.5199, -34.0772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8410, device='cuda:0', dtype=torch.float64)
tensor([-99.3017, -93.0059, -82.8357, -98.9153, -36.8052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7567, device='cuda:0', dtype=torch.float64)
tensor([-102.6911,  -93.9531,  -85.6325, -101.4635,  -40.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7371, device='cuda:0', dtype=torch.float64)
tensor([-107.9010,  -94.5106,  -88.3857, -102.9035,  -44.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4702, device='cuda:0', dtype=torch.float64)
tensor([-113.5006,  -95.6320,  -90.7683, -104.0285,  -48.2010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5181, device='cuda:0', dtype=torch.float64)
tensor([-117.6900,  -96.0147,  -92.6639, -104.5490,  -52.0068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7437, device='cuda:0', dtype=torch.float64)
tensor([-119.2042,  -96.7519,  -95.0346, -105.1285,  -57.4291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7415, device='cuda:0', dtype=torch.float64)
tensor([-120.0456,  -97.1356,  -96.5445, -104.6001,  -61.9621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4896, device='cuda:0', dtype=torch.float64)
tensor([-121.4553,  -98.3802,  -96.8781, -104.0119,  -65.6678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2342, device='cuda:0', dtype=torch.float64)
tensor([-121.2388, -100.5315,  -97.1917, -104.1378,  -69.1825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5546, device='cuda:0', dtype=torch.float64)
tensor([-119.6336, -101.9206,  -96.5196, -103.0806,  -71.4884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7148, device='cuda:0', dtype=torch.float64)
tensor([-116.9692, -100.8014,  -95.6338, -100.8468,  -72.1792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4271, device='cuda:0', dtype=torch.float64)
tensor([-115.3398, -101.8593,  -96.1014, -100.0102,  -74.2471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4802, device='cuda:0', dtype=torch.float64)
tensor([-116.6158, -102.2832,  -96.0788,  -99.5392,  -75.7260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6530, device='cuda:0', dtype=torch.float64)
tensor([-120.5149, -101.9382,  -95.1969,  -99.0915,  -75.8002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6568, device='cuda:0', dtype=torch.float64)
tensor([-126.4375, -101.2045,  -94.6817,  -98.0622,  -75.6815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4559, device='cuda:0', dtype=torch.float64)
tensor([-135.5917,  -99.5079,  -94.0189,  -96.6568,  -75.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5715, device='cuda:0', dtype=torch.float64)
tensor([-143.3640,  -98.6708,  -94.0670,  -96.3806,  -75.1270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5654, device='cuda:0', dtype=torch.float64)
tensor([-150.7354,  -97.9879,  -94.0715,  -95.5856,  -74.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8668, device='cuda:0', dtype=torch.float64)
tensor([-162.2875, -100.0736,  -94.9939,  -96.7545,  -74.3317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9242, device='cuda:0', dtype=torch.float64)
tensor([-170.9100, -104.8716,  -96.7797,  -98.2754,  -75.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3421, device='cuda:0', dtype=torch.float64)
tensor([-178.8211, -110.5938,  -98.7067,  -99.5230,  -77.2063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0664, device='cuda:0', dtype=torch.float64)
tensor([-185.3510, -116.4246, -101.6011, -100.0289,  -78.6179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2963, device='cuda:0', dtype=torch.float64)
tensor([-188.9424, -121.0307, -104.2164,  -99.7763,  -79.6685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4060, device='cuda:0', dtype=torch.float64)
tensor([-191.7345, -123.9047, -106.6570,  -99.0356,  -79.6115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3312, device='cuda:0', dtype=torch.float64)
tensor([-193.6987, -123.3980, -108.3837,  -97.5003,  -78.7164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4971, device='cuda:0', dtype=torch.float64)
tensor([-195.1852, -121.2634, -109.6705,  -96.7700,  -77.3649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6605, device='cuda:0', dtype=torch.float64)
tensor([-193.4985, -115.2433, -108.7423,  -94.8568,  -74.3230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5528, device='cuda:0', dtype=torch.float64)
tensor([-192.7453, -111.0566, -108.7739,  -94.2973,  -71.7872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4626, device='cuda:0', dtype=torch.float64)
tensor([-192.2208, -105.5379, -107.6935,  -93.0696,  -68.6493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4987, device='cuda:0', dtype=torch.float64)
tensor([-192.2650, -102.7196, -106.6609,  -92.1161,  -66.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7781, device='cuda:0', dtype=torch.float64)
tensor([-190.6594,  -97.5363, -104.7155,  -90.0727,  -63.5831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4441, device='cuda:0', dtype=torch.float64)
tensor([-186.2512,  -91.1698, -102.2213,  -87.9603,  -60.4175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7854, device='cuda:0', dtype=torch.float64)
tensor([-181.9033,  -87.4993,  -99.8146,  -87.0610,  -58.8658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5393, device='cuda:0', dtype=torch.float64)
tensor([-179.3791,  -84.1495,  -99.0094,  -86.6348,  -57.7811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6610, device='cuda:0', dtype=torch.float64)
tensor([-178.5748,  -80.9562,  -97.7533,  -85.8311,  -56.8927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7164, device='cuda:0', dtype=torch.float64)
tensor([-178.7185,  -78.7722,  -97.3047,  -85.5502,  -56.3944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3851, device='cuda:0', dtype=torch.float64)
tensor([-179.4135,  -77.1910,  -97.6082,  -85.5512,  -55.8934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6593, device='cuda:0', dtype=torch.float64)
tensor([-177.7137,  -75.3807,  -97.2830,  -84.2899,  -54.7398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5214, device='cuda:0', dtype=torch.float64)
tensor([-173.9876,  -73.7236,  -96.5379,  -82.9438,  -54.3029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8400, device='cuda:0', dtype=torch.float64)
tensor([-176.5708,  -74.0794,  -97.4617,  -83.2834,  -54.7051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3544, device='cuda:0', dtype=torch.float64)
tensor([-178.9654,  -74.4887,  -98.5486,  -83.6605,  -55.3016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8881, device='cuda:0', dtype=torch.float64)
tensor([-182.8561,  -75.4494, -100.1009,  -84.0658,  -55.9435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6684, device='cuda:0', dtype=torch.float64)
tensor([-185.3537,  -76.4342, -101.7787,  -85.2541,  -56.8863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1023, device='cuda:0', dtype=torch.float64)
tensor([-185.6853,  -76.7639, -102.2677,  -86.2754,  -57.6229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5280, device='cuda:0', dtype=torch.float64)
tensor([-191.1211,  -77.5445, -104.3050,  -87.2406,  -58.6438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8760, device='cuda:0', dtype=torch.float64)
tensor([-197.1851,  -78.4016, -106.0630,  -87.6118,  -60.0055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7074, device='cuda:0', dtype=torch.float64)
tensor([-201.1028,  -78.1365, -106.9413,  -87.7805,  -60.6492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3057, device='cuda:0', dtype=torch.float64)
tensor([-204.8102,  -78.0566, -108.5294,  -87.9198,  -61.2915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6237, device='cuda:0', dtype=torch.float64)
tensor([-208.3266,  -78.1376, -109.3817,  -87.1246,  -61.2687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5831, device='cuda:0', dtype=torch.float64)
tensor([-208.4786,  -78.5409, -110.2355,  -86.6755,  -60.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4135, device='cuda:0', dtype=torch.float64)
tensor([-207.3390,  -80.0553, -110.1507,  -86.8089,  -60.4047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6400, device='cuda:0', dtype=torch.float64)
tensor([-208.3387,  -81.8981, -111.5348,  -88.6423,  -59.8440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7517, device='cuda:0', dtype=torch.float64)
tensor([-209.1632,  -83.3127, -112.7940,  -89.2825,  -59.9446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7481, device='cuda:0', dtype=torch.float64)
tensor([-205.5404,  -83.7316, -112.4702,  -90.5807,  -60.4031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7420, device='cuda:0', dtype=torch.float64)
tensor([-204.6717,  -83.8520, -112.2767,  -91.4516,  -61.5845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6030, device='cuda:0', dtype=torch.float64)
tensor([-204.5219,  -84.6143, -112.9623,  -92.6491,  -62.5595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7248, device='cuda:0', dtype=torch.float64)
tensor([-204.4972,  -86.4160, -114.5253,  -94.3536,  -63.5800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6232, device='cuda:0', dtype=torch.float64)
tensor([-202.9835,  -89.0182, -115.8928,  -95.8648,  -64.6975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9387, device='cuda:0', dtype=torch.float64)
tensor([-203.7682,  -91.0971, -117.3853,  -97.3962,  -65.6733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5551, device='cuda:0', dtype=torch.float64)
tensor([-205.4331,  -93.7947, -119.4822,  -99.2088,  -67.4509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7935, device='cuda:0', dtype=torch.float64)
tensor([-207.1592,  -96.4724, -121.0322, -100.8805,  -69.3703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6291, device='cuda:0', dtype=torch.float64)
tensor([-209.1463,  -97.8907, -122.8821, -101.9751,  -70.5822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5155, device='cuda:0', dtype=torch.float64)
tensor([-209.7454,  -98.6257, -123.8971, -103.0159,  -71.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5720, device='cuda:0', dtype=torch.float64)
tensor([-211.0376, -101.3838, -124.8708, -103.4651,  -72.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6251, device='cuda:0', dtype=torch.float64)
tensor([-215.4702, -104.9490, -126.6073, -103.5147,  -74.6930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5303, device='cuda:0', dtype=torch.float64)
tensor([-218.9661, -107.6114, -128.2257, -102.9369,  -76.2963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6723, device='cuda:0', dtype=torch.float64)
tensor([-220.9128, -110.2354, -128.4854, -102.8752,  -77.2020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7730, device='cuda:0', dtype=torch.float64)
tensor([-218.4338, -112.7266, -126.3968, -103.4792,  -78.3713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8455, device='cuda:0', dtype=torch.float64)
tensor([-216.8606, -115.0506, -126.3135, -104.1655,  -78.8574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6881, device='cuda:0', dtype=torch.float64)
tensor([-212.9204, -115.1318, -125.7086, -105.1000,  -78.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8558, device='cuda:0', dtype=torch.float64)
tensor([-207.9605, -114.2623, -124.3560, -106.5852,  -77.3603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8093, device='cuda:0', dtype=torch.float64)
tensor([-205.4215, -115.5552, -126.0391, -109.5071,  -78.5570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7922, device='cuda:0', dtype=torch.float64)
tensor([-199.9514, -117.5012, -126.8991, -113.2815,  -80.3138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3114, device='cuda:0', dtype=torch.float64)
tensor([-195.8012, -119.7181, -128.6450, -117.3090,  -82.0328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6069, device='cuda:0', dtype=torch.float64)
tensor([-193.1237, -122.1943, -129.7394, -120.4521,  -84.4967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8107, device='cuda:0', dtype=torch.float64)
tensor([-190.8877, -124.5321, -130.1898, -122.9360,  -86.4188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9242, device='cuda:0', dtype=torch.float64)
tensor([-188.1585, -122.8147, -128.8353, -123.3266,  -86.0209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6393, device='cuda:0', dtype=torch.float64)
tensor([-185.4948, -120.5317, -127.1788, -122.5877,  -85.3836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9182, device='cuda:0', dtype=torch.float64)
tensor([-182.0753, -117.1554, -125.5820, -122.1313,  -84.1157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5015, device='cuda:0', dtype=torch.float64)
tensor([-176.9727, -113.1624, -123.4533, -122.1403,  -82.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6270, device='cuda:0', dtype=torch.float64)
tensor([-171.9604, -109.9805, -121.9888, -122.5114,  -81.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3873, device='cuda:0', dtype=torch.float64)
tensor([-169.4654, -107.0804, -121.5396, -123.0274,  -79.7530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5574, device='cuda:0', dtype=torch.float64)
tensor([-167.0176, -105.0407, -122.3336, -124.3854,  -78.9199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6578, device='cuda:0', dtype=torch.float64)
tensor([-164.1942, -102.8983, -123.0917, -125.2160,  -77.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4823, device='cuda:0', dtype=torch.float64)
tensor([-162.7750, -101.7949, -125.1058, -126.7814,  -76.8945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7723, device='cuda:0', dtype=torch.float64)
tensor([-161.6191, -101.5260, -127.4289, -128.4356,  -76.2579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4231, device='cuda:0', dtype=torch.float64)
tensor([-160.1395, -101.3183, -129.8595, -130.8758,  -75.1602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4141, device='cuda:0', dtype=torch.float64)
tensor([-159.6885, -101.2841, -132.2246, -132.1958,  -74.5547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8906, device='cuda:0', dtype=torch.float64)
tensor([-158.1699, -100.8393, -133.7855, -133.1576,  -73.8298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8565, device='cuda:0', dtype=torch.float64)
tensor([-157.0459, -100.6737, -135.2691, -133.6963,  -73.9086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8398, device='cuda:0', dtype=torch.float64)
tensor([-154.8731, -100.5848, -136.1853, -135.4142,  -74.4068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4404, device='cuda:0', dtype=torch.float64)
tensor([-152.6699, -100.8991, -137.1884, -137.6865,  -75.5961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4607, device='cuda:0', dtype=torch.float64)
tensor([-151.1874, -101.5648, -137.9295, -140.1216,  -76.9994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6244, device='cuda:0', dtype=torch.float64)
tensor([-151.1223, -101.7349, -139.6306, -141.9799,  -78.7455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4837, device='cuda:0', dtype=torch.float64)
tensor([-151.9138, -101.6721, -141.1791, -143.4980,  -80.6890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5693, device='cuda:0', dtype=torch.float64)
tensor([-152.2770, -101.4485, -141.2473, -144.6203,  -82.3500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5942, device='cuda:0', dtype=torch.float64)
tensor([-151.9863, -101.3656, -140.6817, -146.0909,  -84.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9675, device='cuda:0', dtype=torch.float64)
tensor([-154.6978, -101.7306, -141.2369, -148.4381,  -86.8875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8095, device='cuda:0', dtype=torch.float64)
tensor([-158.1494, -102.2869, -141.6259, -149.8550,  -88.6839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6210, device='cuda:0', dtype=torch.float64)
tensor([-163.9068, -102.8041, -142.7094, -150.4983,  -90.2405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7786, device='cuda:0', dtype=torch.float64)
tensor([-171.7212, -103.8157, -144.6264, -151.9013,  -92.1742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5598, device='cuda:0', dtype=torch.float64)
tensor([-177.7439, -103.9333, -145.4857, -153.0116,  -94.0758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3751, device='cuda:0', dtype=torch.float64)
tensor([-180.6486, -103.1152, -145.2433, -153.7083,  -95.2643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5075, device='cuda:0', dtype=torch.float64)
tensor([-184.1807, -100.9798, -144.7323, -152.6118,  -95.4364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3390, device='cuda:0', dtype=torch.float64)
tensor([-189.0982,  -99.6555, -144.8811, -152.3915,  -95.7649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5487, device='cuda:0', dtype=torch.float64)
tensor([-192.2500,  -98.6259, -143.5211, -152.9413,  -96.5508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4879, device='cuda:0', dtype=torch.float64)
tensor([-198.4285,  -99.9271, -144.3785, -154.5083,  -97.3910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4947, device='cuda:0', dtype=torch.float64)
tensor([-202.5824, -101.0507, -144.4960, -155.9602,  -97.9772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2313, device='cuda:0', dtype=torch.float64)
tensor([-207.5562, -102.0610, -144.4046, -156.0582,  -98.2436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5095, device='cuda:0', dtype=torch.float64)
tensor([-209.1585, -103.4086, -144.8811, -157.1194,  -98.5962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3709, device='cuda:0', dtype=torch.float64)
tensor([-210.8423, -104.2454, -145.3532, -156.7394,  -98.2636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7387, device='cuda:0', dtype=torch.float64)
tensor([-211.6547, -106.0608, -145.9492, -157.4180,  -99.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5951, device='cuda:0', dtype=torch.float64)
tensor([-213.3450, -106.6940, -144.5887, -156.2930,  -99.4380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7015, device='cuda:0', dtype=torch.float64)
tensor([-216.2523, -107.8416, -143.1579, -154.3963, -100.1537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4710, device='cuda:0', dtype=torch.float64)
tensor([-220.6697, -109.3284, -142.2087, -152.8258, -101.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4275, device='cuda:0', dtype=torch.float64)
tensor([-226.3103, -110.6366, -142.4431, -151.5636, -103.1074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3618, device='cuda:0', dtype=torch.float64)
tensor([-233.3825, -111.5371, -144.1802, -150.5622, -104.3862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3055, device='cuda:0', dtype=torch.float64)
tensor([-240.0210, -112.4368, -146.0780, -149.3551, -106.1592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6674, device='cuda:0', dtype=torch.float64)
tensor([-245.6812, -114.0496, -147.4918, -150.7174, -109.0475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4033, device='cuda:0', dtype=torch.float64)
tensor([-250.8573, -116.5737, -149.4851, -153.0927, -112.5308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6686, device='cuda:0', dtype=torch.float64)
tensor([-258.4537, -121.7735, -154.6476, -157.4133, -118.6099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3323, device='cuda:0', dtype=torch.float64)
tensor([-266.1474, -126.7702, -159.5210, -161.2626, -125.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4068, device='cuda:0', dtype=torch.float64)
tensor([-274.0254, -132.5619, -164.1817, -164.7612, -133.6725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3196, device='cuda:0', dtype=torch.float64)
tensor([-282.8959, -140.3411, -168.6562, -168.5268, -141.5429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5681, device='cuda:0', dtype=torch.float64)
tensor([-293.0813, -150.9347, -173.6701, -173.3453, -150.6769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4652, device='cuda:0', dtype=torch.float64)
tensor([-301.0964, -161.9246, -176.8938, -178.8756, -159.6497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-308.0227, -174.6100, -179.4705, -184.2625, -169.0038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2503, device='cuda:0', dtype=torch.float64)
tensor([-310.4727, -185.2293, -178.4856, -188.3270, -176.6851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4633, device='cuda:0', dtype=torch.float64)
tensor([-313.7969, -195.8110, -179.1194, -192.3782, -185.0788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7604, device='cuda:0', dtype=torch.float64)
tensor([-320.8720, -205.7297, -181.6520, -195.9258, -191.9295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4738, device='cuda:0', dtype=torch.float64)
tensor([-326.5477, -208.6835, -181.8508, -196.9621, -193.5906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1404, device='cuda:0', dtype=torch.float64)
tensor([-330.8179, -206.9490, -181.4287, -196.7252, -191.1260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2340, device='cuda:0', dtype=torch.float64)
tensor([-336.2516, -201.9851, -181.6277, -194.8652, -185.2009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4397, device='cuda:0', dtype=torch.float64)
tensor([-339.7813, -194.7082, -181.0150, -191.6715, -177.2965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3508, device='cuda:0', dtype=torch.float64)
tensor([-344.8593, -188.5452, -180.6565, -188.2488, -170.5173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7399, device='cuda:0', dtype=torch.float64)
tensor([-349.4423, -176.1416, -179.0522, -182.7359, -160.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4208, device='cuda:0', dtype=torch.float64)
tensor([-354.3796, -163.5855, -177.6640, -177.0944, -150.3829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2699, device='cuda:0', dtype=torch.float64)
tensor([-357.8936, -150.3897, -175.5032, -171.1827, -140.3130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3101, device='cuda:0', dtype=torch.float64)
tensor([-358.6204, -139.1748, -172.5613, -165.7759, -131.0048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3401, device='cuda:0', dtype=torch.float64)
tensor([-356.1940, -130.1570, -168.9266, -160.2920, -123.1486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7068, device='cuda:0', dtype=torch.float64)
tensor([-354.6747, -127.0027, -167.0539, -157.9915, -120.3859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-352.2161, -125.2827, -165.6167, -155.4131, -117.6813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5523, device='cuda:0', dtype=torch.float64)
tensor([-346.0411, -124.0537, -162.5192, -153.3689, -115.3513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4012, device='cuda:0', dtype=torch.float64)
tensor([-339.8690, -121.5102, -159.4058, -150.1770, -111.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2006, device='cuda:0', dtype=torch.float64)
tensor([-334.2479, -119.9658, -156.9688, -148.1637, -109.1020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3467, device='cuda:0', dtype=torch.float64)
tensor([-332.0248, -120.5217, -156.4227, -147.5989, -108.4067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2843, device='cuda:0', dtype=torch.float64)
tensor([-333.0734, -122.6831, -157.4187, -148.3391, -109.5853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5284, device='cuda:0', dtype=torch.float64)
tensor([-328.7962, -125.4534, -157.5194, -148.8447, -110.7111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4918, device='cuda:0', dtype=torch.float64)
tensor([-323.7831, -127.6535, -157.7474, -149.9610, -112.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2234, device='cuda:0', dtype=torch.float64)
tensor([-320.8947, -130.9879, -158.5609, -151.8205, -114.3965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2342, device='cuda:0', dtype=torch.float64)
tensor([-318.2502, -133.3144, -159.6201, -153.4539, -115.7393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1530, device='cuda:0', dtype=torch.float64)
tensor([-313.6903, -133.4359, -159.3817, -153.8491, -115.3617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3506, device='cuda:0', dtype=torch.float64)
tensor([-310.9456, -134.0321, -159.4887, -154.8796, -115.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4332, device='cuda:0', dtype=torch.float64)
tensor([-310.7811, -134.1184, -160.9200, -155.7481, -115.4957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3549, device='cuda:0', dtype=torch.float64)
tensor([-312.3841, -132.9785, -163.4352, -156.0126, -114.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3471, device='cuda:0', dtype=torch.float64)
tensor([-312.4882, -132.2654, -165.9139, -156.5055, -114.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3513, device='cuda:0', dtype=torch.float64)
tensor([-309.7921, -129.5304, -166.7468, -156.4232, -112.7657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4285, device='cuda:0', dtype=torch.float64)
tensor([-308.9768, -126.4210, -167.0555, -155.7937, -110.5895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3002, device='cuda:0', dtype=torch.float64)
tensor([-306.2964, -126.3480, -166.8285, -156.1648, -111.5358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6795, device='cuda:0', dtype=torch.float64)
tensor([-300.8289, -129.6230, -165.5710, -157.6192, -115.6275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5941, device='cuda:0', dtype=torch.float64)
tensor([-295.8385, -131.9691, -164.5363, -157.9939, -118.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1202, device='cuda:0', dtype=torch.float64)
tensor([-288.6397, -132.8889, -162.5068, -157.5581, -120.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2494, device='cuda:0', dtype=torch.float64)
tensor([-285.3988, -134.5621, -161.8752, -157.5049, -122.7839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5692, device='cuda:0', dtype=torch.float64)
tensor([-282.0055, -134.5843, -161.0158, -156.8980, -124.3782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3502, device='cuda:0', dtype=torch.float64)
tensor([-280.0046, -134.6796, -160.3830, -156.3209, -126.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4611, device='cuda:0', dtype=torch.float64)
tensor([-278.5341, -139.6227, -160.5237, -157.5456, -131.7282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2986, device='cuda:0', dtype=torch.float64)
tensor([-274.5860, -140.1773, -158.8495, -157.0159, -132.8062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2574, device='cuda:0', dtype=torch.float64)
tensor([-272.5319, -142.3398, -158.1541, -157.6310, -135.2650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1612, device='cuda:0', dtype=torch.float64)
tensor([-267.8045, -140.9053, -155.8264, -156.5429, -134.2764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3033, device='cuda:0', dtype=torch.float64)
tensor([-262.8162, -139.7307, -154.3260, -155.5464, -133.2008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-258.7795, -139.1089, -152.9667, -154.8470, -132.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1920, device='cuda:0', dtype=torch.float64)
tensor([-254.2152, -138.0865, -151.3912, -153.7714, -131.3761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4775, device='cuda:0', dtype=torch.float64)
tensor([-252.9036, -138.2262, -152.0826, -153.9569, -131.5750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2410, device='cuda:0', dtype=torch.float64)
tensor([-251.7715, -138.5343, -152.4427, -154.0284, -131.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3233, device='cuda:0', dtype=torch.float64)
tensor([-249.1073, -139.6517, -151.8893, -153.9879, -132.2211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3810, device='cuda:0', dtype=torch.float64)
tensor([-246.7168, -140.5993, -151.7531, -153.9392, -132.5780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4195, device='cuda:0', dtype=torch.float64)
tensor([-247.1961, -142.3276, -152.5724, -154.6322, -134.6622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4531, device='cuda:0', dtype=torch.float64)
tensor([-245.3406, -144.0164, -151.9436, -154.1292, -136.2059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2772, device='cuda:0', dtype=torch.float64)
tensor([-242.8151, -144.4171, -150.3455, -152.7524, -136.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-241.0868, -144.5308, -147.9896, -150.6822, -136.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2751, device='cuda:0', dtype=torch.float64)
tensor([-241.7607, -145.4884, -146.7782, -150.3545, -137.6698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2728, device='cuda:0', dtype=torch.float64)
tensor([-243.8907, -147.1443, -147.1127, -150.3768, -139.8853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3153, device='cuda:0', dtype=torch.float64)
tensor([-245.0474, -147.8166, -147.3761, -150.6009, -141.8568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6106, device='cuda:0', dtype=torch.float64)
tensor([-243.3649, -149.6209, -147.9514, -152.7984, -148.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3459, device='cuda:0', dtype=torch.float64)
tensor([-243.3981, -152.1226, -149.8118, -156.1942, -155.6946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0641, device='cuda:0', dtype=torch.float64)
tensor([-246.0865, -156.0883, -153.5838, -160.6221, -164.6395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1411, device='cuda:0', dtype=torch.float64)
tensor([-250.0657, -159.8712, -157.4649, -164.8504, -172.2312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2755, device='cuda:0', dtype=torch.float64)
tensor([-259.2468, -164.9177, -164.4694, -169.9941, -180.2912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3011, device='cuda:0', dtype=torch.float64)
tensor([-269.2847, -171.2930, -171.4271, -174.9383, -188.3786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1373, device='cuda:0', dtype=torch.float64)
tensor([-277.7811, -178.2023, -176.7191, -179.7344, -196.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1983, device='cuda:0', dtype=torch.float64)
tensor([-288.4065, -184.8318, -183.3524, -184.4919, -203.2681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2498, device='cuda:0', dtype=torch.float64)
tensor([-295.0667, -189.5596, -188.5690, -187.7545, -208.2089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3356, device='cuda:0', dtype=torch.float64)
tensor([-304.1333, -193.0872, -195.8308, -191.1910, -212.7080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4408, device='cuda:0', dtype=torch.float64)
tensor([-310.2901, -199.8894, -201.9716, -195.7302, -218.8037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-314.6473, -207.7440, -205.8655, -199.7994, -224.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1169, device='cuda:0', dtype=torch.float64)
tensor([-318.3245, -214.5835, -208.8509, -202.8324, -228.3271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2829, device='cuda:0', dtype=torch.float64)
tensor([-319.2472, -216.1588, -209.6657, -203.5035, -229.2171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4596, device='cuda:0', dtype=torch.float64)
tensor([-319.5165, -215.4917, -209.6917, -203.0029, -228.5312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1178, device='cuda:0', dtype=torch.float64)
tensor([-315.6526, -213.5592, -207.6839, -202.2343, -227.5433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0267, device='cuda:0', dtype=torch.float64)
tensor([-309.4823, -212.1340, -204.7874, -201.8024, -227.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2159, device='cuda:0', dtype=torch.float64)
tensor([-305.8507, -213.7792, -202.6456, -202.3489, -228.8630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0964, device='cuda:0', dtype=torch.float64)
tensor([-301.0780, -213.3432, -200.1152, -202.8356, -229.8104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5116, device='cuda:0', dtype=torch.float64)
tensor([-302.4492, -214.4264, -201.6951, -204.7805, -231.6199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3276, device='cuda:0', dtype=torch.float64)
tensor([-304.6061, -211.8975, -203.0799, -204.6869, -230.0734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0931, device='cuda:0', dtype=torch.float64)
tensor([-302.1479, -207.8975, -201.8560, -204.0895, -227.6489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1439, device='cuda:0', dtype=torch.float64)
tensor([-301.1035, -206.6177, -201.1937, -203.7973, -227.0772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3010, device='cuda:0', dtype=torch.float64)
tensor([-300.3509, -202.8586, -199.9042, -202.5576, -224.6595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2383, device='cuda:0', dtype=torch.float64)
tensor([-299.5753, -199.5898, -198.8246, -202.1203, -223.3989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6369, device='cuda:0', dtype=torch.float64)
tensor([-299.8516, -196.2679, -198.8544, -202.7821, -223.1409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1023, device='cuda:0', dtype=torch.float64)
tensor([-298.3584, -190.5967, -198.3244, -201.5695, -220.2258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0683, device='cuda:0', dtype=torch.float64)
tensor([-294.1944, -185.1659, -196.3659, -199.6488, -216.7216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2293, device='cuda:0', dtype=torch.float64)
tensor([-291.5593, -182.5051, -195.0659, -199.3003, -216.6037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3769, device='cuda:0', dtype=torch.float64)
tensor([-288.8746, -178.0355, -192.3410, -197.8866, -214.5065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2284, device='cuda:0', dtype=torch.float64)
tensor([-284.5558, -175.4152, -187.8509, -195.7834, -212.3745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1472, device='cuda:0', dtype=torch.float64)
tensor([-280.9231, -174.8604, -184.1863, -195.3330, -212.8370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4429, device='cuda:0', dtype=torch.float64)
tensor([-281.6622, -174.5121, -184.3223, -197.0254, -214.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1546, device='cuda:0', dtype=torch.float64)
tensor([-283.6992, -172.2542, -185.5664, -198.8552, -214.6543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3934, device='cuda:0', dtype=torch.float64)
tensor([-287.1550, -170.1178, -188.3184, -201.3786, -215.7714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0143, device='cuda:0', dtype=torch.float64)
tensor([-288.5279, -168.2244, -190.0421, -203.3184, -216.1761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4078, device='cuda:0', dtype=torch.float64)
tensor([-291.3080, -167.5982, -192.8975, -205.8803, -219.0712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1883, device='cuda:0', dtype=torch.float64)
tensor([-294.0032, -166.1133, -195.5408, -207.3230, -220.0074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1977, device='cuda:0', dtype=torch.float64)
tensor([-294.6830, -164.2624, -196.6046, -208.2738, -220.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0933, device='cuda:0', dtype=torch.float64)
tensor([-293.8625, -164.3814, -196.1261, -210.1028, -222.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8806, device='cuda:0', dtype=torch.float64)
tensor([-292.7456, -164.5737, -194.9937, -211.4498, -224.6385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9290, device='cuda:0', dtype=torch.float64)
tensor([-292.0698, -165.5140, -194.1217, -213.3343, -226.8124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1181, device='cuda:0', dtype=torch.float64)
tensor([-293.0850, -167.2813, -194.4433, -216.0027, -231.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1065, device='cuda:0', dtype=torch.float64)
tensor([-292.9063, -167.9253, -193.4586, -217.8879, -234.8678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0854, device='cuda:0', dtype=torch.float64)
tensor([-291.8932, -168.4262, -191.7537, -219.4592, -237.8582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2353, device='cuda:0', dtype=torch.float64)
tensor([-291.4193, -168.7136, -190.0806, -219.9571, -240.0018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4847, device='cuda:0', dtype=torch.float64)
tensor([-291.7200, -170.2994, -189.3780, -220.5186, -243.3984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2339, device='cuda:0', dtype=torch.float64)
tensor([-291.4546, -170.8559, -188.1804, -221.3544, -246.6313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5486, device='cuda:0', dtype=torch.float64)
tensor([-293.6108, -174.8736, -188.4097, -223.5806, -252.8285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1209, device='cuda:0', dtype=torch.float64)
tensor([-296.1416, -177.5707, -189.3140, -224.7057, -256.3678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0522, device='cuda:0', dtype=torch.float64)
tensor([-297.4910, -179.8759, -189.7479, -225.5744, -259.2705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([-299.3551, -179.4430, -191.5044, -225.4321, -259.6692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1984, device='cuda:0', dtype=torch.float64)
tensor([-300.9410, -182.0749, -192.6040, -226.7924, -263.2419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2576, device='cuda:0', dtype=torch.float64)
tensor([-300.3881, -179.3230, -192.9468, -226.4305, -262.2390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1055, device='cuda:0', dtype=torch.float64)
tensor([-301.2436, -177.7231, -194.5000, -226.8327, -261.9944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0828, device='cuda:0', dtype=torch.float64)
tensor([-303.8018, -176.5339, -197.4640, -227.8180, -262.8208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9829, device='cuda:0', dtype=torch.float64)
tensor([-306.8665, -175.0055, -200.7111, -228.9267, -264.1442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0868, device='cuda:0', dtype=torch.float64)
tensor([-308.0855, -173.1410, -202.3810, -229.7131, -264.5691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-308.5695, -172.0567, -203.1796, -230.8181, -265.6234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0283, device='cuda:0', dtype=torch.float64)
tensor([-307.2581, -169.0183, -203.3672, -229.8665, -262.9804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0615, device='cuda:0', dtype=torch.float64)
tensor([-305.1965, -165.8680, -202.4412, -228.8667, -259.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9273, device='cuda:0', dtype=torch.float64)
tensor([-304.7108, -163.3908, -202.4365, -229.1755, -257.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1386, device='cuda:0', dtype=torch.float64)
tensor([-305.3600, -159.2819, -203.8134, -228.5667, -253.3410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2556, device='cuda:0', dtype=torch.float64)
tensor([-306.4349, -157.7967, -204.1575, -229.5569, -252.3118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4058, device='cuda:0', dtype=torch.float64)
tensor([-306.6570, -158.2468, -203.3847, -231.6849, -254.4040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-309.7491, -158.8279, -204.7871, -234.3837, -257.6863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2381, device='cuda:0', dtype=torch.float64)
tensor([-312.1319, -158.0989, -205.3163, -237.6057, -260.6824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2636, device='cuda:0', dtype=torch.float64)
tensor([-316.4230, -157.4859, -207.8606, -241.3188, -264.7643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9967, device='cuda:0', dtype=torch.float64)
tensor([-321.0947, -156.0276, -210.8998, -245.0027, -268.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9466, device='cuda:0', dtype=torch.float64)
tensor([-326.1238, -155.0317, -214.5282, -248.4563, -272.3972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2361, device='cuda:0', dtype=torch.float64)
tensor([-331.2277, -153.8727, -218.7531, -251.9669, -275.2398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0350, device='cuda:0', dtype=torch.float64)
tensor([-335.2049, -154.8170, -221.0791, -255.7432, -279.4785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2300, device='cuda:0', dtype=torch.float64)
tensor([-335.6273, -154.0287, -220.4689, -257.3752, -279.5622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1520, device='cuda:0', dtype=torch.float64)
tensor([-334.4508, -153.9873, -218.2833, -258.7496, -278.9797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0650, device='cuda:0', dtype=torch.float64)
tensor([-331.2675, -151.5282, -215.6636, -257.8157, -273.8344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-326.8168, -150.4044, -212.0972, -256.9426, -268.0530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8636, device='cuda:0', dtype=torch.float64)
tensor([-322.0984, -149.7964, -208.9269, -255.9769, -262.1547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0674, device='cuda:0', dtype=torch.float64)
tensor([-316.3069, -150.5382, -205.2237, -255.0665, -257.1472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2402, device='cuda:0', dtype=torch.float64)
tensor([-311.1800, -152.2057, -201.8955, -254.0329, -253.7411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1187, device='cuda:0', dtype=torch.float64)
tensor([-308.0404, -155.6670, -199.8242, -255.3911, -254.0379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0632, device='cuda:0', dtype=torch.float64)
tensor([-305.2224, -159.1881, -198.2341, -256.2723, -254.2269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0747, device='cuda:0', dtype=torch.float64)
tensor([-304.8716, -161.8716, -197.9863, -257.5382, -256.3923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0265, device='cuda:0', dtype=torch.float64)
tensor([-303.5694, -165.0091, -196.7174, -258.3613, -258.0216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0687, device='cuda:0', dtype=torch.float64)
tensor([-304.0253, -167.2582, -196.6035, -260.0928, -260.7122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0530, device='cuda:0', dtype=torch.float64)
tensor([-305.0716, -166.4365, -197.7452, -261.4867, -261.9696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2696, device='cuda:0', dtype=torch.float64)
tensor([-308.5415, -163.5023, -200.9817, -263.5653, -263.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-313.0972, -161.6447, -203.9945, -265.7987, -266.4765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8994, device='cuda:0', dtype=torch.float64)
tensor([-316.9125, -161.4656, -206.6823, -268.3093, -271.5057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0976, device='cuda:0', dtype=torch.float64)
tensor([-319.5950, -161.2385, -209.2744, -270.3236, -276.0673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-320.5952, -161.7048, -210.6425, -271.3090, -278.3561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-324.2707, -161.6705, -213.5755, -271.6893, -281.4705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9613, device='cuda:0', dtype=torch.float64)
tensor([-326.6717, -162.9572, -215.5794, -272.4177, -284.5238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([-328.2890, -164.9335, -217.1416, -273.4167, -287.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1731, device='cuda:0', dtype=torch.float64)
tensor([-329.3061, -166.3624, -218.2460, -273.4265, -288.2692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([-330.2221, -168.0034, -218.3938, -272.5877, -288.5243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9637, device='cuda:0', dtype=torch.float64)
tensor([-330.9561, -168.4764, -218.0915, -270.9203, -286.3725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8714, device='cuda:0', dtype=torch.float64)
tensor([-330.4585, -170.8098, -217.4507, -270.0912, -284.6618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1073, device='cuda:0', dtype=torch.float64)
tensor([-329.7259, -172.4556, -217.0191, -269.3594, -281.8701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1563, device='cuda:0', dtype=torch.float64)
tensor([-328.6123, -173.2311, -216.7288, -268.5080, -278.8923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9602, device='cuda:0', dtype=torch.float64)
tensor([-326.3138, -175.3290, -215.3690, -267.9722, -276.8384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-323.1983, -179.5510, -213.8274, -267.9731, -276.3779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-320.6961, -185.8320, -211.7848, -269.0678, -278.6246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9739, device='cuda:0', dtype=torch.float64)
tensor([-320.2689, -192.5116, -210.5098, -270.8691, -282.9700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-321.0680, -198.1564, -210.2889, -273.9277, -288.9236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2687, device='cuda:0', dtype=torch.float64)
tensor([-323.5790, -205.5191, -210.6479, -279.6236, -299.4349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1213, device='cuda:0', dtype=torch.float64)
tensor([-328.2530, -209.6277, -212.1827, -284.4293, -306.9806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-331.9278, -217.7568, -213.3520, -292.0632, -318.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-333.3976, -225.9115, -214.2173, -299.4604, -326.2176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2207, device='cuda:0', dtype=torch.float64)
tensor([-334.0373, -233.5278, -215.2253, -307.4994, -333.0472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8831, device='cuda:0', dtype=torch.float64)
tensor([-336.2462, -241.6591, -217.6312, -317.5709, -340.9105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-339.3520, -250.8339, -220.7040, -327.8359, -349.6727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8101, device='cuda:0', dtype=torch.float64)
tensor([-341.8501, -257.8206, -223.0951, -334.9307, -355.5860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6684, device='cuda:0', dtype=torch.float64)
tensor([-344.5252, -262.4458, -225.6860, -340.1004, -358.6224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9918, device='cuda:0', dtype=torch.float64)
tensor([-349.2680, -273.0934, -231.7655, -349.8847, -365.1315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0641, device='cuda:0', dtype=torch.float64)
tensor([-351.5902, -278.1909, -234.0802, -353.8434, -366.9707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-353.3664, -281.9622, -234.3931, -354.8153, -367.4103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9051, device='cuda:0', dtype=torch.float64)
tensor([-355.2512, -287.7698, -236.2001, -357.5616, -368.4417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8665, device='cuda:0', dtype=torch.float64)
tensor([-356.1095, -298.8401, -239.6526, -363.0424, -371.6896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8517, device='cuda:0', dtype=torch.float64)
tensor([-356.1858, -304.3926, -240.8718, -365.1581, -372.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0660, device='cuda:0', dtype=torch.float64)
tensor([-354.9907, -321.4926, -242.1436, -368.5903, -377.3662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1317, device='cuda:0', dtype=torch.float64)
tensor([-353.7893, -356.2457, -253.9568, -377.5540, -392.1519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0140, device='cuda:0', dtype=torch.float64)
tensor([-351.4798, -378.1102, -273.8177, -381.7656, -400.7504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8643, device='cuda:0', dtype=torch.float64)
tensor([-349.0521, -413.0950, -294.6604, -386.3108, -410.3733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6767, device='cuda:0', dtype=torch.float64)
tensor([-346.6220, -466.2528, -311.7428, -391.0726, -422.1051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7442, device='cuda:0', dtype=torch.float64)
tensor([-345.2339, -491.4187, -318.1884, -393.3279, -428.0278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7962, device='cuda:0', dtype=torch.float64)
tensor([-344.3465, -514.2635, -323.7619, -397.5070, -434.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9117, device='cuda:0', dtype=torch.float64)
tensor([-345.8200, -527.6762, -328.7043, -404.8385, -439.6965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7935, device='cuda:0', dtype=torch.float64)
tensor([-348.8613, -534.5227, -333.2925, -413.5867, -442.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8760, device='cuda:0', dtype=torch.float64)
tensor([-353.5002, -540.5166, -338.6794, -425.6846, -445.4480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-360.5757, -546.0881, -344.8832, -441.9433, -449.1609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9439, device='cuda:0', dtype=torch.float64)
tensor([-365.6515, -543.8019, -346.3053, -449.7079, -446.1959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0974, device='cuda:0', dtype=torch.float64)
tensor([-369.6087, -536.5434, -344.9431, -451.0436, -439.9508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7012, device='cuda:0', dtype=torch.float64)
tensor([-373.4830, -529.0957, -343.3911, -451.4155, -433.4307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7753, device='cuda:0', dtype=torch.float64)
tensor([-382.3529, -526.5100, -345.8696, -460.8026, -431.5501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8306, device='cuda:0', dtype=torch.float64)
tensor([-389.8323, -521.8288, -346.7718, -465.9403, -427.7262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6544, device='cuda:0', dtype=torch.float64)
tensor([-402.3560, -521.5986, -349.2084, -475.8894, -427.5774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8242, device='cuda:0', dtype=torch.float64)
tensor([-414.7624, -520.9447, -351.0361, -482.4355, -426.2551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7118, device='cuda:0', dtype=torch.float64)
tensor([-444.8802, -524.2036, -356.3572, -496.7594, -430.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-484.0521, -524.5179, -360.3735, -508.2103, -433.5154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6799, device='cuda:0', dtype=torch.float64)
tensor([-526.0259, -523.9786, -361.4585, -515.4296, -434.4678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5584, device='cuda:0', dtype=torch.float64)
tensor([-570.4837, -523.1909, -361.9189, -521.0117, -434.9260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([-611.7934, -520.6987, -361.5060, -523.8559, -433.5158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7185, device='cuda:0', dtype=torch.float64)
tensor([-624.4472, -516.6664, -358.4068, -520.4556, -428.8661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6373, device='cuda:0', dtype=torch.float64)
tensor([-653.3216, -514.2239, -355.8789, -519.5829, -426.0419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9138, device='cuda:0', dtype=torch.float64)
tensor([-715.1931, -511.9378, -356.4254, -524.7033, -427.6279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5424, device='cuda:0', dtype=torch.float64)
tensor([-751.2271, -509.4234, -354.7587, -525.5447, -426.5004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6243, device='cuda:0', dtype=torch.float64)
tensor([-803.5933, -507.6747, -354.9665, -530.3710, -428.6008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6501, device='cuda:0', dtype=torch.float64)
tensor([-852.8189, -505.4664, -357.7343, -537.8427, -433.1594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6668, device='cuda:0', dtype=torch.float64)
tensor([-893.7474, -502.8463, -362.2103, -544.8410, -439.3402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5920, device='cuda:0', dtype=torch.float64)
tensor([-927.1714, -500.2813, -364.8716, -549.5794, -444.6901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7550, device='cuda:0', dtype=torch.float64)
tensor([-958.9145, -496.1264, -367.6801, -554.7527, -450.9450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5123, device='cuda:0', dtype=torch.float64)
tensor([-978.9377, -491.0379, -369.8029, -559.6443, -456.7235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6293, device='cuda:0', dtype=torch.float64)
tensor([-987.0499, -485.2310, -370.2678, -563.3912, -460.4616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6035, device='cuda:0', dtype=torch.float64)
tensor([-989.5688, -478.8900, -368.7521, -565.6806, -462.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6389, device='cuda:0', dtype=torch.float64)
tensor([-991.5875, -471.3337, -367.0644, -567.3751, -463.7738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7302, device='cuda:0', dtype=torch.float64)
tensor([-997.8481, -461.7336, -370.2403, -575.1708, -471.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5861, device='cuda:0', dtype=torch.float64)
tensor([-998.3166, -452.6955, -369.8344, -578.7129, -474.3986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([-994.0472, -445.5998, -366.8088, -577.2073, -470.7052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6590, device='cuda:0', dtype=torch.float64)
tensor([-993.6933, -437.4160, -365.0761, -578.8188, -470.8823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6837, device='cuda:0', dtype=torch.float64)
tensor([-994.8520, -428.7996, -363.5026, -582.5558, -472.7010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7304, device='cuda:0', dtype=torch.float64)
tensor([-989.5644, -421.4474, -358.8926, -579.9211, -467.2301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5064, device='cuda:0', dtype=torch.float64)
tensor([-986.5568, -414.3980, -353.9244, -579.3796, -464.0248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5949, device='cuda:0', dtype=torch.float64)
tensor([-979.1561, -407.2166, -347.7892, -573.9870, -455.9917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5523, device='cuda:0', dtype=torch.float64)
tensor([-968.7925, -401.0219, -341.6623, -565.3344, -444.1544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5674, device='cuda:0', dtype=torch.float64)
tensor([-954.0846, -396.8313, -335.3915, -552.9053, -428.2974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5971, device='cuda:0', dtype=torch.float64)
tensor([-941.9713, -392.5204, -329.9072, -543.7620, -415.5970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4962, device='cuda:0', dtype=torch.float64)
tensor([-928.9537, -389.7499, -324.1544, -533.6121, -401.9120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6323, device='cuda:0', dtype=torch.float64)
tensor([-918.9799, -386.8263, -319.6043, -526.6775, -390.7302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5504, device='cuda:0', dtype=torch.float64)
tensor([-910.4236, -383.9670, -315.7806, -521.3108, -381.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4151, device='cuda:0', dtype=torch.float64)
tensor([-904.7375, -378.6013, -313.1902, -518.7964, -375.8769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5583, device='cuda:0', dtype=torch.float64)
tensor([-901.8520, -370.9733, -311.6730, -519.8568, -373.6660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5369, device='cuda:0', dtype=torch.float64)
tensor([-902.4220, -361.3861, -311.1468, -524.1723, -375.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7281, device='cuda:0', dtype=torch.float64)
tensor([-907.9958, -350.4339, -311.3333, -533.8152, -381.9658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5205, device='cuda:0', dtype=torch.float64)
tensor([-910.7200, -341.8870, -311.2851, -541.0733, -386.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4743, device='cuda:0', dtype=torch.float64)
tensor([-911.6722, -335.0518, -311.0964, -547.1929, -390.3146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4982, device='cuda:0', dtype=torch.float64)
tensor([-909.9141, -330.0249, -310.1225, -550.5682, -391.7487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8863, device='cuda:0', dtype=torch.float64)
tensor([-904.7305, -326.5849, -308.5544, -550.0587, -388.4579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4717, device='cuda:0', dtype=torch.float64)
tensor([-899.5792, -322.8253, -306.8506, -549.6151, -385.6623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4570, device='cuda:0', dtype=torch.float64)
tensor([-891.3206, -319.3430, -304.7047, -544.9083, -378.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5218, device='cuda:0', dtype=torch.float64)
tensor([-880.0985, -316.8714, -302.2948, -536.1736, -368.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5498, device='cuda:0', dtype=torch.float64)
tensor([-867.2284, -316.1050, -299.6300, -525.2050, -357.7680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4553, device='cuda:0', dtype=torch.float64)
tensor([-853.2751, -316.3135, -296.7977, -513.2396, -345.9685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4844, device='cuda:0', dtype=torch.float64)
tensor([-843.3556, -315.7260, -295.1423, -505.5775, -338.1982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4917, device='cuda:0', dtype=torch.float64)
tensor([-838.3757, -312.9777, -294.6645, -503.4079, -335.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6591, device='cuda:0', dtype=torch.float64)
tensor([-838.7064, -306.9051, -295.8924, -508.1533, -339.3070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5052, device='cuda:0', dtype=torch.float64)
tensor([-840.4852, -301.1922, -297.5250, -514.9282, -345.7340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5619, device='cuda:0', dtype=torch.float64)
tensor([-841.4677, -296.9833, -298.7914, -520.5804, -351.9565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5048, device='cuda:0', dtype=torch.float64)
tensor([-843.6519, -294.2016, -300.0736, -527.8056, -360.2611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5037, device='cuda:0', dtype=torch.float64)
tensor([-845.3071, -292.0310, -302.0233, -535.1411, -370.0875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4994, device='cuda:0', dtype=torch.float64)
tensor([-846.7949, -291.7716, -305.0910, -543.2507, -382.1717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4053, device='cuda:0', dtype=torch.float64)
tensor([-846.7306, -291.9394, -308.6559, -549.3291, -392.0062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5481, device='cuda:0', dtype=torch.float64)
tensor([-848.2173, -293.1528, -313.2108, -555.6935, -404.2101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3827, device='cuda:0', dtype=torch.float64)
tensor([-846.7858, -294.0254, -316.2089, -557.5323, -409.4258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5216, device='cuda:0', dtype=torch.float64)
tensor([-839.8359, -292.8301, -316.7722, -554.3434, -405.5069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3875, device='cuda:0', dtype=torch.float64)
tensor([-829.0796, -289.3448, -314.7116, -547.1711, -394.1866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3705, device='cuda:0', dtype=torch.float64)
tensor([-815.4424, -283.7990, -311.6892, -537.5770, -378.3722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3502, device='cuda:0', dtype=torch.float64)
tensor([-803.7093, -278.1598, -309.1270, -529.4773, -364.8840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3855, device='cuda:0', dtype=torch.float64)
tensor([-791.4258, -272.4497, -305.6321, -518.9043, -348.5658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3988, device='cuda:0', dtype=torch.float64)
tensor([-779.8529, -266.5642, -302.3027, -507.8677, -332.8911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5942, device='cuda:0', dtype=torch.float64)
tensor([-769.6713, -261.7278, -299.4909, -497.1822, -319.8863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4004, device='cuda:0', dtype=torch.float64)
tensor([-760.8730, -257.4678, -296.9110, -487.1030, -308.6708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3464, device='cuda:0', dtype=torch.float64)
tensor([-752.8011, -253.7084, -294.1786, -477.9587, -299.1823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6288, device='cuda:0', dtype=torch.float64)
tensor([-746.3904, -250.2245, -292.1772, -471.3792, -292.5423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3572, device='cuda:0', dtype=torch.float64)
tensor([-739.4309, -247.3427, -290.0397, -464.5014, -286.0055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3494, device='cuda:0', dtype=torch.float64)
tensor([-734.0636, -245.1437, -288.5938, -459.8063, -281.6544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4493, device='cuda:0', dtype=torch.float64)
tensor([-730.3594, -242.4391, -287.9856, -458.2271, -280.7828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3783, device='cuda:0', dtype=torch.float64)
tensor([-728.6682, -239.3144, -288.2210, -460.1138, -283.4047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3923, device='cuda:0', dtype=torch.float64)
tensor([-727.6266, -236.5746, -288.8380, -463.4885, -287.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3127, device='cuda:0', dtype=torch.float64)
tensor([-727.0056, -234.5454, -289.8360, -468.8764, -294.6270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3444, device='cuda:0', dtype=torch.float64)
tensor([-727.1737, -233.2925, -291.2000, -476.2767, -303.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3891, device='cuda:0', dtype=torch.float64)
tensor([-728.0620, -232.9920, -293.4289, -484.9033, -314.9089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3050, device='cuda:0', dtype=torch.float64)
tensor([-730.1341, -234.0387, -296.3399, -492.9755, -327.9420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2821, device='cuda:0', dtype=torch.float64)
tensor([-732.6307, -235.2490, -298.9611, -499.2515, -340.0334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3319, device='cuda:0', dtype=torch.float64)
tensor([-734.2270, -236.7175, -301.1782, -503.1290, -349.9517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2419, device='cuda:0', dtype=torch.float64)
tensor([-733.5568, -237.5128, -302.4189, -504.3095, -355.2455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3164, device='cuda:0', dtype=torch.float64)
tensor([-730.4991, -238.1525, -302.7951, -502.7684, -356.0861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3189, device='cuda:0', dtype=torch.float64)
tensor([-725.1336, -238.0795, -302.4822, -499.1557, -352.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6577, device='cuda:0', dtype=torch.float64)
tensor([-719.0076, -236.4362, -301.0156, -494.9858, -347.0865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2396, device='cuda:0', dtype=torch.float64)
tensor([-712.4674, -235.0558, -299.3530, -489.9776, -340.2529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3394, device='cuda:0', dtype=torch.float64)
tensor([-706.2893, -234.6396, -298.1928, -485.5123, -333.8442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2766, device='cuda:0', dtype=torch.float64)
tensor([-699.3858, -234.4544, -297.1646, -480.0647, -325.8100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3206, device='cuda:0', dtype=torch.float64)
tensor([-693.5096, -233.5084, -296.1339, -475.7524, -318.5880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3232, device='cuda:0', dtype=torch.float64)
tensor([-688.2228, -232.6280, -295.1719, -471.8536, -312.3393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3319, device='cuda:0', dtype=torch.float64)
tensor([-683.4917, -230.4943, -293.6849, -468.4558, -306.4840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3210, device='cuda:0', dtype=torch.float64)
tensor([-679.7147, -228.0734, -292.5083, -467.0302, -303.0190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4033, device='cuda:0', dtype=torch.float64)
tensor([-676.1548, -226.0593, -291.4980, -465.5723, -299.7507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1850, device='cuda:0', dtype=torch.float64)
tensor([-672.8848, -223.8325, -290.2659, -464.1370, -297.0822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2560, device='cuda:0', dtype=torch.float64)
tensor([-669.4678, -221.6352, -288.9749, -462.6012, -294.1341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2348, device='cuda:0', dtype=torch.float64)
tensor([-666.2644, -219.6520, -287.9515, -461.4061, -291.5595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2705, device='cuda:0', dtype=torch.float64)
tensor([-663.0072, -217.9445, -287.1589, -460.0866, -289.7543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3165, device='cuda:0', dtype=torch.float64)
tensor([-659.9776, -215.9663, -286.2525, -459.1276, -288.2268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4003, device='cuda:0', dtype=torch.float64)
tensor([-657.0301, -213.9785, -285.6444, -458.9069, -287.2230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2819, device='cuda:0', dtype=torch.float64)
tensor([-654.0696, -212.3182, -285.0101, -458.5689, -286.2476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2305, device='cuda:0', dtype=torch.float64)
tensor([-650.9726, -210.2478, -284.2221, -458.2716, -286.0409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2311, device='cuda:0', dtype=torch.float64)
tensor([-648.1682, -208.6071, -283.7845, -458.3634, -286.8263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2489, device='cuda:0', dtype=torch.float64)
tensor([-645.1820, -207.2076, -283.4823, -457.4833, -287.0668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2452, device='cuda:0', dtype=torch.float64)
tensor([-642.4341, -206.5263, -283.5247, -456.2924, -287.2516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2229, device='cuda:0', dtype=torch.float64)
tensor([-639.7461, -205.8523, -283.4657, -454.9173, -287.0245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2169, device='cuda:0', dtype=torch.float64)
tensor([-637.0487, -205.6636, -283.6616, -453.1635, -286.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2546, device='cuda:0', dtype=torch.float64)
tensor([-634.7498, -205.5515, -283.9832, -452.0677, -287.9514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2157, device='cuda:0', dtype=torch.float64)
tensor([-632.3496, -205.3302, -284.1714, -450.9618, -288.9255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2685, device='cuda:0', dtype=torch.float64)
tensor([-629.6873, -205.1169, -284.3304, -449.6249, -289.6664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1746, device='cuda:0', dtype=torch.float64)
tensor([-627.2276, -204.9889, -284.4093, -448.3029, -290.0886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2473, device='cuda:0', dtype=torch.float64)
tensor([-625.0299, -205.3985, -284.8709, -446.9574, -291.1761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2673, device='cuda:0', dtype=torch.float64)
tensor([-622.5762, -205.7909, -285.1353, -445.0701, -291.5806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2829, device='cuda:0', dtype=torch.float64)
tensor([-619.9429, -206.2005, -285.5303, -443.2709, -292.0330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2473, device='cuda:0', dtype=torch.float64)
tensor([-616.8272, -205.9515, -285.5022, -441.2052, -291.1802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2590, device='cuda:0', dtype=torch.float64)
tensor([-613.8879, -205.5018, -285.4202, -439.3939, -290.4541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2321, device='cuda:0', dtype=torch.float64)
tensor([-610.9154, -205.6461, -285.6010, -437.4637, -290.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6846, device='cuda:0', dtype=torch.float64)
tensor([-608.0529, -206.1541, -285.7100, -435.3215, -289.3506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2365, device='cuda:0', dtype=torch.float64)
tensor([-604.9547, -206.3558, -285.6327, -432.7780, -287.0361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2892, device='cuda:0', dtype=torch.float64)
tensor([-601.7184, -205.9207, -285.3037, -430.1892, -283.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2299, device='cuda:0', dtype=torch.float64)
tensor([-598.4662, -205.6537, -285.1089, -427.5223, -280.1069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2588, device='cuda:0', dtype=torch.float64)
tensor([-595.7695, -205.7354, -284.9928, -424.5837, -276.4428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2103, device='cuda:0', dtype=torch.float64)
tensor([-593.0902, -205.7908, -284.9318, -422.1107, -273.1578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6458, device='cuda:0', dtype=torch.float64)
tensor([-590.3928, -206.1000, -285.2659, -419.9310, -270.1877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3020, device='cuda:0', dtype=torch.float64)
tensor([-587.5992, -206.4449, -285.7650, -418.1048, -267.4296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1769, device='cuda:0', dtype=torch.float64)
tensor([-585.0237, -206.4957, -285.9940, -416.5270, -264.6834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2302, device='cuda:0', dtype=torch.float64)
tensor([-582.2984, -206.0017, -286.0544, -415.2183, -262.0330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3604, device='cuda:0', dtype=torch.float64)
tensor([-579.4022, -204.9504, -285.6528, -413.7450, -259.9353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1953, device='cuda:0', dtype=torch.float64)
tensor([-576.8180, -203.5663, -285.3872, -413.0839, -259.3524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2442, device='cuda:0', dtype=torch.float64)
tensor([-574.1192, -202.2899, -284.8670, -411.8102, -258.0918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1736, device='cuda:0', dtype=torch.float64)
tensor([-571.4148, -200.7449, -284.1773, -410.4505, -256.8532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2071, device='cuda:0', dtype=torch.float64)
tensor([-568.7136, -199.2093, -283.5617, -409.3183, -256.3012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2088, device='cuda:0', dtype=torch.float64)
tensor([-565.6785, -198.3311, -283.1923, -408.1452, -255.9198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2693, device='cuda:0', dtype=torch.float64)
tensor([-562.2742, -197.4174, -282.8815, -406.8659, -255.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2249, device='cuda:0', dtype=torch.float64)
tensor([-558.9230, -196.4071, -282.5874, -405.9000, -255.0291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1908, device='cuda:0', dtype=torch.float64)
tensor([-555.6729, -195.4550, -282.1683, -405.0263, -255.1510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2382, device='cuda:0', dtype=torch.float64)
tensor([-552.5357, -194.6561, -281.8010, -404.0138, -254.9613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2214, device='cuda:0', dtype=torch.float64)
tensor([-549.6915, -194.4678, -281.6173, -403.0072, -254.7781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1942, device='cuda:0', dtype=torch.float64)
tensor([-546.9920, -194.7625, -281.3704, -401.3888, -253.7985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3199, device='cuda:0', dtype=torch.float64)
tensor([-543.8644, -194.8128, -280.9963, -399.4265, -252.3817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1816, device='cuda:0', dtype=torch.float64)
tensor([-540.8442, -194.8261, -280.5101, -397.4485, -250.9836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1707, device='cuda:0', dtype=torch.float64)
tensor([-537.5968, -194.8415, -280.0531, -395.2258, -249.1220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1803, device='cuda:0', dtype=torch.float64)
tensor([-534.5148, -194.7492, -279.4291, -392.8016, -247.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1647, device='cuda:0', dtype=torch.float64)
tensor([-531.4361, -194.3196, -278.6974, -390.4165, -246.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1710, device='cuda:0', dtype=torch.float64)
tensor([-528.5856, -193.8670, -278.1308, -388.4402, -245.1220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4196, device='cuda:0', dtype=torch.float64)
tensor([-526.1444, -193.2913, -277.7262, -386.7241, -244.8156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1960, device='cuda:0', dtype=torch.float64)
tensor([-523.7713, -192.5727, -277.3618, -385.2005, -244.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1938, device='cuda:0', dtype=torch.float64)
tensor([-521.4821, -191.4253, -276.8699, -383.7741, -245.2702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3932, device='cuda:0', dtype=torch.float64)
tensor([-518.7948, -190.5470, -276.3939, -381.9006, -245.2311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2118, device='cuda:0', dtype=torch.float64)
tensor([-515.9357, -189.8449, -276.0892, -380.3761, -245.4133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3711, device='cuda:0', dtype=torch.float64)
tensor([-513.5728, -189.4732, -275.8984, -379.1640, -245.5639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2461, device='cuda:0', dtype=torch.float64)
tensor([-511.3089, -189.1086, -275.7172, -377.9176, -245.7238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2122, device='cuda:0', dtype=torch.float64)
tensor([-509.1418, -188.8343, -275.7172, -377.1256, -246.1332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2542, device='cuda:0', dtype=torch.float64)
tensor([-507.3455, -188.7514, -276.0079, -377.2192, -247.5868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2493, device='cuda:0', dtype=torch.float64)
tensor([-505.5651, -188.6433, -276.2562, -377.0073, -248.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1404, device='cuda:0', dtype=torch.float64)
tensor([-503.6668, -188.7218, -276.3459, -376.4478, -249.3595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1942, device='cuda:0', dtype=torch.float64)
tensor([-501.8426, -189.1375, -276.3244, -375.4245, -249.3327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3664, device='cuda:0', dtype=torch.float64)
tensor([-500.0798, -189.4128, -276.3744, -374.7501, -249.4279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1704, device='cuda:0', dtype=torch.float64)
tensor([-498.0262, -189.8292, -276.4558, -373.8159, -249.1402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1896, device='cuda:0', dtype=torch.float64)
tensor([-496.2797, -190.2633, -276.3580, -372.7592, -248.6343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1953, device='cuda:0', dtype=torch.float64)
tensor([-494.2028, -190.8970, -276.0737, -371.2435, -247.5474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1705, device='cuda:0', dtype=torch.float64)
tensor([-491.9355, -191.5156, -275.7868, -369.7675, -246.1877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4234, device='cuda:0', dtype=torch.float64)
tensor([-490.1261, -192.1903, -275.7237, -368.5465, -245.0154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1985, device='cuda:0', dtype=torch.float64)
tensor([-488.4719, -193.0892, -275.8215, -367.4100, -243.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1546, device='cuda:0', dtype=torch.float64)
tensor([-486.3088, -194.0462, -275.7837, -365.7717, -242.5731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3805, device='cuda:0', dtype=torch.float64)
tensor([-484.1901, -194.6814, -275.7317, -364.3549, -241.4041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1568, device='cuda:0', dtype=torch.float64)
tensor([-481.8487, -195.0104, -275.5843, -363.1921, -240.3279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2200, device='cuda:0', dtype=torch.float64)
tensor([-479.5666, -195.0263, -275.2531, -361.8908, -239.2346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1834, device='cuda:0', dtype=torch.float64)
tensor([-477.4069, -194.7074, -274.8166, -360.7849, -238.2350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1571, device='cuda:0', dtype=torch.float64)
tensor([-475.2522, -194.0717, -274.2240, -359.5683, -237.2521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1970, device='cuda:0', dtype=torch.float64)
tensor([-473.2429, -193.0117, -273.6397, -358.7306, -236.8818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2470, device='cuda:0', dtype=torch.float64)
tensor([-471.7876, -191.6824, -273.2081, -358.2105, -236.8574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2491, device='cuda:0', dtype=torch.float64)
tensor([-470.4579, -190.2993, -272.7185, -357.6672, -236.9731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4551, device='cuda:0', dtype=torch.float64)
tensor([-469.6246, -189.1797, -272.5018, -357.3744, -237.5252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2725, device='cuda:0', dtype=torch.float64)
tensor([-468.5771, -188.2048, -272.2017, -356.8407, -237.8739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1712, device='cuda:0', dtype=torch.float64)
tensor([-467.1251, -187.2781, -271.6715, -355.8567, -237.7008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1190, device='cuda:0', dtype=torch.float64)
tensor([-465.9276, -186.4600, -271.3227, -355.2926, -237.8236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1521, device='cuda:0', dtype=torch.float64)
tensor([-464.6891, -185.6672, -270.7768, -354.3802, -237.7887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1215, device='cuda:0', dtype=torch.float64)
tensor([-463.5664, -185.0505, -270.4119, -353.7635, -237.7850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1876, device='cuda:0', dtype=torch.float64)
tensor([-462.3446, -184.4536, -269.8642, -352.9779, -237.6540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1643, device='cuda:0', dtype=torch.float64)
tensor([-461.2843, -183.9983, -269.5896, -352.4586, -237.6897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2057, device='cuda:0', dtype=torch.float64)
tensor([-460.1130, -183.6649, -269.0798, -351.5289, -237.4189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3563, device='cuda:0', dtype=torch.float64)
tensor([-458.9527, -183.4904, -268.6164, -350.3589, -236.8630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1694, device='cuda:0', dtype=torch.float64)
tensor([-457.3372, -183.5668, -267.9242, -348.7435, -235.6571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1218, device='cuda:0', dtype=torch.float64)
tensor([-455.7336, -183.7437, -267.3239, -347.2429, -234.7373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1297, device='cuda:0', dtype=torch.float64)
tensor([-453.9207, -183.9274, -266.3676, -345.2707, -233.3389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1513, device='cuda:0', dtype=torch.float64)
tensor([-452.1938, -184.2739, -265.4393, -343.3242, -231.8972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1438, device='cuda:0', dtype=torch.float64)
tensor([-450.5732, -184.8592, -264.7086, -341.3429, -230.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1287, device='cuda:0', dtype=torch.float64)
tensor([-449.1896, -185.4315, -264.1732, -339.6287, -229.9415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1423, device='cuda:0', dtype=torch.float64)
tensor([-448.1484, -186.0850, -263.8133, -338.2911, -229.5716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1492, device='cuda:0', dtype=torch.float64)
tensor([-446.9956, -186.5861, -263.4368, -337.0806, -229.1123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1583, device='cuda:0', dtype=torch.float64)
tensor([-446.3730, -186.9332, -263.1644, -336.0897, -228.9050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1506, device='cuda:0', dtype=torch.float64)
tensor([-445.9854, -187.3588, -262.9947, -335.1702, -228.9037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1383, device='cuda:0', dtype=torch.float64)
tensor([-445.5577, -187.7053, -262.7569, -334.3159, -228.8365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4467, device='cuda:0', dtype=torch.float64)
tensor([-444.9188, -187.9028, -262.6816, -333.5146, -228.7936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1690, device='cuda:0', dtype=torch.float64)
tensor([-444.2162, -187.9737, -262.6926, -333.0748, -229.0162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2575, device='cuda:0', dtype=torch.float64)
tensor([-443.4941, -187.7721, -262.7082, -333.0040, -229.3752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1350, device='cuda:0', dtype=torch.float64)
tensor([-442.6060, -187.3891, -262.4264, -332.8018, -229.5108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1096, device='cuda:0', dtype=torch.float64)
tensor([-441.6865, -187.0095, -262.2461, -332.6135, -229.6757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1497, device='cuda:0', dtype=torch.float64)
tensor([-440.6734, -186.6234, -261.9602, -332.4192, -229.7838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1259, device='cuda:0', dtype=torch.float64)
tensor([-439.7216, -186.2332, -261.5338, -331.9872, -229.4936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1839, device='cuda:0', dtype=torch.float64)
tensor([-438.5543, -185.7615, -261.1651, -331.3407, -229.2247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1416, device='cuda:0', dtype=torch.float64)
tensor([-437.3402, -185.3136, -260.9756, -330.9735, -229.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1835, device='cuda:0', dtype=torch.float64)
tensor([-436.1575, -185.1703, -260.5462, -330.3674, -228.6800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1758, device='cuda:0', dtype=torch.float64)
tensor([-434.9420, -184.6227, -260.2111, -330.1508, -228.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0972, device='cuda:0', dtype=torch.float64)
tensor([-433.7018, -184.1639, -259.7993, -329.9853, -227.9079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1550, device='cuda:0', dtype=torch.float64)
tensor([-432.6273, -183.4377, -259.4662, -329.8760, -227.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1269, device='cuda:0', dtype=torch.float64)
tensor([-431.4505, -182.8808, -258.9119, -329.5793, -226.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3415, device='cuda:0', dtype=torch.float64)
tensor([-430.5814, -182.5203, -258.6017, -329.4533, -226.5453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1578, device='cuda:0', dtype=torch.float64)
tensor([-429.8633, -182.1815, -258.6240, -329.7709, -226.6898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([-429.4094, -182.0325, -258.8071, -330.2433, -226.9977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1279, device='cuda:0', dtype=torch.float64)
tensor([-428.6400, -182.0447, -258.9258, -330.2536, -226.9477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1110, device='cuda:0', dtype=torch.float64)
tensor([-427.9313, -182.1606, -258.9534, -330.0685, -226.7140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1193, device='cuda:0', dtype=torch.float64)
tensor([-426.9813, -182.4893, -258.6380, -329.4240, -225.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1338, device='cuda:0', dtype=torch.float64)
tensor([-425.8016, -182.9418, -258.3344, -328.4925, -225.1873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1703, device='cuda:0', dtype=torch.float64)
tensor([-424.8045, -183.2067, -258.0739, -327.6108, -224.5156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1350, device='cuda:0', dtype=torch.float64)
tensor([-424.0424, -183.5761, -257.8599, -326.7539, -224.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1281, device='cuda:0', dtype=torch.float64)
tensor([-422.8554, -184.0314, -257.3707, -325.3819, -223.0378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1242, device='cuda:0', dtype=torch.float64)
tensor([-421.1998, -184.2085, -256.4149, -323.3435, -221.6384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1107, device='cuda:0', dtype=torch.float64)
tensor([-419.8127, -184.2529, -255.5987, -321.4470, -220.6496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1188, device='cuda:0', dtype=torch.float64)
tensor([-418.4352, -184.1409, -254.7927, -319.7253, -219.6696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1070, device='cuda:0', dtype=torch.float64)
tensor([-417.2194, -184.2161, -254.1117, -317.9823, -218.8603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4099, device='cuda:0', dtype=torch.float64)
tensor([-415.9649, -184.2879, -253.4720, -316.2182, -218.3477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1182, device='cuda:0', dtype=torch.float64)
tensor([-414.8802, -184.4487, -252.9214, -314.5452, -217.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1638, device='cuda:0', dtype=torch.float64)
tensor([-413.8259, -184.5539, -252.5069, -313.2847, -217.4567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1411, device='cuda:0', dtype=torch.float64)
tensor([-413.0362, -184.6600, -252.2433, -312.1398, -217.2564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1021, device='cuda:0', dtype=torch.float64)
tensor([-412.1896, -184.8881, -252.0459, -311.3332, -217.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1438, device='cuda:0', dtype=torch.float64)
tensor([-411.4237, -185.0082, -251.8523, -310.5587, -217.0529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1338, device='cuda:0', dtype=torch.float64)
tensor([-410.5382, -185.1067, -251.6491, -309.7926, -216.8368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1272, device='cuda:0', dtype=torch.float64)
tensor([-409.7412, -185.2480, -251.3691, -308.9156, -216.5379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1134, device='cuda:0', dtype=torch.float64)
tensor([-409.0921, -185.5047, -251.2497, -308.2546, -216.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-408.6683, -185.5504, -251.3637, -308.1123, -216.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1296, device='cuda:0', dtype=torch.float64)
tensor([-407.9114, -185.5999, -251.2572, -307.6101, -217.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0965, device='cuda:0', dtype=torch.float64)
tensor([-407.1703, -185.6499, -251.0652, -307.1202, -217.1266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1326, device='cuda:0', dtype=torch.float64)
tensor([-406.3100, -185.8787, -250.9251, -306.6311, -217.0223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1313, device='cuda:0', dtype=torch.float64)
tensor([-405.3584, -185.9508, -250.9507, -306.5072, -217.1442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1305, device='cuda:0', dtype=torch.float64)
tensor([-404.5476, -185.9232, -251.1604, -306.8000, -217.5788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2294, device='cuda:0', dtype=torch.float64)
tensor([-404.0446, -185.7441, -251.5799, -307.4513, -218.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1384, device='cuda:0', dtype=torch.float64)
tensor([-403.6785, -185.7834, -252.0604, -308.1110, -219.3801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1342, device='cuda:0', dtype=torch.float64)
tensor([-402.9557, -185.8549, -252.2355, -308.2392, -219.8310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1095, device='cuda:0', dtype=torch.float64)
tensor([-402.1033, -185.9275, -252.4117, -308.3684, -220.2198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1893, device='cuda:0', dtype=torch.float64)
tensor([-401.0328, -186.0027, -252.5830, -308.2221, -220.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1112, device='cuda:0', dtype=torch.float64)
tensor([-399.7945, -186.3721, -252.7411, -308.0754, -220.5302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1494, device='cuda:0', dtype=torch.float64)
tensor([-398.8170, -186.6909, -253.1018, -308.2001, -220.8609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2415, device='cuda:0', dtype=torch.float64)
tensor([-397.5592, -187.1385, -253.3842, -308.2356, -220.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1348, device='cuda:0', dtype=torch.float64)
tensor([-395.9565, -187.6220, -253.4644, -307.9161, -220.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-394.3376, -188.1360, -253.5276, -307.5821, -220.3661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1390, device='cuda:0', dtype=torch.float64)
tensor([-392.6996, -188.7332, -253.4947, -307.1551, -219.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1057, device='cuda:0', dtype=torch.float64)
tensor([-391.0605, -189.1488, -253.2093, -306.4464, -219.1792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1299, device='cuda:0', dtype=torch.float64)
tensor([-389.2213, -189.6638, -252.9148, -305.6701, -218.4199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1306, device='cuda:0', dtype=torch.float64)
tensor([-387.2825, -189.9456, -252.4404, -304.7949, -217.6481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1021, device='cuda:0', dtype=torch.float64)
tensor([-385.2429, -190.3519, -251.7969, -303.6627, -216.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1097, device='cuda:0', dtype=torch.float64)
tensor([-383.2604, -190.4849, -251.2710, -302.6149, -215.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1094, device='cuda:0', dtype=torch.float64)
tensor([-381.4524, -190.5002, -250.6651, -301.6141, -214.9801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1036, device='cuda:0', dtype=torch.float64)
tensor([-379.7937, -190.3326, -250.0322, -300.7779, -214.3143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1260, device='cuda:0', dtype=torch.float64)
tensor([-378.4527, -190.1646, -249.5312, -299.9851, -213.8391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1026, device='cuda:0', dtype=torch.float64)
tensor([-377.0065, -190.1132, -248.8558, -298.9736, -213.1270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1516, device='cuda:0', dtype=torch.float64)
tensor([-375.4783, -189.9487, -247.8974, -297.6923, -212.1770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1356, device='cuda:0', dtype=torch.float64)
tensor([-374.1848, -189.5697, -247.2494, -296.7406, -211.6266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0968, device='cuda:0', dtype=torch.float64)
tensor([-373.0353, -189.0895, -246.5356, -295.9086, -211.0911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-371.9974, -188.4435, -245.7537, -295.1521, -210.6914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0928, device='cuda:0', dtype=torch.float64)
tensor([-371.1339, -187.7672, -245.1893, -294.5828, -210.4804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1032, device='cuda:0', dtype=torch.float64)
tensor([-370.3184, -187.1309, -244.6961, -294.0348, -210.1851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1025, device='cuda:0', dtype=torch.float64)
tensor([-369.8800, -186.6697, -244.7134, -293.7849, -210.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1084, device='cuda:0', dtype=torch.float64)
tensor([-369.7046, -186.3204, -245.1000, -293.8915, -210.8328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0920, device='cuda:0', dtype=torch.float64)
tensor([-369.3696, -185.9250, -245.3017, -293.8231, -211.0759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1321, device='cuda:0', dtype=torch.float64)
tensor([-368.9311, -185.6711, -245.5460, -293.5660, -211.1460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-368.6463, -185.4757, -245.9853, -293.4578, -211.4448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1017, device='cuda:0', dtype=torch.float64)
tensor([-368.3728, -185.2031, -246.7626, -293.8472, -212.1672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0917, device='cuda:0', dtype=torch.float64)
tensor([-368.2085, -184.9445, -247.5880, -294.2515, -212.9570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1173, device='cuda:0', dtype=torch.float64)
tensor([-367.8009, -184.7649, -248.2105, -294.6356, -213.5558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-367.3441, -184.7318, -248.8144, -294.8963, -214.1279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0960, device='cuda:0', dtype=torch.float64)
tensor([-366.6869, -184.7533, -248.9372, -294.6124, -214.2783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0612, device='cuda:0', dtype=torch.float64)
tensor([-365.9118, -184.8959, -248.9796, -294.2284, -214.2385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8609, device='cuda:0', dtype=torch.float64)
tensor([-365.0064, -185.5336, -248.8531, -293.5533, -213.9214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0848, device='cuda:0', dtype=torch.float64)
tensor([-364.0097, -186.2744, -248.5805, -292.7237, -213.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1012, device='cuda:0', dtype=torch.float64)
tensor([-362.9851, -187.1753, -248.3741, -291.9407, -212.9236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1007, device='cuda:0', dtype=torch.float64)
tensor([-361.6834, -188.2083, -248.1383, -290.8380, -212.2191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0903, device='cuda:0', dtype=torch.float64)
tensor([-360.4670, -188.7936, -247.5839, -289.9427, -211.6678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1401, device='cuda:0', dtype=torch.float64)
tensor([-359.3505, -189.2986, -247.1359, -289.2653, -211.3634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0826, device='cuda:0', dtype=torch.float64)
tensor([-358.4319, -189.4586, -246.7259, -288.9725, -211.4848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1310, device='cuda:0', dtype=torch.float64)
tensor([-357.5522, -189.5440, -246.1709, -288.7581, -211.6463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2586, device='cuda:0', dtype=torch.float64)
tensor([-356.7188, -189.5983, -245.3210, -287.9575, -211.4469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-355.8121, -189.4858, -244.3293, -287.0400, -211.1635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1258, device='cuda:0', dtype=torch.float64)
tensor([-354.9422, -189.0524, -243.4426, -286.6295, -211.1394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1092, device='cuda:0', dtype=torch.float64)
tensor([-354.1736, -188.6895, -242.6345, -286.2822, -211.1566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1014, device='cuda:0', dtype=torch.float64)
tensor([-353.3583, -188.4805, -241.9489, -285.8157, -211.1378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-352.8952, -188.1497, -241.7074, -285.8121, -211.4078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0828, device='cuda:0', dtype=torch.float64)
tensor([-352.5824, -187.6353, -241.5139, -285.8660, -211.7725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0878, device='cuda:0', dtype=torch.float64)
tensor([-352.0849, -187.3577, -241.4059, -285.8401, -212.0785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1108, device='cuda:0', dtype=torch.float64)
tensor([-351.6814, -187.0377, -241.4396, -285.8540, -212.4474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0737, device='cuda:0', dtype=torch.float64)
tensor([-351.5180, -186.6534, -241.6197, -285.9311, -212.8990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0525, device='cuda:0', dtype=torch.float64)
tensor([-350.6749, -186.6166, -241.3654, -285.1123, -212.8319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1249, device='cuda:0', dtype=torch.float64)
tensor([-349.3767, -186.8282, -240.8952, -283.8614, -212.3528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0994, device='cuda:0', dtype=torch.float64)
tensor([-348.0586, -187.0775, -240.5183, -282.6769, -211.8885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0821, device='cuda:0', dtype=torch.float64)
tensor([-346.8424, -187.3930, -240.2418, -281.5115, -211.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1295, device='cuda:0', dtype=torch.float64)
tensor([-345.6720, -187.5352, -239.8842, -280.4374, -210.9191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1191, device='cuda:0', dtype=torch.float64)
tensor([-344.5988, -187.6078, -239.6034, -279.3308, -210.5082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1059, device='cuda:0', dtype=torch.float64)
tensor([-343.4965, -187.7692, -239.4131, -278.3195, -210.0584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1006, device='cuda:0', dtype=torch.float64)
tensor([-342.1607, -188.0851, -239.1702, -277.1445, -209.3874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1183, device='cuda:0', dtype=torch.float64)
tensor([-340.6891, -188.6612, -239.2156, -276.2508, -208.8980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1158, device='cuda:0', dtype=torch.float64)
tensor([-339.2955, -189.0768, -239.2651, -275.4219, -208.4190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0695, device='cuda:0', dtype=torch.float64)
tensor([-337.9387, -189.2669, -239.2488, -274.7247, -208.0504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-336.9632, -189.3228, -239.4934, -274.6150, -208.1583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-335.8821, -189.7720, -239.9039, -274.6129, -208.3254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0962, device='cuda:0', dtype=torch.float64)
tensor([-334.5062, -190.1910, -239.9661, -274.2417, -208.1233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0852, device='cuda:0', dtype=torch.float64)
tensor([-333.0864, -190.5870, -239.8812, -273.8669, -207.8733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0849, device='cuda:0', dtype=torch.float64)
tensor([-331.8750, -190.8287, -239.8540, -273.6288, -207.7610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0947, device='cuda:0', dtype=torch.float64)
tensor([-330.6206, -190.6902, -239.3499, -273.0760, -207.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2400, device='cuda:0', dtype=torch.float64)
tensor([-329.4775, -190.0730, -238.4387, -272.2557, -207.0123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-328.4734, -189.4638, -237.6976, -271.6658, -206.7844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-327.4998, -188.8697, -236.9666, -271.0341, -206.5983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-326.7241, -188.3721, -236.5339, -270.8028, -206.7023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0823, device='cuda:0', dtype=torch.float64)
tensor([-325.7667, -188.0591, -236.1999, -270.5099, -206.7368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2042, device='cuda:0', dtype=torch.float64)
tensor([-324.4597, -188.3444, -236.1458, -270.0183, -206.6335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-322.7642, -189.0182, -236.1358, -269.1870, -206.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1518, device='cuda:0', dtype=torch.float64)
tensor([-320.9841, -189.9369, -236.3589, -268.4812, -206.3366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-319.3765, -190.4777, -236.2698, -267.5783, -206.0544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6113, device='cuda:0', dtype=torch.float64)
tensor([-317.7888, -191.0123, -235.8396, -266.2791, -205.4472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-316.4522, -191.5547, -235.9200, -265.7376, -205.3916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1229, device='cuda:0', dtype=torch.float64)
tensor([-315.5219, -191.6743, -236.7877, -266.2993, -206.2051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0758, device='cuda:0', dtype=torch.float64)
tensor([-314.6544, -191.4122, -237.1073, -266.5590, -206.6366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6316, device='cuda:0', dtype=torch.float64)
tensor([-313.9473, -190.4521, -237.0602, -266.7596, -207.1162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0117, device='cuda:0', dtype=torch.float64)
tensor([-312.0231, -189.9824, -237.3915, -267.0038, -207.4568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7838, device='cuda:0', dtype=torch.float64)
tensor([-310.2839, -189.4750, -237.1648, -266.5707, -207.3526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1190, device='cuda:0', dtype=torch.float64)
tensor([-308.0288, -189.5939, -236.7504, -265.6695, -206.7356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-306.0400, -189.8014, -236.6836, -265.0749, -206.2968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1224, device='cuda:0', dtype=torch.float64)
tensor([-304.5556, -189.7492, -236.7782, -264.8637, -206.1750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0582, device='cuda:0', dtype=torch.float64)
tensor([-303.5902, -189.4775, -237.3142, -265.2888, -206.6505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1469, device='cuda:0', dtype=torch.float64)
tensor([-302.7139, -189.2457, -237.8845, -265.6828, -207.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-301.8618, -189.2369, -238.3119, -265.8162, -207.4728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0886, device='cuda:0', dtype=torch.float64)
tensor([-301.0083, -189.2069, -238.4868, -265.7593, -207.5323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-299.8570, -189.3676, -238.3016, -265.2394, -207.1565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0675, device='cuda:0', dtype=torch.float64)
tensor([-298.8625, -189.2883, -238.0073, -264.8855, -206.9061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0837, device='cuda:0', dtype=torch.float64)
tensor([-297.7165, -189.3860, -237.3179, -263.8179, -206.1484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0893, device='cuda:0', dtype=torch.float64)
tensor([-296.8122, -189.1064, -236.7235, -263.0318, -205.7521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0813, device='cuda:0', dtype=torch.float64)
tensor([-295.7349, -188.9042, -236.2687, -262.4118, -205.3986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1117, device='cuda:0', dtype=torch.float64)
tensor([-294.8167, -188.7598, -236.0665, -262.1143, -205.2946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-293.6837, -188.9772, -235.8634, -261.6931, -205.0628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-292.3564, -189.4047, -235.4952, -260.9503, -204.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-291.0616, -189.6800, -234.9446, -260.0057, -204.0345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0784, device='cuda:0', dtype=torch.float64)
tensor([-289.6528, -190.1522, -234.3888, -259.0970, -203.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6173, device='cuda:0', dtype=torch.float64)
tensor([-288.8082, -190.3701, -233.8681, -258.3209, -203.2487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3365, device='cuda:0', dtype=torch.float64)
tensor([-288.4910, -190.4876, -234.1657, -258.4376, -203.8170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1618, device='cuda:0', dtype=torch.float64)
tensor([-288.0575, -191.0003, -234.5447, -258.3542, -204.1967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1206, device='cuda:0', dtype=torch.float64)
tensor([-287.4741, -191.5381, -234.5423, -257.8737, -204.2501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0781, device='cuda:0', dtype=torch.float64)
tensor([-287.2598, -191.8442, -234.9120, -257.9100, -204.7082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-286.6508, -192.3329, -235.0494, -257.6174, -204.7049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1216, device='cuda:0', dtype=torch.float64)
tensor([-285.7309, -192.9072, -235.0332, -257.0907, -204.4086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0725, device='cuda:0', dtype=torch.float64)
tensor([-284.5740, -193.5343, -234.6004, -255.9168, -203.8022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0681, device='cuda:0', dtype=torch.float64)
tensor([-283.5104, -193.8379, -233.9033, -254.7714, -203.1674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-282.7927, -193.7251, -233.4960, -254.1749, -202.9025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0748, device='cuda:0', dtype=torch.float64)
tensor([-282.0637, -193.4849, -232.8189, -253.2318, -202.4546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-281.6203, -193.0632, -232.6373, -252.8793, -202.3154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0653, device='cuda:0', dtype=torch.float64)
tensor([-281.2224, -192.6284, -232.5393, -252.7555, -202.3451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-280.7480, -192.3871, -232.8607, -253.0144, -202.5019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-279.9788, -192.4678, -232.8713, -252.7836, -202.2354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-279.3020, -192.6162, -233.2690, -252.8429, -202.1939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-278.3785, -192.8909, -233.1761, -252.2675, -201.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0877, device='cuda:0', dtype=torch.float64)
tensor([-277.1948, -193.5216, -232.8405, -251.2487, -200.9741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1005, device='cuda:0', dtype=torch.float64)
tensor([-276.2275, -193.6088, -232.2761, -250.4240, -200.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-275.2002, -193.9214, -231.6894, -249.5367, -199.5376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-273.9646, -194.4764, -231.1952, -248.6782, -198.7168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0683, device='cuda:0', dtype=torch.float64)
tensor([-272.9954, -194.5287, -230.8782, -248.2688, -198.2177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0879, device='cuda:0', dtype=torch.float64)
tensor([-272.3638, -194.1019, -230.8894, -248.3590, -198.1445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0698, device='cuda:0', dtype=torch.float64)
tensor([-271.8464, -193.4624, -231.1864, -248.8693, -198.3424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0705, device='cuda:0', dtype=torch.float64)
tensor([-271.2245, -193.2410, -231.8050, -249.4144, -198.6447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-270.8358, -192.8424, -232.5405, -250.1075, -199.2222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-270.3034, -192.6856, -232.9268, -250.3991, -199.5033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-270.0138, -192.3249, -233.4239, -250.9477, -200.0282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-269.6565, -192.0497, -233.9460, -251.4174, -200.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-269.3250, -191.8816, -234.2486, -251.5410, -200.9280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-268.6872, -192.0370, -234.3092, -251.2461, -200.9706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3959, device='cuda:0', dtype=torch.float64)
tensor([-267.2812, -192.7555, -233.6300, -249.9319, -200.1781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0732, device='cuda:0', dtype=torch.float64)
tensor([-265.9176, -193.4715, -233.1587, -248.8114, -199.4486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-264.8810, -193.9725, -232.8587, -248.0284, -198.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-264.1284, -194.3030, -232.8987, -247.5403, -198.8798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-263.2527, -194.6766, -232.9292, -247.0632, -198.7180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1476, device='cuda:0', dtype=torch.float64)
tensor([-262.6056, -194.8154, -233.0297, -246.8505, -198.7695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-261.9913, -194.7449, -232.8307, -246.3614, -198.5844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1468, device='cuda:0', dtype=torch.float64)
tensor([-261.4252, -194.6457, -232.5234, -245.9060, -198.2745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0958, device='cuda:0', dtype=torch.float64)
tensor([-260.9084, -194.6881, -232.4176, -245.5146, -198.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1516, device='cuda:0', dtype=torch.float64)
tensor([-261.0283, -194.0631, -232.7537, -245.9660, -198.6241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-261.2588, -193.2329, -233.2126, -246.5972, -199.2708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-261.1156, -192.8948, -233.2262, -246.4824, -199.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-260.8453, -192.5991, -233.0165, -246.2524, -199.5859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-260.1686, -192.8145, -232.2966, -245.1013, -199.1231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0954, device='cuda:0', dtype=torch.float64)
tensor([-259.2817, -193.2591, -231.4310, -243.6842, -198.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0524, device='cuda:0', dtype=torch.float64)
tensor([-258.5630, -193.4447, -230.6296, -242.5153, -197.8645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-258.2729, -193.4419, -230.4555, -242.1263, -197.8178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-258.3174, -193.2084, -230.8738, -242.4305, -198.2645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0524, device='cuda:0', dtype=torch.float64)
tensor([-258.5741, -192.7324, -231.5582, -243.2784, -199.0821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0576, device='cuda:0', dtype=torch.float64)
tensor([-258.6860, -192.5563, -232.4086, -244.1574, -199.8810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-258.5716, -192.6588, -232.7834, -244.2995, -200.1783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0704, device='cuda:0', dtype=torch.float64)
tensor([-258.2406, -192.7854, -232.7652, -243.9600, -200.1663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-257.6272, -193.1020, -232.4578, -243.1327, -199.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-256.8935, -193.6203, -232.0839, -242.1589, -199.2605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-256.1319, -194.1408, -231.5395, -241.1382, -198.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0607, device='cuda:0', dtype=torch.float64)
tensor([-254.9857, -194.9686, -230.8659, -239.7113, -197.6323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-254.1374, -195.4476, -230.3653, -238.7071, -196.9728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-253.4408, -195.7017, -229.9253, -237.8884, -196.5150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0786, device='cuda:0', dtype=torch.float64)
tensor([-252.8690, -195.9664, -229.8404, -237.4215, -196.2970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-252.5191, -196.1654, -230.1770, -237.3175, -196.3626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-252.4564, -195.7396, -230.5204, -237.4921, -196.6223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-252.2621, -195.2882, -230.8590, -237.7445, -196.8674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-252.2771, -195.0673, -231.3780, -238.1730, -197.3726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-252.1142, -194.8229, -231.7633, -238.5486, -197.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-251.3666, -194.9739, -231.4904, -238.0964, -197.5090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0745, device='cuda:0', dtype=torch.float64)
tensor([-250.3993, -195.0861, -230.6811, -237.1479, -196.8764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-249.1750, -195.4358, -229.3634, -235.5255, -195.8633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-248.2818, -195.5023, -228.6069, -234.6317, -195.3740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-247.7484, -195.4790, -228.4868, -234.5064, -195.5042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-246.8661, -195.7903, -228.1439, -233.9615, -195.2673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-246.2636, -195.6602, -228.0571, -233.8723, -195.2463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0734, device='cuda:0', dtype=torch.float64)
tensor([-246.1381, -195.1804, -228.4667, -234.5627, -195.8140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-246.4107, -194.7071, -229.2012, -235.5213, -196.7954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0632, device='cuda:0', dtype=torch.float64)
tensor([-246.8837, -194.0622, -230.0124, -236.6914, -197.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0806, device='cuda:0', dtype=torch.float64)
tensor([-246.3944, -194.3487, -230.2139, -236.7212, -197.8831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-245.6513, -194.6500, -230.0884, -236.4022, -197.6297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-245.0290, -195.0708, -230.1164, -236.0682, -197.4658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0904, device='cuda:0', dtype=torch.float64)
tensor([-244.0420, -195.9015, -230.0993, -235.3100, -197.0584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-242.8954, -196.7489, -229.8300, -234.2099, -196.5261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-241.9384, -197.6136, -229.7012, -233.2567, -196.0981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-241.0255, -198.7053, -229.5481, -232.2527, -195.7625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-240.5271, -199.0417, -229.5640, -231.9426, -195.6872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2863, device='cuda:0', dtype=torch.float64)
tensor([-240.4637, -199.0038, -229.8853, -232.1970, -195.8740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-240.2563, -198.9147, -229.7337, -232.1125, -195.8042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-240.1330, -198.8736, -229.7727, -232.2322, -195.9353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-240.3380, -197.9139, -229.7911, -232.7396, -196.0235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-240.4164, -197.1956, -229.6759, -233.0812, -196.0680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0849, device='cuda:0', dtype=torch.float64)
tensor([-239.9848, -197.0836, -229.3337, -232.7928, -195.7561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-239.7382, -196.4196, -228.9768, -232.7352, -195.4864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-239.2936, -196.0091, -228.5509, -232.3475, -195.1120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-238.9399, -195.2476, -228.0936, -232.0908, -194.7643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-238.6455, -194.8267, -227.8735, -231.9473, -194.6263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-238.5257, -194.1481, -227.7554, -232.1608, -194.6106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-238.0488, -193.9110, -227.3962, -231.7535, -194.3150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-237.5692, -193.6387, -227.0568, -231.3956, -194.0195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-237.3096, -193.3892, -227.1081, -231.4761, -194.0474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0813, device='cuda:0', dtype=torch.float64)
tensor([-237.4451, -193.2149, -227.7102, -232.0856, -194.4374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0994, device='cuda:0', dtype=torch.float64)
tensor([-237.4257, -193.1649, -228.0130, -232.2893, -194.5460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-237.0275, -193.3547, -227.8943, -231.8822, -194.1870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-236.2927, -193.8970, -227.5742, -231.0604, -193.5964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-235.4113, -194.9757, -227.3203, -229.9932, -192.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-234.5908, -196.4727, -227.2328, -229.0027, -192.6431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-234.1679, -197.2608, -227.0675, -228.3686, -192.4975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-233.6731, -197.9401, -226.5037, -227.4781, -192.2505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-233.6785, -198.0203, -226.6246, -227.5122, -192.5235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-234.0357, -197.2316, -227.0555, -228.1507, -193.0059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-234.8510, -196.1734, -227.9517, -229.4929, -193.9628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-236.0965, -194.8627, -229.1106, -231.2978, -195.3263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-237.4537, -193.9432, -230.4504, -233.1289, -196.9698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-238.0495, -193.6338, -231.0957, -233.8338, -197.9816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-237.5661, -194.0549, -230.8340, -233.2252, -198.0596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-236.2535, -194.7403, -229.7253, -231.5863, -197.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0624, device='cuda:0', dtype=torch.float64)
tensor([-234.9848, -195.2978, -228.3215, -229.9714, -196.5593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-233.4599, -195.8299, -226.6824, -227.9515, -195.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-232.0699, -196.3758, -225.4735, -226.1586, -194.5749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-231.0303, -196.9194, -224.8368, -224.9505, -194.1532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-230.6482, -196.8327, -224.7206, -224.7576, -194.2723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-230.4546, -196.8900, -224.9482, -224.8284, -194.5422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-230.5086, -196.8545, -225.4125, -225.2053, -195.0312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-230.7369, -196.8473, -226.1358, -225.8179, -195.7020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-231.3535, -196.5446, -227.0125, -226.6213, -196.5756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-231.9344, -196.5635, -228.0400, -227.2887, -197.4136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1318, device='cuda:0', dtype=torch.float64)
tensor([-232.2760, -196.2678, -228.7529, -227.7266, -197.8328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-231.9000, -196.6222, -228.9858, -227.3723, -197.7377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-231.5430, -197.1895, -229.3171, -226.9477, -197.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-231.0225, -197.6509, -229.1771, -226.1886, -197.3762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-230.6339, -197.7205, -228.8814, -225.5801, -197.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2608, device='cuda:0', dtype=torch.float64)
tensor([-230.3467, -197.7175, -228.6527, -224.9651, -196.8118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0938, device='cuda:0', dtype=torch.float64)
tensor([-229.1317, -198.6018, -227.4610, -222.9586, -195.6936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-228.0520, -199.1561, -226.1508, -221.2477, -194.7844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0874, device='cuda:0', dtype=torch.float64)
tensor([-227.2608, -199.5420, -225.3418, -220.1081, -194.2815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-226.6576, -199.8092, -224.5978, -219.2339, -193.9439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-226.3542, -199.7116, -224.1884, -218.8693, -193.7704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-226.5916, -199.0993, -224.1902, -219.2933, -194.0006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-226.6846, -198.4108, -223.9210, -219.5640, -194.0521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-226.9401, -197.7194, -223.9199, -220.1834, -194.2759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-226.8641, -197.4947, -223.6143, -220.2490, -194.2236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-226.8987, -197.3628, -223.6553, -220.5342, -194.3493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0838, device='cuda:0', dtype=torch.float64)
tensor([-226.7651, -197.2975, -223.6083, -220.7129, -194.3837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-226.8472, -196.9056, -223.6738, -221.2440, -194.5606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-226.6145, -196.8937, -223.7152, -221.3163, -194.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-226.2555, -197.3838, -224.0418, -221.2881, -194.4764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-225.8819, -198.1140, -224.4019, -221.1771, -194.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-225.4373, -199.1664, -224.7744, -220.9212, -194.5468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-224.5242, -200.4002, -224.4519, -219.9594, -194.1927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0569, device='cuda:0', dtype=torch.float64)
tensor([-224.1944, -200.7213, -224.4105, -219.7226, -194.1158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-223.9654, -200.5869, -224.0719, -219.5626, -193.9431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-223.8683, -200.0318, -223.7693, -219.5819, -193.8019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-224.4259, -198.8282, -224.2472, -220.4824, -194.1469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-224.8877, -197.9129, -224.6442, -221.2015, -194.5411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-224.5612, -197.8423, -224.4338, -220.9703, -194.5390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-223.9358, -198.0003, -223.8796, -220.3302, -194.1901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-222.8576, -198.6370, -222.8652, -218.9667, -193.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-221.7606, -199.5111, -221.8612, -217.5223, -192.7643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-220.9401, -200.4370, -221.4510, -216.6160, -192.5872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-220.6024, -200.9728, -221.5069, -216.4928, -192.7469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-220.5583, -200.9148, -221.8237, -216.9144, -193.0255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-221.0874, -200.5554, -222.8308, -218.1647, -193.7498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-221.9432, -199.8871, -224.0525, -219.7280, -194.7163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-222.7115, -199.2357, -225.1273, -220.9458, -195.5794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0617, device='cuda:0', dtype=torch.float64)
tensor([-222.7320, -198.7825, -225.2553, -221.1541, -195.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-222.4066, -198.8041, -225.1104, -220.8557, -195.6762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-222.0114, -198.7963, -224.9843, -220.4153, -195.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-221.3929, -198.6642, -224.4885, -219.6970, -194.9466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-220.5562, -198.6603, -223.6270, -218.5632, -194.2168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-219.7201, -198.6809, -222.6482, -217.3459, -193.4372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-219.0141, -198.8666, -221.8607, -216.3337, -192.8571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-218.6721, -199.1031, -221.5213, -215.8589, -192.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1045, device='cuda:0', dtype=torch.float64)
tensor([-218.9282, -198.7033, -221.5606, -216.3334, -192.7873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-219.5493, -198.2306, -221.8897, -217.3688, -193.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-220.4949, -197.7008, -222.5384, -218.7300, -194.0839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-221.3272, -197.2892, -223.1118, -219.7978, -194.8305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-221.4482, -197.2321, -222.9606, -219.8648, -194.9176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-221.3552, -197.3516, -222.7973, -219.7434, -194.8662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-220.9540, -197.6763, -222.4316, -219.2767, -194.6583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-220.3143, -198.2870, -221.7505, -218.3984, -194.2152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-219.4045, -199.0096, -220.7782, -217.0954, -193.5088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-218.5765, -199.7511, -219.8820, -215.8555, -192.8694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-218.2792, -199.7369, -219.4241, -215.4291, -192.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-218.4401, -198.9392, -219.3226, -215.7479, -192.5622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0449, device='cuda:0', dtype=torch.float64)
tensor([-218.5567, -198.0301, -219.0355, -216.0478, -192.4680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-218.4757, -197.2885, -218.6225, -215.9814, -192.3061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-218.3061, -196.8513, -218.3576, -215.9270, -192.2511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-218.6882, -196.1271, -218.7614, -216.7429, -192.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-218.9851, -195.7082, -219.2675, -217.3944, -193.1888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-219.5224, -195.4620, -220.0992, -218.2648, -193.9769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-220.2121, -195.1407, -221.0638, -219.2974, -194.8949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-220.4807, -195.0512, -221.6039, -219.8286, -195.4828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-220.1712, -195.3543, -221.6497, -219.7028, -195.5959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-219.1987, -196.3013, -221.2151, -218.6701, -195.1296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-217.9828, -197.7352, -220.6223, -217.3137, -194.5298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-217.0192, -199.1615, -220.3196, -216.3139, -194.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-216.2372, -200.3041, -220.1963, -215.5466, -194.0616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-215.6910, -200.6013, -220.0524, -214.9780, -193.7863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-215.4771, -200.2345, -220.0621, -214.8571, -193.5975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-215.3529, -199.6378, -220.1300, -214.8988, -193.4367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-215.6180, -198.4938, -220.3737, -215.4594, -193.5411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-216.2409, -197.1387, -221.0500, -216.6082, -194.0450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-216.7815, -196.0151, -221.6349, -217.6174, -194.6207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-216.7166, -195.5769, -221.5956, -217.7544, -194.7337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-215.8464, -195.8134, -220.8030, -216.7565, -194.0360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-214.8329, -196.1865, -219.7900, -215.4091, -193.1620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-214.0400, -196.6145, -219.1835, -214.3893, -192.5543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-213.4616, -196.9564, -218.9164, -213.8235, -192.2101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-213.3845, -196.9334, -219.2109, -214.1282, -192.4174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-213.4771, -196.9540, -219.7073, -214.6470, -192.7506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-213.6299, -197.0587, -220.1541, -215.1190, -193.0999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-213.6460, -197.4679, -220.5057, -215.3638, -193.4030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-213.3020, -198.2580, -220.2611, -214.9483, -193.3419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-213.1314, -199.0353, -220.1732, -214.8409, -193.5833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-212.8544, -200.0870, -219.8762, -214.5066, -193.8114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-212.7282, -200.7763, -219.6254, -214.5153, -194.1076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-212.9346, -200.7987, -219.5677, -215.0543, -194.5203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-213.4571, -200.2723, -219.8828, -216.0197, -195.0527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-213.9189, -199.5752, -219.9651, -216.8096, -195.4699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-214.2798, -198.9281, -220.0337, -217.4086, -195.8021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-214.3153, -198.5824, -219.8371, -217.5451, -195.9123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-214.0480, -198.3296, -219.3138, -217.2165, -195.6811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-213.7249, -198.2176, -218.9435, -216.8538, -195.4696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-212.8824, -198.5434, -217.9869, -215.6932, -194.8228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-211.9142, -199.0164, -216.8671, -214.2184, -194.0777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-211.0770, -199.4769, -215.9826, -212.9196, -193.4505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-210.5788, -200.1952, -215.5755, -212.1113, -193.2362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-210.7992, -200.3574, -215.9318, -212.4370, -193.6823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-211.5470, -199.8260, -216.9018, -213.5672, -194.5164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-211.9058, -199.6260, -217.5495, -214.1068, -195.0319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-212.4684, -199.1462, -218.4983, -214.9505, -195.7086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-212.7409, -198.9207, -219.0758, -215.3472, -196.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-212.7994, -198.5025, -219.2242, -215.4927, -196.3239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-212.5527, -198.5042, -219.0836, -215.2167, -196.2673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-212.0299, -198.8615, -218.7401, -214.6212, -196.0496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-211.3150, -199.2954, -218.0873, -213.7401, -195.5752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-210.2809, -200.1912, -216.9961, -212.3643, -194.8969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-209.4359, -200.9783, -216.1688, -211.2130, -194.4713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-208.9232, -201.6065, -215.7818, -210.5115, -194.3684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-209.1335, -201.7265, -216.2780, -210.9559, -194.9370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-209.6967, -201.3204, -217.1337, -211.8908, -195.6435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-210.3254, -201.0364, -218.0102, -212.8514, -196.5452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-210.8562, -200.6727, -218.7456, -213.5854, -197.2309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-211.1392, -200.4495, -219.0722, -213.8994, -197.6507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-211.0936, -200.3805, -218.9237, -213.7634, -197.7328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-210.9444, -200.5669, -218.5860, -213.4039, -197.7557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-210.4113, -200.7978, -217.6418, -212.4576, -197.3982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3991, device='cuda:0', dtype=torch.float64)
tensor([-209.7185, -201.1537, -216.3682, -211.1781, -196.7920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-208.8640, -201.6718, -214.9408, -209.4419, -196.0536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-208.5635, -201.7344, -214.2327, -208.5892, -195.7735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-208.6044, -201.5962, -213.9685, -208.3316, -195.8054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-208.9959, -201.2064, -214.3340, -208.7660, -196.1962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-209.6471, -200.8430, -215.2358, -209.8577, -196.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-210.2890, -200.3958, -216.1330, -210.9755, -197.6639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-210.6989, -200.3671, -216.7599, -211.6357, -198.2364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-210.7157, -200.3744, -216.8261, -211.6157, -198.3119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-210.2879, -200.6883, -216.3801, -210.9645, -197.9617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-209.8773, -201.0775, -216.0495, -210.4249, -197.6234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-209.4357, -201.4433, -215.5357, -209.7850, -197.2052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-209.3162, -201.5897, -215.4745, -209.6841, -197.0627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-209.4353, -201.4417, -215.6920, -210.0565, -197.1355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-209.4043, -201.3394, -215.8799, -210.2305, -197.0933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-209.3535, -201.2069, -216.0347, -210.4060, -197.0308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3966, device='cuda:0', dtype=torch.float64)
tensor([-208.7789, -201.9208, -215.7890, -209.5944, -196.7625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-208.3927, -202.1374, -215.5458, -209.0930, -196.5410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-208.2531, -201.8458, -215.4865, -209.0049, -196.3728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-208.3000, -200.9565, -215.5147, -209.2742, -196.2109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-208.4345, -200.0156, -215.7458, -209.7142, -196.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-208.5684, -199.1289, -215.9262, -210.1775, -196.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-208.6055, -198.5322, -216.0732, -210.5176, -196.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-208.3442, -198.1580, -215.6947, -210.3258, -195.9074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-207.6935, -198.4000, -214.9560, -209.3954, -195.2718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-207.0003, -198.8267, -214.1575, -208.2155, -194.5416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-206.8388, -198.8464, -214.0346, -208.0950, -194.3892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-206.6830, -198.9985, -213.9574, -208.0279, -194.3604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-207.1711, -198.5242, -214.7462, -209.3127, -195.0332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-207.8080, -198.1719, -215.7009, -210.6993, -195.8388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-207.9979, -198.3434, -216.0353, -211.1630, -196.2587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-207.9853, -198.6937, -216.1124, -211.2112, -196.4497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0658, device='cuda:0', dtype=torch.float64)
tensor([-208.0269, -198.8261, -216.1893, -211.3622, -196.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-207.5171, -198.7215, -215.2633, -210.6081, -195.9545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-207.1685, -198.5969, -214.5783, -210.1064, -195.5075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-206.8712, -198.5589, -214.0433, -209.7550, -195.2116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-206.3087, -198.9662, -213.3152, -208.9004, -194.7722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-205.8523, -199.2526, -212.6482, -208.1847, -194.4447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-205.7119, -199.0843, -212.4466, -208.0956, -194.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-205.8706, -198.6067, -212.6139, -208.5785, -194.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-206.2384, -198.4348, -213.2120, -209.3858, -195.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7330, device='cuda:0', dtype=torch.float64)
tensor([-207.1753, -198.1650, -214.4726, -211.1931, -196.3136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-207.8491, -198.3038, -215.3701, -212.4352, -197.2099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-207.9258, -198.9387, -215.7117, -212.7885, -197.5923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-207.4233, -199.6150, -215.0538, -212.1460, -197.2956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-206.8341, -200.5013, -214.3451, -211.3028, -196.9254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-206.2095, -201.3391, -213.6753, -210.4149, -196.5058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-205.3631, -202.4168, -212.6959, -208.9765, -195.9092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-204.5922, -203.3666, -211.6948, -207.6112, -195.4054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-204.4065, -203.2557, -211.4308, -207.3480, -195.1730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-205.0124, -202.2307, -212.2259, -208.5902, -195.5773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-205.9721, -200.8281, -213.3531, -210.3802, -196.2007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-207.1517, -199.4906, -214.7549, -212.4680, -197.1445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-208.1697, -198.2030, -215.9247, -214.3020, -197.9045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-208.8573, -197.2329, -216.6874, -215.6283, -198.3586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-208.6646, -197.0527, -216.4054, -215.4678, -198.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-207.7368, -197.5524, -215.2396, -213.9853, -197.2429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0711, device='cuda:0', dtype=torch.float64)
tensor([-206.6651, -198.4070, -213.7691, -212.0136, -196.3173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4192, device='cuda:0', dtype=torch.float64)
tensor([-206.0358, -198.5794, -212.5910, -210.6053, -195.5873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-205.2868, -198.7447, -211.2185, -208.7688, -194.6871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-205.1565, -198.6588, -210.8435, -208.2536, -194.5075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-205.3055, -198.3346, -211.0115, -208.5097, -194.7037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-205.7000, -197.9204, -211.7324, -209.5221, -195.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-206.3494, -197.7152, -212.8975, -210.9630, -196.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-206.7714, -198.1228, -213.7228, -211.7452, -196.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-207.3647, -198.3926, -214.7185, -212.8664, -197.7453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-207.4632, -199.1108, -215.1114, -213.0513, -198.1900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-207.4585, -199.7990, -215.3190, -213.0611, -198.4898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-206.9560, -200.7332, -214.8428, -212.1514, -198.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-206.4192, -201.4598, -214.2326, -211.2195, -197.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-206.0609, -201.8369, -213.8733, -210.6009, -197.6730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0953, device='cuda:0', dtype=torch.float64)
tensor([-205.9909, -201.7594, -213.7066, -210.4231, -197.5008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-206.0086, -201.4624, -213.6529, -210.3975, -197.3617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-206.0141, -201.2914, -213.6805, -210.4133, -197.2489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-206.2762, -200.5990, -213.9869, -210.9701, -197.2666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-206.5867, -199.9139, -214.3334, -211.6192, -197.3422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-206.8878, -199.1230, -214.5293, -212.2195, -197.4071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-207.2021, -198.2752, -214.7568, -212.8872, -197.5212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-206.8679, -197.9041, -214.2799, -212.4450, -197.0671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-206.2669, -197.9651, -213.5660, -211.4509, -196.4160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-205.7590, -197.9744, -213.0846, -210.5862, -195.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-205.3546, -198.1260, -212.7665, -209.8365, -195.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-205.1590, -198.0089, -212.6906, -209.4624, -195.2305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-205.0303, -198.1443, -212.7586, -209.2073, -195.2158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-204.9283, -198.4348, -212.9295, -209.0114, -195.2832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1911, device='cuda:0', dtype=torch.float64)
tensor([-204.3349, -199.1250, -212.2651, -207.6124, -194.8262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-204.0228, -199.7541, -211.9854, -206.6608, -194.7181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-204.4993, -199.4695, -212.8948, -207.4896, -195.3515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-205.2506, -199.2629, -214.3130, -208.8281, -196.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-205.9971, -199.1960, -215.7855, -210.0499, -197.5431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-206.8353, -199.1573, -217.3262, -211.4826, -198.7595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-206.9592, -199.6238, -217.7717, -211.6191, -199.2297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-206.8090, -199.8979, -217.6320, -211.3537, -199.2635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-205.9123, -200.7650, -216.3758, -209.7505, -198.5598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-205.1616, -201.1789, -215.1167, -208.3316, -197.8134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-204.6343, -201.3406, -214.1667, -207.3510, -197.2889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-204.3882, -200.8961, -213.6227, -206.9591, -196.9400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-204.5607, -200.0821, -213.6769, -207.4891, -197.0196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-204.7277, -199.3571, -213.7340, -208.0181, -197.0879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-205.1284, -198.5702, -214.0685, -209.0236, -197.3819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-205.6107, -198.0097, -214.7363, -210.1674, -197.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-206.0365, -197.8916, -215.3808, -211.0880, -198.4424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-206.4603, -197.9294, -215.9703, -211.9546, -198.9430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-206.7541, -198.3738, -216.5476, -212.5898, -199.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-206.6746, -198.9658, -216.5249, -212.6013, -199.5003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-206.4153, -199.7715, -216.1295, -212.1877, -199.3914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-205.9842, -200.6939, -215.3915, -211.4436, -199.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-205.1718, -201.9498, -214.1472, -210.0160, -198.5333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-204.2622, -203.2305, -212.5857, -208.3429, -197.9010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-203.7959, -204.1309, -211.6683, -207.4312, -197.6766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-203.6193, -204.2720, -211.2030, -207.0863, -197.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-203.6152, -203.6028, -211.0064, -207.1969, -197.1984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-203.7579, -202.5850, -211.1061, -207.5922, -197.0055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-204.1881, -201.1677, -211.6003, -208.6114, -197.0438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-204.6690, -200.0082, -212.3277, -209.8058, -197.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-204.8240, -199.1888, -212.6139, -210.3281, -197.2995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-204.7837, -198.5463, -212.6103, -210.3967, -197.1599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-204.5749, -198.2220, -212.3799, -210.1713, -196.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-204.3521, -198.1837, -212.1339, -209.8767, -196.6904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-204.1598, -198.2174, -211.9363, -209.6392, -196.5568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-204.1401, -198.2959, -211.9719, -209.7065, -196.6664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-204.1287, -198.5569, -212.0796, -209.7267, -196.8359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-204.0699, -199.1586, -212.1951, -209.6160, -197.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-204.2198, -199.8223, -212.7562, -209.9548, -197.5262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-204.3117, -200.3579, -213.1275, -210.1848, -197.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-204.3130, -200.7048, -213.2079, -210.2391, -198.0891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-204.0801, -201.2840, -212.9963, -209.8672, -198.0855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-203.8263, -201.8638, -212.7943, -209.4325, -198.0584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-203.9014, -201.6963, -212.9398, -209.6424, -198.1700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-203.9132, -201.6341, -212.9865, -209.7646, -198.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-203.8336, -201.3434, -212.8507, -209.7257, -198.1783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-203.7884, -200.8279, -212.7670, -209.7380, -198.0947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-203.7931, -200.1362, -212.7949, -209.8631, -197.9895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-203.7020, -199.8150, -212.7950, -209.7779, -197.9081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-203.6387, -199.4760, -212.7281, -209.7242, -197.8439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-203.7586, -199.0031, -212.9561, -210.0061, -197.9448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-203.9362, -198.6282, -213.3126, -210.3799, -198.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-204.1757, -198.5499, -213.7284, -210.8344, -198.3271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-204.4230, -198.7590, -214.1625, -211.2886, -198.6712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-204.5903, -199.0690, -214.4786, -211.5538, -198.9399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-204.5095, -199.3648, -214.3846, -211.3513, -198.9477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-204.2638, -199.7991, -214.0473, -210.8155, -198.8451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-203.8389, -200.2941, -213.3295, -209.9295, -198.5577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-203.3491, -200.8471, -212.3707, -208.8774, -198.1687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-202.7798, -201.4480, -211.3130, -207.6174, -197.7320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-202.4964, -201.8047, -210.6369, -206.9176, -197.5785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-202.5949, -201.5124, -210.6122, -207.1541, -197.7137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-202.6061, -201.5814, -210.5698, -207.1425, -197.8835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-202.7998, -201.3559, -210.7427, -207.5083, -198.2174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-203.2260, -200.8399, -211.2289, -208.3409, -198.6841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-203.6450, -200.4221, -211.7152, -209.1208, -199.1066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-204.0395, -200.2600, -212.1811, -209.7969, -199.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-204.4580, -200.0362, -212.6849, -210.4978, -199.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-204.6926, -199.8744, -213.0200, -210.9559, -200.2692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-204.7854, -200.0536, -213.2791, -211.1223, -200.5171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-204.8607, -200.0916, -213.5071, -211.2850, -200.6749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-204.7815, -200.2396, -213.4844, -211.2317, -200.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-204.6181, -200.3568, -213.3165, -211.0020, -200.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-204.2080, -200.7297, -212.8519, -210.3364, -200.2260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-203.6185, -201.1697, -212.1577, -209.3225, -199.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-203.0601, -201.1479, -211.3158, -208.3107, -199.0103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-202.4284, -201.0701, -210.3013, -207.0875, -198.1685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-201.9676, -201.0222, -209.6256, -206.1740, -197.5618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-201.8794, -200.7132, -209.5962, -206.1232, -197.3461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-201.9647, -200.0468, -209.8377, -206.5650, -197.2119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-202.1102, -199.4093, -210.2141, -207.1594, -197.1851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-202.4028, -198.7695, -210.8268, -208.0213, -197.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-202.6826, -198.3715, -211.3413, -208.7792, -197.4307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-202.9608, -198.2039, -211.8008, -209.4350, -197.6406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-203.1161, -198.3492, -212.0658, -209.7618, -197.8513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-203.3347, -198.9342, -212.5577, -210.1907, -198.2748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-203.5188, -199.6721, -213.0909, -210.5434, -198.7424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-203.4590, -200.7009, -213.2362, -210.4247, -199.0368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-203.3329, -201.6220, -213.2305, -210.1898, -199.2372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-202.8684, -202.4150, -212.4802, -209.3373, -198.9736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-202.4670, -202.6601, -211.6980, -208.6321, -198.5672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-201.9426, -202.6878, -210.5586, -207.6588, -197.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-201.6522, -202.4667, -209.7166, -207.0927, -197.5048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-201.5967, -201.7200, -209.1261, -206.9399, -197.2216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-201.9470, -200.5707, -209.1257, -207.5863, -197.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-202.6003, -199.4211, -209.5809, -208.7741, -197.7935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-203.2706, -198.5099, -210.1184, -209.9290, -198.3086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-203.7122, -197.8981, -210.4007, -210.6480, -198.5578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-203.8196, -197.7377, -210.1926, -210.6842, -198.5810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-204.1110, -197.6161, -210.3461, -211.1033, -198.8414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-204.3850, -197.5770, -210.5633, -211.4501, -199.0983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-204.5483, -197.8770, -210.8121, -211.6325, -199.4229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-204.3555, -198.6408, -210.6417, -211.1984, -199.4831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-204.0821, -199.3685, -210.4031, -210.6985, -199.4311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-203.6203, -200.0898, -209.8262, -209.8482, -199.1873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-203.1551, -200.7332, -209.2681, -209.0100, -198.8934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-202.8805, -201.0285, -209.0835, -208.5795, -198.6739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-202.6081, -201.2743, -208.8566, -208.0960, -198.3890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-202.3655, -201.1606, -208.5778, -207.6600, -197.9952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-202.1492, -200.8780, -208.5613, -207.4178, -197.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-202.2049, -200.0118, -208.9728, -207.8905, -197.4503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-202.5804, -198.8689, -209.9493, -209.1544, -197.6517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-203.0769, -197.9961, -211.1172, -210.5238, -198.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-203.5490, -197.3365, -212.1204, -211.6979, -198.5553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-203.8881, -197.1897, -212.8259, -212.4469, -198.9533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-203.9415, -197.3091, -212.9408, -212.5319, -199.0827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-203.8022, -197.6279, -212.7461, -212.1627, -199.0554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-203.4537, -198.0134, -212.2140, -211.4342, -198.8464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-202.9934, -198.6588, -211.5505, -210.4649, -198.5674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-202.8201, -198.9672, -211.3250, -210.0494, -198.5173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-202.8365, -199.0759, -211.3347, -210.0128, -198.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-202.8605, -199.0797, -211.3409, -210.0183, -198.7149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-202.7350, -199.2061, -211.1054, -209.7396, -198.6876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-202.4803, -199.4613, -210.5778, -209.1333, -198.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-202.3581, -199.7912, -210.2238, -208.7612, -198.5125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-202.3731, -199.8977, -210.0470, -208.6388, -198.5912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-202.3710, -199.7907, -209.7219, -208.4644, -198.5280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-202.4342, -199.7049, -209.5335, -208.4267, -198.5541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-202.4158, -199.8029, -209.3288, -208.2135, -198.5692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-202.4929, -199.8513, -209.3004, -208.1923, -198.6621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-202.6396, -199.6936, -209.3499, -208.3568, -198.7387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-202.9661, -199.2814, -209.6304, -208.8989, -198.8297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-203.4925, -198.7311, -210.2616, -209.8484, -199.1373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-203.9352, -198.2155, -210.6630, -210.5484, -199.3187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-204.1879, -198.0303, -210.8642, -210.8812, -199.3671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-204.0471, -198.1159, -210.4063, -210.5018, -199.0339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-203.8716, -198.3394, -209.8975, -210.0428, -198.7336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-203.6598, -198.6989, -209.3118, -209.4153, -198.4421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-203.4919, -198.8428, -208.8425, -208.9486, -198.1074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-203.2535, -198.8422, -208.2325, -208.3696, -197.6795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-203.1646, -198.7676, -207.9087, -208.1019, -197.4707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-203.0615, -198.8716, -207.6848, -207.9145, -197.3415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-202.9309, -199.1890, -207.4390, -207.7052, -197.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-203.0126, -199.2405, -207.6670, -208.0227, -197.4962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-203.3191, -198.9419, -208.3199, -208.8815, -197.8406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-203.8096, -198.5892, -209.2349, -209.9877, -198.3680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-204.2366, -198.5440, -210.0449, -210.8489, -198.9050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-204.3039, -198.7997, -210.2311, -210.9736, -199.1139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-204.3599, -198.6811, -210.3093, -211.0872, -199.2007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-203.9732, -198.6549, -209.7245, -210.4247, -198.8185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-203.3398, -198.7234, -208.7927, -209.3005, -198.1872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-202.8575, -199.0999, -208.1911, -208.3411, -197.8615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-202.4680, -199.2799, -207.7588, -207.5709, -197.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-202.2008, -199.3470, -207.4955, -207.0486, -197.4690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-202.0397, -199.0408, -207.4457, -206.8775, -197.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-202.0168, -198.4385, -207.6346, -206.9569, -197.3092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-202.3188, -197.7828, -208.3882, -207.7215, -197.6360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-202.5942, -197.5499, -209.0963, -208.3036, -198.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-202.7391, -197.6912, -209.5725, -208.5604, -198.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-202.8416, -197.8910, -209.9689, -208.6789, -198.6439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-202.8950, -198.2211, -210.1963, -208.6459, -198.8990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-202.8181, -198.7051, -210.0802, -208.3523, -198.9761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-202.5742, -199.6724, -209.5763, -207.6028, -198.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-202.1849, -200.9021, -208.8836, -206.5341, -198.8069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-201.7373, -202.2351, -208.1549, -205.3047, -198.6008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-201.5609, -202.8227, -207.8183, -204.7850, -198.4404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-201.4699, -202.9765, -207.6697, -204.5677, -198.2615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-201.5536, -202.5819, -207.8556, -204.8625, -198.1334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-201.6629, -201.8289, -208.1416, -205.3190, -197.8975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-201.8130, -200.9574, -208.5502, -205.9301, -197.7455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-202.1895, -199.8097, -209.2782, -207.0573, -197.7993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-202.6856, -198.4945, -210.1513, -208.4488, -197.8759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-203.1265, -197.5311, -210.9058, -209.5956, -198.0311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-203.2317, -197.0968, -210.9893, -209.9576, -197.9609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-202.9642, -197.1284, -210.3832, -209.4741, -197.6348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-202.5783, -197.4708, -209.5978, -208.7042, -197.2238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-202.2251, -197.8794, -208.7997, -207.8982, -196.8423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-201.9833, -198.3490, -208.2962, -207.3503, -196.6908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-201.7430, -198.9475, -207.9558, -206.8414, -196.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-201.5333, -199.6674, -207.7228, -206.4083, -196.8162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-201.4434, -200.3784, -207.6402, -206.2086, -197.0957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-201.8465, -200.5756, -208.3736, -207.1275, -197.7955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-202.3255, -200.6313, -209.0715, -208.0807, -198.5121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-203.1341, -200.1721, -210.2770, -209.6904, -199.4618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-203.6526, -199.8219, -210.9405, -210.6998, -200.0378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-203.9430, -199.4695, -211.2108, -211.2452, -200.2905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-203.6546, -199.5425, -210.6057, -210.7322, -200.0201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-202.9625, -199.9779, -209.3374, -209.3735, -199.3574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-202.3746, -200.4773, -208.2815, -208.1679, -198.7582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-201.8988, -200.8340, -207.4926, -207.2320, -198.2638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-201.6181, -201.1382, -207.0033, -206.5951, -197.9720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-201.3044, -201.4044, -206.5553, -205.9263, -197.6650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-201.1876, -201.3051, -206.6243, -205.8857, -197.5151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-201.1024, -201.0641, -206.7485, -205.9969, -197.3707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-201.2346, -200.5773, -207.2078, -206.5665, -197.4308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-201.7125, -199.6857, -208.3023, -207.9232, -197.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-202.1297, -198.8585, -209.2880, -209.1050, -197.9833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-202.3279, -198.4452, -209.7968, -209.6850, -198.0282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-202.4881, -198.3473, -210.1531, -210.0546, -198.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-202.4926, -198.5740, -210.2744, -210.0243, -198.1308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-202.2176, -198.9565, -209.8613, -209.4299, -197.8539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-201.8263, -199.3106, -209.3023, -208.6548, -197.4476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-201.5750, -199.5565, -208.8726, -208.0941, -197.2014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-201.2703, -199.7200, -208.2922, -207.4309, -196.9072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-201.2543, -199.6308, -208.1870, -207.3884, -196.8840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-201.2926, -199.3040, -208.1319, -207.4913, -196.8280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-201.4172, -198.8135, -208.0656, -207.7192, -196.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-201.4828, -198.4459, -207.9940, -207.7970, -196.7733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-201.6850, -198.0416, -208.1499, -208.1760, -196.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-201.6748, -197.9750, -208.0959, -208.1033, -197.0843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-201.8297, -197.9841, -208.5125, -208.4431, -197.4832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-202.0526, -198.1930, -209.0675, -208.8567, -198.0187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-202.3028, -198.6366, -209.6562, -209.2582, -198.6874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-202.7043, -199.0110, -210.4978, -209.9159, -199.4197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-202.8010, -199.4716, -210.7259, -209.9135, -199.8155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-202.7990, -199.7156, -210.6702, -209.7952, -200.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-202.5590, -200.3583, -210.1915, -209.1513, -200.0224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-202.3408, -200.8496, -209.7865, -208.5672, -199.9580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-201.9259, -201.5900, -208.9829, -207.5179, -199.7618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-201.3724, -202.4168, -207.9291, -206.1685, -199.3853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-201.0091, -202.8851, -207.1758, -205.2451, -199.0672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-200.8273, -202.9688, -206.7751, -204.8163, -198.8821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-200.9895, -202.2241, -207.1029, -205.3342, -198.8319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-201.2748, -201.3050, -207.6712, -206.0986, -198.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-201.6520, -200.2248, -208.4239, -207.1388, -199.0373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-202.0734, -199.0663, -209.2205, -208.2626, -199.2088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-202.4052, -198.3323, -209.7612, -208.9975, -199.3916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-202.5469, -198.0360, -209.8978, -209.2928, -199.4132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-202.6850, -198.0255, -210.0834, -209.4729, -199.5495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-202.7092, -198.2395, -210.0429, -209.3455, -199.6350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-202.6592, -198.7076, -209.9280, -209.0306, -199.7295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-202.4203, -199.2223, -209.4414, -208.3668, -199.5477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-202.1852, -199.9317, -208.8876, -207.6586, -199.4060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-202.0438, -200.5310, -208.5119, -207.1932, -199.3277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-201.8419, -201.1768, -207.9882, -206.5799, -199.1725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-201.6615, -201.6691, -207.5390, -206.0609, -199.0007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-201.5233, -202.0962, -207.2406, -205.6708, -198.8818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-201.4651, -202.3415, -207.0827, -205.4772, -198.8079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-201.4755, -202.1378, -207.0901, -205.5965, -198.7168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-201.5721, -201.6949, -207.2221, -206.0020, -198.6275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-201.8080, -201.0555, -207.7238, -206.8786, -198.6747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-201.9442, -200.4100, -208.0032, -207.5199, -198.5674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-202.0584, -199.7587, -208.2917, -208.1368, -198.4440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-202.0298, -199.4939, -208.3299, -208.3729, -198.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-201.9878, -199.3748, -208.2901, -208.5120, -198.1809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-201.8044, -199.3145, -207.9457, -208.3737, -197.9224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-201.5149, -199.3218, -207.4685, -208.0258, -197.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-201.1794, -199.3066, -206.8484, -207.5200, -197.1466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-201.0362, -199.3044, -206.6542, -207.4337, -197.0231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-201.1130, -199.0883, -206.9580, -207.8586, -197.1516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-201.1729, -199.1314, -207.2362, -208.1567, -197.3593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-201.1214, -199.3124, -207.2419, -208.1197, -197.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-201.2502, -199.3546, -207.5574, -208.4678, -197.6993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-201.2184, -199.6909, -207.6001, -208.3935, -197.9085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-201.2503, -199.8824, -207.7099, -208.4208, -198.1424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-201.3476, -200.0049, -207.9599, -208.5883, -198.4663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-201.3960, -200.0206, -208.0709, -208.6576, -198.6757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0725, device='cuda:0', dtype=torch.float64)
tensor([-201.3803, -199.9857, -207.9916, -208.5156, -198.7982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-201.3079, -200.1088, -207.7188, -208.1837, -198.8940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-201.2942, -200.1757, -207.5451, -207.9885, -199.0138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-201.1967, -200.3793, -207.2374, -207.5839, -199.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-201.2376, -200.3511, -207.1855, -207.5286, -199.2799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2134, device='cuda:0', dtype=torch.float64)
tensor([-201.2694, -200.4361, -207.0698, -207.4773, -199.3793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-201.3374, -200.6390, -207.0640, -207.4302, -199.5974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-201.2624, -200.6018, -206.8817, -207.2155, -199.5740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-201.2906, -200.2987, -206.9877, -207.3058, -199.5257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-201.2742, -200.2033, -207.0177, -207.3010, -199.4716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-201.4172, -200.0781, -207.3367, -207.6213, -199.6515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-201.6629, -200.1241, -207.8130, -208.1006, -200.0178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-202.0040, -199.9981, -208.5690, -208.8095, -200.4368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-202.1305, -200.0477, -208.9652, -209.0949, -200.6386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-202.2190, -200.1708, -209.3421, -209.3326, -200.8046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-202.1593, -200.2587, -209.4798, -209.3238, -200.7610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-201.9901, -200.1504, -209.3932, -209.1683, -200.5724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-201.7957, -200.1466, -209.2143, -208.8997, -200.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-201.6561, -200.0980, -209.1022, -208.7388, -200.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-201.4733, -200.0680, -209.0194, -208.5563, -200.2067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-201.1764, -200.1230, -208.6248, -208.0737, -199.9268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.8719, -200.1503, -208.1684, -207.5938, -199.6027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-200.5148, -200.0877, -207.5977, -206.9966, -199.1595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-200.3691, -199.7468, -207.4070, -206.9196, -198.8981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-200.2962, -199.6113, -207.2983, -206.9566, -198.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-200.3444, -199.3343, -207.4432, -207.2729, -198.7937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-200.4630, -199.0640, -207.7845, -207.7164, -198.8905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-200.6243, -198.9467, -208.1995, -208.1613, -199.1076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2814, device='cuda:0', dtype=torch.float64)
tensor([-200.8516, -198.8543, -208.8542, -208.8105, -199.4281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-200.9551, -198.9540, -209.2508, -209.1605, -199.6593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-200.8464, -199.1733, -209.1887, -209.0494, -199.6612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-200.5816, -199.5917, -208.7049, -208.5466, -199.4887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-200.3931, -199.9397, -208.3443, -208.1428, -199.4191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-200.1877, -200.4158, -207.8449, -207.6388, -199.3438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-200.0788, -200.6878, -207.5386, -207.3741, -199.2508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-199.9771, -200.9176, -207.2163, -207.0866, -199.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-199.8922, -200.8059, -206.9080, -206.8809, -198.7947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-199.8160, -200.6003, -206.6549, -206.6988, -198.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-199.8925, -200.2149, -206.6932, -206.8786, -198.3198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-199.9289, -199.8529, -206.5982, -206.9541, -198.1576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-200.0420, -199.3309, -206.6862, -207.2763, -198.1177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-200.3485, -198.6238, -207.0367, -207.9955, -198.2519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.6384, -197.9761, -207.3420, -208.5925, -198.3712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-200.8200, -197.8052, -207.3974, -208.8234, -198.4957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-200.7830, -197.9107, -207.0913, -208.5180, -198.4967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3641, device='cuda:0', dtype=torch.float64)
tensor([-200.7054, -197.9513, -206.8501, -208.2835, -198.4100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-200.5716, -198.1019, -206.5616, -207.9660, -198.3642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-200.3131, -198.3977, -206.0956, -207.3512, -198.2093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-200.2163, -198.5539, -205.9528, -207.0974, -198.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-200.1083, -198.8648, -205.7976, -206.7791, -198.3234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-199.9697, -199.2660, -205.6203, -206.4544, -198.3903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-199.9861, -199.5801, -205.6955, -206.4414, -198.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-199.9619, -199.8125, -205.7298, -206.3892, -198.7039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-199.9832, -200.0789, -205.8822, -206.4550, -198.9202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-200.0943, -200.2942, -206.1245, -206.6781, -199.2045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-200.1707, -200.5428, -206.3478, -206.8758, -199.5103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-200.1200, -200.5678, -206.4107, -206.9094, -199.5955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-200.0191, -200.2956, -206.3631, -206.8731, -199.4757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-199.9209, -200.0294, -206.2802, -206.8194, -199.3296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-199.6655, -200.0369, -205.9253, -206.3776, -199.1131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-199.3612, -200.1975, -205.4809, -205.7580, -198.8384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-199.1497, -200.3645, -205.1833, -205.2863, -198.7065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-198.9440, -200.4886, -204.8798, -204.8254, -198.5299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-198.8083, -200.5296, -204.6353, -204.5039, -198.3819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-198.8979, -200.4910, -204.7688, -204.6783, -198.4535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-199.0606, -200.3981, -205.0641, -205.0965, -198.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-199.4287, -199.9316, -205.7493, -206.0438, -198.9980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-199.8671, -199.6283, -206.5037, -207.0280, -199.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-199.9606, -199.9077, -206.6473, -207.1855, -199.7736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-200.1175, -200.0471, -206.8726, -207.4713, -200.0604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-200.3422, -200.4540, -207.1004, -207.7759, -200.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-200.6327, -200.8220, -207.3783, -208.1779, -201.0219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-200.9074, -201.0765, -207.6475, -208.5708, -201.4011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-200.8828, -201.4120, -207.4039, -208.3540, -201.4543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-200.6939, -201.8692, -206.8880, -207.8065, -201.3575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-200.4652, -202.1651, -206.2096, -207.1927, -201.1187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-200.2334, -202.1976, -205.4810, -206.5564, -200.7912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-200.1297, -201.9212, -205.0276, -206.2204, -200.5287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-200.2047, -201.3241, -204.9179, -206.2943, -200.3496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.3541, -200.5434, -205.0088, -206.5721, -200.2154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.7091, -199.7551, -205.5294, -207.3014, -200.3803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.9542, -199.2015, -205.9013, -207.7482, -200.4401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-201.3123, -198.7266, -206.4701, -208.4256, -200.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-201.6890, -198.3929, -207.1041, -209.1440, -200.8458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-202.0161, -198.2711, -207.6211, -209.7048, -201.0472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-202.2025, -198.4646, -207.9116, -209.9475, -201.1959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-202.0947, -199.0521, -207.6371, -209.5324, -201.1467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-201.9583, -199.6872, -207.3497, -209.0742, -201.1268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-201.6232, -200.6896, -206.7162, -208.1035, -201.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-201.2676, -201.5915, -206.0152, -207.0457, -200.8866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.9708, -201.9435, -205.3650, -206.2165, -200.5986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-200.7071, -201.9624, -204.7576, -205.5085, -200.1932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-200.5980, -201.6433, -204.5291, -205.2569, -199.8928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-200.7116, -201.0899, -204.7495, -205.5651, -199.8542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-200.9812, -200.2378, -205.3845, -206.3445, -199.9172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-201.2148, -199.7412, -206.0308, -206.9946, -200.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-201.4543, -199.4973, -206.6371, -207.5811, -200.2338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-201.6082, -199.0779, -207.0490, -207.9943, -200.2357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-201.6852, -198.8681, -207.2297, -208.1783, -200.2407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-201.7709, -198.9484, -207.3322, -208.2784, -200.3049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-201.6436, -199.2924, -206.9745, -207.8751, -200.2540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.9868, device='cuda:0', dtype=torch.float64)
tensor([-201.3395, -199.8449, -206.5957, -207.2579, -200.1383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-201.0920, -200.4640, -206.2913, -206.6768, -200.0966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0971, device='cuda:0', dtype=torch.float64)
tensor([-200.6651, -200.9465, -205.6230, -205.6697, -199.7915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-200.6187, -200.7994, -205.7042, -205.6308, -199.6860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-200.8539, -200.1874, -206.3700, -206.4045, -199.7989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-201.2615, -199.4385, -207.4188, -207.5853, -200.0774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-201.7621, -198.6825, -208.5118, -208.8569, -200.4119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-202.1268, -198.0135, -209.2822, -209.7605, -200.6128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-202.0752, -197.7273, -209.3371, -209.7918, -200.5490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-201.8306, -197.8061, -209.0553, -209.3625, -200.3698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-201.4645, -198.3478, -208.4880, -208.5017, -200.1766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-201.1016, -199.0249, -207.8637, -207.6206, -200.0187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-200.7388, -199.9322, -207.1656, -206.6380, -199.8849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-200.3805, -200.7911, -206.3746, -205.6129, -199.7155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-200.1355, -201.3356, -205.8782, -204.9491, -199.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-200.3227, -201.0043, -206.1996, -205.4437, -199.7063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-200.5466, -200.3764, -206.6191, -206.0958, -199.7265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-200.7144, -200.0088, -206.8520, -206.5308, -199.7359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-201.0011, -199.3581, -207.4746, -207.3761, -199.8779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-201.4379, -198.3798, -208.4187, -208.5976, -200.0999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-201.7587, -197.5574, -209.0724, -209.4442, -200.2121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-201.6477, -197.4790, -208.8188, -209.1943, -200.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-201.3259, -197.7935, -208.2388, -208.4190, -199.7129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-200.9815, -198.3576, -207.5162, -207.4874, -199.3878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-200.7221, -198.7519, -206.9748, -206.7726, -199.1044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-200.5062, -199.0085, -206.4194, -206.1381, -198.8190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-200.5208, -199.1651, -206.3102, -206.0175, -198.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-200.7023, -199.1694, -206.4994, -206.3345, -198.9971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-200.9349, -199.1721, -206.8700, -206.7801, -199.2315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-201.2417, -199.5651, -207.2842, -207.1908, -199.6569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-201.6044, -199.7589, -207.8708, -207.8248, -200.0940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-202.0446, -199.8824, -208.6272, -208.6285, -200.5766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-202.5660, -199.8180, -209.4883, -209.6163, -201.1081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-202.7730, -199.7295, -209.7055, -210.0459, -201.2732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-202.5131, -199.4619, -209.1686, -209.7120, -200.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-201.9092, -199.1296, -207.9882, -208.7086, -200.1516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-201.4563, -198.8153, -207.0277, -207.9459, -199.5802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-200.9287, -198.8430, -205.9262, -206.8967, -199.0261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-200.4630, -198.7188, -204.9754, -205.9713, -198.4670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-200.1231, -198.7351, -204.2918, -205.2848, -198.0630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-200.0098, -198.7561, -204.0416, -205.0913, -197.9376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-200.2979, -198.5276, -204.5901, -205.8643, -198.2717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0644, device='cuda:0', dtype=torch.float64)
tensor([-200.6163, -198.4294, -205.0819, -206.5539, -198.6701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.9482, -198.5775, -205.5958, -207.2159, -199.1404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-201.3423, -198.7819, -206.2085, -207.9651, -199.6652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-201.6016, -199.2578, -206.6315, -208.3884, -200.1215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-201.8961, -199.7597, -207.1462, -208.8522, -200.6216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-202.0322, -200.2736, -207.3397, -208.9615, -200.9400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-201.9315, -200.9910, -207.0867, -208.5108, -201.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-201.6436, -201.6641, -206.4612, -207.6975, -200.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-201.3447, -202.1307, -205.8317, -206.9147, -200.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-201.1328, -202.2711, -205.3254, -206.3756, -200.6072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-201.0501, -202.0883, -205.1169, -206.2220, -200.4518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-201.1575, -201.5057, -205.2591, -206.5938, -200.4254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-201.3047, -200.6687, -205.5647, -207.1565, -200.3721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-201.5202, -199.5852, -206.0830, -207.9392, -200.2964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-201.6871, -198.8900, -206.4533, -208.4936, -200.2611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-201.8934, -198.3710, -206.8945, -209.0769, -200.3187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-202.0605, -198.0013, -207.3053, -209.5911, -200.4035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-201.9288, -197.8960, -207.1952, -209.4536, -200.2586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-201.5943, -198.1553, -206.7415, -208.8403, -199.9797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-201.1301, -198.6907, -206.0201, -207.8605, -199.6174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-200.4900, -199.5558, -204.9460, -206.3730, -199.1589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.8998, -200.5702, -203.9293, -204.8525, -198.8401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.4433, -201.6954, -203.1315, -203.5096, -198.6930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-199.2986, -202.3917, -202.9007, -202.9898, -198.8241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-199.5033, -202.1545, -203.5045, -203.6853, -199.1147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-199.8208, -201.7634, -204.2808, -204.6241, -199.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.2503, -201.1613, -205.2978, -205.8384, -199.9725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-200.7237, -200.4369, -206.3858, -207.1385, -200.3875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-201.3071, -199.8383, -207.5796, -208.5121, -200.8745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-201.7751, -199.3593, -208.4547, -209.5536, -201.1857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-202.0868, -198.9680, -209.0138, -210.2593, -201.3201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-202.1281, -198.8357, -209.0938, -210.3708, -201.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-201.9570, -198.9804, -208.7019, -209.9366, -200.9957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-201.6250, -199.2682, -208.0899, -209.1792, -200.5992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-201.1217, -199.6556, -207.1143, -208.0089, -200.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-200.5398, -200.2424, -205.9506, -206.5711, -199.4294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.0467, -200.5954, -204.9466, -205.3408, -198.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-199.7027, -200.6854, -204.2980, -204.5450, -198.3923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-199.4892, -200.4844, -203.9470, -204.1558, -198.0556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-199.5585, -199.8908, -204.3382, -204.6524, -198.0225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-199.7764, -199.0103, -205.0251, -205.5269, -198.0538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-200.2071, -198.1473, -206.0891, -206.8100, -198.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-200.5841, -197.5309, -206.9577, -207.8116, -198.6783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-200.7250, -197.2982, -207.3538, -208.2047, -198.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7198, device='cuda:0', dtype=torch.float64)
tensor([-200.6002, -197.4945, -207.3214, -208.0756, -198.8848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-200.5609, -197.6439, -207.3698, -208.1279, -198.9799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-200.4067, -198.0420, -207.2361, -207.8984, -199.0565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-200.1702, -198.4697, -206.9072, -207.4802, -198.9923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-199.8014, -199.2276, -206.3467, -206.6922, -198.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-199.7422, -199.6860, -206.2781, -206.5297, -198.9736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-199.8730, -200.1775, -206.4753, -206.7251, -199.2877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-200.0820, -200.8466, -206.7461, -206.9526, -199.7254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-200.1670, -201.4960, -206.7500, -206.9488, -199.9965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-200.3745, -201.8822, -206.9284, -207.2117, -200.3237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-200.5571, -202.0422, -207.0705, -207.4718, -200.5413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.4655, -202.1845, -206.7370, -207.1762, -200.4846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-200.2387, -202.2974, -206.1395, -206.6099, -200.2147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-199.7506, -202.1821, -205.0086, -205.4528, -199.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-199.3481, -201.8167, -204.0533, -204.4933, -198.7794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-198.9747, -201.5042, -203.1582, -203.5183, -198.1253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-198.8252, -201.1829, -202.7524, -203.0848, -197.7489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-198.8651, -200.7672, -202.8260, -203.2104, -197.6164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-198.9718, -200.2097, -203.0246, -203.5435, -197.5136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-199.1055, -199.6351, -203.2975, -203.9972, -197.4827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-199.4353, -198.9258, -204.0061, -204.9968, -197.6667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.9733, -198.0425, -205.0161, -206.3955, -198.0003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-200.4044, -197.4078, -205.7139, -207.3729, -198.2385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-200.7891, -196.9365, -206.2529, -208.1440, -198.4719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-200.9349, -196.9814, -206.4031, -208.3334, -198.6337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.9857, -197.1173, -206.3685, -208.2815, -198.7123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-200.9738, -197.5285, -206.1430, -207.9726, -198.8004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-201.0518, -197.7510, -206.0520, -207.9090, -198.9225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-201.1019, -197.9781, -205.8938, -207.7825, -198.9887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-200.9621, -198.3884, -205.3836, -207.2207, -198.8853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-200.9990, -198.4874, -205.2467, -207.1166, -198.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-200.9423, -198.7165, -204.8559, -206.7385, -198.7723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-200.9510, -198.9778, -204.7151, -206.5924, -198.8497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-200.9764, -199.0004, -204.5795, -206.5497, -198.8603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-201.0058, -199.1409, -204.4568, -206.5163, -198.9359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-201.0186, -199.2270, -204.2948, -206.4446, -198.9512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-201.0829, -199.2011, -204.2809, -206.5828, -199.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-201.2105, -199.1344, -204.4673, -206.9470, -199.3109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-201.3230, -198.8146, -204.5519, -207.2574, -199.3940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-201.4559, -198.8492, -204.6676, -207.5585, -199.6546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-201.6934, -198.8707, -205.0474, -208.1087, -200.0602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-201.9051, -199.0293, -205.4051, -208.5465, -200.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-202.0410, -199.0614, -205.6401, -208.8996, -200.6640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-202.0316, -199.3120, -205.6169, -208.9250, -200.7595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-201.8417, -199.7591, -205.3167, -208.5593, -200.7175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-201.5377, -200.3701, -204.7904, -207.8831, -200.6283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-201.0767, -201.2134, -203.9690, -206.7509, -200.4008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-200.7459, -202.0248, -203.3760, -205.8667, -200.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-200.4790, -202.5668, -202.9288, -205.2026, -200.3310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-200.3209, -202.5778, -202.7244, -204.9073, -200.2249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-200.3347, -202.2521, -202.8404, -205.1208, -200.2120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-200.5199, -201.5333, -203.2764, -205.7796, -200.2258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-200.6364, -200.7944, -203.6311, -206.2521, -200.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-200.6203, -200.2000, -203.7342, -206.4178, -199.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-200.4698, -199.7746, -203.6047, -206.3127, -199.7839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-200.2462, -199.6564, -203.3400, -205.9205, -199.6196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-200.1229, -199.5119, -203.2170, -205.7303, -199.5232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-200.0232, -199.4464, -203.1670, -205.5826, -199.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-200.0987, -199.3280, -203.4299, -205.8078, -199.5986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-200.1984, -199.4026, -203.8012, -206.0827, -199.8252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-200.2077, -199.6194, -203.9374, -206.0975, -199.9596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-200.1161, -199.9723, -203.8946, -205.8870, -200.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.0874, -200.3041, -203.9563, -205.7779, -200.1744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-200.0702, -200.5718, -204.1295, -205.6665, -200.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-200.1519, -200.7681, -204.4838, -205.7793, -200.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-200.2589, -201.0185, -204.8734, -205.9721, -200.9168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-200.2701, -201.2142, -204.9893, -205.9548, -201.0865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-200.3157, -201.0992, -205.0708, -206.0504, -201.1265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.4287, -200.8858, -205.2158, -206.2883, -201.1370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-200.3366, -201.0513, -204.8463, -205.9463, -201.0166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-200.2307, -201.2533, -204.3772, -205.4943, -200.8728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-200.2506, -201.1635, -204.1391, -205.4296, -200.7488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-200.0970, -201.2833, -203.5805, -204.9305, -200.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-200.0397, -201.1148, -203.2871, -204.7947, -200.3208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.0536, -200.7395, -203.1228, -204.8624, -200.1297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-200.2264, -200.0021, -203.3219, -205.3777, -199.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-200.2695, -199.5665, -203.2574, -205.5223, -199.7517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-200.3494, -199.0620, -203.2422, -205.7658, -199.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-200.4026, -198.5549, -203.2117, -205.9584, -199.2578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-200.4145, -198.1703, -203.0438, -205.9932, -198.9414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-200.4090, -197.9729, -202.8705, -205.9129, -198.6646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-200.4484, -197.7414, -202.8324, -205.9573, -198.4719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-200.4781, -197.6364, -202.7743, -205.9584, -198.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-200.4455, -197.8292, -202.5273, -205.6975, -198.2301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-200.3438, -198.2551, -202.2484, -205.2863, -198.2030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-200.3194, -198.7970, -202.1893, -205.0661, -198.3269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-200.4027, -199.3724, -202.3883, -205.1107, -198.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-200.5127, -200.2455, -202.5649, -205.0870, -199.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.7414, -201.1959, -203.0043, -205.3240, -199.7616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-201.0474, -201.8960, -203.6347, -205.8288, -200.4211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-201.3833, -202.0859, -204.4537, -206.5537, -200.9242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-201.6352, -201.6606, -205.1798, -207.2936, -201.1135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-201.7641, -201.1231, -205.6359, -207.8194, -201.1677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-201.7804, -200.2656, -205.8121, -208.1853, -200.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-201.4854, -199.3708, -205.3634, -207.8962, -200.2912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-200.9702, -199.0635, -204.4134, -206.9212, -199.5188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.4970, -198.7123, -203.5199, -206.0201, -198.7641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-200.1988, -198.2707, -202.9756, -205.4918, -198.1485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-199.9845, -198.0181, -202.6156, -205.0853, -197.7320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-199.9567, -197.7830, -202.6483, -205.1114, -197.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-199.9243, -197.5528, -202.7154, -205.1245, -197.5129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-199.9273, -197.3937, -202.8157, -205.1939, -197.5220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.8239, -197.4963, -202.6760, -204.9204, -197.4832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.7855, -197.6448, -202.6614, -204.7738, -197.5511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-199.6033, -197.9795, -202.3241, -204.2434, -197.5007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-199.5596, -198.3168, -202.2496, -204.0051, -197.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-199.5978, -198.5938, -202.3855, -204.0471, -197.9253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.8136, -198.9535, -202.9562, -204.4963, -198.5154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-200.2180, -199.0045, -203.9789, -205.4621, -199.2071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-200.9549, -198.6395, -205.5674, -207.1231, -200.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-201.5756, -198.4472, -206.8890, -208.4137, -200.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-201.9891, -198.4105, -207.7671, -209.2198, -201.3214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-201.9882, -198.6840, -207.7930, -209.0976, -201.4777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-201.7637, -199.0506, -207.3022, -208.4920, -201.3585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-201.1885, -199.8462, -206.0773, -207.0425, -200.9907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-200.6432, -200.6658, -204.8632, -205.5921, -200.6243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-200.0413, -201.5357, -203.4629, -203.8846, -200.1422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-199.4281, -202.3787, -202.0219, -202.1229, -199.6460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-199.0648, -202.6058, -201.1355, -201.0392, -199.1879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-198.9144, -202.2694, -200.8464, -200.7455, -198.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-199.0554, -201.4586, -201.2581, -201.3766, -198.7523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-199.6122, -199.9648, -202.5522, -203.2095, -198.9233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-200.3639, -198.4745, -204.0839, -205.3134, -199.2878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-201.1320, -197.4169, -205.5275, -207.2151, -199.8127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-201.7993, -196.7717, -206.7266, -208.7279, -200.3244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-202.2612, -196.5280, -207.4831, -209.6737, -200.7297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-202.1976, -196.8349, -207.2780, -209.4723, -200.6863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-201.8657, -197.4752, -206.5744, -208.7051, -200.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-201.3976, -198.3436, -205.5933, -207.5574, -200.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-200.8423, -199.2300, -204.4267, -206.1442, -199.6803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-200.3393, -199.9908, -203.2967, -204.7823, -199.2298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.8875, -200.7433, -202.2565, -203.4658, -198.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-199.5715, -201.3941, -201.5059, -202.4495, -198.6118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.4548, -201.7747, -201.1635, -201.9595, -198.5217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-199.5403, -201.9041, -201.3766, -202.1506, -198.6698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-199.8016, -201.6608, -202.1118, -202.9525, -198.9638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-200.1211, -201.2857, -202.9876, -203.9271, -199.2917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-200.5134, -200.7005, -203.9684, -205.0595, -199.6035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-200.8088, -200.0658, -204.7663, -205.9895, -199.8177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-201.0734, -199.5199, -205.4838, -206.8008, -200.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-201.3054, -198.9567, -206.0790, -207.4994, -200.1421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-201.2691, -198.7854, -206.1414, -207.5344, -200.1021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-201.1707, -198.6170, -206.0598, -207.3970, -199.9928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-200.9439, -198.6689, -205.6930, -206.9313, -199.7921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-200.6694, -199.0069, -205.1526, -206.2267, -199.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.4109, -199.4417, -204.6513, -205.5334, -199.4597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-200.1652, -199.9532, -204.1443, -204.8439, -199.3781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-199.9063, -200.2999, -203.5988, -204.2249, -199.2527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.6321, -200.7056, -203.0321, -203.5843, -199.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-199.4769, -201.1092, -202.6333, -203.1937, -199.1258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-199.4574, -201.3366, -202.5188, -203.2039, -199.2397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.5909, -201.3554, -202.7170, -203.6201, -199.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.8406, -201.0701, -203.2060, -204.4169, -199.7296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-200.1188, -200.5443, -203.7096, -205.2471, -199.9025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-200.4549, -200.0176, -204.2510, -206.1624, -200.1167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-200.7715, -199.5046, -204.7836, -207.0001, -200.3142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-201.0364, -199.1937, -205.2512, -207.6570, -200.5552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-201.1097, -198.8560, -205.3878, -207.9163, -200.5424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-200.9558, -198.8280, -205.0857, -207.6502, -200.3904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-200.7909, -198.9232, -204.7263, -207.2874, -200.2451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-200.6037, -199.1320, -204.2271, -206.7966, -200.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-200.4038, -199.4532, -203.6870, -206.2103, -199.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-200.0872, -200.0017, -202.8130, -205.2396, -199.6920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.8134, -200.4709, -202.0256, -204.3605, -199.4519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-199.6593, -200.5980, -201.5460, -203.8486, -199.2229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-199.5598, -200.6808, -201.1635, -203.4612, -198.9902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.6785, -200.5137, -201.3308, -203.7266, -198.9823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-199.9886, -200.1009, -202.0003, -204.5739, -199.1462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-200.4464, -199.4133, -202.9434, -205.7525, -199.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-200.7611, -198.7733, -203.6275, -206.5625, -199.3915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-201.0606, -198.2577, -204.2187, -207.3193, -199.4515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-201.3571, -197.7152, -204.8034, -208.0659, -199.4880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-201.5064, -197.3765, -205.1136, -208.4737, -199.4761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-201.3690, -197.3754, -204.8937, -208.2331, -199.3067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-201.1554, -197.5411, -204.5246, -207.7888, -199.1440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-200.8450, -197.9033, -203.9117, -207.0466, -198.9141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-200.6027, -198.0822, -203.4468, -206.4711, -198.6839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-200.4791, -198.2233, -203.2640, -206.2153, -198.6353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-200.3076, -198.5358, -203.0047, -205.8381, -198.6088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-200.1913, -198.9223, -202.8658, -205.5528, -198.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-200.1483, -199.2592, -202.9093, -205.4670, -198.8547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-200.2537, -199.5433, -203.2965, -205.7526, -199.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-200.1878, -200.1137, -203.2437, -205.5344, -199.5566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-200.1038, -200.6266, -203.0851, -205.2229, -199.7828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-200.1012, -200.7590, -203.1135, -205.2044, -199.9375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-200.1491, -200.7542, -203.2988, -205.3837, -200.1146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-200.2648, -200.4418, -203.6153, -205.7827, -200.2385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-200.3535, -200.0620, -203.9017, -206.1410, -200.3039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-200.4081, -199.6048, -204.1077, -206.4213, -200.2850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-200.2798, -199.4048, -203.9698, -206.2240, -200.1531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-200.1706, -199.2965, -203.8564, -206.0722, -200.0621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-200.1076, -199.2520, -203.8411, -205.9827, -200.0298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-200.3166, -198.8379, -204.3649, -206.5375, -200.1502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-200.4187, -198.5653, -204.6101, -206.7528, -200.1138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-200.3990, -198.3773, -204.5961, -206.6927, -199.9363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-200.2185, -198.5250, -204.1772, -206.1596, -199.6874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-200.0506, -198.8147, -203.7444, -205.6122, -199.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-199.9686, -198.9808, -203.4725, -205.2658, -199.3170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-200.1363, -198.8490, -203.7338, -205.5722, -199.3134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-200.3938, -198.5936, -204.1952, -206.0952, -199.3629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-200.6193, -198.3842, -204.5469, -206.4988, -199.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-200.8200, -198.2573, -204.9057, -206.8606, -199.4011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-200.8345, -198.1691, -204.8752, -206.7795, -199.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-200.9280, -198.0124, -205.0373, -206.8736, -199.1785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-200.9123, -198.1254, -204.9841, -206.7038, -199.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-200.7968, -198.2906, -204.7484, -206.3267, -199.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-200.6110, -198.3082, -204.3614, -205.8418, -198.8033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-200.4474, -198.3791, -203.9795, -205.3848, -198.6214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-200.3081, -198.5953, -203.6641, -204.9637, -198.5677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-200.2208, -198.5491, -203.4253, -204.6917, -198.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-200.1816, -198.3860, -203.3235, -204.5968, -198.3338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-200.0993, -198.3394, -203.1106, -204.3922, -198.2588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-200.0972, -198.3497, -203.1369, -204.4035, -198.3600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.1645, -198.4197, -203.2981, -204.5571, -198.5817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-200.2138, -198.4167, -203.3865, -204.7024, -198.7243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-200.3495, -198.3897, -203.6725, -205.0645, -198.9707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-200.3358, -198.7448, -203.5555, -204.9501, -199.1685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-200.4271, -198.9287, -203.6551, -205.1028, -199.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-200.5890, -198.9740, -203.9911, -205.5143, -199.7924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-200.7635, -198.9941, -204.4057, -205.9896, -200.1700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.8317, -199.1798, -204.5500, -206.1140, -200.4627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-200.7928, -199.4624, -204.4351, -205.9592, -200.6560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-200.6585, -199.6196, -204.1257, -205.6456, -200.6922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-200.3621, -199.9052, -203.4630, -204.9479, -200.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-200.0741, -200.2552, -202.8192, -204.2663, -200.3697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-200.0257, -200.3557, -202.7169, -204.1596, -200.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-200.0726, -200.1884, -202.8430, -204.3767, -200.3904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-200.1530, -199.7786, -203.0801, -204.7592, -200.3746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-200.2558, -199.2906, -203.4013, -205.2353, -200.3530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-200.2683, -199.0003, -203.4370, -205.4166, -200.2673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-200.2755, -198.6809, -203.5076, -205.5899, -200.2099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-200.2980, -198.3439, -203.4659, -205.7333, -200.0858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-200.3922, -197.9842, -203.5655, -206.0369, -200.0300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-200.6077, -197.6722, -203.8700, -206.5750, -200.1068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-200.7483, -197.6037, -204.0743, -206.8875, -200.1772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-200.6870, -197.8635, -203.7978, -206.6654, -200.0889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-200.7092, -198.0765, -203.7242, -206.6448, -200.0991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-200.8272, -198.4048, -203.8461, -206.7946, -200.2521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.7963, -198.9301, -203.6384, -206.5556, -200.2814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-200.6302, -199.4221, -203.1785, -206.0314, -200.1714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-200.5259, -199.5927, -202.8921, -205.7411, -200.0004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-200.3701, -199.7408, -202.4966, -205.3580, -199.7970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-200.2041, -199.8479, -202.0704, -205.0043, -199.5899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-200.1133, -199.5842, -201.8730, -204.9482, -199.3342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.9133, -199.3511, -201.4846, -204.5968, -198.9386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.7592, -198.9524, -201.1745, -204.3432, -198.4943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.7505, -198.6993, -201.2418, -204.4326, -198.3781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-199.8410, -198.3427, -201.5839, -204.8083, -198.4257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-199.9840, -197.8922, -202.0526, -205.3204, -198.4805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-200.2006, -197.3564, -202.6530, -206.0235, -198.5961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-200.4924, -196.8158, -203.4110, -206.9059, -198.8284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-200.6161, -196.6379, -203.7903, -207.2811, -199.0007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-200.7240, -196.6611, -204.0481, -207.5186, -199.1643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-200.8354, -196.7333, -204.3958, -207.7979, -199.4021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-200.8154, -197.0698, -204.4323, -207.7502, -199.5432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-200.6628, -197.7047, -204.1582, -207.3405, -199.6640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-200.4111, -198.3126, -203.7344, -206.7410, -199.6787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-200.1091, -198.9904, -203.1707, -205.9907, -199.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-199.8478, -199.8564, -202.6146, -205.2353, -199.7016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.6132, -200.6579, -202.1351, -204.5710, -199.8129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.5313, -201.2097, -202.0006, -204.3295, -200.0340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-199.4475, -201.5486, -201.9337, -204.1685, -200.2259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-199.4941, -201.6832, -202.0857, -204.3332, -200.4726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.5718, -201.5054, -202.4341, -204.6994, -200.6733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-199.6842, -200.9765, -202.9539, -205.2880, -200.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.6066, -200.6184, -203.0695, -205.3869, -200.7905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-199.5055, -200.2931, -203.0217, -205.3801, -200.6454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-199.4301, -199.8961, -202.9803, -205.4036, -200.4513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-199.3355, -199.6346, -202.8893, -205.3449, -200.3111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-199.1652, -199.4479, -202.6393, -205.0801, -200.0810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.0816, -199.2003, -202.6067, -205.0424, -199.9374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-198.9829, -199.0552, -202.4997, -204.8891, -199.8211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-198.9597, -198.9380, -202.6033, -204.9547, -199.8294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-199.0078, -198.7660, -202.7593, -205.0888, -199.8454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-198.9370, -198.6860, -202.6687, -204.8955, -199.7093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-198.8278, -198.7295, -202.4561, -204.5909, -199.5789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.8126, -198.6555, -202.4134, -204.5374, -199.5379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-198.7303, -198.8169, -202.1702, -204.2733, -199.4984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.7900, -198.8905, -202.2575, -204.4177, -199.6468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-198.8836, -199.0035, -202.4177, -204.5868, -199.8045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-199.0482, -199.1253, -202.6824, -204.8874, -200.0534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.1154, -199.3872, -202.7712, -204.9697, -200.2208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.2078, -199.7380, -202.8561, -205.0227, -200.3875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.3991, -199.7538, -203.2021, -205.3805, -200.5328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-199.7297, -199.4013, -203.9029, -206.1266, -200.7000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-199.8595, -199.1075, -204.1745, -206.3909, -200.6786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-199.8748, -198.7787, -204.1913, -206.4131, -200.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.8128, -198.6178, -204.0445, -206.2068, -200.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.7323, -198.5101, -203.8546, -205.9716, -199.9897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.6252, -198.6670, -203.6025, -205.6096, -199.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-199.5483, -198.7803, -203.3369, -205.3058, -199.6577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.4492, -198.9270, -202.9774, -204.9770, -199.4999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.2988, -198.9273, -202.5291, -204.5836, -199.2613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-199.1391, -199.0984, -202.1162, -204.1460, -199.1013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.8725, -199.3414, -201.4548, -203.4267, -198.8039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-198.7574, -199.3645, -201.1259, -203.1292, -198.6368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-198.8816, -199.3293, -201.3352, -203.4513, -198.7819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-199.0885, -199.1543, -201.7508, -203.9715, -198.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-199.3934, -198.5227, -202.4255, -204.8299, -199.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-199.6516, -198.0213, -202.9859, -205.5613, -199.1966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-199.8845, -197.6285, -203.3868, -206.1419, -199.2404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-200.0427, -197.5367, -203.5829, -206.4389, -199.3086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-200.0238, -197.7249, -203.4123, -206.2712, -199.2743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.8570, -198.1558, -202.9706, -205.7364, -199.1968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.7706, -198.5403, -202.7226, -205.4043, -199.1962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-199.6860, -198.7259, -202.4687, -205.1173, -199.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-199.7531, -198.8268, -202.5357, -205.1622, -199.2120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.8033, -198.9831, -202.6521, -205.2366, -199.3597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-200.0039, -199.0302, -203.1478, -205.6714, -199.6567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1995, device='cuda:0', dtype=torch.float64)
tensor([-200.2517, -199.0310, -203.7641, -206.2506, -200.0497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-200.1744, -199.2930, -203.5397, -205.9828, -200.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-200.1527, -199.4200, -203.3635, -205.8159, -200.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-200.1813, -199.3167, -203.3298, -205.8223, -200.0013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-200.0759, -199.3678, -202.9988, -205.4967, -199.8683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-199.8660, -199.3555, -202.4056, -204.8885, -199.5332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.6279, -199.2446, -201.7579, -204.2252, -199.1095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.3977, -199.1915, -201.0892, -203.5026, -198.6923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.2753, -198.9495, -200.7747, -203.1889, -198.3910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-199.1962, -198.8189, -200.6666, -203.0601, -198.3011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.0763, -198.7495, -200.4744, -202.7859, -198.1916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-199.1305, -198.4888, -200.7315, -203.0192, -198.2799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-199.1760, -198.3115, -201.0487, -203.2386, -198.4275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.2416, -198.1572, -201.4326, -203.5296, -198.6090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.4119, -197.8534, -201.9149, -204.0200, -198.7573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.5942, -197.5956, -202.3906, -204.4624, -198.9201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.7886, -197.5079, -202.9072, -204.9111, -199.1847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-199.9230, -197.4870, -203.2861, -205.2427, -199.4118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-200.0280, -197.6172, -203.5869, -205.4276, -199.6381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.9500, -198.0719, -203.4238, -205.0751, -199.7101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.8487, -198.5790, -203.1799, -204.6552, -199.7688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-199.6439, -199.2286, -202.6396, -203.8773, -199.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.4626, -199.7885, -202.1472, -203.2232, -199.5609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-199.4896, -200.0521, -202.2212, -203.2483, -199.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-199.5255, -200.0792, -202.3487, -203.4209, -199.6967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-199.6406, -200.1158, -202.6832, -203.8073, -199.8963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.7685, -200.1745, -202.9513, -204.1244, -200.0633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.9082, -200.0722, -203.2791, -204.5443, -200.2072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-200.0225, -200.0462, -203.5498, -204.8858, -200.3483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-200.1108, -199.9959, -203.7819, -205.2071, -200.4826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-200.1293, -199.7084, -203.9774, -205.4970, -200.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-200.0965, -199.5306, -204.0446, -205.6375, -200.4360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.0727, -199.2807, -204.0235, -205.7191, -200.3469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.9603, -199.0606, -203.7833, -205.5761, -200.1451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-199.8103, -198.9495, -203.4757, -205.3216, -199.9618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-199.8173, -198.6511, -203.4314, -205.4144, -199.8333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.7378, -198.4630, -203.1745, -205.2247, -199.6083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-199.6632, -198.4041, -202.9571, -205.0534, -199.4326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.3984, -198.6167, -202.3179, -204.3041, -199.0813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-199.2117, -198.8421, -201.9535, -203.7826, -198.8870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.1173, -198.9537, -201.8244, -203.5487, -198.7874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.2535, -198.6441, -202.2006, -203.9743, -198.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.3690, -198.3991, -202.4969, -204.3088, -198.8477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-199.3536, -198.3502, -202.5538, -204.2991, -198.8025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.2763, -198.4113, -202.4331, -204.1169, -198.7419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-199.1432, -198.4567, -202.1612, -203.7988, -198.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-199.1797, -198.2054, -202.2292, -203.9578, -198.5734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-199.2179, -198.0008, -202.2776, -204.0985, -198.5098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.2707, -197.9678, -202.3436, -204.1705, -198.5331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.2594, -198.1534, -202.1300, -203.9586, -198.4993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-199.3260, -198.3117, -202.0973, -203.9510, -198.5955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-199.4848, -198.4260, -202.3348, -204.2188, -198.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-199.7194, -198.6116, -202.8635, -204.6725, -199.2710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-199.8854, -198.8546, -203.2444, -204.9425, -199.6091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-200.1275, -199.0777, -203.8126, -205.4442, -200.0750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-200.2966, -199.0450, -204.2011, -205.8540, -200.3481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-200.3699, -198.9080, -204.3913, -206.1067, -200.4784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-200.3414, -198.9606, -204.2758, -206.0440, -200.4995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-200.2906, -199.0259, -204.0796, -205.9131, -200.5087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-200.0498, -199.0344, -203.4629, -205.3776, -200.2014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-199.7735, -199.2976, -202.7475, -204.6787, -199.9707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.4850, -199.6050, -202.0287, -203.9361, -199.7483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-199.3675, -199.8116, -201.6959, -203.5760, -199.6736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.3503, -200.0115, -201.6051, -203.4687, -199.7636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-199.3640, -200.0403, -201.5735, -203.5010, -199.7897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-199.4948, -199.9426, -201.8934, -203.8702, -199.9588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-199.5100, -199.8404, -202.0458, -204.0537, -200.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-199.4800, -199.7498, -202.0712, -204.0849, -200.0638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-199.5671, -199.5231, -202.3469, -204.4309, -200.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-199.6317, -199.3110, -202.5464, -204.6745, -200.0850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.5643, -199.1857, -202.3236, -204.5266, -199.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.5336, -198.9896, -202.2268, -204.4947, -199.6395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.6074, -198.7265, -202.3893, -204.7445, -199.5844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-199.7848, -198.4114, -202.8487, -205.1972, -199.6216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-199.9132, -198.3180, -203.0928, -205.4268, -199.6338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.9330, -198.3781, -203.0383, -205.3366, -199.5596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.9422, -198.3306, -202.9710, -205.2865, -199.4453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-199.9581, -198.2484, -202.9712, -205.2773, -199.3803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-199.7479, -198.3015, -202.4718, -204.7353, -199.0832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-199.6047, -198.3096, -202.1068, -204.3464, -198.8431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.4909, -198.4622, -201.7732, -203.9730, -198.7104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-199.3457, -198.5296, -201.3322, -203.5385, -198.4915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-199.1931, -198.6850, -200.8554, -203.0759, -198.3174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-199.1901, -198.5499, -200.8641, -203.1411, -198.2904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-199.3226, -198.3784, -201.1518, -203.5097, -198.3876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.6178, -197.9826, -201.9386, -204.4417, -198.6774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-199.8754, -197.8433, -202.6092, -205.1749, -199.0242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-200.0746, -197.9323, -203.1733, -205.7398, -199.4366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-200.1910, -198.0946, -203.5019, -206.0306, -199.6993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-200.3184, -198.3218, -203.9022, -206.3280, -200.0428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-200.2409, -198.7251, -203.8324, -206.0927, -200.2003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.9734, -199.2676, -203.2947, -205.3359, -200.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-199.5993, -199.5731, -202.4781, -204.3836, -199.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-199.3042, -200.0418, -201.8715, -203.5624, -199.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-199.0796, -200.3983, -201.4160, -202.9770, -199.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.9590, -200.5136, -201.2326, -202.7283, -199.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.9539, -200.7180, -201.3457, -202.7714, -200.0420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-198.9970, -200.8695, -201.6255, -202.9502, -200.3261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-199.0919, -200.8071, -202.0266, -203.3411, -200.5838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-199.1691, -200.5056, -202.3833, -203.7805, -200.7198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-199.3816, -200.0494, -203.0877, -204.5929, -200.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-199.5311, -199.5757, -203.5961, -205.1822, -201.0982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.5915, -199.1893, -203.8222, -205.4862, -201.0684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.6116, -198.7949, -203.9076, -205.6706, -200.9361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-199.5128, -198.5071, -203.6363, -205.5172, -200.6251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-199.3400, -198.3641, -203.1815, -205.1674, -200.2656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.0949, -198.3749, -202.5391, -204.5973, -199.8487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-198.8508, -198.5787, -201.9533, -204.0227, -199.5633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-198.6692, -198.7186, -201.4642, -203.6091, -199.3272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-198.4705, -198.7748, -200.9739, -203.1756, -199.0318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-198.2719, -198.8697, -200.4373, -202.6977, -198.7515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-198.3729, -198.8696, -200.5891, -202.9546, -198.8403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-198.4562, -198.9285, -200.6521, -203.1253, -198.9246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-198.5314, -199.1285, -200.7318, -203.2527, -199.0819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.7161, -199.2671, -201.1230, -203.6841, -199.3913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-198.9453, -199.2751, -201.5954, -204.2061, -199.6409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.1787, -199.4413, -202.0223, -204.6556, -199.9666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-199.3900, -199.3347, -202.4634, -205.1637, -200.1367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-199.5998, -199.3583, -202.8677, -205.5896, -200.3303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-199.6534, -199.4001, -202.9670, -205.7285, -200.3695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.5707, -199.5366, -202.8263, -205.5915, -200.3350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-199.3251, -199.5620, -202.3060, -205.1207, -200.0481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-198.9793, -199.5505, -201.5912, -204.4015, -199.5937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.5734, -199.5456, -200.7544, -203.5322, -199.0849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.3053, -199.7552, -200.2052, -202.8619, -198.8704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.1379, -200.0680, -199.9521, -202.4285, -198.8901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-198.0723, -200.2004, -199.8752, -202.2478, -198.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-198.1869, -200.1685, -200.3019, -202.6092, -199.1888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-198.3731, -200.1198, -200.9081, -203.0940, -199.5446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-198.4989, -199.9895, -201.3326, -203.4707, -199.7773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-198.5727, -199.8081, -201.6666, -203.7238, -199.9309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-198.7110, -199.5084, -202.0482, -204.0723, -200.0047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-198.9401, -199.1287, -202.5961, -204.6428, -200.1322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.2497, -198.9284, -203.2885, -205.3190, -200.4162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-199.3841, -198.8646, -203.6242, -205.5964, -200.5192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-199.3721, -198.9846, -203.5819, -205.4451, -200.4430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.1191, -199.3625, -202.9188, -204.6382, -200.0768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-198.9031, -199.5615, -202.3386, -203.9544, -199.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-198.6207, -199.7014, -201.5683, -203.0906, -199.2076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-198.4479, -199.7718, -201.0499, -202.4995, -198.8396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-198.3281, -199.8116, -200.6086, -201.9900, -198.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-198.2859, -199.6672, -200.3165, -201.7652, -198.1985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-198.4160, -199.2632, -200.5331, -202.0981, -198.0642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.6619, -198.6385, -201.0614, -202.7684, -197.9627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-198.8453, -198.2057, -201.4439, -203.2948, -197.9023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-199.0897, -197.9583, -201.9155, -203.8800, -197.9829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-199.5013, -197.4431, -202.8358, -205.0002, -198.2105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.9303, -196.9042, -203.8340, -206.1836, -198.4580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-200.3280, -196.5371, -204.7457, -207.2189, -198.7847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-200.5244, -196.3782, -205.1287, -207.7056, -198.9178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-200.4678, -196.3822, -204.9298, -207.5698, -198.7579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-200.2609, -196.4707, -204.3138, -207.0266, -198.3899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-199.9488, -196.7999, -203.4389, -206.1252, -198.0013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-199.5449, -197.1421, -202.3542, -204.9700, -197.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-199.1625, -197.4031, -201.3945, -203.9014, -197.1261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-198.7748, -197.6480, -200.4058, -202.8306, -196.6902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-198.5300, -197.9158, -199.8523, -202.2294, -196.5568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.5578, -197.8483, -200.0419, -202.5284, -196.7161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-198.6438, -197.7296, -200.4573, -203.0566, -196.9854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-198.8341, -197.5346, -201.2078, -203.9138, -197.4066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.0340, -197.5213, -201.9118, -204.6527, -197.8889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-199.2537, -197.5332, -202.5311, -205.3425, -198.3608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.4286, -197.6968, -203.0768, -205.9323, -198.8941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-199.5986, -197.8556, -203.5963, -206.4666, -199.3941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.8243, -197.9679, -204.1363, -207.0958, -199.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-200.0053, -198.1859, -204.4484, -207.5070, -200.3097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-199.9956, -198.5630, -204.3024, -207.3820, -200.5037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.9607, -198.8295, -204.0853, -207.2199, -200.6146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.9505, -199.1356, -203.9294, -207.0877, -200.7600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.8154, -199.5282, -203.4938, -206.6426, -200.7649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-199.6044, -199.8043, -202.9986, -206.0997, -200.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-199.2818, -199.9278, -202.3466, -205.3677, -200.3528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.9843, -199.9957, -201.7806, -204.6930, -200.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-198.7108, -199.9552, -201.2813, -204.0874, -199.7307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-198.4356, -199.9714, -200.7704, -203.4730, -199.4295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-198.2142, -200.1366, -200.4033, -202.9840, -199.2677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-198.1976, -200.2164, -200.4920, -203.0297, -199.3313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.2891, -200.0335, -200.9051, -203.4273, -199.4364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-198.4299, -199.7361, -201.4003, -203.9893, -199.5454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.7182, -199.2347, -202.2185, -204.9600, -199.7524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.0654, -198.7454, -203.1213, -206.0177, -200.0251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-199.3820, -198.3918, -203.7708, -206.8234, -200.1822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-199.6576, -198.2484, -204.2643, -207.4424, -200.3361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-199.7735, -198.2411, -204.4442, -207.6298, -200.3686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.7701, -198.2824, -204.4037, -207.5501, -200.3333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-199.6532, -198.3276, -204.0599, -207.1857, -200.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.5035, -198.4670, -203.5648, -206.6547, -199.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.3602, -198.4683, -203.0720, -206.1755, -199.7418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-199.2268, -198.4890, -202.5770, -205.7445, -199.5751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-199.0390, -198.4889, -201.9829, -205.2320, -199.3302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-198.8896, -198.2966, -201.6088, -204.9482, -199.1102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-198.6249, -198.3051, -201.0014, -204.3141, -198.8270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.3747, -198.3608, -200.4462, -203.7481, -198.5893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-198.2317, -198.4074, -200.2100, -203.4956, -198.5142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-198.1871, -198.2890, -200.1327, -203.4652, -198.4442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0806, device='cuda:0', dtype=torch.float64)
tensor([-198.2371, -198.0984, -200.2983, -203.7232, -198.4565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-198.4155, -197.7923, -200.8080, -204.3774, -198.6528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-198.6445, -197.5520, -201.3815, -205.0915, -198.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.8551, -197.4450, -201.9575, -205.7725, -199.2310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-199.0162, -197.4978, -202.3709, -206.2358, -199.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-199.0746, -197.7990, -202.4772, -206.3067, -199.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-198.9941, -198.2560, -202.1939, -205.9548, -199.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-198.6995, -199.0004, -201.3796, -204.9609, -199.6747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-198.4694, -199.7526, -200.6756, -204.0505, -199.6114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.2434, -200.3720, -199.9665, -203.1599, -199.4954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-198.0938, -200.7243, -199.4543, -202.5521, -199.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.0677, -200.7461, -199.3431, -202.3859, -199.2950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-198.1106, -200.6839, -199.3900, -202.4345, -199.2669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.1775, -200.4673, -199.4643, -202.5810, -199.1819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-198.2962, -200.2075, -199.8053, -202.9782, -199.2309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.3535, -199.9350, -199.9250, -203.2074, -199.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-198.4892, -199.5630, -200.3260, -203.6792, -199.1998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-198.6337, -199.1369, -200.6841, -204.1455, -199.2095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-198.7822, -198.6994, -201.0491, -204.6290, -199.2205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.0383, -198.0618, -201.6021, -205.3701, -199.2507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.3803, -197.5554, -202.1946, -206.1791, -199.3982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.5638, -197.2043, -202.3673, -206.5632, -199.3916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-199.6838, -196.8245, -202.4243, -206.8151, -199.2617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.8336, -196.5046, -202.5355, -207.0879, -199.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.8776, -196.2422, -202.2495, -206.9993, -198.8232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-199.6784, -196.2449, -201.4165, -206.2259, -198.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-199.3136, -196.4578, -200.1783, -204.9117, -197.6047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-199.0200, -196.6654, -199.1385, -203.7588, -197.0711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.7712, -196.7854, -198.2158, -202.7673, -196.5986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.6464, -196.8605, -197.5822, -202.1012, -196.2791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.7078, -196.9349, -197.5097, -202.0765, -196.3229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-198.8837, -196.9634, -197.9554, -202.5465, -196.6323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.1660, -196.9069, -198.7701, -203.3930, -197.0944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-199.5262, -196.7952, -199.8489, -204.4843, -197.6741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-200.0358, -196.7747, -201.3293, -205.9306, -198.4913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-200.4992, -196.7301, -202.7352, -207.1972, -199.2039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-200.8288, -196.6862, -203.8246, -208.1203, -199.7157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-201.0085, -196.4461, -204.5950, -208.7326, -199.9538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-201.0541, -196.4102, -205.1128, -209.0280, -200.1323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-200.6433, -196.7724, -204.5406, -208.1747, -199.9532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-200.1924, -197.2983, -203.7910, -207.1160, -199.7760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.7167, -197.8776, -202.8270, -205.8318, -199.4912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.3555, -198.3183, -202.0968, -204.8330, -199.2682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.9866, -198.6872, -201.2539, -203.7396, -198.9653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.7267, -198.9585, -200.6363, -202.9136, -198.7580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-198.4743, -199.1497, -200.1210, -202.2327, -198.5922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-198.2919, -199.2334, -199.7882, -201.8330, -198.4883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.1159, -199.3372, -199.4121, -201.3796, -198.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-198.1634, -199.0204, -199.7683, -201.8595, -198.4050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.3716, -198.4468, -200.4832, -202.8481, -198.5668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.5579, -197.9556, -201.0850, -203.7513, -198.7400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-198.8367, -197.4229, -201.9475, -204.9144, -199.0583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.0684, -197.1282, -202.5808, -205.7909, -199.3499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-199.3926, -196.9078, -203.3864, -206.8210, -199.7602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-199.5448, -197.1138, -203.7321, -207.2366, -200.0891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-199.7072, -197.3831, -203.9702, -207.5549, -200.3758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-199.8461, -197.7932, -204.1933, -207.7993, -200.7262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-199.7787, -198.5265, -203.9169, -207.4481, -200.9316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.5949, -199.2691, -203.4219, -206.8617, -201.0572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.2921, -199.8405, -202.6982, -206.0395, -200.9480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-198.9072, -200.4923, -201.7035, -204.9197, -200.7101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-198.6303, -201.0003, -200.9613, -204.0938, -200.5420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-198.4241, -201.5638, -200.3611, -203.3864, -200.5033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-198.1720, -201.8981, -199.6940, -202.5793, -200.2763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-197.9664, -202.0032, -199.2627, -202.0255, -200.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-197.8945, -201.7947, -199.2007, -201.9511, -199.8946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-197.8569, -201.4522, -199.1641, -201.9456, -199.6608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-197.9788, -200.9546, -199.4309, -202.3468, -199.5207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-198.2013, -200.2506, -199.8834, -202.9977, -199.3789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.5061, -199.6167, -200.5122, -203.8060, -199.3698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-198.7291, -199.0126, -200.8997, -204.3356, -199.2248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-198.8268, -198.5374, -200.9753, -204.5214, -198.9731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-198.8521, -198.2272, -200.7811, -204.4343, -198.6579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.8914, -198.0174, -200.6730, -204.4189, -198.4523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-198.9769, -197.8299, -200.7001, -204.5024, -198.3010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-198.9290, -197.7884, -200.4650, -204.2715, -198.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.8751, -197.7874, -200.3049, -204.1257, -197.9139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-198.8355, -197.9248, -200.0888, -203.9086, -197.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.8566, -198.0258, -200.0803, -203.9305, -197.7634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.9123, -198.0386, -200.2291, -204.1146, -197.7818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.0774, -198.0674, -200.6778, -204.5720, -197.9882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.2262, -198.0185, -201.0841, -204.9786, -198.1471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.2539, -197.9957, -201.3027, -205.1771, -198.2439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-199.3361, -197.7441, -201.6835, -205.5667, -198.3436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-199.4488, -197.5219, -202.0386, -205.9239, -198.4357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-199.4346, -197.3617, -202.1443, -205.9857, -198.4083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-199.3429, -197.2426, -202.0897, -205.8450, -198.3334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-199.2634, -196.9868, -202.1362, -205.8251, -198.2718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-199.0894, -197.0568, -201.9670, -205.5167, -198.2474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-199.0132, -197.1327, -202.0448, -205.4559, -198.3418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-199.0237, -197.2596, -202.2343, -205.4941, -198.5002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-199.1454, -197.3400, -202.5959, -205.7395, -198.7310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-199.2698, -197.5335, -202.9471, -205.9184, -198.9919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.3145, -197.7101, -203.1043, -205.9298, -199.1371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-199.2380, -197.8224, -203.0086, -205.7475, -199.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.0363, -198.1619, -202.6017, -205.1945, -199.0963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.8954, -198.3581, -202.3703, -204.8951, -199.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-198.7403, -198.6559, -202.0736, -204.5132, -199.0715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-198.6066, -199.0191, -201.8216, -204.1756, -199.1476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-198.5534, -199.4313, -201.7543, -204.0245, -199.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-198.5118, -199.7623, -201.7834, -203.9838, -199.5567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-198.4161, -200.1712, -201.5782, -203.6903, -199.7007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-198.1944, -200.6892, -201.0317, -202.9980, -199.6959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-198.0272, -200.9991, -200.6800, -202.5512, -199.7121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-198.0188, -200.9234, -200.7675, -202.6547, -199.7780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.0514, -200.5433, -201.0282, -203.0058, -199.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-198.2018, -199.8727, -201.6806, -203.7924, -199.8667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-198.3639, -199.0152, -202.3677, -204.6949, -199.8966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-198.4700, -198.3612, -202.8024, -205.3097, -199.8960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-198.5445, -197.8244, -203.0998, -205.7606, -199.8569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-198.4156, -197.4902, -202.8696, -205.6058, -199.5787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.2824, -197.3147, -202.6581, -205.4113, -199.3806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-198.2628, -197.1191, -202.6716, -205.4488, -199.2832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.1411, -197.0625, -202.3214, -205.1476, -199.0539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.9955, -197.1074, -201.9023, -204.7771, -198.8158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-197.9259, -197.2721, -201.6556, -204.5764, -198.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-197.7602, -197.6406, -201.1461, -204.0473, -198.6707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-197.6536, -197.9871, -200.8187, -203.7295, -198.6908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-197.5764, -198.2541, -200.5260, -203.4919, -198.7021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.5125, -198.4461, -200.2731, -203.2919, -198.6772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-197.6595, -198.4482, -200.5810, -203.7077, -198.9056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-197.6963, -198.3641, -200.5334, -203.8273, -198.9080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-197.7953, -198.0276, -200.7217, -204.2002, -198.8919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-197.9740, -197.8586, -201.0781, -204.6772, -199.0446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-198.2223, -197.6896, -201.6579, -205.3334, -199.2821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-198.5905, -197.2810, -202.6152, -206.3779, -199.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.9623, -197.0474, -203.5587, -207.3162, -199.9965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.0882, -197.2511, -203.8635, -207.5315, -200.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.0014, -197.7458, -203.6339, -207.1712, -200.3100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.5176, -198.6281, -202.4423, -205.7897, -200.0538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-197.8990, -199.5761, -200.7762, -203.9609, -199.6192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.3851, -200.4104, -199.2123, -202.2579, -199.1876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-197.1338, -200.9529, -198.3376, -201.2856, -199.0040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-197.1075, -201.2705, -198.3734, -201.2151, -199.1987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.1175, -201.4071, -198.6338, -201.4135, -199.4299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-197.2378, -201.3708, -199.2982, -202.0070, -199.7976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-197.5097, -201.1133, -200.2109, -202.9462, -200.2023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-197.8854, -200.5241, -201.3294, -204.1566, -200.5440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.2448, -199.9504, -202.3192, -205.2368, -200.8209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-198.6678, -199.3892, -203.3916, -206.3841, -201.1408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.8952, -198.7890, -204.0117, -207.0717, -201.1633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-199.1341, -198.2801, -204.5326, -207.6760, -201.1968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-199.2009, -197.8662, -204.5847, -207.8117, -201.0153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.1841, -197.6146, -204.3190, -207.6431, -200.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-198.9300, -197.6540, -203.4222, -206.8068, -200.1772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.7447, -197.7136, -202.6752, -206.1140, -199.7366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.4890, -197.7844, -201.7534, -205.2327, -199.1981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-198.2097, -198.0757, -200.7251, -204.1761, -198.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-197.8108, -198.3873, -199.3208, -202.8219, -198.0710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.5484, -198.6982, -198.2683, -201.7903, -197.6214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-197.6067, -198.7639, -198.2790, -201.8022, -197.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-197.6906, -198.6531, -198.4828, -202.0667, -197.7103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-197.7195, -198.6530, -198.6174, -202.2026, -197.7956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-197.7651, -198.7096, -198.7449, -202.3551, -197.9351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-197.9541, -198.8863, -199.3285, -202.8663, -198.3685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-198.2495, -199.1942, -200.1272, -203.5374, -198.9579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-198.5724, -199.5007, -201.0321, -204.3153, -199.6010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.9359, -199.7084, -202.0098, -205.1649, -200.1780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.1989, -199.7997, -202.7236, -205.8208, -200.5834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-199.3525, -199.9759, -203.1589, -206.1902, -200.8835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-199.3893, -200.0968, -203.3087, -206.2934, -200.9946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.3515, -200.2421, -203.3341, -206.2195, -200.9934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.1677, -200.2649, -203.1219, -205.8921, -200.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.9597, -200.3526, -202.7218, -205.4077, -200.5729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.7817, -200.3756, -202.3699, -205.0137, -200.3794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.5362, -200.3905, -201.7874, -204.4188, -200.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-198.4325, -200.3815, -201.4617, -204.1101, -199.8768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.2510, -200.5711, -200.8474, -203.4851, -199.6499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.1436, -200.7017, -200.3634, -203.0186, -199.4817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.1850, -200.5175, -200.3436, -203.0727, -199.4226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-198.2164, -200.1407, -200.4381, -203.2669, -199.3453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.3443, -199.7334, -200.7855, -203.7345, -199.3962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-198.6461, -199.1449, -201.4921, -204.6392, -199.5746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-198.8745, -198.7615, -202.0059, -205.3175, -199.7462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.0168, -198.6196, -202.2584, -205.6785, -199.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.1850, -198.4346, -202.6650, -206.1744, -200.0968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-199.4032, -198.2596, -203.1691, -206.7615, -200.3389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-199.4150, -198.2626, -203.1989, -206.7947, -200.3760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-199.4134, -198.4229, -203.1817, -206.7610, -200.4323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.2884, -198.8190, -202.8155, -206.3710, -200.4271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-199.0241, -199.3956, -202.0410, -205.5036, -200.2629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.7913, -199.9382, -201.2997, -204.6955, -200.1203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-198.5673, -200.3036, -200.5728, -203.9231, -199.8890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.4289, -200.5318, -200.1160, -203.4502, -199.7420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-198.4178, -200.6711, -199.8771, -203.2544, -199.6805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.4921, -200.6112, -199.9207, -203.3691, -199.6821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-198.4731, -200.6647, -199.6771, -203.1762, -199.5879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.4258, -200.7104, -199.3941, -202.8884, -199.4495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-198.5990, -200.4385, -199.7175, -203.2717, -199.4605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.8338, -200.1288, -200.2864, -203.9003, -199.5803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-198.9727, -199.8598, -200.5111, -204.1602, -199.4866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.0600, -199.4756, -200.7407, -204.4226, -199.3433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-199.2115, -198.9111, -201.1443, -204.8780, -199.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-199.3037, -198.4464, -201.2996, -205.1025, -198.9684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-199.3216, -198.2518, -201.2222, -205.0560, -198.7784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.2912, -198.2897, -200.8779, -204.7322, -198.5826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-199.2315, -198.2895, -200.4127, -204.3624, -198.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-199.2024, -198.4809, -199.9534, -203.9564, -198.2269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.1444, -198.7950, -199.5327, -203.4756, -198.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.1004, -199.1151, -199.0649, -203.0250, -198.0990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.0492, -199.2719, -198.7212, -202.7251, -198.0405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-199.0651, -199.2141, -198.6885, -202.7830, -198.0578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-199.0138, -199.3699, -198.5676, -202.6660, -198.1156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.9701, -199.3308, -198.5904, -202.7173, -198.1336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.9472, -199.2935, -198.7553, -202.9293, -198.2423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.9926, -199.1568, -199.0710, -203.3454, -198.4092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.0920, -198.7735, -199.6309, -204.0696, -198.6008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.2836, -198.2884, -200.3968, -204.9980, -198.8337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.5619, -197.5782, -201.3541, -206.1311, -199.0469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.8104, -197.0599, -202.1640, -207.0183, -199.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-199.8924, -196.6974, -202.5571, -207.4525, -199.2591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-199.6929, -196.5630, -202.2719, -207.1622, -199.0180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-199.3615, -196.5743, -201.6298, -206.4981, -198.6698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-199.0426, -196.7059, -200.9843, -205.7977, -198.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-198.7080, -196.9549, -200.2620, -204.9910, -198.0782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-198.3354, -197.4359, -199.3814, -203.9238, -197.8112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-198.0002, -197.9687, -198.5005, -202.8109, -197.5492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.7513, -198.3564, -197.8916, -202.0200, -197.3563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-197.6291, -198.7176, -197.5940, -201.5823, -197.3186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.5996, -198.7895, -197.5628, -201.4916, -197.2968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-197.6487, -198.7253, -197.7385, -201.6539, -197.3044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-197.8517, -198.3990, -198.5278, -202.5156, -197.5211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.1338, -198.2149, -199.4213, -203.5006, -197.9042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-198.3751, -198.0889, -200.2547, -204.3478, -198.2576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-198.6726, -197.9261, -201.2150, -205.3638, -198.6938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-198.9778, -197.8212, -202.1111, -206.2788, -199.1499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.1812, -197.8604, -202.7201, -206.8632, -199.5226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-199.2352, -197.8475, -203.0041, -207.1273, -199.6748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.1771, -197.6079, -203.0396, -207.1286, -199.5684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-198.9981, -197.3919, -202.8133, -206.8455, -199.3386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-198.6601, -197.4521, -202.1308, -206.0704, -199.0052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-198.3282, -197.5959, -201.4383, -205.2524, -198.6806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.9510, -197.9471, -200.5759, -204.1811, -198.3472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.6687, -198.4433, -199.9264, -203.2530, -198.1908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-197.5209, -198.8362, -199.5444, -202.6393, -198.1460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.4056, -199.1874, -199.2296, -202.0986, -198.0933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.3999, -199.2640, -199.2054, -201.9761, -198.0752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-197.6521, -199.0804, -199.8880, -202.6714, -198.2877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-197.9552, -198.6178, -200.7783, -203.6319, -198.4832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-198.2206, -198.2207, -201.5831, -204.4979, -198.6836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.4729, -198.0115, -202.2613, -205.2605, -198.9495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-198.6256, -197.8551, -202.6756, -205.7297, -199.1061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.7491, -197.7724, -203.0805, -206.1062, -199.2647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.6902, -197.8699, -203.0601, -205.9677, -199.2864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-198.5135, -198.0713, -202.6793, -205.4771, -199.1727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-198.2106, -198.3616, -201.9194, -204.5932, -198.9137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-197.9997, -198.5651, -201.2182, -203.8735, -198.6731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-197.7926, -198.8413, -200.5253, -203.1766, -198.4945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.6225, -199.0558, -199.8917, -202.5755, -198.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.5513, -199.1049, -199.5915, -202.3194, -198.1754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.5330, -199.0194, -199.4588, -202.2998, -198.0846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-197.7024, -198.7414, -199.7812, -202.8015, -198.1497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-197.8723, -198.4091, -199.9345, -203.2197, -198.1109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-197.9317, -198.1502, -199.7734, -203.3387, -197.9313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.9633, -198.0032, -199.5473, -203.3849, -197.7803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-197.9887, -197.8061, -199.4637, -203.5116, -197.6614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.9517, -197.7571, -199.2880, -203.5134, -197.5870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-197.9193, -197.6787, -199.0835, -203.4919, -197.5046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.0230, -197.5060, -199.1991, -203.7967, -197.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.0214, -197.3982, -199.0790, -203.8205, -197.5299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-198.1595, -197.2127, -199.3668, -204.2717, -197.6862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-198.2017, -197.1481, -199.4491, -204.4682, -197.7863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-198.1842, -197.1877, -199.5185, -204.6041, -197.9145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-198.1735, -197.1402, -199.5691, -204.7066, -197.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.1696, -197.1778, -199.7489, -204.9108, -198.1833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-198.1320, -197.1410, -199.7488, -204.9660, -198.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-198.1912, -197.0836, -199.9610, -205.2466, -198.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.1513, -197.1501, -199.9259, -205.2339, -198.4516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-198.0325, -197.2834, -199.6913, -204.9752, -198.4014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.9367, -197.3277, -199.4524, -204.7503, -198.3090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-197.8769, -197.4622, -199.4014, -204.6201, -198.3481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.7079, -197.7007, -199.1081, -204.1764, -198.2750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.6418, -197.9616, -199.0902, -203.9887, -198.3732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-197.5784, -198.2469, -199.0825, -203.8249, -198.4898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-197.6800, -198.5153, -199.5025, -204.0632, -198.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.6825, -198.8294, -199.5916, -203.9855, -198.9586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.4940, -199.2551, -199.0246, -203.2712, -198.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-197.2970, -199.5312, -198.4990, -202.5736, -198.6452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-197.1966, -199.8936, -198.3303, -202.1937, -198.7109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-197.1256, -200.0268, -198.3200, -202.0043, -198.7640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-197.0973, -199.9112, -198.5150, -202.0306, -198.7939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-197.1898, -199.7937, -199.0195, -202.3802, -198.9675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-197.3467, -199.4779, -199.6504, -202.9211, -199.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-197.4468, -199.1691, -200.1173, -203.2873, -199.1805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-197.6599, -198.8198, -200.9100, -203.9913, -199.4108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-197.8995, -198.4721, -201.7265, -204.7340, -199.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-197.9748, -198.3822, -202.1008, -204.9772, -199.7758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.9642, -198.4690, -202.2175, -204.9659, -199.8861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-198.0652, -198.4777, -202.4862, -205.1698, -200.0373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-198.0731, -198.5370, -202.4428, -205.0555, -200.0466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-197.9676, -198.6030, -202.0691, -204.6126, -199.8700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.8595, -198.6968, -201.5770, -204.1009, -199.6463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-197.7326, -198.8631, -200.9651, -203.5186, -199.4274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-197.6037, -199.0015, -200.3507, -202.9514, -199.1916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-197.4000, -199.3802, -199.4541, -202.0707, -198.9519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-197.2095, -199.9285, -198.5767, -201.1866, -198.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-197.1106, -200.2324, -198.0998, -200.7349, -198.7503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.1652, -200.4074, -198.0566, -200.7594, -198.8383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-197.2661, -200.4200, -198.2182, -201.0195, -198.9460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-197.4131, -200.4549, -198.6431, -201.4925, -199.1838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.6750, -200.3107, -199.3899, -202.3016, -199.4896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-197.9478, -200.1156, -200.2158, -203.1859, -199.8058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-198.1352, -199.6962, -200.7556, -203.8530, -199.8357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.2954, -199.1666, -201.1566, -204.4835, -199.7854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.3251, -198.7394, -201.2298, -204.7494, -199.6173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-198.2346, -198.3609, -200.9549, -204.6454, -199.3016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-198.1594, -197.9931, -200.8485, -204.6445, -199.0670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-198.0959, -197.7294, -200.7234, -204.6210, -198.8945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-198.0703, -197.3514, -200.6943, -204.7057, -198.6987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-198.1033, -196.9866, -200.7138, -204.8246, -198.5520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-198.0520, -196.7531, -200.5923, -204.7399, -198.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-198.0335, -196.6763, -200.5333, -204.6695, -198.3112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.0209, -196.6678, -200.3714, -204.4820, -198.1903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-198.0082, -196.6609, -200.1640, -204.2387, -198.0450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-198.0415, -196.7833, -200.0960, -204.0468, -197.9855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-197.9836, -196.9501, -199.7763, -203.6254, -197.8294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.8833, -197.1316, -199.3360, -203.0828, -197.6223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-197.7801, -197.2840, -198.8354, -202.5406, -197.3856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-197.7154, -197.4225, -198.4384, -202.0715, -197.1755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-197.6579, -197.4651, -198.2106, -201.8026, -197.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-197.7039, -197.4590, -198.2386, -201.8288, -196.9955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.7496, -197.4717, -198.4246, -201.9972, -197.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-197.8256, -197.6201, -198.8000, -202.3055, -197.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-197.9322, -197.6752, -199.3178, -202.7797, -197.5273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.0953, -197.7453, -200.0348, -203.4453, -197.8835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.2545, -197.7265, -200.8613, -204.2145, -198.2688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.3996, -197.6709, -201.6364, -204.9442, -198.6164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-198.4545, -197.6979, -202.0477, -205.3027, -198.8332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.4722, -197.6182, -202.2618, -205.5050, -198.9013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.4930, -197.4900, -202.4194, -205.7056, -198.9403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.3784, -197.4688, -202.1802, -205.4795, -198.8395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.3034, -197.4588, -201.9785, -205.3166, -198.7657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.2244, -197.5041, -201.7741, -205.1239, -198.6907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.0973, -197.5337, -201.4585, -204.8442, -198.5732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.9507, -197.5573, -201.1040, -204.5243, -198.4312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-197.6922, -197.6371, -200.4467, -203.9053, -198.1832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-197.4681, -197.7909, -199.8613, -203.2623, -197.9548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.2602, -197.9930, -199.2385, -202.5318, -197.7255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.0779, -198.1566, -198.7285, -201.9439, -197.5815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-196.9568, -198.3270, -198.4305, -201.4970, -197.5348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-196.9674, -198.4354, -198.3885, -201.3357, -197.5854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-197.0458, -198.4557, -198.6249, -201.4551, -197.7247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.3162, -198.2731, -199.4295, -202.2481, -198.0608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-197.5619, -198.1645, -200.2261, -203.0149, -198.4286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-197.8747, -198.0355, -201.1425, -203.9519, -198.8555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.2389, -198.0063, -201.9550, -204.8442, -199.2958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-198.6858, -198.1018, -202.9015, -205.8096, -199.8346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-199.0145, -198.2576, -203.4746, -206.3446, -200.1558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.1218, -198.4501, -203.4909, -206.2767, -200.1719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-199.2610, -198.5411, -203.5351, -206.2850, -200.1734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-199.3130, -198.6289, -203.3549, -206.0735, -200.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.2011, -198.7071, -202.8204, -205.5363, -199.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.0631, -198.8850, -202.2081, -204.9074, -199.5245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.8018, -199.2618, -201.3688, -204.0174, -199.2645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.5559, -199.5387, -200.5027, -203.1461, -198.9546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.2541, -199.8399, -199.4858, -202.0891, -198.5920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-198.0914, -199.8910, -198.8419, -201.4919, -198.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-197.9954, -199.7264, -198.3988, -201.1902, -198.0265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-197.9148, -199.4981, -198.0355, -201.0232, -197.7444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-197.9645, -199.0676, -197.9325, -201.2828, -197.5223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-198.1869, -198.4627, -198.2654, -202.0509, -197.4376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.4709, -197.8857, -198.7443, -202.9572, -197.4508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-198.8328, -197.1507, -199.4602, -204.1447, -197.5335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.0153, -196.5599, -199.7958, -204.8360, -197.4782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-199.2571, -195.9283, -200.2930, -205.6848, -197.4836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.3208, -195.4047, -200.2367, -205.9188, -197.2352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-199.3204, -195.0337, -200.0924, -206.0131, -196.9987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-199.1526, -194.8579, -199.5879, -205.6871, -196.6636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.9126, -194.8142, -199.0250, -205.1813, -196.3189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-198.7422, -194.9203, -198.7699, -204.8551, -196.1785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-198.5343, -195.1102, -198.4409, -204.4192, -196.0465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-198.3618, -195.2699, -198.2041, -204.0529, -195.9455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-198.1274, -195.5072, -197.7641, -203.5401, -195.7918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.9762, -195.7987, -197.6100, -203.2182, -195.7973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-197.9431, -196.0634, -197.6086, -203.1037, -195.8678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-197.9300, -196.3159, -197.6842, -202.9882, -195.9402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-197.9478, -196.5041, -197.7046, -202.8392, -195.9581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-197.8756, -196.7741, -197.4791, -202.4361, -195.9105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.9682, -196.9845, -197.7425, -202.5540, -196.0818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.0570, -197.2588, -198.0288, -202.7007, -196.3146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.2166, -197.3412, -198.5425, -203.0919, -196.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-198.4465, -197.3106, -199.2977, -203.7760, -196.9296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.6581, -197.3625, -199.9564, -204.3344, -197.2480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-198.8354, -197.3896, -200.4755, -204.8195, -197.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-198.9494, -197.3784, -200.9116, -205.1958, -197.7014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-198.9235, -197.4215, -201.0047, -205.2435, -197.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-198.7943, -197.5770, -200.8247, -205.0061, -197.7234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.6359, -197.7658, -200.6086, -204.6599, -197.6867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.5450, -197.8319, -200.5428, -204.5004, -197.6717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-198.4417, -197.7196, -200.4744, -204.4138, -197.5811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-198.4053, -197.5950, -200.6612, -204.5722, -197.6081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-198.3907, -197.4666, -200.7666, -204.6665, -197.5855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.3432, -197.1701, -200.8508, -204.7617, -197.4620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-198.1319, -196.9308, -200.4407, -204.3812, -197.1261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.9800, -196.8173, -200.1524, -204.1262, -196.9138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-197.7657, -196.7825, -199.6587, -203.6975, -196.6653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.5004, -196.6939, -199.0967, -203.1607, -196.3399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.1894, -196.4572, -198.3269, -202.5364, -195.8372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-196.9156, -196.4289, -197.5984, -201.8697, -195.4528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-196.7499, -196.4634, -197.1241, -201.4043, -195.2165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.7611, -196.3403, -197.2055, -201.5064, -195.1791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-196.7407, -196.4976, -197.2095, -201.4963, -195.2798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-196.7520, -196.7446, -197.2594, -201.5276, -195.4493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-196.8017, -197.0563, -197.4370, -201.6647, -195.6996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.0303, -197.0361, -198.1605, -202.4403, -196.0620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-197.2476, -197.1359, -198.8629, -203.1538, -196.4881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-197.4873, -197.2222, -199.6180, -203.8868, -196.8960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-197.6912, -197.2736, -200.2950, -204.5275, -197.2477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.8857, -197.3867, -200.8442, -205.0471, -197.5736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.0400, -197.3718, -201.3972, -205.5659, -197.8272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.2174, -197.2128, -202.0039, -206.1660, -198.0678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.3503, -197.0616, -202.5097, -206.6888, -198.2734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.2162, -196.9253, -202.3609, -206.5731, -198.1573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.9139, -197.0763, -201.8328, -205.9602, -197.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-197.4749, -197.3308, -200.9475, -204.9893, -197.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.1768, -197.4791, -200.4223, -204.3926, -197.5071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.8867, -197.6556, -199.7838, -203.7153, -197.3053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.7275, -197.8411, -199.4119, -203.3295, -197.2661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-196.6131, -197.8028, -199.0621, -203.0399, -197.1319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-196.5252, -197.7913, -198.7309, -202.8104, -197.0255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-196.4872, -197.7735, -198.4886, -202.6364, -196.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.3274, -197.8955, -197.9092, -202.1139, -196.7629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-196.1513, -198.0986, -197.3081, -201.5182, -196.5770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-195.9956, -198.2170, -196.6517, -200.9136, -196.3135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-196.0431, -198.2439, -196.5795, -200.8576, -196.2740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.1913, -198.1873, -196.8412, -201.1182, -196.3482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-196.4409, -198.0182, -197.3590, -201.6534, -196.4812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-196.7334, -197.8703, -198.0782, -202.3799, -196.7413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-197.0525, -197.8111, -198.8032, -203.0978, -197.0277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-197.3250, -197.8654, -199.4043, -203.7023, -197.3173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-197.4471, -197.9014, -199.5598, -203.9444, -197.4076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-197.5162, -197.9284, -199.5779, -204.0475, -197.4094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-197.5622, -197.9325, -199.5532, -204.1088, -197.3890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-197.5271, -197.9810, -199.2846, -203.9645, -197.2872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-197.4279, -198.1131, -198.9980, -203.7230, -197.2258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1509, device='cuda:0', dtype=torch.float64)
tensor([-197.5341, -198.1086, -199.2797, -204.0636, -197.3996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-197.6268, -198.0243, -199.3576, -204.2498, -197.4273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-197.4448, -198.0363, -198.6643, -203.6939, -197.1241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-197.2740, -198.0313, -197.9877, -203.1612, -196.8189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.0844, -198.1313, -197.3029, -202.5657, -196.5741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.0089, -198.1004, -196.8776, -202.2619, -196.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.0188, -198.0825, -196.7134, -202.1734, -196.3589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.0053, -198.0009, -196.6079, -202.1469, -196.3257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.0090, -197.8484, -196.5779, -202.1819, -196.2705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-196.9445, -197.7416, -196.3754, -202.0573, -196.1574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-196.9666, -197.5689, -196.3922, -202.1200, -196.1063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-197.0149, -197.4171, -196.5412, -202.3167, -196.1401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-196.9990, -197.3473, -196.6190, -202.4476, -196.2135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-196.9627, -197.2098, -196.6495, -202.5406, -196.2471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-196.9095, -196.9242, -196.5831, -202.5910, -196.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-196.8952, -196.5991, -196.6468, -202.8124, -196.1424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-196.9914, -196.2178, -196.8840, -203.2354, -196.1578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-197.2490, -195.7905, -197.4526, -204.0121, -196.2979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.5536, -195.5336, -198.0378, -204.7542, -196.5401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-197.8394, -195.3382, -198.5587, -205.3952, -196.7762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.0125, -195.2836, -198.8077, -205.7108, -196.9089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-197.9649, -195.2754, -198.4481, -205.4422, -196.7496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-197.8674, -195.4264, -198.0053, -205.0983, -196.6503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.7274, -195.5900, -197.5247, -204.7132, -196.5535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-197.6609, -195.8706, -197.1148, -204.3878, -196.5451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-197.6092, -196.2118, -196.8117, -204.1422, -196.6191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.4658, -196.5438, -196.3182, -203.7114, -196.5830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.4991, -196.8409, -196.2459, -203.7042, -196.7522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-197.4950, -197.1976, -196.1225, -203.5885, -196.9170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.3755, -197.5791, -195.7513, -203.2070, -196.9573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-197.3717, -197.7261, -195.7187, -203.1419, -197.0365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-197.2608, -197.8375, -195.5408, -202.9149, -197.0127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-197.1709, -197.7060, -195.3686, -202.7179, -196.8525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-197.1681, -197.5546, -195.4933, -202.8301, -196.8514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.2151, -197.3962, -195.7628, -203.0772, -196.9549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.2208, -197.1522, -196.0424, -203.3709, -197.0236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-197.2348, -196.9588, -196.3336, -203.6240, -197.1122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-197.2198, -196.7461, -196.5514, -203.8762, -197.1694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.2096, -196.5108, -196.6659, -204.0889, -197.1791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-197.1621, -196.3581, -196.7432, -204.1948, -197.1988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.0934, -196.0988, -196.7723, -204.2836, -197.1428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-196.9865, -195.8466, -196.7075, -204.2896, -197.0318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-196.9202, -195.7970, -196.6260, -204.2624, -197.0190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-196.9034, -195.6509, -196.6059, -204.2873, -196.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.0108, -195.4059, -196.8844, -204.6041, -197.0189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-197.0730, -195.3573, -197.1195, -204.7416, -197.1279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-197.0708, -195.2984, -197.1600, -204.6746, -197.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.0499, -195.4449, -197.1443, -204.4496, -197.1237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-197.0825, -195.6310, -197.1111, -204.3052, -197.1631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-197.1395, -195.7621, -197.0254, -204.1636, -197.1430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.3303, -195.8257, -197.2443, -204.4105, -197.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.4366, -195.8678, -197.1734, -204.3957, -197.2023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-197.5792, -195.9382, -197.1898, -204.4150, -197.1961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-197.9189, -195.9729, -197.6894, -204.9018, -197.4217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.9789, -196.0703, -197.5877, -204.8368, -197.3959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-197.8506, -196.1351, -197.0436, -204.4156, -197.1286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.6129, -196.3501, -196.3518, -203.7792, -196.8937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-197.4367, -196.5355, -196.0347, -203.4312, -196.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-197.3712, -196.6786, -196.0613, -203.3394, -196.9080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-197.3121, -196.7978, -196.0865, -203.3279, -196.9802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-196.9936, -196.8476, -195.3072, -202.6679, -196.6073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.6823, -196.8881, -194.6675, -202.1122, -196.2854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-196.5435, -197.0641, -194.4260, -201.8888, -196.2580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-196.4572, -197.2854, -194.3185, -201.7840, -196.3357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-196.4721, -197.3857, -194.5176, -201.9937, -196.5210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-196.4539, -197.2943, -194.7333, -202.2685, -196.6153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.5270, -197.1661, -195.2348, -202.7667, -196.8450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.5321, -196.9555, -195.4497, -203.0851, -196.8781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.5607, -196.7409, -195.7566, -203.4282, -196.9530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-196.7043, -196.4222, -196.4702, -204.1087, -197.1728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-196.8936, -196.1891, -197.2589, -204.8093, -197.4721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.0338, -196.0399, -197.8926, -205.3822, -197.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-197.1569, -195.9271, -198.4395, -205.8289, -197.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.1725, -195.8379, -198.7641, -206.0281, -198.1026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-197.2893, -195.8787, -199.3039, -206.4168, -198.4066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-197.3616, -195.9065, -199.6860, -206.7112, -198.6163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.4223, -195.9044, -199.8722, -206.8607, -198.6876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-197.3582, -195.8471, -199.7238, -206.7593, -198.5442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.1466, -195.6941, -199.2628, -206.4400, -198.2011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1773, device='cuda:0', dtype=torch.float64)
tensor([-196.9010, -195.2774, -198.4743, -206.0018, -197.6222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-196.6597, -195.0558, -197.6827, -205.5263, -197.1579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.5050, -194.8272, -197.1260, -205.2081, -196.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-196.5241, -194.7203, -196.9348, -205.1783, -196.6393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-196.5458, -194.7443, -196.7930, -205.1037, -196.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-196.5714, -194.8930, -196.7541, -205.0210, -196.6636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.5151, -195.0378, -196.5367, -204.7477, -196.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-196.3838, -195.2694, -196.0994, -204.2445, -196.4574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.2011, -195.4604, -195.5053, -203.6406, -196.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-195.9464, -195.6484, -194.7792, -202.9120, -195.8705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.7425, -195.8145, -194.1746, -202.3309, -195.5985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-195.6592, -195.8288, -193.8783, -202.0622, -195.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.6188, -195.7115, -193.8198, -202.0256, -195.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.9449, -195.6925, -194.5798, -202.7011, -195.7770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-196.3513, -195.7175, -195.5106, -203.5434, -196.3621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1120, device='cuda:0', dtype=torch.float64)
tensor([-196.7914, -195.6967, -196.4546, -204.4045, -196.8866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.1310, -195.6533, -197.1223, -204.9768, -197.2206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.3849, -195.6326, -197.5858, -205.3287, -197.4448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.4446, -195.6578, -197.6433, -205.2875, -197.4463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-197.6106, -195.7862, -197.8964, -205.4529, -197.6269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-197.5906, -195.9972, -197.7827, -205.2401, -197.6308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-197.4313, -196.0659, -197.3607, -204.7663, -197.3750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-197.2602, -196.1624, -196.9038, -204.2541, -197.1268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-197.0616, -196.2691, -196.4142, -203.6500, -196.8228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.8611, -196.3360, -195.9058, -203.0381, -196.4831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-196.6818, -196.3699, -195.4913, -202.5080, -196.1643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.5078, -196.4493, -195.0755, -201.9865, -195.8744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.3419, -196.5789, -194.6123, -201.4424, -195.5910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.3828, -196.4821, -194.7482, -201.5609, -195.5457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-196.5812, -196.3255, -195.2397, -202.0330, -195.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.7378, -196.1069, -195.7275, -202.4898, -195.8038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-196.9470, -196.0169, -196.3158, -203.0269, -196.0400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.0368, -196.1567, -196.6468, -203.2767, -196.2683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-197.1800, -196.2435, -197.1275, -203.6590, -196.5450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-197.3974, -196.3595, -197.6294, -204.0735, -196.8595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-197.4388, -196.4606, -197.6521, -204.0535, -196.8838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-197.2462, -196.5374, -197.0768, -203.5400, -196.5899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-197.1033, -196.6548, -196.6406, -203.1551, -196.3826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.9782, -196.6169, -196.2804, -202.8334, -196.1452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-196.8475, -196.5032, -195.9397, -202.5548, -195.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-196.7091, -196.4453, -195.6249, -202.2739, -195.6717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.5606, -196.3262, -195.1672, -201.9278, -195.3506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.4532, -196.2514, -194.8224, -201.6690, -195.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-196.4857, -196.1729, -194.8764, -201.8119, -195.1200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-196.4776, -196.2174, -194.8226, -201.8020, -195.1091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-196.5495, -196.0850, -195.0862, -202.1140, -195.1921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-196.6766, -196.0633, -195.5328, -202.5952, -195.4475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-196.8538, -195.9207, -196.0335, -203.1734, -195.6549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-197.2223, -195.8042, -196.9241, -204.0992, -196.1105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-197.5067, -195.6894, -197.5812, -204.7926, -196.4080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-197.7453, -195.8064, -198.1074, -205.3150, -196.7764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-197.9052, -195.9547, -198.4348, -205.6519, -197.0512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-197.9232, -196.1487, -198.3262, -205.5849, -197.1206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.8243, -196.2913, -197.9371, -205.2871, -197.0139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.7460, -196.4009, -197.6175, -205.0411, -196.9288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.5067, -196.4540, -197.0164, -204.5068, -196.6405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-197.2621, -196.4913, -196.4177, -203.9340, -196.3316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7872, device='cuda:0', dtype=torch.float64)
tensor([-196.8647, -196.3485, -195.5909, -203.2024, -195.7299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-196.4708, -196.0816, -194.8465, -202.5317, -195.0886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-196.0576, -195.8909, -193.9922, -201.6739, -194.4116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.6770, -195.6728, -193.3191, -200.9289, -193.7746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-195.5370, -195.4673, -193.1556, -200.6742, -193.4744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-195.6191, -195.1335, -193.4626, -201.0023, -193.4684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-195.8272, -194.7558, -194.0137, -201.6222, -193.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.0754, -194.4912, -194.6847, -202.3023, -193.8864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-196.2383, -194.3653, -195.1630, -202.7481, -194.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-196.4304, -194.2253, -195.6514, -203.2738, -194.4066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-196.7658, -194.1410, -196.3285, -203.9823, -194.8137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0629, device='cuda:0', dtype=torch.float64)
tensor([-197.0387, -194.1933, -196.8903, -204.5829, -195.2444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-197.1073, -194.4502, -197.0821, -204.7350, -195.5338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.0511, -194.8699, -196.9807, -204.5835, -195.7321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-196.9178, -195.3335, -196.7637, -204.2686, -195.8797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-196.7684, -195.8042, -196.5120, -203.9766, -196.0184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-196.6956, -196.1666, -196.3710, -203.8317, -196.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-196.6538, -196.4386, -196.3181, -203.7686, -196.2736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-196.6612, -196.7278, -196.3496, -203.8110, -196.4724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-196.6430, -197.0411, -196.2923, -203.7462, -196.6214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-196.6013, -197.3600, -196.1988, -203.6460, -196.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-196.5686, -197.6186, -196.0987, -203.5475, -196.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-196.3689, -197.9565, -195.7096, -203.1584, -196.8469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-196.2345, -198.1156, -195.4343, -202.9211, -196.7869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-196.0220, -198.2594, -194.9961, -202.4962, -196.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.7612, -198.4032, -194.4561, -201.9531, -196.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-195.5821, -198.3900, -194.1717, -201.6221, -196.1261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-195.4701, -198.3895, -194.0206, -201.4405, -196.0389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.4450, -198.3848, -194.0224, -201.4160, -196.0443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.4365, -198.2393, -194.0418, -201.4576, -195.9696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-195.4194, -198.0484, -194.0119, -201.4955, -195.8337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.5906, -197.7577, -194.3479, -201.9688, -195.9035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.7428, -197.3952, -194.6602, -202.3697, -195.8860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.9437, -197.0213, -195.0423, -202.8280, -195.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.2422, -196.6015, -195.5803, -203.4702, -195.9807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-196.4713, -196.2464, -196.0151, -203.9657, -196.0407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-196.5749, -196.0161, -196.2418, -204.2113, -196.0507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-196.7490, -195.8428, -196.5753, -204.5559, -196.1827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-196.8114, -195.7107, -196.7068, -204.7052, -196.1990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-196.9440, -195.5115, -196.9716, -205.0314, -196.2549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-197.1462, -195.2958, -197.3369, -205.4566, -196.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-197.2996, -195.2241, -197.6577, -205.7486, -196.4957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.4772, -195.2621, -198.0034, -206.0352, -196.7290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-197.5275, -195.3572, -198.0481, -206.0315, -196.8001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-197.4554, -195.4985, -197.8113, -205.7922, -196.7599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.1648, -195.7461, -197.1468, -205.1471, -196.5146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.8002, -196.0447, -196.2859, -204.3065, -196.1765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-196.3759, -196.2984, -195.3468, -203.3511, -195.7600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-196.0237, -196.6739, -194.5635, -202.4865, -195.4751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([-196.1170, -196.9917, -194.5429, -202.4524, -195.6400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.3452, -197.1177, -194.8116, -202.7571, -195.8487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-196.5055, -197.2194, -194.9056, -202.8884, -195.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-196.6387, -197.3058, -194.9954, -203.0048, -196.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-196.7173, -197.3931, -195.0061, -203.0151, -196.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-196.6251, -197.5139, -194.7186, -202.7151, -195.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.4137, -197.5117, -194.2659, -202.2416, -195.6778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-196.2138, -197.6459, -193.7931, -201.6789, -195.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.9356, -197.7904, -193.2521, -201.0001, -195.1565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.6867, -197.9480, -192.8238, -200.4539, -194.9409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-195.5226, -197.9158, -192.6216, -200.2090, -194.7573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.4107, -197.7870, -192.5204, -200.1037, -194.5870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.3940, -197.6450, -192.6723, -200.3115, -194.5767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.6239, -197.4060, -193.2547, -201.0120, -194.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.0701, -197.0022, -194.1483, -202.0641, -195.1116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-196.5288, -196.6295, -195.0404, -203.0505, -195.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.7047, -196.3364, -195.3699, -203.4676, -195.4806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-196.8872, -196.0369, -195.7057, -203.8759, -195.5211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-197.0744, -195.7646, -196.0376, -204.2574, -195.5738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.1291, -195.6438, -196.1829, -204.4186, -195.5890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-197.2883, -195.4136, -196.5094, -204.7498, -195.6525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-197.3978, -195.1254, -196.7360, -204.9845, -195.6369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.5306, -194.9021, -196.9685, -205.2181, -195.6714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-197.5932, -194.6968, -197.0623, -205.3277, -195.6342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-197.4989, -194.5746, -196.8941, -205.1747, -195.4785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.4130, -194.4006, -196.6377, -204.9736, -195.2041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-197.3667, -194.2134, -196.4573, -204.8488, -194.9567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-197.1391, -194.0972, -195.9366, -204.3434, -194.5244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-196.8692, -193.9941, -195.3320, -203.7405, -194.0441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0846, device='cuda:0', dtype=torch.float64)
tensor([-196.4995, -193.9801, -194.5070, -202.8523, -193.4741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-196.1128, -194.0261, -193.6828, -201.9441, -192.9374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-195.8054, -194.1362, -193.0001, -201.1656, -192.5257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-195.5667, -194.3644, -192.4965, -200.4852, -192.3073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-195.4539, -194.4937, -192.2497, -200.0908, -192.1896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-195.4891, -194.5547, -192.2881, -200.0788, -192.2332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.6167, -194.5863, -192.5257, -200.2933, -192.3794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-195.8552, -194.6111, -192.9494, -200.7130, -192.6420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-196.2958, -194.6579, -193.7211, -201.5135, -193.1557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-196.7763, -194.7175, -194.6265, -202.3774, -193.7184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-196.9975, -194.8626, -195.1146, -202.7865, -194.0698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.1001, -195.0394, -195.3358, -202.9467, -194.3040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-197.0839, -195.2139, -195.2888, -202.8515, -194.3862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.9478, -195.1902, -195.0267, -202.5713, -194.2231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-196.7543, -195.1665, -194.7455, -202.3194, -194.0559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-196.5721, -195.1849, -194.4934, -202.0657, -193.9188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.3802, -195.2768, -194.1846, -201.7296, -193.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.1078, -195.2839, -193.7301, -201.2237, -193.5653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-195.7808, -195.4477, -193.1879, -200.5546, -193.3614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-195.6571, -195.5107, -193.1385, -200.3746, -193.3786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-195.5717, -195.5432, -193.2656, -200.3257, -193.4600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-195.6213, -195.5420, -193.6258, -200.5654, -193.6702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3949, device='cuda:0', dtype=torch.float64)
tensor([-195.6399, -195.3997, -193.9393, -200.7874, -193.7475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-195.6715, -195.2717, -194.3135, -201.0747, -193.8878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-195.7597, -195.1625, -194.7212, -201.4157, -194.0139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-195.7478, -195.0561, -194.9660, -201.6360, -194.0704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-195.4895, -195.0878, -194.7159, -201.3324, -193.9210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.1933, -195.1863, -194.3610, -200.9270, -193.7400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-194.8670, -195.3990, -193.9316, -200.4173, -193.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.8054, -195.5446, -193.9529, -200.4088, -193.6880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.8794, -195.7082, -194.1918, -200.6074, -193.9210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-195.0644, -195.8999, -194.5152, -200.9674, -194.2290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-195.3180, -196.1465, -195.0034, -201.4475, -194.6474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-195.5372, -196.3647, -195.4257, -201.8549, -195.0184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-195.6053, -196.5645, -195.5389, -201.9643, -195.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.5975, -196.7692, -195.5197, -201.9118, -195.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-195.6543, -196.8445, -195.5758, -202.0128, -195.3769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-195.7818, -196.8025, -195.7328, -202.2614, -195.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.8018, -196.7435, -195.7910, -202.3928, -195.4442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.7669, -196.6272, -195.7102, -202.4503, -195.3674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.6848, -196.4656, -195.5925, -202.4443, -195.2531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-195.5681, -196.3533, -195.3754, -202.3126, -195.1241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.4017, -196.3482, -195.0878, -202.0558, -195.0154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.1118, -196.3635, -194.5860, -201.5812, -194.7891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.9072, -196.3988, -194.2025, -201.2300, -194.6452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.9772, -196.3187, -194.3479, -201.4277, -194.7287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.0070, -196.3192, -194.4420, -201.5782, -194.8319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-194.9966, -196.2682, -194.4272, -201.6532, -194.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-194.9178, -196.2303, -194.2545, -201.5604, -194.8439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-194.8297, -196.1841, -194.1089, -201.5517, -194.8297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-194.7773, -196.1665, -193.9959, -201.5452, -194.8592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.7920, -196.1899, -194.0303, -201.6470, -194.9989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-194.8836, -196.2656, -194.1428, -201.7705, -195.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-195.0752, -196.2956, -194.3742, -202.0670, -195.4095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-195.2079, -196.2935, -194.4890, -202.2676, -195.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.2910, -196.2870, -194.5110, -202.3680, -195.5720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-195.3106, -196.2446, -194.4400, -202.3451, -195.5509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.2579, -196.3103, -194.2169, -202.1484, -195.4890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.0856, -196.4039, -193.7715, -201.6984, -195.3062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-194.8077, -196.5207, -193.1060, -201.0280, -194.9811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-194.6929, -196.5733, -192.7111, -200.6757, -194.7960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.4791, -196.6896, -192.1986, -200.1466, -194.5789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.3339, -196.6838, -191.8154, -199.7331, -194.3518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-194.3058, -196.5866, -191.6158, -199.5712, -194.1676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.4222, -196.3602, -191.6692, -199.6985, -194.0487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-194.6366, -196.0251, -191.9086, -200.0315, -193.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.9684, -195.6568, -192.3161, -200.5438, -193.9813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.3923, -195.2553, -192.9104, -201.2895, -194.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.9058, -194.8913, -193.6820, -202.1980, -194.3103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-196.2904, -194.6941, -194.1915, -202.8230, -194.5107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-196.5947, -194.6089, -194.6372, -203.3209, -194.7535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-196.7945, -194.5330, -194.9117, -203.6487, -194.8964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-196.8049, -194.4633, -194.8880, -203.6885, -194.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-196.7722, -194.3459, -194.7812, -203.6831, -194.8183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-196.6967, -194.1371, -194.6835, -203.6716, -194.6742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-196.6340, -193.9524, -194.5784, -203.6677, -194.5448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-196.5660, -193.9074, -194.4358, -203.5983, -194.4609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-196.4883, -193.8960, -194.3196, -203.5457, -194.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-196.5349, -193.9658, -194.3590, -203.6399, -194.4948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-196.6876, -193.8766, -194.5318, -203.9231, -194.5359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.8287, -193.7566, -194.7330, -204.2370, -194.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-197.0220, -193.6324, -195.0620, -204.5914, -194.7057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.1219, -193.5678, -195.2553, -204.7800, -194.7641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.1887, -193.4720, -195.5001, -204.9985, -194.8299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-197.2566, -193.4817, -195.6452, -205.1330, -194.9162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-197.1600, -193.4716, -195.5327, -204.9968, -194.8056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-196.8713, -193.5395, -195.0964, -204.5181, -194.5630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-196.5777, -193.6986, -194.6772, -204.0659, -194.3847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.1822, -193.8940, -194.0464, -203.3866, -194.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-195.6089, -194.1476, -193.2111, -202.3730, -193.6686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.0052, -194.3806, -192.3798, -201.3056, -193.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.6630, -194.5621, -191.9674, -200.7322, -193.0496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.4305, -194.6652, -191.7393, -200.3705, -192.9216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-194.1725, -194.7788, -191.5698, -200.0408, -192.8290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-194.1545, -194.8814, -191.7303, -200.1710, -192.9558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-194.3201, -194.9311, -192.1005, -200.5821, -193.1984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-194.7141, -194.9203, -192.8396, -201.3997, -193.6368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-195.0474, -195.0134, -193.4993, -202.0364, -194.0637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-195.3861, -195.1212, -194.2072, -202.6922, -194.5341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-195.7990, -195.2381, -195.0405, -203.4506, -195.0923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-196.0794, -195.4803, -195.6193, -203.9547, -195.5741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-196.4485, -195.7286, -196.3380, -204.5697, -196.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-196.6746, -196.0240, -196.8294, -204.9066, -196.5764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-196.6279, -196.3262, -196.9618, -204.8372, -196.7808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-196.3360, -196.6354, -196.6446, -204.3624, -196.7247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-195.7972, -196.9056, -195.9193, -203.4828, -196.3702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-195.1577, -197.2061, -194.9868, -202.4265, -195.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.6150, -197.4560, -194.1775, -201.4806, -195.4740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-194.1883, -197.6703, -193.5432, -200.7456, -195.1525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-193.8580, -197.8516, -193.0184, -200.1400, -194.8953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-193.7001, -197.9844, -192.7637, -199.8656, -194.7810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.5456, -198.0507, -192.5219, -199.6469, -194.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.4479, -198.0558, -192.4197, -199.5538, -194.5266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.4348, -197.9524, -192.4957, -199.6970, -194.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-193.3306, -197.9604, -192.4672, -199.7016, -194.4668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.2773, -197.8802, -192.4744, -199.7724, -194.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.3627, -197.7364, -192.6801, -200.0880, -194.4861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-193.6018, -197.5725, -193.0945, -200.6117, -194.6598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.7114, -197.4148, -193.3273, -200.9357, -194.7528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-193.8697, -197.3258, -193.5730, -201.2724, -194.8959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.0070, -197.2079, -193.8110, -201.5959, -195.0089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-194.2125, -197.1737, -194.0938, -202.0190, -195.2132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.2549, -197.1428, -194.1506, -202.1511, -195.2838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-194.2152, -197.0682, -194.1078, -202.1735, -195.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.2762, -196.9412, -194.1789, -202.3154, -195.2617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-194.2731, -196.8707, -194.1894, -202.3615, -195.2765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-194.1173, -196.8521, -193.9744, -202.1351, -195.1806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-194.0176, -196.8174, -193.8509, -201.9822, -195.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-193.9959, -196.7057, -193.7846, -201.8987, -195.0199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.9631, -196.5522, -193.6494, -201.7860, -194.8497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-193.8736, -196.4155, -193.4939, -201.6973, -194.7049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-193.8043, -196.3441, -193.3981, -201.6583, -194.6023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.7025, -196.2718, -193.2564, -201.5757, -194.4871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.7513, -196.1543, -193.3478, -201.7280, -194.4843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-193.7611, -196.0176, -193.4272, -201.8129, -194.4608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-193.9198, -195.8135, -193.6394, -202.0859, -194.4601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.0188, -195.6379, -193.7328, -202.2702, -194.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.0304, -195.4381, -193.5766, -202.2277, -194.1483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-193.9226, -195.2330, -193.2905, -202.0227, -193.8174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-193.8015, -195.0718, -193.0317, -201.7948, -193.5170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3049, device='cuda:0', dtype=torch.float64)
tensor([-193.7271, -194.9367, -192.7958, -201.6482, -193.2626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.8086, -194.7713, -192.7210, -201.7105, -193.0839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.8552, -194.5526, -192.6790, -201.7643, -192.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.8623, -194.3099, -192.6336, -201.7894, -192.6594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.8419, -194.1298, -192.5807, -201.8112, -192.4766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-193.8566, -193.9654, -192.6057, -201.8941, -192.3538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.7964, -193.7936, -192.5448, -201.8592, -192.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.8157, -193.6634, -192.5769, -201.9159, -192.0668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.0040, -193.5054, -192.7894, -202.1909, -192.0659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.0940, -193.4523, -192.8591, -202.3770, -192.0675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.1519, -193.4514, -192.9287, -202.4909, -192.1020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.0342, -193.5083, -192.7252, -202.3263, -192.0132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-193.9068, -193.5989, -192.5696, -202.1639, -191.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-193.9137, -193.5189, -192.6185, -202.2657, -191.9906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.8083, -193.5198, -192.5303, -202.2088, -191.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-193.6981, -193.5213, -192.4467, -202.1484, -191.9454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.3335, -193.6261, -191.9803, -201.6444, -191.7441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-193.1048, -193.6173, -191.7205, -201.3901, -191.5688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.0274, -193.5080, -191.6224, -201.3269, -191.4361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-193.0504, -193.3814, -191.6862, -201.4598, -191.4011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-192.9518, -193.2238, -191.5969, -201.4357, -191.2573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-192.9965, -193.1177, -191.7482, -201.6522, -191.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.9944, -193.0682, -191.8437, -201.7764, -191.4139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-192.8941, -193.0442, -191.7254, -201.7122, -191.3761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-192.9083, -192.9719, -191.7471, -201.8626, -191.3713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.8376, -192.9967, -191.6166, -201.8399, -191.3584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-192.7963, -192.9594, -191.5430, -201.8279, -191.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.7792, -192.9584, -191.4667, -201.8288, -191.3131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-192.8147, -193.0480, -191.4713, -201.9073, -191.4105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-192.6101, -193.3010, -191.1381, -201.6018, -191.4124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.6016, -193.5122, -191.0644, -201.6068, -191.5338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-192.7166, -193.7254, -191.1693, -201.8410, -191.7448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.8265, -193.9017, -191.3022, -202.0814, -191.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-192.9142, -193.9748, -191.4634, -202.3374, -192.0169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-192.6768, -194.1573, -191.1764, -202.0763, -191.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-192.2309, -194.3134, -190.5900, -201.4826, -191.7037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.9331, -194.4592, -190.2397, -201.1677, -191.5911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-191.7274, -194.5342, -189.9756, -201.0085, -191.4737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-191.5753, -194.5656, -189.7793, -200.8632, -191.3761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.4963, -194.6052, -189.6900, -200.8243, -191.3277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.5111, -194.5439, -189.7092, -200.9508, -191.2732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.3934, -194.5442, -189.5603, -200.8379, -191.1909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.2773, -194.5572, -189.4050, -200.7616, -191.0991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-191.0056, -194.6370, -189.0499, -200.4047, -190.9467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-190.6956, -194.8141, -188.6310, -199.9245, -190.8272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-190.5396, -194.9801, -188.4092, -199.6994, -190.7911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-190.6376, -194.9246, -188.5370, -199.9276, -190.7486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-190.7121, -194.9170, -188.6369, -200.1069, -190.7447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-190.5284, -195.0736, -188.4177, -199.8743, -190.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-190.3931, -195.1986, -188.2353, -199.7154, -190.6566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-190.3064, -195.2269, -188.0671, -199.5807, -190.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-190.4754, -195.2030, -188.2547, -199.9199, -190.6556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-190.6482, -195.1949, -188.4133, -200.2199, -190.7579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.9255, -195.1893, -188.6948, -200.6800, -190.9287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-191.3085, -195.1096, -189.1253, -201.3028, -191.1400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-191.5898, -195.0301, -189.4920, -201.8046, -191.3187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-191.9569, -194.9570, -189.9348, -202.3693, -191.5384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-192.3892, -194.7557, -190.5899, -203.0842, -191.7800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-192.8911, -194.5621, -191.3383, -203.9024, -192.0788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.1879, -194.4629, -191.8272, -204.4154, -192.2949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.2256, -194.4232, -191.9229, -204.4873, -192.3287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.1100, -194.3125, -191.7676, -204.3287, -192.1971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.7213, -194.2994, -191.2077, -203.7214, -191.8846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-192.3521, -194.3144, -190.6625, -203.0773, -191.6048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-191.8081, -194.3564, -189.8062, -202.0999, -191.1610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-191.3044, -194.3371, -189.0909, -201.2380, -190.7764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-191.0570, -194.1719, -188.7706, -200.7731, -190.4960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-190.8763, -193.9910, -188.5628, -200.3941, -190.2632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-191.0523, -193.7442, -188.8686, -200.6578, -190.2716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-191.4411, -193.5144, -189.5108, -201.2788, -190.4986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.7479, -193.2775, -190.0744, -201.8159, -190.6920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-191.7411, -193.1016, -190.1716, -201.8243, -190.6235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-191.8725, -192.8395, -190.4222, -202.0955, -190.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-192.0066, -192.5698, -190.6991, -202.4130, -190.5037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-192.1200, -192.3563, -190.8632, -202.6529, -190.4515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-192.2312, -192.1926, -190.9986, -202.8530, -190.4194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.2163, -192.1682, -190.9044, -202.7928, -190.3557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.0388, -192.1560, -190.5945, -202.5103, -190.1747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-191.7961, -192.2357, -190.1777, -202.0832, -190.0039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.8253, -192.1765, -190.1156, -202.0859, -189.9544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-192.1509, -192.0760, -190.4679, -202.5135, -190.0978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-192.6785, -192.0438, -191.1329, -203.2846, -190.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.1873, -192.0792, -191.7253, -203.9833, -190.8762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.5546, -192.1580, -192.1183, -204.4434, -191.1995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.8134, -192.2165, -192.3065, -204.7169, -191.3826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-193.8438, -192.3113, -192.2059, -204.6888, -191.4234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.7100, -192.3044, -191.8921, -204.4436, -191.2504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.3972, -192.1916, -191.3930, -203.9539, -190.8846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.9442, -192.1357, -190.7939, -203.3179, -190.4880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-192.6932, -192.0095, -190.4628, -202.9780, -190.2014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-192.2618, -191.7502, -189.8611, -202.4090, -189.6905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.8968, -191.5690, -189.3901, -201.9086, -189.3079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-191.4508, -191.4494, -188.8211, -201.2753, -188.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-190.8968, -191.4409, -188.0097, -200.3458, -188.6477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-190.4185, -191.5129, -187.3091, -199.4667, -188.4844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-190.0774, -191.6263, -186.7039, -198.6828, -188.4276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-190.2727, -191.4524, -186.8703, -198.9661, -188.4994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-190.5252, -191.2966, -187.1351, -199.3765, -188.5794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-190.8228, -191.1689, -187.4088, -199.8656, -188.7050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-191.3480, -191.0365, -187.9962, -200.7077, -188.9869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-191.7891, -191.0370, -188.4561, -201.3573, -189.2827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-192.1210, -191.1108, -188.7650, -201.8230, -189.5736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.4719, -191.1644, -189.1117, -202.3001, -189.8765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.7037, -191.1815, -189.3178, -202.6055, -190.0682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.1182, -191.2180, -189.7601, -203.1608, -190.3881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-193.3821, -191.2941, -189.9464, -203.4552, -190.6280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-193.7982, -191.3006, -190.3919, -204.0272, -190.9060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-194.3357, -191.2263, -191.0242, -204.7848, -191.2195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-194.7329, -191.1478, -191.4445, -205.2745, -191.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-194.9682, -191.0597, -191.6835, -205.5760, -191.5138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-194.8794, -190.9792, -191.5075, -205.4648, -191.3879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.5458, -190.8752, -190.9890, -204.9913, -191.0663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-193.8843, -190.9618, -190.0290, -204.0256, -190.6534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-193.5920, -191.0851, -189.5383, -203.5584, -190.5463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-193.2223, -191.2505, -188.9252, -202.9484, -190.3792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-192.6105, -191.4252, -188.0163, -201.9401, -190.0798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-192.1393, -191.5535, -187.3509, -201.1808, -189.8947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-191.9065, -191.7216, -186.9645, -200.7495, -189.8399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-191.9735, -191.7719, -187.0085, -200.8665, -189.8740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-191.9631, -191.7845, -186.8751, -200.8317, -189.8394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.7556, -191.8856, -186.4845, -200.4581, -189.7716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-191.4234, -191.9854, -185.9874, -199.8937, -189.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.4367, -191.9137, -185.8514, -199.8790, -189.5786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-191.5831, -191.7642, -185.9313, -200.1366, -189.5245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-191.7021, -191.5759, -185.9684, -200.3805, -189.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-191.9234, -191.3973, -186.1784, -200.7981, -189.4115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-192.2857, -191.2372, -186.5882, -201.4198, -189.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.6101, -191.0057, -186.9754, -202.0103, -189.6076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-192.5914, -190.8354, -186.9566, -202.0980, -189.5196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-192.4332, -190.6834, -186.7781, -201.9977, -189.3313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.4375, -190.6213, -186.7361, -202.0475, -189.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-192.3894, -190.4588, -186.6208, -201.9989, -189.1149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-192.1261, -190.4388, -186.2728, -201.6270, -188.9465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-191.9861, -190.4908, -186.0884, -201.4270, -188.8847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.8856, -190.4338, -185.9231, -201.2728, -188.7532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.8870, -190.3890, -185.9239, -201.2901, -188.6821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-191.8871, -190.4593, -185.8779, -201.2306, -188.6785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-191.6696, -190.6126, -185.5873, -200.8161, -188.6009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-191.4623, -190.7216, -185.3325, -200.4226, -188.5094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-191.3661, -190.7823, -185.1871, -200.1487, -188.4488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.2446, -190.8744, -184.9928, -199.8450, -188.4578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-191.2469, -190.8870, -184.9513, -199.7683, -188.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.3052, -190.8966, -184.9727, -199.7734, -188.5037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-191.1107, -191.0210, -184.7167, -199.3719, -188.4979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-191.2402, -190.8169, -184.8782, -199.5612, -188.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-191.5292, -190.5700, -185.2692, -200.0646, -188.4239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.9141, -190.3787, -185.7652, -200.7221, -188.5133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-192.4933, -190.1777, -186.5049, -201.6685, -188.7442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.8503, -190.1025, -187.0258, -202.2629, -188.9715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-193.3329, -189.9244, -187.7007, -203.0275, -189.2460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-193.4410, -189.7261, -187.9667, -203.2774, -189.2629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-193.3144, -189.5624, -187.9892, -203.1914, -189.1847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-193.1687, -189.3295, -187.9458, -203.0563, -189.0203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.5571, -189.2678, -187.2908, -202.2555, -188.6223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-191.7308, -189.3289, -186.3239, -200.9889, -188.1576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-191.1552, -189.3600, -185.6801, -200.0036, -187.8322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-190.9975, -189.3208, -185.5692, -199.7360, -187.7259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.8711, -189.2496, -185.5083, -199.5093, -187.5703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.7429, -189.2378, -185.4485, -199.2629, -187.4606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.8875, -189.0546, -185.7085, -199.5125, -187.4310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-191.3435, -188.7386, -186.3863, -200.3629, -187.5049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-191.8807, -188.4831, -187.1025, -201.2495, -187.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-192.5407, -188.2925, -187.9674, -202.2891, -187.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-192.9034, -188.2225, -188.4796, -202.8437, -188.0799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-193.4556, -188.1226, -189.1930, -203.6616, -188.3650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-193.6033, -188.0814, -189.4282, -203.9320, -188.4514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-193.7270, -188.2234, -189.5482, -204.1204, -188.6110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-193.5084, -188.4796, -189.1979, -203.8232, -188.5751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.9858, -188.8145, -188.4874, -203.0968, -188.3843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-192.7318, -189.0491, -188.0675, -202.7062, -188.3262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.3954, -189.3050, -187.6345, -202.2188, -188.2612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-191.8043, -189.5480, -186.9395, -201.3861, -188.0546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-191.3848, -189.7291, -186.4658, -200.7887, -187.9509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-191.1974, -189.7690, -186.2149, -200.5279, -187.8357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-190.8467, -189.9334, -185.7772, -200.0139, -187.7015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-190.3683, -190.2153, -185.1683, -199.2485, -187.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-190.3416, -190.2716, -185.0714, -199.1997, -187.5536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-190.6016, -190.1729, -185.3469, -199.6395, -187.6139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.9131, -190.1433, -185.6655, -200.0968, -187.7452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-191.1808, -190.1228, -185.9005, -200.4817, -187.8684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.6223, -190.0481, -186.3351, -201.1552, -188.0958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-191.9680, -190.0591, -186.6378, -201.6155, -188.2795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.4435, -190.0045, -187.1394, -202.2601, -188.5099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.8723, -189.8955, -187.6089, -202.8274, -188.6799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-193.0219, -189.8039, -187.8185, -203.0736, -188.7373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-193.0846, -189.7196, -187.8962, -203.1984, -188.7158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-193.0991, -189.5461, -187.9595, -203.3104, -188.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.9591, -189.4112, -187.9092, -203.2364, -188.5234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-192.2823, -189.4720, -187.1621, -202.4048, -188.1643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-191.8167, -189.4792, -186.6526, -201.8409, -187.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-191.5517, -189.4911, -186.3807, -201.5138, -187.7833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-191.1926, -189.4859, -186.0051, -201.0060, -187.5700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-191.1934, -189.3845, -186.0788, -201.0678, -187.4875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-191.2643, -189.1777, -186.2843, -201.2626, -187.3961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-190.8003, -189.2206, -185.8707, -200.7093, -187.1642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-190.3319, -189.3668, -185.4020, -200.0811, -187.0156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-190.0293, -189.4290, -185.1598, -199.6958, -186.9201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-189.9556, -189.4042, -185.1822, -199.6701, -186.8626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-189.9200, -189.3485, -185.2157, -199.7173, -186.8295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-190.0840, -189.2554, -185.4774, -200.1229, -186.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-190.4594, -189.1719, -185.9145, -200.8066, -187.1446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.7820, -189.1190, -186.2492, -201.3703, -187.3486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-190.8119, -189.1699, -186.2430, -201.5047, -187.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-191.0591, -189.1396, -186.4469, -201.8913, -187.6333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-190.9860, -189.2483, -186.3094, -201.8360, -187.6965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-190.8784, -189.4108, -186.1800, -201.7350, -187.7767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-190.9211, -189.4362, -186.2187, -201.8411, -187.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.0932, -189.4602, -186.3571, -202.1545, -187.9881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-191.3218, -189.4027, -186.5401, -202.5301, -188.0996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.4857, -189.3935, -186.7067, -202.8440, -188.2368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-191.4413, -189.4083, -186.6619, -202.8683, -188.2558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-191.0588, -189.4700, -186.2279, -202.4351, -188.0445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-190.6891, -189.5617, -185.8549, -202.0303, -187.8799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-190.2729, -189.7671, -185.3846, -201.5674, -187.7251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-189.8037, -189.8871, -184.8658, -200.9836, -187.4468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-189.5794, -189.8911, -184.6375, -200.6931, -187.2198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-189.3793, -189.8703, -184.3916, -200.4109, -187.0022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-189.3335, -189.8357, -184.2708, -200.3377, -186.8859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-189.1420, -189.7998, -184.0177, -200.0374, -186.7444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-189.0659, -189.7792, -183.8026, -199.8822, -186.6672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-189.1199, -189.6947, -183.7771, -199.9270, -186.6158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-188.8930, -189.5891, -183.5311, -199.6149, -186.4491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-188.7046, -189.4867, -183.2644, -199.2863, -186.2482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-188.7289, -189.2783, -183.2660, -199.3005, -186.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-188.9610, -189.0763, -183.4979, -199.6332, -185.9682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-189.0729, -188.8392, -183.6375, -199.7586, -185.8106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-189.3685, -188.5483, -183.9814, -200.1642, -185.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-189.8283, -188.2993, -184.5177, -200.8155, -185.8256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-190.1976, -188.1086, -184.9197, -201.3239, -185.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-190.5138, -187.9808, -185.2222, -201.7037, -185.9188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-190.5424, -187.9890, -185.2770, -201.7257, -185.8782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-190.6154, -187.9670, -185.3850, -201.8117, -185.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-190.5469, -187.9737, -185.3435, -201.7194, -185.7807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-190.1699, -188.0670, -184.9734, -201.2070, -185.6154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-189.4008, -188.3689, -184.2011, -200.1510, -185.3778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-188.7963, -188.7320, -183.6304, -199.2816, -185.2537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-188.3285, -189.0060, -183.1789, -198.5449, -185.1852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-188.1314, -189.2240, -182.9393, -198.1950, -185.2464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-188.4001, -189.2612, -183.1776, -198.5605, -185.4005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-188.8316, -189.2820, -183.6560, -199.1913, -185.6078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-189.1560, -189.2403, -184.0152, -199.6203, -185.7005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-189.4418, -189.1453, -184.3567, -200.0009, -185.7783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-189.8219, -188.9690, -184.7952, -200.5004, -185.8199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-189.9376, -188.8584, -184.9014, -200.5913, -185.7475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-190.4323, -188.7805, -185.3382, -201.1566, -185.9318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-190.8769, -188.7704, -185.6612, -201.5965, -186.1258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-191.2656, -188.8545, -185.9231, -202.0103, -186.3446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-191.5338, -189.0202, -186.0963, -202.3232, -186.5493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-191.4890, -189.2273, -186.0593, -202.2591, -186.6550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-191.6187, -189.4401, -186.1806, -202.3987, -186.8353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-191.6603, -189.5877, -186.2198, -202.4502, -186.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-191.6457, -189.7588, -186.2170, -202.4119, -187.1262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-191.4412, -189.8623, -186.0415, -202.1428, -187.1365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-190.9830, -189.8081, -185.5753, -201.5546, -186.9612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.6073, -189.7964, -185.1805, -201.0665, -186.8287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-190.2360, -189.7549, -184.7543, -200.5376, -186.6391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-189.8550, -189.6312, -184.3376, -199.9263, -186.3843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-189.3986, -189.6561, -183.8526, -199.1737, -186.1890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-189.4717, -189.4502, -183.9481, -199.2333, -186.1063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-190.0516, -189.0816, -184.6455, -200.0593, -186.1236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-190.4494, -188.7181, -185.1746, -200.6149, -186.0840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-190.8246, -188.3563, -185.6826, -201.1302, -186.0170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-190.9922, -187.9397, -186.0353, -201.3833, -185.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-191.5940, -187.4411, -186.8446, -202.1852, -185.8568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.3702, -186.9380, -187.7463, -203.1356, -185.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-192.9124, -186.4282, -188.4190, -203.7949, -185.8805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-193.1810, -185.8980, -188.8534, -204.1946, -185.6877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-193.1367, -185.4139, -188.9403, -204.2485, -185.3684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-192.7662, -185.0619, -188.6690, -203.9020, -184.9510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-192.2408, -184.8578, -188.2070, -203.3361, -184.5539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-192.0843, -184.6388, -188.1547, -203.2168, -184.3056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-191.5299, -184.4899, -187.6308, -202.5714, -183.8953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-191.2670, -184.3933, -187.3927, -202.2744, -183.6471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.2503, -184.2872, -187.3454, -202.2648, -183.4999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.9743, -184.2601, -187.0089, -201.8697, -183.2652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-190.6627, -184.1930, -186.6397, -201.4300, -182.9282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-190.1324, -184.3060, -185.9577, -200.6280, -182.6414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-189.6203, -184.5009, -185.2806, -199.7991, -182.3937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-189.0674, -184.7873, -184.5226, -198.8609, -182.2482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-188.8650, -184.9694, -184.2777, -198.5646, -182.1820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-188.7903, -185.0501, -184.1670, -198.4594, -182.0844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-188.9926, -185.0126, -184.4774, -198.8806, -182.0297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-189.2090, -185.0301, -184.7853, -199.3050, -181.9999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-189.5088, -185.0637, -185.1558, -199.8309, -181.9814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-190.1048, -184.9808, -185.8294, -200.7267, -182.0210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-190.5486, -185.0049, -186.2591, -201.3372, -182.0423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-190.8583, -184.9932, -186.4991, -201.7144, -181.9963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.1762, -184.9843, -186.6866, -202.0863, -181.9362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-191.1275, -185.0430, -186.4978, -201.9897, -181.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-191.1324, -185.1511, -186.3425, -201.9259, -181.7206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.2867, -185.2399, -186.3001, -202.0520, -181.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-191.1224, -185.2775, -185.9916, -201.8045, -181.6047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-190.8965, -185.3158, -185.6406, -201.5344, -181.4803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-190.5558, -185.4584, -185.1996, -201.1121, -181.3525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-190.3249, -185.6001, -184.8784, -200.8139, -181.2325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-189.6509, -185.7220, -184.1146, -199.9574, -181.0041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-189.1299, -185.8205, -183.5275, -199.2875, -180.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-188.5260, -186.0002, -182.8415, -198.4658, -180.6375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-188.0202, -186.1639, -182.2225, -197.7157, -180.4921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-187.9210, -186.1783, -182.1409, -197.5745, -180.3434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-187.8648, -186.2745, -182.1326, -197.5080, -180.2593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-187.9207, -186.3448, -182.2406, -197.5918, -180.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-187.9771, -186.4185, -182.3633, -197.6203, -180.2169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-188.1417, -186.4018, -182.6180, -197.8547, -180.2449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-188.2819, -186.3547, -182.8429, -198.0701, -180.2922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-188.9320, -186.2871, -183.6318, -198.9306, -180.4651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-189.5684, -186.2933, -184.3580, -199.6850, -180.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-190.1310, -186.3833, -185.0542, -200.2993, -180.9750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-190.9051, -186.5195, -185.9380, -201.1201, -181.3501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-191.4030, -186.7191, -186.5338, -201.5847, -181.6441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-191.5958, -186.9142, -186.8542, -201.6810, -181.8479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-191.7239, -186.9892, -187.1939, -201.7453, -182.0659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-191.6352, -186.9727, -187.3169, -201.5385, -182.0412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.6417, -186.9593, -187.5292, -201.4349, -182.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.5954, -186.8892, -187.7167, -201.3395, -182.0637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-191.4626, -186.8950, -187.6846, -201.1389, -182.0588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-191.6651, -186.8966, -187.9845, -201.2770, -182.2283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.7016, -186.8795, -188.1003, -201.2494, -182.3335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-191.4558, -186.8717, -188.0111, -200.9356, -182.2597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-190.9938, -186.8352, -187.6483, -200.3961, -182.0992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-190.7287, -186.7237, -187.4630, -200.0717, -181.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-190.3475, -186.5991, -187.1281, -199.6079, -181.8595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-189.8817, -186.5107, -186.6772, -199.0363, -181.7431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-189.4553, -186.4253, -186.1820, -198.4544, -181.6217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-189.2442, -186.3337, -185.9525, -198.1554, -181.5198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-188.7409, -186.2602, -185.4204, -197.5293, -181.3250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-188.4686, -186.1296, -185.1692, -197.1520, -181.1142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-188.1503, -186.0322, -184.7967, -196.6502, -180.9261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-188.3367, -185.7513, -185.0597, -196.9235, -180.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-188.4466, -185.5943, -185.2386, -197.1491, -180.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-188.4965, -185.4277, -185.3155, -197.2924, -180.3880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-188.5497, -185.2307, -185.3836, -197.4223, -180.1871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-188.4247, -185.1658, -185.1974, -197.2878, -180.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-188.4431, -185.0235, -185.1793, -197.3808, -179.9687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-188.4330, -184.9145, -185.0708, -197.4264, -179.8725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-188.4551, -184.8512, -185.0598, -197.5421, -179.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-188.4427, -184.7363, -184.9892, -197.6435, -179.7789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-188.4426, -184.5576, -184.9319, -197.7586, -179.6898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-188.4780, -184.3825, -184.8674, -197.9373, -179.6131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-188.6535, -184.2423, -185.0183, -198.3004, -179.5340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-188.9434, -184.1291, -185.2644, -198.7796, -179.4698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-189.1583, -184.0496, -185.4612, -199.1660, -179.4388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-189.5507, -183.9649, -185.8402, -199.7375, -179.4002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-190.1071, -183.8747, -186.3474, -200.5076, -179.4921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-190.4281, -183.8352, -186.5210, -200.9285, -179.5554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-190.6034, -183.8194, -186.5905, -201.1899, -179.5411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-190.5851, -183.8375, -186.4866, -201.2127, -179.4988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-190.3795, -183.8439, -186.1398, -201.0271, -179.3952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-190.0686, -183.8239, -185.7004, -200.7179, -179.2100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-189.6254, -183.8479, -185.1634, -200.2489, -179.0475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-189.2321, -183.8663, -184.6685, -199.8278, -178.9641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-188.6930, -183.9388, -183.9648, -199.1551, -178.8692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-188.0736, -184.0272, -183.1695, -198.3246, -178.7012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0653, device='cuda:0', dtype=torch.float64)
tensor([-187.5361, -184.1383, -182.4273, -197.5724, -178.5941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-187.2140, -184.2846, -181.9364, -196.9986, -178.4961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-186.8946, -184.4367, -181.4322, -196.3620, -178.4164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-186.9203, -184.6823, -181.5018, -196.2940, -178.3153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-187.0869, -184.8024, -181.8329, -196.4869, -178.0932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-187.4107, -184.7703, -182.3031, -196.9115, -177.8713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-188.0148, -184.6959, -183.0400, -197.6772, -177.7273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-188.4442, -184.7444, -183.3938, -198.1487, -177.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-188.8199, -184.7265, -183.7071, -198.5959, -177.5805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-189.3807, -184.5878, -184.3358, -199.2943, -177.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-189.9615, -184.3613, -185.0008, -200.0400, -177.5041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-190.5680, -184.0314, -185.7273, -200.8341, -177.4876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-191.3915, -183.7139, -186.6959, -201.8481, -177.6039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-191.8973, -183.3903, -187.3773, -202.5089, -177.6283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-192.3281, -183.1495, -188.0154, -203.0674, -177.6035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-192.4139, -182.9181, -188.3834, -203.2404, -177.4903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-192.1340, -182.6120, -188.3375, -203.0905, -177.2463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-191.8514, -182.3814, -188.2064, -202.9399, -177.0495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-191.4801, -182.2018, -187.8934, -202.6962, -176.9194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-190.7338, -182.1404, -187.1869, -202.0197, -176.7234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-189.8079, -182.1290, -186.2484, -201.0778, -176.4156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-189.2506, -182.0882, -185.6346, -200.4834, -176.1687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-188.7293, -181.9344, -185.0867, -199.9950, -175.9428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-188.7971, -181.7247, -185.1862, -200.1706, -175.8587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-188.7500, -181.5322, -185.2057, -200.2176, -175.7672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-188.0913, -181.4101, -184.4450, -199.5867, -175.6360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-187.5818, -181.3108, -183.8805, -199.1159, -175.5506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-186.9413, -181.2484, -183.1051, -198.4291, -175.4865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.2264, -181.1852, -182.2443, -197.5476, -175.4275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-185.7161, -181.1443, -181.5989, -196.8964, -175.4685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-185.3813, -181.0824, -181.0308, -196.4122, -175.5447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-185.1141, -181.1003, -180.5325, -195.9675, -175.6208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-184.9044, -181.1673, -180.1990, -195.6604, -175.6941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-184.7899, -181.1819, -179.9920, -195.5207, -175.7273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-185.0718, -181.1089, -180.3622, -196.0729, -175.6471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-185.4124, -181.0102, -180.7977, -196.7048, -175.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-185.7163, -180.8901, -181.1201, -197.2166, -175.5345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-186.0564, -180.7769, -181.4931, -197.7550, -175.4977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-186.6640, -180.5185, -182.2559, -198.6596, -175.4025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-187.2530, -180.2890, -182.9402, -199.4756, -175.3706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-187.7158, -180.2119, -183.6116, -200.1074, -175.3658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-188.5209, -180.3049, -184.7019, -201.0049, -175.5431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-189.0749, -180.3552, -185.4065, -201.6176, -175.7011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-189.5350, -180.5171, -186.0530, -202.1211, -175.9314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-190.1702, -180.7549, -186.9006, -202.7849, -176.2125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-190.4362, -180.9234, -187.2639, -203.0953, -176.3970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-190.8713, -180.9663, -187.7607, -203.5845, -176.5397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.2738, -181.0080, -188.1746, -203.9981, -176.6271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-191.1018, -180.8563, -187.9169, -203.8729, -176.4966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-191.0201, -180.6774, -187.7729, -203.8265, -176.3639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-190.5165, -180.4669, -187.0744, -203.3503, -176.0995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-189.7226, -180.2711, -186.0205, -202.5622, -175.7423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-188.9889, -180.1440, -185.0821, -201.8251, -175.4903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-187.6904, -180.0490, -183.4398, -200.4066, -175.2004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-186.3189, -180.1107, -181.6946, -198.7439, -175.1054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-185.3181, -180.2531, -180.4809, -197.4149, -175.1371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-184.6838, -180.3878, -179.6629, -196.4848, -175.1927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-183.9731, -180.4652, -178.6717, -195.3178, -175.3121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-183.4026, -180.4890, -177.9376, -194.3652, -175.4116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-183.0389, -180.3985, -177.5254, -193.7564, -175.4672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-182.7755, -180.3466, -177.2298, -193.3769, -175.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-182.7124, -180.3285, -177.1885, -193.4059, -175.4389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-182.7572, -180.3993, -177.2958, -193.6486, -175.3659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-183.0976, -180.5988, -177.7270, -194.3324, -175.2365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-183.7104, -180.7976, -178.6596, -195.4632, -175.0653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-184.4873, -181.0140, -179.9524, -196.7598, -174.9875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-185.5471, -181.3940, -181.7374, -198.2150, -175.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-186.6129, -181.8751, -183.6749, -199.5912, -175.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-187.7477, -182.3753, -185.6983, -200.9135, -175.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-188.6525, -182.8609, -187.2859, -201.9154, -175.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-189.1072, -183.1489, -188.2530, -202.4537, -176.2085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-189.0664, -183.3587, -188.5690, -202.4725, -176.2516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-188.9121, -183.5036, -188.7113, -202.3799, -176.2008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-188.3591, -183.5567, -188.3841, -201.8913, -175.9834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-187.3361, -183.4598, -187.5257, -200.9555, -175.6173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-186.1588, -183.4261, -186.3664, -199.7986, -175.2796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-185.1650, -183.4600, -185.3555, -198.7598, -175.0891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-184.5470, -183.5635, -184.7134, -198.0892, -175.0711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-183.9775, -183.5879, -184.0821, -197.4550, -175.0782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-183.3795, -183.5895, -183.4231, -196.8373, -175.1201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-182.9214, -183.5398, -182.9433, -196.3812, -175.1846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-182.3745, -183.5430, -182.3212, -195.7625, -175.2870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-182.0047, -183.6130, -181.8983, -195.3362, -175.3680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-181.6482, -183.7152, -181.4446, -194.8277, -175.4368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-181.6238, -183.8060, -181.4230, -194.7689, -175.3998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-181.5653, -183.8219, -181.3475, -194.6768, -175.2838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-181.6514, -183.7628, -181.4704, -194.8208, -175.0786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-181.7118, -183.6598, -181.4479, -194.9237, -174.9162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-181.7446, -183.5740, -181.3934, -194.9972, -174.7363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-181.8748, -183.4606, -181.4326, -195.1789, -174.5528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-182.0106, -183.3347, -181.4532, -195.3996, -174.3884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-182.3288, -183.1181, -181.6635, -195.8759, -174.2064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-182.9876, -182.8301, -182.3993, -196.8313, -173.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-183.9856, -182.4937, -183.5086, -198.0786, -173.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-184.7677, -182.2040, -184.2605, -199.0202, -173.6812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-185.4401, -181.8875, -184.8491, -199.8129, -173.5992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-185.9733, -181.6258, -185.3415, -200.5022, -173.5845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-186.3933, -181.3552, -185.7618, -201.1089, -173.5695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-186.6590, -180.9933, -185.9716, -201.5447, -173.5093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-186.6176, -180.5850, -185.8865, -201.7153, -173.4105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-186.3414, -180.1485, -185.5680, -201.6677, -173.1945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-186.0025, -179.8098, -185.1218, -201.5021, -173.0101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-185.5082, -179.5875, -184.5882, -201.1466, -172.8310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-184.9240, -179.3721, -183.7850, -200.6236, -172.6810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-183.9658, -179.0327, -182.4618, -199.7124, -172.5151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-182.9852, -178.7461, -181.2397, -198.7530, -172.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-182.2465, -178.4957, -180.2881, -197.9247, -172.3962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-181.0865, -178.4260, -178.9494, -196.4798, -172.5747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-180.5183, -178.3358, -178.3700, -195.7353, -172.6947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-180.1779, -178.1406, -178.1514, -195.3440, -172.6662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-180.3158, -177.7766, -178.4289, -195.6820, -172.4023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-180.8459, -177.4647, -179.2158, -196.5858, -171.9438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-181.4242, -177.2849, -180.1187, -197.5091, -171.5765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-181.6665, -177.1886, -180.6096, -197.9100, -171.3712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-181.7131, -177.1806, -180.9048, -198.0548, -171.1995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-181.8943, -177.0928, -181.2556, -198.3369, -171.0076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-181.6705, -177.1047, -181.1331, -198.0783, -170.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-181.5513, -177.2052, -181.2705, -198.0223, -170.7181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-181.4513, -177.1979, -181.3202, -197.9681, -170.5656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-181.4520, -177.2024, -181.5373, -198.0682, -170.4180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-181.6791, -177.2500, -181.9985, -198.3984, -170.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1534, device='cuda:0', dtype=torch.float64)
tensor([-181.8368, -177.3849, -182.4762, -198.7091, -170.0916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-181.9724, -177.5328, -182.9594, -199.0215, -169.9454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-181.9170, -177.6877, -183.1710, -199.0897, -169.8525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-181.7398, -177.8197, -183.0776, -198.9616, -169.7977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3306, device='cuda:0', dtype=torch.float64)
tensor([-181.1095, -178.0134, -182.4615, -198.2724, -169.9142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-180.3199, -178.2172, -181.5602, -197.3602, -170.1715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-179.6335, -178.4532, -180.7716, -196.5172, -170.4930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-179.1008, -178.7011, -180.1810, -195.8007, -170.7985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-178.6079, -179.0027, -179.5595, -195.0158, -171.1428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-178.4203, -179.0504, -179.3335, -194.7710, -171.2932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-178.3014, -179.1045, -179.1884, -194.6056, -171.4273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-178.1628, -179.1680, -178.9694, -194.3437, -171.5988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-178.1611, -179.0792, -179.0199, -194.4331, -171.5779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-178.3044, -178.9245, -179.2818, -194.8282, -171.3815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-178.6387, -178.6350, -179.7329, -195.5569, -171.0407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-178.9851, -178.4336, -179.9877, -196.0865, -170.8006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-179.5199, -178.0012, -180.4676, -196.9883, -170.4634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-180.6208, -177.5241, -181.6137, -198.5305, -169.9723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-181.5842, -177.1715, -182.6578, -199.8350, -169.6472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-183.1367, -176.9175, -184.2865, -201.6137, -169.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-184.5642, -176.8877, -185.8038, -203.0962, -169.4209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-185.2813, -176.8883, -186.6098, -203.8556, -169.4255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-185.9175, -176.8827, -187.1808, -204.4517, -169.4673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-186.3552, -176.8677, -187.6261, -204.8833, -169.4738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-186.2555, -176.7946, -187.3752, -204.7683, -169.3704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-185.9872, -176.7416, -187.0158, -204.5076, -169.1760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-185.5908, -176.5448, -186.4582, -204.1221, -168.9332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-185.2813, -176.4092, -186.1044, -203.8919, -168.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-184.8708, -176.2625, -185.6832, -203.5901, -168.4171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-184.3057, -176.1643, -185.0290, -203.0576, -168.2072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-183.4416, -176.1044, -184.1739, -202.2447, -167.9822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-182.4818, -176.0728, -183.2682, -201.3256, -167.7986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-181.6983, -176.0655, -182.5630, -200.5609, -167.7272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-181.0569, -176.1310, -182.0795, -199.9971, -167.7172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-180.6729, -176.2932, -181.8408, -199.6706, -167.6985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-180.3037, -176.5157, -181.4923, -199.2404, -167.7537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-179.8714, -176.8241, -181.1190, -198.6984, -167.8532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-179.4944, -177.1177, -180.8368, -198.2433, -167.9309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-178.9206, -177.5599, -180.4150, -197.5593, -168.1245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-178.5160, -177.9518, -180.2279, -197.1053, -168.2708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-178.7443, -178.0284, -180.8585, -197.7329, -167.9190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-178.7004, -178.1729, -181.2804, -198.0281, -167.7281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-178.7876, -178.2190, -181.9631, -198.6180, -167.4482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-178.8709, -178.2607, -182.6159, -199.1454, -167.2054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-179.2497, -178.3486, -183.6616, -200.0466, -166.8925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-179.5245, -178.4714, -184.5729, -200.7451, -166.6454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-179.8107, -178.5473, -185.4748, -201.4406, -166.4143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-180.2717, -178.5488, -186.6135, -202.3961, -166.1500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-180.6806, -178.6071, -187.6188, -203.1901, -165.9785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-181.0618, -178.7077, -188.4828, -203.8305, -165.8126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-181.1978, -178.8322, -188.9135, -204.1049, -165.7098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-181.2960, -178.8965, -189.2515, -204.3266, -165.5979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-181.2913, -178.8528, -189.3058, -204.3817, -165.5063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-181.3719, -178.7607, -189.4321, -204.5382, -165.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-181.6651, -178.6468, -189.7827, -204.8831, -165.2447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-181.9147, -178.5012, -189.9923, -205.1636, -165.1449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-181.8872, -178.2989, -189.9077, -205.2198, -165.0556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-181.2406, -177.9687, -189.1171, -204.7809, -165.0370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-180.5371, -177.7226, -188.2395, -204.2769, -165.0084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-180.0673, -177.5457, -187.6588, -203.9724, -164.9520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-179.3867, -177.4014, -186.8081, -203.4204, -164.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-179.0450, -177.2738, -186.3631, -203.1945, -164.9291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-178.3601, -177.1119, -185.4510, -202.5886, -165.0476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-177.3880, -177.1620, -184.1246, -201.4647, -165.4185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-176.6396, -177.2400, -182.9812, -200.4479, -165.8135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-176.0060, -177.3361, -182.0919, -199.5684, -166.2103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-175.3491, -177.6019, -181.1690, -198.5025, -166.7543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-175.0003, -177.6601, -180.7829, -198.0852, -167.0254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-174.9487, -177.5898, -180.7567, -198.1742, -166.9303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-175.0555, -177.3482, -180.8824, -198.5246, -166.6607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-175.5747, -176.7754, -181.5949, -199.6759, -165.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-176.0260, -176.3123, -182.3489, -200.7514, -165.3874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-176.4598, -175.9319, -183.1541, -201.7636, -164.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-177.0219, -175.5713, -184.2342, -202.9793, -164.2963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-177.8782, -175.2620, -185.7632, -204.5598, -163.6754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-178.4553, -175.1446, -186.9743, -205.6842, -163.3073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-178.9811, -175.0225, -188.1838, -206.7653, -163.0371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-179.4388, -174.8474, -189.4174, -207.8355, -162.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-180.0314, -174.7194, -190.7477, -208.9613, -162.5620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-180.5435, -174.7199, -192.0301, -210.0236, -162.4242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-180.9713, -174.7217, -193.0770, -210.9204, -162.3020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-181.3111, -174.7636, -193.8800, -211.6336, -162.1398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-181.2734, -174.8402, -194.2701, -211.9978, -161.9158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-181.1431, -174.9190, -194.3932, -212.1533, -161.7090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-181.0805, -174.9668, -194.3905, -212.2340, -161.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-181.0651, -174.9760, -194.2792, -212.2793, -161.2105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-181.4029, -175.1146, -194.5105, -212.5756, -160.9981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-181.2958, -175.1724, -194.2171, -212.4608, -160.7963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-180.5674, -175.1513, -193.0462, -211.5998, -160.5820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-179.6732, -175.1546, -191.6171, -210.4681, -160.4669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-178.8547, -175.1587, -190.3779, -209.4287, -160.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-178.0002, -175.2835, -189.1146, -208.2444, -160.5199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-177.4108, -175.3992, -188.1941, -207.3323, -160.6209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-176.9107, -175.5537, -187.2871, -206.4039, -160.8377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-176.3631, -175.8246, -186.3800, -205.3501, -161.1163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-175.7694, -176.2046, -185.5023, -204.1848, -161.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-175.1711, -176.6463, -184.5764, -202.8783, -162.0000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-174.7161, -177.0781, -183.8496, -201.7650, -162.4874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-174.1973, -177.5643, -182.9981, -200.3961, -163.2600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-173.8553, -177.9421, -182.4244, -199.3564, -163.8625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-173.5974, -178.3914, -181.9532, -198.3829, -164.4342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-173.4661, -178.5413, -181.7921, -198.0996, -164.5535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-173.3950, -178.4095, -181.8941, -198.3802, -164.3025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-173.3750, -178.1705, -182.1764, -198.9759, -163.8758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-173.4739, -177.7752, -182.6984, -199.9853, -163.1315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-173.6123, -177.4430, -183.3013, -201.0242, -162.3525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-173.9071, -176.9563, -184.2688, -202.5042, -161.3629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-174.1784, -176.5532, -185.3377, -203.8544, -160.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-174.6956, -176.0135, -186.7990, -205.5854, -159.5767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-175.1658, -175.6213, -188.1365, -207.0862, -158.8720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-175.6408, -175.3159, -189.3667, -208.4477, -158.3259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-176.1034, -175.1318, -190.6067, -209.7568, -157.8330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-176.5470, -175.0688, -191.5632, -210.8069, -157.4131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-177.0014, -175.0214, -192.5427, -211.8691, -157.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-177.7150, -175.0314, -193.8107, -213.1686, -156.6773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-178.3588, -175.0709, -194.7854, -214.2049, -156.4026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-178.6070, -175.1445, -195.2464, -214.7555, -156.2246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-178.5302, -175.1760, -195.2375, -214.8747, -156.0867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-178.4199, -175.1748, -195.1530, -214.9622, -155.9457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-177.9828, -175.1336, -194.4025, -214.4197, -155.9055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-177.5493, -175.0730, -193.6727, -213.9141, -155.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-176.9427, -175.1766, -192.5632, -213.0062, -156.0310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-176.2620, -175.4108, -191.1914, -211.8208, -156.2795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-175.5787, -175.7499, -189.8457, -210.6132, -156.6563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-175.0004, -176.0994, -188.6188, -209.5349, -157.1019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-174.5726, -176.4313, -187.6577, -208.6784, -157.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-174.2138, -176.7876, -186.8610, -207.9668, -157.9277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-173.9905, -176.9681, -186.4295, -207.6164, -158.2207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-173.9436, -176.9529, -186.3553, -207.6968, -158.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-174.2004, -176.7534, -186.8018, -208.4551, -157.9588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-174.5520, -176.6081, -187.3099, -209.2758, -157.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-174.9966, -176.3350, -187.9715, -210.3099, -157.2385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-175.2623, -176.0537, -188.4264, -211.0775, -157.0089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-175.3582, -175.8220, -188.7219, -211.5847, -156.9293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-175.2784, -175.5564, -188.8572, -211.9050, -156.9367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-175.2484, -175.3935, -189.0320, -212.2475, -156.9300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-175.5446, -175.2219, -189.6267, -213.1185, -156.7178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-175.9393, -175.0783, -190.5541, -214.2744, -156.4100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-176.1662, -175.0217, -191.2324, -215.1482, -156.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-176.2667, -174.9937, -191.5942, -215.7433, -156.1077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-176.2590, -174.8182, -191.9718, -216.2941, -155.9948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-176.2079, -174.7407, -192.3574, -216.7571, -155.8858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-175.9799, -174.6207, -192.6457, -217.0840, -155.8330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-175.3685, -174.6008, -192.4593, -216.7448, -155.9775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-174.7929, -174.6201, -192.3453, -216.4626, -156.1639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-174.6390, -174.4755, -192.8506, -216.9419, -156.1188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-174.4044, -174.4093, -193.1623, -217.2209, -156.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-174.4215, -174.2816, -193.8527, -217.9062, -155.9910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-174.5049, -174.2344, -194.5988, -218.6470, -155.8296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-174.7906, -174.0887, -195.5921, -219.7256, -155.5283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-175.1450, -173.9683, -196.6882, -220.8906, -155.1897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-175.5199, -173.8569, -197.6167, -221.9542, -154.8690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-175.7654, -173.8619, -198.3916, -222.8091, -154.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-176.2980, -173.8465, -199.3672, -223.8794, -154.2199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-176.9059, -173.9064, -200.3321, -224.9583, -153.8019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-177.0523, -173.9755, -200.4808, -225.2394, -153.5472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-176.8556, -173.9605, -200.1051, -224.9817, -153.4448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-176.9407, -174.0050, -200.1867, -225.1924, -153.2864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-176.8382, -174.1016, -200.0191, -225.1135, -153.1945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-176.9387, -174.1345, -200.2258, -225.4124, -153.0336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-177.3049, -174.0475, -200.7550, -226.0998, -152.8162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-177.4571, -173.9583, -201.0598, -226.5843, -152.7173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-177.4115, -173.7658, -201.0378, -226.7521, -152.6695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-177.4269, -173.5789, -201.1767, -227.0315, -152.5846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-177.2396, -173.3083, -201.0211, -226.9530, -152.5832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-177.2255, -173.0800, -201.1407, -227.2200, -152.5152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-177.4851, -172.9051, -201.6687, -227.9817, -152.4086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-177.7234, -172.7774, -202.2016, -228.7488, -152.3001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-177.7581, -172.5999, -202.3653, -229.1594, -152.2429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-177.5142, -172.4111, -202.1750, -229.1059, -152.2564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-177.2330, -172.1516, -202.0694, -229.1021, -152.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-176.5468, -171.9394, -201.3519, -228.3745, -152.4548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-175.9090, -171.8150, -200.6015, -227.5794, -152.6509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-175.2067, -171.8143, -199.7504, -226.5912, -152.9133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-174.4765, -171.8129, -199.0291, -225.6387, -153.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-173.7683, -171.9604, -198.4661, -224.7330, -153.7153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-173.2243, -172.2334, -197.9996, -223.9378, -154.0685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-173.0445, -172.4802, -198.0609, -223.8585, -154.2000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-173.0274, -172.5951, -198.3993, -224.1475, -154.1917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-173.1429, -172.4823, -199.0483, -224.9497, -154.0810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-173.1689, -172.4451, -199.5599, -225.5775, -154.0545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-172.9020, -172.7459, -199.5198, -225.4146, -154.2771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-172.7081, -172.9831, -199.6174, -225.3779, -154.4558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-172.5497, -173.2657, -199.8596, -225.4969, -154.6539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-172.0495, -174.0493, -199.3651, -224.4968, -155.2966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-171.7368, -174.7443, -199.1158, -223.8542, -155.8152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-171.6072, -175.0548, -199.1666, -223.7815, -156.0624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-171.5160, -175.3409, -199.2482, -223.7642, -156.2788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-171.5953, -175.1774, -199.5101, -224.2385, -156.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-171.6753, -174.9798, -199.9493, -224.9381, -155.9571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-171.8521, -174.6770, -200.5312, -225.8127, -155.6784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-172.1321, -174.0897, -201.3865, -227.1079, -155.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-172.3108, -173.7553, -201.9743, -227.9497, -154.9644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-172.4808, -173.5297, -202.6345, -228.8222, -154.7283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-172.8608, -173.0982, -203.7233, -230.3961, -154.2598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-173.3645, -172.7448, -204.8063, -231.9476, -153.7579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-173.7201, -172.6523, -205.3486, -232.7510, -153.4230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-173.9448, -172.6903, -205.5627, -233.1682, -153.1765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-174.1885, -172.7859, -205.9764, -233.7953, -152.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-174.4593, -172.9225, -206.4553, -234.4379, -152.7185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-174.6108, -173.1730, -206.7705, -234.8317, -152.6229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-174.5383, -173.5075, -206.6070, -234.5423, -152.7193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-174.7762, -173.6228, -207.0638, -235.1263, -152.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-174.9977, -173.6855, -207.3086, -235.5487, -152.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-175.4400, -173.7319, -207.8641, -236.4710, -152.2256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-175.5859, -173.7061, -207.8849, -236.7425, -152.1447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-175.9356, -173.5019, -208.1774, -237.5673, -151.9545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-176.3763, -173.4027, -208.6062, -238.5661, -151.7448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-176.2132, -173.1673, -207.8509, -238.0374, -151.7773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-175.7591, -172.8566, -206.6660, -236.9259, -151.9442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-175.1804, -172.8507, -205.4708, -235.5609, -152.2559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-174.7897, -172.8120, -204.6473, -234.7613, -152.4869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-174.2351, -172.9724, -203.8863, -233.6269, -152.8874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-174.0119, -172.7397, -203.8538, -233.6189, -152.9599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-173.9143, -172.2806, -204.0257, -233.9959, -152.9083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-173.9359, -171.7236, -204.3740, -234.7068, -152.6970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-174.1021, -171.0342, -204.9560, -235.7948, -152.3839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-174.0589, -170.4903, -205.1267, -236.2531, -152.2608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-174.0551, -170.0564, -205.2278, -236.6068, -152.1738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-174.9068, -169.3160, -206.7504, -238.9851, -151.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-175.9484, -168.9129, -208.4693, -241.4092, -151.3026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-176.9639, -168.7865, -210.0966, -243.4945, -151.0955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-177.5724, -168.7138, -211.0244, -244.6286, -150.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-178.3181, -168.8510, -211.9849, -245.8266, -150.8722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-178.5861, -168.8616, -212.2193, -246.1090, -150.7868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-178.4824, -168.7152, -211.9777, -245.8062, -150.7934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-178.1707, -168.4251, -211.3208, -245.0698, -150.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-177.8195, -168.1913, -210.3319, -243.9884, -150.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-177.4646, -168.0540, -209.4358, -242.9299, -150.7191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-176.8583, -168.0188, -208.4371, -241.5826, -150.7644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-176.7000, -168.0422, -207.9784, -240.9617, -150.7465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-177.0056, -167.8579, -208.3992, -241.5012, -150.5799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-177.3872, -167.8749, -208.8822, -242.1503, -150.4159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-177.8003, -167.8314, -209.5059, -242.9294, -150.2687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-178.1985, -167.7534, -210.1807, -243.7255, -150.1048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-178.5234, -167.7550, -211.0494, -244.6910, -149.9625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-178.8385, -167.6737, -211.9961, -245.7017, -149.8374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-179.8082, -167.5658, -213.9402, -248.0385, -149.7145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-180.5349, -167.5654, -215.6975, -250.0716, -149.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-180.9705, -167.5725, -217.0417, -251.5482, -149.6660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-180.9451, -167.5511, -217.6709, -252.1640, -149.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-180.9278, -167.7116, -218.1004, -252.5104, -149.6061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-181.2766, -167.9970, -218.9214, -253.3753, -149.5922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-181.4823, -168.2203, -219.4496, -253.9932, -149.5788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-181.5406, -168.3814, -219.5752, -254.2014, -149.5066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-180.9872, -168.3845, -218.8616, -253.2268, -149.4526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-180.6248, -168.5239, -218.4787, -252.6612, -149.4559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-180.2236, -168.6360, -218.1467, -252.0696, -149.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-179.6265, -168.7458, -217.5320, -251.0196, -149.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-179.1670, -168.7843, -217.1427, -250.2272, -149.5404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-179.1647, -168.7169, -217.4146, -250.4854, -149.5112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-179.1326, -168.4746, -217.5842, -250.7775, -149.4843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-179.1131, -168.2621, -217.8500, -251.2136, -149.4868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-179.1003, -168.1318, -218.0724, -251.5335, -149.4679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-179.4780, -167.9409, -218.8163, -252.6989, -149.3563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-179.5313, -167.7587, -219.2193, -253.3532, -149.3299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-179.1250, -167.6538, -219.1447, -253.1656, -149.4101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-178.8877, -167.5726, -219.2484, -253.1589, -149.4394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-178.1144, -167.7475, -218.7559, -252.0889, -149.5992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-177.3403, -168.0507, -218.3935, -251.0279, -149.8502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-176.3095, -168.6612, -217.9952, -249.5898, -150.2884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-175.3428, -169.5912, -217.6031, -248.1217, -150.8282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-174.6844, -170.5183, -217.5774, -247.1740, -151.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-173.9906, -171.7465, -217.3110, -245.8325, -151.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-173.4241, -173.3758, -216.8307, -244.2400, -152.7135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-173.1235, -174.6251, -216.5653, -243.1715, -153.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-172.9834, -175.5373, -216.7080, -242.8141, -153.7399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-173.1516, -175.0201, -217.5997, -243.9796, -153.5410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-173.6867, -173.0342, -219.2909, -246.8108, -152.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-174.4123, -171.3612, -221.1993, -249.8094, -152.1099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-175.5304, -169.8581, -223.4700, -253.2575, -151.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-177.3672, -168.7536, -226.5019, -257.5902, -150.9016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-179.4928, -168.4068, -229.8166, -262.0374, -150.6950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-181.6186, -168.7173, -233.0072, -266.0882, -150.7584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-183.4882, -169.4174, -235.8178, -269.4945, -150.9470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-184.5402, -170.0498, -237.6125, -271.6116, -151.1235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-184.9892, -170.3866, -238.3479, -272.6073, -151.1969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-185.1813, -170.6935, -238.8071, -273.2946, -151.2375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-184.5558, -170.5270, -238.2030, -272.6099, -151.1662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-184.2120, -170.5717, -237.7140, -272.2046, -151.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-183.4866, -170.4305, -236.5996, -270.8580, -150.9674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-182.4598, -170.3030, -235.3062, -269.0555, -150.8941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-180.8919, -170.3107, -233.1625, -265.9883, -150.8984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-179.7535, -170.9274, -231.4024, -263.2572, -151.1106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-179.1141, -171.6332, -229.8540, -260.8423, -151.4254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-178.0156, -173.6126, -227.6596, -256.8636, -152.2325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-177.2733, -176.2668, -225.5463, -252.9852, -153.4191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-177.0512, -177.9786, -224.3567, -250.8097, -154.2168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-176.9340, -179.8985, -223.4869, -248.9180, -155.0821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-176.8610, -181.2378, -223.2520, -248.0188, -155.7313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-176.7937, -181.6622, -223.7802, -248.2940, -155.9920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-176.7351, -180.4867, -224.8396, -249.6571, -155.5811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-176.5146, -181.0269, -225.1339, -249.4475, -155.8871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-176.4419, -180.0999, -226.2802, -250.8379, -155.4983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-176.6942, -178.3621, -228.1945, -253.4268, -154.6096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-177.4247, -176.0708, -230.8334, -257.1532, -153.4243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-178.2615, -174.9072, -233.3537, -260.3464, -152.6475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-179.1195, -174.1841, -235.6390, -263.1015, -152.1826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-180.4300, -173.7216, -238.1993, -266.1588, -151.8433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-181.3690, -173.6261, -240.0830, -268.2644, -151.6566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-182.2618, -173.6376, -241.9738, -270.2913, -151.6107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-182.9091, -173.6146, -243.6022, -271.8111, -151.6070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-183.6554, -173.6615, -245.0313, -273.2075, -151.6332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-183.7605, -173.6361, -245.4401, -273.4657, -151.6909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-183.5368, -173.7608, -245.0292, -272.8018, -151.7338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-182.9463, -174.0023, -243.9214, -271.4999, -151.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-182.1572, -174.3663, -242.5015, -269.7019, -152.0455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-181.2267, -174.8330, -240.6728, -267.3325, -152.2958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-180.6018, -175.2717, -239.1328, -265.2981, -152.6063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-180.2920, -175.7518, -237.8596, -263.5485, -152.8931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-179.9997, -176.3341, -236.6242, -261.6806, -153.2404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-179.5845, -177.4147, -235.4566, -259.7154, -153.8935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-179.6308, -177.8674, -235.1985, -259.1416, -154.1787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-179.7770, -178.3004, -235.3700, -259.0726, -154.4376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-180.0220, -178.4453, -235.7174, -259.2194, -154.5640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-180.5120, -177.7217, -236.7579, -260.3654, -154.2478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-180.8268, -177.2158, -237.4921, -261.0105, -154.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-181.6216, -176.1266, -239.2187, -263.1216, -153.7231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-182.6006, -175.2415, -241.4163, -265.7708, -153.5041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-183.7187, -174.5909, -243.7247, -268.5438, -153.3995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-184.6995, -174.2693, -246.0343, -271.2398, -153.4491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-185.5511, -174.3195, -248.1142, -273.4259, -153.5955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-186.3764, -174.4956, -250.1317, -275.5712, -153.8134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-187.1594, -174.7228, -251.7667, -277.2562, -153.9753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-187.8338, -174.8235, -253.2095, -278.7774, -154.1268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-187.9536, -174.6943, -253.9173, -279.1006, -154.2546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-187.6730, -174.6062, -254.3113, -278.8931, -154.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-187.2698, -174.7053, -254.3333, -278.2934, -154.8533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-187.2040, -174.9242, -254.7566, -278.2621, -155.2537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-186.8732, -175.3888, -254.5977, -277.4192, -155.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-186.4959, -176.0947, -254.3309, -276.4030, -156.2614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-186.6562, -176.3335, -254.9324, -276.6701, -156.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-186.8496, -176.5826, -255.3698, -276.7177, -156.9432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-186.7359, -177.3949, -254.7212, -275.1938, -157.4867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-186.7127, -178.1986, -254.3809, -274.0364, -158.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-186.8226, -178.8314, -254.4543, -273.5458, -158.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-187.2125, -178.9990, -255.0323, -273.8264, -158.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-187.9368, -178.6755, -256.3377, -275.2956, -158.6372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-188.5674, -178.5494, -257.6153, -276.6006, -158.6668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-189.3492, -178.1506, -259.1461, -278.2462, -158.5445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-190.0104, -178.2303, -260.7537, -279.9275, -158.6534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-190.6186, -178.3056, -261.9164, -281.1856, -158.8048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-190.1169, -179.5610, -260.6199, -279.0312, -159.6518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-189.9439, -180.9436, -259.9516, -277.7628, -160.5466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-189.9799, -182.2116, -259.5540, -277.0355, -161.4208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-189.8871, -184.3401, -258.5919, -275.4156, -162.8321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-190.0634, -185.1999, -258.7114, -275.2086, -163.4760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-190.3453, -185.1431, -259.9099, -276.3120, -163.6431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-190.6149, -184.3790, -261.4233, -277.8070, -163.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-191.6218, -182.3494, -264.5584, -281.3724, -162.3154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-193.2106, -181.3716, -268.3481, -285.7053, -161.4380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-194.8398, -181.3517, -271.6683, -289.1490, -160.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-196.3964, -182.1039, -274.7236, -292.1654, -160.8416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-198.4312, -183.5346, -278.1528, -295.4424, -160.7696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-199.9396, -185.0047, -280.3231, -297.2897, -160.8591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-200.9552, -185.8156, -281.8676, -298.2667, -160.8513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-201.4558, -186.1840, -283.0658, -298.5976, -160.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-201.6559, -186.2525, -283.7343, -298.5383, -160.9288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-201.3785, -185.7029, -283.9156, -297.7671, -160.8828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-200.4193, -184.4927, -282.8910, -295.8175, -160.8769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-199.0921, -183.1215, -281.2144, -293.2325, -160.9790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-197.2901, -181.9572, -278.9490, -289.9037, -161.4432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-196.0093, -181.8895, -277.0829, -287.0988, -162.1824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-195.5843, -182.4353, -276.2386, -285.6271, -162.8307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-195.2950, -183.1888, -275.8512, -284.6807, -163.7147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-194.7510, -184.8525, -274.5056, -282.7307, -165.4392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-194.8104, -186.7047, -273.8535, -281.6845, -167.1593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-194.8973, -188.5079, -273.3002, -280.3587, -168.5014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-195.3162, -190.1715, -273.8737, -280.4585, -169.8770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-195.8895, -191.3880, -275.2299, -281.3678, -170.7569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-196.7392, -191.8247, -277.3460, -283.3747, -171.0280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-197.5505, -191.7090, -279.5921, -285.5630, -170.9413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-198.4234, -191.5427, -282.3121, -288.2453, -170.8879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-199.3627, -191.3412, -285.2441, -291.2580, -170.8001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-200.8475, -190.3455, -290.0214, -296.1870, -169.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-202.5153, -190.5224, -294.5919, -301.0051, -168.6255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-204.9901, -192.5835, -300.5619, -307.5673, -167.7125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-207.8553, -197.3679, -306.7389, -314.5380, -167.4285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-210.4984, -203.2596, -312.3063, -320.9715, -167.7510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-212.4378, -208.0825, -316.6305, -325.7323, -168.3565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-213.8659, -211.8271, -319.8300, -329.2806, -168.9535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-214.6888, -214.0351, -321.5892, -330.9958, -169.3203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-215.9563, -217.5053, -324.2883, -333.8877, -169.7663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-216.7170, -220.2086, -325.9528, -335.6984, -170.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-217.7614, -223.6314, -327.5241, -337.5804, -170.3885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-217.3262, -222.8695, -326.5803, -336.7290, -170.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-217.0755, -222.2962, -326.2500, -336.2365, -170.2931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-216.9051, -222.0186, -326.0754, -335.8258, -170.4336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-216.2052, -219.9046, -325.2185, -334.6986, -170.6977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-215.5822, -218.0119, -324.3651, -333.5637, -171.1322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-215.2026, -216.1042, -323.3967, -332.2894, -171.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-214.2695, -213.5424, -321.0853, -329.2084, -172.4925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-214.0965, -213.2729, -320.3268, -327.9141, -172.9605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-214.1169, -213.9625, -320.4474, -327.5265, -173.1190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-214.4248, -214.9478, -321.4035, -327.7570, -172.8298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-214.5934, -216.0358, -322.0255, -327.6203, -172.5905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-213.8856, -215.8418, -321.0542, -325.9206, -172.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-212.7782, -215.0412, -319.5531, -324.0011, -173.9764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-212.2462, -215.3981, -319.6550, -323.7411, -174.2766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-212.0413, -215.7706, -320.9220, -324.6489, -174.1512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-211.9794, -216.6802, -323.4024, -326.4021, -173.2876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-212.3183, -218.6428, -326.5260, -328.7515, -172.3205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-212.4738, -220.4671, -329.1982, -330.3448, -171.8304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-212.1420, -221.4487, -331.2833, -331.3958, -171.5654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-212.0885, -223.1027, -334.3946, -333.3357, -171.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-212.5560, -225.8894, -338.0062, -335.8150, -171.4287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-211.8981, -226.5047, -339.6431, -336.2610, -171.5593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-210.5884, -225.7457, -339.7075, -335.1337, -171.8446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-209.7236, -225.8047, -340.1844, -334.6404, -172.2962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-209.0040, -226.1681, -340.4720, -333.9156, -172.8151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-208.2114, -226.1473, -340.5356, -333.1061, -173.5739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-207.4242, -225.9566, -340.9659, -332.9245, -174.5285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-206.0542, -225.7860, -340.0786, -331.4856, -176.0622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-205.1349, -226.2437, -340.1286, -330.8970, -177.6278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-205.4034, -227.3007, -341.8965, -332.2875, -178.3483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-205.5504, -228.3673, -343.6637, -333.6909, -178.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-206.0074, -229.9306, -345.7749, -335.7226, -179.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-205.3487, -231.9859, -345.9254, -335.2347, -181.6127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-205.1100, -234.7681, -346.4326, -335.5935, -183.8892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-205.5017, -236.9801, -347.7463, -336.8096, -185.2394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-206.0834, -238.9050, -349.7161, -338.8906, -186.2074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-207.3708, -240.7271, -353.0147, -342.0387, -186.2423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-209.2291, -242.6023, -356.8780, -345.9051, -185.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-211.9864, -245.6627, -361.6892, -350.9943, -185.1849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-215.2621, -250.4525, -367.7882, -357.6516, -185.0092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-218.9697, -256.8467, -375.0042, -365.4856, -185.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-224.4557, -267.2233, -384.4880, -375.8431, -185.6842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-229.3867, -277.8934, -392.9115, -385.1956, -187.2636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-233.6869, -288.5445, -399.5811, -392.8741, -189.4928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-237.6240, -297.7138, -405.0896, -399.4525, -191.9648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-239.1072, -300.0387, -406.9904, -402.0479, -193.4991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-240.5262, -301.9543, -408.0775, -403.7835, -195.3932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-242.7774, -306.2027, -410.1311, -406.3104, -197.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-245.6492, -312.9689, -414.1486, -411.1279, -199.3033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-249.1998, -322.7560, -419.7369, -417.8653, -201.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-250.7510, -326.8205, -422.4830, -421.5837, -202.8598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-252.2106, -331.4615, -425.6550, -425.6151, -204.0824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-252.9751, -334.3229, -427.7243, -428.6590, -205.1681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-254.5102, -339.3414, -429.8420, -432.2768, -206.8092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-254.1874, -338.8185, -430.3478, -433.4860, -207.3602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-253.3164, -336.7412, -430.5934, -434.1900, -207.8237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-252.2834, -333.7618, -430.3858, -434.1240, -208.5989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-250.8745, -330.2184, -429.8323, -433.8329, -209.8458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-250.6316, -329.5480, -431.0790, -435.3589, -211.4986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-250.5555, -329.9941, -432.6297, -437.0502, -212.9266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-251.9983, -334.7472, -437.8944, -443.0207, -213.1609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-254.1553, -341.5136, -444.9721, -451.2026, -213.0027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-256.3231, -348.1110, -451.5654, -459.1168, -213.2526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-257.1607, -351.4679, -455.3460, -463.1059, -213.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-258.3716, -354.3489, -459.8262, -468.3739, -214.5454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-259.4401, -356.7317, -463.2397, -472.9163, -215.4119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-260.1696, -358.2864, -465.7089, -476.3912, -216.1612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-261.3862, -360.1723, -467.8462, -479.2648, -216.8758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-261.5123, -360.0694, -468.2104, -478.3149, -217.5650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-262.2214, -362.9336, -469.4443, -477.4041, -217.8445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-261.7444, -363.4003, -469.5871, -476.0307, -219.0604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-262.7185, -367.3214, -471.0575, -475.5711, -220.0654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-265.0409, -373.7850, -474.5585, -477.7861, -220.9740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-267.7552, -381.3459, -479.6146, -481.4752, -221.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-269.1981, -385.8273, -483.0041, -483.2680, -223.3100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-272.2929, -395.5641, -490.2602, -488.7086, -224.1097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-275.8746, -407.2846, -498.8422, -495.7788, -225.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-278.8562, -418.2639, -506.6551, -502.9736, -227.7266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-281.9408, -431.2445, -514.9322, -510.9224, -230.4522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-283.5180, -441.2970, -520.3033, -516.0012, -232.8271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-283.1320, -446.9899, -523.6889, -519.1972, -233.5802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-283.1871, -452.8622, -527.3739, -523.2038, -234.6376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-281.1567, -451.6102, -528.0077, -523.6109, -233.9435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-279.9639, -450.8177, -529.0221, -525.1707, -234.3274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-279.1030, -450.4516, -530.4144, -527.0111, -235.0785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-278.9984, -452.5841, -533.0137, -530.4939, -236.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-280.2075, -458.7637, -537.6086, -535.3956, -238.9870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-281.1383, -462.9160, -540.9403, -539.0930, -240.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-281.7811, -465.6555, -543.5631, -541.5438, -242.6624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-282.0023, -466.1347, -545.3883, -543.0609, -244.7029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-283.4209, -472.1709, -548.9480, -546.3931, -247.2738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-286.2952, -484.4649, -555.1897, -553.1105, -250.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-288.8602, -494.8859, -560.6010, -558.5735, -254.1272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-292.6439, -509.8382, -567.7955, -565.6708, -258.5935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-295.9964, -524.4781, -575.6679, -573.6482, -262.8111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-300.2269, -541.2163, -585.2409, -584.0686, -267.7118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-302.8112, -552.0258, -592.5065, -592.5268, -271.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-304.6188, -558.5794, -598.3922, -599.7304, -274.8287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-305.6318, -560.1104, -602.0581, -603.6995, -276.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-307.7153, -569.8786, -609.6219, -611.5615, -281.0165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-308.4810, -575.9455, -614.9412, -616.8258, -283.4688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-308.8260, -579.2939, -619.1894, -621.0683, -285.4087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-307.7082, -576.6525, -620.7546, -622.1925, -285.6788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-307.2954, -577.7419, -623.7732, -624.4953, -286.4486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-307.0980, -581.3373, -627.8171, -629.1251, -287.3645],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_043009.csv
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-2.3503, -3.4717, -4.1553, -4.9913, -5.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2644, device='cuda:0', dtype=torch.float64)
tensor([-42.6452, -28.9265, -22.1051, -64.0985, -33.9892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(319.9290, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -5.7093, -5.3783, -4.9621, -7.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.6667, device='cuda:0', dtype=torch.float64)
tensor([-38.3255, -18.3745, -16.5236, -32.0345, -35.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(276.5202, device='cuda:0', dtype=torch.float64)
tensor([-20.1034, -16.3765, -12.0246, -33.0558, -30.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(213.3486, device='cuda:0', dtype=torch.float64)
tensor([-3.0997, -7.3926, -5.1952, -7.9560, -8.0858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(44.9704, device='cuda:0', dtype=torch.float64)
tensor([-2.5933, -5.8595, -4.8415, -5.6570, -6.6457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.0952, device='cuda:0', dtype=torch.float64)
tensor([-3.0060, -4.0302, -5.9492, -6.4727, -9.0114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.6466, device='cuda:0', dtype=torch.float64)
tensor([ -7.3879,  -3.8067,  -7.2518,  -7.6870, -11.8995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(89.1897, device='cuda:0', dtype=torch.float64)
tensor([ -6.9322,  -4.4718,  -7.5283,  -8.1687, -12.8964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(89.9021, device='cuda:0', dtype=torch.float64)
tensor([ -3.3241,  -5.2442,  -6.5162,  -6.9988, -11.3873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.0497, device='cuda:0', dtype=torch.float64)
tensor([-2.5539, -5.4362, -5.3565, -5.7743, -8.9610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.5944, device='cuda:0', dtype=torch.float64)
tensor([-2.6037, -5.0416, -4.7694, -5.2488, -7.5185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.6381, device='cuda:0', dtype=torch.float64)
tensor([-2.7610, -4.7703, -4.6302, -5.2828, -6.8863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.5987, device='cuda:0', dtype=torch.float64)
tensor([-2.9208, -4.9974, -4.7168, -5.8159, -6.4855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.2457, device='cuda:0', dtype=torch.float64)
tensor([-2.9597, -5.6184, -4.8594, -6.7727, -6.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(32.2985, device='cuda:0', dtype=torch.float64)
tensor([-2.9530, -6.3219, -4.8748, -7.1940, -6.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.9496, device='cuda:0', dtype=torch.float64)
tensor([-2.9397, -5.7702, -4.6725, -6.7022, -6.5469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.5207, device='cuda:0', dtype=torch.float64)
tensor([-2.6630, -4.9076, -4.4050, -6.0137, -6.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.7600, device='cuda:0', dtype=torch.float64)
tensor([-2.4968, -4.4641, -4.2724, -5.5491, -6.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3995, device='cuda:0', dtype=torch.float64)
tensor([-2.3693, -4.0740, -4.3538, -5.3726, -6.6336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.1644, device='cuda:0', dtype=torch.float64)
tensor([-2.2548, -3.7649, -4.6381, -5.4934, -6.7035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.2561, device='cuda:0', dtype=torch.float64)
tensor([-2.1685, -3.5477, -5.0307, -5.8863, -6.8141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.0460, device='cuda:0', dtype=torch.float64)
tensor([-2.1314, -3.3969, -5.3909, -6.2675, -6.9682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.3183, device='cuda:0', dtype=torch.float64)
tensor([-2.1237, -3.2972, -5.6084, -6.2831, -7.0652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.7534, device='cuda:0', dtype=torch.float64)
tensor([-2.0978, -3.2499, -5.6572, -5.9605, -6.9547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.8594, device='cuda:0', dtype=torch.float64)
tensor([-2.0705, -3.2665, -5.5597, -5.5832, -6.6172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.6508, device='cuda:0', dtype=torch.float64)
tensor([-2.0760, -3.3514, -5.3563, -5.3307, -6.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.0029, device='cuda:0', dtype=torch.float64)
tensor([-2.1253, -3.4770, -5.1033, -5.1906, -6.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.4876, device='cuda:0', dtype=torch.float64)
tensor([-2.2035, -3.6069, -4.8577, -5.0834, -5.9805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.4779, device='cuda:0', dtype=torch.float64)
tensor([-2.2798, -3.7145, -4.6495, -4.9647, -5.9933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8968, device='cuda:0', dtype=torch.float64)
tensor([-2.3343, -3.7854, -4.4838, -4.8456, -6.0363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3942, device='cuda:0', dtype=torch.float64)
tensor([-2.3653, -3.8156, -4.3575, -4.7207, -6.0690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.5244, device='cuda:0', dtype=torch.float64)
tensor([-2.3769, -3.8133, -4.2704, -4.5821, -6.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8549, device='cuda:0', dtype=torch.float64)
tensor([-2.3738, -3.7931, -4.2268, -4.4574, -6.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.8569, device='cuda:0', dtype=torch.float64)
tensor([-2.3628, -3.7661, -4.2310, -4.3863, -6.0369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9757, device='cuda:0', dtype=torch.float64)
tensor([-2.3486, -3.7416, -4.2779, -4.3866, -6.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6980, device='cuda:0', dtype=torch.float64)
tensor([-2.3312, -3.7287, -4.3397, -4.4399, -5.9957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.5005, device='cuda:0', dtype=torch.float64)
tensor([-2.3089, -3.7346, -4.3722, -4.5130, -5.9864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3477, device='cuda:0', dtype=torch.float64)
tensor([-2.2812, -3.7520, -4.3502, -4.5885, -5.9822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7873, device='cuda:0', dtype=torch.float64)
tensor([-2.2517, -3.7581, -4.2916, -4.6727, -5.9742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5633, device='cuda:0', dtype=torch.float64)
tensor([-2.2265, -3.7433, -4.2358, -4.7772, -5.9558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2617, device='cuda:0', dtype=torch.float64)
tensor([-2.2105, -3.7220, -4.2085, -4.9007, -5.9295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3078, device='cuda:0', dtype=torch.float64)
tensor([-2.2045, -3.7087, -4.2140, -5.0283, -5.9057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9236, device='cuda:0', dtype=torch.float64)
tensor([-2.2052, -3.7043, -4.2458, -5.1394, -5.8920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9557, device='cuda:0', dtype=torch.float64)
tensor([-2.2065, -3.6991, -4.2925, -5.2159, -5.8861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2392, device='cuda:0', dtype=torch.float64)
tensor([-2.2047, -3.6818, -4.3413, -5.2450, -5.8827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4547, device='cuda:0', dtype=torch.float64)
tensor([-2.1997, -3.6506, -4.3814, -5.2257, -5.8807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4355, device='cuda:0', dtype=torch.float64)
tensor([-2.1934, -3.6158, -4.4045, -5.1663, -5.8828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1324, device='cuda:0', dtype=torch.float64)
tensor([-2.1867, -3.5881, -4.4007, -5.0786, -5.8894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5899, device='cuda:0', dtype=torch.float64)
tensor([-2.1800, -3.5715, -4.3640, -4.9782, -5.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.1736, -3.5638, -4.3014, -4.8810, -5.9022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7369, device='cuda:0', dtype=torch.float64)
tensor([-2.1678, -3.5622, -4.2305, -4.7980, -5.8994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8119, device='cuda:0', dtype=torch.float64)
tensor([-2.1638, -3.5641, -4.1658, -4.7302, -5.8873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9949, device='cuda:0', dtype=torch.float64)
tensor([-2.1635, -3.5684, -4.1133, -4.6740, -5.8667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9698, device='cuda:0', dtype=torch.float64)
tensor([-2.1686, -3.5754, -4.0735, -4.6296, -5.8408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6459, device='cuda:0', dtype=torch.float64)
tensor([-2.1797, -3.5854, -4.0448, -4.6025, -5.8123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2863, device='cuda:0', dtype=torch.float64)
tensor([-2.1941, -3.5956, -4.0255, -4.5962, -5.7834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1769, device='cuda:0', dtype=torch.float64)
tensor([-2.2083, -3.6018, -4.0164, -4.6070, -5.7558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1609, device='cuda:0', dtype=torch.float64)
tensor([-2.2185, -3.6001, -4.0206, -4.6279, -5.7312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1211, device='cuda:0', dtype=torch.float64)
tensor([-2.2232, -3.5894, -4.0399, -4.6528, -5.7110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0796, device='cuda:0', dtype=torch.float64)
tensor([-2.2223, -3.5712, -4.0722, -4.6782, -5.6956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9927, device='cuda:0', dtype=torch.float64)
tensor([-2.2173, -3.5491, -4.1119, -4.7018, -5.6854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8102, device='cuda:0', dtype=torch.float64)
tensor([-2.2102, -3.5271, -4.1530, -4.7211, -5.6789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6682, device='cuda:0', dtype=torch.float64)
tensor([-2.2022, -3.5091, -4.1888, -4.7346, -5.6743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6719, device='cuda:0', dtype=torch.float64)
tensor([-2.1942, -3.4975, -4.2096, -4.7411, -5.6689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7875, device='cuda:0', dtype=torch.float64)
tensor([-2.1869, -3.4922, -4.2066, -4.7406, -5.6610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8869, device='cuda:0', dtype=torch.float64)
tensor([-2.1815, -3.4912, -4.1773, -4.7336, -5.6514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8661, device='cuda:0', dtype=torch.float64)
tensor([-2.1787, -3.4914, -4.1302, -4.7214, -5.6425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7341, device='cuda:0', dtype=torch.float64)
tensor([-2.1785, -3.4906, -4.0805, -4.7057, -5.6361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4956, device='cuda:0', dtype=torch.float64)
tensor([-2.1800, -3.4877, -4.0401, -4.6902, -5.6327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3415, device='cuda:0', dtype=torch.float64)
tensor([-2.1826, -3.4833, -4.0156, -4.6774, -5.6328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4091, device='cuda:0', dtype=torch.float64)
tensor([-2.1854, -3.4789, -4.0081, -4.6681, -5.6351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5790, device='cuda:0', dtype=torch.float64)
tensor([-2.1878, -3.4758, -4.0162, -4.6619, -5.6387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5961, device='cuda:0', dtype=torch.float64)
tensor([-2.1896, -3.4740, -4.0356, -4.6588, -5.6423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4402, device='cuda:0', dtype=torch.float64)
tensor([-2.1908, -3.4732, -4.0596, -4.6589, -5.6441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2762, device='cuda:0', dtype=torch.float64)
tensor([-2.1913, -3.4715, -4.0802, -4.6617, -5.6429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2632, device='cuda:0', dtype=torch.float64)
tensor([-2.1911, -3.4678, -4.0911, -4.6650, -5.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3051, device='cuda:0', dtype=torch.float64)
tensor([-2.1900, -3.4613, -4.0909, -4.6669, -5.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2799, device='cuda:0', dtype=torch.float64)
tensor([-2.1886, -3.4537, -4.0826, -4.6665, -5.6282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1924, device='cuda:0', dtype=torch.float64)
tensor([-2.1874, -3.4468, -4.0700, -4.6643, -5.6228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1534, device='cuda:0', dtype=torch.float64)
tensor([-2.1863, -3.4417, -4.0565, -4.6614, -5.6177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1345, device='cuda:0', dtype=torch.float64)
tensor([-2.1857, -3.4392, -4.0441, -4.6584, -5.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-2.1857, -3.4395, -4.0345, -4.6536, -5.6085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0926, device='cuda:0', dtype=torch.float64)
tensor([-2.1861, -3.4416, -4.0274, -4.6470, -5.6042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0964, device='cuda:0', dtype=torch.float64)
tensor([-2.1864, -3.4437, -4.0232, -4.6383, -5.5995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1083, device='cuda:0', dtype=torch.float64)
tensor([-2.1859, -3.4446, -4.0207, -4.6293, -5.5935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0816, device='cuda:0', dtype=torch.float64)
tensor([-2.1847, -3.4442, -4.0190, -4.6206, -5.5868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0691, device='cuda:0', dtype=torch.float64)
tensor([-2.1828, -3.4429, -4.0189, -4.6141, -5.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-2.1809, -3.4415, -4.0199, -4.6087, -5.5712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([-2.1796, -3.4398, -4.0216, -4.6045, -5.5642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0424, device='cuda:0', dtype=torch.float64)
tensor([-2.1785, -3.4377, -4.0231, -4.6024, -5.5586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-2.1769, -3.4353, -4.0232, -4.6033, -5.5537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0138, device='cuda:0', dtype=torch.float64)
tensor([-2.1743, -3.4323, -4.0205, -4.6075, -5.5492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-2.1702, -3.4284, -4.0152, -4.6155, -5.5444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9639, device='cuda:0', dtype=torch.float64)
tensor([-2.1650, -3.4245, -4.0074, -4.6255, -5.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9617, device='cuda:0', dtype=torch.float64)
tensor([-2.1593, -3.4205, -4.0005, -4.6356, -5.5354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9453, device='cuda:0', dtype=torch.float64)
tensor([-2.1541, -3.4173, -3.9966, -4.6437, -5.5321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9311, device='cuda:0', dtype=torch.float64)
tensor([-2.1501, -3.4148, -3.9967, -4.6482, -5.5297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9303, device='cuda:0', dtype=torch.float64)
tensor([-2.1485, -3.4128, -3.9993, -4.6483, -5.5280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-2.1489, -3.4114, -4.0026, -4.6440, -5.5258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([-2.1509, -3.4104, -4.0047, -4.6375, -5.5226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9226, device='cuda:0', dtype=torch.float64)
tensor([-2.1537, -3.4093, -4.0034, -4.6306, -5.5179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9228, device='cuda:0', dtype=torch.float64)
tensor([-2.1566, -3.4081, -3.9992, -4.6244, -5.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9069, device='cuda:0', dtype=torch.float64)
tensor([-2.1591, -3.4066, -3.9925, -4.6191, -5.5060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8927, device='cuda:0', dtype=torch.float64)
tensor([-2.1611, -3.4052, -3.9852, -4.6141, -5.5012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9048, device='cuda:0', dtype=torch.float64)
tensor([-2.1622, -3.4041, -3.9783, -4.6105, -5.4979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8945, device='cuda:0', dtype=torch.float64)
tensor([-2.1619, -3.4024, -3.9736, -4.6089, -5.4952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8906, device='cuda:0', dtype=torch.float64)
tensor([-2.1609, -3.4004, -3.9702, -4.6084, -5.4922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8829, device='cuda:0', dtype=torch.float64)
tensor([-2.1585, -3.3971, -3.9679, -4.6091, -5.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8734, device='cuda:0', dtype=torch.float64)
tensor([-2.1557, -3.3931, -3.9655, -4.6098, -5.4829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8711, device='cuda:0', dtype=torch.float64)
tensor([-2.1529, -3.3882, -3.9632, -4.6096, -5.4766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8627, device='cuda:0', dtype=torch.float64)
tensor([-2.1508, -3.3833, -3.9617, -4.6078, -5.4691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8719, device='cuda:0', dtype=torch.float64)
tensor([-2.1503, -3.3796, -3.9606, -4.6045, -5.4613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8710, device='cuda:0', dtype=torch.float64)
tensor([-2.1508, -3.3776, -3.9602, -4.5998, -5.4549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8706, device='cuda:0', dtype=torch.float64)
tensor([-2.1519, -3.3766, -3.9597, -4.5952, -5.4501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8506, device='cuda:0', dtype=torch.float64)
tensor([-2.1533, -3.3760, -3.9587, -4.5907, -5.4462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8589, device='cuda:0', dtype=torch.float64)
tensor([-2.1538, -3.3744, -3.9580, -4.5879, -5.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8537, device='cuda:0', dtype=torch.float64)
tensor([-2.1534, -3.3720, -3.9563, -4.5863, -5.4413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8594, device='cuda:0', dtype=torch.float64)
tensor([-2.1525, -3.3701, -3.9533, -4.5856, -5.4387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-2.1516, -3.3691, -3.9484, -4.5846, -5.4354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8502, device='cuda:0', dtype=torch.float64)
tensor([-2.1511, -3.3681, -3.9420, -4.5820, -5.4324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8499, device='cuda:0', dtype=torch.float64)
tensor([-2.1510, -3.3677, -3.9364, -4.5778, -5.4288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-2.1510, -3.3670, -3.9327, -4.5727, -5.4251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8572, device='cuda:0', dtype=torch.float64)
tensor([-2.1505, -3.3658, -3.9308, -4.5674, -5.4200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8500, device='cuda:0', dtype=torch.float64)
tensor([-2.1492, -3.3637, -3.9301, -4.5634, -5.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8497, device='cuda:0', dtype=torch.float64)
tensor([-2.1474, -3.3611, -3.9295, -4.5609, -5.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8522, device='cuda:0', dtype=torch.float64)
tensor([-2.1458, -3.3588, -3.9270, -4.5592, -5.4018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8364, device='cuda:0', dtype=torch.float64)
tensor([-2.1447, -3.3569, -3.9238, -4.5573, -5.3966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8544, device='cuda:0', dtype=torch.float64)
tensor([-2.1440, -3.3557, -3.9219, -4.5550, -5.3921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8407, device='cuda:0', dtype=torch.float64)
tensor([-2.1434, -3.3547, -3.9210, -4.5530, -5.3886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8437, device='cuda:0', dtype=torch.float64)
tensor([-2.1425, -3.3529, -3.9213, -4.5521, -5.3857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8544, device='cuda:0', dtype=torch.float64)
tensor([-2.1409, -3.3503, -3.9207, -4.5527, -5.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8362, device='cuda:0', dtype=torch.float64)
tensor([-2.1394, -3.3477, -3.9176, -4.5528, -5.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8467, device='cuda:0', dtype=torch.float64)
tensor([-2.1380, -3.3458, -3.9129, -4.5521, -5.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8452, device='cuda:0', dtype=torch.float64)
tensor([-2.1375, -3.3446, -3.9064, -4.5487, -5.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8459, device='cuda:0', dtype=torch.float64)
tensor([-2.1379, -3.3433, -3.9005, -4.5435, -5.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8388, device='cuda:0', dtype=torch.float64)
tensor([-2.1386, -3.3424, -3.8965, -4.5377, -5.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8503, device='cuda:0', dtype=torch.float64)
tensor([-2.1390, -3.3414, -3.8941, -4.5329, -5.3500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8546, device='cuda:0', dtype=torch.float64)
tensor([-2.1388, -3.3406, -3.8926, -4.5300, -5.3444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8595, device='cuda:0', dtype=torch.float64)
tensor([-2.1384, -3.3399, -3.8914, -4.5280, -5.3384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8624, device='cuda:0', dtype=torch.float64)
tensor([-2.1377, -3.3388, -3.8899, -4.5259, -5.3328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8739, device='cuda:0', dtype=torch.float64)
tensor([-2.1371, -3.3380, -3.8878, -4.5245, -5.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8802, device='cuda:0', dtype=torch.float64)
tensor([-2.1366, -3.3371, -3.8859, -4.5233, -5.3223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8546, device='cuda:0', dtype=torch.float64)
tensor([-2.1358, -3.3367, -3.8849, -4.5222, -5.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8589, device='cuda:0', dtype=torch.float64)
tensor([-2.1353, -3.3358, -3.8834, -4.5201, -5.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8720, device='cuda:0', dtype=torch.float64)
tensor([-2.1344, -3.3339, -3.8823, -4.5178, -5.3098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8421, device='cuda:0', dtype=torch.float64)
tensor([-2.1331, -3.3313, -3.8817, -4.5166, -5.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8437, device='cuda:0', dtype=torch.float64)
tensor([-2.1316, -3.3288, -3.8814, -4.5154, -5.3010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8410, device='cuda:0', dtype=torch.float64)
tensor([-2.1305, -3.3260, -3.8805, -4.5141, -5.2967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8563, device='cuda:0', dtype=torch.float64)
tensor([-2.1297, -3.3239, -3.8787, -4.5118, -5.2923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8365, device='cuda:0', dtype=torch.float64)
tensor([-2.1299, -3.3216, -3.8761, -4.5095, -5.2872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([-2.1305, -3.3201, -3.8726, -4.5065, -5.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8420, device='cuda:0', dtype=torch.float64)
tensor([-2.1312, -3.3191, -3.8689, -4.5024, -5.2776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8181, device='cuda:0', dtype=torch.float64)
tensor([-2.1311, -3.3180, -3.8656, -4.4984, -5.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8265, device='cuda:0', dtype=torch.float64)
tensor([-2.1303, -3.3161, -3.8636, -4.4955, -5.2714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8207, device='cuda:0', dtype=torch.float64)
tensor([-2.1293, -3.3151, -3.8625, -4.4928, -5.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8180, device='cuda:0', dtype=torch.float64)
tensor([-2.1279, -3.3134, -3.8615, -4.4903, -5.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8199, device='cuda:0', dtype=torch.float64)
tensor([-2.1266, -3.3112, -3.8602, -4.4882, -5.2599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8124, device='cuda:0', dtype=torch.float64)
tensor([-2.1252, -3.3087, -3.8584, -4.4877, -5.2554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7953, device='cuda:0', dtype=torch.float64)
tensor([-2.1240, -3.3061, -3.8550, -4.4873, -5.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7938, device='cuda:0', dtype=torch.float64)
tensor([-2.1236, -3.3035, -3.8506, -4.4866, -5.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8025, device='cuda:0', dtype=torch.float64)
tensor([-2.1229, -3.3006, -3.8471, -4.4864, -5.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8047, device='cuda:0', dtype=torch.float64)
tensor([-2.1226, -3.2981, -3.8437, -4.4847, -5.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8059, device='cuda:0', dtype=torch.float64)
tensor([-2.1224, -3.2960, -3.8421, -4.4831, -5.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8126, device='cuda:0', dtype=torch.float64)
tensor([-2.1226, -3.2949, -3.8407, -4.4804, -5.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([-2.1221, -3.2945, -3.8387, -4.4777, -5.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7884, device='cuda:0', dtype=torch.float64)
tensor([-2.1217, -3.2950, -3.8362, -4.4741, -5.2272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8004, device='cuda:0', dtype=torch.float64)
tensor([-2.1215, -3.2957, -3.8344, -4.4703, -5.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7848, device='cuda:0', dtype=torch.float64)
tensor([-2.1215, -3.2957, -3.8324, -4.4678, -5.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7833, device='cuda:0', dtype=torch.float64)
tensor([-2.1211, -3.2947, -3.8316, -4.4675, -5.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8028, device='cuda:0', dtype=torch.float64)
tensor([-2.1200, -3.2912, -3.8316, -4.4696, -5.2146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7852, device='cuda:0', dtype=torch.float64)
tensor([-2.1185, -3.2859, -3.8317, -4.4710, -5.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8132, device='cuda:0', dtype=torch.float64)
tensor([-2.1174, -3.2813, -3.8303, -4.4694, -5.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7793, device='cuda:0', dtype=torch.float64)
tensor([-2.1161, -3.2783, -3.8275, -4.4649, -5.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7824, device='cuda:0', dtype=torch.float64)
tensor([-2.1146, -3.2764, -3.8233, -4.4593, -5.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7864, device='cuda:0', dtype=torch.float64)
tensor([-2.1130, -3.2749, -3.8188, -4.4546, -5.1874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7728, device='cuda:0', dtype=torch.float64)
tensor([-2.1117, -3.2743, -3.8154, -4.4509, -5.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7888, device='cuda:0', dtype=torch.float64)
tensor([-2.1108, -3.2743, -3.8130, -4.4456, -5.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7875, device='cuda:0', dtype=torch.float64)
tensor([-2.1101, -3.2751, -3.8121, -4.4419, -5.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7789, device='cuda:0', dtype=torch.float64)
tensor([-2.1106, -3.2760, -3.8105, -4.4389, -5.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7689, device='cuda:0', dtype=torch.float64)
tensor([-2.1115, -3.2755, -3.8086, -4.4367, -5.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7901, device='cuda:0', dtype=torch.float64)
tensor([-2.1130, -3.2750, -3.8064, -4.4345, -5.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7930, device='cuda:0', dtype=torch.float64)
tensor([-2.1151, -3.2741, -3.8035, -4.4287, -5.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7803, device='cuda:0', dtype=torch.float64)
tensor([-2.1158, -3.2716, -3.8005, -4.4248, -5.1472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7697, device='cuda:0', dtype=torch.float64)
tensor([-2.1151, -3.2693, -3.7982, -4.4225, -5.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7850, device='cuda:0', dtype=torch.float64)
tensor([-2.1143, -3.2676, -3.7966, -4.4200, -5.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7797, device='cuda:0', dtype=torch.float64)
tensor([-2.1122, -3.2659, -3.7968, -4.4181, -5.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7667, device='cuda:0', dtype=torch.float64)
tensor([-2.1090, -3.2647, -3.7971, -4.4192, -5.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7546, device='cuda:0', dtype=torch.float64)
tensor([-2.1059, -3.2636, -3.7966, -4.4203, -5.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7810, device='cuda:0', dtype=torch.float64)
tensor([-2.1035, -3.2615, -3.7962, -4.4220, -5.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7780, device='cuda:0', dtype=torch.float64)
tensor([-2.1012, -3.2576, -3.7964, -4.4231, -5.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7726, device='cuda:0', dtype=torch.float64)
tensor([-2.1003, -3.2552, -3.7963, -4.4225, -5.1156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7757, device='cuda:0', dtype=torch.float64)
tensor([-2.1008, -3.2538, -3.7951, -4.4184, -5.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7847, device='cuda:0', dtype=torch.float64)
tensor([-2.1025, -3.2531, -3.7917, -4.4119, -5.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7748, device='cuda:0', dtype=torch.float64)
tensor([-2.1044, -3.2521, -3.7869, -4.4068, -5.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7732, device='cuda:0', dtype=torch.float64)
tensor([-2.1055, -3.2520, -3.7821, -4.4047, -5.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7494, device='cuda:0', dtype=torch.float64)
tensor([-2.1072, -3.2518, -3.7771, -4.4040, -5.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7779, device='cuda:0', dtype=torch.float64)
tensor([-2.1084, -3.2520, -3.7746, -4.4021, -5.0903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7822, device='cuda:0', dtype=torch.float64)
tensor([-2.1087, -3.2525, -3.7743, -4.3987, -5.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7485, device='cuda:0', dtype=torch.float64)
tensor([-2.1084, -3.2521, -3.7745, -4.3950, -5.0808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7489, device='cuda:0', dtype=torch.float64)
tensor([-2.1057, -3.2498, -3.7750, -4.3934, -5.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7743, device='cuda:0', dtype=torch.float64)
tensor([-2.1029, -3.2474, -3.7739, -4.3924, -5.0728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7519, device='cuda:0', dtype=torch.float64)
tensor([-2.1008, -3.2449, -3.7705, -4.3908, -5.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7788, device='cuda:0', dtype=torch.float64)
tensor([-2.0999, -3.2416, -3.7670, -4.3890, -5.0655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7698, device='cuda:0', dtype=torch.float64)
tensor([-2.1000, -3.2394, -3.7664, -4.3866, -5.0609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([-2.1000, -3.2359, -3.7696, -4.3836, -5.0563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7493, device='cuda:0', dtype=torch.float64)
tensor([-2.0995, -3.2331, -3.7714, -4.3821, -5.0526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7606, device='cuda:0', dtype=torch.float64)
tensor([-2.0973, -3.2310, -3.7716, -4.3834, -5.0499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7808, device='cuda:0', dtype=torch.float64)
tensor([-2.0950, -3.2282, -3.7683, -4.3843, -5.0456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8061, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -3.2255, -3.7628, -4.3833, -5.0415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7643, device='cuda:0', dtype=torch.float64)
tensor([-2.0911, -3.2226, -3.7568, -4.3808, -5.0380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7840, device='cuda:0', dtype=torch.float64)
tensor([-2.0904, -3.2223, -3.7529, -4.3782, -5.0340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7499, device='cuda:0', dtype=torch.float64)
tensor([-2.0917, -3.2238, -3.7495, -4.3738, -5.0294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7387, device='cuda:0', dtype=torch.float64)
tensor([-2.0937, -3.2271, -3.7479, -4.3686, -5.0243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7638, device='cuda:0', dtype=torch.float64)
tensor([-2.0962, -3.2300, -3.7481, -4.3638, -5.0189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7341, device='cuda:0', dtype=torch.float64)
tensor([-2.0967, -3.2292, -3.7477, -4.3589, -5.0146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-2.0956, -3.2250, -3.7474, -4.3572, -5.0101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7359, device='cuda:0', dtype=torch.float64)
tensor([-2.0934, -3.2215, -3.7468, -4.3569, -5.0049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7432, device='cuda:0', dtype=torch.float64)
tensor([-2.0915, -3.2204, -3.7449, -4.3566, -5.0001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7562, device='cuda:0', dtype=torch.float64)
tensor([-2.0908, -3.2199, -3.7429, -4.3547, -4.9941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7670, device='cuda:0', dtype=torch.float64)
tensor([-2.0905, -3.2182, -3.7406, -4.3533, -4.9865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7477, device='cuda:0', dtype=torch.float64)
tensor([-2.0904, -3.2143, -3.7384, -4.3518, -4.9796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7278, device='cuda:0', dtype=torch.float64)
tensor([-2.0898, -3.2108, -3.7363, -4.3510, -4.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7493, device='cuda:0', dtype=torch.float64)
tensor([-2.0892, -3.2101, -3.7339, -4.3508, -4.9756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7287, device='cuda:0', dtype=torch.float64)
tensor([-2.0884, -3.2110, -3.7315, -4.3492, -4.9746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7527, device='cuda:0', dtype=torch.float64)
tensor([-2.0884, -3.2114, -3.7289, -4.3477, -4.9712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7709, device='cuda:0', dtype=torch.float64)
tensor([-2.0880, -3.2120, -3.7261, -4.3451, -4.9648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7963, device='cuda:0', dtype=torch.float64)
tensor([-2.0888, -3.2112, -3.7242, -4.3396, -4.9586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7609, device='cuda:0', dtype=torch.float64)
tensor([-2.0911, -3.2104, -3.7201, -4.3320, -4.9543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7634, device='cuda:0', dtype=torch.float64)
tensor([-2.0924, -3.2089, -3.7162, -4.3275, -4.9523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7491, device='cuda:0', dtype=torch.float64)
tensor([-2.0926, -3.2066, -3.7134, -4.3265, -4.9515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7801, device='cuda:0', dtype=torch.float64)
tensor([-2.0905, -3.2043, -3.7139, -4.3272, -4.9480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7723, device='cuda:0', dtype=torch.float64)
tensor([-2.0885, -3.2032, -3.7169, -4.3276, -4.9433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8175, device='cuda:0', dtype=torch.float64)
tensor([-2.0877, -3.2008, -3.7214, -4.3258, -4.9380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7563, device='cuda:0', dtype=torch.float64)
tensor([-2.0867, -3.1994, -3.7225, -4.3237, -4.9311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7397, device='cuda:0', dtype=torch.float64)
tensor([-2.0865, -3.2000, -3.7191, -4.3211, -4.9229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7146, device='cuda:0', dtype=torch.float64)
tensor([-2.0859, -3.1999, -3.7127, -4.3175, -4.9192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7916, device='cuda:0', dtype=torch.float64)
tensor([-2.0845, -3.1978, -3.7091, -4.3143, -4.9155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-2.0820, -3.1945, -3.7076, -4.3119, -4.9143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7061, device='cuda:0', dtype=torch.float64)
tensor([-2.0794, -3.1908, -3.7077, -4.3116, -4.9113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7851, device='cuda:0', dtype=torch.float64)
tensor([-2.0771, -3.1875, -3.7072, -4.3138, -4.9067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7591, device='cuda:0', dtype=torch.float64)
tensor([-2.0765, -3.1854, -3.7061, -4.3136, -4.9022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7431, device='cuda:0', dtype=torch.float64)
tensor([-2.0772, -3.1830, -3.7047, -4.3099, -4.8984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7490, device='cuda:0', dtype=torch.float64)
tensor([-2.0786, -3.1815, -3.7047, -4.3027, -4.8948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7387, device='cuda:0', dtype=torch.float64)
tensor([-2.0809, -3.1813, -3.7032, -4.2941, -4.8921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-2.0825, -3.1820, -3.7003, -4.2895, -4.8880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7210, device='cuda:0', dtype=torch.float64)
tensor([-2.0827, -3.1838, -3.6949, -4.2880, -4.8808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7251, device='cuda:0', dtype=torch.float64)
tensor([-2.0819, -3.1849, -3.6888, -4.2877, -4.8736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7726, device='cuda:0', dtype=torch.float64)
tensor([-2.0808, -3.1831, -3.6843, -4.2864, -4.8691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7199, device='cuda:0', dtype=torch.float64)
tensor([-2.0787, -3.1807, -3.6836, -4.2877, -4.8655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7513, device='cuda:0', dtype=torch.float64)
tensor([-2.0760, -3.1777, -3.6844, -4.2902, -4.8612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7287, device='cuda:0', dtype=torch.float64)
tensor([-2.0739, -3.1739, -3.6866, -4.2909, -4.8567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7198, device='cuda:0', dtype=torch.float64)
tensor([-2.0728, -3.1721, -3.6889, -4.2898, -4.8545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7534, device='cuda:0', dtype=torch.float64)
tensor([-2.0725, -3.1701, -3.6930, -4.2851, -4.8525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7139, device='cuda:0', dtype=torch.float64)
tensor([-2.0722, -3.1680, -3.6951, -4.2821, -4.8499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7072, device='cuda:0', dtype=torch.float64)
tensor([-2.0716, -3.1665, -3.6902, -4.2816, -4.8473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7214, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -3.1663, -3.6817, -4.2837, -4.8439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7300, device='cuda:0', dtype=torch.float64)
tensor([-2.0709, -3.1678, -3.6745, -4.2873, -4.8388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7289, device='cuda:0', dtype=torch.float64)
tensor([-2.0708, -3.1694, -3.6700, -4.2868, -4.8331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7100, device='cuda:0', dtype=torch.float64)
tensor([-2.0709, -3.1711, -3.6674, -4.2820, -4.8300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7092, device='cuda:0', dtype=torch.float64)
tensor([-2.0701, -3.1702, -3.6664, -4.2782, -4.8266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7205, device='cuda:0', dtype=torch.float64)
tensor([-2.0688, -3.1665, -3.6667, -4.2726, -4.8228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7586, device='cuda:0', dtype=torch.float64)
tensor([-2.0686, -3.1623, -3.6667, -4.2644, -4.8200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7683, device='cuda:0', dtype=torch.float64)
tensor([-2.0697, -3.1605, -3.6662, -4.2560, -4.8152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7192, device='cuda:0', dtype=torch.float64)
tensor([-2.0706, -3.1604, -3.6667, -4.2514, -4.8086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7301, device='cuda:0', dtype=torch.float64)
tensor([-2.0711, -3.1609, -3.6664, -4.2515, -4.8014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7339, device='cuda:0', dtype=torch.float64)
tensor([-2.0711, -3.1614, -3.6647, -4.2522, -4.7968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7636, device='cuda:0', dtype=torch.float64)
tensor([-2.0693, -3.1616, -3.6614, -4.2539, -4.7947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7548, device='cuda:0', dtype=torch.float64)
tensor([-2.0666, -3.1613, -3.6580, -4.2537, -4.7940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7669, device='cuda:0', dtype=torch.float64)
tensor([-2.0630, -3.1605, -3.6554, -4.2550, -4.7920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7267, device='cuda:0', dtype=torch.float64)
tensor([-2.0602, -3.1608, -3.6497, -4.2558, -4.7897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7537, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -3.1597, -3.6471, -4.2534, -4.7881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7675, device='cuda:0', dtype=torch.float64)
tensor([-2.0587, -3.1575, -3.6462, -4.2482, -4.7847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([-2.0594, -3.1529, -3.6503, -4.2477, -4.7782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7146, device='cuda:0', dtype=torch.float64)
tensor([-2.0596, -3.1503, -3.6526, -4.2480, -4.7719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7019, device='cuda:0', dtype=torch.float64)
tensor([-2.0608, -3.1482, -3.6511, -4.2478, -4.7672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7495, device='cuda:0', dtype=torch.float64)
tensor([-2.0608, -3.1480, -3.6490, -4.2419, -4.7645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7150, device='cuda:0', dtype=torch.float64)
tensor([-2.0598, -3.1498, -3.6446, -4.2388, -4.7589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7191, device='cuda:0', dtype=torch.float64)
tensor([-2.0594, -3.1507, -3.6386, -4.2383, -4.7528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7078, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -3.1501, -3.6341, -4.2384, -4.7458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7288, device='cuda:0', dtype=torch.float64)
tensor([-2.0579, -3.1497, -3.6333, -4.2378, -4.7397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-2.0597, -3.1517, -3.6322, -4.2326, -4.7388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7175, device='cuda:0', dtype=torch.float64)
tensor([-2.0619, -3.1500, -3.6326, -4.2285, -4.7413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6809, device='cuda:0', dtype=torch.float64)
tensor([-2.0635, -3.1462, -3.6310, -4.2269, -4.7424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7128, device='cuda:0', dtype=torch.float64)
tensor([-2.0642, -3.1420, -3.6303, -4.2255, -4.7404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7230, device='cuda:0', dtype=torch.float64)
tensor([-2.0642, -3.1390, -3.6295, -4.2238, -4.7362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7087, device='cuda:0', dtype=torch.float64)
tensor([-2.0636, -3.1364, -3.6277, -4.2203, -4.7304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7090, device='cuda:0', dtype=torch.float64)
tensor([-2.0619, -3.1353, -3.6261, -4.2158, -4.7266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7123, device='cuda:0', dtype=torch.float64)
tensor([-2.0596, -3.1354, -3.6228, -4.2107, -4.7225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7932, device='cuda:0', dtype=torch.float64)
tensor([-2.0574, -3.1351, -3.6223, -4.2100, -4.7129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7404, device='cuda:0', dtype=torch.float64)
tensor([-2.0550, -3.1347, -3.6251, -4.2129, -4.7045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7748, device='cuda:0', dtype=torch.float64)
tensor([-2.0553, -3.1334, -3.6272, -4.2102, -4.6988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7755, device='cuda:0', dtype=torch.float64)
tensor([-2.0588, -3.1351, -3.6228, -4.2046, -4.6946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6851, device='cuda:0', dtype=torch.float64)
tensor([-2.0615, -3.1359, -3.6133, -4.1986, -4.6928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8188, device='cuda:0', dtype=torch.float64)
tensor([-2.0600, -3.1333, -3.6078, -4.1988, -4.6901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7960, device='cuda:0', dtype=torch.float64)
tensor([-2.0574, -3.1302, -3.6079, -4.1992, -4.6863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7191, device='cuda:0', dtype=torch.float64)
tensor([-2.0547, -3.1298, -3.6094, -4.1988, -4.6809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7530, device='cuda:0', dtype=torch.float64)
tensor([-2.0550, -3.1327, -3.6067, -4.1944, -4.6737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7347, device='cuda:0', dtype=torch.float64)
tensor([-2.0563, -3.1366, -3.5983, -4.1888, -4.6668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7569, device='cuda:0', dtype=torch.float64)
tensor([-2.0541, -3.1342, -3.5964, -4.1892, -4.6608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7368, device='cuda:0', dtype=torch.float64)
tensor([-2.0496, -3.1289, -3.5995, -4.1946, -4.6579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7003, device='cuda:0', dtype=torch.float64)
tensor([-2.0460, -3.1241, -3.6040, -4.1968, -4.6606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7221, device='cuda:0', dtype=torch.float64)
tensor([-2.0453, -3.1238, -3.6059, -4.1965, -4.6664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-2.0467, -3.1271, -3.6027, -4.1934, -4.6692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7483, device='cuda:0', dtype=torch.float64)
tensor([-2.0497, -3.1288, -3.5976, -4.1864, -4.6683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7789, device='cuda:0', dtype=torch.float64)
tensor([-2.0505, -3.1239, -3.5931, -4.1869, -4.6638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8084, device='cuda:0', dtype=torch.float64)
tensor([-2.0488, -3.1164, -3.5924, -4.1860, -4.6592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7624, device='cuda:0', dtype=torch.float64)
tensor([-2.0474, -3.1104, -3.5933, -4.1844, -4.6592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7179, device='cuda:0', dtype=torch.float64)
tensor([-2.0476, -3.1104, -3.5923, -4.1805, -4.6556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-2.0489, -3.1153, -3.5888, -4.1745, -4.6456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7204, device='cuda:0', dtype=torch.float64)
tensor([-2.0501, -3.1198, -3.5826, -4.1692, -4.6369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8311, device='cuda:0', dtype=torch.float64)
tensor([-2.0512, -3.1220, -3.5749, -4.1632, -4.6307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7221, device='cuda:0', dtype=torch.float64)
tensor([-2.0515, -3.1224, -3.5683, -4.1614, -4.6264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-2.0532, -3.1203, -3.5631, -4.1599, -4.6213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6935, device='cuda:0', dtype=torch.float64)
tensor([-2.0537, -3.1159, -3.5627, -4.1590, -4.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7517, device='cuda:0', dtype=torch.float64)
tensor([-2.0536, -3.1129, -3.5658, -4.1543, -4.6185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6874, device='cuda:0', dtype=torch.float64)
tensor([-2.0525, -3.1134, -3.5695, -4.1479, -4.6148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7839, device='cuda:0', dtype=torch.float64)
tensor([-2.0487, -3.1134, -3.5706, -4.1454, -4.6126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7146, device='cuda:0', dtype=torch.float64)
tensor([-2.0447, -3.1126, -3.5739, -4.1519, -4.6108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7564, device='cuda:0', dtype=torch.float64)
tensor([-2.0428, -3.1109, -3.5766, -4.1576, -4.6088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7804, device='cuda:0', dtype=torch.float64)
tensor([-2.0447, -3.1110, -3.5758, -4.1547, -4.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8073, device='cuda:0', dtype=torch.float64)
tensor([-2.0452, -3.1092, -3.5772, -4.1519, -4.5902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7546, device='cuda:0', dtype=torch.float64)
tensor([-2.0440, -3.1059, -3.5810, -4.1488, -4.5777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8619, device='cuda:0', dtype=torch.float64)
tensor([-2.0449, -3.1036, -3.5792, -4.1422, -4.5730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7206, device='cuda:0', dtype=torch.float64)
tensor([-2.0456, -3.1002, -3.5781, -4.1399, -4.5761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7732, device='cuda:0', dtype=torch.float64)
tensor([-2.0436, -3.0972, -3.5788, -4.1430, -4.5801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8040, device='cuda:0', dtype=torch.float64)
tensor([-2.0419, -3.0980, -3.5759, -4.1475, -4.5761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7300, device='cuda:0', dtype=torch.float64)
tensor([-2.0417, -3.0987, -3.5699, -4.1468, -4.5730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7594, device='cuda:0', dtype=torch.float64)
tensor([-2.0448, -3.0995, -3.5619, -4.1435, -4.5702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7201, device='cuda:0', dtype=torch.float64)
tensor([-2.0477, -3.0974, -3.5595, -4.1412, -4.5680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7048, device='cuda:0', dtype=torch.float64)
tensor([-2.0462, -3.0937, -3.5581, -4.1431, -4.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7127, device='cuda:0', dtype=torch.float64)
tensor([-2.0442, -3.0878, -3.5565, -4.1452, -4.5690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6808, device='cuda:0', dtype=torch.float64)
tensor([-2.0437, -3.0838, -3.5566, -4.1463, -4.5688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7439, device='cuda:0', dtype=torch.float64)
tensor([-2.0438, -3.0821, -3.5575, -4.1388, -4.5640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7845, device='cuda:0', dtype=torch.float64)
tensor([-2.0453, -3.0840, -3.5576, -4.1284, -4.5570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7858, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -3.0829, -3.5534, -4.1236, -4.5464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7702, device='cuda:0', dtype=torch.float64)
tensor([-2.0422, -3.0820, -3.5447, -4.1248, -4.5388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8014, device='cuda:0', dtype=torch.float64)
tensor([-2.0394, -3.0778, -3.5403, -4.1357, -4.5286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7570, device='cuda:0', dtype=torch.float64)
tensor([-2.0382, -3.0752, -3.5424, -4.1365, -4.5217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7234, device='cuda:0', dtype=torch.float64)
tensor([-2.0400, -3.0764, -3.5435, -4.1269, -4.5166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8275, device='cuda:0', dtype=torch.float64)
tensor([-2.0452, -3.0804, -3.5437, -4.1130, -4.5207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7393, device='cuda:0', dtype=torch.float64)
tensor([-2.0496, -3.0829, -3.5422, -4.1048, -4.5245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8665, device='cuda:0', dtype=torch.float64)
tensor([-2.0494, -3.0807, -3.5438, -4.1033, -4.5226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7203, device='cuda:0', dtype=torch.float64)
tensor([-2.0478, -3.0769, -3.5446, -4.1060, -4.5174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8730, device='cuda:0', dtype=torch.float64)
tensor([-2.0466, -3.0782, -3.5418, -4.1047, -4.5110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([-2.0443, -3.0812, -3.5415, -4.1039, -4.5051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7539, device='cuda:0', dtype=torch.float64)
tensor([-2.0372, -3.0819, -3.5406, -4.1092, -4.5022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7240, device='cuda:0', dtype=torch.float64)
tensor([-2.0294, -3.0790, -3.5383, -4.1161, -4.5022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7879, device='cuda:0', dtype=torch.float64)
tensor([-2.0226, -3.0730, -3.5412, -4.1138, -4.5015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7048, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -3.0690, -3.5439, -4.1096, -4.5008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7273, device='cuda:0', dtype=torch.float64)
tensor([-2.0196, -3.0718, -3.5418, -4.1012, -4.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8011, device='cuda:0', dtype=torch.float64)
tensor([-2.0250, -3.0791, -3.5362, -4.0952, -4.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7850, device='cuda:0', dtype=torch.float64)
tensor([-2.0282, -3.0834, -3.5333, -4.0950, -4.4848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7842, device='cuda:0', dtype=torch.float64)
tensor([-2.0309, -3.0811, -3.5342, -4.0961, -4.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7903, device='cuda:0', dtype=torch.float64)
tensor([-2.0361, -3.0806, -3.5359, -4.0841, -4.4830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7743, device='cuda:0', dtype=torch.float64)
tensor([-2.0376, -3.0778, -3.5386, -4.0735, -4.4875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8529, device='cuda:0', dtype=torch.float64)
tensor([-2.0374, -3.0750, -3.5352, -4.0714, -4.4916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9467, device='cuda:0', dtype=torch.float64)
tensor([-2.0352, -3.0718, -3.5293, -4.0709, -4.4904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8073, device='cuda:0', dtype=torch.float64)
tensor([-2.0301, -3.0692, -3.5223, -4.0741, -4.4815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7448, device='cuda:0', dtype=torch.float64)
tensor([-2.0277, -3.0711, -3.5184, -4.0756, -4.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9034, device='cuda:0', dtype=torch.float64)
tensor([-2.0262, -3.0776, -3.5154, -4.0791, -4.4677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6951, device='cuda:0', dtype=torch.float64)
tensor([-2.0266, -3.0818, -3.5141, -4.0807, -4.4641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7955, device='cuda:0', dtype=torch.float64)
tensor([-2.0273, -3.0806, -3.5131, -4.0788, -4.4619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7876, device='cuda:0', dtype=torch.float64)
tensor([-2.0250, -3.0736, -3.5164, -4.0829, -4.4592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8922, device='cuda:0', dtype=torch.float64)
tensor([-2.0251, -3.0691, -3.5179, -4.0908, -4.4593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7796, device='cuda:0', dtype=torch.float64)
tensor([-2.0266, -3.0684, -3.5193, -4.0973, -4.4606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-2.0324, -3.0704, -3.5142, -4.0888, -4.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8505, device='cuda:0', dtype=torch.float64)
tensor([-2.0353, -3.0679, -3.5033, -4.0749, -4.4575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9845, device='cuda:0', dtype=torch.float64)
tensor([-2.0341, -3.0633, -3.5038, -4.0692, -4.4463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7825, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -3.0581, -3.5049, -4.0692, -4.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8439, device='cuda:0', dtype=torch.float64)
tensor([-2.0263, -3.0561, -3.5061, -4.0680, -4.4375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9663, device='cuda:0', dtype=torch.float64)
tensor([-2.0236, -3.0573, -3.5069, -4.0588, -4.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8064, device='cuda:0', dtype=torch.float64)
tensor([-2.0191, -3.0574, -3.5106, -4.0579, -4.4427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8252, device='cuda:0', dtype=torch.float64)
tensor([-2.0187, -3.0552, -3.5090, -4.0668, -4.4392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7739, device='cuda:0', dtype=torch.float64)
tensor([-2.0220, -3.0531, -3.5075, -4.0694, -4.4254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8059, device='cuda:0', dtype=torch.float64)
tensor([-2.0271, -3.0571, -3.5071, -4.0510, -4.4110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6612, device='cuda:0', dtype=torch.float64)
tensor([-2.0311, -3.0615, -3.5065, -4.0308, -4.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9525, device='cuda:0', dtype=torch.float64)
tensor([-2.0304, -3.0619, -3.5066, -4.0264, -4.4035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7881, device='cuda:0', dtype=torch.float64)
tensor([-2.0254, -3.0569, -3.5083, -4.0306, -4.4019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8126, device='cuda:0', dtype=torch.float64)
tensor([-2.0233, -3.0548, -3.5034, -4.0330, -4.4027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8851, device='cuda:0', dtype=torch.float64)
tensor([-2.0253, -3.0586, -3.4879, -4.0245, -4.4029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7870, device='cuda:0', dtype=torch.float64)
tensor([-2.0297, -3.0631, -3.4772, -4.0213, -4.3992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-2.0299, -3.0589, -3.4808, -4.0317, -4.3932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8559, device='cuda:0', dtype=torch.float64)
tensor([-2.0247, -3.0472, -3.4979, -4.0435, -4.3865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7835, device='cuda:0', dtype=torch.float64)
tensor([-2.0216, -3.0428, -3.5084, -4.0452, -4.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8020, device='cuda:0', dtype=torch.float64)
tensor([-2.0176, -3.0446, -3.5097, -4.0444, -4.3798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7862, device='cuda:0', dtype=torch.float64)
tensor([-2.0139, -3.0499, -3.5038, -4.0428, -4.3812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9235, device='cuda:0', dtype=torch.float64)
tensor([-2.0127, -3.0550, -3.4983, -4.0346, -4.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7867, device='cuda:0', dtype=torch.float64)
tensor([-2.0107, -3.0539, -3.4933, -4.0296, -4.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8277, device='cuda:0', dtype=torch.float64)
tensor([-2.0086, -3.0506, -3.4843, -4.0315, -4.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8394, device='cuda:0', dtype=torch.float64)
tensor([-2.0131, -3.0488, -3.4659, -4.0321, -4.3681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7715, device='cuda:0', dtype=torch.float64)
tensor([-2.0192, -3.0454, -3.4554, -4.0278, -4.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9958, device='cuda:0', dtype=torch.float64)
tensor([-2.0256, -3.0373, -3.4532, -4.0160, -4.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7689, device='cuda:0', dtype=torch.float64)
tensor([-2.0270, -3.0310, -3.4580, -4.0083, -4.3537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9232, device='cuda:0', dtype=torch.float64)
tensor([-2.0249, -3.0302, -3.4660, -4.0115, -4.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7775, device='cuda:0', dtype=torch.float64)
tensor([-2.0235, -3.0352, -3.4704, -4.0170, -4.3515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9115, device='cuda:0', dtype=torch.float64)
tensor([-2.0223, -3.0373, -3.4734, -4.0164, -4.3500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8745, device='cuda:0', dtype=torch.float64)
tensor([-2.0184, -3.0338, -3.4760, -4.0143, -4.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9345, device='cuda:0', dtype=torch.float64)
tensor([-2.0145, -3.0296, -3.4741, -4.0220, -4.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7642, device='cuda:0', dtype=torch.float64)
tensor([-2.0155, -3.0305, -3.4653, -4.0269, -4.3453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9483, device='cuda:0', dtype=torch.float64)
tensor([-2.0206, -3.0310, -3.4620, -4.0186, -4.3407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8360, device='cuda:0', dtype=torch.float64)
tensor([-2.0232, -3.0296, -3.4683, -3.9997, -4.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8579, device='cuda:0', dtype=torch.float64)
tensor([-2.0199, -3.0268, -3.4789, -3.9920, -4.3391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7944, device='cuda:0', dtype=torch.float64)
tensor([-2.0151, -3.0270, -3.4808, -3.9922, -4.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8004, device='cuda:0', dtype=torch.float64)
tensor([-2.0137, -3.0308, -3.4712, -3.9952, -4.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8817, device='cuda:0', dtype=torch.float64)
tensor([-2.0140, -3.0282, -3.4582, -3.9934, -4.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7563, device='cuda:0', dtype=torch.float64)
tensor([-2.0158, -3.0246, -3.4507, -3.9880, -4.3447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8347, device='cuda:0', dtype=torch.float64)
tensor([-2.0155, -3.0232, -3.4506, -3.9869, -4.3400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7406, device='cuda:0', dtype=torch.float64)
tensor([-2.0156, -3.0245, -3.4515, -3.9900, -4.3283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8789, device='cuda:0', dtype=torch.float64)
tensor([-2.0148, -3.0273, -3.4572, -3.9920, -4.3191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8139, device='cuda:0', dtype=torch.float64)
tensor([-2.0156, -3.0315, -3.4595, -3.9925, -4.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8711, device='cuda:0', dtype=torch.float64)
tensor([-2.0140, -3.0326, -3.4574, -4.0007, -4.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8063, device='cuda:0', dtype=torch.float64)
tensor([-2.0119, -3.0305, -3.4594, -4.0057, -4.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8504, device='cuda:0', dtype=torch.float64)
tensor([-2.0088, -3.0296, -3.4698, -4.0011, -4.2866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8409, device='cuda:0', dtype=torch.float64)
tensor([-2.0099, -3.0349, -3.4715, -3.9970, -4.2808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7092, device='cuda:0', dtype=torch.float64)
tensor([-2.0125, -3.0427, -3.4685, -3.9896, -4.2804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9249, device='cuda:0', dtype=torch.float64)
tensor([-2.0162, -3.0410, -3.4587, -3.9797, -4.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8072, device='cuda:0', dtype=torch.float64)
tensor([-2.0171, -3.0351, -3.4490, -3.9642, -4.2901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8363, device='cuda:0', dtype=torch.float64)
tensor([-2.0158, -3.0284, -3.4448, -3.9430, -4.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8074, device='cuda:0', dtype=torch.float64)
tensor([-2.0120, -3.0238, -3.4467, -3.9370, -4.2889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7914, device='cuda:0', dtype=torch.float64)
tensor([-2.0086, -3.0192, -3.4546, -3.9379, -4.2819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9696, device='cuda:0', dtype=torch.float64)
tensor([-2.0027, -3.0142, -3.4677, -3.9468, -4.2769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7392, device='cuda:0', dtype=torch.float64)
tensor([-1.9998, -3.0156, -3.4756, -3.9492, -4.2780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8572, device='cuda:0', dtype=torch.float64)
tensor([-2.0001, -3.0221, -3.4715, -3.9525, -4.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6744, device='cuda:0', dtype=torch.float64)
tensor([-2.0042, -3.0249, -3.4589, -3.9598, -4.2783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8331, device='cuda:0', dtype=torch.float64)
tensor([-2.0093, -3.0234, -3.4423, -3.9565, -4.2752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8095, device='cuda:0', dtype=torch.float64)
tensor([-2.0116, -3.0166, -3.4317, -3.9512, -4.2721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9134, device='cuda:0', dtype=torch.float64)
tensor([-2.0141, -3.0141, -3.4199, -3.9514, -4.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8180, device='cuda:0', dtype=torch.float64)
tensor([-2.0107, -3.0078, -3.4124, -3.9570, -4.2602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8544, device='cuda:0', dtype=torch.float64)
tensor([-2.0056, -2.9974, -3.4107, -3.9626, -4.2532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9005, device='cuda:0', dtype=torch.float64)
tensor([-2.0039, -2.9920, -3.4169, -3.9548, -4.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-2.0049, -2.9935, -3.4216, -3.9484, -4.2542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8294, device='cuda:0', dtype=torch.float64)
tensor([-2.0077, -2.9986, -3.4288, -3.9457, -4.2606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7520, device='cuda:0', dtype=torch.float64)
tensor([-2.0100, -3.0008, -3.4351, -3.9427, -4.2611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9004, device='cuda:0', dtype=torch.float64)
tensor([-2.0118, -3.0002, -3.4260, -3.9388, -4.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7904, device='cuda:0', dtype=torch.float64)
tensor([-2.0135, -3.0004, -3.4081, -3.9425, -4.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8411, device='cuda:0', dtype=torch.float64)
tensor([-2.0138, -3.0052, -3.3887, -3.9537, -4.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0941, device='cuda:0', dtype=torch.float64)
tensor([-2.0117, -3.0058, -3.3892, -3.9582, -4.2549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7154, device='cuda:0', dtype=torch.float64)
tensor([-2.0059, -3.0029, -3.4018, -3.9608, -4.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9861, device='cuda:0', dtype=torch.float64)
tensor([-1.9970, -2.9993, -3.4144, -3.9701, -4.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8112, device='cuda:0', dtype=torch.float64)
tensor([-1.9899, -2.9938, -3.4232, -3.9757, -4.2315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8194, device='cuda:0', dtype=torch.float64)
tensor([-1.9868, -2.9895, -3.4271, -3.9697, -4.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7345, device='cuda:0', dtype=torch.float64)
tensor([-1.9883, -2.9860, -3.4288, -3.9614, -4.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-1.9937, -2.9858, -3.4240, -3.9504, -4.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7891, device='cuda:0', dtype=torch.float64)
tensor([-1.9975, -2.9919, -3.4247, -3.9366, -4.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9010, device='cuda:0', dtype=torch.float64)
tensor([-2.0034, -3.0027, -3.4143, -3.9241, -4.2305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8231, device='cuda:0', dtype=torch.float64)
tensor([-2.0069, -3.0144, -3.4024, -3.9225, -4.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8696, device='cuda:0', dtype=torch.float64)
tensor([-2.0082, -3.0171, -3.4033, -3.9305, -4.2126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8705, device='cuda:0', dtype=torch.float64)
tensor([-2.0056, -3.0105, -3.4135, -3.9334, -4.2122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9809, device='cuda:0', dtype=torch.float64)
tensor([-2.0071, -3.0011, -3.4198, -3.9267, -4.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7919, device='cuda:0', dtype=torch.float64)
tensor([-2.0105, -2.9933, -3.4101, -3.9165, -4.2172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7210, device='cuda:0', dtype=torch.float64)
tensor([-2.0114, -2.9842, -3.4025, -3.9109, -4.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0700, device='cuda:0', dtype=torch.float64)
tensor([-2.0100, -2.9796, -3.4100, -3.9130, -4.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7463, device='cuda:0', dtype=torch.float64)
tensor([-2.0056, -2.9832, -3.4160, -3.9198, -4.1981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([-1.9989, -2.9911, -3.4135, -3.9242, -4.2015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8305, device='cuda:0', dtype=torch.float64)
tensor([-1.9911, -2.9912, -3.4053, -3.9247, -4.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.9829, -3.3950, -3.9236, -4.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8175, device='cuda:0', dtype=torch.float64)
tensor([-1.9895, -2.9802, -3.3908, -3.9187, -4.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([-1.9965, -2.9865, -3.3805, -3.9065, -4.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9790, device='cuda:0', dtype=torch.float64)
tensor([-2.0043, -2.9919, -3.3703, -3.9057, -4.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([-2.0068, -2.9899, -3.3694, -3.9071, -4.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9195, device='cuda:0', dtype=torch.float64)
tensor([-2.0031, -2.9862, -3.3774, -3.9082, -4.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9057, device='cuda:0', dtype=torch.float64)
tensor([-1.9962, -2.9884, -3.3790, -3.9071, -4.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8674, device='cuda:0', dtype=torch.float64)
tensor([-1.9891, -2.9918, -3.3747, -3.8998, -4.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8254, device='cuda:0', dtype=torch.float64)
tensor([-1.9888, -2.9901, -3.3650, -3.8912, -4.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8378, device='cuda:0', dtype=torch.float64)
tensor([-1.9904, -2.9809, -3.3632, -3.8880, -4.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7436, device='cuda:0', dtype=torch.float64)
tensor([-1.9929, -2.9702, -3.3677, -3.8902, -4.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8147, device='cuda:0', dtype=torch.float64)
tensor([-1.9957, -2.9635, -3.3790, -3.8865, -4.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8465, device='cuda:0', dtype=torch.float64)
tensor([-2.0007, -2.9702, -3.3902, -3.8768, -4.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9548, device='cuda:0', dtype=torch.float64)
tensor([-2.0028, -2.9814, -3.3932, -3.8833, -4.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-1.9996, -2.9851, -3.3985, -3.8956, -4.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9556, device='cuda:0', dtype=torch.float64)
tensor([-1.9928, -2.9742, -3.4066, -3.8981, -4.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9625, device='cuda:0', dtype=torch.float64)
tensor([-1.9869, -2.9597, -3.4069, -3.8905, -4.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.9486, -3.3916, -3.8925, -4.1392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9730, device='cuda:0', dtype=torch.float64)
tensor([-1.9825, -2.9470, -3.3844, -3.8919, -4.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0444, device='cuda:0', dtype=torch.float64)
tensor([-1.9862, -2.9492, -3.3733, -3.8789, -4.1215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8861, device='cuda:0', dtype=torch.float64)
tensor([-1.9931, -2.9600, -3.3616, -3.8720, -4.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1057, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.9662, -3.3571, -3.8806, -4.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8052, device='cuda:0', dtype=torch.float64)
tensor([-1.9991, -2.9666, -3.3618, -3.8955, -4.1409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-1.9985, -2.9676, -3.3709, -3.8942, -4.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7513, device='cuda:0', dtype=torch.float64)
tensor([-1.9968, -2.9668, -3.3676, -3.8923, -4.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0811, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.9707, -3.3640, -3.9050, -4.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0051, device='cuda:0', dtype=torch.float64)
tensor([-1.9995, -2.9734, -3.3582, -3.8950, -4.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0027, device='cuda:0', dtype=torch.float64)
tensor([-2.0021, -2.9736, -3.3544, -3.8710, -4.1356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1155, device='cuda:0', dtype=torch.float64)
tensor([-1.9927, -2.9677, -3.3569, -3.8667, -4.1285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9282, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.9620, -3.3506, -3.8720, -4.1258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0048, device='cuda:0', dtype=torch.float64)
tensor([-1.9748, -2.9595, -3.3411, -3.8632, -4.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9666, device='cuda:0', dtype=torch.float64)
tensor([-1.9719, -2.9595, -3.3427, -3.8562, -4.1198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([-1.9660, -2.9615, -3.3558, -3.8649, -4.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.9698, -3.3678, -3.8806, -4.1142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0399, device='cuda:0', dtype=torch.float64)
tensor([-1.9748, -2.9747, -3.3716, -3.8735, -4.1170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9685, device='cuda:0', dtype=torch.float64)
tensor([-1.9905, -2.9780, -3.3688, -3.8551, -4.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1287, device='cuda:0', dtype=torch.float64)
tensor([-2.0003, -2.9754, -3.3579, -3.8489, -4.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9602, device='cuda:0', dtype=torch.float64)
tensor([-1.9965, -2.9664, -3.3551, -3.8553, -4.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-1.9910, -2.9609, -3.3528, -3.8520, -4.0851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0063, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.9609, -3.3518, -3.8446, -4.0815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0993, device='cuda:0', dtype=torch.float64)
tensor([-1.9876, -2.9613, -3.3590, -3.8556, -4.0791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0165, device='cuda:0', dtype=torch.float64)
tensor([-1.9891, -2.9627, -3.3695, -3.8734, -4.0784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0401, device='cuda:0', dtype=torch.float64)
tensor([-1.9967, -2.9658, -3.3629, -3.8609, -4.0858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8356, device='cuda:0', dtype=torch.float64)
tensor([-2.0012, -2.9632, -3.3496, -3.8408, -4.0914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9637, device='cuda:0', dtype=torch.float64)
tensor([-1.9997, -2.9554, -3.3429, -3.8374, -4.0917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9958, device='cuda:0', dtype=torch.float64)
tensor([-1.9906, -2.9400, -3.3554, -3.8462, -4.0866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9025, device='cuda:0', dtype=torch.float64)
tensor([-1.9795, -2.9270, -3.3727, -3.8590, -4.0921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9071, device='cuda:0', dtype=torch.float64)
tensor([-1.9749, -2.9230, -3.3707, -3.8628, -4.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8523, device='cuda:0', dtype=torch.float64)
tensor([-1.9782, -2.9290, -3.3552, -3.8568, -4.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7932, device='cuda:0', dtype=torch.float64)
tensor([-1.9836, -2.9360, -3.3375, -3.8411, -4.1016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8424, device='cuda:0', dtype=torch.float64)
tensor([-1.9911, -2.9437, -3.3268, -3.8245, -4.0891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8757, device='cuda:0', dtype=torch.float64)
tensor([-1.9998, -2.9545, -3.3253, -3.8079, -4.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8421, device='cuda:0', dtype=torch.float64)
tensor([-2.0018, -2.9604, -3.3346, -3.7904, -4.0751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8031, device='cuda:0', dtype=torch.float64)
tensor([-1.9917, -2.9597, -3.3515, -3.7980, -4.0707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8600, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.9491, -3.3654, -3.8190, -4.0608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9897, device='cuda:0', dtype=torch.float64)
tensor([-1.9804, -2.9375, -3.3651, -3.8293, -4.0513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9023, device='cuda:0', dtype=torch.float64)
tensor([-1.9842, -2.9330, -3.3550, -3.8348, -4.0443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8666, device='cuda:0', dtype=torch.float64)
tensor([-1.9887, -2.9368, -3.3422, -3.8385, -4.0367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9895, device='cuda:0', dtype=torch.float64)
tensor([-1.9914, -2.9467, -3.3313, -3.8259, -4.0309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9041, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.9559, -3.3238, -3.8115, -4.0306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9430, device='cuda:0', dtype=torch.float64)
tensor([-1.9896, -2.9544, -3.3196, -3.8121, -4.0359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9923, device='cuda:0', dtype=torch.float64)
tensor([-1.9878, -2.9439, -3.3185, -3.8233, -4.0458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7607, device='cuda:0', dtype=torch.float64)
tensor([-1.9843, -2.9324, -3.3184, -3.8297, -4.0496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9901, device='cuda:0', dtype=torch.float64)
tensor([-1.9843, -2.9270, -3.3189, -3.8180, -4.0484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7622, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.9242, -3.3180, -3.8191, -4.0469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1089, device='cuda:0', dtype=torch.float64)
tensor([-1.9758, -2.9266, -3.3145, -3.8302, -4.0388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2494, device='cuda:0', dtype=torch.float64)
tensor([-1.9649, -2.9233, -3.3266, -3.8323, -4.0344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8188, device='cuda:0', dtype=torch.float64)
tensor([-1.9590, -2.9241, -3.3402, -3.8165, -4.0325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9558, device='cuda:0', dtype=torch.float64)
tensor([-1.9625, -2.9306, -3.3393, -3.8087, -4.0332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7632, device='cuda:0', dtype=torch.float64)
tensor([-1.9726, -2.9378, -3.3282, -3.8082, -4.0276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0573, device='cuda:0', dtype=torch.float64)
tensor([-1.9864, -2.9340, -3.3241, -3.7951, -4.0201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9348, device='cuda:0', dtype=torch.float64)
tensor([-1.9989, -2.9267, -3.3240, -3.7795, -4.0149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3733, device='cuda:0', dtype=torch.float64)
tensor([-1.9976, -2.9266, -3.3278, -3.7931, -4.0119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8272, device='cuda:0', dtype=torch.float64)
tensor([-1.9890, -2.9300, -3.3321, -3.8043, -4.0090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-1.9767, -2.9292, -3.3337, -3.7936, -4.0043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9787, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.9190, -3.3361, -3.7919, -3.9958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8468, device='cuda:0', dtype=torch.float64)
tensor([-1.9575, -2.9099, -3.3383, -3.8034, -3.9901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0836, device='cuda:0', dtype=torch.float64)
tensor([-1.9632, -2.9118, -3.3316, -3.8028, -3.9946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8970, device='cuda:0', dtype=torch.float64)
tensor([-1.9727, -2.9130, -3.3198, -3.7935, -3.9950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1065, device='cuda:0', dtype=torch.float64)
tensor([-1.9754, -2.9103, -3.3154, -3.7859, -3.9896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-1.9777, -2.9106, -3.3139, -3.7867, -3.9859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-1.9825, -2.9122, -3.3143, -3.7958, -3.9906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4790, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.9136, -3.3066, -3.7850, -3.9975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9275, device='cuda:0', dtype=torch.float64)
tensor([-1.9926, -2.9228, -3.2974, -3.7825, -4.0007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4855, device='cuda:0', dtype=torch.float64)
tensor([-1.9846, -2.9323, -3.2909, -3.8029, -4.0032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8092, device='cuda:0', dtype=torch.float64)
tensor([-1.9754, -2.9340, -3.2863, -3.8120, -4.0070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9563, device='cuda:0', dtype=torch.float64)
tensor([-1.9754, -2.9301, -3.2794, -3.8006, -4.0056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8063, device='cuda:0', dtype=torch.float64)
tensor([-1.9785, -2.9186, -3.2711, -3.7875, -4.0019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9441, device='cuda:0', dtype=torch.float64)
tensor([-1.9808, -2.9055, -3.2659, -3.7749, -3.9990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8823, device='cuda:0', dtype=torch.float64)
tensor([-1.9808, -2.9046, -3.2641, -3.7638, -3.9956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8822, device='cuda:0', dtype=torch.float64)
tensor([-1.9761, -2.9151, -3.2693, -3.7681, -3.9924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8361, device='cuda:0', dtype=torch.float64)
tensor([-1.9725, -2.9244, -3.2800, -3.7793, -3.9920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9874, device='cuda:0', dtype=torch.float64)
tensor([-1.9666, -2.9260, -3.2988, -3.7935, -3.9900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8206, device='cuda:0', dtype=torch.float64)
tensor([-1.9703, -2.9263, -3.2941, -3.7862, -3.9874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0620, device='cuda:0', dtype=torch.float64)
tensor([-1.9755, -2.9281, -3.2755, -3.7746, -3.9847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9600, device='cuda:0', dtype=torch.float64)
tensor([-1.9800, -2.9259, -3.2683, -3.7618, -3.9787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0663, device='cuda:0', dtype=torch.float64)
tensor([-1.9765, -2.9208, -3.2704, -3.7508, -3.9645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8496, device='cuda:0', dtype=torch.float64)
tensor([-1.9681, -2.9175, -3.2775, -3.7539, -3.9597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([-1.9644, -2.9169, -3.2771, -3.7634, -3.9697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7917, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.9185, -3.2851, -3.7746, -3.9802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0433, device='cuda:0', dtype=torch.float64)
tensor([-1.9699, -2.9157, -3.2960, -3.7837, -3.9857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2098, device='cuda:0', dtype=torch.float64)
tensor([-1.9699, -2.9163, -3.2983, -3.7955, -3.9810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2601, device='cuda:0', dtype=torch.float64)
tensor([-1.9795, -2.9247, -3.2811, -3.7913, -3.9708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4720, device='cuda:0', dtype=torch.float64)
tensor([-1.9869, -2.9277, -3.2724, -3.7477, -3.9643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1955, device='cuda:0', dtype=torch.float64)
tensor([-1.9804, -2.9147, -3.2810, -3.7415, -3.9589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0493, device='cuda:0', dtype=torch.float64)
tensor([-1.9696, -2.9021, -3.2920, -3.7490, -3.9605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1296, device='cuda:0', dtype=torch.float64)
tensor([-1.9656, -2.9037, -3.2856, -3.7522, -3.9715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1427, device='cuda:0', dtype=torch.float64)
tensor([-1.9685, -2.9128, -3.2634, -3.7281, -3.9848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9344, device='cuda:0', dtype=torch.float64)
tensor([-1.9681, -2.9149, -3.2531, -3.7313, -3.9865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1343, device='cuda:0', dtype=torch.float64)
tensor([-1.9668, -2.9066, -3.2590, -3.7474, -3.9737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0802, device='cuda:0', dtype=torch.float64)
tensor([-1.9778, -2.9043, -3.2677, -3.7364, -3.9584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0868, device='cuda:0', dtype=torch.float64)
tensor([-1.9913, -2.9106, -3.2633, -3.7154, -3.9522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0060, device='cuda:0', dtype=torch.float64)
tensor([-1.9916, -2.9112, -3.2635, -3.7126, -3.9497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0647, device='cuda:0', dtype=torch.float64)
tensor([-1.9764, -2.9009, -3.2717, -3.7382, -3.9449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9527, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.8970, -3.2801, -3.7598, -3.9370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9734, device='cuda:0', dtype=torch.float64)
tensor([-1.9523, -2.9040, -3.2810, -3.7470, -3.9392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8308, device='cuda:0', dtype=torch.float64)
tensor([-1.9601, -2.9184, -3.2773, -3.7192, -3.9415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2031, device='cuda:0', dtype=torch.float64)
tensor([-1.9680, -2.9160, -3.2714, -3.7202, -3.9427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8505, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.9030, -3.2714, -3.7375, -3.9398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1271, device='cuda:0', dtype=torch.float64)
tensor([-1.9726, -2.9000, -3.2628, -3.7458, -3.9463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9089, device='cuda:0', dtype=torch.float64)
tensor([-1.9756, -2.9030, -3.2622, -3.7399, -3.9570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9143, device='cuda:0', dtype=torch.float64)
tensor([-1.9675, -2.9007, -3.2690, -3.7421, -3.9516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0393, device='cuda:0', dtype=torch.float64)
tensor([-1.9524, -2.8941, -3.2643, -3.7523, -3.9382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9923, device='cuda:0', dtype=torch.float64)
tensor([-1.9495, -2.8840, -3.2439, -3.7492, -3.9377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9463, device='cuda:0', dtype=torch.float64)
tensor([-1.9537, -2.8789, -3.2217, -3.7306, -3.9430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9418, device='cuda:0', dtype=torch.float64)
tensor([-1.9570, -2.8809, -3.2231, -3.7181, -3.9386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8770, device='cuda:0', dtype=torch.float64)
tensor([-1.9608, -2.8911, -3.2371, -3.7144, -3.9263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8954, device='cuda:0', dtype=torch.float64)
tensor([-1.9645, -2.9064, -3.2532, -3.7330, -3.9097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8341, device='cuda:0', dtype=torch.float64)
tensor([-1.9753, -2.9135, -3.2583, -3.7445, -3.9105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8812, device='cuda:0', dtype=torch.float64)
tensor([-1.9843, -2.9080, -3.2620, -3.7427, -3.9142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0658, device='cuda:0', dtype=torch.float64)
tensor([-1.9836, -2.8892, -3.2706, -3.7368, -3.9205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9881, device='cuda:0', dtype=torch.float64)
tensor([-1.9708, -2.8750, -3.2801, -3.7429, -3.9235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8820, device='cuda:0', dtype=torch.float64)
tensor([-1.9637, -2.8663, -3.2807, -3.7367, -3.9218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-1.9638, -2.8728, -3.2734, -3.7232, -3.9170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-1.9590, -2.8768, -3.2679, -3.7266, -3.9078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8866, device='cuda:0', dtype=torch.float64)
tensor([-1.9597, -2.8794, -3.2583, -3.7380, -3.8962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0353, device='cuda:0', dtype=torch.float64)
tensor([-1.9753, -2.8862, -3.2480, -3.7317, -3.8998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2016, device='cuda:0', dtype=torch.float64)
tensor([-1.9906, -2.8897, -3.2591, -3.7076, -3.9076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2301, device='cuda:0', dtype=torch.float64)
tensor([-1.9882, -2.8910, -3.2769, -3.7054, -3.9125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1660, device='cuda:0', dtype=torch.float64)
tensor([-1.9756, -2.8938, -3.2788, -3.7143, -3.9051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2451, device='cuda:0', dtype=torch.float64)
tensor([-1.9691, -2.9019, -3.2729, -3.7063, -3.9028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0921, device='cuda:0', dtype=torch.float64)
tensor([-1.9726, -2.9053, -3.2645, -3.6702, -3.9015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0193, device='cuda:0', dtype=torch.float64)
tensor([-1.9806, -2.8972, -3.2644, -3.6502, -3.9102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8485, device='cuda:0', dtype=torch.float64)
tensor([-1.9873, -2.8901, -3.2512, -3.6455, -3.9193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8909, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.8802, -3.2368, -3.6553, -3.9319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0282, device='cuda:0', dtype=torch.float64)
tensor([-1.9656, -2.8751, -3.2320, -3.6819, -3.9281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0620, device='cuda:0', dtype=torch.float64)
tensor([-1.9471, -2.8756, -3.2410, -3.7263, -3.9087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0084, device='cuda:0', dtype=torch.float64)
tensor([-1.9374, -2.8784, -3.2557, -3.7545, -3.8906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0966, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.8846, -3.2646, -3.7584, -3.8810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-1.9525, -2.8902, -3.2462, -3.7506, -3.8753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8688, device='cuda:0', dtype=torch.float64)
tensor([-1.9694, -2.8902, -3.2232, -3.7165, -3.8754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3275, device='cuda:0', dtype=torch.float64)
tensor([-1.9828, -2.8922, -3.2146, -3.6591, -3.8796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0471, device='cuda:0', dtype=torch.float64)
tensor([-1.9845, -2.8927, -3.2108, -3.6356, -3.8872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1717, device='cuda:0', dtype=torch.float64)
tensor([-1.9845, -2.9066, -3.1979, -3.6375, -3.8989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0532, device='cuda:0', dtype=torch.float64)
tensor([-1.9741, -2.9145, -3.2026, -3.6474, -3.9037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2370, device='cuda:0', dtype=torch.float64)
tensor([-1.9544, -2.9092, -3.2237, -3.6581, -3.8960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-1.9428, -2.8923, -3.2354, -3.6723, -3.8857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1806, device='cuda:0', dtype=torch.float64)
tensor([-1.9460, -2.8824, -3.2316, -3.6736, -3.8804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1141, device='cuda:0', dtype=torch.float64)
tensor([-1.9551, -2.8695, -3.2326, -3.6674, -3.8927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0499, device='cuda:0', dtype=torch.float64)
tensor([-1.9632, -2.8592, -3.2349, -3.6579, -3.8970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9527, device='cuda:0', dtype=torch.float64)
tensor([-1.9644, -2.8556, -3.2357, -3.6663, -3.8953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0122, device='cuda:0', dtype=torch.float64)
tensor([-1.9704, -2.8615, -3.2311, -3.6614, -3.8789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0854, device='cuda:0', dtype=torch.float64)
tensor([-1.9781, -2.8783, -3.2340, -3.6339, -3.8595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1199, device='cuda:0', dtype=torch.float64)
tensor([-1.9784, -2.8908, -3.2290, -3.6370, -3.8450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2272, device='cuda:0', dtype=torch.float64)
tensor([-1.9674, -2.8889, -3.2318, -3.6682, -3.8389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2493, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.8831, -3.2249, -3.6783, -3.8468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9616, device='cuda:0', dtype=torch.float64)
tensor([-1.9643, -2.8755, -3.2077, -3.6782, -3.8614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9832, device='cuda:0', dtype=torch.float64)
tensor([-1.9637, -2.8723, -3.2042, -3.6826, -3.8663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([-1.9597, -2.8719, -3.2119, -3.6869, -3.8580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9742, device='cuda:0', dtype=torch.float64)
tensor([-1.9611, -2.8760, -3.2174, -3.6779, -3.8615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0148, device='cuda:0', dtype=torch.float64)
tensor([-1.9720, -2.8847, -3.2076, -3.6763, -3.8742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9313, device='cuda:0', dtype=torch.float64)
tensor([-1.9730, -2.8852, -3.2058, -3.6785, -3.8947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0402, device='cuda:0', dtype=torch.float64)
tensor([-1.9670, -2.8773, -3.2147, -3.6744, -3.9027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1075, device='cuda:0', dtype=torch.float64)
tensor([-1.9560, -2.8608, -3.2332, -3.6915, -3.8979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1040, device='cuda:0', dtype=torch.float64)
tensor([-1.9534, -2.8592, -3.2308, -3.6954, -3.8871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0382, device='cuda:0', dtype=torch.float64)
tensor([-1.9610, -2.8700, -3.2133, -3.6797, -3.8736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0444, device='cuda:0', dtype=torch.float64)
tensor([-1.9665, -2.8763, -3.2018, -3.6544, -3.8571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-1.9722, -2.8820, -3.1982, -3.6347, -3.8472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([-1.9671, -2.8825, -3.2098, -3.6233, -3.8428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0402, device='cuda:0', dtype=torch.float64)
tensor([-1.9517, -2.8775, -3.2228, -3.6219, -3.8471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8843, device='cuda:0', dtype=torch.float64)
tensor([-1.9420, -2.8695, -3.2253, -3.6256, -3.8579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0892, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.8683, -3.2111, -3.6233, -3.8642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1615, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.8710, -3.2094, -3.6257, -3.8559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5788, device='cuda:0', dtype=torch.float64)
tensor([-1.9363, -2.8729, -3.2221, -3.6207, -3.8414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1616, device='cuda:0', dtype=torch.float64)
tensor([-1.9363, -2.8763, -3.2266, -3.6365, -3.8376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1292, device='cuda:0', dtype=torch.float64)
tensor([-1.9444, -2.8812, -3.2195, -3.6435, -3.8431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0964, device='cuda:0', dtype=torch.float64)
tensor([-1.9557, -2.8838, -3.2178, -3.6303, -3.8502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9883, device='cuda:0', dtype=torch.float64)
tensor([-1.9657, -2.8847, -3.2126, -3.6059, -3.8529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9973, device='cuda:0', dtype=torch.float64)
tensor([-1.9629, -2.8725, -3.2136, -3.6157, -3.8496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3251, device='cuda:0', dtype=torch.float64)
tensor([-1.9581, -2.8592, -3.2120, -3.6239, -3.8423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.8634, -3.1930, -3.6296, -3.8374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9678, device='cuda:0', dtype=torch.float64)
tensor([-1.9636, -2.8717, -3.1746, -3.6420, -3.8321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0796, device='cuda:0', dtype=torch.float64)
tensor([-1.9605, -2.8749, -3.1719, -3.6474, -3.8181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([-1.9526, -2.8789, -3.1788, -3.6541, -3.8066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1386, device='cuda:0', dtype=torch.float64)
tensor([-1.9535, -2.8790, -3.1738, -3.6551, -3.8180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1482, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.8797, -3.1676, -3.6469, -3.8264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-1.9552, -2.8736, -3.1677, -3.6414, -3.8272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0466, device='cuda:0', dtype=torch.float64)
tensor([-1.9524, -2.8660, -3.1804, -3.6505, -3.8170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0639, device='cuda:0', dtype=torch.float64)
tensor([-1.9479, -2.8652, -3.2008, -3.6529, -3.8097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1398, device='cuda:0', dtype=torch.float64)
tensor([-1.9577, -2.8749, -3.2039, -3.6541, -3.8072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0037, device='cuda:0', dtype=torch.float64)
tensor([-1.9668, -2.8873, -3.2077, -3.6493, -3.8103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0867, device='cuda:0', dtype=torch.float64)
tensor([-1.9825, -2.8861, -3.2060, -3.6240, -3.8150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0370, device='cuda:0', dtype=torch.float64)
tensor([-1.9768, -2.8782, -3.1978, -3.6218, -3.8113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2322, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.8776, -3.1913, -3.6125, -3.8121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1751, device='cuda:0', dtype=torch.float64)
tensor([-1.9409, -2.8862, -3.1779, -3.6080, -3.8228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5345, device='cuda:0', dtype=torch.float64)
tensor([-1.9246, -2.8800, -3.1883, -3.6206, -3.8244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0439, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.8725, -3.1966, -3.6318, -3.8325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([-1.9347, -2.8595, -3.2114, -3.6159, -3.8423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1248, device='cuda:0', dtype=torch.float64)
tensor([-1.9561, -2.8538, -3.2242, -3.5832, -3.8422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1185, device='cuda:0', dtype=torch.float64)
tensor([-1.9655, -2.8517, -3.2377, -3.5891, -3.8369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1605, device='cuda:0', dtype=torch.float64)
tensor([-1.9688, -2.8529, -3.2414, -3.6169, -3.8252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2392, device='cuda:0', dtype=torch.float64)
tensor([-1.9781, -2.8673, -3.2231, -3.6142, -3.8187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-1.9774, -2.8799, -3.1942, -3.6087, -3.8197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-1.9703, -2.8807, -3.1688, -3.6064, -3.8163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9594, device='cuda:0', dtype=torch.float64)
tensor([-1.9601, -2.8688, -3.1644, -3.6010, -3.8124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8499, device='cuda:0', dtype=torch.float64)
tensor([-1.9569, -2.8575, -3.1663, -3.6001, -3.8173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1181, device='cuda:0', dtype=torch.float64)
tensor([-1.9639, -2.8512, -3.1728, -3.6002, -3.8231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9653, device='cuda:0', dtype=torch.float64)
tensor([-1.9650, -2.8473, -3.1785, -3.6179, -3.8132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3650, device='cuda:0', dtype=torch.float64)
tensor([-1.9495, -2.8329, -3.1904, -3.6633, -3.7941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2185, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.8334, -3.1877, -3.6675, -3.7818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1748, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.8351, -3.1681, -3.6569, -3.7846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1251, device='cuda:0', dtype=torch.float64)
tensor([-1.9554, -2.8448, -3.1551, -3.6430, -3.7968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1047, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.8457, -3.1588, -3.6226, -3.8033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0792, device='cuda:0', dtype=torch.float64)
tensor([-1.9565, -2.8394, -3.1834, -3.5917, -3.7991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0400, device='cuda:0', dtype=torch.float64)
tensor([-1.9595, -2.8365, -3.2037, -3.5674, -3.7870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1185, device='cuda:0', dtype=torch.float64)
tensor([-1.9567, -2.8443, -3.2117, -3.5779, -3.7894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2067, device='cuda:0', dtype=torch.float64)
tensor([-1.9641, -2.8624, -3.2037, -3.5681, -3.7949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8694, device='cuda:0', dtype=torch.float64)
tensor([-1.9756, -2.8783, -3.1782, -3.5628, -3.7983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2621, device='cuda:0', dtype=torch.float64)
tensor([-1.9728, -2.8858, -3.1660, -3.5902, -3.7972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.8805, -3.1656, -3.6074, -3.7960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1290, device='cuda:0', dtype=torch.float64)
tensor([-1.9389, -2.8689, -3.1765, -3.6065, -3.7934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([-1.9278, -2.8638, -3.1826, -3.6065, -3.7891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3582, device='cuda:0', dtype=torch.float64)
tensor([-1.9222, -2.8581, -3.1742, -3.6274, -3.7872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9948, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.8504, -3.1587, -3.6277, -3.7835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5171, device='cuda:0', dtype=torch.float64)
tensor([-1.9540, -2.8482, -3.1548, -3.5787, -3.7797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1854, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.8445, -3.1601, -3.5636, -3.7817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4311, device='cuda:0', dtype=torch.float64)
tensor([-1.9735, -2.8495, -3.1672, -3.5890, -3.7853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7704, device='cuda:0', dtype=torch.float64)
tensor([-1.9649, -2.8606, -3.1753, -3.5858, -3.7908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0826, device='cuda:0', dtype=torch.float64)
tensor([-1.9546, -2.8727, -3.1708, -3.5882, -3.7905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3111, device='cuda:0', dtype=torch.float64)
tensor([-1.9509, -2.8722, -3.1627, -3.6142, -3.7819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4989, device='cuda:0', dtype=torch.float64)
tensor([-1.9603, -2.8494, -3.1676, -3.6026, -3.7730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-1.9646, -2.8281, -3.1735, -3.5911, -3.7591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4085, device='cuda:0', dtype=torch.float64)
tensor([-1.9638, -2.8173, -3.1678, -3.5806, -3.7614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-1.9477, -2.8207, -3.1630, -3.5721, -3.7822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0926, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.8260, -3.1608, -3.5594, -3.8109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.8336, -3.1510, -3.5528, -3.8292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1219, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.8403, -3.1484, -3.5759, -3.8235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3589, device='cuda:0', dtype=torch.float64)
tensor([-1.9430, -2.8522, -3.1504, -3.5775, -3.7916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1017, device='cuda:0', dtype=torch.float64)
tensor([-1.9560, -2.8487, -3.1623, -3.5873, -3.7656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3318, device='cuda:0', dtype=torch.float64)
tensor([-1.9559, -2.8301, -3.1659, -3.6184, -3.7571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2223, device='cuda:0', dtype=torch.float64)
tensor([-1.9454, -2.8212, -3.1637, -3.6335, -3.7640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1778, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.8195, -3.1663, -3.6182, -3.7688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0706, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.8289, -3.1719, -3.5997, -3.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2355, device='cuda:0', dtype=torch.float64)
tensor([-1.9276, -2.8454, -3.1639, -3.5816, -3.7684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4303, device='cuda:0', dtype=torch.float64)
tensor([-1.9419, -2.8501, -3.1595, -3.5338, -3.7588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9926, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.8562, -3.1548, -3.5096, -3.7566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2962, device='cuda:0', dtype=torch.float64)
tensor([-1.9751, -2.8453, -3.1638, -3.5325, -3.7577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2200, device='cuda:0', dtype=torch.float64)
tensor([-1.9773, -2.8144, -3.1820, -3.5524, -3.7495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3530, device='cuda:0', dtype=torch.float64)
tensor([-1.9752, -2.7852, -3.1873, -3.5583, -3.7472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3550, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.7721, -3.1742, -3.5795, -3.7496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0853, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.7877, -3.1508, -3.5864, -3.7461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2901, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.8180, -3.1238, -3.5597, -3.7382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1603, device='cuda:0', dtype=torch.float64)
tensor([-1.9333, -2.8416, -3.1177, -3.5591, -3.7360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1447, device='cuda:0', dtype=torch.float64)
tensor([-1.9524, -2.8480, -3.1192, -3.5676, -3.7369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0674, device='cuda:0', dtype=torch.float64)
tensor([-1.9768, -2.8533, -3.1306, -3.5651, -3.7469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1947, device='cuda:0', dtype=torch.float64)
tensor([-1.9991, -2.8515, -3.1351, -3.5672, -3.7545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4602, device='cuda:0', dtype=torch.float64)
tensor([-2.0010, -2.8426, -3.1328, -3.5897, -3.7649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0072, device='cuda:0', dtype=torch.float64)
tensor([-1.9814, -2.8347, -3.1414, -3.6114, -3.7597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6051, device='cuda:0', dtype=torch.float64)
tensor([-1.9449, -2.8445, -3.1548, -3.6006, -3.7523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1655, device='cuda:0', dtype=torch.float64)
tensor([-1.9067, -2.8547, -3.1714, -3.5876, -3.7452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9708, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.8593, -3.1694, -3.5810, -3.7355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7148, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.8439, -3.1827, -3.5920, -3.7208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0847, device='cuda:0', dtype=torch.float64)
tensor([-1.9164, -2.8435, -3.1696, -3.5692, -3.7300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8164, device='cuda:0', dtype=torch.float64)
tensor([-1.9661, -2.8481, -3.1417, -3.5350, -3.7470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-1.9943, -2.8520, -3.1296, -3.5386, -3.7569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6896, device='cuda:0', dtype=torch.float64)
tensor([-1.9687, -2.8409, -3.1449, -3.5812, -3.7443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3532, device='cuda:0', dtype=torch.float64)
tensor([-1.9283, -2.8399, -3.1635, -3.6046, -3.7300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0470, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.8589, -3.1347, -3.5728, -3.7399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2025, device='cuda:0', dtype=torch.float64)
tensor([-1.9304, -2.8708, -3.1019, -3.5467, -3.7534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8603, device='cuda:0', dtype=torch.float64)
tensor([-1.9330, -2.8413, -3.1155, -3.5605, -3.7366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3020, device='cuda:0', dtype=torch.float64)
tensor([-1.9477, -2.8269, -3.1306, -3.5467, -3.7259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7798, device='cuda:0', dtype=torch.float64)
tensor([-1.9680, -2.8281, -3.1235, -3.5054, -3.7328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2754, device='cuda:0', dtype=torch.float64)
tensor([-1.9701, -2.8318, -3.1232, -3.5116, -3.7303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0406, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.8036, -3.1546, -3.5858, -3.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2970, device='cuda:0', dtype=torch.float64)
tensor([-1.9218, -2.7983, -3.1696, -3.6044, -3.6882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6440, device='cuda:0', dtype=torch.float64)
tensor([-1.9206, -2.8159, -3.1388, -3.5734, -3.7012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1797, device='cuda:0', dtype=torch.float64)
tensor([-1.9287, -2.8330, -3.1070, -3.5665, -3.7262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6485, device='cuda:0', dtype=torch.float64)
tensor([-1.9321, -2.8196, -3.1155, -3.5823, -3.7315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1187, device='cuda:0', dtype=torch.float64)
tensor([-1.9391, -2.8157, -3.1283, -3.5773, -3.7332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9778, device='cuda:0', dtype=torch.float64)
tensor([-1.9640, -2.8315, -3.1010, -3.5225, -3.7364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1780, device='cuda:0', dtype=torch.float64)
tensor([-1.9591, -2.8420, -3.0902, -3.5109, -3.7261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6995, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.8267, -3.1161, -3.5521, -3.7116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3058, device='cuda:0', dtype=torch.float64)
tensor([-1.9020, -2.8285, -3.1301, -3.5651, -3.7206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8043, device='cuda:0', dtype=torch.float64)
tensor([-1.9130, -2.8585, -3.1219, -3.5291, -3.7344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3127, device='cuda:0', dtype=torch.float64)
tensor([-1.9292, -2.8691, -3.1332, -3.5316, -3.7358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4821, device='cuda:0', dtype=torch.float64)
tensor([-1.9405, -2.8500, -3.1534, -3.5717, -3.7147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4200, device='cuda:0', dtype=torch.float64)
tensor([-1.9636, -2.8346, -3.1554, -3.5565, -3.6972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3091, device='cuda:0', dtype=torch.float64)
tensor([-1.9851, -2.8287, -3.1372, -3.5291, -3.6808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9928, device='cuda:0', dtype=torch.float64)
tensor([-1.9846, -2.8238, -3.1241, -3.5143, -3.6679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6021, device='cuda:0', dtype=torch.float64)
tensor([-1.9482, -2.8121, -3.1386, -3.5501, -3.6629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2484, device='cuda:0', dtype=torch.float64)
tensor([-1.9270, -2.8186, -3.1431, -3.5605, -3.6926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5886, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.8419, -3.1263, -3.5209, -3.7380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([-1.9424, -2.8612, -3.1113, -3.5088, -3.7721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8270, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.8432, -3.1385, -3.5263, -3.7625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1241, device='cuda:0', dtype=torch.float64)
tensor([-1.9440, -2.8319, -3.1598, -3.5411, -3.7407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3842, device='cuda:0', dtype=torch.float64)
tensor([-1.9555, -2.8369, -3.1430, -3.5490, -3.7235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2617, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.8414, -3.1162, -3.5337, -3.7279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2213, device='cuda:0', dtype=torch.float64)
tensor([-1.9537, -2.8162, -3.1068, -3.5477, -3.7211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1043, device='cuda:0', dtype=torch.float64)
tensor([-1.9285, -2.7969, -3.1059, -3.5703, -3.7202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2066, device='cuda:0', dtype=torch.float64)
tensor([-1.9174, -2.8060, -3.1043, -3.5567, -3.7216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-1.9247, -2.8286, -3.1126, -3.5156, -3.7182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1966, device='cuda:0', dtype=torch.float64)
tensor([-1.9370, -2.8323, -3.1173, -3.4973, -3.7016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4244, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.8244, -3.1237, -3.5143, -3.7021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1363, device='cuda:0', dtype=torch.float64)
tensor([-1.9742, -2.8200, -3.0992, -3.4700, -3.7149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1373, device='cuda:0', dtype=torch.float64)
tensor([-1.9837, -2.8054, -3.0904, -3.4524, -3.7309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5604, device='cuda:0', dtype=torch.float64)
tensor([-1.9685, -2.7858, -3.1067, -3.5056, -3.7364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2756, device='cuda:0', dtype=torch.float64)
tensor([-1.9582, -2.8002, -3.1087, -3.5363, -3.7256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1987, device='cuda:0', dtype=torch.float64)
tensor([-1.9567, -2.8207, -3.1000, -3.5219, -3.7108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2608, device='cuda:0', dtype=torch.float64)
tensor([-1.9466, -2.8254, -3.0890, -3.5375, -3.6918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2117, device='cuda:0', dtype=torch.float64)
tensor([-1.9426, -2.8102, -3.0970, -3.5518, -3.6814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([-1.9393, -2.7966, -3.1050, -3.5571, -3.6898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2895, device='cuda:0', dtype=torch.float64)
tensor([-1.9454, -2.7991, -3.0992, -3.5378, -3.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2579, device='cuda:0', dtype=torch.float64)
tensor([-1.9510, -2.8034, -3.0988, -3.5272, -3.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3941, device='cuda:0', dtype=torch.float64)
tensor([-1.9464, -2.8085, -3.0946, -3.5421, -3.6856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1641, device='cuda:0', dtype=torch.float64)
tensor([-1.9423, -2.8078, -3.0792, -3.5450, -3.6650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1729, device='cuda:0', dtype=torch.float64)
tensor([-1.9406, -2.8034, -3.0709, -3.5351, -3.6613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-1.9383, -2.8064, -3.0885, -3.5483, -3.6688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2491, device='cuda:0', dtype=torch.float64)
tensor([-1.9441, -2.8131, -3.1102, -3.5293, -3.6854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5779, device='cuda:0', dtype=torch.float64)
tensor([-1.9541, -2.8182, -3.1129, -3.5136, -3.7016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3619, device='cuda:0', dtype=torch.float64)
tensor([-1.9484, -2.8174, -3.1077, -3.5349, -3.6994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9587, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.8141, -3.1284, -3.5360, -3.6842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4118, device='cuda:0', dtype=torch.float64)
tensor([-1.8930, -2.8264, -3.1450, -3.5571, -3.6810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5337, device='cuda:0', dtype=torch.float64)
tensor([-1.9040, -2.8606, -3.1431, -3.5580, -3.6932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7299, device='cuda:0', dtype=torch.float64)
tensor([-1.9230, -2.8811, -3.1453, -3.5194, -3.6994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2794, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.8720, -3.1398, -3.5097, -3.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9708, device='cuda:0', dtype=torch.float64)
tensor([-1.9540, -2.8499, -3.0957, -3.5343, -3.7128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6532, device='cuda:0', dtype=torch.float64)
tensor([-1.9728, -2.8298, -3.0536, -3.5256, -3.7017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3939, device='cuda:0', dtype=torch.float64)
tensor([-1.9677, -2.8260, -3.0542, -3.4996, -3.6883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7377, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.7976, -3.1071, -3.5565, -3.6567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2373, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.7777, -3.1400, -3.5971, -3.6499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8202, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.7785, -3.1180, -3.4974, -3.6581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5422, device='cuda:0', dtype=torch.float64)
tensor([-1.9391, -2.7838, -3.0995, -3.4523, -3.6722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2736, device='cuda:0', dtype=torch.float64)
tensor([-1.9578, -2.7880, -3.0939, -3.4851, -3.6672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1218, device='cuda:0', dtype=torch.float64)
tensor([-1.9737, -2.7913, -3.0811, -3.4701, -3.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6680, device='cuda:0', dtype=torch.float64)
tensor([-1.9831, -2.8079, -3.0687, -3.4616, -3.6823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8731, device='cuda:0', dtype=torch.float64)
tensor([-1.9487, -2.7952, -3.0978, -3.5433, -3.6847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7734, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.7658, -3.1612, -3.6056, -3.6602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8492, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -2.7585, -3.1788, -3.5620, -3.6483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0056, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.7544, -3.1579, -3.5406, -3.6574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2868, device='cuda:0', dtype=torch.float64)
tensor([-1.9545, -2.7704, -3.1153, -3.5348, -3.6768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2379, device='cuda:0', dtype=torch.float64)
tensor([-1.9743, -2.7781, -3.1066, -3.4884, -3.6650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9631, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.7906, -3.1010, -3.4982, -3.6526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2018, device='cuda:0', dtype=torch.float64)
tensor([-1.9466, -2.8002, -3.0756, -3.5587, -3.6485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1521, device='cuda:0', dtype=torch.float64)
tensor([-1.9458, -2.8280, -3.0561, -3.5249, -3.6476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0922, device='cuda:0', dtype=torch.float64)
tensor([-1.9335, -2.8318, -3.0713, -3.4801, -3.6404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1418, device='cuda:0', dtype=torch.float64)
tensor([-1.9360, -2.8446, -3.0700, -3.4917, -3.6363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4976, device='cuda:0', dtype=torch.float64)
tensor([-1.9427, -2.8714, -3.0622, -3.5076, -3.6378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8772, device='cuda:0', dtype=torch.float64)
tensor([-1.9487, -2.8507, -3.0736, -3.4253, -3.6383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4154, device='cuda:0', dtype=torch.float64)
tensor([-1.9370, -2.8170, -3.0928, -3.4494, -3.6499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4118, device='cuda:0', dtype=torch.float64)
tensor([-1.9142, -2.7665, -3.1255, -3.5463, -3.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3763, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -2.7373, -3.1341, -3.5100, -3.6264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3159, device='cuda:0', dtype=torch.float64)
tensor([-1.8973, -2.7593, -3.1217, -3.5245, -3.6207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1579, device='cuda:0', dtype=torch.float64)
tensor([-1.8993, -2.8009, -3.1134, -3.5893, -3.6286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7253, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.8445, -3.0964, -3.5903, -3.6369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9459, device='cuda:0', dtype=torch.float64)
tensor([-1.9751, -2.8662, -3.0512, -3.5095, -3.6512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9390, device='cuda:0', dtype=torch.float64)
tensor([-2.0103, -2.8558, -3.0143, -3.4608, -3.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2087, device='cuda:0', dtype=torch.float64)
tensor([-1.9943, -2.8197, -3.0234, -3.5031, -3.6817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2537, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.7791, -3.0660, -3.4738, -3.6783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3452, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.7659, -3.1207, -3.4695, -3.6727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8183, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.7746, -3.1356, -3.4880, -3.6719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2652, device='cuda:0', dtype=torch.float64)
tensor([-1.8909, -2.7916, -3.1266, -3.4859, -3.6635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9814, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.7918, -3.1292, -3.4394, -3.6370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2970, device='cuda:0', dtype=torch.float64)
tensor([-2.0014, -2.7982, -3.1139, -3.4190, -3.6314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3850, device='cuda:0', dtype=torch.float64)
tensor([-2.0163, -2.7956, -3.0805, -3.4461, -3.6681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1813, device='cuda:0', dtype=torch.float64)
tensor([-1.9863, -2.7717, -3.0731, -3.4534, -3.6733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9248, device='cuda:0', dtype=torch.float64)
tensor([-1.9186, -2.7434, -3.1076, -3.4973, -3.6437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1305, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.7446, -3.1132, -3.5458, -3.6372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2077, device='cuda:0', dtype=torch.float64)
tensor([-1.9026, -2.7806, -3.0698, -3.4881, -3.6297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5278, device='cuda:0', dtype=torch.float64)
tensor([-1.9317, -2.8113, -3.0626, -3.4428, -3.6193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0163, device='cuda:0', dtype=torch.float64)
tensor([-1.9463, -2.8300, -3.0621, -3.4456, -3.6218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5605, device='cuda:0', dtype=torch.float64)
tensor([-1.9662, -2.8359, -3.0502, -3.4573, -3.6386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7358, device='cuda:0', dtype=torch.float64)
tensor([-1.9754, -2.8349, -3.0314, -3.4316, -3.6527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2059, device='cuda:0', dtype=torch.float64)
tensor([-1.9536, -2.8171, -3.0377, -3.4405, -3.6542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1200, device='cuda:0', dtype=torch.float64)
tensor([-1.9019, -2.7860, -3.0633, -3.5221, -3.6465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5488, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.7761, -3.0855, -3.5607, -3.6440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0325, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.7856, -3.0786, -3.5021, -3.6485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7667, device='cuda:0', dtype=torch.float64)
tensor([-1.9029, -2.8015, -3.0564, -3.4968, -3.6675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6947, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.8117, -3.0479, -3.5214, -3.6813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0117, device='cuda:0', dtype=torch.float64)
tensor([-1.9521, -2.8069, -3.0447, -3.4630, -3.6999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3576, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.7956, -3.0438, -3.4379, -3.7010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4893, device='cuda:0', dtype=torch.float64)
tensor([-1.9501, -2.7856, -3.0693, -3.4640, -3.6786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2693, device='cuda:0', dtype=torch.float64)
tensor([-1.9341, -2.7749, -3.1030, -3.4763, -3.6569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5020, device='cuda:0', dtype=torch.float64)
tensor([-1.9352, -2.7855, -3.1052, -3.4494, -3.6446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4652, device='cuda:0', dtype=torch.float64)
tensor([-1.9410, -2.7937, -3.0775, -3.4530, -3.6393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1836, device='cuda:0', dtype=torch.float64)
tensor([-1.9302, -2.7847, -3.0776, -3.4761, -3.6292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1434, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7924, -3.0870, -3.5085, -3.6347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9555, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.8106, -3.0586, -3.4805, -3.6463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5793, device='cuda:0', dtype=torch.float64)
tensor([-1.9755, -2.8307, -3.0480, -3.4400, -3.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0982, device='cuda:0', dtype=torch.float64)
tensor([-1.9540, -2.8320, -3.0829, -3.4773, -3.6260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2836, device='cuda:0', dtype=torch.float64)
tensor([-1.9231, -2.8245, -3.1160, -3.4896, -3.6103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7924, device='cuda:0', dtype=torch.float64)
tensor([-1.9188, -2.8254, -3.0980, -3.4635, -3.6295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0992, device='cuda:0', dtype=torch.float64)
tensor([-1.9043, -2.8074, -3.0855, -3.5110, -3.6405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9344, device='cuda:0', dtype=torch.float64)
tensor([-1.8995, -2.7831, -3.0941, -3.5595, -3.6296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6466, device='cuda:0', dtype=torch.float64)
tensor([-1.9288, -2.7901, -3.0805, -3.5160, -3.6230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8733, device='cuda:0', dtype=torch.float64)
tensor([-1.9668, -2.8149, -3.0348, -3.4682, -3.6385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8982, device='cuda:0', dtype=torch.float64)
tensor([-1.9678, -2.8156, -3.0225, -3.4584, -3.6597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1635, device='cuda:0', dtype=torch.float64)
tensor([-1.9433, -2.7980, -3.0439, -3.4672, -3.6669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5659, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7794, -3.0719, -3.4337, -3.6548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7144, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.7760, -3.0645, -3.4099, -3.6324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3587, device='cuda:0', dtype=torch.float64)
tensor([-1.9158, -2.7689, -3.0498, -3.4332, -3.6255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7728, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.7512, -3.0576, -3.4701, -3.6057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4129, device='cuda:0', dtype=torch.float64)
tensor([-1.9146, -2.7634, -3.0547, -3.4668, -3.6157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5217, device='cuda:0', dtype=torch.float64)
tensor([-1.9279, -2.7806, -3.0515, -3.4815, -3.6314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5267, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.7879, -3.0806, -3.4935, -3.6325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8748, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -2.7713, -3.1363, -3.4991, -3.6312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6801, device='cuda:0', dtype=torch.float64)
tensor([-1.9092, -2.7738, -3.1343, -3.4592, -3.6256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4685, device='cuda:0', dtype=torch.float64)
tensor([-1.9470, -2.8101, -3.1232, -3.3989, -3.6268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5039, device='cuda:0', dtype=torch.float64)
tensor([-1.9650, -2.8088, -3.1182, -3.3762, -3.6146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5241, device='cuda:0', dtype=torch.float64)
tensor([-1.9510, -2.7848, -3.0915, -3.4041, -3.6068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6751, device='cuda:0', dtype=torch.float64)
tensor([-1.9503, -2.7662, -3.0379, -3.4476, -3.6154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3458, device='cuda:0', dtype=torch.float64)
tensor([-1.9393, -2.7568, -3.0055, -3.5007, -3.6229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7275, device='cuda:0', dtype=torch.float64)
tensor([-1.9358, -2.7641, -3.0140, -3.5109, -3.6223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4163, device='cuda:0', dtype=torch.float64)
tensor([-1.9332, -2.7665, -3.0452, -3.5070, -3.6093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4863, device='cuda:0', dtype=torch.float64)
tensor([-1.9418, -2.7876, -3.0649, -3.5133, -3.5976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0656, device='cuda:0', dtype=torch.float64)
tensor([-1.9571, -2.8102, -3.0708, -3.4540, -3.5939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6401, device='cuda:0', dtype=torch.float64)
tensor([-1.9506, -2.7941, -3.0767, -3.4070, -3.5837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2535, device='cuda:0', dtype=torch.float64)
tensor([-1.8999, -2.7650, -3.0944, -3.4261, -3.5678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1819, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.7534, -3.0797, -3.4552, -3.5743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1719, device='cuda:0', dtype=torch.float64)
tensor([-1.8809, -2.7844, -3.0252, -3.4010, -3.5913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.8271, -2.9771, -3.3817, -3.6093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0583, device='cuda:0', dtype=torch.float64)
tensor([-1.9348, -2.8361, -2.9816, -3.4241, -3.6101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7554, device='cuda:0', dtype=torch.float64)
tensor([-1.9439, -2.8369, -3.0161, -3.4441, -3.6095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1697, device='cuda:0', dtype=torch.float64)
tensor([-1.9563, -2.8077, -3.0255, -3.3919, -3.6231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1584, device='cuda:0', dtype=torch.float64)
tensor([-1.9412, -2.7732, -3.0254, -3.4046, -3.6457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1382, device='cuda:0', dtype=torch.float64)
tensor([-1.8969, -2.7384, -3.0723, -3.5060, -3.6354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0364, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.7569, -3.1014, -3.4702, -3.6289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3074, device='cuda:0', dtype=torch.float64)
tensor([-1.9191, -2.8120, -3.0791, -3.3976, -3.6387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4074, device='cuda:0', dtype=torch.float64)
tensor([-1.9628, -2.8361, -3.0573, -3.3981, -3.6509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4826, device='cuda:0', dtype=torch.float64)
tensor([-1.9794, -2.7846, -3.0826, -3.4369, -3.6287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1656, device='cuda:0', dtype=torch.float64)
tensor([-1.9836, -2.7660, -3.0903, -3.4115, -3.6278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5324, device='cuda:0', dtype=torch.float64)
tensor([-1.9819, -2.7581, -3.0600, -3.4110, -3.6267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3494, device='cuda:0', dtype=torch.float64)
tensor([-1.9394, -2.7672, -3.0561, -3.4726, -3.6150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4257, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.7492, -3.0797, -3.5078, -3.5921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7854, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.7622, -3.0626, -3.5092, -3.6056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5896, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.7840, -3.0151, -3.4895, -3.6240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8863, device='cuda:0', dtype=torch.float64)
tensor([-1.9514, -2.8227, -2.9733, -3.4144, -3.6452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5204, device='cuda:0', dtype=torch.float64)
tensor([-1.9508, -2.8205, -3.0027, -3.4547, -3.6109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6146, device='cuda:0', dtype=torch.float64)
tensor([-1.9467, -2.8127, -3.0105, -3.5073, -3.5828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2813, device='cuda:0', dtype=torch.float64)
tensor([-1.9483, -2.8094, -2.9829, -3.4884, -3.5799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3655, device='cuda:0', dtype=torch.float64)
tensor([-1.9384, -2.8056, -2.9821, -3.4691, -3.5844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4197, device='cuda:0', dtype=torch.float64)
tensor([-1.9178, -2.7912, -3.0028, -3.4704, -3.5821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2997, device='cuda:0', dtype=torch.float64)
tensor([-1.8994, -2.7765, -3.0333, -3.4748, -3.5852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3813, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.7793, -3.0541, -3.4463, -3.5749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2281, device='cuda:0', dtype=torch.float64)
tensor([-1.9016, -2.7900, -3.0701, -3.4147, -3.5734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8056, device='cuda:0', dtype=torch.float64)
tensor([-1.9005, -2.7753, -3.1014, -3.4464, -3.5565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6157, device='cuda:0', dtype=torch.float64)
tensor([-1.9174, -2.7643, -3.0959, -3.4436, -3.5659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7453, device='cuda:0', dtype=torch.float64)
tensor([-1.9644, -2.7543, -3.0619, -3.4061, -3.5992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6738, device='cuda:0', dtype=torch.float64)
tensor([-1.9829, -2.7385, -3.0513, -3.4081, -3.6230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6711, device='cuda:0', dtype=torch.float64)
tensor([-1.9613, -2.7244, -3.0654, -3.5055, -3.6152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2573, device='cuda:0', dtype=torch.float64)
tensor([-1.9402, -2.7345, -3.0632, -3.4733, -3.6108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8036, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.7669, -3.0348, -3.4062, -3.6050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5150, device='cuda:0', dtype=torch.float64)
tensor([-1.9147, -2.7638, -3.0630, -3.4222, -3.5693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5324, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.7493, -3.0998, -3.4113, -3.5299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6805, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.7572, -3.0999, -3.3637, -3.5346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9368, device='cuda:0', dtype=torch.float64)
tensor([-1.9259, -2.7711, -3.0757, -3.3766, -3.5572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2660, device='cuda:0', dtype=torch.float64)
tensor([-1.9112, -2.7895, -3.0692, -3.4513, -3.5635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1751, device='cuda:0', dtype=torch.float64)
tensor([-1.9083, -2.8199, -3.0781, -3.4229, -3.5711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4703, device='cuda:0', dtype=torch.float64)
tensor([-1.9400, -2.8328, -3.0373, -3.4055, -3.5869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4672, device='cuda:0', dtype=torch.float64)
tensor([-1.9682, -2.8383, -3.0159, -3.3777, -3.6150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0830, device='cuda:0', dtype=torch.float64)
tensor([-1.9438, -2.8093, -3.0315, -3.3538, -3.6100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3882, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.7991, -3.0547, -3.3964, -3.5915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9113, device='cuda:0', dtype=torch.float64)
tensor([-1.8971, -2.8053, -3.0530, -3.4589, -3.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6522, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.8151, -3.0450, -3.4658, -3.5510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9329, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.8127, -3.0541, -3.4250, -3.5304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7056, device='cuda:0', dtype=torch.float64)
tensor([-1.9335, -2.8078, -3.0474, -3.4840, -3.5411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1653, device='cuda:0', dtype=torch.float64)
tensor([-1.9559, -2.8150, -3.0208, -3.4109, -3.5712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4270, device='cuda:0', dtype=torch.float64)
tensor([-1.9581, -2.8148, -3.0085, -3.3662, -3.6087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1349, device='cuda:0', dtype=torch.float64)
tensor([-1.9288, -2.7991, -3.0108, -3.4283, -3.6350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2974, device='cuda:0', dtype=torch.float64)
tensor([-1.9101, -2.8009, -3.0166, -3.4821, -3.6540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2698, device='cuda:0', dtype=torch.float64)
tensor([-1.9057, -2.7916, -3.0421, -3.4640, -3.6460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4310, device='cuda:0', dtype=torch.float64)
tensor([-1.9073, -2.7794, -3.0777, -3.4630, -3.6242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7186, device='cuda:0', dtype=torch.float64)
tensor([-1.9112, -2.7668, -3.1054, -3.4847, -3.5883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5236, device='cuda:0', dtype=torch.float64)
tensor([-1.9438, -2.7463, -3.1143, -3.4489, -3.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3075, device='cuda:0', dtype=torch.float64)
tensor([-1.9736, -2.7419, -3.0814, -3.4193, -3.5862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4500, device='cuda:0', dtype=torch.float64)
tensor([-1.9704, -2.7286, -3.0475, -3.4453, -3.5980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3355, device='cuda:0', dtype=torch.float64)
tensor([-1.9484, -2.7259, -3.0266, -3.4547, -3.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5095, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.7311, -3.0269, -3.4408, -3.5891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5130, device='cuda:0', dtype=torch.float64)
tensor([-1.8933, -2.7301, -3.0506, -3.4504, -3.5763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4234, device='cuda:0', dtype=torch.float64)
tensor([-1.8974, -2.7280, -3.0741, -3.4723, -3.5777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9692, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.7287, -3.0654, -3.4229, -3.5821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4102, device='cuda:0', dtype=torch.float64)
tensor([-1.9388, -2.7301, -3.0469, -3.4262, -3.5913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6786, device='cuda:0', dtype=torch.float64)
tensor([-1.9467, -2.7586, -3.0116, -3.4182, -3.6159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5104, device='cuda:0', dtype=torch.float64)
tensor([-1.9282, -2.7979, -2.9745, -3.3729, -3.6224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5059, device='cuda:0', dtype=torch.float64)
tensor([-1.9131, -2.8228, -2.9499, -3.3774, -3.6236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4187, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.8341, -2.9433, -3.4201, -3.5936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3654, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.8392, -2.9370, -3.3913, -3.5636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3012, device='cuda:0', dtype=torch.float64)
tensor([-1.9470, -2.8464, -2.9342, -3.3454, -3.5646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6222, device='cuda:0', dtype=torch.float64)
tensor([-1.9313, -2.8082, -2.9930, -3.3807, -3.5571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1726, device='cuda:0', dtype=torch.float64)
tensor([-1.8978, -2.7682, -3.0548, -3.4512, -3.5540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8185, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7528, -3.0762, -3.4697, -3.5533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7888, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.7580, -3.0583, -3.4881, -3.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6298, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.7805, -3.0275, -3.5296, -3.5423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2569, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.7893, -3.0190, -3.5127, -3.5325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0451, device='cuda:0', dtype=torch.float64)
tensor([-1.9313, -2.7914, -3.0285, -3.4027, -3.5423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0048, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.7716, -3.0591, -3.3903, -3.5577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2372, device='cuda:0', dtype=torch.float64)
tensor([-1.9336, -2.7630, -3.0722, -3.4127, -3.5832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7606, device='cuda:0', dtype=torch.float64)
tensor([-1.9603, -2.7647, -3.0406, -3.3542, -3.6008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7171, device='cuda:0', dtype=torch.float64)
tensor([-1.9733, -2.7720, -3.0110, -3.3573, -3.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2624, device='cuda:0', dtype=torch.float64)
tensor([-1.9639, -2.7715, -3.0130, -3.4220, -3.5762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0800, device='cuda:0', dtype=torch.float64)
tensor([-1.9467, -2.7473, -3.0379, -3.4016, -3.5637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3883, device='cuda:0', dtype=torch.float64)
tensor([-1.9187, -2.7240, -3.0708, -3.4102, -3.5691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8293, device='cuda:0', dtype=torch.float64)
tensor([-1.9016, -2.7005, -3.0893, -3.4342, -3.5840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2896, device='cuda:0', dtype=torch.float64)
tensor([-1.8885, -2.6927, -3.1022, -3.4351, -3.5689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3198, device='cuda:0', dtype=torch.float64)
tensor([-1.8922, -2.7056, -3.1095, -3.4113, -3.5295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3976, device='cuda:0', dtype=torch.float64)
tensor([-1.9131, -2.7276, -3.0873, -3.4136, -3.4973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4651, device='cuda:0', dtype=torch.float64)
tensor([-1.9305, -2.7640, -3.0491, -3.4044, -3.5158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9371, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7785, -3.0117, -3.3739, -3.5490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7687, device='cuda:0', dtype=torch.float64)
tensor([-1.9025, -2.7844, -3.0047, -3.4064, -3.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6853, device='cuda:0', dtype=torch.float64)
tensor([-1.8964, -2.7851, -2.9930, -3.4423, -3.5679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4429, device='cuda:0', dtype=torch.float64)
tensor([-1.9377, -2.8137, -2.9699, -3.3750, -3.5478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3577, device='cuda:0', dtype=torch.float64)
tensor([-1.9550, -2.8146, -2.9661, -3.3630, -3.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2408, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -2.7729, -2.9940, -3.4566, -3.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1068, device='cuda:0', dtype=torch.float64)
tensor([-1.9110, -2.7473, -2.9994, -3.4930, -3.5218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0245, device='cuda:0', dtype=torch.float64)
tensor([-1.9370, -2.7533, -2.9957, -3.4468, -3.5649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4173, device='cuda:0', dtype=torch.float64)
tensor([-1.9322, -2.7593, -3.0187, -3.4574, -3.5883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4789, device='cuda:0', dtype=torch.float64)
tensor([-1.9081, -2.7654, -3.0405, -3.4907, -3.5796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6162, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.7891, -3.0176, -3.3692, -3.5523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5235, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.8254, -2.9980, -3.2982, -3.5172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9200, device='cuda:0', dtype=torch.float64)
tensor([-1.9308, -2.8256, -3.0144, -3.3145, -3.4976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7520, device='cuda:0', dtype=torch.float64)
tensor([-1.9252, -2.7931, -3.0403, -3.3039, -3.5037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4007, device='cuda:0', dtype=torch.float64)
tensor([-1.9135, -2.7448, -3.0647, -3.3163, -3.5182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3601, device='cuda:0', dtype=torch.float64)
tensor([-1.8784, -2.7004, -3.0819, -3.3812, -3.5455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3306, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6896, -3.0739, -3.4554, -3.5699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3495, device='cuda:0', dtype=torch.float64)
tensor([-1.8934, -2.7205, -3.0359, -3.4671, -3.5650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5414, device='cuda:0', dtype=torch.float64)
tensor([-1.9699, -2.7577, -2.9823, -3.4413, -3.5578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3110, device='cuda:0', dtype=torch.float64)
tensor([-1.9855, -2.7617, -2.9780, -3.4272, -3.5545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3999, device='cuda:0', dtype=torch.float64)
tensor([-1.9547, -2.7344, -2.9926, -3.4513, -3.5610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6248, device='cuda:0', dtype=torch.float64)
tensor([-1.8953, -2.7107, -3.0251, -3.4642, -3.5760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4016, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.7184, -3.0415, -3.4677, -3.5926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2450, device='cuda:0', dtype=torch.float64)
tensor([-1.9150, -2.7461, -2.9904, -3.4425, -3.6138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2851, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.7730, -2.9289, -3.4234, -3.6215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7243, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.7926, -2.9095, -3.3736, -3.6007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1681, device='cuda:0', dtype=torch.float64)
tensor([-1.9481, -2.8004, -2.9403, -3.3563, -3.5513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7889, device='cuda:0', dtype=torch.float64)
tensor([-1.9354, -2.8098, -2.9726, -3.3708, -3.5281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4409, device='cuda:0', dtype=torch.float64)
tensor([-1.9169, -2.7966, -3.0317, -3.3962, -3.5268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5257, device='cuda:0', dtype=torch.float64)
tensor([-1.9198, -2.7773, -3.0848, -3.3927, -3.5462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6692, device='cuda:0', dtype=torch.float64)
tensor([-1.9131, -2.7568, -3.1292, -3.4159, -3.5607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8585, device='cuda:0', dtype=torch.float64)
tensor([-1.8949, -2.7504, -3.1663, -3.4596, -3.5450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3587, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.7615, -3.1486, -3.3590, -3.5414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7813, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.7557, -3.1130, -3.3547, -3.5235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3780, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.7598, -3.0532, -3.4369, -3.5089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8883, device='cuda:0', dtype=torch.float64)
tensor([-1.9446, -2.7641, -3.0009, -3.3611, -3.4967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2952, device='cuda:0', dtype=torch.float64)
tensor([-1.9878, -2.7920, -2.9600, -3.3200, -3.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0511, device='cuda:0', dtype=torch.float64)
tensor([-1.9827, -2.7921, -2.9679, -3.3624, -3.4971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9188, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.7652, -2.9966, -3.3575, -3.4993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4702, device='cuda:0', dtype=torch.float64)
tensor([-1.9327, -2.7377, -3.0182, -3.3536, -3.5233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4525, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.6941, -3.0342, -3.4634, -3.5381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4272, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7060, -3.0426, -3.5575, -3.5493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6334, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.7523, -3.0224, -3.4590, -3.5415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3113, device='cuda:0', dtype=torch.float64)
tensor([-1.9514, -2.7793, -2.9671, -3.4068, -3.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1439, device='cuda:0', dtype=torch.float64)
tensor([-1.9921, -2.7932, -2.9412, -3.4490, -3.5263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2230, device='cuda:0', dtype=torch.float64)
tensor([-1.9761, -2.7561, -2.9522, -3.3920, -3.5003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6951, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7315, -2.9709, -3.3828, -3.5131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9707, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.7286, -2.9819, -3.4465, -3.5317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4851, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.7190, -3.0115, -3.4245, -3.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4965, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7303, -3.0138, -3.3979, -3.5154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3273, device='cuda:0', dtype=torch.float64)
tensor([-1.8808, -2.7534, -3.0012, -3.4025, -3.4957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7679, device='cuda:0', dtype=torch.float64)
tensor([-1.9198, -2.7827, -2.9733, -3.3558, -3.4994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5653, device='cuda:0', dtype=torch.float64)
tensor([-1.9575, -2.7935, -2.9655, -3.3116, -3.5206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0823, device='cuda:0', dtype=torch.float64)
tensor([-1.9652, -2.7696, -2.9593, -3.3466, -3.5439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5800, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.7395, -2.9661, -3.3458, -3.5611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1507, device='cuda:0', dtype=torch.float64)
tensor([-1.9356, -2.7072, -2.9995, -3.3608, -3.5587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3212, device='cuda:0', dtype=torch.float64)
tensor([-1.9115, -2.6976, -3.0362, -3.3796, -3.5317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5437, device='cuda:0', dtype=torch.float64)
tensor([-1.9142, -2.7363, -3.0408, -3.3754, -3.5186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7790, device='cuda:0', dtype=torch.float64)
tensor([-1.9271, -2.7729, -3.0365, -3.3714, -3.5021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3499, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.7736, -3.0189, -3.3694, -3.4901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5068, device='cuda:0', dtype=torch.float64)
tensor([-1.9438, -2.7588, -3.0024, -3.3794, -3.4969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6936, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7522, -2.9783, -3.3708, -3.5186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3572, device='cuda:0', dtype=torch.float64)
tensor([-1.9051, -2.7575, -2.9552, -3.3921, -3.5333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6138, device='cuda:0', dtype=torch.float64)
tensor([-1.8825, -2.7611, -2.9679, -3.4177, -3.5442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4061, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.7768, -2.9879, -3.4456, -3.5553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5616, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.7788, -2.9882, -3.4403, -3.5447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5130, device='cuda:0', dtype=torch.float64)
tensor([-1.8885, -2.7814, -2.9851, -3.4141, -3.5307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3093, device='cuda:0', dtype=torch.float64)
tensor([-1.9309, -2.7843, -2.9687, -3.3953, -3.5090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5192, device='cuda:0', dtype=torch.float64)
tensor([-1.9614, -2.7766, -2.9525, -3.3902, -3.4852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4585, device='cuda:0', dtype=torch.float64)
tensor([-1.9748, -2.7751, -2.9413, -3.3840, -3.4750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6360, device='cuda:0', dtype=torch.float64)
tensor([-1.9608, -2.7533, -2.9439, -3.3675, -3.4740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3726, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.7302, -2.9553, -3.3419, -3.4865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8713, device='cuda:0', dtype=torch.float64)
tensor([-1.9281, -2.7303, -2.9557, -3.3389, -3.5031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4777, device='cuda:0', dtype=torch.float64)
tensor([-1.9291, -2.7309, -2.9767, -3.3643, -3.5084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6776, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7347, -3.0027, -3.3474, -3.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3118, device='cuda:0', dtype=torch.float64)
tensor([-1.9587, -2.7243, -3.0284, -3.3391, -3.4917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7589, device='cuda:0', dtype=torch.float64)
tensor([-1.9538, -2.7019, -3.0338, -3.3662, -3.5083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5714, device='cuda:0', dtype=torch.float64)
tensor([-1.9239, -2.6900, -3.0448, -3.4102, -3.5167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4261, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.7061, -3.0493, -3.3822, -3.5381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6596, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.7549, -3.0068, -3.3653, -3.5553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8976, device='cuda:0', dtype=torch.float64)
tensor([-1.9328, -2.7919, -2.9690, -3.3964, -3.5426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1910, device='cuda:0', dtype=torch.float64)
tensor([-1.9081, -2.7797, -2.9661, -3.3888, -3.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4064, device='cuda:0', dtype=torch.float64)
tensor([-1.9334, -2.7722, -2.9607, -3.3832, -3.5286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8152, device='cuda:0', dtype=torch.float64)
tensor([-1.9714, -2.7924, -2.9432, -3.3920, -3.5334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8948, device='cuda:0', dtype=torch.float64)
tensor([-1.9688, -2.7888, -2.9614, -3.4007, -3.5324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4474, device='cuda:0', dtype=torch.float64)
tensor([-1.9459, -2.7847, -2.9751, -3.4060, -3.5180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8166, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -2.7767, -2.9693, -3.4167, -3.4995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8219, device='cuda:0', dtype=torch.float64)
tensor([-1.8648, -2.7913, -2.9293, -3.4068, -3.5199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4281, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.7940, -2.9186, -3.3638, -3.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5488, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.7832, -2.9397, -3.3630, -3.5215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9565, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.7659, -2.9561, -3.4275, -3.5330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8226, device='cuda:0', dtype=torch.float64)
tensor([-1.9472, -2.7451, -2.9836, -3.3280, -3.5238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9854, device='cuda:0', dtype=torch.float64)
tensor([-1.9633, -2.7480, -2.9829, -3.3272, -3.5231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0067, device='cuda:0', dtype=torch.float64)
tensor([-1.9476, -2.7420, -2.9832, -3.4124, -3.4921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3419, device='cuda:0', dtype=torch.float64)
tensor([-1.9204, -2.7094, -2.9990, -3.3966, -3.4369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5880, device='cuda:0', dtype=torch.float64)
tensor([-1.8951, -2.6785, -3.0344, -3.3925, -3.4095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0894, device='cuda:0', dtype=torch.float64)
tensor([-1.9148, -2.6728, -3.0261, -3.3809, -3.4327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6183, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.6979, -2.9978, -3.3623, -3.4728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1221, device='cuda:0', dtype=torch.float64)
tensor([-1.9859, -2.7177, -2.9936, -3.3326, -3.4842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7542, device='cuda:0', dtype=torch.float64)
tensor([-1.9867, -2.7427, -2.9871, -3.3352, -3.5034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3779, device='cuda:0', dtype=torch.float64)
tensor([-1.9772, -2.7990, -2.9763, -3.3555, -3.5295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2276, device='cuda:0', dtype=torch.float64)
tensor([-1.9286, -2.7995, -2.9823, -3.2935, -3.5311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9957, device='cuda:0', dtype=torch.float64)
tensor([-1.8536, -2.7632, -3.0279, -3.3459, -3.5112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0337, device='cuda:0', dtype=torch.float64)
tensor([-1.8089, -2.7466, -3.0452, -3.4292, -3.4886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1548, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.7546, -2.9994, -3.3657, -3.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3351, device='cuda:0', dtype=torch.float64)
tensor([-1.9383, -2.7955, -2.9134, -3.2956, -3.5173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7454, device='cuda:0', dtype=torch.float64)
tensor([-2.0037, -2.8240, -2.8701, -3.2835, -3.5469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5700, device='cuda:0', dtype=torch.float64)
tensor([-1.9884, -2.8141, -2.9111, -3.3324, -3.5646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2545, device='cuda:0', dtype=torch.float64)
tensor([-1.9415, -2.7767, -2.9951, -3.3181, -3.5727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6275, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.7505, -3.0652, -3.3550, -3.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9804, device='cuda:0', dtype=torch.float64)
tensor([-1.9050, -2.7321, -3.0427, -3.4272, -3.5553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8124, device='cuda:0', dtype=torch.float64)
tensor([-1.9291, -2.7005, -3.0137, -3.3828, -3.5122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8137, device='cuda:0', dtype=torch.float64)
tensor([-1.9750, -2.7207, -2.9973, -3.3797, -3.4758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6182, device='cuda:0', dtype=torch.float64)
tensor([-1.9707, -2.7584, -2.9916, -3.4222, -3.4810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2820, device='cuda:0', dtype=torch.float64)
tensor([-1.9315, -2.7716, -2.9944, -3.3917, -3.5099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5831, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.7808, -2.9928, -3.4323, -3.5418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7341, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.7898, -2.9705, -3.4208, -3.5568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5425, device='cuda:0', dtype=torch.float64)
tensor([-1.9243, -2.7676, -2.9458, -3.3435, -3.5558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7755, device='cuda:0', dtype=torch.float64)
tensor([-1.9452, -2.7194, -2.9309, -3.3297, -3.5371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9296, device='cuda:0', dtype=torch.float64)
tensor([-1.9162, -2.6782, -2.9226, -3.4191, -3.5072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8494, device='cuda:0', dtype=torch.float64)
tensor([-1.8957, -2.6672, -2.9101, -3.4202, -3.5188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4449, device='cuda:0', dtype=torch.float64)
tensor([-1.8921, -2.6828, -2.9217, -3.4244, -3.5149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4461, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.7160, -2.9396, -3.4434, -3.5077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6678, device='cuda:0', dtype=torch.float64)
tensor([-1.9199, -2.7695, -2.9397, -3.4672, -3.4994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0524, device='cuda:0', dtype=torch.float64)
tensor([-1.9637, -2.8166, -2.9162, -3.3728, -3.4949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9955, device='cuda:0', dtype=torch.float64)
tensor([-1.9648, -2.8206, -2.9358, -3.3747, -3.4727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3810, device='cuda:0', dtype=torch.float64)
tensor([-1.9385, -2.7979, -2.9787, -3.4464, -3.4572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7074, device='cuda:0', dtype=torch.float64)
tensor([-1.9188, -2.7302, -3.0457, -3.3328, -3.4480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3856, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.6844, -3.0766, -3.3308, -3.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5463, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.6613, -3.0850, -3.3757, -3.4883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0270, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.6628, -3.0741, -3.3605, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7628, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.7112, -3.0231, -3.3718, -3.4945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7001, device='cuda:0', dtype=torch.float64)
tensor([-1.9403, -2.7865, -2.9556, -3.3823, -3.4865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0003, device='cuda:0', dtype=torch.float64)
tensor([-1.9819, -2.8350, -2.9174, -3.3427, -3.5082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3444, device='cuda:0', dtype=torch.float64)
tensor([-1.9397, -2.8061, -2.9417, -3.3435, -3.5110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4130, device='cuda:0', dtype=torch.float64)
tensor([-1.8827, -2.7566, -2.9430, -3.3940, -3.5206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3792, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.7468, -2.9397, -3.4434, -3.5233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9355, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.7137, -2.9634, -3.3684, -3.5130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0151, device='cuda:0', dtype=torch.float64)
tensor([-1.9128, -2.7054, -2.9662, -3.3396, -3.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4927, device='cuda:0', dtype=torch.float64)
tensor([-1.9711, -2.7340, -2.9308, -3.3430, -3.5134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3207, device='cuda:0', dtype=torch.float64)
tensor([-1.9736, -2.7321, -2.9410, -3.3137, -3.4982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7767, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.7434, -2.9532, -3.3765, -3.4624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2378, device='cuda:0', dtype=torch.float64)
tensor([-1.9069, -2.7594, -2.9779, -3.5097, -3.4395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2984, device='cuda:0', dtype=torch.float64)
tensor([-1.9358, -2.7814, -2.9599, -3.3922, -3.4575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6205, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.7773, -2.9426, -3.3748, -3.4907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8836, device='cuda:0', dtype=torch.float64)
tensor([-1.9267, -2.7212, -2.9459, -3.4890, -3.4978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0092, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.6968, -2.9441, -3.5033, -3.5193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4331, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.7075, -2.9249, -3.4142, -3.5296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2547, device='cuda:0', dtype=torch.float64)
tensor([-1.9479, -2.7095, -2.9628, -3.3909, -3.5033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9795, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.7022, -3.0580, -3.4072, -3.4628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1088, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7451, -3.1014, -3.3070, -3.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1301, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7785, -3.0805, -3.2751, -3.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4891, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.8030, -3.0200, -3.2405, -3.4573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7943, device='cuda:0', dtype=torch.float64)
tensor([-1.9185, -2.7907, -2.9734, -3.2211, -3.4699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5845, device='cuda:0', dtype=torch.float64)
tensor([-1.9392, -2.7584, -2.9443, -3.2681, -3.4674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5447, device='cuda:0', dtype=torch.float64)
tensor([-1.9255, -2.7356, -2.9425, -3.3165, -3.4747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6712, device='cuda:0', dtype=torch.float64)
tensor([-1.9117, -2.7410, -2.9566, -3.3623, -3.4815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5513, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.7657, -2.9638, -3.3300, -3.4831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5375, device='cuda:0', dtype=torch.float64)
tensor([-1.9287, -2.7870, -2.9719, -3.3292, -3.4773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6018, device='cuda:0', dtype=torch.float64)
tensor([-1.9459, -2.8176, -2.9625, -3.2938, -3.4964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4452, device='cuda:0', dtype=torch.float64)
tensor([-1.9199, -2.8095, -2.9578, -3.3259, -3.5258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5353, device='cuda:0', dtype=torch.float64)
tensor([-1.8852, -2.7466, -2.9885, -3.3968, -3.5278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5642, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6915, -3.0001, -3.4586, -3.5142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4075, device='cuda:0', dtype=torch.float64)
tensor([-1.9014, -2.6775, -2.9795, -3.4416, -3.4959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8881, device='cuda:0', dtype=torch.float64)
tensor([-1.9490, -2.7136, -2.9704, -3.3479, -3.4678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1253, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.7456, -3.0000, -3.3128, -3.4160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4540, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.7849, -3.0007, -3.2866, -3.4015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1875, device='cuda:0', dtype=torch.float64)
tensor([-1.8883, -2.7710, -2.9796, -3.3100, -3.4370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8268, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.7544, -2.9417, -3.3360, -3.4863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4579, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.7430, -2.9052, -3.3592, -3.5074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2437, device='cuda:0', dtype=torch.float64)
tensor([-1.9596, -2.7500, -2.8860, -3.3600, -3.5088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8359, device='cuda:0', dtype=torch.float64)
tensor([-1.9713, -2.7664, -2.9046, -3.3650, -3.5045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5037, device='cuda:0', dtype=torch.float64)
tensor([-1.9529, -2.7581, -2.9547, -3.3515, -3.4882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7456, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.7166, -3.0305, -3.3887, -3.4906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1520, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.7014, -3.0610, -3.3799, -3.5014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7393, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6870, -3.0482, -3.3517, -3.5264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5351, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.7041, -2.9897, -3.3260, -3.5543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4209, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.7522, -2.9223, -3.3415, -3.5616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7723, device='cuda:0', dtype=torch.float64)
tensor([-1.9752, -2.8002, -2.8819, -3.2945, -3.5617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4580, device='cuda:0', dtype=torch.float64)
tensor([-1.9799, -2.7933, -2.9130, -3.3183, -3.5325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7422, device='cuda:0', dtype=torch.float64)
tensor([-1.9328, -2.7348, -3.0098, -3.3661, -3.4770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7061, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.6895, -3.0648, -3.3846, -3.4567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4906, device='cuda:0', dtype=torch.float64)
tensor([-1.8817, -2.6798, -3.0770, -3.3573, -3.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4004, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6939, -3.0393, -3.3195, -3.5040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3931, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.7356, -2.9899, -3.3336, -3.5339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8387, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.7894, -2.9296, -3.3398, -3.5480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1117, device='cuda:0', dtype=torch.float64)
tensor([-1.9520, -2.7901, -2.9203, -3.2958, -3.5191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9811, device='cuda:0', dtype=torch.float64)
tensor([-1.9693, -2.7587, -2.9234, -3.3259, -3.4776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8108, device='cuda:0', dtype=torch.float64)
tensor([-1.9870, -2.7455, -2.9081, -3.3701, -3.4552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9163, device='cuda:0', dtype=torch.float64)
tensor([-2.0005, -2.7447, -2.8967, -3.3072, -3.4447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7490, device='cuda:0', dtype=torch.float64)
tensor([-1.9214, -2.7487, -2.9399, -3.3644, -3.4499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7201, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7659, -2.9841, -3.4679, -3.4619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7344, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.7978, -2.9797, -3.4436, -3.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6146, device='cuda:0', dtype=torch.float64)
tensor([-1.9106, -2.7952, -2.9692, -3.4055, -3.5384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7728, device='cuda:0', dtype=torch.float64)
tensor([-1.9569, -2.7616, -2.9636, -3.3889, -3.5230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6658, device='cuda:0', dtype=torch.float64)
tensor([-2.0008, -2.7474, -2.9307, -3.3373, -3.5163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4884, device='cuda:0', dtype=torch.float64)
tensor([-2.0117, -2.7416, -2.9063, -3.2836, -3.5188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6260, device='cuda:0', dtype=torch.float64)
tensor([-1.9564, -2.7032, -2.8948, -3.3083, -3.5156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4262, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.6641, -2.9147, -3.3902, -3.5128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5615, device='cuda:0', dtype=torch.float64)
tensor([-1.8012, -2.6449, -2.9528, -3.4106, -3.4970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5673, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.6668, -2.9685, -3.3815, -3.5087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6610, device='cuda:0', dtype=torch.float64)
tensor([-1.8948, -2.7051, -2.9588, -3.3393, -3.4833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7194, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.7523, -2.9498, -3.3324, -3.4454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0092, device='cuda:0', dtype=torch.float64)
tensor([-2.0471, -2.7772, -2.9271, -3.2359, -3.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9490, device='cuda:0', dtype=torch.float64)
tensor([-2.0261, -2.7678, -2.8936, -3.2655, -3.4473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9871, device='cuda:0', dtype=torch.float64)
tensor([-1.9461, -2.7476, -2.8949, -3.4071, -3.5094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9445, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.6752, -2.9303, -3.4620, -3.4891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6127, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6904, -2.9383, -3.4681, -3.4615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5937, device='cuda:0', dtype=torch.float64)
tensor([-1.9151, -2.7609, -2.8851, -3.4021, -3.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1033, device='cuda:0', dtype=torch.float64)
tensor([-1.9946, -2.8244, -2.8722, -3.3339, -3.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3160, device='cuda:0', dtype=torch.float64)
tensor([-2.0279, -2.8369, -2.9137, -3.2565, -3.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6654, device='cuda:0', dtype=torch.float64)
tensor([-1.9677, -2.7951, -2.9429, -3.2592, -3.4324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4740, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.7393, -2.9711, -3.3804, -3.4751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5935, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.6823, -2.9702, -3.3400, -3.5039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0268, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6690, -2.9460, -3.3435, -3.5169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7636, device='cuda:0', dtype=torch.float64)
tensor([-1.9062, -2.6959, -2.9110, -3.3752, -3.5142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4717, device='cuda:0', dtype=torch.float64)
tensor([-1.9951, -2.7528, -2.8940, -3.3098, -3.4996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5304, device='cuda:0', dtype=torch.float64)
tensor([-2.0422, -2.7958, -2.9123, -3.2792, -3.4809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0379, device='cuda:0', dtype=torch.float64)
tensor([-2.0176, -2.7785, -2.9371, -3.3379, -3.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7404, device='cuda:0', dtype=torch.float64)
tensor([-1.9322, -2.7125, -2.9783, -3.4443, -3.4543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6815, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.6702, -2.9865, -3.4758, -3.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8473, device='cuda:0', dtype=torch.float64)
tensor([-1.8680, -2.6598, -2.9613, -3.4404, -3.4749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4158, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.6682, -2.9286, -3.3778, -3.4897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0207, device='cuda:0', dtype=torch.float64)
tensor([-1.9475, -2.7111, -2.9256, -3.3152, -3.4706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8223, device='cuda:0', dtype=torch.float64)
tensor([-1.9862, -2.7694, -2.9077, -3.2326, -3.4617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6048, device='cuda:0', dtype=torch.float64)
tensor([-1.9661, -2.7849, -2.9048, -3.2351, -3.4831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9465, device='cuda:0', dtype=torch.float64)
tensor([-1.8958, -2.7212, -2.9577, -3.3592, -3.4772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1773, device='cuda:0', dtype=torch.float64)
tensor([-1.8850, -2.6625, -2.9844, -3.3873, -3.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6771, device='cuda:0', dtype=torch.float64)
tensor([-1.9197, -2.6445, -2.9631, -3.2816, -3.4865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6258, device='cuda:0', dtype=torch.float64)
tensor([-1.9362, -2.6555, -2.9574, -3.2846, -3.4880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0175, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.6960, -2.9634, -3.3472, -3.4548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9532, device='cuda:0', dtype=torch.float64)
tensor([-1.9468, -2.7473, -2.9793, -3.3376, -3.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5944, device='cuda:0', dtype=torch.float64)
tensor([-1.9455, -2.8127, -3.0051, -3.3425, -3.3792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8218, device='cuda:0', dtype=torch.float64)
tensor([-1.9275, -2.8116, -3.0331, -3.4188, -3.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9554, device='cuda:0', dtype=torch.float64)
tensor([-1.9497, -2.7633, -3.0289, -3.3758, -3.3952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7512, device='cuda:0', dtype=torch.float64)
tensor([-1.9713, -2.7073, -2.9992, -3.3223, -3.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7133, device='cuda:0', dtype=torch.float64)
tensor([-1.9616, -2.7036, -2.9750, -3.3133, -3.4844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8277, device='cuda:0', dtype=torch.float64)
tensor([-1.8957, -2.7065, -2.9725, -3.3704, -3.4890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2948, device='cuda:0', dtype=torch.float64)
tensor([-1.8755, -2.7396, -2.9572, -3.3558, -3.4842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6320, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.7973, -2.9778, -3.3402, -3.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7510, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.8072, -2.9785, -3.3570, -3.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9317, device='cuda:0', dtype=torch.float64)
tensor([-1.9191, -2.7832, -2.9690, -3.3340, -3.4227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6888, device='cuda:0', dtype=torch.float64)
tensor([-1.9631, -2.7654, -2.9130, -3.2489, -3.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3823, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.7325, -2.8885, -3.2562, -3.4155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7547, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.7197, -2.8927, -3.2829, -3.4390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1037, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.7292, -2.8949, -3.2926, -3.4838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0105, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -2.7098, -2.9391, -3.3376, -3.5135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6225, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6635, -2.9861, -3.4721, -3.4998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4066, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.6653, -2.9640, -3.4501, -3.4777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4649, device='cuda:0', dtype=torch.float64)
tensor([-1.9669, -2.7226, -2.8775, -3.3519, -3.5028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5613, device='cuda:0', dtype=torch.float64)
tensor([-2.0049, -2.7408, -2.8515, -3.3707, -3.4968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0848, device='cuda:0', dtype=torch.float64)
tensor([-1.9752, -2.7206, -2.8872, -3.3866, -3.4763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9908, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7196, -2.9390, -3.3715, -3.5017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4786, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.7039, -2.9718, -3.4502, -3.5278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9431, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.7111, -3.0373, -3.4909, -3.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3861, device='cuda:0', dtype=torch.float64)
tensor([-1.9070, -2.7450, -3.0888, -3.3788, -3.5014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7432, device='cuda:0', dtype=torch.float64)
tensor([-1.9766, -2.7913, -3.1118, -3.3061, -3.4762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7492, device='cuda:0', dtype=torch.float64)
tensor([-2.0210, -2.8638, -3.1082, -3.3145, -3.4432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9311, device='cuda:0', dtype=torch.float64)
tensor([-1.9797, -2.7929, -3.0956, -3.2283, -3.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8859, device='cuda:0', dtype=torch.float64)
tensor([-1.8793, -2.7639, -3.0749, -3.3278, -3.3930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4071, device='cuda:0', dtype=torch.float64)
tensor([-1.8134, -2.7251, -3.0458, -3.4665, -3.3738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4430, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.7029, -3.0038, -3.4402, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4578, device='cuda:0', dtype=torch.float64)
tensor([-1.9130, -2.7295, -2.9086, -3.3738, -3.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2583, device='cuda:0', dtype=torch.float64)
tensor([-1.9808, -2.7640, -2.8010, -3.3397, -3.3845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8254, device='cuda:0', dtype=torch.float64)
tensor([-2.0003, -2.8083, -2.7358, -3.3181, -3.4165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2614, device='cuda:0', dtype=torch.float64)
tensor([-1.9393, -2.7931, -2.7859, -3.3118, -3.4571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3337, device='cuda:0', dtype=torch.float64)
tensor([-1.9034, -2.7790, -2.8403, -3.3488, -3.4747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0889, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.7639, -2.9073, -3.3311, -3.4713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2769, device='cuda:0', dtype=torch.float64)
tensor([-1.8898, -2.7203, -3.0070, -3.3228, -3.4572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4679, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6432, -3.0630, -3.4028, -3.4128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6637, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6323, -3.0560, -3.4458, -3.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3187, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.6761, -3.0186, -3.3743, -3.4030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1682, device='cuda:0', dtype=torch.float64)
tensor([-1.9447, -2.7390, -2.9698, -3.3490, -3.4218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7348, device='cuda:0', dtype=torch.float64)
tensor([-1.9683, -2.7975, -2.9294, -3.3406, -3.4393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2453, device='cuda:0', dtype=torch.float64)
tensor([-1.9525, -2.8222, -2.9107, -3.3261, -3.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9321, device='cuda:0', dtype=torch.float64)
tensor([-1.9465, -2.7953, -2.8844, -3.3119, -3.5036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7860, device='cuda:0', dtype=torch.float64)
tensor([-1.9482, -2.7529, -2.8710, -3.3128, -3.5675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5945, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.6923, -2.9112, -3.3570, -3.5834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9945, device='cuda:0', dtype=torch.float64)
tensor([-1.9385, -2.6551, -2.9831, -3.4105, -3.5532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7337, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.7029, -3.0472, -3.4490, -3.5233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1872, device='cuda:0', dtype=torch.float64)
tensor([-1.9490, -2.8190, -3.0567, -3.3805, -3.5266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2546, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.8767, -3.0652, -3.4053, -3.5183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3544, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.8312, -3.0727, -3.4636, -3.4953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6984, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.7587, -3.0070, -3.3686, -3.5058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0221, device='cuda:0', dtype=torch.float64)
tensor([-1.9119, -2.7100, -2.9105, -3.3096, -3.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9874, device='cuda:0', dtype=torch.float64)
tensor([-1.9149, -2.6695, -2.8324, -3.3343, -3.5106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5635, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.6851, -2.8126, -3.3706, -3.4464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9034, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.7478, -2.8228, -3.3419, -3.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1843, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.7882, -2.8323, -3.3262, -3.4063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7422, device='cuda:0', dtype=torch.float64)
tensor([-1.9433, -2.7900, -2.8827, -3.3233, -3.3971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6559, device='cuda:0', dtype=torch.float64)
tensor([-1.9570, -2.7666, -2.9291, -3.3567, -3.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8745, device='cuda:0', dtype=torch.float64)
tensor([-1.9682, -2.7486, -2.9180, -3.3459, -3.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7577, device='cuda:0', dtype=torch.float64)
tensor([-1.9612, -2.7453, -2.8951, -3.3291, -3.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9880, device='cuda:0', dtype=torch.float64)
tensor([-1.9306, -2.7339, -2.9043, -3.3492, -3.4856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7829, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.7275, -2.9338, -3.3489, -3.4930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6523, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7172, -2.9791, -3.3390, -3.4932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6972, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6989, -2.9932, -3.3035, -3.4962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0035, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.6885, -2.9502, -3.3233, -3.4868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7964, device='cuda:0', dtype=torch.float64)
tensor([-1.9209, -2.7092, -2.8971, -3.3324, -3.4752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2119, device='cuda:0', dtype=torch.float64)
tensor([-1.9493, -2.7307, -2.8725, -3.3339, -3.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4874, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.7474, -2.8958, -3.3915, -3.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2134, device='cuda:0', dtype=torch.float64)
tensor([-1.9560, -2.7567, -2.9303, -3.4826, -3.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2259, device='cuda:0', dtype=torch.float64)
tensor([-1.9510, -2.7430, -2.9801, -3.4241, -3.4397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9604, device='cuda:0', dtype=torch.float64)
tensor([-1.9226, -2.6988, -3.0230, -3.4259, -3.3943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4063, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.6823, -3.0322, -3.4795, -3.3403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3781, device='cuda:0', dtype=torch.float64)
tensor([-1.9586, -2.7154, -2.9939, -3.3457, -3.3194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5809, device='cuda:0', dtype=torch.float64)
tensor([-1.9896, -2.7630, -2.9433, -3.2290, -3.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0655, device='cuda:0', dtype=torch.float64)
tensor([-1.9794, -2.8072, -2.9055, -3.2140, -3.4062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8740, device='cuda:0', dtype=torch.float64)
tensor([-1.9135, -2.8245, -2.9041, -3.2851, -3.4620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1677, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.8065, -2.9135, -3.2577, -3.4914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9986, device='cuda:0', dtype=torch.float64)
tensor([-1.8838, -2.7998, -2.8518, -3.2092, -3.4850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6886, device='cuda:0', dtype=torch.float64)
tensor([-1.9465, -2.7682, -2.8275, -3.1607, -3.4615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9369, device='cuda:0', dtype=torch.float64)
tensor([-1.9716, -2.7230, -2.8629, -3.1834, -3.4087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0178, device='cuda:0', dtype=torch.float64)
tensor([-1.9507, -2.7024, -2.9150, -3.2143, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7231, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.6946, -2.9975, -3.3445, -3.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8368, device='cuda:0', dtype=torch.float64)
tensor([-1.8016, -2.6651, -3.0807, -3.5138, -3.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0844, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.6876, -3.0492, -3.4594, -3.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5429, device='cuda:0', dtype=torch.float64)
tensor([-2.0361, -2.7290, -2.9703, -3.3597, -3.3897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2456, device='cuda:0', dtype=torch.float64)
tensor([-2.0862, -2.7406, -2.9143, -3.3557, -3.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9001, device='cuda:0', dtype=torch.float64)
tensor([-2.0476, -2.7242, -2.9045, -3.3934, -3.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8732, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.6906, -2.9059, -3.3743, -3.3935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1560, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.6724, -2.9105, -3.4026, -3.4395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9809, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.6995, -2.9036, -3.3928, -3.4957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7533, device='cuda:0', dtype=torch.float64)
tensor([-1.9045, -2.7318, -2.9167, -3.3001, -3.5044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0293, device='cuda:0', dtype=torch.float64)
tensor([-1.8946, -2.7639, -2.9626, -3.2594, -3.4582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9469, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.8332, -2.9708, -3.2755, -3.4210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1108, device='cuda:0', dtype=torch.float64)
tensor([-1.9172, -2.8876, -2.9417, -3.2017, -3.4137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6769, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.8391, -2.9556, -3.2319, -3.4252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0637, device='cuda:0', dtype=torch.float64)
tensor([-1.8913, -2.7637, -2.9746, -3.3069, -3.4313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6880, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.7151, -2.9610, -3.3539, -3.4283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2312, device='cuda:0', dtype=torch.float64)
tensor([-1.9311, -2.6505, -2.9316, -3.3358, -3.4342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2987, device='cuda:0', dtype=torch.float64)
tensor([-1.9724, -2.6470, -2.9080, -3.3050, -3.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8849, device='cuda:0', dtype=torch.float64)
tensor([-1.9858, -2.6585, -2.9153, -3.3140, -3.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5197, device='cuda:0', dtype=torch.float64)
tensor([-1.9730, -2.7133, -2.9327, -3.3313, -3.4084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9555, device='cuda:0', dtype=torch.float64)
tensor([-1.9401, -2.7258, -3.0009, -3.3673, -3.4432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4626, device='cuda:0', dtype=torch.float64)
tensor([-1.9103, -2.7185, -3.0719, -3.4288, -3.4696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2038, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.7168, -3.0899, -3.5257, -3.4920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0558, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.7606, -3.0064, -3.5155, -3.5234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0593, device='cuda:0', dtype=torch.float64)
tensor([-1.9761, -2.8419, -2.8942, -3.4067, -3.5170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0657, device='cuda:0', dtype=torch.float64)
tensor([-2.0114, -2.8009, -2.8488, -3.3437, -3.4542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5877, device='cuda:0', dtype=torch.float64)
tensor([-1.9603, -2.7073, -2.8808, -3.4134, -3.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1936, device='cuda:0', dtype=torch.float64)
tensor([-1.9347, -2.6700, -2.9488, -3.3784, -3.3530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4322, device='cuda:0', dtype=torch.float64)
tensor([-1.9797, -2.6879, -2.9617, -3.2937, -3.4197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3671, device='cuda:0', dtype=torch.float64)
tensor([-1.9730, -2.7434, -2.9599, -3.2977, -3.4986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5732, device='cuda:0', dtype=torch.float64)
tensor([-1.8886, -2.7458, -3.0010, -3.2945, -3.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4915, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.7616, -3.0319, -3.3020, -3.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4706, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.8006, -2.9963, -3.2235, -3.5040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8021, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.7968, -2.9629, -3.2170, -3.4756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5010, device='cuda:0', dtype=torch.float64)
tensor([-1.9323, -2.7180, -2.9226, -3.2177, -3.4354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6118, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.7176, -2.8580, -3.2831, -3.4266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0221, device='cuda:0', dtype=torch.float64)
tensor([-1.9675, -2.7446, -2.7940, -3.2803, -3.4075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0449, device='cuda:0', dtype=torch.float64)
tensor([-1.9637, -2.7857, -2.7733, -3.2437, -3.3974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8560, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.7463, -2.8098, -3.3416, -3.3752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6534, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.6582, -2.8882, -3.5748, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3169, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.6396, -2.9496, -3.5066, -3.3390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3534, device='cuda:0', dtype=torch.float64)
tensor([-1.9172, -2.6887, -2.9552, -3.4340, -3.3176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2343, device='cuda:0', dtype=torch.float64)
tensor([-1.9699, -2.7214, -2.9504, -3.3993, -3.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0719, device='cuda:0', dtype=torch.float64)
tensor([-1.9695, -2.7110, -2.9594, -3.3550, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0474, device='cuda:0', dtype=torch.float64)
tensor([-1.9565, -2.7203, -2.9520, -3.3485, -3.3779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8315, device='cuda:0', dtype=torch.float64)
tensor([-1.9466, -2.7421, -2.9147, -3.3490, -3.4410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2826, device='cuda:0', dtype=torch.float64)
tensor([-1.9263, -2.7361, -2.9100, -3.3060, -3.4989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7979, device='cuda:0', dtype=torch.float64)
tensor([-1.9233, -2.7349, -2.9295, -3.2728, -3.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6124, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.7041, -2.9822, -3.2647, -3.4273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0827, device='cuda:0', dtype=torch.float64)
tensor([-1.9192, -2.7369, -3.0432, -3.2775, -3.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4834, device='cuda:0', dtype=torch.float64)
tensor([-1.9377, -2.7923, -3.0554, -3.2704, -3.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8851, device='cuda:0', dtype=torch.float64)
tensor([-1.9592, -2.7652, -2.9966, -3.2649, -3.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6446, device='cuda:0', dtype=torch.float64)
tensor([-1.9553, -2.7388, -2.9215, -3.3569, -3.4281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6572, device='cuda:0', dtype=torch.float64)
tensor([-1.9350, -2.7029, -2.8243, -3.4261, -3.4709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8787, device='cuda:0', dtype=torch.float64)
tensor([-1.9227, -2.6892, -2.7932, -3.4784, -3.4961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5062, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.6895, -2.8234, -3.4710, -3.5360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4475, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.6899, -2.9185, -3.4465, -3.5645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7255, device='cuda:0', dtype=torch.float64)
tensor([-1.9086, -2.7469, -2.9598, -3.4097, -3.5894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6318, device='cuda:0', dtype=torch.float64)
tensor([-1.9447, -2.8124, -3.0191, -3.2466, -3.5682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4411, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.7932, -3.0935, -3.2388, -3.5601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9356, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.8176, -3.1140, -3.2697, -3.5581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4137, device='cuda:0', dtype=torch.float64)
tensor([-1.8969, -2.8093, -3.0421, -3.2022, -3.5452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8705, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.7538, -2.9435, -3.2065, -3.5417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7970, device='cuda:0', dtype=torch.float64)
tensor([-1.9161, -2.6480, -2.8867, -3.2967, -3.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5882, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.6090, -2.8578, -3.4922, -3.4508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0994, device='cuda:0', dtype=torch.float64)
tensor([-1.9064, -2.6622, -2.8301, -3.3151, -3.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6183, device='cuda:0', dtype=torch.float64)
tensor([-1.9464, -2.7695, -2.8275, -3.2488, -3.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4623, device='cuda:0', dtype=torch.float64)
tensor([-1.9334, -2.8240, -2.8768, -3.3059, -3.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9909, device='cuda:0', dtype=torch.float64)
tensor([-1.9204, -2.8307, -2.9489, -3.3394, -3.3466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4344, device='cuda:0', dtype=torch.float64)
tensor([-1.9489, -2.8081, -2.9454, -3.3317, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9862, device='cuda:0', dtype=torch.float64)
tensor([-1.9595, -2.7520, -2.9597, -3.3577, -3.3743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7192, device='cuda:0', dtype=torch.float64)
tensor([-1.9616, -2.6702, -2.9626, -3.3956, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6306, device='cuda:0', dtype=torch.float64)
tensor([-1.9377, -2.6021, -2.9752, -3.4669, -3.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2679, device='cuda:0', dtype=torch.float64)
tensor([-1.9699, -2.6683, -2.9440, -3.4062, -3.3575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8823, device='cuda:0', dtype=torch.float64)
tensor([-1.9781, -2.7639, -2.9616, -3.3321, -3.3601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8099, device='cuda:0', dtype=torch.float64)
tensor([-1.9564, -2.7861, -3.0015, -3.3445, -3.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8918, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.7992, -3.0086, -3.4253, -3.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7779, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.8013, -2.9589, -3.3906, -3.3449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1644, device='cuda:0', dtype=torch.float64)
tensor([-1.9208, -2.8276, -2.8989, -3.2938, -3.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9520, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.8014, -2.9023, -3.3018, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8238, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.7481, -2.9453, -3.3324, -3.3311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0760, device='cuda:0', dtype=torch.float64)
tensor([-1.9248, -2.7343, -2.9565, -3.2927, -3.3331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6048, device='cuda:0', dtype=torch.float64)
tensor([-1.9922, -2.7432, -2.9478, -3.2028, -3.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8483, device='cuda:0', dtype=torch.float64)
tensor([-2.0532, -2.7313, -2.9224, -3.1559, -3.3881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2156, device='cuda:0', dtype=torch.float64)
tensor([-2.0004, -2.7134, -2.9222, -3.2775, -3.4223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9467, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.6531, -2.9441, -3.1813, -3.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2825, device='cuda:0', dtype=torch.float64)
tensor([-1.8860, -2.6701, -2.9340, -3.2167, -3.4598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1180, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.7198, -2.8949, -3.3045, -3.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8272, device='cuda:0', dtype=torch.float64)
tensor([-1.9627, -2.8004, -2.8737, -3.2848, -3.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9588, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.8425, -2.9704, -3.3538, -3.5041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1194, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.8622, -2.9799, -3.7965, -3.5922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.9124, device='cuda:0', dtype=torch.float64)
tensor([-4.2646, -3.5084, -5.0092, -3.9744, -3.5160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.5112, device='cuda:0', dtype=torch.float64)
tensor([-120.8936, -250.5280, -125.4848, -173.1981, -127.4725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(299.4456, device='cuda:0', dtype=torch.float64)
tensor([-1009.0255, -1431.7518,  -370.2112,  -560.3520,  -602.2181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(590.5899, device='cuda:0', dtype=torch.float64)
tensor([-34.2678, -77.0288, -29.4948, -94.1108, -35.0143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(108.8348, device='cuda:0', dtype=torch.float64)
tensor([-129.2764, -356.0239, -131.9481, -246.9372, -104.9467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(215.6922, device='cuda:0', dtype=torch.float64)
tensor([-258.5583, -322.3015, -165.1529, -275.0472, -119.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(298.0491, device='cuda:0', dtype=torch.float64)
tensor([ -74.2702, -157.3668,  -67.6890, -137.2134,  -90.8422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(142.4838, device='cuda:0', dtype=torch.float64)
tensor([ -39.7433, -168.6983,  -82.0859, -104.0655,  -83.9253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(91.2230, device='cuda:0', dtype=torch.float64)
tensor([ -44.1968, -133.4992,  -78.0067, -115.2423,  -74.4258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(84.2771, device='cuda:0', dtype=torch.float64)
tensor([ -37.1113,  -91.0200,  -54.0705, -117.9728,  -85.9932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(87.3209, device='cuda:0', dtype=torch.float64)
tensor([ -67.0973, -121.2196,  -52.8296, -113.7632,  -78.8675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(105.7355, device='cuda:0', dtype=torch.float64)
tensor([ -72.2717, -102.8434,  -37.6607,  -94.9862,  -48.7028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(84.6988, device='cuda:0', dtype=torch.float64)
tensor([-46.7943, -71.9657, -27.8868, -70.5079, -30.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.8385, device='cuda:0', dtype=torch.float64)
tensor([-25.7072, -68.8041, -24.0098, -49.5635, -27.6275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(49.3112, device='cuda:0', dtype=torch.float64)
tensor([-20.9613, -66.7124, -22.0209, -42.1447, -31.5834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(40.0158, device='cuda:0', dtype=torch.float64)
tensor([-22.6160, -54.0512, -20.0595, -38.6445, -36.7339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.6568, device='cuda:0', dtype=torch.float64)
tensor([-19.9825, -43.5546, -19.3791, -36.0361, -44.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.4837, device='cuda:0', dtype=torch.float64)
tensor([-13.6190, -37.8667, -18.7586, -31.9324, -50.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.6484, device='cuda:0', dtype=torch.float64)
tensor([ -9.5976, -30.2618, -18.4404, -25.7614, -50.8396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(30.8316, device='cuda:0', dtype=torch.float64)
tensor([ -8.8367, -23.3458, -18.7422, -18.9528, -47.0122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.3138, device='cuda:0', dtype=torch.float64)
tensor([ -9.5816, -20.3440, -18.8613, -15.5753, -41.5383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.1338, device='cuda:0', dtype=torch.float64)
tensor([-10.1944, -19.8347, -18.6673, -13.7912, -35.7941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(22.3045, device='cuda:0', dtype=torch.float64)
tensor([ -9.9853, -20.1825, -18.2984, -13.0653, -30.6141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.5293, device='cuda:0', dtype=torch.float64)
tensor([ -9.2244, -21.0500, -17.7234, -12.9426, -26.6795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.3209, device='cuda:0', dtype=torch.float64)
tensor([ -8.3677, -22.1142, -17.0937, -13.0685, -23.9147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0443, device='cuda:0', dtype=torch.float64)
tensor([ -7.3270, -22.4106, -16.6169, -13.5132, -21.8231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.6544, device='cuda:0', dtype=torch.float64)
tensor([ -6.2938, -22.6893, -16.5937, -14.1701, -20.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.7594, device='cuda:0', dtype=torch.float64)
tensor([ -5.5604, -23.2609, -16.9243, -14.9430, -19.3132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3733, device='cuda:0', dtype=torch.float64)
tensor([ -5.0892, -23.0350, -17.0520, -15.5708, -18.4553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6235, device='cuda:0', dtype=torch.float64)
tensor([ -4.6934, -21.2838, -16.5922, -15.8200, -17.6425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.9714, device='cuda:0', dtype=torch.float64)
tensor([ -4.3614, -18.3932, -15.5662, -15.7449, -16.9568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7351, device='cuda:0', dtype=torch.float64)
tensor([ -4.1164, -15.4569, -14.1695, -15.4124, -16.4313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3433, device='cuda:0', dtype=torch.float64)
tensor([ -4.0353, -13.3991, -12.6534, -14.7346, -15.9170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3917, device='cuda:0', dtype=torch.float64)
tensor([ -4.1311, -12.2695, -11.2968, -13.9555, -15.3903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.1815, device='cuda:0', dtype=torch.float64)
tensor([ -4.3601, -11.6299, -10.2333, -13.3463, -14.8960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.8288, device='cuda:0', dtype=torch.float64)
tensor([ -4.6095, -11.1094,  -9.4372, -12.9398, -14.5256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.3081, device='cuda:0', dtype=torch.float64)
tensor([ -4.7107, -10.5942,  -8.8995, -12.5764, -14.2722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.8524, device='cuda:0', dtype=torch.float64)
tensor([ -4.6182, -10.1383,  -8.5687, -12.1916, -14.1700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1841, device='cuda:0', dtype=torch.float64)
tensor([ -4.3888,  -9.8087,  -8.4352, -11.7655, -14.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6480, device='cuda:0', dtype=torch.float64)
tensor([ -4.1404,  -9.6223,  -8.4917, -11.3203, -14.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.8133, device='cuda:0', dtype=torch.float64)
tensor([ -3.9082,  -9.5306,  -8.7250, -10.8693, -14.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.4053, device='cuda:0', dtype=torch.float64)
tensor([ -3.7024,  -9.4706,  -9.0183, -10.4259, -14.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2947, device='cuda:0', dtype=torch.float64)
tensor([ -3.5283,  -9.4380,  -9.2366,  -9.9860, -14.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9834, device='cuda:0', dtype=torch.float64)
tensor([ -3.3859,  -9.4116,  -9.2544,  -9.5507, -13.6815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6785, device='cuda:0', dtype=torch.float64)
tensor([ -3.2820,  -9.3956,  -9.0791,  -9.1787, -13.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4659, device='cuda:0', dtype=torch.float64)
tensor([ -3.2193,  -9.3751,  -8.7901,  -8.8671, -12.7181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3367, device='cuda:0', dtype=torch.float64)
tensor([ -3.1831,  -9.3411,  -8.4736,  -8.5965, -12.3227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9791, device='cuda:0', dtype=torch.float64)
tensor([ -3.1694,  -9.2925,  -8.2083,  -8.3643, -11.9920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1622, device='cuda:0', dtype=torch.float64)
tensor([ -3.1686,  -9.1803,  -8.0008,  -8.1899, -11.7265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0444, device='cuda:0', dtype=torch.float64)
tensor([ -3.1759,  -9.0173,  -7.8244,  -8.0749, -11.5217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8354, device='cuda:0', dtype=torch.float64)
tensor([ -3.1919,  -8.8166,  -7.6703,  -8.0118, -11.3798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5921, device='cuda:0', dtype=torch.float64)
tensor([ -3.2055,  -8.5956,  -7.5336,  -7.9852, -11.2940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0941, device='cuda:0', dtype=torch.float64)
tensor([ -3.2104,  -8.3958,  -7.3905,  -8.0074, -11.2566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1081, device='cuda:0', dtype=torch.float64)
tensor([ -3.2141,  -8.2607,  -7.2457,  -8.0682, -11.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9367, device='cuda:0', dtype=torch.float64)
tensor([ -3.1994,  -8.1872,  -7.0925,  -8.1659, -11.2436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7892, device='cuda:0', dtype=torch.float64)
tensor([ -3.1693,  -8.1503,  -6.9273,  -8.2859, -11.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5939, device='cuda:0', dtype=torch.float64)
tensor([ -3.1339,  -8.1127,  -6.7791,  -8.4158, -11.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7902, device='cuda:0', dtype=torch.float64)
tensor([ -3.1017,  -8.0678,  -6.6550,  -8.5229, -11.0340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6046, device='cuda:0', dtype=torch.float64)
tensor([ -3.0680,  -8.0207,  -6.5575,  -8.5925, -10.8799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4231, device='cuda:0', dtype=torch.float64)
tensor([ -3.0450,  -7.9920,  -6.4859,  -8.6038, -10.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3047, device='cuda:0', dtype=torch.float64)
tensor([ -3.0319,  -7.9616,  -6.4431,  -8.5681, -10.5302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1495, device='cuda:0', dtype=torch.float64)
tensor([ -3.0284,  -7.9275,  -6.4250,  -8.5183, -10.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1444, device='cuda:0', dtype=torch.float64)
tensor([ -3.0393,  -7.8802,  -6.4211,  -8.4422, -10.2258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9262, device='cuda:0', dtype=torch.float64)
tensor([ -3.0553,  -7.7840,  -6.4224,  -8.3576, -10.1069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8997, device='cuda:0', dtype=torch.float64)
tensor([ -3.0679,  -7.6416,  -6.4275,  -8.2849, -10.0193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8278, device='cuda:0', dtype=torch.float64)
tensor([-3.0697, -7.4754, -6.4319, -8.2229, -9.9364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6856, device='cuda:0', dtype=torch.float64)
tensor([-3.0616, -7.2949, -6.4372, -8.1815, -9.8717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8185, device='cuda:0', dtype=torch.float64)
tensor([-3.0517, -7.1252, -6.4128, -8.1455, -9.8154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6237, device='cuda:0', dtype=torch.float64)
tensor([-3.0448, -6.9810, -6.3665, -8.1186, -9.7593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8099, device='cuda:0', dtype=torch.float64)
tensor([-3.0360, -6.8725, -6.3010, -8.0887, -9.6793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9188, device='cuda:0', dtype=torch.float64)
tensor([-3.0343, -6.7988, -6.2114, -8.0574, -9.5679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8054, device='cuda:0', dtype=torch.float64)
tensor([-3.0306, -6.7606, -6.1245, -8.0024, -9.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6850, device='cuda:0', dtype=torch.float64)
tensor([-3.0288, -6.7436, -6.0524, -7.9293, -9.2783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4947, device='cuda:0', dtype=torch.float64)
tensor([-3.0266, -6.7400, -5.9936, -7.8623, -9.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4170, device='cuda:0', dtype=torch.float64)
tensor([-3.0216, -6.7295, -5.9457, -7.7993, -8.9837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3936, device='cuda:0', dtype=torch.float64)
tensor([-3.0191, -6.7137, -5.9152, -7.7347, -8.8515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3319, device='cuda:0', dtype=torch.float64)
tensor([-3.0100, -6.6648, -5.8930, -7.6853, -8.7285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3987, device='cuda:0', dtype=torch.float64)
tensor([-3.0068, -6.6058, -5.8709, -7.6333, -8.6215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1388, device='cuda:0', dtype=torch.float64)
tensor([-3.0004, -6.5249, -5.8632, -7.5962, -8.5423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2690, device='cuda:0', dtype=torch.float64)
tensor([-2.9949, -6.4356, -5.8553, -7.5724, -8.4776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2254, device='cuda:0', dtype=torch.float64)
tensor([-2.9964, -6.3673, -5.8559, -7.5534, -8.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3680, device='cuda:0', dtype=torch.float64)
tensor([-3.0018, -6.3125, -5.8426, -7.5308, -8.3938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0844, device='cuda:0', dtype=torch.float64)
tensor([-3.0087, -6.2763, -5.8250, -7.5050, -8.3580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2575, device='cuda:0', dtype=torch.float64)
tensor([-3.0234, -6.2527, -5.7965, -7.4742, -8.3232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1475, device='cuda:0', dtype=torch.float64)
tensor([-3.0226, -6.2296, -5.7802, -7.4490, -8.2810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0123, device='cuda:0', dtype=torch.float64)
tensor([-3.0052, -6.2014, -5.7601, -7.4358, -8.2328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9821, device='cuda:0', dtype=torch.float64)
tensor([-2.9712, -6.1578, -5.7393, -7.4360, -8.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9657, device='cuda:0', dtype=torch.float64)
tensor([-2.9321, -6.1025, -5.7121, -7.4300, -8.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0617, device='cuda:0', dtype=torch.float64)
tensor([-2.8888, -6.0302, -5.6911, -7.4184, -8.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0541, device='cuda:0', dtype=torch.float64)
tensor([-2.8444, -5.9624, -5.6667, -7.4217, -8.1085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0952, device='cuda:0', dtype=torch.float64)
tensor([-2.8037, -5.8924, -5.6319, -7.4195, -8.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0463, device='cuda:0', dtype=torch.float64)
tensor([-2.7747, -5.8401, -5.5976, -7.4055, -8.0646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8867, device='cuda:0', dtype=torch.float64)
tensor([-2.7544, -5.8035, -5.5642, -7.3784, -8.0302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0252, device='cuda:0', dtype=torch.float64)
tensor([-2.7521, -5.7879, -5.5309, -7.3447, -7.9843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1109, device='cuda:0', dtype=torch.float64)
tensor([-2.7717, -5.8014, -5.5004, -7.2841, -7.9287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2089, device='cuda:0', dtype=torch.float64)
tensor([-2.8053, -5.8315, -5.4602, -7.2159, -7.8703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9539, device='cuda:0', dtype=torch.float64)
tensor([-2.8312, -5.8587, -5.4227, -7.1643, -7.8098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9964, device='cuda:0', dtype=torch.float64)
tensor([-2.8560, -5.8717, -5.3841, -7.1242, -7.7567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9031, device='cuda:0', dtype=torch.float64)
tensor([-2.8667, -5.8608, -5.3502, -7.1015, -7.7078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9103, device='cuda:0', dtype=torch.float64)
tensor([-2.8630, -5.8316, -5.3171, -7.0993, -7.6545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9086, device='cuda:0', dtype=torch.float64)
tensor([-2.8469, -5.7892, -5.2867, -7.0989, -7.5988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1249, device='cuda:0', dtype=torch.float64)
tensor([-2.8302, -5.7434, -5.2582, -7.0895, -7.5442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2005, device='cuda:0', dtype=torch.float64)
tensor([-2.8239, -5.7092, -5.2165, -7.0497, -7.4774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9392, device='cuda:0', dtype=torch.float64)
tensor([-2.8225, -5.6796, -5.1780, -6.9945, -7.4168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0561, device='cuda:0', dtype=torch.float64)
tensor([-2.8162, -5.6470, -5.1418, -6.9499, -7.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1209, device='cuda:0', dtype=torch.float64)
tensor([-2.8117, -5.6224, -5.1065, -6.9076, -7.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8284, device='cuda:0', dtype=torch.float64)
tensor([-2.8029, -5.5955, -5.0898, -6.8629, -7.2760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0023, device='cuda:0', dtype=torch.float64)
tensor([-2.7961, -5.5588, -5.0622, -6.8206, -7.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8124, device='cuda:0', dtype=torch.float64)
tensor([-2.7815, -5.5166, -5.0394, -6.7944, -7.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9020, device='cuda:0', dtype=torch.float64)
tensor([-2.7701, -5.4778, -5.0210, -6.7768, -7.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7582, device='cuda:0', dtype=torch.float64)
tensor([-2.7647, -5.4355, -5.0076, -6.7555, -7.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7784, device='cuda:0', dtype=torch.float64)
tensor([-2.7657, -5.4016, -4.9918, -6.7348, -7.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7388, device='cuda:0', dtype=torch.float64)
tensor([-2.7659, -5.3697, -4.9821, -6.7231, -7.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7421, device='cuda:0', dtype=torch.float64)
tensor([-2.7725, -5.3464, -4.9707, -6.7090, -7.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8430, device='cuda:0', dtype=torch.float64)
tensor([-2.7870, -5.3340, -4.9599, -6.6838, -7.1052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6708, device='cuda:0', dtype=torch.float64)
tensor([-2.8052, -5.3238, -4.9364, -6.6461, -7.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5992, device='cuda:0', dtype=torch.float64)
tensor([-2.8098, -5.3139, -4.9173, -6.6176, -7.0016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9022, device='cuda:0', dtype=torch.float64)
tensor([-2.8063, -5.3033, -4.8967, -6.6081, -6.9435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7142, device='cuda:0', dtype=torch.float64)
tensor([-2.7956, -5.2761, -4.8909, -6.6047, -6.8938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6468, device='cuda:0', dtype=torch.float64)
tensor([-2.7776, -5.2329, -4.8935, -6.5979, -6.8604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6493, device='cuda:0', dtype=torch.float64)
tensor([-2.7705, -5.1979, -4.8990, -6.5876, -6.8366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5842, device='cuda:0', dtype=torch.float64)
tensor([-2.7551, -5.1593, -4.9081, -6.5704, -6.8241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6690, device='cuda:0', dtype=torch.float64)
tensor([-2.7493, -5.1263, -4.9163, -6.5351, -6.8241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6361, device='cuda:0', dtype=torch.float64)
tensor([-2.7464, -5.1022, -4.9250, -6.4956, -6.8181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5581, device='cuda:0', dtype=torch.float64)
tensor([-2.7434, -5.0805, -4.9172, -6.4570, -6.8038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8556, device='cuda:0', dtype=torch.float64)
tensor([-2.7397, -5.0575, -4.8906, -6.4292, -6.7900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8265, device='cuda:0', dtype=torch.float64)
tensor([-2.7363, -5.0364, -4.8711, -6.4175, -6.7646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7987, device='cuda:0', dtype=torch.float64)
tensor([-2.7330, -5.0216, -4.8472, -6.4190, -6.7329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8315, device='cuda:0', dtype=torch.float64)
tensor([-2.7108, -4.9928, -4.8258, -6.4312, -6.7009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6607, device='cuda:0', dtype=torch.float64)
tensor([-2.6968, -4.9787, -4.7904, -6.4282, -6.6678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7062, device='cuda:0', dtype=torch.float64)
tensor([-2.6881, -4.9733, -4.7553, -6.4135, -6.6369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7051, device='cuda:0', dtype=torch.float64)
tensor([-2.6898, -4.9768, -4.7296, -6.3854, -6.6124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0583, device='cuda:0', dtype=torch.float64)
tensor([-2.7080, -4.9983, -4.7043, -6.3499, -6.5912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6697, device='cuda:0', dtype=torch.float64)
tensor([-2.7236, -5.0245, -4.6887, -6.3131, -6.5823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6300, device='cuda:0', dtype=torch.float64)
tensor([-2.7302, -5.0409, -4.6836, -6.2727, -6.5775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7867, device='cuda:0', dtype=torch.float64)
tensor([-2.7307, -5.0463, -4.6801, -6.2369, -6.5688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0008, device='cuda:0', dtype=torch.float64)
tensor([-2.7121, -5.0206, -4.6869, -6.2126, -6.5548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6972, device='cuda:0', dtype=torch.float64)
tensor([-2.6865, -4.9896, -4.6938, -6.1997, -6.5378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7545, device='cuda:0', dtype=torch.float64)
tensor([-2.6549, -4.9571, -4.7036, -6.1995, -6.5076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7840, device='cuda:0', dtype=torch.float64)
tensor([-2.6258, -4.9271, -4.7105, -6.2111, -6.4724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6296, device='cuda:0', dtype=torch.float64)
tensor([-2.6074, -4.8942, -4.7074, -6.2272, -6.4502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8387, device='cuda:0', dtype=torch.float64)
tensor([-2.6056, -4.8764, -4.6948, -6.2359, -6.4266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6732, device='cuda:0', dtype=torch.float64)
tensor([-2.6130, -4.8717, -4.6791, -6.2512, -6.4108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4484, device='cuda:0', dtype=torch.float64)
tensor([-2.6255, -4.8685, -4.6686, -6.2634, -6.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6427, device='cuda:0', dtype=torch.float64)
tensor([-2.6357, -4.8610, -4.6600, -6.2794, -6.4220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4943, device='cuda:0', dtype=torch.float64)
tensor([-2.6505, -4.8474, -4.6462, -6.2856, -6.4451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6679, device='cuda:0', dtype=torch.float64)
tensor([-2.6657, -4.8484, -4.6482, -6.2842, -6.4563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5566, device='cuda:0', dtype=torch.float64)
tensor([-2.6711, -4.8489, -4.6461, -6.2807, -6.4398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5918, device='cuda:0', dtype=torch.float64)
tensor([-2.6764, -4.8534, -4.6387, -6.2673, -6.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5717, device='cuda:0', dtype=torch.float64)
tensor([-2.6774, -4.8483, -4.6251, -6.2430, -6.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5004, device='cuda:0', dtype=torch.float64)
tensor([-2.6702, -4.8366, -4.5947, -6.2184, -6.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6138, device='cuda:0', dtype=torch.float64)
tensor([-2.6668, -4.8278, -4.5614, -6.1783, -6.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5973, device='cuda:0', dtype=torch.float64)
tensor([-2.6636, -4.8258, -4.5355, -6.1400, -6.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3838, device='cuda:0', dtype=torch.float64)
tensor([-2.6598, -4.8313, -4.5169, -6.1126, -6.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4667, device='cuda:0', dtype=torch.float64)
tensor([-2.6574, -4.8259, -4.4988, -6.0820, -6.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2886, device='cuda:0', dtype=torch.float64)
tensor([-2.6530, -4.8143, -4.4843, -6.0579, -6.0692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5509, device='cuda:0', dtype=torch.float64)
tensor([-2.6443, -4.8034, -4.4816, -6.0379, -6.0559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5593, device='cuda:0', dtype=torch.float64)
tensor([-2.6315, -4.7849, -4.4814, -6.0299, -6.0588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5491, device='cuda:0', dtype=torch.float64)
tensor([-2.6207, -4.7652, -4.4762, -6.0301, -6.0701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-2.6102, -4.7451, -4.4770, -6.0426, -6.0888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7422, device='cuda:0', dtype=torch.float64)
tensor([-2.6009, -4.7196, -4.4809, -6.0713, -6.1090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5729, device='cuda:0', dtype=torch.float64)
tensor([-2.5952, -4.6941, -4.4837, -6.0992, -6.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4784, device='cuda:0', dtype=torch.float64)
tensor([-2.5945, -4.6742, -4.4881, -6.1020, -6.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6686, device='cuda:0', dtype=torch.float64)
tensor([-2.6149, -4.6740, -4.4781, -6.0742, -6.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5079, device='cuda:0', dtype=torch.float64)
tensor([-2.6413, -4.6759, -4.4606, -6.0362, -6.0711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6104, device='cuda:0', dtype=torch.float64)
tensor([-2.6681, -4.6813, -4.4322, -5.9837, -6.0325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6190, device='cuda:0', dtype=torch.float64)
tensor([-2.6768, -4.6716, -4.4060, -5.9370, -5.9983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6414, device='cuda:0', dtype=torch.float64)
tensor([-2.6690, -4.6617, -4.3897, -5.8919, -5.9550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4025, device='cuda:0', dtype=torch.float64)
tensor([-2.6518, -4.6492, -4.3936, -5.8610, -5.9151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8654, device='cuda:0', dtype=torch.float64)
tensor([-2.6297, -4.6349, -4.3953, -5.8581, -5.8924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4582, device='cuda:0', dtype=torch.float64)
tensor([-2.6027, -4.6105, -4.3994, -5.8615, -5.8857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5428, device='cuda:0', dtype=torch.float64)
tensor([-2.5770, -4.5905, -4.4020, -5.8831, -5.8919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6062, device='cuda:0', dtype=torch.float64)
tensor([-2.5587, -4.5741, -4.4113, -5.8886, -5.9009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6579, device='cuda:0', dtype=torch.float64)
tensor([-2.5523, -4.5609, -4.4138, -5.8896, -5.9032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6610, device='cuda:0', dtype=torch.float64)
tensor([-2.5502, -4.5510, -4.4192, -5.8864, -5.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5802, device='cuda:0', dtype=torch.float64)
tensor([-2.5581, -4.5427, -4.4088, -5.8621, -5.8640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5746, device='cuda:0', dtype=torch.float64)
tensor([-2.5693, -4.5477, -4.4039, -5.8243, -5.8196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4535, device='cuda:0', dtype=torch.float64)
tensor([-2.5843, -4.5701, -4.3961, -5.7970, -5.7698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5883, device='cuda:0', dtype=torch.float64)
tensor([-2.6051, -4.6018, -4.3922, -5.7648, -5.7202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3862, device='cuda:0', dtype=torch.float64)
tensor([-2.6153, -4.6277, -4.3937, -5.7363, -5.6847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5975, device='cuda:0', dtype=torch.float64)
tensor([-2.6139, -4.6271, -4.4053, -5.7219, -5.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5820, device='cuda:0', dtype=torch.float64)
tensor([-2.6098, -4.6179, -4.4108, -5.7134, -5.6627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5268, device='cuda:0', dtype=torch.float64)
tensor([-2.6078, -4.5923, -4.3994, -5.6995, -5.6691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5196, device='cuda:0', dtype=torch.float64)
tensor([-2.6010, -4.5575, -4.3791, -5.6937, -5.6816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2427, device='cuda:0', dtype=torch.float64)
tensor([-2.5932, -4.5247, -4.3556, -5.6826, -5.6853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4689, device='cuda:0', dtype=torch.float64)
tensor([-2.5841, -4.4975, -4.3309, -5.6760, -5.6881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6492, device='cuda:0', dtype=torch.float64)
tensor([-2.5780, -4.4745, -4.3009, -5.6547, -5.6800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5947, device='cuda:0', dtype=torch.float64)
tensor([-2.5738, -4.4624, -4.2750, -5.6278, -5.6628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5655, device='cuda:0', dtype=torch.float64)
tensor([-2.5665, -4.4518, -4.2587, -5.6148, -5.6450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5275, device='cuda:0', dtype=torch.float64)
tensor([-2.5544, -4.4377, -4.2489, -5.6253, -5.6239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7134, device='cuda:0', dtype=torch.float64)
tensor([-2.5576, -4.4516, -4.2370, -5.6150, -5.5800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5636, device='cuda:0', dtype=torch.float64)
tensor([-2.5638, -4.4605, -4.2296, -5.6279, -5.5409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5772, device='cuda:0', dtype=torch.float64)
tensor([-2.5627, -4.4594, -4.2310, -5.6616, -5.5090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4368, device='cuda:0', dtype=torch.float64)
tensor([-2.5618, -4.4508, -4.2334, -5.6897, -5.4839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5069, device='cuda:0', dtype=torch.float64)
tensor([-2.5768, -4.4460, -4.2303, -5.6907, -5.4686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6718, device='cuda:0', dtype=torch.float64)
tensor([-2.6010, -4.4454, -4.2173, -5.6859, -5.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5687, device='cuda:0', dtype=torch.float64)
tensor([-2.6277, -4.4528, -4.2025, -5.6586, -5.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7237, device='cuda:0', dtype=torch.float64)
tensor([-2.6546, -4.4573, -4.1865, -5.6330, -5.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4044, device='cuda:0', dtype=torch.float64)
tensor([-2.6625, -4.4587, -4.1842, -5.6249, -5.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6508, device='cuda:0', dtype=torch.float64)
tensor([-2.6470, -4.4346, -4.1891, -5.6305, -5.4201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4720, device='cuda:0', dtype=torch.float64)
tensor([-2.6202, -4.4077, -4.1975, -5.6358, -5.4055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2858, device='cuda:0', dtype=torch.float64)
tensor([-2.5898, -4.3776, -4.2047, -5.6438, -5.3852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4954, device='cuda:0', dtype=torch.float64)
tensor([-2.5576, -4.3487, -4.2157, -5.6535, -5.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5019, device='cuda:0', dtype=torch.float64)
tensor([-2.5239, -4.3205, -4.2257, -5.6829, -5.3575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6185, device='cuda:0', dtype=torch.float64)
tensor([-2.4976, -4.2886, -4.2503, -5.7139, -5.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6638, device='cuda:0', dtype=torch.float64)
tensor([-2.4912, -4.2782, -4.2574, -5.7232, -5.3504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5904, device='cuda:0', dtype=torch.float64)
tensor([-2.5039, -4.2777, -4.2491, -5.7229, -5.3458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4458, device='cuda:0', dtype=torch.float64)
tensor([-2.5105, -4.2763, -4.2381, -5.7256, -5.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3772, device='cuda:0', dtype=torch.float64)
tensor([-2.5202, -4.2765, -4.2110, -5.7303, -5.3449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5887, device='cuda:0', dtype=torch.float64)
tensor([-2.5319, -4.2798, -4.1845, -5.7263, -5.3415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3998, device='cuda:0', dtype=torch.float64)
tensor([-2.5474, -4.2850, -4.1625, -5.7134, -5.3335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5551, device='cuda:0', dtype=torch.float64)
tensor([-2.5550, -4.2878, -4.1470, -5.6997, -5.3230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3579, device='cuda:0', dtype=torch.float64)
tensor([-2.5611, -4.2842, -4.1272, -5.6873, -5.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4192, device='cuda:0', dtype=torch.float64)
tensor([-2.5594, -4.2695, -4.1157, -5.6844, -5.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7509, device='cuda:0', dtype=torch.float64)
tensor([-2.5535, -4.2599, -4.1100, -5.6795, -5.2796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4697, device='cuda:0', dtype=torch.float64)
tensor([-2.5400, -4.2459, -4.1149, -5.6838, -5.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6532, device='cuda:0', dtype=torch.float64)
tensor([-2.5208, -4.2328, -4.1179, -5.6904, -5.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4081, device='cuda:0', dtype=torch.float64)
tensor([-2.5081, -4.2305, -4.1238, -5.6953, -5.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5678, device='cuda:0', dtype=torch.float64)
tensor([-2.4956, -4.2171, -4.1340, -5.7020, -5.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4534, device='cuda:0', dtype=torch.float64)
tensor([-2.4892, -4.2104, -4.1400, -5.6997, -5.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4051, device='cuda:0', dtype=torch.float64)
tensor([-2.4832, -4.1980, -4.1430, -5.6843, -5.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4595, device='cuda:0', dtype=torch.float64)
tensor([-2.4771, -4.1833, -4.1457, -5.6693, -5.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3736, device='cuda:0', dtype=torch.float64)
tensor([-2.4794, -4.1770, -4.1381, -5.6489, -5.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7056, device='cuda:0', dtype=torch.float64)
tensor([-2.4906, -4.1794, -4.1247, -5.6216, -5.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4169, device='cuda:0', dtype=torch.float64)
tensor([-2.5073, -4.1859, -4.1024, -5.5935, -5.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4598, device='cuda:0', dtype=torch.float64)
tensor([-2.5210, -4.2016, -4.0859, -5.5662, -5.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4126, device='cuda:0', dtype=torch.float64)
tensor([-2.5278, -4.2158, -4.0718, -5.5523, -5.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6716, device='cuda:0', dtype=torch.float64)
tensor([-2.5366, -4.2254, -4.0504, -5.5321, -5.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6721, device='cuda:0', dtype=torch.float64)
tensor([-2.5305, -4.2019, -4.0395, -5.5435, -5.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2701, device='cuda:0', dtype=torch.float64)
tensor([-2.5167, -4.1814, -4.0312, -5.5429, -5.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4489, device='cuda:0', dtype=torch.float64)
tensor([-2.5041, -4.1702, -4.0247, -5.5355, -5.0734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3037, device='cuda:0', dtype=torch.float64)
tensor([-2.4936, -4.1671, -4.0225, -5.5269, -5.0546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6898, device='cuda:0', dtype=torch.float64)
tensor([-2.4848, -4.1518, -4.0176, -5.5331, -5.0432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5687, device='cuda:0', dtype=torch.float64)
tensor([-2.4693, -4.1313, -4.0213, -5.5601, -5.0359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5688, device='cuda:0', dtype=torch.float64)
tensor([-2.4595, -4.1129, -4.0197, -5.5809, -5.0300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4359, device='cuda:0', dtype=torch.float64)
tensor([-2.4628, -4.1062, -4.0179, -5.5846, -5.0227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5240, device='cuda:0', dtype=torch.float64)
tensor([-2.4749, -4.1072, -4.0140, -5.5748, -5.0176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7398, device='cuda:0', dtype=torch.float64)
tensor([-2.5006, -4.1275, -4.0034, -5.5412, -5.0045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4134, device='cuda:0', dtype=torch.float64)
tensor([-2.5229, -4.1360, -3.9945, -5.5147, -4.9875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4401, device='cuda:0', dtype=torch.float64)
tensor([-2.5333, -4.1438, -3.9909, -5.5061, -4.9734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4952, device='cuda:0', dtype=torch.float64)
tensor([-2.5198, -4.1402, -3.9987, -5.5203, -4.9614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7149, device='cuda:0', dtype=torch.float64)
tensor([-2.4980, -4.1251, -4.0199, -5.5610, -4.9635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6432, device='cuda:0', dtype=torch.float64)
tensor([-2.4825, -4.1065, -4.0313, -5.5932, -4.9808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6770, device='cuda:0', dtype=torch.float64)
tensor([-2.4789, -4.1012, -4.0313, -5.5993, -5.0066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7183, device='cuda:0', dtype=torch.float64)
tensor([-2.4810, -4.1061, -4.0237, -5.5761, -5.0355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4370, device='cuda:0', dtype=torch.float64)
tensor([-2.4908, -4.1237, -4.0033, -5.5227, -5.0556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4965, device='cuda:0', dtype=torch.float64)
tensor([-2.4997, -4.1389, -3.9775, -5.4626, -5.0618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5291, device='cuda:0', dtype=torch.float64)
tensor([-2.4990, -4.1411, -3.9527, -5.4171, -5.0553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3910, device='cuda:0', dtype=torch.float64)
tensor([-2.5009, -4.1377, -3.9278, -5.3731, -5.0426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7762, device='cuda:0', dtype=torch.float64)
tensor([-2.4907, -4.1201, -3.9204, -5.3490, -5.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6694, device='cuda:0', dtype=torch.float64)
tensor([-2.4689, -4.0919, -3.9210, -5.3592, -4.9906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7181, device='cuda:0', dtype=torch.float64)
tensor([-2.4505, -4.0755, -3.9223, -5.3740, -4.9722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3807, device='cuda:0', dtype=torch.float64)
tensor([-2.4375, -4.0703, -3.9273, -5.3949, -4.9554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3026, device='cuda:0', dtype=torch.float64)
tensor([-2.4311, -4.0709, -3.9327, -5.4162, -4.9454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3805, device='cuda:0', dtype=torch.float64)
tensor([-2.4185, -4.0606, -3.9398, -5.4384, -4.9463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5171, device='cuda:0', dtype=torch.float64)
tensor([-2.4102, -4.0564, -3.9397, -5.4532, -4.9372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3786, device='cuda:0', dtype=torch.float64)
tensor([-2.4085, -4.0576, -3.9372, -5.4504, -4.9263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7173, device='cuda:0', dtype=torch.float64)
tensor([-2.4077, -4.0455, -3.9309, -5.4419, -4.9177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5323, device='cuda:0', dtype=torch.float64)
tensor([-2.4032, -4.0279, -3.9272, -5.4235, -4.9009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3811, device='cuda:0', dtype=torch.float64)
tensor([-2.4049, -4.0107, -3.9091, -5.3868, -4.8868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6181, device='cuda:0', dtype=torch.float64)
tensor([-2.4196, -4.0026, -3.8771, -5.3396, -4.8756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6857, device='cuda:0', dtype=torch.float64)
tensor([-2.4444, -4.0069, -3.8496, -5.2668, -4.8702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4872, device='cuda:0', dtype=torch.float64)
tensor([-2.4645, -4.0073, -3.8376, -5.2119, -4.8705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5137, device='cuda:0', dtype=torch.float64)
tensor([-2.4721, -4.0030, -3.8414, -5.1675, -4.8666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6423, device='cuda:0', dtype=torch.float64)
tensor([-2.4746, -3.9950, -3.8580, -5.1385, -4.8648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3261, device='cuda:0', dtype=torch.float64)
tensor([-2.4678, -3.9835, -3.8806, -5.1323, -4.8617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5673, device='cuda:0', dtype=torch.float64)
tensor([-2.4617, -3.9792, -3.9029, -5.1402, -4.8591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4170, device='cuda:0', dtype=torch.float64)
tensor([-2.4724, -3.9858, -3.9134, -5.1385, -4.8551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5627, device='cuda:0', dtype=torch.float64)
tensor([-2.4896, -3.9968, -3.9150, -5.1293, -4.8537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5236, device='cuda:0', dtype=torch.float64)
tensor([-2.5044, -4.0058, -3.9128, -5.1137, -4.8518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8116, device='cuda:0', dtype=torch.float64)
tensor([-2.5256, -4.0222, -3.9016, -5.0915, -4.8479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7776, device='cuda:0', dtype=torch.float64)
tensor([-2.5301, -4.0284, -3.8972, -5.0993, -4.8385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3747, device='cuda:0', dtype=torch.float64)
tensor([-2.5159, -4.0084, -3.8933, -5.1339, -4.8267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6789, device='cuda:0', dtype=torch.float64)
tensor([-2.5044, -3.9844, -3.8791, -5.1615, -4.8187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4832, device='cuda:0', dtype=torch.float64)
tensor([-2.5004, -3.9632, -3.8590, -5.1927, -4.8143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4422, device='cuda:0', dtype=torch.float64)
tensor([-2.4849, -3.9338, -3.8555, -5.2124, -4.8103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5625, device='cuda:0', dtype=torch.float64)
tensor([-2.4806, -3.9138, -3.8485, -5.2052, -4.8071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4847, device='cuda:0', dtype=torch.float64)
tensor([-2.4774, -3.8965, -3.8446, -5.1858, -4.8042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4530, device='cuda:0', dtype=torch.float64)
tensor([-2.4580, -3.8661, -3.8559, -5.1932, -4.8043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3083, device='cuda:0', dtype=torch.float64)
tensor([-2.4405, -3.8459, -3.8637, -5.1955, -4.8089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5537, device='cuda:0', dtype=torch.float64)
tensor([-2.4170, -3.8384, -3.8699, -5.1998, -4.8165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2587, device='cuda:0', dtype=torch.float64)
tensor([-2.3906, -3.8319, -3.8756, -5.2111, -4.8225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5512, device='cuda:0', dtype=torch.float64)
tensor([-2.3818, -3.8321, -3.8756, -5.2043, -4.8271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3463, device='cuda:0', dtype=torch.float64)
tensor([-2.3912, -3.8458, -3.8659, -5.1788, -4.8320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5695, device='cuda:0', dtype=torch.float64)
tensor([-2.4086, -3.8608, -3.8540, -5.1520, -4.8402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7095, device='cuda:0', dtype=torch.float64)
tensor([-2.4358, -3.8774, -3.8451, -5.1246, -4.8532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5047, device='cuda:0', dtype=torch.float64)
tensor([-2.4744, -3.9073, -3.8323, -5.0944, -4.8537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5268, device='cuda:0', dtype=torch.float64)
tensor([-2.4964, -3.9191, -3.8262, -5.0808, -4.8408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6093, device='cuda:0', dtype=torch.float64)
tensor([-2.5010, -3.9177, -3.8194, -5.0872, -4.8238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4277, device='cuda:0', dtype=torch.float64)
tensor([-2.4997, -3.9124, -3.8121, -5.1015, -4.8076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2697, device='cuda:0', dtype=torch.float64)
tensor([-2.4920, -3.8971, -3.8075, -5.1241, -4.7998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6487, device='cuda:0', dtype=torch.float64)
tensor([-2.4824, -3.8784, -3.8056, -5.1370, -4.7949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3915, device='cuda:0', dtype=torch.float64)
tensor([-2.4737, -3.8573, -3.8033, -5.1499, -4.7917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2807, device='cuda:0', dtype=torch.float64)
tensor([-2.4600, -3.8419, -3.8064, -5.1578, -4.7872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3497, device='cuda:0', dtype=torch.float64)
tensor([-2.4540, -3.8400, -3.8095, -5.1379, -4.7803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4747, device='cuda:0', dtype=torch.float64)
tensor([-2.4488, -3.8460, -3.8100, -5.1296, -4.7815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4941, device='cuda:0', dtype=torch.float64)
tensor([-2.4417, -3.8534, -3.8159, -5.1264, -4.7859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4627, device='cuda:0', dtype=torch.float64)
tensor([-2.4302, -3.8483, -3.8254, -5.1399, -4.7877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4589, device='cuda:0', dtype=torch.float64)
tensor([-2.4104, -3.8276, -3.8371, -5.1680, -4.7842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5891, device='cuda:0', dtype=torch.float64)
tensor([-2.3949, -3.8028, -3.8472, -5.2013, -4.7712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4538, device='cuda:0', dtype=torch.float64)
tensor([-2.3885, -3.7894, -3.8530, -5.2262, -4.7587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5494, device='cuda:0', dtype=torch.float64)
tensor([-2.3998, -3.7833, -3.8472, -5.2210, -4.7536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5637, device='cuda:0', dtype=torch.float64)
tensor([-2.4201, -3.7811, -3.8331, -5.2033, -4.7472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6992, device='cuda:0', dtype=torch.float64)
tensor([-2.4448, -3.7764, -3.8089, -5.1755, -4.7437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4178, device='cuda:0', dtype=torch.float64)
tensor([-2.4789, -3.7802, -3.7854, -5.1373, -4.7434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4370, device='cuda:0', dtype=torch.float64)
tensor([-2.5114, -3.7889, -3.7643, -5.0894, -4.7430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3977, device='cuda:0', dtype=torch.float64)
tensor([-2.5211, -3.7924, -3.7538, -5.0574, -4.7409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7090, device='cuda:0', dtype=torch.float64)
tensor([-2.5161, -3.7957, -3.7540, -5.0449, -4.7332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6773, device='cuda:0', dtype=torch.float64)
tensor([-2.4938, -3.7843, -3.7589, -5.0448, -4.7205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2619, device='cuda:0', dtype=torch.float64)
tensor([-2.4600, -3.7692, -3.7752, -5.0539, -4.7061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5715, device='cuda:0', dtype=torch.float64)
tensor([-2.4380, -3.7678, -3.7827, -5.0488, -4.6898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4568, device='cuda:0', dtype=torch.float64)
tensor([-2.4184, -3.7616, -3.7856, -5.0542, -4.6701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6105, device='cuda:0', dtype=torch.float64)
tensor([-2.3944, -3.7514, -3.7913, -5.0607, -4.6462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4905, device='cuda:0', dtype=torch.float64)
tensor([-2.3700, -3.7330, -3.7963, -5.0714, -4.6282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4462, device='cuda:0', dtype=torch.float64)
tensor([-2.3560, -3.7191, -3.7975, -5.0766, -4.6108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6103, device='cuda:0', dtype=torch.float64)
tensor([-2.3635, -3.7182, -3.7880, -5.0465, -4.5967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5638, device='cuda:0', dtype=torch.float64)
tensor([-2.3869, -3.7214, -3.7703, -5.0078, -4.5911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6664, device='cuda:0', dtype=torch.float64)
tensor([-2.4205, -3.7247, -3.7526, -4.9683, -4.5902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2814, device='cuda:0', dtype=torch.float64)
tensor([-2.4592, -3.7366, -3.7381, -4.9368, -4.5916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7391, device='cuda:0', dtype=torch.float64)
tensor([-2.4705, -3.7320, -3.7411, -4.9306, -4.5893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3247, device='cuda:0', dtype=torch.float64)
tensor([-2.4624, -3.7198, -3.7462, -4.9317, -4.5910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3143, device='cuda:0', dtype=torch.float64)
tensor([-2.4413, -3.7096, -3.7546, -4.9389, -4.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5018, device='cuda:0', dtype=torch.float64)
tensor([-2.4246, -3.7061, -3.7586, -4.9605, -4.5776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6553, device='cuda:0', dtype=torch.float64)
tensor([-2.4039, -3.7004, -3.7588, -4.9978, -4.5756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5738, device='cuda:0', dtype=torch.float64)
tensor([-2.3991, -3.7100, -3.7469, -5.0199, -4.5796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3528, device='cuda:0', dtype=torch.float64)
tensor([-2.3990, -3.7286, -3.7269, -5.0245, -4.5878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6309, device='cuda:0', dtype=torch.float64)
tensor([-2.4134, -3.7561, -3.6983, -5.0078, -4.5914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5381, device='cuda:0', dtype=torch.float64)
tensor([-2.4324, -3.7784, -3.6742, -4.9835, -4.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4933, device='cuda:0', dtype=torch.float64)
tensor([-2.4503, -3.7995, -3.6559, -4.9521, -4.6177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5452, device='cuda:0', dtype=torch.float64)
tensor([-2.4533, -3.8081, -3.6467, -4.9390, -4.6182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4447, device='cuda:0', dtype=torch.float64)
tensor([-2.4517, -3.8082, -3.6502, -4.9242, -4.6134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5263, device='cuda:0', dtype=torch.float64)
tensor([-2.4478, -3.7937, -3.6611, -4.9243, -4.6058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4598, device='cuda:0', dtype=torch.float64)
tensor([-2.4300, -3.7703, -3.6818, -4.9436, -4.5968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5303, device='cuda:0', dtype=torch.float64)
tensor([-2.4009, -3.7332, -3.7065, -4.9768, -4.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8665, device='cuda:0', dtype=torch.float64)
tensor([-2.3763, -3.6964, -3.7343, -4.9987, -4.5817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5336, device='cuda:0', dtype=torch.float64)
tensor([-2.3590, -3.6645, -3.7564, -4.9890, -4.5708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3985, device='cuda:0', dtype=torch.float64)
tensor([-2.3574, -3.6343, -3.7708, -4.9652, -4.5621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5612, device='cuda:0', dtype=torch.float64)
tensor([-2.3782, -3.6256, -3.7630, -4.9145, -4.5525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5912, device='cuda:0', dtype=torch.float64)
tensor([-2.4039, -3.6298, -3.7463, -4.8509, -4.5400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5589, device='cuda:0', dtype=torch.float64)
tensor([-2.4413, -3.6436, -3.7247, -4.7837, -4.5370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5527, device='cuda:0', dtype=torch.float64)
tensor([-2.4723, -3.6631, -3.7046, -4.7305, -4.5415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7430, device='cuda:0', dtype=torch.float64)
tensor([-2.4976, -3.6822, -3.6904, -4.7037, -4.5480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3576, device='cuda:0', dtype=torch.float64)
tensor([-2.5090, -3.7005, -3.6819, -4.6949, -4.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7079, device='cuda:0', dtype=torch.float64)
tensor([-2.5003, -3.7097, -3.6772, -4.7220, -4.5500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1138, device='cuda:0', dtype=torch.float64)
tensor([-2.4794, -3.7022, -3.6836, -4.7812, -4.5433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3908, device='cuda:0', dtype=torch.float64)
tensor([-2.4601, -3.6984, -3.6897, -4.8439, -4.5325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5320, device='cuda:0', dtype=torch.float64)
tensor([-2.4406, -3.6880, -3.6902, -4.9006, -4.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6540, device='cuda:0', dtype=torch.float64)
tensor([-2.4335, -3.6804, -3.6903, -4.9348, -4.5266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6021, device='cuda:0', dtype=torch.float64)
tensor([-2.4283, -3.6665, -3.6885, -4.9612, -4.5223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7760, device='cuda:0', dtype=torch.float64)
tensor([-2.4367, -3.6617, -3.6745, -4.9475, -4.5146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5921, device='cuda:0', dtype=torch.float64)
tensor([-2.4537, -3.6659, -3.6631, -4.9107, -4.5064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4079, device='cuda:0', dtype=torch.float64)
tensor([-2.4738, -3.6735, -3.6528, -4.8737, -4.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3785, device='cuda:0', dtype=torch.float64)
tensor([-2.4962, -3.6903, -3.6434, -4.8346, -4.4940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5198, device='cuda:0', dtype=torch.float64)
tensor([-2.5038, -3.6978, -3.6312, -4.8026, -4.4787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4952, device='cuda:0', dtype=torch.float64)
tensor([-2.4915, -3.6972, -3.6266, -4.7885, -4.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3371, device='cuda:0', dtype=torch.float64)
tensor([-2.4574, -3.6714, -3.6362, -4.8045, -4.4390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8793, device='cuda:0', dtype=torch.float64)
tensor([-2.4228, -3.6455, -3.6478, -4.8202, -4.4236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4971, device='cuda:0', dtype=torch.float64)
tensor([-2.4045, -3.6306, -3.6567, -4.8403, -4.4194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4198, device='cuda:0', dtype=torch.float64)
tensor([-2.3965, -3.6213, -3.6669, -4.8587, -4.4236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4500, device='cuda:0', dtype=torch.float64)
tensor([-2.4028, -3.6168, -3.6703, -4.8582, -4.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4611, device='cuda:0', dtype=torch.float64)
tensor([-2.4130, -3.6189, -3.6621, -4.8399, -4.4440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3011, device='cuda:0', dtype=torch.float64)
tensor([-2.4208, -3.6165, -3.6531, -4.8202, -4.4530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2282, device='cuda:0', dtype=torch.float64)
tensor([-2.4269, -3.6081, -3.6524, -4.8060, -4.4595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4090, device='cuda:0', dtype=torch.float64)
tensor([-2.4424, -3.5944, -3.6465, -4.8010, -4.4676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3722, device='cuda:0', dtype=torch.float64)
tensor([-2.4562, -3.5836, -3.6430, -4.8006, -4.4718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5809, device='cuda:0', dtype=torch.float64)
tensor([-2.4620, -3.5776, -3.6410, -4.8086, -4.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4447, device='cuda:0', dtype=torch.float64)
tensor([-2.4667, -3.5779, -3.6367, -4.8127, -4.4606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3767, device='cuda:0', dtype=torch.float64)
tensor([-2.4733, -3.5874, -3.6351, -4.8220, -4.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3528, device='cuda:0', dtype=torch.float64)
tensor([-2.4643, -3.5916, -3.6394, -4.8413, -4.4298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5134, device='cuda:0', dtype=torch.float64)
tensor([-2.4510, -3.5922, -3.6501, -4.8577, -4.4174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3526, device='cuda:0', dtype=torch.float64)
tensor([-2.4357, -3.5915, -3.6607, -4.8702, -4.4047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5217, device='cuda:0', dtype=torch.float64)
tensor([-2.4321, -3.5940, -3.6652, -4.8653, -4.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6475, device='cuda:0', dtype=torch.float64)
tensor([-2.4378, -3.5950, -3.6711, -4.8416, -4.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3299, device='cuda:0', dtype=torch.float64)
tensor([-2.4349, -3.5859, -3.6877, -4.8247, -4.3829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9386, device='cuda:0', dtype=torch.float64)
tensor([-2.4431, -3.5805, -3.7002, -4.7933, -4.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3317, device='cuda:0', dtype=torch.float64)
tensor([-2.4517, -3.5691, -3.7082, -4.7585, -4.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7162, device='cuda:0', dtype=torch.float64)
tensor([-2.4611, -3.5572, -3.7148, -4.7227, -4.3592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4733, device='cuda:0', dtype=torch.float64)
tensor([-2.4793, -3.5515, -3.7238, -4.6943, -4.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3112, device='cuda:0', dtype=torch.float64)
tensor([-2.4913, -3.5529, -3.7262, -4.6702, -4.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5926, device='cuda:0', dtype=torch.float64)
tensor([-2.5032, -3.5591, -3.7274, -4.6470, -4.3439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5984, device='cuda:0', dtype=torch.float64)
tensor([-2.5126, -3.5701, -3.7175, -4.6181, -4.3520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4399, device='cuda:0', dtype=torch.float64)
tensor([-2.5145, -3.5792, -3.7036, -4.6106, -4.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3372, device='cuda:0', dtype=torch.float64)
tensor([-2.4983, -3.5743, -3.7002, -4.6328, -4.3717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5867, device='cuda:0', dtype=torch.float64)
tensor([-2.4772, -3.5681, -3.7015, -4.6731, -4.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5921, device='cuda:0', dtype=torch.float64)
tensor([-2.4561, -3.5615, -3.7008, -4.7219, -4.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4078, device='cuda:0', dtype=torch.float64)
tensor([-2.4487, -3.5638, -3.6984, -4.7611, -4.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5024, device='cuda:0', dtype=torch.float64)
tensor([-2.4380, -3.5539, -3.6967, -4.8103, -4.4121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5933, device='cuda:0', dtype=torch.float64)
tensor([-2.4336, -3.5433, -3.6917, -4.8387, -4.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4318, device='cuda:0', dtype=torch.float64)
tensor([-2.4205, -3.5332, -3.6926, -4.8568, -4.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6495, device='cuda:0', dtype=torch.float64)
tensor([-2.4183, -3.5288, -3.6876, -4.8591, -4.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3062, device='cuda:0', dtype=torch.float64)
tensor([-2.4267, -3.5294, -3.6742, -4.8472, -4.3965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6671, device='cuda:0', dtype=torch.float64)
tensor([-2.4259, -3.5263, -3.6687, -4.8416, -4.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1743, device='cuda:0', dtype=torch.float64)
tensor([-2.4268, -3.5233, -3.6626, -4.8229, -4.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7213, device='cuda:0', dtype=torch.float64)
tensor([-2.4210, -3.5190, -3.6604, -4.8012, -4.3732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5510, device='cuda:0', dtype=torch.float64)
tensor([-2.4122, -3.5228, -3.6569, -4.7805, -4.3631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6343, device='cuda:0', dtype=torch.float64)
tensor([-2.4049, -3.5289, -3.6563, -4.7553, -4.3539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-2.3860, -3.5259, -3.6602, -4.7437, -4.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7137, device='cuda:0', dtype=torch.float64)
tensor([-2.3660, -3.5187, -3.6619, -4.7429, -4.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6230, device='cuda:0', dtype=torch.float64)
tensor([-2.3540, -3.5130, -3.6560, -4.7477, -4.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0389, device='cuda:0', dtype=torch.float64)
tensor([-2.3307, -3.5054, -3.6534, -4.7635, -4.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5059, device='cuda:0', dtype=torch.float64)
tensor([-2.3302, -3.5156, -3.6413, -4.7498, -4.3414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3236, device='cuda:0', dtype=torch.float64)
tensor([-2.3422, -3.5254, -3.6253, -4.7358, -4.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5239, device='cuda:0', dtype=torch.float64)
tensor([-2.3640, -3.5272, -3.6156, -4.7171, -4.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3155, device='cuda:0', dtype=torch.float64)
tensor([-2.3967, -3.5357, -3.6015, -4.6863, -4.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3888, device='cuda:0', dtype=torch.float64)
tensor([-2.4211, -3.5365, -3.5936, -4.6684, -4.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3157, device='cuda:0', dtype=torch.float64)
tensor([-2.4451, -3.5412, -3.5889, -4.6380, -4.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4672, device='cuda:0', dtype=torch.float64)
tensor([-2.4600, -3.5450, -3.5871, -4.6157, -4.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4263, device='cuda:0', dtype=torch.float64)
tensor([-2.4783, -3.5578, -3.5861, -4.5917, -4.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5731, device='cuda:0', dtype=torch.float64)
tensor([-2.4846, -3.5644, -3.5951, -4.5723, -4.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5832, device='cuda:0', dtype=torch.float64)
tensor([-2.4761, -3.5665, -3.5998, -4.5602, -4.3442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5352, device='cuda:0', dtype=torch.float64)
tensor([-2.4632, -3.5590, -3.6018, -4.5619, -4.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8714, device='cuda:0', dtype=torch.float64)
tensor([-2.4572, -3.5614, -3.6076, -4.5648, -4.3543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3960, device='cuda:0', dtype=torch.float64)
tensor([-2.4474, -3.5630, -3.6103, -4.5695, -4.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7102, device='cuda:0', dtype=torch.float64)
tensor([-2.4402, -3.5723, -3.6132, -4.5948, -4.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5404, device='cuda:0', dtype=torch.float64)
tensor([-2.4286, -3.5726, -3.6194, -4.6162, -4.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8637, device='cuda:0', dtype=torch.float64)
tensor([-2.4134, -3.5688, -3.6242, -4.6351, -4.3517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3695, device='cuda:0', dtype=torch.float64)
tensor([-2.3966, -3.5598, -3.6277, -4.6567, -4.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7054, device='cuda:0', dtype=torch.float64)
tensor([-2.3836, -3.5462, -3.6297, -4.6820, -4.3220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6059, device='cuda:0', dtype=torch.float64)
tensor([-2.3638, -3.5265, -3.6365, -4.7149, -4.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4341, device='cuda:0', dtype=torch.float64)
tensor([-2.3494, -3.5115, -3.6422, -4.7456, -4.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5302, device='cuda:0', dtype=torch.float64)
tensor([-2.3531, -3.5068, -3.6397, -4.7660, -4.2810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4768, device='cuda:0', dtype=torch.float64)
tensor([-2.3680, -3.4980, -3.6329, -4.7529, -4.2799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5611, device='cuda:0', dtype=torch.float64)
tensor([-2.3897, -3.5006, -3.6171, -4.7225, -4.2833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3750, device='cuda:0', dtype=torch.float64)
tensor([-2.4034, -3.4981, -3.6079, -4.6969, -4.2850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2376, device='cuda:0', dtype=torch.float64)
tensor([-2.4193, -3.4970, -3.6014, -4.6589, -4.2894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4403, device='cuda:0', dtype=torch.float64)
tensor([-2.4289, -3.4973, -3.5972, -4.6358, -4.2940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4830, device='cuda:0', dtype=torch.float64)
tensor([-2.4292, -3.4914, -3.5979, -4.6212, -4.2964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5438, device='cuda:0', dtype=torch.float64)
tensor([-2.4345, -3.4949, -3.5876, -4.6130, -4.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7758, device='cuda:0', dtype=torch.float64)
tensor([-2.4361, -3.4962, -3.5756, -4.6174, -4.3183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5210, device='cuda:0', dtype=torch.float64)
tensor([-2.4288, -3.5005, -3.5760, -4.6298, -4.3294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6083, device='cuda:0', dtype=torch.float64)
tensor([-2.4168, -3.4952, -3.5819, -4.6545, -4.3412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3039, device='cuda:0', dtype=torch.float64)
tensor([-2.4059, -3.4921, -3.5935, -4.6751, -4.3529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4527, device='cuda:0', dtype=torch.float64)
tensor([-2.4130, -3.5039, -3.5945, -4.6736, -4.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9078, device='cuda:0', dtype=torch.float64)
tensor([-2.4274, -3.5280, -3.5905, -4.6392, -4.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9259, device='cuda:0', dtype=torch.float64)
tensor([-2.4511, -3.5708, -3.5781, -4.5934, -4.3614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4166, device='cuda:0', dtype=torch.float64)
tensor([-2.4721, -3.6111, -3.5608, -4.5527, -4.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9417, device='cuda:0', dtype=torch.float64)
tensor([-2.4702, -3.6159, -3.5524, -4.5468, -4.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9885, device='cuda:0', dtype=torch.float64)
tensor([-2.4487, -3.5990, -3.5537, -4.5557, -4.3184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5839, device='cuda:0', dtype=torch.float64)
tensor([-2.4169, -3.5645, -3.5622, -4.5932, -4.2935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3476, device='cuda:0', dtype=torch.float64)
tensor([-2.3847, -3.5330, -3.5664, -4.6402, -4.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2692, device='cuda:0', dtype=torch.float64)
tensor([-2.3700, -3.5201, -3.5615, -4.6689, -4.2653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7112, device='cuda:0', dtype=torch.float64)
tensor([-2.3687, -3.5052, -3.5537, -4.6784, -4.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4449, device='cuda:0', dtype=torch.float64)
tensor([-2.3747, -3.4952, -3.5474, -4.6620, -4.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7925, device='cuda:0', dtype=torch.float64)
tensor([-2.3893, -3.4857, -3.5335, -4.6223, -4.2723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6865, device='cuda:0', dtype=torch.float64)
tensor([-2.4182, -3.4852, -3.5062, -4.5765, -4.2869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3403, device='cuda:0', dtype=torch.float64)
tensor([-2.4644, -3.5003, -3.4773, -4.5240, -4.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5449, device='cuda:0', dtype=torch.float64)
tensor([-2.4730, -3.5015, -3.4716, -4.5118, -4.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4545, device='cuda:0', dtype=torch.float64)
tensor([-2.4618, -3.4928, -3.4755, -4.5297, -4.3138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6533, device='cuda:0', dtype=torch.float64)
tensor([-2.4369, -3.4779, -3.4967, -4.5772, -4.3091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4518, device='cuda:0', dtype=torch.float64)
tensor([-2.4004, -3.4491, -3.5315, -4.6398, -4.2968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4550, device='cuda:0', dtype=torch.float64)
tensor([-2.3637, -3.4209, -3.5637, -4.6987, -4.2832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5899, device='cuda:0', dtype=torch.float64)
tensor([-2.3389, -3.3975, -3.5849, -4.7389, -4.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9190, device='cuda:0', dtype=torch.float64)
tensor([-2.3216, -3.3914, -3.5981, -4.7585, -4.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5617, device='cuda:0', dtype=torch.float64)
tensor([-2.3192, -3.3910, -3.6025, -4.7528, -4.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6896, device='cuda:0', dtype=torch.float64)
tensor([-2.3436, -3.4033, -3.5890, -4.7105, -4.2727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4695, device='cuda:0', dtype=torch.float64)
tensor([-2.3740, -3.4311, -3.5717, -4.6672, -4.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5390, device='cuda:0', dtype=torch.float64)
tensor([-2.3977, -3.4631, -3.5625, -4.6262, -4.2929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5706, device='cuda:0', dtype=torch.float64)
tensor([-2.4220, -3.4983, -3.5572, -4.5938, -4.3012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8527, device='cuda:0', dtype=torch.float64)
tensor([-2.4439, -3.5268, -3.5598, -4.5583, -4.3098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6514, device='cuda:0', dtype=torch.float64)
tensor([-2.4557, -3.5359, -3.5670, -4.5382, -4.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8193, device='cuda:0', dtype=torch.float64)
tensor([-2.4580, -3.5361, -3.5794, -4.5362, -4.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7515, device='cuda:0', dtype=torch.float64)
tensor([-2.4411, -3.5138, -3.5985, -4.5708, -4.3073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4714, device='cuda:0', dtype=torch.float64)
tensor([-2.4187, -3.4868, -3.6207, -4.6235, -4.3172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6792, device='cuda:0', dtype=torch.float64)
tensor([-2.4040, -3.4706, -3.6357, -4.6629, -4.3202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5798, device='cuda:0', dtype=torch.float64)
tensor([-2.3979, -3.4700, -3.6387, -4.6799, -4.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9052, device='cuda:0', dtype=torch.float64)
tensor([-2.4166, -3.4920, -3.6162, -4.6530, -4.3173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5584, device='cuda:0', dtype=torch.float64)
tensor([-2.4418, -3.5131, -3.5935, -4.6074, -4.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3018, device='cuda:0', dtype=torch.float64)
tensor([-2.4714, -3.5394, -3.5676, -4.5624, -4.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7090, device='cuda:0', dtype=torch.float64)
tensor([-2.5049, -3.5651, -3.5399, -4.5107, -4.3414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5940, device='cuda:0', dtype=torch.float64)
tensor([-2.5220, -3.5806, -3.5218, -4.4855, -4.3394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3762, device='cuda:0', dtype=torch.float64)
tensor([-2.5204, -3.5775, -3.5121, -4.4850, -4.3297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9777, device='cuda:0', dtype=torch.float64)
tensor([-2.4855, -3.5434, -3.5313, -4.4935, -4.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4217, device='cuda:0', dtype=torch.float64)
tensor([-2.4445, -3.4943, -3.5625, -4.5057, -4.2813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5367, device='cuda:0', dtype=torch.float64)
tensor([-2.3945, -3.4426, -3.6046, -4.5180, -4.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5699, device='cuda:0', dtype=torch.float64)
tensor([-2.3435, -3.3944, -3.6480, -4.5308, -4.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5632, device='cuda:0', dtype=torch.float64)
tensor([-2.3184, -3.3571, -3.6781, -4.5194, -4.2305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2517, device='cuda:0', dtype=torch.float64)
tensor([-2.3124, -3.3429, -3.6856, -4.4826, -4.2223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8165, device='cuda:0', dtype=torch.float64)
tensor([-2.3203, -3.3463, -3.6807, -4.4480, -4.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7254, device='cuda:0', dtype=torch.float64)
tensor([-2.3512, -3.3773, -3.6535, -4.3872, -4.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6793, device='cuda:0', dtype=torch.float64)
tensor([-2.3991, -3.4301, -3.6111, -4.3170, -4.2187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4038, device='cuda:0', dtype=torch.float64)
tensor([-2.4526, -3.4917, -3.5675, -4.2608, -4.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3828, device='cuda:0', dtype=torch.float64)
tensor([-2.4898, -3.5346, -3.5334, -4.2376, -4.2484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9195, device='cuda:0', dtype=torch.float64)
tensor([-2.5003, -3.5528, -3.5169, -4.2541, -4.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4147, device='cuda:0', dtype=torch.float64)
tensor([-2.4769, -3.5480, -3.5157, -4.3031, -4.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7070, device='cuda:0', dtype=torch.float64)
tensor([-2.4485, -3.5361, -3.5252, -4.3569, -4.2716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4277, device='cuda:0', dtype=torch.float64)
tensor([-2.4146, -3.5141, -3.5383, -4.4159, -4.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5620, device='cuda:0', dtype=torch.float64)
tensor([-2.3939, -3.5086, -3.5534, -4.4531, -4.2761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7810, device='cuda:0', dtype=torch.float64)
tensor([-2.3822, -3.5008, -3.5713, -4.4838, -4.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8504, device='cuda:0', dtype=torch.float64)
tensor([-2.3696, -3.4928, -3.5865, -4.5056, -4.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5547, device='cuda:0', dtype=torch.float64)
tensor([-2.3558, -3.4769, -3.6017, -4.5208, -4.2783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4822, device='cuda:0', dtype=torch.float64)
tensor([-2.3543, -3.4554, -3.6014, -4.5092, -4.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4707, device='cuda:0', dtype=torch.float64)
tensor([-2.3695, -3.4332, -3.5946, -4.4706, -4.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4714, device='cuda:0', dtype=torch.float64)
tensor([-2.3952, -3.4204, -3.5868, -4.4334, -4.2272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3168, device='cuda:0', dtype=torch.float64)
tensor([-2.4288, -3.4180, -3.5795, -4.3867, -4.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6902, device='cuda:0', dtype=torch.float64)
tensor([-2.4703, -3.4271, -3.5642, -4.3453, -4.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4681, device='cuda:0', dtype=torch.float64)
tensor([-2.5092, -3.4428, -3.5504, -4.3251, -4.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7226, device='cuda:0', dtype=torch.float64)
tensor([-2.5355, -3.4635, -3.5443, -4.3125, -4.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7061, device='cuda:0', dtype=torch.float64)
tensor([-2.5308, -3.4646, -3.5525, -4.3339, -4.2484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7140, device='cuda:0', dtype=torch.float64)
tensor([-2.5036, -3.4604, -3.5670, -4.3671, -4.2320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7000, device='cuda:0', dtype=torch.float64)
tensor([-2.4508, -3.4440, -3.5937, -4.4359, -4.2077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6709, device='cuda:0', dtype=torch.float64)
tensor([-2.3823, -3.4325, -3.6285, -4.5210, -4.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5886, device='cuda:0', dtype=torch.float64)
tensor([-2.3343, -3.4445, -3.6508, -4.5867, -4.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5744, device='cuda:0', dtype=torch.float64)
tensor([-2.3075, -3.4718, -3.6530, -4.6150, -4.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9013, device='cuda:0', dtype=torch.float64)
tensor([-2.3050, -3.5088, -3.6348, -4.6077, -4.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6213, device='cuda:0', dtype=torch.float64)
tensor([-2.3254, -3.5446, -3.5970, -4.5620, -4.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4090, device='cuda:0', dtype=torch.float64)
tensor([-2.3563, -3.5800, -3.5496, -4.4988, -4.1330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4959, device='cuda:0', dtype=torch.float64)
tensor([-2.3910, -3.6015, -3.5098, -4.4309, -4.1417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6475, device='cuda:0', dtype=torch.float64)
tensor([-2.4191, -3.5972, -3.4771, -4.3816, -4.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4691, device='cuda:0', dtype=torch.float64)
tensor([-2.4348, -3.5749, -3.4622, -4.3494, -4.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1959, device='cuda:0', dtype=torch.float64)
tensor([-2.4137, -3.5199, -3.4606, -4.3489, -4.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5908, device='cuda:0', dtype=torch.float64)
tensor([-2.3866, -3.4516, -3.4736, -4.3682, -4.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7227, device='cuda:0', dtype=torch.float64)
tensor([-2.3637, -3.3777, -3.4932, -4.4264, -4.1546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7688, device='cuda:0', dtype=torch.float64)
tensor([-2.3569, -3.3329, -3.5059, -4.4805, -4.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7585, device='cuda:0', dtype=torch.float64)
tensor([-2.3703, -3.3206, -3.5034, -4.5153, -4.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9073, device='cuda:0', dtype=torch.float64)
tensor([-2.3940, -3.3314, -3.4919, -4.5243, -4.1793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8135, device='cuda:0', dtype=torch.float64)
tensor([-2.4269, -3.3587, -3.4797, -4.5090, -4.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3489, device='cuda:0', dtype=torch.float64)
tensor([-2.4538, -3.3930, -3.4733, -4.4913, -4.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5921, device='cuda:0', dtype=torch.float64)
tensor([-2.4762, -3.4417, -3.4632, -4.4806, -4.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7113, device='cuda:0', dtype=torch.float64)
tensor([-2.5089, -3.5007, -3.4585, -4.4615, -4.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6498, device='cuda:0', dtype=torch.float64)
tensor([-2.5226, -3.5442, -3.4614, -4.4468, -4.2871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4512, device='cuda:0', dtype=torch.float64)
tensor([-2.5262, -3.5744, -3.4749, -4.4402, -4.3035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6568, device='cuda:0', dtype=torch.float64)
tensor([-2.4988, -3.5778, -3.5038, -4.4559, -4.3005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6869, device='cuda:0', dtype=torch.float64)
tensor([-2.4432, -3.5386, -3.5442, -4.5050, -4.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7001, device='cuda:0', dtype=torch.float64)
tensor([-2.4075, -3.5020, -3.5859, -4.5454, -4.2655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5490, device='cuda:0', dtype=torch.float64)
tensor([-2.3810, -3.4759, -3.6226, -4.5756, -4.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6189, device='cuda:0', dtype=torch.float64)
tensor([-2.3669, -3.4626, -3.6443, -4.5737, -4.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6664, device='cuda:0', dtype=torch.float64)
tensor([-2.3653, -3.4618, -3.6527, -4.5400, -4.2469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4558, device='cuda:0', dtype=torch.float64)
tensor([-2.3708, -3.4608, -3.6544, -4.4936, -4.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5197, device='cuda:0', dtype=torch.float64)
tensor([-2.3897, -3.4745, -3.6423, -4.4354, -4.2379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4082, device='cuda:0', dtype=torch.float64)
tensor([-2.4021, -3.4812, -3.6312, -4.3770, -4.2245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5323, device='cuda:0', dtype=torch.float64)
tensor([-2.4251, -3.4993, -3.6072, -4.3318, -4.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5541, device='cuda:0', dtype=torch.float64)
tensor([-2.4351, -3.5006, -3.5976, -4.3089, -4.1967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4775, device='cuda:0', dtype=torch.float64)
tensor([-2.4270, -3.4850, -3.5991, -4.3109, -4.1910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6141, device='cuda:0', dtype=torch.float64)
tensor([-2.4004, -3.4574, -3.6105, -4.3370, -4.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5242, device='cuda:0', dtype=torch.float64)
tensor([-2.3759, -3.4317, -3.6259, -4.3748, -4.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5055, device='cuda:0', dtype=torch.float64)
tensor([-2.3694, -3.4139, -3.6293, -4.4078, -4.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3942, device='cuda:0', dtype=torch.float64)
tensor([-2.3601, -3.3952, -3.6274, -4.4471, -4.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8033, device='cuda:0', dtype=torch.float64)
tensor([-2.3506, -3.3826, -3.6183, -4.4872, -4.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7518, device='cuda:0', dtype=torch.float64)
tensor([-2.3470, -3.3833, -3.6043, -4.5135, -4.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0461, device='cuda:0', dtype=torch.float64)
tensor([-2.3662, -3.4004, -3.5738, -4.5197, -4.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5791, device='cuda:0', dtype=torch.float64)
tensor([-2.3937, -3.4231, -3.5399, -4.5206, -4.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4320, device='cuda:0', dtype=torch.float64)
tensor([-2.4223, -3.4505, -3.5060, -4.5163, -4.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8484, device='cuda:0', dtype=torch.float64)
tensor([-2.4530, -3.4870, -3.4670, -4.4847, -4.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3645, device='cuda:0', dtype=torch.float64)
tensor([-2.4741, -3.5163, -3.4275, -4.4370, -4.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5400, device='cuda:0', dtype=torch.float64)
tensor([-2.4884, -3.5415, -3.4012, -4.3962, -4.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3723, device='cuda:0', dtype=torch.float64)
tensor([-2.4839, -3.5464, -3.3879, -4.3680, -4.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5915, device='cuda:0', dtype=torch.float64)
tensor([-2.4765, -3.5414, -3.3870, -4.3417, -4.1999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3981, device='cuda:0', dtype=torch.float64)
tensor([-2.4684, -3.5253, -3.3937, -4.3290, -4.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6268, device='cuda:0', dtype=torch.float64)
tensor([-2.4624, -3.5024, -3.4149, -4.3205, -4.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5870, device='cuda:0', dtype=torch.float64)
tensor([-2.4643, -3.4894, -3.4381, -4.3000, -4.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3471, device='cuda:0', dtype=torch.float64)
tensor([-2.4618, -3.4763, -3.4547, -4.2942, -4.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8860, device='cuda:0', dtype=torch.float64)
tensor([-2.4506, -3.4604, -3.4730, -4.2896, -4.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3203, device='cuda:0', dtype=torch.float64)
tensor([-2.4285, -3.4460, -3.4986, -4.3003, -4.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7733, device='cuda:0', dtype=torch.float64)
tensor([-2.4149, -3.4350, -3.5212, -4.3054, -4.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6601, device='cuda:0', dtype=torch.float64)
tensor([-2.4121, -3.4467, -3.5281, -4.2886, -4.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7357, device='cuda:0', dtype=torch.float64)
tensor([-2.4253, -3.4682, -3.5189, -4.2757, -4.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6469, device='cuda:0', dtype=torch.float64)
tensor([-2.4321, -3.4797, -3.5084, -4.2826, -4.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5621, device='cuda:0', dtype=torch.float64)
tensor([-2.4333, -3.4853, -3.5124, -4.2900, -4.1470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7660, device='cuda:0', dtype=torch.float64)
tensor([-2.4289, -3.4825, -3.5227, -4.3109, -4.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7571, device='cuda:0', dtype=torch.float64)
tensor([-2.4135, -3.4782, -3.5352, -4.3521, -4.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6285, device='cuda:0', dtype=torch.float64)
tensor([-2.4211, -3.4879, -3.5374, -4.3742, -4.1195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4683, device='cuda:0', dtype=torch.float64)
tensor([-2.4327, -3.5033, -3.5445, -4.3755, -4.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3514, device='cuda:0', dtype=torch.float64)
tensor([-2.4347, -3.5122, -3.5472, -4.3752, -4.0879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4057, device='cuda:0', dtype=torch.float64)
tensor([-2.4297, -3.5083, -3.5549, -4.3843, -4.0715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4755, device='cuda:0', dtype=torch.float64)
tensor([-2.4210, -3.4998, -3.5551, -4.3909, -4.0536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5633, device='cuda:0', dtype=torch.float64)
tensor([-2.4193, -3.4962, -3.5409, -4.3902, -4.0443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6018, device='cuda:0', dtype=torch.float64)
tensor([-2.4289, -3.4985, -3.5147, -4.3851, -4.0456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5419, device='cuda:0', dtype=torch.float64)
tensor([-2.4385, -3.5046, -3.4804, -4.3716, -4.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6822, device='cuda:0', dtype=torch.float64)
tensor([-2.4580, -3.5146, -3.4485, -4.3590, -4.0599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7314, device='cuda:0', dtype=torch.float64)
tensor([-2.4596, -3.5034, -3.4353, -4.3645, -4.0702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9526, device='cuda:0', dtype=torch.float64)
tensor([-2.4398, -3.4717, -3.4444, -4.3928, -4.0706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6653, device='cuda:0', dtype=torch.float64)
tensor([-2.4167, -3.4522, -3.4640, -4.4203, -4.0632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8772, device='cuda:0', dtype=torch.float64)
tensor([-2.4059, -3.4529, -3.4770, -4.4314, -4.0623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5237, device='cuda:0', dtype=torch.float64)
tensor([-2.3991, -3.4580, -3.4928, -4.4540, -4.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5372, device='cuda:0', dtype=torch.float64)
tensor([-2.3983, -3.4610, -3.5073, -4.4566, -4.0630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5056, device='cuda:0', dtype=torch.float64)
tensor([-2.3987, -3.4631, -3.5118, -4.4461, -4.0644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5207, device='cuda:0', dtype=torch.float64)
tensor([-2.4091, -3.4642, -3.5124, -4.4249, -4.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6973, device='cuda:0', dtype=torch.float64)
tensor([-2.4316, -3.4765, -3.5100, -4.3859, -4.0706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5269, device='cuda:0', dtype=torch.float64)
tensor([-2.4557, -3.4861, -3.5095, -4.3354, -4.0794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7528, device='cuda:0', dtype=torch.float64)
tensor([-2.4903, -3.4966, -3.5114, -4.2872, -4.0927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3594, device='cuda:0', dtype=torch.float64)
tensor([-2.5207, -3.5042, -3.5114, -4.2460, -4.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8149, device='cuda:0', dtype=torch.float64)
tensor([-2.5590, -3.5221, -3.5031, -4.2152, -4.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6245, device='cuda:0', dtype=torch.float64)
tensor([-2.5671, -3.5222, -3.5118, -4.2236, -4.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7541, device='cuda:0', dtype=torch.float64)
tensor([-2.5643, -3.5149, -3.5202, -4.2524, -4.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7308, device='cuda:0', dtype=torch.float64)
tensor([-2.5424, -3.4948, -3.5253, -4.2786, -4.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9472, device='cuda:0', dtype=torch.float64)
tensor([-2.4945, -3.4608, -3.5435, -4.3286, -4.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6756, device='cuda:0', dtype=torch.float64)
tensor([-2.4484, -3.4365, -3.5661, -4.3759, -4.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0850, device='cuda:0', dtype=torch.float64)
tensor([-2.4143, -3.4401, -3.5840, -4.3981, -4.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9489, device='cuda:0', dtype=torch.float64)
tensor([-2.3795, -3.4378, -3.5985, -4.4252, -4.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5527, device='cuda:0', dtype=torch.float64)
tensor([-2.3634, -3.4461, -3.5965, -4.4173, -4.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3689, device='cuda:0', dtype=torch.float64)
tensor([-2.3535, -3.4568, -3.5873, -4.3934, -4.1151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4278, device='cuda:0', dtype=torch.float64)
tensor([-2.3599, -3.4770, -3.5634, -4.3510, -4.0979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7014, device='cuda:0', dtype=torch.float64)
tensor([-2.3768, -3.4914, -3.5395, -4.3168, -4.0873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0716, device='cuda:0', dtype=torch.float64)
tensor([-2.3979, -3.4965, -3.5198, -4.2900, -4.0934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6961, device='cuda:0', dtype=torch.float64)
tensor([-2.4129, -3.5057, -3.4989, -4.2684, -4.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6250, device='cuda:0', dtype=torch.float64)
tensor([-2.4283, -3.5115, -3.4789, -4.2595, -4.0942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6973, device='cuda:0', dtype=torch.float64)
tensor([-2.4426, -3.5031, -3.4771, -4.2814, -4.1019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4648, device='cuda:0', dtype=torch.float64)
tensor([-2.4594, -3.4962, -3.4839, -4.3122, -4.1062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3489, device='cuda:0', dtype=torch.float64)
tensor([-2.4763, -3.5054, -3.4889, -4.3312, -4.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8404, device='cuda:0', dtype=torch.float64)
tensor([-2.4846, -3.5115, -3.4936, -4.3355, -4.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3770, device='cuda:0', dtype=torch.float64)
tensor([-2.4866, -3.5115, -3.4988, -4.3297, -4.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6525, device='cuda:0', dtype=torch.float64)
tensor([-2.4757, -3.5052, -3.5071, -4.3290, -4.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5675, device='cuda:0', dtype=torch.float64)
tensor([-2.4705, -3.5045, -3.4990, -4.3044, -4.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8355, device='cuda:0', dtype=torch.float64)
tensor([-2.4719, -3.5091, -3.4834, -4.2665, -4.1707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5787, device='cuda:0', dtype=torch.float64)
tensor([-2.4664, -3.5131, -3.4709, -4.2205, -4.1756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4473, device='cuda:0', dtype=torch.float64)
tensor([-2.4633, -3.5240, -3.4601, -4.1739, -4.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3868, device='cuda:0', dtype=torch.float64)
tensor([-2.4495, -3.5169, -3.4631, -4.1486, -4.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5088, device='cuda:0', dtype=torch.float64)
tensor([-2.4288, -3.4963, -3.4721, -4.1388, -4.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8960, device='cuda:0', dtype=torch.float64)
tensor([-2.4139, -3.4836, -3.4830, -4.1323, -4.2153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4857, device='cuda:0', dtype=torch.float64)
tensor([-2.4029, -3.4642, -3.5076, -4.1260, -4.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8508, device='cuda:0', dtype=torch.float64)
tensor([-2.3916, -3.4422, -3.5351, -4.1400, -4.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9074, device='cuda:0', dtype=torch.float64)
tensor([-2.3797, -3.4241, -3.5567, -4.1615, -4.1958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7648, device='cuda:0', dtype=torch.float64)
tensor([-2.3685, -3.4178, -3.5789, -4.1925, -4.1842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7741, device='cuda:0', dtype=torch.float64)
tensor([-2.3627, -3.4118, -3.6005, -4.2398, -4.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4304, device='cuda:0', dtype=torch.float64)
tensor([-2.3556, -3.4072, -3.6187, -4.2919, -4.2022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8979, device='cuda:0', dtype=torch.float64)
tensor([-2.3777, -3.4216, -3.6217, -4.3006, -4.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8039, device='cuda:0', dtype=torch.float64)
tensor([-2.4168, -3.4464, -3.6115, -4.2917, -4.2512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5575, device='cuda:0', dtype=torch.float64)
tensor([-2.4555, -3.4743, -3.6097, -4.3001, -4.2733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5651, device='cuda:0', dtype=torch.float64)
tensor([-2.4831, -3.5047, -3.5991, -4.3099, -4.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8871, device='cuda:0', dtype=torch.float64)
tensor([-2.5056, -3.5292, -3.5864, -4.3259, -4.2918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5838, device='cuda:0', dtype=torch.float64)
tensor([-2.5125, -3.5379, -3.5870, -4.3632, -4.2828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8054, device='cuda:0', dtype=torch.float64)
tensor([-2.4972, -3.5311, -3.5928, -4.3959, -4.2581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6540, device='cuda:0', dtype=torch.float64)
tensor([-2.4954, -3.5323, -3.5950, -4.4069, -4.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3346, device='cuda:0', dtype=torch.float64)
tensor([-2.4889, -3.5182, -3.5956, -4.4084, -4.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8084, device='cuda:0', dtype=torch.float64)
tensor([-2.4707, -3.4950, -3.5998, -4.4136, -4.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4057, device='cuda:0', dtype=torch.float64)
tensor([-2.4501, -3.4778, -3.6072, -4.4062, -4.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6601, device='cuda:0', dtype=torch.float64)
tensor([-2.4403, -3.4710, -3.6098, -4.3875, -4.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9913, device='cuda:0', dtype=torch.float64)
tensor([-2.3971, -3.4366, -3.6340, -4.3936, -4.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8171, device='cuda:0', dtype=torch.float64)
tensor([-2.3782, -3.4202, -3.6490, -4.3637, -4.1070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5933, device='cuda:0', dtype=torch.float64)
tensor([-2.3734, -3.4076, -3.6554, -4.3267, -4.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8935, device='cuda:0', dtype=torch.float64)
tensor([-2.3858, -3.4038, -3.6505, -4.2723, -4.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6874, device='cuda:0', dtype=torch.float64)
tensor([-2.4147, -3.4162, -3.6393, -4.2143, -4.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5962, device='cuda:0', dtype=torch.float64)
tensor([-2.4520, -3.4343, -3.6320, -4.1550, -4.0784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4866, device='cuda:0', dtype=torch.float64)
tensor([-2.4782, -3.4526, -3.6300, -4.1196, -4.0710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8252, device='cuda:0', dtype=torch.float64)
tensor([-2.4700, -3.4405, -3.6453, -4.1140, -4.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4715, device='cuda:0', dtype=torch.float64)
tensor([-2.4598, -3.4317, -3.6524, -4.1166, -4.0393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5620, device='cuda:0', dtype=torch.float64)
tensor([-2.4466, -3.4126, -3.6663, -4.1336, -4.0205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4859, device='cuda:0', dtype=torch.float64)
tensor([-2.4486, -3.3979, -3.6698, -4.1651, -4.0051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6284, device='cuda:0', dtype=torch.float64)
tensor([-2.4514, -3.3968, -3.6613, -4.1991, -3.9932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9544, device='cuda:0', dtype=torch.float64)
tensor([-2.4400, -3.3796, -3.6576, -4.2594, -3.9772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6104, device='cuda:0', dtype=torch.float64)
tensor([-2.4274, -3.3685, -3.6528, -4.3270, -3.9676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7899, device='cuda:0', dtype=torch.float64)
tensor([-2.4282, -3.3699, -3.6286, -4.3527, -3.9770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6303, device='cuda:0', dtype=torch.float64)
tensor([-2.4422, -3.3786, -3.5959, -4.3546, -3.9998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6938, device='cuda:0', dtype=torch.float64)
tensor([-2.4670, -3.4014, -3.5672, -4.3499, -4.0377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9143, device='cuda:0', dtype=torch.float64)
tensor([-2.5025, -3.4423, -3.5381, -4.3449, -4.0903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4348, device='cuda:0', dtype=torch.float64)
tensor([-2.5271, -3.4734, -3.5177, -4.3486, -4.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5782, device='cuda:0', dtype=torch.float64)
tensor([-2.5418, -3.4962, -3.5134, -4.3480, -4.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7339, device='cuda:0', dtype=torch.float64)
tensor([-2.5337, -3.5035, -3.5274, -4.3576, -4.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8456, device='cuda:0', dtype=torch.float64)
tensor([-2.5220, -3.4889, -3.5614, -4.3681, -4.2103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8562, device='cuda:0', dtype=torch.float64)
tensor([-2.4918, -3.4495, -3.6142, -4.3928, -4.2155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8214, device='cuda:0', dtype=torch.float64)
tensor([-2.4660, -3.4042, -3.6684, -4.4250, -4.2159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2864, device='cuda:0', dtype=torch.float64)
tensor([-2.4451, -3.3659, -3.7222, -4.4618, -4.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7713, device='cuda:0', dtype=torch.float64)
tensor([-2.4460, -3.3404, -3.7482, -4.4723, -4.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9874, device='cuda:0', dtype=torch.float64)
tensor([-2.4632, -3.3314, -3.7476, -4.4552, -4.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9068, device='cuda:0', dtype=torch.float64)
tensor([-2.4881, -3.3314, -3.7340, -4.4169, -4.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4854, device='cuda:0', dtype=torch.float64)
tensor([-2.5233, -3.3473, -3.7068, -4.3640, -4.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7505, device='cuda:0', dtype=torch.float64)
tensor([-2.5648, -3.3789, -3.6695, -4.3084, -4.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4867, device='cuda:0', dtype=torch.float64)
tensor([-2.6005, -3.4096, -3.6277, -4.2654, -4.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6304, device='cuda:0', dtype=torch.float64)
tensor([-2.6196, -3.4410, -3.5851, -4.2266, -4.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6556, device='cuda:0', dtype=torch.float64)
tensor([-2.6030, -3.4482, -3.5548, -4.2156, -4.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8102, device='cuda:0', dtype=torch.float64)
tensor([-2.5704, -3.4387, -3.5442, -4.2140, -4.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8656, device='cuda:0', dtype=torch.float64)
tensor([-2.5346, -3.4262, -3.5335, -4.2095, -4.2142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9582, device='cuda:0', dtype=torch.float64)
tensor([-2.5037, -3.4223, -3.5306, -4.2123, -4.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4151, device='cuda:0', dtype=torch.float64)
tensor([-2.4631, -3.4207, -3.5348, -4.2398, -4.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6304, device='cuda:0', dtype=torch.float64)
tensor([-2.4272, -3.4077, -3.5458, -4.2781, -4.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7019, device='cuda:0', dtype=torch.float64)
tensor([-2.4072, -3.3953, -3.5549, -4.3027, -4.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6642, device='cuda:0', dtype=torch.float64)
tensor([-2.4125, -3.3989, -3.5527, -4.3064, -4.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0212, device='cuda:0', dtype=torch.float64)
tensor([-2.4208, -3.4108, -3.5564, -4.3145, -4.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2744, device='cuda:0', dtype=torch.float64)
tensor([-2.4360, -3.4327, -3.5521, -4.3019, -4.2051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5568, device='cuda:0', dtype=torch.float64)
tensor([-2.4402, -3.4606, -3.5594, -4.2841, -4.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6232, device='cuda:0', dtype=torch.float64)
tensor([-2.4529, -3.4915, -3.5640, -4.2472, -4.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9185, device='cuda:0', dtype=torch.float64)
tensor([-2.4758, -3.5331, -3.5581, -4.1959, -4.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9598, device='cuda:0', dtype=torch.float64)
tensor([-2.4934, -3.5741, -3.5416, -4.1448, -4.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5389, device='cuda:0', dtype=torch.float64)
tensor([-2.5092, -3.5941, -3.5344, -4.1275, -4.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5737, device='cuda:0', dtype=torch.float64)
tensor([-2.5296, -3.6053, -3.5178, -4.1196, -4.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9062, device='cuda:0', dtype=torch.float64)
tensor([-2.5580, -3.6259, -3.4935, -4.1088, -4.2035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9858, device='cuda:0', dtype=torch.float64)
tensor([-2.5655, -3.6255, -3.4709, -4.1136, -4.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3397, device='cuda:0', dtype=torch.float64)
tensor([-2.5772, -3.6215, -3.4534, -4.1270, -4.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7257, device='cuda:0', dtype=torch.float64)
tensor([-2.5774, -3.6076, -3.4577, -4.1486, -4.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8454, device='cuda:0', dtype=torch.float64)
tensor([-2.5712, -3.5929, -3.4599, -4.1711, -4.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1590, device='cuda:0', dtype=torch.float64)
tensor([-2.5627, -3.5848, -3.4509, -4.1950, -4.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5745, device='cuda:0', dtype=torch.float64)
tensor([-2.5678, -3.5835, -3.4318, -4.2071, -4.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4354, device='cuda:0', dtype=torch.float64)
tensor([-2.5468, -3.5696, -3.4270, -4.2303, -4.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5553, device='cuda:0', dtype=torch.float64)
tensor([-2.5117, -3.5423, -3.4431, -4.2560, -4.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7785, device='cuda:0', dtype=torch.float64)
tensor([-2.4621, -3.5080, -3.4598, -4.2932, -4.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4092, device='cuda:0', dtype=torch.float64)
tensor([-2.4145, -3.4764, -3.4764, -4.3343, -4.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4956, device='cuda:0', dtype=torch.float64)
tensor([-2.3744, -3.4656, -3.4954, -4.3626, -4.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4442, device='cuda:0', dtype=torch.float64)
tensor([-2.3472, -3.4650, -3.5132, -4.3981, -4.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6493, device='cuda:0', dtype=torch.float64)
tensor([-2.3243, -3.4572, -3.5369, -4.4248, -4.1560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([-2.3318, -3.4723, -3.5478, -4.4238, -4.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8231, device='cuda:0', dtype=torch.float64)
tensor([-2.3690, -3.4936, -3.5383, -4.3834, -4.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5997, device='cuda:0', dtype=torch.float64)
tensor([-2.4278, -3.5233, -3.5227, -4.3321, -4.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7765, device='cuda:0', dtype=torch.float64)
tensor([-2.4958, -3.5561, -3.5089, -4.2850, -4.2096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5160, device='cuda:0', dtype=torch.float64)
tensor([-2.5729, -3.5939, -3.4946, -4.2296, -4.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6557, device='cuda:0', dtype=torch.float64)
tensor([-2.6215, -3.6114, -3.4972, -4.2052, -4.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7966, device='cuda:0', dtype=torch.float64)
tensor([-2.6363, -3.6211, -3.5217, -4.2107, -4.2789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4567, device='cuda:0', dtype=torch.float64)
tensor([-2.6255, -3.6116, -3.5600, -4.2314, -4.2831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9310, device='cuda:0', dtype=torch.float64)
tensor([-2.5880, -3.5710, -3.6178, -4.2778, -4.2710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6649, device='cuda:0', dtype=torch.float64)
tensor([-2.5501, -3.5036, -3.6816, -4.3534, -4.2484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9878, device='cuda:0', dtype=torch.float64)
tensor([-2.5183, -3.4478, -3.7266, -4.4283, -4.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0022, device='cuda:0', dtype=torch.float64)
tensor([-2.4900, -3.3922, -3.7675, -4.5200, -4.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5901, device='cuda:0', dtype=torch.float64)
tensor([-2.4684, -3.3612, -3.7776, -4.5953, -4.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2299, device='cuda:0', dtype=torch.float64)
tensor([-2.4639, -3.3571, -3.7568, -4.6133, -4.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7028, device='cuda:0', dtype=torch.float64)
tensor([-2.4738, -3.3804, -3.7081, -4.5737, -4.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8329, device='cuda:0', dtype=torch.float64)
tensor([-2.4962, -3.4149, -3.6454, -4.5047, -4.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5497, device='cuda:0', dtype=torch.float64)
tensor([-2.5381, -3.4679, -3.5819, -4.4026, -4.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5662, device='cuda:0', dtype=torch.float64)
tensor([-2.5664, -3.4984, -3.5368, -4.3469, -4.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8225, device='cuda:0', dtype=torch.float64)
tensor([-2.5853, -3.5276, -3.4991, -4.2827, -4.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6338, device='cuda:0', dtype=torch.float64)
tensor([-2.5944, -3.5539, -3.4705, -4.2188, -4.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5287, device='cuda:0', dtype=torch.float64)
tensor([-2.5893, -3.5683, -3.4619, -4.1711, -4.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7779, device='cuda:0', dtype=torch.float64)
tensor([-2.5805, -3.5747, -3.4673, -4.1335, -4.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4681, device='cuda:0', dtype=torch.float64)
tensor([-2.5496, -3.5655, -3.4833, -4.1118, -4.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4009, device='cuda:0', dtype=torch.float64)
tensor([-2.4993, -3.5448, -3.5033, -4.1092, -4.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0338, device='cuda:0', dtype=torch.float64)
tensor([-2.4379, -3.5145, -3.5344, -4.1256, -4.0838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6804, device='cuda:0', dtype=torch.float64)
tensor([-2.3870, -3.4908, -3.5740, -4.1451, -4.0578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6131, device='cuda:0', dtype=torch.float64)
tensor([-2.3688, -3.4697, -3.6016, -4.1491, -4.0482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1716, device='cuda:0', dtype=torch.float64)
tensor([-2.3661, -3.4679, -3.6140, -4.1403, -4.0519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7497, device='cuda:0', dtype=torch.float64)
tensor([-2.3788, -3.4736, -3.6329, -4.1429, -4.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9058, device='cuda:0', dtype=torch.float64)
tensor([-2.4117, -3.5010, -3.6506, -4.1394, -4.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4923, device='cuda:0', dtype=torch.float64)
tensor([-2.4395, -3.5422, -3.6643, -4.1533, -4.0918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6822, device='cuda:0', dtype=torch.float64)
tensor([-2.4649, -3.5728, -3.6725, -4.1713, -4.0925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9595, device='cuda:0', dtype=torch.float64)
tensor([-2.4953, -3.5926, -3.6805, -4.1981, -4.1066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7201, device='cuda:0', dtype=torch.float64)
tensor([-2.5300, -3.6032, -3.6912, -4.2189, -4.1270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7624, device='cuda:0', dtype=torch.float64)
tensor([-2.5585, -3.6185, -3.6911, -4.2190, -4.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8660, device='cuda:0', dtype=torch.float64)
tensor([-2.5849, -3.6339, -3.6876, -4.2118, -4.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8315, device='cuda:0', dtype=torch.float64)
tensor([-2.6035, -3.6452, -3.6756, -4.1905, -4.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4015, device='cuda:0', dtype=torch.float64)
tensor([-2.6208, -3.6368, -3.6606, -4.1691, -4.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6316, device='cuda:0', dtype=torch.float64)
tensor([-2.6446, -3.6435, -3.6193, -4.1442, -4.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5903, device='cuda:0', dtype=torch.float64)
tensor([-2.6704, -3.6537, -3.5770, -4.1090, -4.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6818, device='cuda:0', dtype=torch.float64)
tensor([-2.6630, -3.6461, -3.5582, -4.0929, -4.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7289, device='cuda:0', dtype=torch.float64)
tensor([-2.6326, -3.6242, -3.5518, -4.0981, -4.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5180, device='cuda:0', dtype=torch.float64)
tensor([-2.5852, -3.5886, -3.5596, -4.1228, -4.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5229, device='cuda:0', dtype=torch.float64)
tensor([-2.5279, -3.5460, -3.5730, -4.1637, -4.1199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6746, device='cuda:0', dtype=torch.float64)
tensor([-2.4890, -3.5100, -3.5865, -4.1962, -4.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8330, device='cuda:0', dtype=torch.float64)
tensor([-2.4629, -3.4829, -3.5884, -4.2216, -4.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6015, device='cuda:0', dtype=torch.float64)
tensor([-2.4303, -3.4518, -3.6009, -4.2481, -4.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9750, device='cuda:0', dtype=torch.float64)
tensor([-2.4358, -3.4458, -3.5901, -4.2451, -4.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8129, device='cuda:0', dtype=torch.float64)
tensor([-2.4510, -3.4590, -3.5812, -4.2312, -4.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7364, device='cuda:0', dtype=torch.float64)
tensor([-2.4642, -3.4745, -3.5790, -4.2098, -4.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6588, device='cuda:0', dtype=torch.float64)
tensor([-2.4868, -3.5003, -3.5862, -4.1801, -4.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7250, device='cuda:0', dtype=torch.float64)
tensor([-2.5175, -3.5367, -3.5944, -4.1576, -4.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8170, device='cuda:0', dtype=torch.float64)
tensor([-2.5492, -3.5766, -3.6110, -4.1386, -4.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1074, device='cuda:0', dtype=torch.float64)
tensor([-2.5911, -3.6311, -3.6195, -4.1252, -4.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5422, device='cuda:0', dtype=torch.float64)
tensor([-2.6212, -3.6850, -3.6316, -4.1298, -4.2170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4482, device='cuda:0', dtype=torch.float64)
tensor([-2.6367, -3.7163, -3.6415, -4.1612, -4.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5297, device='cuda:0', dtype=torch.float64)
tensor([-2.6325, -3.7263, -3.6578, -4.1927, -4.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3877, device='cuda:0', dtype=torch.float64)
tensor([-2.6333, -3.7397, -3.6710, -4.2223, -4.2672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8303, device='cuda:0', dtype=torch.float64)
tensor([-2.6141, -3.7335, -3.6864, -4.2567, -4.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7590, device='cuda:0', dtype=torch.float64)
tensor([-2.5817, -3.7161, -3.7027, -4.2875, -4.2722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5795, device='cuda:0', dtype=torch.float64)
tensor([-2.5539, -3.6968, -3.7216, -4.2973, -4.2707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4381, device='cuda:0', dtype=torch.float64)
tensor([-2.5188, -3.6698, -3.7408, -4.3225, -4.2602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7127, device='cuda:0', dtype=torch.float64)
tensor([-2.4980, -3.6496, -3.7546, -4.3535, -4.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4802, device='cuda:0', dtype=torch.float64)
tensor([-2.4834, -3.6304, -3.7633, -4.3833, -4.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6254, device='cuda:0', dtype=torch.float64)
tensor([-2.4611, -3.5938, -3.7729, -4.4103, -4.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7481, device='cuda:0', dtype=torch.float64)
tensor([-2.4498, -3.5716, -3.7783, -4.4343, -4.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5793, device='cuda:0', dtype=torch.float64)
tensor([-2.4425, -3.5517, -3.7793, -4.4350, -4.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5987, device='cuda:0', dtype=torch.float64)
tensor([-2.4464, -3.5468, -3.7701, -4.4251, -4.2266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5374, device='cuda:0', dtype=torch.float64)
tensor([-2.4328, -3.5291, -3.7769, -4.4338, -4.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5005, device='cuda:0', dtype=torch.float64)
tensor([-2.4256, -3.5233, -3.7840, -4.4362, -4.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6629, device='cuda:0', dtype=torch.float64)
tensor([-2.4184, -3.5017, -3.7905, -4.4453, -4.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8573, device='cuda:0', dtype=torch.float64)
tensor([-2.4230, -3.4938, -3.8004, -4.4535, -4.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4033, device='cuda:0', dtype=torch.float64)
tensor([-2.4392, -3.4871, -3.8074, -4.4489, -4.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1038, device='cuda:0', dtype=torch.float64)
tensor([-2.4768, -3.4895, -3.8006, -4.4406, -4.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7886, device='cuda:0', dtype=torch.float64)
tensor([-2.5223, -3.4929, -3.7917, -4.4184, -4.1370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2361, device='cuda:0', dtype=torch.float64)
tensor([-2.5722, -3.5001, -3.7844, -4.3970, -4.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9771, device='cuda:0', dtype=torch.float64)
tensor([-2.6213, -3.5153, -3.7602, -4.3491, -4.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6031, device='cuda:0', dtype=torch.float64)
tensor([-2.6602, -3.5301, -3.7352, -4.2986, -4.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4820, device='cuda:0', dtype=torch.float64)
tensor([-2.6888, -3.5354, -3.7110, -4.2664, -4.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6783, device='cuda:0', dtype=torch.float64)
tensor([-2.6831, -3.5230, -3.7018, -4.2597, -4.2207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9718, device='cuda:0', dtype=torch.float64)
tensor([-2.6666, -3.5110, -3.6908, -4.2419, -4.2384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7242, device='cuda:0', dtype=torch.float64)
tensor([-2.6411, -3.4938, -3.6977, -4.2403, -4.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5738, device='cuda:0', dtype=torch.float64)
tensor([-2.6073, -3.4710, -3.7110, -4.2547, -4.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5294, device='cuda:0', dtype=torch.float64)
tensor([-2.5851, -3.4684, -3.7171, -4.2640, -4.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4143, device='cuda:0', dtype=torch.float64)
tensor([-2.5799, -3.4784, -3.7350, -4.3000, -4.2665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8108, device='cuda:0', dtype=torch.float64)
tensor([-2.5885, -3.5070, -3.7388, -4.3252, -4.2835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5811, device='cuda:0', dtype=torch.float64)
tensor([-2.5892, -3.5342, -3.7375, -4.3502, -4.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7129, device='cuda:0', dtype=torch.float64)
tensor([-2.5726, -3.5426, -3.7473, -4.3972, -4.3201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6575, device='cuda:0', dtype=torch.float64)
tensor([-2.5605, -3.5459, -3.7522, -4.4231, -4.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4743, device='cuda:0', dtype=torch.float64)
tensor([-2.5570, -3.5546, -3.7601, -4.4286, -4.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9655, device='cuda:0', dtype=torch.float64)
tensor([-2.5494, -3.5560, -3.7693, -4.4287, -4.3145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5730, device='cuda:0', dtype=torch.float64)
tensor([-2.5517, -3.5671, -3.7646, -4.4103, -4.3063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0388, device='cuda:0', dtype=torch.float64)
tensor([-2.5859, -3.6055, -3.7381, -4.3494, -4.3012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0042, device='cuda:0', dtype=torch.float64)
tensor([-2.6256, -3.6468, -3.7137, -4.2993, -4.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6358, device='cuda:0', dtype=torch.float64)
tensor([-2.6709, -3.6893, -3.6786, -4.2471, -4.2567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5638, device='cuda:0', dtype=torch.float64)
tensor([-2.6852, -3.7158, -3.6556, -4.2183, -4.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5687, device='cuda:0', dtype=torch.float64)
tensor([-2.6980, -3.7480, -3.6234, -4.1967, -4.2377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7385, device='cuda:0', dtype=torch.float64)
tensor([-2.7102, -3.7791, -3.6015, -4.1714, -4.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4574, device='cuda:0', dtype=torch.float64)
tensor([-2.6989, -3.7814, -3.5923, -4.1799, -4.2463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1068, device='cuda:0', dtype=torch.float64)
tensor([-2.6776, -3.7670, -3.5880, -4.1894, -4.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8377, device='cuda:0', dtype=torch.float64)
tensor([-2.6448, -3.7407, -3.5957, -4.2311, -4.2952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5382, device='cuda:0', dtype=torch.float64)
tensor([-2.6245, -3.7125, -3.6123, -4.2605, -4.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7631, device='cuda:0', dtype=torch.float64)
tensor([-2.6017, -3.6828, -3.6241, -4.2848, -4.3235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6323, device='cuda:0', dtype=torch.float64)
tensor([-2.5732, -3.6578, -3.6467, -4.3126, -4.3207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8160, device='cuda:0', dtype=torch.float64)
tensor([-2.5512, -3.6393, -3.6792, -4.3405, -4.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5852, device='cuda:0', dtype=torch.float64)
tensor([-2.5456, -3.6294, -3.7037, -4.3337, -4.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7564, device='cuda:0', dtype=torch.float64)
tensor([-2.5319, -3.6142, -3.7289, -4.3218, -4.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5593, device='cuda:0', dtype=torch.float64)
tensor([-2.5050, -3.6029, -3.7576, -4.3384, -4.2414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6021, device='cuda:0', dtype=torch.float64)
tensor([-2.4831, -3.5937, -3.7808, -4.3515, -4.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5683, device='cuda:0', dtype=torch.float64)
tensor([-2.4653, -3.5834, -3.7908, -4.3605, -4.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6860, device='cuda:0', dtype=torch.float64)
tensor([-2.4896, -3.6055, -3.7804, -4.3426, -4.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8093, device='cuda:0', dtype=torch.float64)
tensor([-2.5255, -3.6280, -3.7779, -4.3244, -4.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8523, device='cuda:0', dtype=torch.float64)
tensor([-2.5458, -3.6378, -3.7656, -4.3178, -4.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4769, device='cuda:0', dtype=torch.float64)
tensor([-2.5791, -3.6561, -3.7569, -4.2867, -4.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6952, device='cuda:0', dtype=torch.float64)
tensor([-2.6112, -3.6755, -3.7509, -4.2748, -4.2561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5530, device='cuda:0', dtype=torch.float64)
tensor([-2.6180, -3.6717, -3.7625, -4.2675, -4.2680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9493, device='cuda:0', dtype=torch.float64)
tensor([-2.6116, -3.6542, -3.7670, -4.2859, -4.2844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8536, device='cuda:0', dtype=torch.float64)
tensor([-2.6143, -3.6427, -3.7548, -4.3011, -4.3087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7223, device='cuda:0', dtype=torch.float64)
tensor([-2.6063, -3.6222, -3.7506, -4.3142, -4.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6489, device='cuda:0', dtype=torch.float64)
tensor([-2.5886, -3.5882, -3.7486, -4.3126, -4.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8530, device='cuda:0', dtype=torch.float64)
tensor([-2.5527, -3.5453, -3.7611, -4.3022, -4.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1602, device='cuda:0', dtype=torch.float64)
tensor([-2.5280, -3.5127, -3.7768, -4.3010, -4.2878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7947, device='cuda:0', dtype=torch.float64)
tensor([-2.5184, -3.4962, -3.7981, -4.2907, -4.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8347, device='cuda:0', dtype=torch.float64)
tensor([-2.5321, -3.5027, -3.7982, -4.2462, -4.2596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7937, device='cuda:0', dtype=torch.float64)
tensor([-2.5646, -3.5244, -3.7974, -4.2043, -4.2481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3897, device='cuda:0', dtype=torch.float64)
tensor([-2.5760, -3.5398, -3.8007, -4.1881, -4.2277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9181, device='cuda:0', dtype=torch.float64)
tensor([-2.5986, -3.5650, -3.7838, -4.1580, -4.2079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8528, device='cuda:0', dtype=torch.float64)
tensor([-2.6118, -3.5761, -3.7808, -4.1554, -4.1820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6205, device='cuda:0', dtype=torch.float64)
tensor([-2.6139, -3.5774, -3.7733, -4.1807, -4.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5127, device='cuda:0', dtype=torch.float64)
tensor([-2.6089, -3.5737, -3.7534, -4.2129, -4.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6388, device='cuda:0', dtype=torch.float64)
tensor([-2.6114, -3.5749, -3.7301, -4.2520, -4.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7560, device='cuda:0', dtype=torch.float64)
tensor([-2.6042, -3.5689, -3.7195, -4.3055, -4.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7663, device='cuda:0', dtype=torch.float64)
tensor([-2.6012, -3.5757, -3.7069, -4.3614, -4.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7261, device='cuda:0', dtype=torch.float64)
tensor([-2.5905, -3.5814, -3.6936, -4.4234, -4.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7813, device='cuda:0', dtype=torch.float64)
tensor([-2.5969, -3.6001, -3.6780, -4.4300, -4.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8526, device='cuda:0', dtype=torch.float64)
tensor([-2.6164, -3.6144, -3.6644, -4.4169, -4.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7594, device='cuda:0', dtype=torch.float64)
tensor([-2.6391, -3.6250, -3.6662, -4.4063, -4.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5509, device='cuda:0', dtype=torch.float64)
tensor([-2.6639, -3.6357, -3.6708, -4.3705, -4.1829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4906, device='cuda:0', dtype=torch.float64)
tensor([-2.6756, -3.6415, -3.6827, -4.3204, -4.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5358, device='cuda:0', dtype=torch.float64)
tensor([-2.6845, -3.6373, -3.7066, -4.2659, -4.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7424, device='cuda:0', dtype=torch.float64)
tensor([-2.6686, -3.6201, -3.7286, -4.2394, -4.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6665, device='cuda:0', dtype=torch.float64)
tensor([-2.6461, -3.6061, -3.7411, -4.2089, -4.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8324, device='cuda:0', dtype=torch.float64)
tensor([-2.6249, -3.5929, -3.7515, -4.1805, -4.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6639, device='cuda:0', dtype=torch.float64)
tensor([-2.6048, -3.5682, -3.7541, -4.1450, -4.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5862, device='cuda:0', dtype=torch.float64)
tensor([-2.6003, -3.5557, -3.7427, -4.1174, -4.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5020, device='cuda:0', dtype=torch.float64)
tensor([-2.5999, -3.5473, -3.7235, -4.0950, -4.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5506, device='cuda:0', dtype=torch.float64)
tensor([-2.6068, -3.5501, -3.6936, -4.0623, -4.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7502, device='cuda:0', dtype=torch.float64)
tensor([-2.6018, -3.5562, -3.6730, -4.0264, -4.2172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9641, device='cuda:0', dtype=torch.float64)
tensor([-2.6111, -3.5935, -3.6503, -4.0094, -4.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8226, device='cuda:0', dtype=torch.float64)
tensor([-2.6237, -3.6204, -3.6279, -4.0045, -4.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0201, device='cuda:0', dtype=torch.float64)
tensor([-2.6317, -3.6398, -3.6210, -4.0275, -4.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8205, device='cuda:0', dtype=torch.float64)
tensor([-2.6090, -3.6258, -3.6363, -4.0884, -4.1893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4424, device='cuda:0', dtype=torch.float64)
tensor([-2.5915, -3.6149, -3.6657, -4.1573, -4.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6099, device='cuda:0', dtype=torch.float64)
tensor([-2.5721, -3.5929, -3.7116, -4.2223, -4.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6202, device='cuda:0', dtype=torch.float64)
tensor([-2.5617, -3.5754, -3.7424, -4.2795, -4.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6151, device='cuda:0', dtype=torch.float64)
tensor([-2.5836, -3.5713, -3.7638, -4.3050, -4.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1559, device='cuda:0', dtype=torch.float64)
tensor([-2.6204, -3.5754, -3.7816, -4.3001, -4.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6938, device='cuda:0', dtype=torch.float64)
tensor([-2.6464, -3.5784, -3.7972, -4.3101, -4.2377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7838, device='cuda:0', dtype=torch.float64)
tensor([-2.6643, -3.5785, -3.8249, -4.3324, -4.2460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4729, device='cuda:0', dtype=torch.float64)
tensor([-2.6818, -3.5861, -3.8319, -4.3475, -4.2513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0030, device='cuda:0', dtype=torch.float64)
tensor([-2.6858, -3.5951, -3.8420, -4.3795, -4.2455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6832, device='cuda:0', dtype=torch.float64)
tensor([-2.6897, -3.6178, -3.8361, -4.3991, -4.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9094, device='cuda:0', dtype=torch.float64)
tensor([-2.6626, -3.6208, -3.8413, -4.4313, -4.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7038, device='cuda:0', dtype=torch.float64)
tensor([-2.6447, -3.6340, -3.8329, -4.4325, -4.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5769, device='cuda:0', dtype=torch.float64)
tensor([-2.6315, -3.6447, -3.8084, -4.3957, -4.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6165, device='cuda:0', dtype=torch.float64)
tensor([-2.6168, -3.6619, -3.7908, -4.3604, -4.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1962, device='cuda:0', dtype=torch.float64)
tensor([-2.6154, -3.6838, -3.7744, -4.3239, -4.1415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7592, device='cuda:0', dtype=torch.float64)
tensor([-2.5985, -3.6969, -3.7667, -4.3145, -4.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7172, device='cuda:0', dtype=torch.float64)
tensor([-2.5997, -3.7030, -3.7741, -4.3248, -4.1231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8621, device='cuda:0', dtype=torch.float64)
tensor([-2.6235, -3.6986, -3.7770, -4.3375, -4.1174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8051, device='cuda:0', dtype=torch.float64)
tensor([-2.6499, -3.6971, -3.7769, -4.3688, -4.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7619, device='cuda:0', dtype=torch.float64)
tensor([-2.6611, -3.6906, -3.7840, -4.4066, -4.1136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6544, device='cuda:0', dtype=torch.float64)
tensor([-2.6766, -3.6768, -3.7817, -4.4436, -4.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4030, device='cuda:0', dtype=torch.float64)
tensor([-2.6875, -3.6595, -3.7810, -4.4707, -4.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5161, device='cuda:0', dtype=torch.float64)
tensor([-2.6876, -3.6390, -3.7857, -4.4948, -4.0894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7743, device='cuda:0', dtype=torch.float64)
tensor([-2.6817, -3.6265, -3.7817, -4.4992, -4.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4442, device='cuda:0', dtype=torch.float64)
tensor([-2.6868, -3.6182, -3.7746, -4.5004, -4.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5535, device='cuda:0', dtype=torch.float64)
tensor([-2.7203, -3.6343, -3.7554, -4.4645, -4.0594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6241, device='cuda:0', dtype=torch.float64)
tensor([-2.7542, -3.6660, -3.7337, -4.4163, -4.0597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4490, device='cuda:0', dtype=torch.float64)
tensor([-2.7982, -3.7112, -3.7025, -4.3592, -4.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7817, device='cuda:0', dtype=torch.float64)
tensor([-2.8375, -3.7544, -3.6666, -4.3156, -4.0875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9690, device='cuda:0', dtype=torch.float64)
tensor([-2.8608, -3.7921, -3.6353, -4.2740, -4.1242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7916, device='cuda:0', dtype=torch.float64)
tensor([-2.8749, -3.8112, -3.6116, -4.2503, -4.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4728, device='cuda:0', dtype=torch.float64)
tensor([-2.8584, -3.8092, -3.6096, -4.2431, -4.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8408, device='cuda:0', dtype=torch.float64)
tensor([-2.8209, -3.7859, -3.6356, -4.2803, -4.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9547, device='cuda:0', dtype=torch.float64)
tensor([-2.7750, -3.7528, -3.6862, -4.3360, -4.2797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7767, device='cuda:0', dtype=torch.float64)
tensor([-2.7180, -3.7201, -3.7503, -4.4203, -4.2992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6783, device='cuda:0', dtype=torch.float64)
tensor([-2.6793, -3.7012, -3.8018, -4.5173, -4.3210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5457, device='cuda:0', dtype=torch.float64)
tensor([-2.6626, -3.6906, -3.8443, -4.5638, -4.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5081, device='cuda:0', dtype=torch.float64)
tensor([-2.6581, -3.6865, -3.8802, -4.6040, -4.3971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5663, device='cuda:0', dtype=torch.float64)
tensor([-2.6708, -3.6939, -3.8979, -4.6120, -4.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5636, device='cuda:0', dtype=torch.float64)
tensor([-2.7049, -3.7157, -3.8948, -4.5759, -4.4522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6463, device='cuda:0', dtype=torch.float64)
tensor([-2.7449, -3.7412, -3.8743, -4.5221, -4.4699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8030, device='cuda:0', dtype=torch.float64)
tensor([-2.7850, -3.7736, -3.8590, -4.4606, -4.4841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7823, device='cuda:0', dtype=torch.float64)
tensor([-2.8181, -3.8070, -3.8467, -4.4148, -4.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0589, device='cuda:0', dtype=torch.float64)
tensor([-2.8365, -3.8162, -3.8475, -4.3703, -4.4714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9136, device='cuda:0', dtype=torch.float64)
tensor([-2.8229, -3.7876, -3.8675, -4.3538, -4.4447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6355, device='cuda:0', dtype=torch.float64)
tensor([-2.8095, -3.7673, -3.8846, -4.3588, -4.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6043, device='cuda:0', dtype=torch.float64)
tensor([-2.8052, -3.7458, -3.8965, -4.3493, -4.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5527, device='cuda:0', dtype=torch.float64)
tensor([-2.7964, -3.7320, -3.9163, -4.3336, -4.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6478, device='cuda:0', dtype=torch.float64)
tensor([-2.7838, -3.7167, -3.9409, -4.3171, -4.3198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7976, device='cuda:0', dtype=torch.float64)
tensor([-2.7845, -3.7105, -3.9676, -4.2870, -4.2946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5189, device='cuda:0', dtype=torch.float64)
tensor([-2.7852, -3.7076, -3.9926, -4.2632, -4.2850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7388, device='cuda:0', dtype=torch.float64)
tensor([-2.7897, -3.7036, -4.0142, -4.2313, -4.2749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8094, device='cuda:0', dtype=torch.float64)
tensor([-2.8035, -3.7159, -4.0190, -4.1851, -4.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7215, device='cuda:0', dtype=torch.float64)
tensor([-2.8235, -3.7382, -4.0037, -4.1381, -4.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0462, device='cuda:0', dtype=torch.float64)
tensor([-2.8376, -3.7560, -3.9969, -4.1069, -4.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9422, device='cuda:0', dtype=torch.float64)
tensor([-2.8647, -3.7953, -3.9764, -4.0762, -4.2782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7813, device='cuda:0', dtype=torch.float64)
tensor([-2.8731, -3.8202, -3.9492, -4.0704, -4.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5409, device='cuda:0', dtype=torch.float64)
tensor([-2.8818, -3.8588, -3.9203, -4.0503, -4.2853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4853, device='cuda:0', dtype=torch.float64)
tensor([-2.8941, -3.9020, -3.9019, -4.0480, -4.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7223, device='cuda:0', dtype=torch.float64)
tensor([-2.9082, -3.9302, -3.8853, -4.0679, -4.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5982, device='cuda:0', dtype=torch.float64)
tensor([-2.9069, -3.9411, -3.8725, -4.1168, -4.2450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8323, device='cuda:0', dtype=torch.float64)
tensor([-2.8862, -3.9222, -3.8633, -4.1975, -4.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7691, device='cuda:0', dtype=torch.float64)
tensor([-2.8699, -3.8901, -3.8644, -4.2961, -4.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5001, device='cuda:0', dtype=torch.float64)
tensor([-2.8572, -3.8550, -3.8623, -4.3918, -4.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5110, device='cuda:0', dtype=torch.float64)
tensor([-2.8472, -3.8243, -3.8635, -4.4878, -4.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6823, device='cuda:0', dtype=torch.float64)
tensor([-2.8599, -3.8106, -3.8527, -4.5694, -4.2450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0489, device='cuda:0', dtype=torch.float64)
tensor([-2.8715, -3.8016, -3.8457, -4.6571, -4.2677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7144, device='cuda:0', dtype=torch.float64)
tensor([-2.8859, -3.7993, -3.8380, -4.7166, -4.2893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9744, device='cuda:0', dtype=torch.float64)
tensor([-2.9063, -3.8095, -3.8222, -4.7505, -4.3198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2142, device='cuda:0', dtype=torch.float64)
tensor([-2.9256, -3.8100, -3.8316, -4.7775, -4.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5816, device='cuda:0', dtype=torch.float64)
tensor([-2.9460, -3.8147, -3.8452, -4.7993, -4.3635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9623, device='cuda:0', dtype=torch.float64)
tensor([-2.9807, -3.8343, -3.8440, -4.7672, -4.3815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1568, device='cuda:0', dtype=torch.float64)
tensor([-2.9980, -3.8571, -3.8405, -4.7291, -4.4005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7114, device='cuda:0', dtype=torch.float64)
tensor([-3.0079, -3.8853, -3.8290, -4.6856, -4.4295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8574, device='cuda:0', dtype=torch.float64)
tensor([-3.0030, -3.9057, -3.8247, -4.6467, -4.4541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5727, device='cuda:0', dtype=torch.float64)
tensor([-2.9756, -3.9030, -3.8466, -4.6178, -4.4569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5863, device='cuda:0', dtype=torch.float64)
tensor([-2.9201, -3.8789, -3.8926, -4.5831, -4.4427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9066, device='cuda:0', dtype=torch.float64)
tensor([-2.8512, -3.8413, -3.9479, -4.5491, -4.4249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6228, device='cuda:0', dtype=torch.float64)
tensor([-2.7859, -3.8017, -3.9893, -4.5181, -4.3965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8818, device='cuda:0', dtype=torch.float64)
tensor([-2.7030, -3.7323, -4.0444, -4.5224, -4.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5903, device='cuda:0', dtype=torch.float64)
tensor([-2.6323, -3.6806, -4.1121, -4.5407, -4.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8923, device='cuda:0', dtype=torch.float64)
tensor([-2.5920, -3.6658, -4.1499, -4.5558, -4.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0001, device='cuda:0', dtype=torch.float64)
tensor([-2.5941, -3.6677, -4.1632, -4.5688, -4.2992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6738, device='cuda:0', dtype=torch.float64)
tensor([-2.6298, -3.6946, -4.1511, -4.5372, -4.2983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0852, device='cuda:0', dtype=torch.float64)
tensor([-2.6926, -3.7249, -4.1157, -4.4811, -4.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8871, device='cuda:0', dtype=torch.float64)
tensor([-2.7627, -3.7658, -4.0651, -4.4126, -4.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6176, device='cuda:0', dtype=torch.float64)
tensor([-2.8284, -3.8067, -4.0234, -4.3663, -4.3354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6328, device='cuda:0', dtype=torch.float64)
tensor([-2.8987, -3.8492, -3.9867, -4.3341, -4.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4337, device='cuda:0', dtype=torch.float64)
tensor([-2.9681, -3.8942, -3.9472, -4.2848, -4.3551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9269, device='cuda:0', dtype=torch.float64)
tensor([-3.0314, -3.9292, -3.9118, -4.2522, -4.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5072, device='cuda:0', dtype=torch.float64)
tensor([-3.0725, -3.9275, -3.8855, -4.2435, -4.3458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6881, device='cuda:0', dtype=torch.float64)
tensor([-3.1149, -3.9208, -3.8584, -4.2298, -4.3488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6198, device='cuda:0', dtype=torch.float64)
tensor([-3.1376, -3.9269, -3.8217, -4.2408, -4.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6123, device='cuda:0', dtype=torch.float64)
tensor([-3.1344, -3.9264, -3.7895, -4.2698, -4.3403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3703, device='cuda:0', dtype=torch.float64)
tensor([-3.1053, -3.9105, -3.7656, -4.3207, -4.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2827, device='cuda:0', dtype=torch.float64)
tensor([-3.0723, -3.8894, -3.7517, -4.3838, -4.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6943, device='cuda:0', dtype=torch.float64)
tensor([-3.0433, -3.8988, -3.7368, -4.4267, -4.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6022, device='cuda:0', dtype=torch.float64)
tensor([-3.0100, -3.9057, -3.7282, -4.4702, -4.3084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7764, device='cuda:0', dtype=torch.float64)
tensor([-2.9739, -3.9085, -3.7228, -4.5148, -4.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7748, device='cuda:0', dtype=torch.float64)
tensor([-2.9316, -3.8945, -3.7194, -4.5577, -4.2934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7997, device='cuda:0', dtype=torch.float64)
tensor([-2.8945, -3.8731, -3.7131, -4.5956, -4.2976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9305, device='cuda:0', dtype=torch.float64)
tensor([-2.8593, -3.8463, -3.7137, -4.6313, -4.3110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8066, device='cuda:0', dtype=torch.float64)
tensor([-2.8318, -3.8251, -3.7207, -4.6482, -4.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5657, device='cuda:0', dtype=torch.float64)
tensor([-2.8026, -3.8121, -3.7353, -4.6639, -4.3265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6352, device='cuda:0', dtype=torch.float64)
tensor([-2.7989, -3.8130, -3.7409, -4.6559, -4.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0268, device='cuda:0', dtype=torch.float64)
tensor([-2.8280, -3.8180, -3.7270, -4.6526, -4.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6486, device='cuda:0', dtype=torch.float64)
tensor([-2.8749, -3.8393, -3.7121, -4.6499, -4.3802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9605, device='cuda:0', dtype=torch.float64)
tensor([-2.8989, -3.8468, -3.7117, -4.6875, -4.4030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6258, device='cuda:0', dtype=torch.float64)
tensor([-2.9166, -3.8498, -3.7153, -4.7303, -4.4293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5731, device='cuda:0', dtype=torch.float64)
tensor([-2.9571, -3.8605, -3.7193, -4.7486, -4.4583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8634, device='cuda:0', dtype=torch.float64)
tensor([-2.9966, -3.8718, -3.7228, -4.7358, -4.4838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7784, device='cuda:0', dtype=torch.float64)
tensor([-3.0236, -3.8777, -3.7442, -4.7155, -4.4931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1216, device='cuda:0', dtype=torch.float64)
tensor([-3.0432, -3.8822, -3.7701, -4.6839, -4.4924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9311, device='cuda:0', dtype=torch.float64)
tensor([-3.0531, -3.8894, -3.8175, -4.6660, -4.4673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0537, device='cuda:0', dtype=torch.float64)
tensor([-3.0368, -3.8879, -3.8714, -4.6781, -4.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7235, device='cuda:0', dtype=torch.float64)
tensor([-3.0439, -3.9051, -3.9150, -4.6769, -4.3942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7010, device='cuda:0', dtype=torch.float64)
tensor([-3.0682, -3.9417, -3.9389, -4.6418, -4.3625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6006, device='cuda:0', dtype=torch.float64)
tensor([-3.0806, -3.9783, -3.9628, -4.6127, -4.3316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7224, device='cuda:0', dtype=torch.float64)
tensor([-3.0869, -4.0157, -3.9790, -4.5631, -4.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6766, device='cuda:0', dtype=torch.float64)
tensor([-3.1007, -4.0631, -3.9848, -4.4933, -4.2885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5758, device='cuda:0', dtype=torch.float64)
tensor([-3.1127, -4.1019, -3.9873, -4.4140, -4.2674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7650, device='cuda:0', dtype=torch.float64)
tensor([-3.0988, -4.1219, -3.9916, -4.3605, -4.2522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9988, device='cuda:0', dtype=torch.float64)
tensor([-3.0776, -4.1454, -3.9924, -4.3328, -4.2410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9172, device='cuda:0', dtype=torch.float64)
tensor([-3.0599, -4.1738, -3.9868, -4.3213, -4.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0466, device='cuda:0', dtype=torch.float64)
tensor([-3.0492, -4.1900, -3.9813, -4.3157, -4.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7344, device='cuda:0', dtype=torch.float64)
tensor([-3.0173, -4.1858, -3.9893, -4.3355, -4.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7066, device='cuda:0', dtype=torch.float64)
tensor([-2.9520, -4.1215, -4.0283, -4.3953, -4.2492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5423, device='cuda:0', dtype=torch.float64)
tensor([-2.8824, -4.0569, -4.0587, -4.4468, -4.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4521, device='cuda:0', dtype=torch.float64)
tensor([-2.8190, -3.9908, -4.0888, -4.5001, -4.2992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6364, device='cuda:0', dtype=torch.float64)
tensor([-2.7817, -3.9450, -4.1140, -4.5176, -4.3306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8963, device='cuda:0', dtype=torch.float64)
tensor([-2.7466, -3.9008, -4.1344, -4.5294, -4.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0803, device='cuda:0', dtype=torch.float64)
tensor([-2.7260, -3.8593, -4.1869, -4.5740, -4.3848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7327, device='cuda:0', dtype=torch.float64)
tensor([-2.7368, -3.8442, -4.2271, -4.6011, -4.4110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8936, device='cuda:0', dtype=torch.float64)
tensor([-2.7634, -3.8425, -4.2582, -4.6326, -4.4361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6633, device='cuda:0', dtype=torch.float64)
tensor([-2.8048, -3.8532, -4.2863, -4.6361, -4.4656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9828, device='cuda:0', dtype=torch.float64)
tensor([-2.8472, -3.8797, -4.2917, -4.6286, -4.4833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8126, device='cuda:0', dtype=torch.float64)
tensor([-2.9089, -3.9197, -4.2768, -4.5884, -4.5089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8143, device='cuda:0', dtype=torch.float64)
tensor([-2.9717, -3.9682, -4.2435, -4.5407, -4.5249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4695, device='cuda:0', dtype=torch.float64)
tensor([-3.0456, -4.0270, -4.2064, -4.4798, -4.5429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2076, device='cuda:0', dtype=torch.float64)
tensor([-3.1099, -4.0787, -4.1671, -4.4143, -4.5379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5668, device='cuda:0', dtype=torch.float64)
tensor([-3.1553, -4.1222, -4.1203, -4.3764, -4.5350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5183, device='cuda:0', dtype=torch.float64)
tensor([-3.1857, -4.1626, -4.0686, -4.3634, -4.5373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5574, device='cuda:0', dtype=torch.float64)
tensor([-3.1863, -4.1810, -4.0387, -4.3789, -4.5179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8197, device='cuda:0', dtype=torch.float64)
tensor([-3.1872, -4.2074, -4.0078, -4.3963, -4.5071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6212, device='cuda:0', dtype=torch.float64)
tensor([-3.1774, -4.2224, -3.9925, -4.4250, -4.5060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5062, device='cuda:0', dtype=torch.float64)
tensor([-3.1741, -4.2441, -3.9863, -4.4474, -4.5096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5839, device='cuda:0', dtype=torch.float64)
tensor([-3.1634, -4.2501, -3.9806, -4.4835, -4.4875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6669, device='cuda:0', dtype=torch.float64)
tensor([-3.1784, -4.2632, -3.9616, -4.5109, -4.4944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9582, device='cuda:0', dtype=torch.float64)
tensor([-3.1657, -4.2374, -3.9680, -4.5652, -4.5010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4906, device='cuda:0', dtype=torch.float64)
tensor([-3.1516, -4.2184, -3.9794, -4.6173, -4.4827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6003, device='cuda:0', dtype=torch.float64)
tensor([-3.1181, -4.1922, -4.0005, -4.6650, -4.4537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4872, device='cuda:0', dtype=torch.float64)
tensor([-3.0715, -4.1521, -4.0255, -4.7106, -4.4341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7340, device='cuda:0', dtype=torch.float64)
tensor([-3.0325, -4.1223, -4.0360, -4.7336, -4.4366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6508, device='cuda:0', dtype=torch.float64)
tensor([-3.0094, -4.0855, -4.0542, -4.7406, -4.4514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1689, device='cuda:0', dtype=torch.float64)
tensor([-2.9856, -4.0384, -4.0981, -4.7750, -4.4669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6999, device='cuda:0', dtype=torch.float64)
tensor([-2.9906, -4.0134, -4.1227, -4.7978, -4.4986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7359, device='cuda:0', dtype=torch.float64)
tensor([-3.0102, -4.0002, -4.1318, -4.7969, -4.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3989, device='cuda:0', dtype=torch.float64)
tensor([-3.0468, -4.0096, -4.1301, -4.7666, -4.5773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2091, device='cuda:0', dtype=torch.float64)
tensor([-3.1081, -4.0284, -4.1294, -4.7433, -4.6087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8773, device='cuda:0', dtype=torch.float64)
tensor([-3.1800, -4.0589, -4.1329, -4.7287, -4.6392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7006, device='cuda:0', dtype=torch.float64)
tensor([-3.2332, -4.0907, -4.1289, -4.7278, -4.6645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4604, device='cuda:0', dtype=torch.float64)
tensor([-3.2825, -4.1208, -4.1280, -4.7323, -4.7073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7974, device='cuda:0', dtype=torch.float64)
tensor([-3.3369, -4.1626, -4.1267, -4.7515, -4.7517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5321, device='cuda:0', dtype=torch.float64)
tensor([-3.3638, -4.1924, -4.1397, -4.7896, -4.7833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9110, device='cuda:0', dtype=torch.float64)
tensor([-3.3665, -4.2121, -4.1654, -4.8308, -4.7986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4353, device='cuda:0', dtype=torch.float64)
tensor([-3.3559, -4.2195, -4.1907, -4.8955, -4.7947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4470, device='cuda:0', dtype=torch.float64)
tensor([-3.3570, -4.2404, -4.2144, -4.9450, -4.8000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6235, device='cuda:0', dtype=torch.float64)
tensor([-3.3700, -4.2703, -4.2394, -4.9821, -4.7899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5956, device='cuda:0', dtype=torch.float64)
tensor([-3.3920, -4.2994, -4.2471, -4.9966, -4.7695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5837, device='cuda:0', dtype=torch.float64)
tensor([-3.4234, -4.3432, -4.2572, -5.0099, -4.7620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7318, device='cuda:0', dtype=torch.float64)
tensor([-3.4636, -4.3815, -4.2450, -4.9745, -4.7636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5162, device='cuda:0', dtype=torch.float64)
tensor([-3.4867, -4.4095, -4.2326, -4.9143, -4.7651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4504, device='cuda:0', dtype=torch.float64)
tensor([-3.4763, -4.4231, -4.2276, -4.8755, -4.7712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6058, device='cuda:0', dtype=torch.float64)
tensor([-3.4811, -4.4323, -4.2034, -4.7996, -4.8007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4091, device='cuda:0', dtype=torch.float64)
tensor([-3.4764, -4.4313, -4.1847, -4.7441, -4.8231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5849, device='cuda:0', dtype=torch.float64)
tensor([-3.4412, -4.4093, -4.1715, -4.7103, -4.8356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6441, device='cuda:0', dtype=torch.float64)
tensor([-3.3915, -4.3718, -4.1731, -4.6975, -4.8383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6398, device='cuda:0', dtype=torch.float64)
tensor([-3.3628, -4.3462, -4.1847, -4.7071, -4.8326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0032, device='cuda:0', dtype=torch.float64)
tensor([-3.3404, -4.3272, -4.1675, -4.7191, -4.8268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4353, device='cuda:0', dtype=torch.float64)
tensor([-3.3263, -4.3066, -4.1566, -4.7371, -4.8258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5648, device='cuda:0', dtype=torch.float64)
tensor([-3.2894, -4.2669, -4.1655, -4.7813, -4.8130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8354, device='cuda:0', dtype=torch.float64)
tensor([-3.2358, -4.2352, -4.1873, -4.8346, -4.7942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8125, device='cuda:0', dtype=torch.float64)
tensor([-3.2143, -4.2187, -4.1808, -4.8705, -4.7973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8566, device='cuda:0', dtype=torch.float64)
tensor([-3.1984, -4.2059, -4.1975, -4.9229, -4.7974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9425, device='cuda:0', dtype=torch.float64)
tensor([-3.1924, -4.2121, -4.2049, -4.9643, -4.7913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7705, device='cuda:0', dtype=torch.float64)
tensor([-3.1885, -4.1995, -4.2024, -4.9833, -4.7769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6254, device='cuda:0', dtype=torch.float64)
tensor([-3.2076, -4.2025, -4.1597, -4.9283, -4.7632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6976, device='cuda:0', dtype=torch.float64)
tensor([-3.2300, -4.2132, -4.1465, -4.9070, -4.7534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4441, device='cuda:0', dtype=torch.float64)
tensor([-3.2586, -4.2245, -4.1308, -4.8713, -4.7458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1133, device='cuda:0', dtype=torch.float64)
tensor([-3.2853, -4.2466, -4.1008, -4.8131, -4.7490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6585, device='cuda:0', dtype=torch.float64)
tensor([-3.3122, -4.2584, -4.0843, -4.7882, -4.7473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5673, device='cuda:0', dtype=torch.float64)
tensor([-3.3351, -4.2748, -4.0683, -4.7476, -4.7744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5203, device='cuda:0', dtype=torch.float64)
tensor([-3.3650, -4.2913, -4.0717, -4.7405, -4.8114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8637, device='cuda:0', dtype=torch.float64)
tensor([-3.3999, -4.3069, -4.0868, -4.7674, -4.8629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7027, device='cuda:0', dtype=torch.float64)
tensor([-3.4194, -4.3302, -4.0988, -4.8172, -4.9206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3131, device='cuda:0', dtype=torch.float64)
tensor([-3.4388, -4.3773, -4.0860, -4.8407, -4.9590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8450, device='cuda:0', dtype=torch.float64)
tensor([-3.4222, -4.3711, -4.1035, -4.9129, -4.9713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5452, device='cuda:0', dtype=torch.float64)
tensor([-3.4026, -4.3501, -4.1412, -4.9726, -4.9389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7508, device='cuda:0', dtype=torch.float64)
tensor([-3.4078, -4.3551, -4.1676, -5.0171, -4.9126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9533, device='cuda:0', dtype=torch.float64)
tensor([-3.4098, -4.3384, -4.2181, -5.0976, -4.8627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7027, device='cuda:0', dtype=torch.float64)
tensor([-3.4228, -4.3247, -4.2839, -5.1575, -4.8229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7023, device='cuda:0', dtype=torch.float64)
tensor([-3.4146, -4.2919, -4.3675, -5.2532, -4.7958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5469, device='cuda:0', dtype=torch.float64)
tensor([-3.3907, -4.2429, -4.4696, -5.3578, -4.7794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5327, device='cuda:0', dtype=torch.float64)
tensor([-3.3789, -4.2142, -4.5883, -5.4691, -4.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0963, device='cuda:0', dtype=torch.float64)
tensor([-3.4072, -4.2067, -4.6846, -5.5628, -4.7699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5560, device='cuda:0', dtype=torch.float64)
tensor([-3.4401, -4.2263, -4.7681, -5.6588, -4.7719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6552, device='cuda:0', dtype=torch.float64)
tensor([-3.4840, -4.2788, -4.8377, -5.7674, -4.7901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8479, device='cuda:0', dtype=torch.float64)
tensor([-3.5272, -4.3479, -4.8552, -5.7358, -4.8087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9934, device='cuda:0', dtype=torch.float64)
tensor([-3.5858, -4.4267, -4.8433, -5.6572, -4.8286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7192, device='cuda:0', dtype=torch.float64)
tensor([-3.6411, -4.4845, -4.8040, -5.5795, -4.8426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8751, device='cuda:0', dtype=torch.float64)
tensor([-3.6958, -4.5279, -4.7660, -5.4942, -4.8605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6223, device='cuda:0', dtype=torch.float64)
tensor([-3.7510, -4.5632, -4.7219, -5.3778, -4.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5889, device='cuda:0', dtype=torch.float64)
tensor([-3.8044, -4.5983, -4.6777, -5.2621, -4.9419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8388, device='cuda:0', dtype=torch.float64)
tensor([-3.8609, -4.6363, -4.6534, -5.1673, -5.0075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5552, device='cuda:0', dtype=torch.float64)
tensor([-3.8793, -4.6552, -4.6431, -5.0959, -5.0541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5004, device='cuda:0', dtype=torch.float64)
tensor([-3.8688, -4.6657, -4.6490, -5.0508, -5.0678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4501, device='cuda:0', dtype=torch.float64)
tensor([-3.8554, -4.6742, -4.6642, -5.0003, -5.0816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5824, device='cuda:0', dtype=torch.float64)
tensor([-3.8485, -4.6859, -4.6812, -4.9472, -5.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8226, device='cuda:0', dtype=torch.float64)
tensor([-3.8121, -4.6719, -4.6959, -4.9411, -5.0954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7860, device='cuda:0', dtype=torch.float64)
tensor([-3.7609, -4.6477, -4.7341, -4.9608, -5.0882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6811, device='cuda:0', dtype=torch.float64)
tensor([-3.7129, -4.6160, -4.7804, -4.9748, -5.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6501, device='cuda:0', dtype=torch.float64)
tensor([-3.6415, -4.5659, -4.8357, -5.0184, -5.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0833, device='cuda:0', dtype=torch.float64)
tensor([-3.5408, -4.5043, -4.8919, -5.0743, -5.0449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8466, device='cuda:0', dtype=torch.float64)
tensor([-3.4507, -4.4477, -4.9142, -5.1101, -5.0047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7757, device='cuda:0', dtype=torch.float64)
tensor([-3.3763, -4.4028, -4.9241, -5.1369, -4.9693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7524, device='cuda:0', dtype=torch.float64)
tensor([-3.3272, -4.3738, -4.9070, -5.1274, -4.9560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6956, device='cuda:0', dtype=torch.float64)
tensor([-3.2972, -4.3643, -4.9004, -5.1177, -4.9516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6320, device='cuda:0', dtype=torch.float64)
tensor([-3.2914, -4.3684, -4.8780, -5.0994, -4.9463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6157, device='cuda:0', dtype=torch.float64)
tensor([-3.2949, -4.3805, -4.8606, -5.0811, -4.9400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5552, device='cuda:0', dtype=torch.float64)
tensor([-3.2943, -4.3857, -4.8747, -5.0862, -4.9349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6267, device='cuda:0', dtype=torch.float64)
tensor([-3.3269, -4.3972, -4.8736, -5.0607, -4.9365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9238, device='cuda:0', dtype=torch.float64)
tensor([-3.3569, -4.4051, -4.8896, -5.0396, -4.9346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7535, device='cuda:0', dtype=torch.float64)
tensor([-3.3883, -4.4017, -4.9065, -5.0590, -4.9278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7146, device='cuda:0', dtype=torch.float64)
tensor([-3.4198, -4.3891, -4.9468, -5.1096, -4.9156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8401, device='cuda:0', dtype=torch.float64)
tensor([-3.4435, -4.3822, -4.9952, -5.1898, -4.9081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6856, device='cuda:0', dtype=torch.float64)
tensor([-3.4836, -4.3986, -5.0054, -5.2381, -4.9289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4333, device='cuda:0', dtype=torch.float64)
tensor([-3.5436, -4.4439, -4.9886, -5.2411, -4.9579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9193, device='cuda:0', dtype=torch.float64)
tensor([-3.5931, -4.4741, -4.9675, -5.2274, -4.9694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7977, device='cuda:0', dtype=torch.float64)
tensor([-3.6448, -4.5101, -4.9440, -5.1578, -4.9736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5907, device='cuda:0', dtype=torch.float64)
tensor([-3.7150, -4.5589, -4.9374, -5.1185, -5.0003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1903, device='cuda:0', dtype=torch.float64)
tensor([-3.8045, -4.6150, -4.9108, -5.0350, -5.0318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6426, device='cuda:0', dtype=torch.float64)
tensor([-3.8921, -4.6795, -4.8760, -4.9741, -5.0846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7680, device='cuda:0', dtype=torch.float64)
tensor([-3.9460, -4.7180, -4.8605, -4.9653, -5.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9574, device='cuda:0', dtype=torch.float64)
tensor([-3.9788, -4.7309, -4.8728, -4.9782, -5.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9124, device='cuda:0', dtype=torch.float64)
tensor([-4.0296, -4.7446, -4.8458, -4.9126, -5.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6108, device='cuda:0', dtype=torch.float64)
tensor([-4.0655, -4.7566, -4.7962, -4.8392, -5.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6548, device='cuda:0', dtype=torch.float64)
tensor([-4.1005, -4.7674, -4.7924, -4.7852, -5.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9164, device='cuda:0', dtype=torch.float64)
tensor([-4.1128, -4.7707, -4.8063, -4.7521, -5.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7004, device='cuda:0', dtype=torch.float64)
tensor([-4.1195, -4.7836, -4.7678, -4.7393, -5.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4493, device='cuda:0', dtype=torch.float64)
tensor([-4.1190, -4.7905, -4.7541, -4.7331, -5.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6915, device='cuda:0', dtype=torch.float64)
tensor([-4.0891, -4.7894, -4.7487, -4.7671, -5.0890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8474, device='cuda:0', dtype=torch.float64)
tensor([-4.0414, -4.7803, -4.7589, -4.8524, -5.0661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6767, device='cuda:0', dtype=torch.float64)
tensor([-4.0217, -4.7821, -4.7858, -4.9306, -5.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8225, device='cuda:0', dtype=torch.float64)
tensor([-3.9931, -4.7894, -4.8560, -5.0663, -5.0767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6268, device='cuda:0', dtype=torch.float64)
tensor([-3.9919, -4.8153, -4.8862, -5.1084, -5.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8772, device='cuda:0', dtype=torch.float64)
tensor([-3.9801, -4.8350, -4.8935, -5.1061, -5.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8061, device='cuda:0', dtype=torch.float64)
tensor([-3.9643, -4.8476, -4.8969, -5.0873, -5.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8051, device='cuda:0', dtype=torch.float64)
tensor([-3.9123, -4.8288, -4.9746, -5.2481, -5.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6948, device='cuda:0', dtype=torch.float64)
tensor([-3.8778, -4.8238, -5.0525, -5.3907, -5.2888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9477, device='cuda:0', dtype=torch.float64)
tensor([-3.8391, -4.8049, -5.1188, -5.5317, -5.3220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7720, device='cuda:0', dtype=torch.float64)
tensor([-3.8214, -4.7980, -5.1786, -5.6214, -5.3532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7472, device='cuda:0', dtype=torch.float64)
tensor([-3.7946, -4.7915, -5.2193, -5.6840, -5.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5928, device='cuda:0', dtype=torch.float64)
tensor([-3.7626, -4.7858, -5.2963, -5.8665, -5.3698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7054, device='cuda:0', dtype=torch.float64)
tensor([-3.7518, -4.7964, -5.3719, -6.0388, -5.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7651, device='cuda:0', dtype=torch.float64)
tensor([-3.7765, -4.8308, -5.3912, -6.1014, -5.4336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3587, device='cuda:0', dtype=torch.float64)
tensor([-3.8118, -4.8703, -5.3614, -6.1070, -5.4548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5188, device='cuda:0', dtype=torch.float64)
tensor([-3.8750, -4.9014, -5.3633, -6.1800, -5.4635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7709, device='cuda:0', dtype=torch.float64)
tensor([-3.9501, -4.9315, -5.4202, -6.3047, -5.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4552, device='cuda:0', dtype=torch.float64)
tensor([-4.0202, -4.9703, -5.4418, -6.3305, -5.4794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9065, device='cuda:0', dtype=torch.float64)
tensor([-4.0632, -4.9736, -5.5015, -6.4325, -5.4617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8123, device='cuda:0', dtype=torch.float64)
tensor([-4.0987, -4.9919, -5.4824, -6.4182, -5.4236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3362, device='cuda:0', dtype=torch.float64)
tensor([-4.1367, -5.0066, -5.4709, -6.3689, -5.3893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8295, device='cuda:0', dtype=torch.float64)
tensor([-4.1942, -5.0365, -5.4120, -6.2101, -5.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9489, device='cuda:0', dtype=torch.float64)
tensor([-4.2521, -5.0666, -5.3611, -6.1154, -5.3553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4385, device='cuda:0', dtype=torch.float64)
tensor([-4.3096, -5.0965, -5.3386, -6.0554, -5.3346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7951, device='cuda:0', dtype=torch.float64)
tensor([-4.3631, -5.1365, -5.2707, -5.9235, -5.3047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7223, device='cuda:0', dtype=torch.float64)
tensor([-4.4409, -5.1867, -5.1782, -5.7411, -5.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6444, device='cuda:0', dtype=torch.float64)
tensor([-4.4991, -5.2302, -5.1136, -5.6072, -5.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5954, device='cuda:0', dtype=torch.float64)
tensor([-4.5545, -5.2977, -5.0114, -5.4117, -5.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8214, device='cuda:0', dtype=torch.float64)
tensor([-4.6080, -5.3668, -4.9203, -5.2511, -5.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5559, device='cuda:0', dtype=torch.float64)
tensor([-4.6643, -5.4230, -4.8391, -5.1339, -5.1562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8138, device='cuda:0', dtype=torch.float64)
tensor([-4.7327, -5.4954, -4.7642, -5.0223, -5.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7783, device='cuda:0', dtype=torch.float64)
tensor([-4.7682, -5.5429, -4.7404, -4.9874, -5.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4783, device='cuda:0', dtype=torch.float64)
tensor([-4.7863, -5.5860, -4.7201, -4.9766, -5.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4260, device='cuda:0', dtype=torch.float64)
tensor([-4.7697, -5.5956, -4.7368, -5.0163, -5.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7042, device='cuda:0', dtype=torch.float64)
tensor([-4.7282, -5.5770, -4.7821, -5.1182, -5.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7349, device='cuda:0', dtype=torch.float64)
tensor([-4.6720, -5.5604, -4.8396, -5.2665, -5.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4964, device='cuda:0', dtype=torch.float64)
tensor([-4.6262, -5.5596, -4.8892, -5.3977, -5.2914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4209, device='cuda:0', dtype=torch.float64)
tensor([-4.5762, -5.5871, -4.9266, -5.5186, -5.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5932, device='cuda:0', dtype=torch.float64)
tensor([-4.4994, -5.5797, -5.0008, -5.6982, -5.3056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5434, device='cuda:0', dtype=torch.float64)
tensor([-4.4144, -5.5651, -5.0951, -5.9126, -5.2911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7172, device='cuda:0', dtype=torch.float64)
tensor([-4.3305, -5.5378, -5.2129, -6.2022, -5.2822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5107, device='cuda:0', dtype=torch.float64)
tensor([-4.2904, -5.5277, -5.2920, -6.3925, -5.2992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1812, device='cuda:0', dtype=torch.float64)
tensor([-4.3080, -5.5485, -5.3020, -6.4340, -5.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8595, device='cuda:0', dtype=torch.float64)
tensor([-4.3250, -5.5285, -5.3447, -6.5024, -5.4384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5337, device='cuda:0', dtype=torch.float64)
tensor([-4.3631, -5.5063, -5.4033, -6.5901, -5.4988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8014, device='cuda:0', dtype=torch.float64)
tensor([-4.4032, -5.5116, -5.4335, -6.6280, -5.5607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9592, device='cuda:0', dtype=torch.float64)
tensor([-4.4753, -5.5567, -5.4608, -6.6376, -5.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6841, device='cuda:0', dtype=torch.float64)
tensor([-4.5742, -5.6005, -5.5253, -6.6651, -5.7492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7925, device='cuda:0', dtype=torch.float64)
tensor([-4.6903, -5.6411, -5.5388, -6.5909, -5.8228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4919, device='cuda:0', dtype=torch.float64)
tensor([-4.7809, -5.6633, -5.5568, -6.5406, -5.8823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5209, device='cuda:0', dtype=torch.float64)
tensor([-4.8903, -5.6819, -5.5845, -6.5049, -5.9466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6252, device='cuda:0', dtype=torch.float64)
tensor([-4.9938, -5.7050, -5.6185, -6.4830, -5.9974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7998, device='cuda:0', dtype=torch.float64)
tensor([-5.1150, -5.7726, -5.6255, -6.3887, -6.0802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6218, device='cuda:0', dtype=torch.float64)
tensor([-5.1965, -5.8260, -5.6320, -6.3032, -6.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9172, device='cuda:0', dtype=torch.float64)
tensor([-5.2628, -5.8498, -5.6544, -6.2480, -6.1318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5231, device='cuda:0', dtype=torch.float64)
tensor([-5.2919, -5.8731, -5.6716, -6.1786, -6.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7257, device='cuda:0', dtype=torch.float64)
tensor([-5.3284, -5.9108, -5.6654, -6.0692, -6.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9920, device='cuda:0', dtype=torch.float64)
tensor([-5.3446, -5.9054, -5.6947, -6.0575, -6.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6785, device='cuda:0', dtype=torch.float64)
tensor([-5.3474, -5.8842, -5.7149, -6.0266, -6.0300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6854, device='cuda:0', dtype=torch.float64)
tensor([-5.3399, -5.8227, -5.7887, -6.0760, -5.9691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8681, device='cuda:0', dtype=torch.float64)
tensor([-5.3467, -5.7909, -5.8039, -6.0294, -5.9227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6636, device='cuda:0', dtype=torch.float64)
tensor([-5.3310, -5.7472, -5.8068, -6.0109, -5.8574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9843, device='cuda:0', dtype=torch.float64)
tensor([-5.3117, -5.6947, -5.8473, -6.0593, -5.7770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3007, device='cuda:0', dtype=torch.float64)
tensor([-5.2801, -5.6603, -5.8557, -6.1022, -5.7067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7352, device='cuda:0', dtype=torch.float64)
tensor([-5.2562, -5.6224, -5.9017, -6.1841, -5.6431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7937, device='cuda:0', dtype=torch.float64)
tensor([-5.2310, -5.5819, -5.9495, -6.2988, -5.6066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5909, device='cuda:0', dtype=torch.float64)
tensor([-5.2328, -5.5650, -5.9577, -6.4062, -5.5866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5904, device='cuda:0', dtype=torch.float64)
tensor([-5.2398, -5.5658, -5.9686, -6.4591, -5.5850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6155, device='cuda:0', dtype=torch.float64)
tensor([-5.2465, -5.5846, -5.9688, -6.5014, -5.5781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6851, device='cuda:0', dtype=torch.float64)
tensor([-5.2587, -5.6112, -5.9919, -6.5981, -5.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5549, device='cuda:0', dtype=torch.float64)
tensor([-5.2734, -5.6368, -6.0788, -6.8282, -5.5789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6679, device='cuda:0', dtype=torch.float64)
tensor([-5.2889, -5.6974, -6.1725, -7.0026, -5.5953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6446, device='cuda:0', dtype=torch.float64)
tensor([-5.3178, -5.7546, -6.3364, -7.2897, -5.6349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6228, device='cuda:0', dtype=torch.float64)
tensor([-5.3575, -5.8179, -6.4947, -7.5817, -5.6837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4831, device='cuda:0', dtype=torch.float64)
tensor([-5.4231, -5.8923, -6.6280, -7.8660, -5.7415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7804, device='cuda:0', dtype=torch.float64)
tensor([-5.4728, -5.9610, -6.7485, -8.1168, -5.7973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8033, device='cuda:0', dtype=torch.float64)
tensor([-5.5168, -6.0165, -6.8530, -8.3400, -5.8543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4406, device='cuda:0', dtype=torch.float64)
tensor([-5.5416, -6.0798, -6.9487, -8.5864, -5.8742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4788, device='cuda:0', dtype=torch.float64)
tensor([-5.5660, -6.1643, -7.0128, -8.7900, -5.8921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4879, device='cuda:0', dtype=torch.float64)
tensor([-5.6113, -6.2532, -7.0988, -8.9669, -5.9079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7797, device='cuda:0', dtype=torch.float64)
tensor([-5.6472, -6.3508, -7.1673, -9.1607, -5.9080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2765, device='cuda:0', dtype=torch.float64)
tensor([-5.6615, -6.4086, -7.2611, -9.3590, -5.9193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5961, device='cuda:0', dtype=torch.float64)
tensor([-5.6886, -6.5021, -7.4117, -9.7534, -5.9311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7310, device='cuda:0', dtype=torch.float64)
tensor([ -5.7669,  -6.6060,  -7.5383, -10.1199,  -5.9726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6364, device='cuda:0', dtype=torch.float64)
tensor([ -5.8492,  -6.7105,  -7.7062, -10.5611,  -6.0451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8056, device='cuda:0', dtype=torch.float64)
tensor([ -5.9483,  -6.8362,  -7.9151, -11.0911,  -6.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6524, device='cuda:0', dtype=torch.float64)
tensor([ -6.0626,  -6.9884,  -8.1028, -11.6538,  -6.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5972, device='cuda:0', dtype=torch.float64)
tensor([ -6.1922,  -7.1968,  -8.2726, -12.2663,  -6.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4373, device='cuda:0', dtype=torch.float64)
tensor([ -6.3359,  -7.3878,  -8.4157, -12.8239,  -6.4307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8748, device='cuda:0', dtype=torch.float64)
tensor([ -6.4744,  -7.5877,  -8.5432, -13.3850,  -6.4934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7481, device='cuda:0', dtype=torch.float64)
tensor([ -6.5649,  -7.8197,  -8.6759, -14.0786,  -6.5550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([ -6.6664,  -8.1300,  -8.8109, -14.8624,  -6.6288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5866, device='cuda:0', dtype=torch.float64)
tensor([ -6.7646,  -8.4614,  -8.9588, -15.6104,  -6.7220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4358, device='cuda:0', dtype=torch.float64)
tensor([ -6.8662,  -8.9676,  -9.1313, -16.5736,  -6.8428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6089, device='cuda:0', dtype=torch.float64)
tensor([ -7.0016,  -9.5855,  -9.3160, -17.5439,  -6.9884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9046, device='cuda:0', dtype=torch.float64)
tensor([ -7.1422, -10.3183,  -9.5284, -18.3884,  -7.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7123, device='cuda:0', dtype=torch.float64)
tensor([ -7.3532, -11.0755,  -9.7431, -19.0219,  -7.2886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3989, device='cuda:0', dtype=torch.float64)
tensor([ -7.5748, -11.6235,  -9.8828, -19.4321,  -7.4051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6811, device='cuda:0', dtype=torch.float64)
tensor([ -7.7741, -12.0873, -10.0788, -19.7875,  -7.5613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6256, device='cuda:0', dtype=torch.float64)
tensor([ -7.9242, -12.5360, -10.2514, -20.1486,  -7.7670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4529, device='cuda:0', dtype=torch.float64)
tensor([ -8.0869, -12.9811, -10.4016, -20.4529,  -7.9600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7140, device='cuda:0', dtype=torch.float64)
tensor([ -8.1666, -13.3835, -10.5003, -20.6168,  -8.1325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5005, device='cuda:0', dtype=torch.float64)
tensor([ -8.2673, -13.8583, -10.6505, -20.8945,  -8.3439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6567, device='cuda:0', dtype=torch.float64)
tensor([ -8.3528, -14.2352, -10.7604, -21.1221,  -8.5494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6670, device='cuda:0', dtype=torch.float64)
tensor([ -8.4751, -14.5041, -10.8451, -21.2924,  -8.7140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([ -8.6562, -14.8149, -10.9298, -21.4910,  -8.9131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6280, device='cuda:0', dtype=torch.float64)
tensor([ -8.8614, -14.7606, -11.0042, -21.5443,  -9.0499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2915, device='cuda:0', dtype=torch.float64)
tensor([ -9.0753, -14.7158, -11.0925, -21.6758,  -9.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6042, device='cuda:0', dtype=torch.float64)
tensor([ -9.3017, -14.4357, -11.1784, -21.7706,  -9.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3312, device='cuda:0', dtype=torch.float64)
tensor([ -9.5019, -14.2018, -11.2815, -21.8594,  -9.2274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5338, device='cuda:0', dtype=torch.float64)
tensor([ -9.6626, -13.8428, -11.3045, -21.6649,  -9.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5445, device='cuda:0', dtype=torch.float64)
tensor([ -9.9065, -13.5032, -11.2840, -21.3518,  -9.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8010, device='cuda:0', dtype=torch.float64)
tensor([-10.1398, -13.0381, -11.0232, -20.7827,  -9.3146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6816, device='cuda:0', dtype=torch.float64)
tensor([-10.3460, -12.8399, -10.8521, -20.4085,  -9.5174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8673, device='cuda:0', dtype=torch.float64)
tensor([-10.4567, -12.7062, -10.7088, -20.1522,  -9.7005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7026, device='cuda:0', dtype=torch.float64)
tensor([-10.6308, -12.6288, -10.5213, -19.9878,  -9.9412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3733, device='cuda:0', dtype=torch.float64)
tensor([-10.7401, -12.5937, -10.3642, -19.7743, -10.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7795, device='cuda:0', dtype=torch.float64)
tensor([-10.8841, -12.5920, -10.2590, -19.8041, -10.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6298, device='cuda:0', dtype=torch.float64)
tensor([-10.9781, -12.7210, -10.3029, -20.1549, -10.5976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9600, device='cuda:0', dtype=torch.float64)
tensor([-11.1286, -12.8314, -10.3751, -20.6048, -10.9721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6766, device='cuda:0', dtype=torch.float64)
tensor([-11.2846, -12.9076, -10.3987, -20.8783, -11.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5822, device='cuda:0', dtype=torch.float64)
tensor([-11.3867, -12.9140, -10.4338, -21.1081, -11.6576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5126, device='cuda:0', dtype=torch.float64)
tensor([-11.5228, -12.8642, -10.4977, -21.2826, -11.8886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5157, device='cuda:0', dtype=torch.float64)
tensor([-11.7351, -12.8821, -10.6574, -21.6308, -12.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7492, device='cuda:0', dtype=torch.float64)
tensor([-11.9413, -12.8367, -10.7109, -21.7587, -12.2993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4365, device='cuda:0', dtype=torch.float64)
tensor([-12.3254, -12.8178, -10.7500, -21.8052, -12.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4603, device='cuda:0', dtype=torch.float64)
tensor([-12.5628, -12.8410, -10.7819, -21.9892, -12.5625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6192, device='cuda:0', dtype=torch.float64)
tensor([-12.7540, -12.9615, -10.7597, -22.1973, -12.7265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4637, device='cuda:0', dtype=torch.float64)
tensor([-12.9564, -13.1021, -10.7489, -22.4272, -12.8501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6821, device='cuda:0', dtype=torch.float64)
tensor([-13.2208, -13.4837, -10.8078, -22.9379, -12.9842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4977, device='cuda:0', dtype=torch.float64)
tensor([-13.4093, -13.9033, -10.8578, -23.3898, -13.0984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5149, device='cuda:0', dtype=torch.float64)
tensor([-13.6710, -14.3179, -10.9197, -23.8031, -13.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6797, device='cuda:0', dtype=torch.float64)
tensor([-13.7804, -14.8427, -10.9946, -24.2214, -13.2881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5012, device='cuda:0', dtype=torch.float64)
tensor([-13.8865, -15.4299, -11.1039, -24.7631, -13.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5974, device='cuda:0', dtype=torch.float64)
tensor([-14.0078, -16.1582, -11.2461, -25.3216, -13.5342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5968, device='cuda:0', dtype=torch.float64)
tensor([-14.1538, -17.3350, -11.4905, -26.1948, -13.6401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6514, device='cuda:0', dtype=torch.float64)
tensor([-14.2649, -18.1869, -11.6481, -26.7278, -13.7344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6309, device='cuda:0', dtype=torch.float64)
tensor([-14.4333, -19.0593, -11.8816, -27.4122, -13.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5677, device='cuda:0', dtype=torch.float64)
tensor([-14.5351, -19.6264, -12.0066, -27.7134, -13.8363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4862, device='cuda:0', dtype=torch.float64)
tensor([-14.7058, -20.6586, -12.2317, -28.3395, -13.9404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4788, device='cuda:0', dtype=torch.float64)
tensor([-14.7674, -21.6903, -12.4068, -29.0747, -14.0331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5096, device='cuda:0', dtype=torch.float64)
tensor([-14.8631, -22.9219, -12.5807, -29.9906, -14.1107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6288, device='cuda:0', dtype=torch.float64)
tensor([-14.9409, -23.9134, -12.8009, -30.8471, -14.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4868, device='cuda:0', dtype=torch.float64)
tensor([-15.0377, -24.8896, -13.0311, -31.7953, -14.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2310, device='cuda:0', dtype=torch.float64)
tensor([-15.1742, -25.6912, -13.2018, -32.7830, -14.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3944, device='cuda:0', dtype=torch.float64)
tensor([-15.2587, -26.9967, -13.4107, -34.1140, -14.2024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6607, device='cuda:0', dtype=torch.float64)
tensor([-15.3999, -27.9710, -13.6047, -35.3069, -14.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8090, device='cuda:0', dtype=torch.float64)
tensor([-15.5654, -28.5014, -13.8088, -36.4772, -14.2839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8338, device='cuda:0', dtype=torch.float64)
tensor([-15.7051, -27.9054, -13.8162, -36.7716, -13.9806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5784, device='cuda:0', dtype=torch.float64)
tensor([-15.7989, -27.7595, -13.8243, -37.2153, -13.7533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4677, device='cuda:0', dtype=torch.float64)
tensor([-15.7941, -27.3504, -13.8258, -37.5671, -13.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6079, device='cuda:0', dtype=torch.float64)
tensor([-15.7447, -26.8426, -13.7750, -38.1811, -13.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3965, device='cuda:0', dtype=torch.float64)
tensor([-15.8397, -26.2203, -13.7168, -38.4354, -12.9571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4103, device='cuda:0', dtype=torch.float64)
tensor([-15.9691, -25.9007, -13.6725, -38.5476, -12.7671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7043, device='cuda:0', dtype=torch.float64)
tensor([-16.0379, -25.3595, -13.6181, -38.5539, -12.5405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5321, device='cuda:0', dtype=torch.float64)
tensor([-16.1707, -25.2509, -13.6183, -38.8368, -12.4847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6824, device='cuda:0', dtype=torch.float64)
tensor([-16.4195, -25.6582, -13.7236, -39.3602, -12.5509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7409, device='cuda:0', dtype=torch.float64)
tensor([-16.6066, -26.0309, -13.8359, -39.9971, -12.6142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8604, device='cuda:0', dtype=torch.float64)
tensor([-16.7259, -25.7980, -13.8780, -40.4069, -12.5983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8149, device='cuda:0', dtype=torch.float64)
tensor([-16.8718, -25.4250, -13.8813, -40.6785, -12.5710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4863, device='cuda:0', dtype=torch.float64)
tensor([-16.9714, -25.3191, -13.9319, -41.2533, -12.5184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6302, device='cuda:0', dtype=torch.float64)
tensor([-17.1615, -25.2838, -14.0247, -41.6969, -12.4730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4685, device='cuda:0', dtype=torch.float64)
tensor([-17.3029, -24.6196, -14.0624, -41.4000, -12.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4541, device='cuda:0', dtype=torch.float64)
tensor([-17.4379, -24.2335, -14.1432, -41.1686, -12.3343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8347, device='cuda:0', dtype=torch.float64)
tensor([-17.5290, -24.4973, -14.2587, -41.7288, -12.3946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6565, device='cuda:0', dtype=torch.float64)
tensor([-17.5175, -24.7651, -14.3555, -42.2360, -12.4748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2961, device='cuda:0', dtype=torch.float64)
tensor([-17.5079, -25.2677, -14.4772, -42.8072, -12.6271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7887, device='cuda:0', dtype=torch.float64)
tensor([-17.4348, -26.0356, -14.5812, -43.6131, -12.8780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4200, device='cuda:0', dtype=torch.float64)
tensor([-17.3792, -26.5234, -14.5796, -44.2209, -13.1351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5299, device='cuda:0', dtype=torch.float64)
tensor([-17.4358, -27.0595, -14.6434, -44.9619, -13.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5221, device='cuda:0', dtype=torch.float64)
tensor([-17.4801, -27.9516, -14.7252, -46.2126, -13.6159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5406, device='cuda:0', dtype=torch.float64)
tensor([-17.6274, -28.8323, -14.9043, -47.5773, -13.9081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5027, device='cuda:0', dtype=torch.float64)
tensor([-17.8281, -29.8127, -15.1193, -48.8712, -14.2533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7847, device='cuda:0', dtype=torch.float64)
tensor([-18.0732, -31.2844, -15.4118, -50.3900, -14.6443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3539, device='cuda:0', dtype=torch.float64)
tensor([-18.3500, -32.7766, -15.7165, -51.8223, -15.0464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4617, device='cuda:0', dtype=torch.float64)
tensor([-18.6197, -34.0825, -15.8531, -52.9953, -15.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3654, device='cuda:0', dtype=torch.float64)
tensor([-18.8496, -35.3645, -15.9703, -54.0766, -15.6514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4629, device='cuda:0', dtype=torch.float64)
tensor([-18.9945, -36.4888, -15.9923, -55.0369, -16.0062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5299, device='cuda:0', dtype=torch.float64)
tensor([-19.0236, -37.3346, -16.0288, -55.6895, -16.2680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9433, device='cuda:0', dtype=torch.float64)
tensor([-19.0529, -38.2593, -16.1668, -56.4409, -16.5546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5381, device='cuda:0', dtype=torch.float64)
tensor([-19.1145, -38.8150, -16.2804, -57.0001, -16.7972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7651, device='cuda:0', dtype=torch.float64)
tensor([-19.1012, -39.9299, -16.4201, -58.0228, -17.1137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3854, device='cuda:0', dtype=torch.float64)
tensor([-19.0583, -41.0585, -16.6342, -59.1764, -17.5432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7912, device='cuda:0', dtype=torch.float64)
tensor([-19.0833, -42.1359, -16.8077, -60.2042, -17.9812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7072, device='cuda:0', dtype=torch.float64)
tensor([-19.1524, -42.9773, -17.0052, -61.2744, -18.3326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7324, device='cuda:0', dtype=torch.float64)
tensor([-19.2095, -43.2176, -17.1820, -61.8940, -18.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4858, device='cuda:0', dtype=torch.float64)
tensor([-19.3426, -43.4539, -17.4171, -62.5816, -18.6972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([-19.4306, -43.3793, -17.5498, -62.9437, -18.7821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2561, device='cuda:0', dtype=torch.float64)
tensor([-19.5046, -43.2484, -17.6644, -63.3682, -18.9090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6581, device='cuda:0', dtype=torch.float64)
tensor([-19.4568, -43.3625, -17.7568, -64.1681, -19.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5021, device='cuda:0', dtype=torch.float64)
tensor([-19.4656, -43.5934, -17.7527, -64.6655, -19.3879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3790, device='cuda:0', dtype=torch.float64)
tensor([-19.4133, -43.5275, -17.7613, -64.7953, -19.6143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3958, device='cuda:0', dtype=torch.float64)
tensor([-19.3797, -43.2362, -17.7256, -64.9082, -19.8444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4677, device='cuda:0', dtype=torch.float64)
tensor([-19.3422, -43.3193, -17.8276, -65.2155, -20.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4246, device='cuda:0', dtype=torch.float64)
tensor([-19.3852, -43.2112, -17.9238, -65.1058, -20.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6416, device='cuda:0', dtype=torch.float64)
tensor([-19.4069, -42.9602, -18.0625, -64.7284, -20.5769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5025, device='cuda:0', dtype=torch.float64)
tensor([-19.4841, -42.7743, -18.1631, -64.2095, -20.7110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8421, device='cuda:0', dtype=torch.float64)
tensor([-19.6552, -42.3310, -18.3465, -63.3842, -20.7815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6416, device='cuda:0', dtype=torch.float64)
tensor([-19.8789, -42.3948, -18.6490, -63.1125, -20.8742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7285, device='cuda:0', dtype=torch.float64)
tensor([-19.9844, -43.2186, -18.8831, -63.3981, -21.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5041, device='cuda:0', dtype=torch.float64)
tensor([-20.0216, -43.6184, -18.9815, -63.4468, -21.4425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6229, device='cuda:0', dtype=torch.float64)
tensor([-19.9423, -44.3651, -18.9796, -63.8382, -21.7481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5921, device='cuda:0', dtype=torch.float64)
tensor([-19.8774, -45.0935, -19.0080, -64.0961, -22.0533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3513, device='cuda:0', dtype=torch.float64)
tensor([-19.8140, -45.3709, -18.9778, -63.7520, -22.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-19.8046, -45.7584, -18.9441, -63.6203, -22.5850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7557, device='cuda:0', dtype=torch.float64)
tensor([-19.7905, -46.0825, -18.9736, -63.6668, -23.0626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4605, device='cuda:0', dtype=torch.float64)
tensor([-19.7780, -45.8655, -19.0135, -63.7460, -23.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8860, device='cuda:0', dtype=torch.float64)
tensor([-19.7503, -46.5561, -19.0300, -64.4512, -24.3746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9605, device='cuda:0', dtype=torch.float64)
tensor([-19.7177, -47.2074, -19.0388, -65.3861, -25.6278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7482, device='cuda:0', dtype=torch.float64)
tensor([-19.7703, -48.4413, -19.0542, -66.9413, -27.6297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3976, device='cuda:0', dtype=torch.float64)
tensor([-19.8882, -49.4131, -19.1109, -68.0222, -29.5732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4348, device='cuda:0', dtype=torch.float64)
tensor([-20.1489, -50.6598, -19.1493, -69.1184, -31.5339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5737, device='cuda:0', dtype=torch.float64)
tensor([-20.3955, -51.2812, -19.1874, -69.8290, -32.9028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7126, device='cuda:0', dtype=torch.float64)
tensor([-20.7812, -51.2095, -19.1383, -69.3142, -33.4599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5122, device='cuda:0', dtype=torch.float64)
tensor([-21.1452, -51.6198, -19.1753, -69.2385, -34.4642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6880, device='cuda:0', dtype=torch.float64)
tensor([-21.6077, -52.3179, -19.3922, -69.5384, -35.5298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6197, device='cuda:0', dtype=torch.float64)
tensor([-22.0858, -52.9135, -19.6442, -69.7646, -36.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7031, device='cuda:0', dtype=torch.float64)
tensor([-22.5729, -53.1096, -19.8096, -69.7157, -36.7948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7262, device='cuda:0', dtype=torch.float64)
tensor([-23.0059, -53.6476, -19.9906, -70.0684, -37.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5506, device='cuda:0', dtype=torch.float64)
tensor([-23.4703, -53.7034, -20.2019, -70.2147, -37.2492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4181, device='cuda:0', dtype=torch.float64)
tensor([-23.8487, -53.8175, -20.4400, -70.3615, -37.2497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5860, device='cuda:0', dtype=torch.float64)
tensor([-24.2065, -53.9247, -20.7161, -70.7771, -37.3601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5404, device='cuda:0', dtype=torch.float64)
tensor([-24.4711, -54.8010, -20.9196, -71.6189, -37.9171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5045, device='cuda:0', dtype=torch.float64)
tensor([-24.6405, -54.8095, -21.0384, -71.8699, -37.6145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4467, device='cuda:0', dtype=torch.float64)
tensor([-24.7374, -54.8635, -21.1092, -72.0318, -37.4313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4807, device='cuda:0', dtype=torch.float64)
tensor([-24.6279, -54.0322, -20.9004, -71.6172, -36.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5219, device='cuda:0', dtype=torch.float64)
tensor([-24.4687, -52.7860, -20.6364, -70.6418, -35.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6165, device='cuda:0', dtype=torch.float64)
tensor([-24.4246, -51.5713, -20.5355, -70.1467, -33.9090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6060, device='cuda:0', dtype=torch.float64)
tensor([-24.4145, -50.1349, -20.4599, -69.6524, -32.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2899, device='cuda:0', dtype=torch.float64)
tensor([-24.4777, -49.0895, -20.4175, -69.5290, -31.2732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9982, device='cuda:0', dtype=torch.float64)
tensor([-24.5652, -46.7932, -20.3334, -68.2035, -29.3361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9933, device='cuda:0', dtype=torch.float64)
tensor([-24.7077, -44.2469, -20.3268, -66.4347, -27.4063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4401, device='cuda:0', dtype=torch.float64)
tensor([-24.9114, -42.1027, -20.3599, -64.8101, -25.9371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8621, device='cuda:0', dtype=torch.float64)
tensor([-25.0701, -41.3195, -20.4924, -64.5573, -25.5277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8944, device='cuda:0', dtype=torch.float64)
tensor([-25.2419, -40.3596, -20.7186, -64.2677, -25.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7583, device='cuda:0', dtype=torch.float64)
tensor([-25.3270, -40.2180, -21.0420, -64.6165, -25.4958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3847, device='cuda:0', dtype=torch.float64)
tensor([-25.3909, -40.1867, -21.3040, -65.2560, -26.0386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5100, device='cuda:0', dtype=torch.float64)
tensor([-25.4814, -40.4680, -21.5473, -65.9459, -26.7030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2350, device='cuda:0', dtype=torch.float64)
tensor([-25.5561, -40.7774, -21.7355, -66.4588, -27.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5310, device='cuda:0', dtype=torch.float64)
tensor([-25.5854, -41.2696, -21.9545, -67.0591, -27.8898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4938, device='cuda:0', dtype=torch.float64)
tensor([-25.6895, -41.6159, -22.1760, -67.2601, -28.3787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5248, device='cuda:0', dtype=torch.float64)
tensor([-25.8158, -41.9466, -22.3622, -67.5137, -28.8463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3419, device='cuda:0', dtype=torch.float64)
tensor([-26.0240, -42.4803, -22.5872, -67.8598, -29.3133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3750, device='cuda:0', dtype=torch.float64)
tensor([-26.1911, -43.0134, -22.8561, -68.1607, -29.7037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3033, device='cuda:0', dtype=torch.float64)
tensor([-26.2812, -43.3188, -23.0884, -68.5100, -29.9144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6135, device='cuda:0', dtype=torch.float64)
tensor([-26.4267, -43.7695, -23.3288, -68.8218, -30.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4708, device='cuda:0', dtype=torch.float64)
tensor([-26.6846, -44.4372, -23.5667, -69.0198, -30.5041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3905, device='cuda:0', dtype=torch.float64)
tensor([-26.8653, -45.6820, -23.8099, -69.6600, -31.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3336, device='cuda:0', dtype=torch.float64)
tensor([-27.0970, -46.4499, -24.0560, -69.9474, -31.7727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5363, device='cuda:0', dtype=torch.float64)
tensor([-27.3115, -47.3504, -24.4097, -70.5364, -32.4658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6033, device='cuda:0', dtype=torch.float64)
tensor([-27.5175, -48.0582, -24.7941, -70.8426, -32.9743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6050, device='cuda:0', dtype=torch.float64)
tensor([-27.8211, -48.5152, -25.2151, -71.0448, -33.4815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4763, device='cuda:0', dtype=torch.float64)
tensor([-28.1735, -48.9442, -25.5894, -71.4678, -33.8348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4093, device='cuda:0', dtype=torch.float64)
tensor([-28.3707, -49.7072, -25.8937, -72.1877, -34.6407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9732, device='cuda:0', dtype=torch.float64)
tensor([-28.5684, -50.7563, -26.1907, -73.2372, -36.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4986, device='cuda:0', dtype=torch.float64)
tensor([-28.7230, -51.7097, -26.5069, -74.3503, -37.7755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5396, device='cuda:0', dtype=torch.float64)
tensor([-28.9201, -52.7130, -26.7281, -75.3649, -39.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4694, device='cuda:0', dtype=torch.float64)
tensor([-29.1371, -53.4918, -26.8715, -76.2933, -40.7345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4635, device='cuda:0', dtype=torch.float64)
tensor([-29.3235, -54.1354, -27.0191, -76.9377, -41.7024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5844, device='cuda:0', dtype=torch.float64)
tensor([-29.4230, -55.0176, -27.0824, -77.3857, -42.9464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3793, device='cuda:0', dtype=torch.float64)
tensor([-29.4832, -55.6584, -27.2557, -77.8668, -43.9377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6200, device='cuda:0', dtype=torch.float64)
tensor([-29.5870, -56.7093, -27.4546, -78.9105, -45.2905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7526, device='cuda:0', dtype=torch.float64)
tensor([-29.6726, -57.2791, -27.4963, -79.4371, -46.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3767, device='cuda:0', dtype=torch.float64)
tensor([-29.6505, -57.9507, -27.6299, -80.2265, -47.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4122, device='cuda:0', dtype=torch.float64)
tensor([-29.5230, -58.4839, -27.6597, -81.0842, -48.4809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3586, device='cuda:0', dtype=torch.float64)
tensor([-29.3593, -58.7939, -27.6482, -81.7668, -49.2998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4950, device='cuda:0', dtype=torch.float64)
tensor([-29.1672, -59.4716, -27.5501, -82.6680, -50.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6252, device='cuda:0', dtype=torch.float64)
tensor([-28.9306, -58.7018, -27.4287, -82.2719, -50.0378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3846, device='cuda:0', dtype=torch.float64)
tensor([-28.6732, -58.2279, -27.3634, -82.0717, -50.0510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6718, device='cuda:0', dtype=torch.float64)
tensor([-28.3648, -58.1513, -27.3128, -82.1451, -50.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2210, device='cuda:0', dtype=torch.float64)
tensor([-28.0040, -58.0424, -27.2665, -82.2310, -50.6424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4941, device='cuda:0', dtype=torch.float64)
tensor([-27.6934, -57.7311, -27.3542, -81.8950, -50.7030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5318, device='cuda:0', dtype=torch.float64)
tensor([-27.4061, -58.1327, -27.3737, -82.1371, -51.4405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4341, device='cuda:0', dtype=torch.float64)
tensor([-27.1492, -58.5887, -27.3862, -82.7171, -52.0989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4123, device='cuda:0', dtype=torch.float64)
tensor([-27.0357, -58.9729, -27.4172, -83.2136, -52.3515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4109, device='cuda:0', dtype=torch.float64)
tensor([-26.8739, -59.1780, -27.4864, -83.7093, -52.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3970, device='cuda:0', dtype=torch.float64)
tensor([-26.7143, -59.3176, -27.6707, -84.4222, -52.3881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5245, device='cuda:0', dtype=torch.float64)
tensor([-26.5371, -59.6673, -27.8553, -85.3457, -52.5714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-26.4276, -59.9496, -28.0817, -86.2165, -52.6339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3900, device='cuda:0', dtype=torch.float64)
tensor([-26.3450, -60.3488, -28.3657, -87.1249, -52.9182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2427, device='cuda:0', dtype=torch.float64)
tensor([-26.3096, -60.7710, -28.6026, -87.8542, -53.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8063, device='cuda:0', dtype=torch.float64)
tensor([-26.3059, -61.2472, -28.8908, -88.4238, -53.2494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5821, device='cuda:0', dtype=torch.float64)
tensor([-26.3674, -61.9825, -29.2672, -89.2684, -53.6884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3905, device='cuda:0', dtype=torch.float64)
tensor([-26.4332, -62.8675, -29.6291, -90.0084, -54.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6246, device='cuda:0', dtype=torch.float64)
tensor([-26.6045, -63.1648, -30.0223, -90.2180, -53.9962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4420, device='cuda:0', dtype=torch.float64)
tensor([-26.7646, -63.0335, -30.3924, -89.8576, -53.3196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6744, device='cuda:0', dtype=torch.float64)
tensor([-27.0011, -62.8564, -30.7259, -89.7015, -52.8715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5712, device='cuda:0', dtype=torch.float64)
tensor([-27.2342, -62.7943, -31.0849, -89.5348, -52.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8432, device='cuda:0', dtype=torch.float64)
tensor([-27.3453, -62.5676, -31.2646, -89.0599, -51.9973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2889, device='cuda:0', dtype=torch.float64)
tensor([-27.5305, -62.3696, -31.4224, -88.2068, -51.5160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-27.6905, -62.2264, -31.5021, -87.3017, -51.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4851, device='cuda:0', dtype=torch.float64)
tensor([-27.8052, -62.1949, -31.5638, -86.5117, -50.7987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2903, device='cuda:0', dtype=torch.float64)
tensor([-27.9962, -62.3300, -31.6802, -85.8883, -50.5148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4508, device='cuda:0', dtype=torch.float64)
tensor([-28.1608, -62.6651, -31.7415, -85.1990, -50.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3795, device='cuda:0', dtype=torch.float64)
tensor([-28.3258, -62.7479, -31.9576, -84.4549, -50.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6054, device='cuda:0', dtype=torch.float64)
tensor([-28.5057, -62.9521, -32.2374, -83.9122, -50.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4212, device='cuda:0', dtype=torch.float64)
tensor([-28.7691, -63.2702, -32.6019, -84.2387, -50.5294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7524, device='cuda:0', dtype=torch.float64)
tensor([-29.1190, -63.8667, -32.8365, -85.1541, -51.0231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6070, device='cuda:0', dtype=torch.float64)
tensor([-29.5646, -64.6102, -33.2041, -86.4546, -51.8824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5672, device='cuda:0', dtype=torch.float64)
tensor([-29.9615, -65.4955, -33.5580, -87.6211, -52.5836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7505, device='cuda:0', dtype=torch.float64)
tensor([-30.3071, -65.9366, -33.9588, -88.5340, -52.6272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4226, device='cuda:0', dtype=torch.float64)
tensor([-30.6946, -66.2959, -34.3924, -89.3345, -52.6274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4617, device='cuda:0', dtype=torch.float64)
tensor([-31.0826, -66.6122, -34.8443, -90.4087, -52.7977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5335, device='cuda:0', dtype=torch.float64)
tensor([-31.4748, -67.1221, -35.1982, -91.2700, -53.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6641, device='cuda:0', dtype=torch.float64)
tensor([-31.7442, -67.9943, -35.4195, -91.9954, -54.0118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4435, device='cuda:0', dtype=torch.float64)
tensor([-32.0067, -68.4432, -35.6774, -92.4599, -54.6788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3601, device='cuda:0', dtype=torch.float64)
tensor([-32.3322, -68.7985, -35.9618, -92.9054, -55.4412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5606, device='cuda:0', dtype=torch.float64)
tensor([-32.5379, -68.8804, -36.1759, -92.6533, -55.8020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4134, device='cuda:0', dtype=torch.float64)
tensor([-32.6917, -68.5477, -36.3288, -91.9302, -55.5578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5362, device='cuda:0', dtype=torch.float64)
tensor([-32.9107, -67.7999, -36.4185, -90.9442, -54.5050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4912, device='cuda:0', dtype=torch.float64)
tensor([-32.9092, -67.0576, -36.6564, -90.1092, -53.2788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4456, device='cuda:0', dtype=torch.float64)
tensor([-32.8460, -66.7497, -36.9286, -89.3287, -52.7056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2770, device='cuda:0', dtype=torch.float64)
tensor([-32.7306, -66.6167, -37.1570, -88.6789, -52.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4564, device='cuda:0', dtype=torch.float64)
tensor([-32.6069, -66.7160, -37.2772, -88.1279, -52.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3676, device='cuda:0', dtype=torch.float64)
tensor([-32.5771, -67.3146, -37.3732, -88.4625, -52.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5853, device='cuda:0', dtype=torch.float64)
tensor([-32.4524, -67.8363, -37.3557, -88.9133, -52.9140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3674, device='cuda:0', dtype=torch.float64)
tensor([-32.2953, -68.8951, -37.3723, -89.7648, -53.6054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1564, device='cuda:0', dtype=torch.float64)
tensor([-32.0959, -69.5766, -37.4659, -90.5664, -54.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3594, device='cuda:0', dtype=torch.float64)
tensor([-31.8238, -69.9966, -37.6016, -91.3806, -54.8962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6905, device='cuda:0', dtype=torch.float64)
tensor([-31.7734, -70.9388, -37.7810, -92.9725, -56.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5618, device='cuda:0', dtype=torch.float64)
tensor([-31.8455, -71.8279, -37.8656, -94.4461, -58.1270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2844, device='cuda:0', dtype=torch.float64)
tensor([-31.9356, -72.4989, -37.8972, -95.6425, -59.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4891, device='cuda:0', dtype=torch.float64)
tensor([-31.9766, -72.8718, -37.8894, -96.5289, -59.9237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4507, device='cuda:0', dtype=torch.float64)
tensor([-32.1472, -73.6339, -37.7763, -97.8513, -61.3005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3729, device='cuda:0', dtype=torch.float64)
tensor([-32.4095, -74.0013, -37.7125, -99.1853, -62.5512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3437, device='cuda:0', dtype=torch.float64)
tensor([-32.4488, -74.0108, -37.7326, -99.9846, -62.8879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4395, device='cuda:0', dtype=torch.float64)
tensor([ -32.4952,  -73.7129,  -37.6950, -100.7268,  -63.2305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5677, device='cuda:0', dtype=torch.float64)
tensor([ -32.4961,  -73.1297,  -37.6717, -101.1314,  -63.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5279, device='cuda:0', dtype=torch.float64)
tensor([ -32.4762,  -72.7079,  -37.6244, -101.2642,  -63.4770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4965, device='cuda:0', dtype=torch.float64)
tensor([ -32.6321,  -72.5196,  -37.6684, -101.4186,  -63.8991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2846, device='cuda:0', dtype=torch.float64)
tensor([ -32.6911,  -72.0566,  -37.7007, -101.4741,  -64.2154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1914, device='cuda:0', dtype=torch.float64)
tensor([ -32.7000,  -71.5094,  -37.7081, -101.1980,  -64.4984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1569, device='cuda:0', dtype=torch.float64)
tensor([ -32.8285,  -71.1405,  -37.7875, -100.7325,  -64.9183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([ -32.9504,  -70.9573,  -37.9378, -100.3362,  -65.3502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5184, device='cuda:0', dtype=torch.float64)
tensor([-32.8936, -70.3881, -38.1575, -99.6185, -64.5665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5465, device='cuda:0', dtype=torch.float64)
tensor([-32.8653, -69.6764, -38.3995, -98.7699, -63.5755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4873, device='cuda:0', dtype=torch.float64)
tensor([-32.6374, -68.1653, -38.7329, -97.1942, -61.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3857, device='cuda:0', dtype=torch.float64)
tensor([-32.6026, -67.0710, -39.1696, -95.9001, -59.8490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4602, device='cuda:0', dtype=torch.float64)
tensor([-32.4855, -65.6656, -39.5340, -93.9227, -58.1028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4424, device='cuda:0', dtype=torch.float64)
tensor([-32.4172, -64.8010, -39.9026, -92.5459, -56.9055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5265, device='cuda:0', dtype=torch.float64)
tensor([-32.4797, -64.0047, -40.3381, -91.7139, -56.0004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4193, device='cuda:0', dtype=torch.float64)
tensor([-32.6934, -63.7198, -40.6704, -91.5202, -55.6285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3529, device='cuda:0', dtype=torch.float64)
tensor([-32.8702, -63.6408, -40.8874, -91.8989, -55.7471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4384, device='cuda:0', dtype=torch.float64)
tensor([-33.0061, -64.0737, -40.9849, -92.8816, -56.3954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3948, device='cuda:0', dtype=torch.float64)
tensor([-33.0643, -64.4846, -40.9600, -93.7817, -56.9920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5869, device='cuda:0', dtype=torch.float64)
tensor([-33.3535, -65.3739, -41.0698, -95.8249, -58.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5135, device='cuda:0', dtype=torch.float64)
tensor([-33.7659, -66.6487, -41.3317, -98.1757, -60.2272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7783, device='cuda:0', dtype=torch.float64)
tensor([-33.9890, -67.1421, -41.5509, -99.7735, -60.9770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([ -34.2036,  -67.6428,  -41.7419, -101.0817,  -61.5161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6699, device='cuda:0', dtype=torch.float64)
tensor([ -34.6474,  -68.1545,  -41.9787, -102.6742,  -62.4391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3716, device='cuda:0', dtype=torch.float64)
tensor([ -35.2302,  -68.6453,  -42.2226, -104.2343,  -63.4194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4270, device='cuda:0', dtype=torch.float64)
tensor([ -35.9274,  -69.1593,  -42.4164, -105.7155,  -64.4302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2491, device='cuda:0', dtype=torch.float64)
tensor([ -36.4165,  -69.4085,  -42.5640, -106.6199,  -64.8397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3864, device='cuda:0', dtype=torch.float64)
tensor([ -36.8786,  -69.7204,  -42.7486, -107.5418,  -65.0063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4560, device='cuda:0', dtype=torch.float64)
tensor([ -37.4278,  -70.0115,  -42.9248, -108.4523,  -65.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3218, device='cuda:0', dtype=torch.float64)
tensor([ -37.8662,  -70.0826,  -42.9569, -108.9735,  -64.6196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3048, device='cuda:0', dtype=torch.float64)
tensor([ -38.2819,  -69.8825,  -43.0532, -109.1947,  -63.9071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6182, device='cuda:0', dtype=torch.float64)
tensor([ -38.4232,  -69.5951,  -43.2008, -109.0729,  -63.1154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3924, device='cuda:0', dtype=torch.float64)
tensor([ -38.7247,  -69.6942,  -43.3113, -109.3082,  -62.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6022, device='cuda:0', dtype=torch.float64)
tensor([ -39.1399,  -70.0532,  -43.5296, -109.6075,  -62.9664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3851, device='cuda:0', dtype=torch.float64)
tensor([ -39.4535,  -69.8598,  -43.8473, -109.6723,  -62.5828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5599, device='cuda:0', dtype=torch.float64)
tensor([ -39.4768,  -69.1654,  -44.1182, -109.5526,  -61.8517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5692, device='cuda:0', dtype=torch.float64)
tensor([ -39.2691,  -68.2415,  -44.3282, -109.0132,  -60.8051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5371, device='cuda:0', dtype=torch.float64)
tensor([ -38.8025,  -67.0807,  -44.4903, -107.9463,  -59.2824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5553, device='cuda:0', dtype=torch.float64)
tensor([ -38.1170,  -66.0000,  -44.6477, -106.3303,  -57.6209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4485, device='cuda:0', dtype=torch.float64)
tensor([ -37.6123,  -65.1948,  -44.8092, -105.0501,  -56.4638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4744, device='cuda:0', dtype=torch.float64)
tensor([ -37.4484,  -65.1307,  -44.8828, -104.0134,  -56.1310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4750, device='cuda:0', dtype=torch.float64)
tensor([ -36.7313,  -64.7651,  -44.9442, -102.4251,  -54.9672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6944, device='cuda:0', dtype=torch.float64)
tensor([ -36.3868,  -65.0717,  -44.9935, -101.4890,  -54.5184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3332, device='cuda:0', dtype=torch.float64)
tensor([ -35.9655,  -64.9354,  -45.0665, -100.4179,  -53.5753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4053, device='cuda:0', dtype=torch.float64)
tensor([-35.5620, -64.6987, -45.0964, -99.2240, -52.6467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6097, device='cuda:0', dtype=torch.float64)
tensor([-35.5317, -65.1849, -45.3043, -98.8321, -52.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5492, device='cuda:0', dtype=torch.float64)
tensor([-35.5208, -65.3343, -45.5724, -98.6344, -52.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5358, device='cuda:0', dtype=torch.float64)
tensor([-35.4459, -65.3361, -45.7273, -98.5145, -52.1530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6134, device='cuda:0', dtype=torch.float64)
tensor([-35.4330, -65.3933, -45.8435, -98.5596, -51.9702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3561, device='cuda:0', dtype=torch.float64)
tensor([-35.2742, -65.0871, -45.9514, -98.5580, -51.5567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5596, device='cuda:0', dtype=torch.float64)
tensor([-35.2803, -65.0203, -46.1854, -99.0793, -51.6888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6427, device='cuda:0', dtype=torch.float64)
tensor([ -35.4798,  -65.4658,  -46.5081, -100.0451,  -52.5115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4559, device='cuda:0', dtype=torch.float64)
tensor([ -35.8209,  -66.0495,  -46.7244, -101.3086,  -53.4987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6545, device='cuda:0', dtype=torch.float64)
tensor([ -36.1835,  -66.4759,  -46.8560, -102.3491,  -54.3663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2019, device='cuda:0', dtype=torch.float64)
tensor([ -36.6672,  -67.0150,  -47.0213, -103.5560,  -55.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5953, device='cuda:0', dtype=torch.float64)
tensor([ -37.2999,  -68.2029,  -47.0717, -105.1239,  -56.9464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4484, device='cuda:0', dtype=torch.float64)
tensor([ -37.7619,  -69.6120,  -47.2648, -106.7352,  -58.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3385, device='cuda:0', dtype=torch.float64)
tensor([ -38.3237,  -71.2825,  -47.4004, -108.1763,  -60.6671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4049, device='cuda:0', dtype=torch.float64)
tensor([ -38.9135,  -73.5063,  -47.6943, -109.9245,  -62.8632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4981, device='cuda:0', dtype=torch.float64)
tensor([ -39.4784,  -75.6361,  -47.9322, -111.1104,  -64.4065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3231, device='cuda:0', dtype=torch.float64)
tensor([ -39.8833,  -77.3004,  -48.0204, -111.7975,  -65.2779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3785, device='cuda:0', dtype=torch.float64)
tensor([ -40.1555,  -78.6513,  -47.7916, -112.1745,  -66.0529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2919, device='cuda:0', dtype=torch.float64)
tensor([ -40.1952,  -79.4852,  -47.3320, -112.0274,  -66.2655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3393, device='cuda:0', dtype=torch.float64)
tensor([ -40.3157,  -80.3390,  -46.9867, -112.0205,  -66.5116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4555, device='cuda:0', dtype=torch.float64)
tensor([ -40.1564,  -80.3940,  -46.5473, -111.2087,  -66.0724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4722, device='cuda:0', dtype=torch.float64)
tensor([ -40.0335,  -80.2894,  -46.3973, -110.8731,  -65.9589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4343, device='cuda:0', dtype=torch.float64)
tensor([ -40.0614,  -80.9048,  -46.4040, -111.2521,  -66.7429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5626, device='cuda:0', dtype=torch.float64)
tensor([ -39.6218,  -81.0505,  -46.1187, -110.6781,  -66.9496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3589, device='cuda:0', dtype=torch.float64)
tensor([ -39.3008,  -81.3770,  -45.8548, -110.3620,  -67.3799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3052, device='cuda:0', dtype=torch.float64)
tensor([ -39.1176,  -81.8490,  -45.7594, -109.9279,  -67.9355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6541, device='cuda:0', dtype=torch.float64)
tensor([ -39.2458,  -82.8174,  -45.8809, -110.5241,  -69.3801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3823, device='cuda:0', dtype=torch.float64)
tensor([ -39.3346,  -82.8846,  -45.9956, -111.0061,  -70.2993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4038, device='cuda:0', dtype=torch.float64)
tensor([ -39.4665,  -83.5630,  -46.3156, -112.3261,  -72.2735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2230, device='cuda:0', dtype=torch.float64)
tensor([ -39.8251,  -84.5977,  -46.9056, -113.8485,  -74.6083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3855, device='cuda:0', dtype=torch.float64)
tensor([ -40.1048,  -85.0581,  -47.5425, -114.9244,  -76.2611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4659, device='cuda:0', dtype=torch.float64)
tensor([ -39.9487,  -84.8080,  -48.1164, -115.2423,  -77.1938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4849, device='cuda:0', dtype=torch.float64)
tensor([ -39.8731,  -84.7136,  -48.7508, -116.0598,  -78.4049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6363, device='cuda:0', dtype=torch.float64)
tensor([ -39.7345,  -84.7012,  -49.3406, -116.7965,  -79.3717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7182, device='cuda:0', dtype=torch.float64)
tensor([ -39.1769,  -84.3250,  -49.5193, -116.2613,  -79.2254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4454, device='cuda:0', dtype=torch.float64)
tensor([ -38.8782,  -83.7534,  -49.8398, -116.0019,  -79.1725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4434, device='cuda:0', dtype=torch.float64)
tensor([ -38.6660,  -83.3902,  -50.2107, -115.9748,  -79.2960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6020, device='cuda:0', dtype=torch.float64)
tensor([ -38.6564,  -83.5978,  -50.4661, -116.2839,  -79.8759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4144, device='cuda:0', dtype=torch.float64)
tensor([ -38.2546,  -83.1906,  -50.6063, -116.0752,  -79.8345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2538, device='cuda:0', dtype=torch.float64)
tensor([ -37.8073,  -82.5625,  -50.6329, -115.5489,  -79.0244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([ -37.3965,  -82.3079,  -50.6213, -115.2980,  -78.4359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([ -36.9890,  -82.0504,  -50.5809, -114.9998,  -77.7148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4655, device='cuda:0', dtype=torch.float64)
tensor([ -36.8482,  -82.2925,  -50.6462, -115.0800,  -77.7778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3020, device='cuda:0', dtype=torch.float64)
tensor([ -36.9032,  -82.6937,  -50.6394, -115.4023,  -78.1687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2372, device='cuda:0', dtype=torch.float64)
tensor([ -36.9945,  -82.9763,  -50.7180, -115.6967,  -78.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6343, device='cuda:0', dtype=torch.float64)
tensor([ -36.8094,  -82.8881,  -50.8356, -115.4763,  -78.9553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4036, device='cuda:0', dtype=torch.float64)
tensor([ -36.8394,  -83.1294,  -50.9963, -115.5571,  -79.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2453, device='cuda:0', dtype=torch.float64)
tensor([ -36.9067,  -83.3730,  -51.2331, -115.7950,  -80.4531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4153, device='cuda:0', dtype=torch.float64)
tensor([ -37.0869,  -83.6281,  -51.6947, -116.6511,  -81.3437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2369, device='cuda:0', dtype=torch.float64)
tensor([ -37.2294,  -83.9994,  -51.8910, -117.1964,  -82.0373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3093, device='cuda:0', dtype=torch.float64)
tensor([ -37.6875,  -84.4098,  -52.0693, -118.0933,  -83.0541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5151, device='cuda:0', dtype=torch.float64)
tensor([ -38.1728,  -84.9239,  -52.3540, -118.8102,  -84.1896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4842, device='cuda:0', dtype=torch.float64)
tensor([ -38.5759,  -85.7646,  -52.5099, -119.6626,  -85.4447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4987, device='cuda:0', dtype=torch.float64)
tensor([ -38.9545,  -86.6399,  -52.4841, -120.3175,  -86.4010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2605, device='cuda:0', dtype=torch.float64)
tensor([ -39.3050,  -87.5342,  -52.2957, -120.8458,  -86.8266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4035, device='cuda:0', dtype=torch.float64)
tensor([ -39.2062,  -88.6469,  -51.8975, -120.9092,  -86.6587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4769, device='cuda:0', dtype=torch.float64)
tensor([ -39.5200,  -90.1401,  -51.7597, -121.5189,  -87.0541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5588, device='cuda:0', dtype=torch.float64)
tensor([ -39.9294,  -91.2873,  -51.7985, -122.5173,  -87.2318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5039, device='cuda:0', dtype=torch.float64)
tensor([ -40.3345,  -91.9723,  -51.8662, -123.3013,  -87.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3641, device='cuda:0', dtype=torch.float64)
tensor([ -40.9364,  -92.6742,  -51.9109, -124.4061,  -87.7845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4667, device='cuda:0', dtype=torch.float64)
tensor([ -41.2248,  -93.1611,  -51.9945, -125.1083,  -87.6852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3268, device='cuda:0', dtype=torch.float64)
tensor([ -41.7869,  -93.0892,  -52.3098, -126.0106,  -87.9101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5458, device='cuda:0', dtype=torch.float64)
tensor([ -42.2293,  -93.2201,  -52.6155, -126.8541,  -87.9433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3100, device='cuda:0', dtype=torch.float64)
tensor([ -42.5671,  -92.9877,  -53.0861, -127.8938,  -87.9968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3093, device='cuda:0', dtype=torch.float64)
tensor([ -43.1926,  -93.3813,  -53.7087, -129.6252,  -88.9281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3855, device='cuda:0', dtype=torch.float64)
tensor([ -44.1268,  -93.8771,  -54.4344, -131.9188,  -90.3407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([ -45.1680,  -94.4370,  -54.9534, -134.0342,  -91.9839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3369, device='cuda:0', dtype=torch.float64)
tensor([ -46.4899,  -95.0408,  -55.4967, -136.0271,  -93.7370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4650, device='cuda:0', dtype=torch.float64)
tensor([ -47.9382,  -95.7782,  -55.8836, -138.2994,  -95.9112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4904, device='cuda:0', dtype=torch.float64)
tensor([ -49.5364,  -97.1024,  -56.4283, -141.2447,  -98.7186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5463, device='cuda:0', dtype=torch.float64)
tensor([ -51.5469,  -98.3343,  -57.0638, -144.4643, -101.6880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([ -52.9289,  -99.8842,  -57.5332, -146.8982, -104.2574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7358, device='cuda:0', dtype=torch.float64)
tensor([ -54.1649, -100.5324,  -58.0826, -148.8410, -106.2495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3661, device='cuda:0', dtype=torch.float64)
tensor([ -55.0169, -101.5454,  -58.3875, -150.3709, -107.5516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([ -55.4457, -102.7208,  -58.7724, -151.9370, -108.8524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4917, device='cuda:0', dtype=torch.float64)
tensor([ -56.3317, -103.9390,  -59.0688, -153.7766, -110.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4119, device='cuda:0', dtype=torch.float64)
tensor([ -56.1713, -104.8485,  -59.0365, -153.8904, -111.1326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3471, device='cuda:0', dtype=torch.float64)
tensor([ -56.3042, -105.7572,  -59.2876, -154.6859, -112.2178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7288, device='cuda:0', dtype=torch.float64)
tensor([ -55.7897, -105.8655,  -59.2733, -154.1989, -112.0006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1600, device='cuda:0', dtype=torch.float64)
tensor([ -55.2264, -105.5463,  -59.2471, -153.2555, -111.1438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4887, device='cuda:0', dtype=torch.float64)
tensor([ -54.4464, -105.2506,  -59.1415, -152.2069, -110.3429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([ -53.8480, -105.1779,  -59.1045, -151.4486, -110.1685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1135, device='cuda:0', dtype=torch.float64)
tensor([ -53.4520, -105.5955,  -58.9433, -150.8934, -110.0760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4943, device='cuda:0', dtype=torch.float64)
tensor([ -52.9533, -105.3554,  -58.8969, -150.0144, -109.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0140, device='cuda:0', dtype=torch.float64)
tensor([ -52.4300, -105.3546,  -58.7107, -148.8550, -108.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4912, device='cuda:0', dtype=torch.float64)
tensor([ -51.9610, -105.4810,  -58.6920, -147.3615, -106.9457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2537, device='cuda:0', dtype=torch.float64)
tensor([ -51.7515, -105.3191,  -58.8542, -145.9610, -105.6582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4078, device='cuda:0', dtype=torch.float64)
tensor([ -51.4206, -104.8644,  -59.1848, -144.4904, -103.7932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4975, device='cuda:0', dtype=torch.float64)
tensor([ -51.1149, -104.4768,  -59.0901, -142.9959, -101.9734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7500, device='cuda:0', dtype=torch.float64)
tensor([ -51.0109, -104.3929,  -58.8265, -141.5582, -100.4412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3369, device='cuda:0', dtype=torch.float64)
tensor([ -51.1900, -104.0562,  -58.7392, -140.7998,  -99.6047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0126, device='cuda:0', dtype=torch.float64)
tensor([ -51.8070, -104.0274,  -58.5392, -140.6746,  -99.2483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2486, device='cuda:0', dtype=torch.float64)
tensor([ -52.4218, -104.1637,  -58.4700, -140.7629,  -99.2282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([ -53.3958, -104.5092,  -58.6551, -141.5693,  -99.7420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2874, device='cuda:0', dtype=torch.float64)
tensor([ -54.1011, -104.7511,  -58.9000, -141.8985,  -99.9740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([ -54.9023, -104.9577,  -58.9793, -142.4456, -100.2890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3449, device='cuda:0', dtype=torch.float64)
tensor([ -55.6185, -105.0859,  -59.2063, -143.1637, -100.7743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2080, device='cuda:0', dtype=torch.float64)
tensor([ -56.4894, -105.2123,  -59.6529, -143.7820, -101.1870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4380, device='cuda:0', dtype=torch.float64)
tensor([ -57.8953, -105.3423,  -60.5022, -145.1147, -102.2582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4956, device='cuda:0', dtype=torch.float64)
tensor([ -59.1778, -105.0193,  -61.6142, -146.2508, -103.1248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2275, device='cuda:0', dtype=torch.float64)
tensor([ -60.4316, -104.6665,  -62.7806, -147.2317, -104.1496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4600, device='cuda:0', dtype=torch.float64)
tensor([ -61.7794, -104.0061,  -63.9889, -148.5853, -105.4302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2044, device='cuda:0', dtype=torch.float64)
tensor([ -63.3994, -103.6024,  -65.2674, -149.9997, -107.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2019, device='cuda:0', dtype=torch.float64)
tensor([ -65.1772, -102.9212,  -66.8568, -151.4342, -108.8137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4604, device='cuda:0', dtype=torch.float64)
tensor([ -66.1072, -102.1896,  -68.2042, -152.1396, -109.6706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4339, device='cuda:0', dtype=torch.float64)
tensor([ -66.6462, -101.7802,  -69.4964, -152.6230, -110.0553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1876, device='cuda:0', dtype=torch.float64)
tensor([ -67.2371, -101.5422,  -70.7837, -153.5034, -110.3247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0477, device='cuda:0', dtype=torch.float64)
tensor([ -67.2015, -100.8664,  -71.8511, -153.6579, -109.4730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5355, device='cuda:0', dtype=torch.float64)
tensor([ -67.6387, -100.9261,  -72.7232, -154.3267, -109.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3279, device='cuda:0', dtype=torch.float64)
tensor([ -67.6888, -100.7029,  -73.5471, -154.6161, -108.8360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([ -67.0510, -100.5647,  -73.8397, -154.1926, -107.4927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9383, device='cuda:0', dtype=torch.float64)
tensor([ -66.2157, -100.3837,  -73.9574, -153.6734, -106.1706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2036, device='cuda:0', dtype=torch.float64)
tensor([ -65.3527, -100.5151,  -74.0058, -152.7332, -104.6588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2896, device='cuda:0', dtype=torch.float64)
tensor([ -65.1616, -100.9517,  -74.1462, -152.7346, -104.3499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4329, device='cuda:0', dtype=torch.float64)
tensor([ -65.3515, -101.4657,  -74.5106, -153.3003, -104.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2235, device='cuda:0', dtype=torch.float64)
tensor([ -66.0837, -102.1826,  -74.9485, -154.8602, -105.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3305, device='cuda:0', dtype=torch.float64)
tensor([ -67.2673, -103.0804,  -75.4474, -156.8453, -106.8540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([ -69.3110, -104.0428,  -76.1610, -159.8507, -109.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4450, device='cuda:0', dtype=torch.float64)
tensor([ -71.6228, -105.1325,  -77.1673, -163.1722, -113.3328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3296, device='cuda:0', dtype=torch.float64)
tensor([ -72.9032, -105.9326,  -77.9447, -165.2190, -115.4839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2986, device='cuda:0', dtype=torch.float64)
tensor([ -73.6229, -106.3261,  -78.7487, -166.1714, -116.0821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2940, device='cuda:0', dtype=torch.float64)
tensor([ -73.8342, -107.1341,  -79.3987, -166.8718, -116.4906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2014, device='cuda:0', dtype=torch.float64)
tensor([ -74.1877, -108.5155,  -79.8519, -167.9878, -117.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2763, device='cuda:0', dtype=torch.float64)
tensor([ -74.7897, -110.7286,  -80.0763, -170.0210, -119.9488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3787, device='cuda:0', dtype=torch.float64)
tensor([ -75.4926, -113.0202,  -80.4458, -172.7952, -123.5008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2735, device='cuda:0', dtype=torch.float64)
tensor([ -76.0260, -115.1618,  -80.6783, -175.0993, -126.7116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4596, device='cuda:0', dtype=torch.float64)
tensor([ -76.7285, -116.5043,  -81.1553, -177.5143, -130.5862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1196, device='cuda:0', dtype=torch.float64)
tensor([ -77.5190, -117.7279,  -81.5991, -180.0912, -134.6503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4884, device='cuda:0', dtype=torch.float64)
tensor([ -78.1403, -118.0812,  -82.0149, -182.2547, -137.8256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2184, device='cuda:0', dtype=torch.float64)
tensor([ -78.1125, -118.6808,  -82.3155, -183.5005, -139.1434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3199, device='cuda:0', dtype=torch.float64)
tensor([ -78.0508, -118.7973,  -82.5230, -184.4575, -140.3919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([ -77.8506, -119.1431,  -82.4254, -184.5399, -140.8027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([ -77.6552, -118.6068,  -82.5408, -184.4702, -140.7813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0037, device='cuda:0', dtype=torch.float64)
tensor([ -76.8981, -117.6367,  -82.5735, -183.1217, -138.6982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3781, device='cuda:0', dtype=torch.float64)
tensor([ -74.9624, -115.8405,  -82.4930, -180.1318, -133.6851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3376, device='cuda:0', dtype=torch.float64)
tensor([ -73.5054, -115.1611,  -82.2483, -178.2228, -130.7038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1882, device='cuda:0', dtype=torch.float64)
tensor([ -71.7102, -114.6018,  -82.0815, -176.1826, -127.1658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4671, device='cuda:0', dtype=torch.float64)
tensor([ -71.0129, -114.8726,  -82.0501, -175.8082, -126.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([ -70.6964, -115.6723,  -82.1745, -176.4289, -126.8287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1579, device='cuda:0', dtype=torch.float64)
tensor([ -70.8573, -116.5998,  -82.5084, -178.0756, -128.4075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1587, device='cuda:0', dtype=torch.float64)
tensor([ -71.3262, -117.8883,  -82.7273, -179.9676, -130.2034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2141, device='cuda:0', dtype=torch.float64)
tensor([ -71.8572, -118.9407,  -83.1189, -181.8119, -131.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3207, device='cuda:0', dtype=torch.float64)
tensor([ -73.2622, -119.8251,  -83.8591, -184.9489, -134.6866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1302, device='cuda:0', dtype=torch.float64)
tensor([ -74.5122, -120.5685,  -84.7028, -187.9790, -137.6342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2586, device='cuda:0', dtype=torch.float64)
tensor([ -75.5579, -121.8782,  -85.4052, -190.4840, -140.6252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3066, device='cuda:0', dtype=torch.float64)
tensor([ -76.0482, -122.9840,  -86.1048, -192.4720, -142.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1743, device='cuda:0', dtype=torch.float64)
tensor([ -76.6774, -124.2461,  -86.7597, -194.6689, -144.2669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3196, device='cuda:0', dtype=torch.float64)
tensor([ -77.3210, -125.4314,  -87.4456, -197.1085, -146.2069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3896, device='cuda:0', dtype=torch.float64)
tensor([ -78.3192, -126.9878,  -88.0509, -199.6932, -149.4461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4164, device='cuda:0', dtype=torch.float64)
tensor([ -79.8662, -127.7654,  -89.0132, -202.8431, -153.5182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1240, device='cuda:0', dtype=torch.float64)
tensor([ -82.0940, -128.9020,  -89.9646, -206.4920, -159.5830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([ -84.3367, -130.2377,  -90.9716, -209.8766, -165.6133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3174, device='cuda:0', dtype=torch.float64)
tensor([ -87.7080, -131.8887,  -92.3477, -214.3311, -173.9051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1460, device='cuda:0', dtype=torch.float64)
tensor([ -90.4604, -133.3103,  -93.6675, -218.0002, -180.9836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1987, device='cuda:0', dtype=torch.float64)
tensor([ -92.7486, -134.7790,  -94.9567, -221.2725, -187.5197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([ -95.2747, -137.1271,  -96.2455, -224.9899, -195.6700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0365, device='cuda:0', dtype=torch.float64)
tensor([ -97.0665, -139.2042,  -97.3094, -227.8221, -202.2237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8586, device='cuda:0', dtype=torch.float64)
tensor([ -98.9218, -141.1861,  -98.2658, -230.5304, -208.5335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2273, device='cuda:0', dtype=torch.float64)
tensor([ -99.1355, -142.0770,  -98.7117, -231.0133, -210.0750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2441, device='cuda:0', dtype=torch.float64)
tensor([ -98.5162, -142.8580,  -99.1338, -230.5481, -209.5479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0108, device='cuda:0', dtype=torch.float64)
tensor([ -97.6543, -144.5334,  -99.2110, -230.1945, -209.4976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2038, device='cuda:0', dtype=torch.float64)
tensor([ -95.8282, -145.3856,  -98.9796, -228.5748, -206.2553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3494, device='cuda:0', dtype=torch.float64)
tensor([ -94.7630, -145.6801,  -98.9561, -227.4531, -202.7781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3251, device='cuda:0', dtype=torch.float64)
tensor([ -94.7489, -146.5947,  -99.1216, -227.8200, -201.6073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2475, device='cuda:0', dtype=torch.float64)
tensor([ -93.7382, -146.7256,  -99.1997, -226.5372, -197.7845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2567, device='cuda:0', dtype=torch.float64)
tensor([ -94.1257, -148.3860,  -99.6781, -227.3154, -198.0042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2205, device='cuda:0', dtype=torch.float64)
tensor([ -95.1257, -149.5325, -100.4930, -229.0472, -198.8073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([ -95.8889, -151.0645, -101.1333, -230.5830, -199.3603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2694, device='cuda:0', dtype=torch.float64)
tensor([ -97.6109, -152.7542, -102.3115, -233.5990, -202.1987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0794, device='cuda:0', dtype=torch.float64)
tensor([ -99.9192, -153.3065, -103.8131, -236.5513, -204.9810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1006, device='cuda:0', dtype=torch.float64)
tensor([-102.9942, -154.5955, -105.5392, -240.5009, -210.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4450, device='cuda:0', dtype=torch.float64)
tensor([-106.2997, -155.2581, -107.4312, -244.3942, -215.5010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2070, device='cuda:0', dtype=torch.float64)
tensor([-109.1342, -155.8318, -108.9167, -247.7204, -220.2971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6332, device='cuda:0', dtype=torch.float64)
tensor([-110.7379, -155.7140, -110.3022, -249.9150, -222.3103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1147, device='cuda:0', dtype=torch.float64)
tensor([-112.9837, -155.4339, -111.8749, -252.6744, -225.1337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3056, device='cuda:0', dtype=torch.float64)
tensor([-116.9260, -157.1376, -113.8131, -257.2547, -232.6167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1296, device='cuda:0', dtype=torch.float64)
tensor([-120.8568, -159.4063, -115.7755, -261.9447, -240.3800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1614, device='cuda:0', dtype=torch.float64)
tensor([-124.5231, -163.7411, -117.5206, -266.8628, -249.6276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1448, device='cuda:0', dtype=torch.float64)
tensor([-126.1417, -166.8157, -118.4695, -269.2605, -255.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0221, device='cuda:0', dtype=torch.float64)
tensor([-126.4358, -169.3539, -118.8259, -270.1317, -258.2726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1419, device='cuda:0', dtype=torch.float64)
tensor([-127.7469, -172.9304, -119.3843, -272.1893, -263.7437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0630, device='cuda:0', dtype=torch.float64)
tensor([-127.3107, -174.6816, -119.4426, -272.2281, -265.6621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1755, device='cuda:0', dtype=torch.float64)
tensor([-125.2617, -174.4746, -118.6877, -270.0815, -263.7721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4101, device='cuda:0', dtype=torch.float64)
tensor([-122.6436, -173.5835, -117.5736, -267.0096, -260.6540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-118.9359, -171.3607, -116.2939, -262.6333, -254.7097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1099, device='cuda:0', dtype=torch.float64)
tensor([-114.9054, -168.3574, -114.9300, -257.9462, -247.4519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0323, device='cuda:0', dtype=torch.float64)
tensor([-110.9345, -165.7937, -113.5877, -253.3917, -240.6194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2020, device='cuda:0', dtype=torch.float64)
tensor([-108.1623, -164.5539, -112.6016, -250.5206, -235.8199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0999, device='cuda:0', dtype=torch.float64)
tensor([-105.7000, -163.7760, -111.6160, -247.9780, -231.6072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8727, device='cuda:0', dtype=torch.float64)
tensor([-103.8983, -163.0470, -110.5272, -245.7591, -228.2205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0385, device='cuda:0', dtype=torch.float64)
tensor([-102.7583, -161.9295, -109.9735, -244.4179, -225.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0234, device='cuda:0', dtype=torch.float64)
tensor([-102.1826, -160.5190, -109.5674, -243.4766, -223.3514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2210, device='cuda:0', dtype=torch.float64)
tensor([-100.7106, -158.4679, -108.7998, -241.3476, -219.3550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9975, device='cuda:0', dtype=torch.float64)
tensor([ -99.7697, -156.7298, -108.0326, -240.0101, -216.0988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9265, device='cuda:0', dtype=torch.float64)
tensor([ -99.1956, -155.6338, -107.2114, -238.8599, -213.8267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3847, device='cuda:0', dtype=torch.float64)
tensor([ -98.4027, -155.0528, -106.4314, -238.0067, -211.5868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1034, device='cuda:0', dtype=torch.float64)
tensor([ -96.9172, -153.2999, -105.5035, -235.7608, -206.3752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1548, device='cuda:0', dtype=torch.float64)
tensor([ -95.2601, -150.6824, -104.7721, -233.2618, -199.7812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3219, device='cuda:0', dtype=torch.float64)
tensor([ -95.2149, -148.6643, -104.5047, -232.7039, -196.2896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0617, device='cuda:0', dtype=torch.float64)
tensor([ -95.7982, -146.9409, -104.5198, -233.0930, -195.0235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2240, device='cuda:0', dtype=torch.float64)
tensor([ -96.1708, -145.4187, -104.6718, -233.3775, -194.5549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1416, device='cuda:0', dtype=torch.float64)
tensor([ -97.3772, -144.6072, -105.2745, -235.1639, -196.9221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0681, device='cuda:0', dtype=torch.float64)
tensor([-100.2584, -144.1418, -106.9152, -238.8571, -202.9251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2197, device='cuda:0', dtype=torch.float64)
tensor([-103.3970, -144.3899, -108.8515, -243.0579, -209.8253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0298, device='cuda:0', dtype=torch.float64)
tensor([-107.0918, -145.3686, -111.0799, -248.1683, -217.8182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1699, device='cuda:0', dtype=torch.float64)
tensor([-110.8225, -146.1423, -113.5464, -252.9467, -224.6336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9332, device='cuda:0', dtype=torch.float64)
tensor([-114.3323, -147.5582, -115.4791, -257.5034, -231.2977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0715, device='cuda:0', dtype=torch.float64)
tensor([-116.9626, -148.5731, -116.6853, -260.6105, -235.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0719, device='cuda:0', dtype=torch.float64)
tensor([-118.6307, -150.5697, -117.8996, -263.3814, -239.8135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1740, device='cuda:0', dtype=torch.float64)
tensor([-121.0562, -153.1290, -119.7249, -267.3629, -245.5612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1569, device='cuda:0', dtype=torch.float64)
tensor([-121.8312, -155.8641, -120.8625, -269.2260, -248.9001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1243, device='cuda:0', dtype=torch.float64)
tensor([-121.8200, -158.2842, -121.5782, -270.1071, -250.5762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9438, device='cuda:0', dtype=torch.float64)
tensor([-122.2393, -160.9681, -121.9860, -270.9594, -253.1621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1307, device='cuda:0', dtype=torch.float64)
tensor([-122.6794, -163.9721, -122.3070, -272.0862, -255.9915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-122.1678, -167.3038, -122.0273, -271.9413, -257.3449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2460, device='cuda:0', dtype=torch.float64)
tensor([-120.6073, -169.2502, -120.9417, -270.0602, -255.3405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([-118.5537, -171.1194, -119.8695, -267.6780, -252.3695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0198, device='cuda:0', dtype=torch.float64)
tensor([-116.5438, -172.4409, -119.2368, -265.3648, -249.2551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2008, device='cuda:0', dtype=torch.float64)
tensor([-116.3499, -174.3553, -119.7576, -265.2299, -249.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2686, device='cuda:0', dtype=torch.float64)
tensor([-115.0664, -174.1278, -119.5062, -264.2520, -245.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9560, device='cuda:0', dtype=torch.float64)
tensor([-114.3423, -173.9430, -119.1381, -263.5521, -242.6182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1083, device='cuda:0', dtype=torch.float64)
tensor([-114.0821, -174.6215, -119.0931, -263.3978, -241.7747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2253, device='cuda:0', dtype=torch.float64)
tensor([-114.8856, -175.7417, -120.0012, -264.2514, -243.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1558, device='cuda:0', dtype=torch.float64)
tensor([-116.5489, -177.3699, -121.5913, -265.7080, -246.6785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-119.0040, -179.8830, -123.5420, -267.1852, -251.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0985, device='cuda:0', dtype=torch.float64)
tensor([-121.6165, -182.5965, -125.7762, -268.9762, -255.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2521, device='cuda:0', dtype=torch.float64)
tensor([-124.3640, -184.9056, -128.5908, -270.8132, -259.0043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9591, device='cuda:0', dtype=torch.float64)
tensor([-126.5890, -186.9963, -131.4662, -272.1979, -261.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0621, device='cuda:0', dtype=torch.float64)
tensor([-128.6723, -189.8794, -134.5488, -273.3040, -265.2132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2910, device='cuda:0', dtype=torch.float64)
tensor([-131.5184, -194.7910, -137.9371, -274.3623, -270.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0555, device='cuda:0', dtype=torch.float64)
tensor([-136.5741, -201.7391, -143.4685, -277.3272, -279.6967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0478, device='cuda:0', dtype=torch.float64)
tensor([-139.2664, -205.8357, -146.6598, -277.7246, -283.8620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0236, device='cuda:0', dtype=torch.float64)
tensor([-140.2695, -207.1604, -148.1766, -277.4772, -284.2840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0776, device='cuda:0', dtype=torch.float64)
tensor([-143.0506, -212.1837, -151.8651, -278.2727, -288.6891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([-144.7775, -215.2804, -153.9112, -278.5537, -290.7819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3939, device='cuda:0', dtype=torch.float64)
tensor([-147.1765, -218.6309, -156.8579, -278.8770, -293.4568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1532, device='cuda:0', dtype=torch.float64)
tensor([-149.6725, -221.9284, -160.2805, -279.6126, -296.2422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4130, device='cuda:0', dtype=torch.float64)
tensor([-153.5412, -223.9812, -164.5422, -281.8273, -299.2204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0072, device='cuda:0', dtype=torch.float64)
tensor([-155.2651, -224.3165, -166.8063, -282.4850, -299.0537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2114, device='cuda:0', dtype=torch.float64)
tensor([-154.6999, -223.5816, -167.5779, -281.3313, -296.0766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2658, device='cuda:0', dtype=torch.float64)
tensor([-151.4964, -219.9575, -166.2542, -278.1444, -289.2907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0371, device='cuda:0', dtype=torch.float64)
tensor([-149.7327, -218.4110, -166.4787, -276.3891, -284.8317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2015, device='cuda:0', dtype=torch.float64)
tensor([-146.9479, -216.1123, -165.7287, -273.9871, -278.3972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-146.1183, -216.8916, -166.1663, -273.1339, -275.8729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0718, device='cuda:0', dtype=torch.float64)
tensor([-146.2366, -218.9082, -167.1968, -273.3926, -275.6074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8936, device='cuda:0', dtype=torch.float64)
tensor([-146.9446, -220.7070, -168.1331, -274.2586, -275.4588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9660, device='cuda:0', dtype=torch.float64)
tensor([-147.4374, -221.9753, -168.7386, -275.1737, -274.8531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9710, device='cuda:0', dtype=torch.float64)
tensor([-150.9355, -226.5012, -171.2172, -279.5256, -279.5423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9191, device='cuda:0', dtype=torch.float64)
tensor([-154.7384, -230.2165, -173.8616, -284.2721, -284.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9229, device='cuda:0', dtype=torch.float64)
tensor([-158.1072, -232.9982, -176.0584, -288.7766, -287.4104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9779, device='cuda:0', dtype=torch.float64)
tensor([-161.7982, -235.7642, -178.7946, -293.6433, -291.0568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9808, device='cuda:0', dtype=torch.float64)
tensor([-165.3507, -239.0696, -182.0137, -298.6578, -294.4575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1110, device='cuda:0', dtype=torch.float64)
tensor([-171.0821, -244.2105, -187.7891, -306.7448, -300.6587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9705, device='cuda:0', dtype=torch.float64)
tensor([-177.5187, -249.9897, -194.5200, -315.7025, -307.5875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9417, device='cuda:0', dtype=torch.float64)
tensor([-182.9525, -254.2170, -200.4172, -323.3761, -312.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0786, device='cuda:0', dtype=torch.float64)
tensor([-185.2376, -254.9907, -203.2449, -326.8404, -313.8324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-187.2362, -256.0503, -205.6833, -329.8470, -313.9555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9367, device='cuda:0', dtype=torch.float64)
tensor([-189.5805, -256.6855, -208.0520, -332.8438, -314.1990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9413, device='cuda:0', dtype=torch.float64)
tensor([-192.6136, -258.0546, -211.0423, -336.6473, -315.2508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9357, device='cuda:0', dtype=torch.float64)
tensor([-194.8037, -258.5203, -213.2717, -339.5168, -315.6324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0797, device='cuda:0', dtype=torch.float64)
tensor([-197.8023, -259.5022, -216.5468, -343.6462, -316.8065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([-201.0696, -261.0487, -219.7358, -347.3277, -317.4895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1759, device='cuda:0', dtype=torch.float64)
tensor([-205.9307, -265.4577, -223.5533, -351.3895, -319.2615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9477, device='cuda:0', dtype=torch.float64)
tensor([-207.8968, -268.7878, -224.8929, -351.6050, -317.9990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8885, device='cuda:0', dtype=torch.float64)
tensor([-212.2645, -276.9730, -227.4060, -352.9058, -318.2724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9963, device='cuda:0', dtype=torch.float64)
tensor([-215.9778, -284.0178, -229.0430, -353.2110, -316.9509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9477, device='cuda:0', dtype=torch.float64)
tensor([-217.0057, -286.3552, -228.5598, -351.5344, -313.3535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9010, device='cuda:0', dtype=torch.float64)
tensor([-216.3918, -285.4313, -227.0149, -348.6716, -308.3070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9663, device='cuda:0', dtype=torch.float64)
tensor([-214.9684, -286.5751, -224.7600, -344.9561, -303.6363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1169, device='cuda:0', dtype=torch.float64)
tensor([-212.1175, -282.4520, -221.4913, -340.3712, -297.5937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9657, device='cuda:0', dtype=torch.float64)
tensor([-208.4724, -276.3911, -218.0696, -335.5562, -291.5545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8755, device='cuda:0', dtype=torch.float64)
tensor([-205.8889, -271.4189, -215.5290, -331.9695, -286.5169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([-204.1375, -267.9197, -213.4868, -328.9803, -282.3030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2187, device='cuda:0', dtype=torch.float64)
tensor([-209.6422, -273.8915, -215.6553, -330.7733, -282.8608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9807, device='cuda:0', dtype=torch.float64)
tensor([-220.3237, -285.5691, -220.0297, -335.7051, -286.3217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0684, device='cuda:0', dtype=torch.float64)
tensor([-231.2758, -296.4600, -223.6492, -340.2790, -289.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8877, device='cuda:0', dtype=torch.float64)
tensor([-238.2661, -300.7846, -225.0919, -342.1941, -290.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-243.0239, -301.7789, -225.7784, -342.9615, -290.1733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8869, device='cuda:0', dtype=torch.float64)
tensor([-246.1125, -299.7584, -226.6245, -343.8046, -289.3811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9591, device='cuda:0', dtype=torch.float64)
tensor([-248.2378, -292.9455, -227.8461, -345.8268, -288.4088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9309, device='cuda:0', dtype=torch.float64)
tensor([-249.8110, -284.6367, -229.6419, -348.5746, -287.7437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8665, device='cuda:0', dtype=torch.float64)
tensor([-253.3317, -278.4734, -231.8800, -352.4410, -288.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7892, device='cuda:0', dtype=torch.float64)
tensor([-258.3916, -274.6261, -233.7039, -356.6023, -289.4916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8480, device='cuda:0', dtype=torch.float64)
tensor([-259.6296, -269.5618, -234.2586, -358.3092, -288.9641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([-259.9276, -265.4555, -234.4532, -359.4534, -288.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9473, device='cuda:0', dtype=torch.float64)
tensor([-259.7351, -263.3995, -234.2259, -359.5680, -287.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8709, device='cuda:0', dtype=torch.float64)
tensor([-261.3739, -264.8635, -234.0238, -359.8372, -286.5286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9511, device='cuda:0', dtype=torch.float64)
tensor([-271.0474, -272.3696, -235.4848, -363.8136, -289.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8832, device='cuda:0', dtype=torch.float64)
tensor([-281.2295, -279.1979, -236.6981, -367.5781, -292.2448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8727, device='cuda:0', dtype=torch.float64)
tensor([-291.0684, -285.1227, -237.6253, -370.9344, -294.3687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0767, device='cuda:0', dtype=torch.float64)
tensor([-303.0342, -296.0868, -237.9147, -372.9765, -297.0141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([-323.2197, -312.7144, -239.3495, -376.5727, -301.7225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8117, device='cuda:0', dtype=torch.float64)
tensor([-338.4863, -327.5880, -238.4681, -377.2165, -303.5927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9058, device='cuda:0', dtype=torch.float64)
tensor([-354.8294, -343.1371, -237.4957, -378.3440, -305.6534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-372.2556, -358.3283, -235.9809, -379.4764, -307.5341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9312, device='cuda:0', dtype=torch.float64)
tensor([-391.7319, -371.0051, -235.7020, -382.2808, -310.1571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8198, device='cuda:0', dtype=torch.float64)
tensor([-407.0045, -378.5457, -235.7478, -385.0450, -311.8906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9416, device='cuda:0', dtype=torch.float64)
tensor([-426.9122, -387.1153, -236.5422, -389.9980, -314.9067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7608, device='cuda:0', dtype=torch.float64)
tensor([-443.7798, -391.1629, -238.3437, -395.6707, -317.5446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9432, device='cuda:0', dtype=torch.float64)
tensor([-453.2249, -391.8125, -239.2456, -399.1934, -317.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8739, device='cuda:0', dtype=torch.float64)
tensor([-459.8071, -391.6314, -239.8304, -401.6593, -317.1102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8715, device='cuda:0', dtype=torch.float64)
tensor([-457.7223, -388.0059, -239.6155, -401.6641, -313.9176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1815, device='cuda:0', dtype=torch.float64)
tensor([-447.5138, -381.0037, -239.4438, -400.2247, -309.1569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8534, device='cuda:0', dtype=torch.float64)
tensor([-439.7302, -375.2226, -239.8926, -399.9404, -305.6735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8935, device='cuda:0', dtype=torch.float64)
tensor([-434.7146, -370.7184, -240.1854, -399.9516, -302.7687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8570, device='cuda:0', dtype=torch.float64)
tensor([-429.2259, -365.6689, -240.1857, -399.4128, -299.5997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2101, device='cuda:0', dtype=torch.float64)
tensor([-414.6707, -354.1378, -240.5040, -396.7723, -294.6477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7588, device='cuda:0', dtype=torch.float64)
tensor([-410.2929, -350.1369, -241.0526, -396.7308, -293.0383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7488, device='cuda:0', dtype=torch.float64)
tensor([-410.0576, -347.9347, -242.2111, -398.7064, -292.9425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8301, device='cuda:0', dtype=torch.float64)
tensor([-410.4114, -346.5530, -243.6351, -400.9481, -293.3009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8949, device='cuda:0', dtype=torch.float64)
tensor([-414.1841, -347.1134, -245.3521, -404.4855, -295.1307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8480, device='cuda:0', dtype=torch.float64)
tensor([-421.1548, -350.4345, -247.0172, -408.8587, -298.0063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7867, device='cuda:0', dtype=torch.float64)
tensor([-422.9369, -351.9076, -247.3353, -410.0231, -298.2211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7611, device='cuda:0', dtype=torch.float64)
tensor([-432.2205, -357.9443, -248.4790, -414.4907, -301.5484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7723, device='cuda:0', dtype=torch.float64)
tensor([-442.5618, -363.2427, -249.2059, -418.6458, -304.3860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7105, device='cuda:0', dtype=torch.float64)
tensor([-457.8387, -369.4743, -249.8221, -423.2732, -307.8468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8384, device='cuda:0', dtype=torch.float64)
tensor([-476.2577, -376.2944, -249.7479, -427.5415, -311.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8437, device='cuda:0', dtype=torch.float64)
tensor([-499.9490, -385.3477, -249.8363, -432.7859, -315.0595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5639, device='cuda:0', dtype=torch.float64)
tensor([-521.7070, -393.1443, -249.5341, -437.7162, -318.1348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8532, device='cuda:0', dtype=torch.float64)
tensor([-538.5288, -400.5387, -247.6599, -439.7345, -318.8895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8402, device='cuda:0', dtype=torch.float64)
tensor([-554.1888, -407.3711, -246.4675, -442.1079, -319.5890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7677, device='cuda:0', dtype=torch.float64)
tensor([-565.8347, -412.7979, -245.5478, -443.6967, -319.6049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7549, device='cuda:0', dtype=torch.float64)
tensor([-573.1792, -415.6270, -245.1734, -445.3932, -319.2615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7677, device='cuda:0', dtype=torch.float64)
tensor([-571.1185, -414.6653, -244.8380, -445.5811, -317.5718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8442, device='cuda:0', dtype=torch.float64)
tensor([-563.9867, -410.7444, -245.5597, -446.4028, -316.3107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9297, device='cuda:0', dtype=torch.float64)
tensor([-561.3038, -408.6152, -246.1462, -447.6839, -315.5998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6829, device='cuda:0', dtype=torch.float64)
tensor([-561.3810, -407.7558, -245.9475, -448.3979, -314.4242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-559.1424, -405.4723, -246.6030, -450.0942, -313.8677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6603, device='cuda:0', dtype=torch.float64)
tensor([-557.4296, -403.7021, -246.3391, -450.5955, -312.2509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8520, device='cuda:0', dtype=torch.float64)
tensor([-557.3025, -402.0444, -245.9693, -451.1157, -310.3894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6513, device='cuda:0', dtype=torch.float64)
tensor([-556.7613, -400.3692, -245.2117, -451.2840, -307.8100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7274, device='cuda:0', dtype=torch.float64)
tensor([-559.0018, -398.9050, -244.6448, -452.0745, -305.6920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7459, device='cuda:0', dtype=torch.float64)
tensor([-567.5345, -398.2318, -245.3714, -455.8979, -306.0845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8171, device='cuda:0', dtype=torch.float64)
tensor([-580.3365, -399.0891, -245.8323, -460.4904, -307.0613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7846, device='cuda:0', dtype=torch.float64)
tensor([-593.8438, -400.1559, -246.4514, -465.3543, -308.2085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9212, device='cuda:0', dtype=torch.float64)
tensor([-604.2754, -400.7412, -247.2472, -469.5120, -308.7565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9737, device='cuda:0', dtype=torch.float64)
tensor([-608.2470, -399.0116, -247.8025, -472.3821, -308.1072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7808, device='cuda:0', dtype=torch.float64)
tensor([-614.4948, -398.5945, -248.6118, -475.7355, -308.1236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7820, device='cuda:0', dtype=torch.float64)
tensor([-616.0067, -396.7288, -248.3839, -476.7973, -306.4077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-610.7428, -391.8486, -247.6051, -476.3861, -303.2584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6820, device='cuda:0', dtype=torch.float64)
tensor([-605.2634, -386.5725, -248.2009, -477.8684, -301.3964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6258, device='cuda:0', dtype=torch.float64)
tensor([-599.1551, -381.5956, -248.6741, -478.7691, -298.9910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7975, device='cuda:0', dtype=torch.float64)
tensor([-591.0205, -377.3256, -248.4552, -478.4596, -295.9018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6515, device='cuda:0', dtype=torch.float64)
tensor([-584.7719, -374.2507, -248.0562, -477.8904, -292.8996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.3496, device='cuda:0', dtype=torch.float64)
tensor([-578.1041, -372.0142, -246.2333, -475.8749, -288.7800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6935, device='cuda:0', dtype=torch.float64)
tensor([-573.4306, -372.0260, -242.6764, -471.6777, -283.5093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6451, device='cuda:0', dtype=torch.float64)
tensor([-578.8169, -373.7463, -240.1691, -471.1535, -281.1218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8399, device='cuda:0', dtype=torch.float64)
tensor([-593.4626, -377.2008, -239.7856, -474.3760, -281.6867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6245, device='cuda:0', dtype=torch.float64)
tensor([-606.6505, -378.7349, -241.1093, -478.9503, -283.2310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7859, device='cuda:0', dtype=torch.float64)
tensor([-624.6858, -380.8743, -243.3920, -485.2450, -285.9441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6246, device='cuda:0', dtype=torch.float64)
tensor([-640.0213, -382.8237, -245.7885, -491.1435, -288.7323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-653.7575, -384.0848, -249.1002, -497.7316, -292.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6262, device='cuda:0', dtype=torch.float64)
tensor([-666.2882, -383.4239, -254.5457, -507.1534, -298.0492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6862, device='cuda:0', dtype=torch.float64)
tensor([-673.7857, -380.7762, -259.9954, -516.2148, -303.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6426, device='cuda:0', dtype=torch.float64)
tensor([-673.0456, -376.7259, -264.1673, -522.0326, -305.7170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6033, device='cuda:0', dtype=torch.float64)
tensor([-663.8488, -371.7109, -265.8231, -522.7407, -304.7273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5668, device='cuda:0', dtype=torch.float64)
tensor([-654.4504, -366.9068, -267.7105, -523.2292, -303.8809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5581, device='cuda:0', dtype=torch.float64)
tensor([-648.5680, -364.1856, -267.8935, -521.9605, -301.8896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5584, device='cuda:0', dtype=torch.float64)
tensor([-645.2335, -363.1833, -267.0084, -519.5620, -299.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6978, device='cuda:0', dtype=torch.float64)
tensor([-639.4770, -362.1949, -265.3119, -515.6389, -295.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7654, device='cuda:0', dtype=torch.float64)
tensor([-633.9573, -362.0412, -262.0836, -509.9386, -290.5021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7624, device='cuda:0', dtype=torch.float64)
tensor([-636.6938, -363.4339, -260.1500, -507.5865, -287.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([-643.4331, -366.3018, -258.4453, -506.3391, -285.5141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5989, device='cuda:0', dtype=torch.float64)
tensor([-650.0290, -369.1651, -256.8172, -504.8529, -283.5965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7070, device='cuda:0', dtype=torch.float64)
tensor([-664.4570, -372.3962, -258.7293, -509.0780, -286.0684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7462, device='cuda:0', dtype=torch.float64)
tensor([-679.5781, -373.2989, -263.0961, -516.8393, -290.7235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6561, device='cuda:0', dtype=torch.float64)
tensor([-692.4635, -373.0608, -267.5941, -524.6276, -295.6058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5550, device='cuda:0', dtype=torch.float64)
tensor([-703.4259, -371.7050, -272.1752, -533.0620, -301.3968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6631, device='cuda:0', dtype=torch.float64)
tensor([-708.5242, -368.3787, -275.9942, -541.2080, -306.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5925, device='cuda:0', dtype=torch.float64)
tensor([-711.6316, -366.1061, -278.5777, -547.0016, -310.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6916, device='cuda:0', dtype=torch.float64)
tensor([-710.4190, -363.4305, -280.1481, -551.0905, -312.5667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5927, device='cuda:0', dtype=torch.float64)
tensor([-710.6183, -361.0289, -281.9150, -555.7935, -315.1195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7162, device='cuda:0', dtype=torch.float64)
tensor([-713.7314, -358.5166, -284.6886, -563.5971, -320.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5599, device='cuda:0', dtype=torch.float64)
tensor([-713.0008, -356.1543, -287.1535, -571.4355, -324.5920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6230, device='cuda:0', dtype=torch.float64)
tensor([-713.7428, -355.4122, -290.5006, -581.4541, -331.3952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5964, device='cuda:0', dtype=torch.float64)
tensor([-712.1331, -356.4052, -294.7850, -591.6771, -337.9001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6121, device='cuda:0', dtype=torch.float64)
tensor([-709.2376, -357.8762, -299.2673, -600.7108, -343.3955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5291, device='cuda:0', dtype=torch.float64)
tensor([-706.1794, -358.4898, -302.7703, -607.7122, -346.6885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5515, device='cuda:0', dtype=torch.float64)
tensor([-701.8365, -358.0594, -303.9356, -610.3038, -346.6025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6540, device='cuda:0', dtype=torch.float64)
tensor([-696.6422, -355.8943, -301.7615, -607.6599, -342.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5756, device='cuda:0', dtype=torch.float64)
tensor([-696.0982, -352.9695, -298.2967, -604.2383, -338.0368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5850, device='cuda:0', dtype=torch.float64)
tensor([-695.2751, -349.6790, -295.1226, -600.4643, -333.6242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6181, device='cuda:0', dtype=torch.float64)
tensor([-701.8539, -346.7475, -292.4805, -598.7105, -331.7555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5851, device='cuda:0', dtype=torch.float64)
tensor([-705.9377, -343.4548, -290.2711, -595.9140, -328.6172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6725, device='cuda:0', dtype=torch.float64)
tensor([-705.6296, -339.8797, -287.9057, -590.5549, -323.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5087, device='cuda:0', dtype=torch.float64)
tensor([-707.3944, -337.1351, -285.9068, -586.2677, -320.6444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6444, device='cuda:0', dtype=torch.float64)
tensor([-706.5977, -335.6197, -283.9255, -581.4386, -317.1775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6368, device='cuda:0', dtype=torch.float64)
tensor([-700.2440, -334.3467, -281.6264, -574.8126, -311.1730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2223, device='cuda:0', dtype=torch.float64)
tensor([-692.6217, -333.5294, -280.0461, -569.9536, -306.1387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5244, device='cuda:0', dtype=torch.float64)
tensor([-683.8722, -332.5272, -278.5912, -565.1434, -300.7448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5360, device='cuda:0', dtype=torch.float64)
tensor([-678.4207, -332.4923, -278.4626, -564.1449, -299.2519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4618, device='cuda:0', dtype=torch.float64)
tensor([-673.9686, -332.5267, -278.4886, -563.4593, -298.2495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5368, device='cuda:0', dtype=torch.float64)
tensor([-669.7205, -333.5493, -278.7677, -562.7683, -297.5338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5759, device='cuda:0', dtype=torch.float64)
tensor([-667.5325, -334.2044, -279.4493, -563.3907, -297.8181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5238, device='cuda:0', dtype=torch.float64)
tensor([-661.7655, -334.2397, -279.3131, -561.8387, -296.0126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0489, device='cuda:0', dtype=torch.float64)
tensor([-657.5951, -335.4378, -280.6140, -563.4447, -296.8143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6004, device='cuda:0', dtype=torch.float64)
tensor([-652.2455, -336.9051, -282.6366, -566.6920, -298.2815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5305, device='cuda:0', dtype=torch.float64)
tensor([-652.7310, -338.7682, -285.5492, -572.7155, -302.4946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5828, device='cuda:0', dtype=torch.float64)
tensor([-653.3448, -340.7456, -288.2301, -577.6520, -306.3438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8467, device='cuda:0', dtype=torch.float64)
tensor([-652.5334, -342.7025, -290.2121, -580.8836, -309.1562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5372, device='cuda:0', dtype=torch.float64)
tensor([-651.7717, -343.4225, -291.7733, -583.2956, -311.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6248, device='cuda:0', dtype=torch.float64)
tensor([-655.9849, -344.1980, -294.3345, -588.1247, -316.6377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4935, device='cuda:0', dtype=torch.float64)
tensor([-660.6643, -344.4145, -296.5052, -592.4177, -321.6882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5200, device='cuda:0', dtype=torch.float64)
tensor([-667.2857, -343.6859, -297.3456, -595.0101, -325.9889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5004, device='cuda:0', dtype=torch.float64)
tensor([-675.2469, -342.1021, -297.6483, -596.8994, -330.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4627, device='cuda:0', dtype=torch.float64)
tensor([-681.2189, -339.3947, -296.6759, -596.2693, -331.5179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5586, device='cuda:0', dtype=torch.float64)
tensor([-686.9968, -335.1511, -294.0597, -592.4650, -329.9751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8636, device='cuda:0', dtype=torch.float64)
tensor([-686.7754, -331.5905, -291.6393, -587.5008, -326.2465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4354, device='cuda:0', dtype=torch.float64)
tensor([-688.6211, -328.6893, -289.5856, -583.6518, -324.4773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4878, device='cuda:0', dtype=torch.float64)
tensor([-690.3784, -326.3313, -287.8805, -580.9427, -324.0332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4216, device='cuda:0', dtype=torch.float64)
tensor([-687.2975, -324.2572, -285.5442, -575.6778, -320.2294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4611, device='cuda:0', dtype=torch.float64)
tensor([-680.2286, -322.2829, -282.8474, -568.8187, -314.1197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5270, device='cuda:0', dtype=torch.float64)
tensor([-671.4755, -320.6630, -280.2234, -561.7640, -307.7949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5344, device='cuda:0', dtype=torch.float64)
tensor([-664.8610, -319.4446, -278.1334, -556.0223, -303.3697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4969, device='cuda:0', dtype=torch.float64)
tensor([-657.8638, -318.4679, -276.4386, -550.6924, -299.1401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4686, device='cuda:0', dtype=torch.float64)
tensor([-654.8163, -317.5962, -274.9057, -546.4270, -296.7863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4137, device='cuda:0', dtype=torch.float64)
tensor([-650.7949, -316.9235, -274.0769, -543.5343, -295.2276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4319, device='cuda:0', dtype=torch.float64)
tensor([-645.2588, -315.9981, -273.2590, -540.2101, -293.3521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5504, device='cuda:0', dtype=torch.float64)
tensor([-647.0984, -315.4420, -273.9148, -541.5852, -296.5839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5824, device='cuda:0', dtype=torch.float64)
tensor([-647.2940, -315.7086, -275.0037, -543.3350, -300.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-647.9472, -316.4589, -276.1291, -545.6746, -304.7311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5651, device='cuda:0', dtype=torch.float64)
tensor([-648.0084, -317.7244, -277.3910, -547.9286, -309.4237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4734, device='cuda:0', dtype=torch.float64)
tensor([-652.2513, -319.0015, -278.8042, -552.0524, -316.8870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4686, device='cuda:0', dtype=torch.float64)
tensor([-653.7805, -319.9622, -279.7894, -554.4606, -321.8670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5643, device='cuda:0', dtype=torch.float64)
tensor([-653.7378, -320.2980, -280.1966, -555.2483, -324.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4793, device='cuda:0', dtype=torch.float64)
tensor([-651.7065, -319.4638, -279.9361, -553.7451, -325.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8437, device='cuda:0', dtype=torch.float64)
tensor([-652.9329, -318.3637, -279.4266, -553.4145, -326.7790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5146, device='cuda:0', dtype=torch.float64)
tensor([-652.7402, -316.9644, -278.2046, -550.6057, -325.7299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6313, device='cuda:0', dtype=torch.float64)
tensor([-652.2901, -315.1038, -276.8924, -547.0288, -323.8213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4730, device='cuda:0', dtype=torch.float64)
tensor([-653.5793, -313.5142, -276.3414, -545.8751, -324.1939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4003, device='cuda:0', dtype=torch.float64)
tensor([-655.8267, -312.0270, -275.8707, -545.2665, -325.2312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4502, device='cuda:0', dtype=torch.float64)
tensor([-656.3966, -310.5039, -275.3167, -543.6056, -325.1118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4547, device='cuda:0', dtype=torch.float64)
tensor([-653.0605, -308.7209, -274.5717, -539.7105, -321.8844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5590, device='cuda:0', dtype=torch.float64)
tensor([-650.8398, -307.3311, -274.0406, -536.8468, -319.8424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9628, device='cuda:0', dtype=torch.float64)
tensor([-645.1676, -305.7591, -273.5146, -532.7878, -315.4518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4534, device='cuda:0', dtype=torch.float64)
tensor([-637.6147, -304.2633, -273.2415, -528.5385, -310.4452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4433, device='cuda:0', dtype=torch.float64)
tensor([-635.6031, -303.4051, -273.3382, -527.8048, -309.9812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4554, device='cuda:0', dtype=torch.float64)
tensor([-632.9225, -302.3189, -273.8469, -527.7796, -309.6095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3684, device='cuda:0', dtype=torch.float64)
tensor([-629.1356, -301.2702, -273.9574, -526.0152, -307.4425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4902, device='cuda:0', dtype=torch.float64)
tensor([-621.9208, -299.9277, -274.4628, -523.5838, -303.6745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7134, device='cuda:0', dtype=torch.float64)
tensor([-611.4952, -298.4404, -275.7400, -521.3661, -299.1005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5568, device='cuda:0', dtype=torch.float64)
tensor([-602.0766, -297.1768, -276.7746, -517.8633, -294.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4535, device='cuda:0', dtype=torch.float64)
tensor([-594.1719, -296.0677, -278.1357, -516.6430, -291.2405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5497, device='cuda:0', dtype=torch.float64)
tensor([-590.8594, -294.7801, -279.3670, -517.6981, -291.2478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4443, device='cuda:0', dtype=torch.float64)
tensor([-588.1331, -293.5324, -280.6272, -519.1144, -291.7053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4585, device='cuda:0', dtype=torch.float64)
tensor([-585.2213, -292.6655, -282.0490, -521.3433, -293.3968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4190, device='cuda:0', dtype=torch.float64)
tensor([-586.3320, -292.1152, -283.3928, -525.7155, -297.7139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4477, device='cuda:0', dtype=torch.float64)
tensor([-584.5107, -291.1564, -283.9365, -526.3264, -298.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4004, device='cuda:0', dtype=torch.float64)
tensor([-580.5014, -290.0903, -284.2509, -525.2660, -298.6151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3962, device='cuda:0', dtype=torch.float64)
tensor([-580.4713, -288.8907, -283.9021, -524.2426, -298.7472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3322, device='cuda:0', dtype=torch.float64)
tensor([-582.8018, -287.3173, -282.8883, -522.4113, -298.7439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3605, device='cuda:0', dtype=torch.float64)
tensor([-586.8458, -285.5960, -280.8482, -518.3845, -297.4232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4864, device='cuda:0', dtype=torch.float64)
tensor([-591.9750, -283.6914, -278.6996, -514.1174, -296.5961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4650, device='cuda:0', dtype=torch.float64)
tensor([-600.9652, -282.3188, -276.6021, -512.5344, -298.5416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4747, device='cuda:0', dtype=torch.float64)
tensor([-606.6283, -281.4640, -275.1379, -510.4460, -299.5218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3444, device='cuda:0', dtype=torch.float64)
tensor([-613.0408, -281.1921, -274.0924, -509.5221, -302.0202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4214, device='cuda:0', dtype=torch.float64)
tensor([-616.9663, -281.1103, -273.3585, -508.1433, -303.7315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7776, device='cuda:0', dtype=torch.float64)
tensor([-615.4177, -280.6866, -273.1608, -505.7862, -303.0939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3578, device='cuda:0', dtype=torch.float64)
tensor([-613.1068, -280.4343, -273.1760, -503.9270, -302.1424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4303, device='cuda:0', dtype=torch.float64)
tensor([-609.5124, -280.1537, -273.3748, -502.8110, -301.0353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3435, device='cuda:0', dtype=torch.float64)
tensor([-605.3646, -279.8738, -273.8057, -501.7471, -299.9895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3739, device='cuda:0', dtype=torch.float64)
tensor([-600.5035, -279.3690, -273.9727, -499.9584, -298.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5325, device='cuda:0', dtype=torch.float64)
tensor([-593.3625, -278.5351, -274.2250, -497.1870, -295.1764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4259, device='cuda:0', dtype=torch.float64)
tensor([-589.3401, -277.5564, -274.2960, -495.7900, -293.9091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3946, device='cuda:0', dtype=torch.float64)
tensor([-588.6272, -276.8616, -274.0531, -495.0261, -293.7254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3679, device='cuda:0', dtype=torch.float64)
tensor([-587.4549, -276.2457, -273.8936, -494.2668, -293.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3676, device='cuda:0', dtype=torch.float64)
tensor([-586.8892, -275.7476, -273.7280, -493.7297, -293.2358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4856, device='cuda:0', dtype=torch.float64)
tensor([-585.4543, -275.0095, -273.6060, -493.3186, -292.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4531, device='cuda:0', dtype=torch.float64)
tensor([-583.7082, -274.2627, -273.4354, -492.1105, -292.0250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4240, device='cuda:0', dtype=torch.float64)
tensor([-581.8352, -273.4447, -273.2410, -491.2779, -291.5559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4270, device='cuda:0', dtype=torch.float64)
tensor([-576.7879, -272.6157, -273.3030, -489.7986, -289.8667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3644, device='cuda:0', dtype=torch.float64)
tensor([-569.6266, -271.6556, -273.7298, -489.1039, -288.3624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4717, device='cuda:0', dtype=torch.float64)
tensor([-565.9280, -270.9552, -274.1120, -489.8689, -288.4439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3755, device='cuda:0', dtype=torch.float64)
tensor([-562.5972, -270.1203, -274.3229, -489.9179, -287.9045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3707, device='cuda:0', dtype=torch.float64)
tensor([-559.3947, -269.1510, -274.0168, -487.6525, -285.8322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4004, device='cuda:0', dtype=torch.float64)
tensor([-558.9792, -268.0340, -273.1708, -484.3858, -283.8563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4253, device='cuda:0', dtype=torch.float64)
tensor([-562.0169, -267.2343, -272.1558, -481.8233, -283.1512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3479, device='cuda:0', dtype=torch.float64)
tensor([-563.0644, -266.5438, -271.2994, -478.2863, -281.2322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3857, device='cuda:0', dtype=torch.float64)
tensor([-564.9481, -265.8792, -270.6939, -476.9818, -280.9611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3367, device='cuda:0', dtype=torch.float64)
tensor([-567.2146, -265.1336, -269.9924, -475.5030, -280.8550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4216, device='cuda:0', dtype=torch.float64)
tensor([-568.3437, -264.5872, -269.6738, -475.0241, -281.3121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3574, device='cuda:0', dtype=torch.float64)
tensor([-569.9153, -263.9794, -269.3435, -474.8927, -282.3666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4201, device='cuda:0', dtype=torch.float64)
tensor([-571.2366, -263.3010, -269.1540, -475.1092, -283.8733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3566, device='cuda:0', dtype=torch.float64)
tensor([-572.3485, -262.7855, -269.0699, -475.4321, -285.4804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3762, device='cuda:0', dtype=torch.float64)
tensor([-571.9910, -262.2122, -268.9070, -474.7959, -286.0447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4347, device='cuda:0', dtype=torch.float64)
tensor([-572.6619, -261.7791, -268.6600, -473.6785, -286.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4043, device='cuda:0', dtype=torch.float64)
tensor([-571.9568, -261.2354, -268.5025, -472.7068, -286.6461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4214, device='cuda:0', dtype=torch.float64)
tensor([-572.4290, -260.6913, -268.1044, -471.3082, -287.0000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3053, device='cuda:0', dtype=torch.float64)
tensor([-573.3339, -260.1641, -267.6032, -470.3450, -287.6457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3342, device='cuda:0', dtype=torch.float64)
tensor([-573.9495, -259.8585, -267.0776, -468.8956, -287.7137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3927, device='cuda:0', dtype=torch.float64)
tensor([-572.6666, -259.5364, -266.8987, -467.9792, -287.4527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4462, device='cuda:0', dtype=torch.float64)
tensor([-570.1455, -259.3682, -266.9562, -467.1043, -286.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3692, device='cuda:0', dtype=torch.float64)
tensor([-567.1399, -259.2917, -266.8318, -465.0274, -285.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4428, device='cuda:0', dtype=torch.float64)
tensor([-559.3116, -258.5805, -267.1532, -462.5874, -281.7567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3723, device='cuda:0', dtype=torch.float64)
tensor([-551.2145, -257.7675, -267.5255, -459.9175, -278.0953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2950, device='cuda:0', dtype=torch.float64)
tensor([-544.2276, -257.1199, -267.9142, -457.8720, -275.3180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4393, device='cuda:0', dtype=torch.float64)
tensor([-534.5593, -256.1124, -268.6843, -456.2583, -272.3007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4560, device='cuda:0', dtype=torch.float64)
tensor([-526.6095, -255.2109, -269.2922, -455.1662, -269.9759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3873, device='cuda:0', dtype=torch.float64)
tensor([-518.1118, -254.4702, -270.0081, -454.4815, -268.1387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4033, device='cuda:0', dtype=torch.float64)
tensor([-512.7619, -253.8914, -270.4240, -454.2167, -267.1160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4930, device='cuda:0', dtype=torch.float64)
tensor([-510.3305, -253.3905, -270.7471, -455.0091, -267.4224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4083, device='cuda:0', dtype=torch.float64)
tensor([-511.0798, -253.5119, -270.8843, -456.2333, -268.7452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4020, device='cuda:0', dtype=torch.float64)
tensor([-516.6484, -253.8140, -270.5032, -458.3422, -272.0974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3119, device='cuda:0', dtype=torch.float64)
tensor([-522.6616, -254.1458, -269.9821, -460.5001, -275.8756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3145, device='cuda:0', dtype=torch.float64)
tensor([-530.6380, -254.5476, -269.1500, -462.0752, -280.1933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4190, device='cuda:0', dtype=torch.float64)
tensor([-539.9987, -255.0542, -268.0348, -462.0938, -283.9958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3265, device='cuda:0', dtype=torch.float64)
tensor([-544.8958, -255.2750, -267.4247, -462.5192, -286.6915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3400, device='cuda:0', dtype=torch.float64)
tensor([-550.5262, -255.7261, -266.9776, -464.2474, -290.6800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3561, device='cuda:0', dtype=torch.float64)
tensor([-556.7522, -256.3903, -266.5632, -465.7998, -294.9377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2738, device='cuda:0', dtype=torch.float64)
tensor([-562.7150, -257.1540, -266.1358, -466.6490, -298.8177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2818, device='cuda:0', dtype=torch.float64)
tensor([-566.4187, -257.5393, -265.8402, -466.7403, -301.2064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3659, device='cuda:0', dtype=torch.float64)
tensor([-568.2454, -257.5561, -265.5921, -465.9640, -302.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3046, device='cuda:0', dtype=torch.float64)
tensor([-571.1354, -257.7916, -265.3659, -465.3817, -303.6799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2971, device='cuda:0', dtype=torch.float64)
tensor([-574.3757, -258.2477, -264.9950, -463.8906, -304.9502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2656, device='cuda:0', dtype=torch.float64)
tensor([-576.5713, -258.4532, -264.4639, -461.8385, -305.4400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3423, device='cuda:0', dtype=torch.float64)
tensor([-573.9670, -257.3653, -264.0333, -458.6421, -302.8303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2530, device='cuda:0', dtype=torch.float64)
tensor([-569.9439, -255.8615, -263.7671, -455.7580, -299.9843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3471, device='cuda:0', dtype=torch.float64)
tensor([-566.2876, -254.2282, -263.5628, -452.6015, -297.1418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3134, device='cuda:0', dtype=torch.float64)
tensor([-562.1065, -252.6570, -263.2147, -449.1115, -293.9954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3391, device='cuda:0', dtype=torch.float64)
tensor([-556.8088, -250.7894, -263.0735, -446.2741, -290.6606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3673, device='cuda:0', dtype=torch.float64)
tensor([-550.3583, -248.6502, -262.9540, -443.3658, -286.6668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2898, device='cuda:0', dtype=torch.float64)
tensor([-543.9089, -246.7949, -262.7723, -440.2689, -282.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3366, device='cuda:0', dtype=torch.float64)
tensor([-538.5289, -244.9088, -262.5269, -437.5175, -278.8918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3079, device='cuda:0', dtype=torch.float64)
tensor([-532.3976, -243.2723, -262.3492, -434.4061, -274.8196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4156, device='cuda:0', dtype=torch.float64)
tensor([-525.5308, -241.5470, -262.2102, -431.4689, -270.9391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2557, device='cuda:0', dtype=torch.float64)
tensor([-518.5811, -239.8382, -262.0972, -429.2810, -267.5805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2558, device='cuda:0', dtype=torch.float64)
tensor([-514.2233, -238.5559, -261.8670, -428.2581, -266.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3858, device='cuda:0', dtype=torch.float64)
tensor([-511.5379, -237.3648, -261.7883, -428.5384, -266.1580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3791, device='cuda:0', dtype=torch.float64)
tensor([-511.7059, -236.8139, -261.5239, -428.6456, -266.9326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3213, device='cuda:0', dtype=torch.float64)
tensor([-510.9263, -236.4050, -261.4227, -428.4861, -267.2869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2763, device='cuda:0', dtype=torch.float64)
tensor([-509.6914, -235.9522, -261.3615, -428.1268, -267.2068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3268, device='cuda:0', dtype=torch.float64)
tensor([-509.8873, -235.4294, -261.1362, -427.8544, -267.7218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2878, device='cuda:0', dtype=torch.float64)
tensor([-510.5983, -235.1647, -260.8938, -427.4078, -268.0388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3119, device='cuda:0', dtype=torch.float64)
tensor([-512.5712, -234.8972, -260.3729, -425.9382, -268.2929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2921, device='cuda:0', dtype=torch.float64)
tensor([-511.9477, -234.5843, -260.0687, -424.6062, -267.5967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3867, device='cuda:0', dtype=torch.float64)
tensor([-510.8344, -233.9487, -259.9751, -423.4969, -266.9675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2533, device='cuda:0', dtype=torch.float64)
tensor([-512.3361, -233.5654, -259.6096, -422.5992, -267.3980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4192, device='cuda:0', dtype=torch.float64)
tensor([-513.2808, -233.1211, -259.7326, -422.7980, -268.3137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3845, device='cuda:0', dtype=torch.float64)
tensor([-515.7714, -232.8242, -259.6469, -422.3230, -269.5668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3158, device='cuda:0', dtype=torch.float64)
tensor([-516.8243, -232.7154, -260.1074, -423.2046, -271.2409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3624, device='cuda:0', dtype=torch.float64)
tensor([-518.1083, -232.4182, -260.5195, -424.7159, -273.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2900, device='cuda:0', dtype=torch.float64)
tensor([-521.4059, -232.1809, -260.5290, -425.9458, -276.0224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2776, device='cuda:0', dtype=torch.float64)
tensor([-523.9872, -232.0079, -260.5838, -426.9868, -278.2565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2984, device='cuda:0', dtype=torch.float64)
tensor([-527.5306, -232.0378, -260.5110, -427.4498, -280.1754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2357, device='cuda:0', dtype=torch.float64)
tensor([-529.1649, -232.0742, -260.6596, -428.1832, -281.6328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2899, device='cuda:0', dtype=torch.float64)
tensor([-527.0738, -231.6254, -261.1152, -428.4751, -281.4464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2683, device='cuda:0', dtype=torch.float64)
tensor([-525.6811, -231.2505, -261.3241, -427.9754, -280.9928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2052, device='cuda:0', dtype=torch.float64)
tensor([-523.4344, -230.8099, -261.5618, -427.2156, -279.6420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6468, device='cuda:0', dtype=torch.float64)
tensor([-519.9729, -230.3956, -261.7094, -425.2963, -276.9332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3029, device='cuda:0', dtype=torch.float64)
tensor([-514.4707, -230.0500, -262.0708, -423.2115, -273.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2400, device='cuda:0', dtype=torch.float64)
tensor([-508.0916, -229.7262, -262.6997, -421.5742, -270.2778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3284, device='cuda:0', dtype=torch.float64)
tensor([-501.1515, -229.7149, -263.4986, -420.2989, -267.2182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2929, device='cuda:0', dtype=torch.float64)
tensor([-495.4261, -229.7136, -264.1692, -419.1421, -264.7363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2917, device='cuda:0', dtype=torch.float64)
tensor([-491.4747, -229.9932, -264.7710, -418.4212, -263.1577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3297, device='cuda:0', dtype=torch.float64)
tensor([-487.2514, -229.9803, -265.2673, -417.6407, -261.5439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2768, device='cuda:0', dtype=torch.float64)
tensor([-482.6723, -229.8468, -265.9300, -417.8985, -260.4794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3239, device='cuda:0', dtype=torch.float64)
tensor([-478.8302, -229.7327, -266.2971, -417.5256, -259.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6275, device='cuda:0', dtype=torch.float64)
tensor([-474.9849, -229.4825, -266.7775, -417.3974, -258.3817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3219, device='cuda:0', dtype=torch.float64)
tensor([-475.6673, -229.4043, -266.1376, -415.0289, -257.4044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2974, device='cuda:0', dtype=torch.float64)
tensor([-476.9214, -229.2552, -265.4346, -412.6101, -256.7843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2808, device='cuda:0', dtype=torch.float64)
tensor([-479.2948, -229.0708, -264.5838, -410.2031, -256.6587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3164, device='cuda:0', dtype=torch.float64)
tensor([-482.7802, -229.2018, -263.7811, -408.2944, -257.1866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3033, device='cuda:0', dtype=torch.float64)
tensor([-486.9631, -229.3965, -262.5523, -405.1007, -257.3935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2958, device='cuda:0', dtype=torch.float64)
tensor([-490.3573, -229.4699, -261.6271, -402.3353, -257.5885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3183, device='cuda:0', dtype=torch.float64)
tensor([-493.3609, -229.4860, -261.0092, -400.3975, -258.1720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2730, device='cuda:0', dtype=torch.float64)
tensor([-495.8864, -229.3996, -260.4458, -398.8661, -258.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3847, device='cuda:0', dtype=torch.float64)
tensor([-497.6937, -228.8355, -260.0832, -398.4855, -259.7865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2634, device='cuda:0', dtype=torch.float64)
tensor([-498.7562, -228.0399, -259.7421, -398.1611, -260.5152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3007, device='cuda:0', dtype=torch.float64)
tensor([-498.5509, -226.8462, -259.5268, -397.8934, -260.9389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3924, device='cuda:0', dtype=torch.float64)
tensor([-499.0051, -225.6594, -259.2439, -397.9419, -261.7625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3206, device='cuda:0', dtype=torch.float64)
tensor([-500.1955, -224.4332, -258.7256, -397.6753, -262.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-502.3617, -223.4788, -258.2411, -398.1435, -264.2177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2998, device='cuda:0', dtype=torch.float64)
tensor([-503.5484, -222.2842, -257.8002, -398.0494, -265.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2756, device='cuda:0', dtype=torch.float64)
tensor([-502.8811, -220.9806, -257.6824, -397.9575, -265.3527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2366, device='cuda:0', dtype=torch.float64)
tensor([-501.4995, -219.6816, -257.4531, -397.4807, -265.0544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2202, device='cuda:0', dtype=torch.float64)
tensor([-499.0661, -218.5457, -257.4409, -396.8298, -264.4335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2482, device='cuda:0', dtype=torch.float64)
tensor([-495.3767, -217.4666, -257.6019, -395.9596, -263.4083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-491.5262, -216.5802, -257.8105, -395.0167, -262.3518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2227, device='cuda:0', dtype=torch.float64)
tensor([-487.7297, -215.8897, -258.1277, -394.4608, -261.4487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2538, device='cuda:0', dtype=torch.float64)
tensor([-481.4403, -215.3113, -258.7247, -393.6596, -259.7759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2503, device='cuda:0', dtype=torch.float64)
tensor([-476.1637, -215.0478, -259.3210, -393.1366, -258.5082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2691, device='cuda:0', dtype=torch.float64)
tensor([-473.5011, -214.7890, -259.6891, -393.1951, -258.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2286, device='cuda:0', dtype=torch.float64)
tensor([-471.3032, -214.7489, -260.1338, -393.3757, -258.4426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6042, device='cuda:0', dtype=torch.float64)
tensor([-470.3015, -214.7937, -260.3755, -393.4106, -258.9141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2692, device='cuda:0', dtype=torch.float64)
tensor([-468.8269, -214.9690, -260.9797, -394.2189, -259.4284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2559, device='cuda:0', dtype=torch.float64)
tensor([-468.3917, -215.1923, -261.3762, -394.7572, -259.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2350, device='cuda:0', dtype=torch.float64)
tensor([-468.1955, -215.2509, -261.5023, -394.8810, -260.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2792, device='cuda:0', dtype=torch.float64)
tensor([-468.5541, -215.3814, -261.4411, -394.2108, -259.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2234, device='cuda:0', dtype=torch.float64)
tensor([-470.3593, -215.3321, -260.9761, -392.8558, -259.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2903, device='cuda:0', dtype=torch.float64)
tensor([-474.2775, -215.1188, -260.1266, -391.5945, -259.9627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2599, device='cuda:0', dtype=torch.float64)
tensor([-478.7569, -215.0988, -259.0123, -389.7850, -259.9839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2535, device='cuda:0', dtype=torch.float64)
tensor([-482.8527, -215.3096, -257.8229, -387.5464, -259.5701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2797, device='cuda:0', dtype=torch.float64)
tensor([-486.5867, -215.9011, -256.6440, -384.9556, -259.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([-490.3173, -216.9129, -255.6041, -382.6038, -258.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2283, device='cuda:0', dtype=torch.float64)
tensor([-493.2920, -218.1123, -254.6410, -380.0543, -258.6728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2772, device='cuda:0', dtype=torch.float64)
tensor([-495.3615, -219.0012, -253.8794, -377.9441, -258.6815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2737, device='cuda:0', dtype=torch.float64)
tensor([-496.0350, -219.3372, -253.1646, -375.7889, -258.1692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2928, device='cuda:0', dtype=torch.float64)
tensor([-496.9857, -219.6466, -252.5392, -374.0768, -258.0493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2156, device='cuda:0', dtype=torch.float64)
tensor([-496.4337, -219.1946, -252.0961, -373.0616, -257.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2516, device='cuda:0', dtype=torch.float64)
tensor([-493.7688, -218.3120, -251.8374, -372.0189, -256.7508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3276, device='cuda:0', dtype=torch.float64)
tensor([-490.7445, -216.9001, -251.6377, -371.7179, -255.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.4163, device='cuda:0', dtype=torch.float64)
tensor([-487.4718, -215.4526, -251.4624, -371.0663, -254.9827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2685, device='cuda:0', dtype=torch.float64)
tensor([-483.3339, -213.9077, -251.2455, -369.8577, -253.4308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2116, device='cuda:0', dtype=torch.float64)
tensor([-478.7297, -212.0774, -251.2236, -369.2172, -252.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2178, device='cuda:0', dtype=torch.float64)
tensor([-474.1689, -210.4958, -251.3194, -368.5994, -250.6867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3082, device='cuda:0', dtype=torch.float64)
tensor([-468.8968, -209.0723, -251.7192, -368.1922, -249.2788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3444, device='cuda:0', dtype=torch.float64)
tensor([-465.7995, -208.1241, -252.3156, -369.1314, -249.2764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3132, device='cuda:0', dtype=torch.float64)
tensor([-463.4877, -207.5785, -252.9962, -370.3605, -249.6391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2666, device='cuda:0', dtype=torch.float64)
tensor([-461.7641, -207.3441, -253.7470, -371.8611, -250.4015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2297, device='cuda:0', dtype=torch.float64)
tensor([-461.1829, -207.5107, -254.4267, -373.4369, -251.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2420, device='cuda:0', dtype=torch.float64)
tensor([-459.9625, -207.7916, -255.0397, -374.1883, -251.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2845, device='cuda:0', dtype=torch.float64)
tensor([-457.6328, -207.7409, -255.5792, -374.4541, -251.8088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2660, device='cuda:0', dtype=torch.float64)
tensor([-456.4329, -207.6368, -255.6699, -373.7392, -251.3590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2255, device='cuda:0', dtype=torch.float64)
tensor([-457.3980, -207.6018, -255.3325, -372.7410, -251.0891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2725, device='cuda:0', dtype=torch.float64)
tensor([-459.7893, -207.6118, -254.7525, -371.7260, -251.0033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2550, device='cuda:0', dtype=torch.float64)
tensor([-461.5119, -207.7064, -254.1732, -370.1983, -250.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2322, device='cuda:0', dtype=torch.float64)
tensor([-463.8024, -208.0720, -253.5668, -369.0771, -250.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2632, device='cuda:0', dtype=torch.float64)
tensor([-464.9358, -208.1179, -253.0889, -368.3266, -250.1550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2603, device='cuda:0', dtype=torch.float64)
tensor([-465.6412, -207.9883, -252.8745, -368.3959, -250.3398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1937, device='cuda:0', dtype=torch.float64)
tensor([-465.6886, -207.5666, -252.6154, -368.3745, -250.2672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2361, device='cuda:0', dtype=torch.float64)
tensor([-465.2586, -207.0740, -252.2573, -368.0676, -250.0602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2392, device='cuda:0', dtype=torch.float64)
tensor([-464.1589, -206.2217, -251.8631, -367.8445, -249.7290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2706, device='cuda:0', dtype=torch.float64)
tensor([-462.8550, -205.3430, -251.5488, -367.6037, -249.4331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2622, device='cuda:0', dtype=torch.float64)
tensor([-462.0038, -205.0171, -251.1834, -366.4667, -248.7999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2615, device='cuda:0', dtype=torch.float64)
tensor([-460.6285, -204.5938, -251.0951, -365.8597, -248.3836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1851, device='cuda:0', dtype=torch.float64)
tensor([-459.0753, -204.1350, -251.0495, -365.3765, -247.9005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-457.5265, -203.7526, -250.9875, -364.9462, -247.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2365, device='cuda:0', dtype=torch.float64)
tensor([-455.3896, -203.3287, -250.8683, -363.9304, -246.7278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2566, device='cuda:0', dtype=torch.float64)
tensor([-453.5298, -202.9096, -250.6237, -362.4314, -246.0197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2013, device='cuda:0', dtype=torch.float64)
tensor([-451.5371, -202.5860, -250.5185, -360.8957, -245.2799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3294, device='cuda:0', dtype=torch.float64)
tensor([-448.8290, -202.1244, -250.3975, -359.2995, -244.5281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2238, device='cuda:0', dtype=torch.float64)
tensor([-445.7170, -201.7986, -250.3493, -357.3609, -243.4928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2277, device='cuda:0', dtype=torch.float64)
tensor([-442.7008, -201.2566, -250.1401, -355.4628, -242.4999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2254, device='cuda:0', dtype=torch.float64)
tensor([-440.7757, -200.8513, -249.8996, -353.8889, -241.9179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([-438.2505, -200.4042, -249.7045, -352.1676, -241.0058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2860, device='cuda:0', dtype=torch.float64)
tensor([-434.9077, -199.8810, -249.6402, -350.6057, -239.7803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2542, device='cuda:0', dtype=torch.float64)
tensor([-431.7188, -199.4548, -249.6258, -349.2487, -238.7805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2618, device='cuda:0', dtype=torch.float64)
tensor([-428.2027, -199.0309, -249.8370, -348.5433, -237.9149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2720, device='cuda:0', dtype=torch.float64)
tensor([-426.1918, -198.7729, -250.0174, -348.0707, -237.4814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2284, device='cuda:0', dtype=torch.float64)
tensor([-425.9424, -198.5138, -250.0416, -347.8964, -237.7269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([-427.1524, -198.2166, -249.9245, -347.7677, -238.4314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2493, device='cuda:0', dtype=torch.float64)
tensor([-428.7079, -197.8613, -249.6497, -347.5809, -239.1197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2518, device='cuda:0', dtype=torch.float64)
tensor([-431.3546, -197.6514, -249.2390, -347.5946, -240.0654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4624, device='cuda:0', dtype=torch.float64)
tensor([-434.7023, -197.3371, -248.7787, -348.2379, -241.1254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1736, device='cuda:0', dtype=torch.float64)
tensor([-437.2339, -197.1182, -248.2886, -348.4618, -241.7632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2385, device='cuda:0', dtype=torch.float64)
tensor([-438.3691, -196.9452, -247.8542, -348.1003, -241.8537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5746, device='cuda:0', dtype=torch.float64)
tensor([-439.9388, -196.7727, -247.2700, -347.7181, -241.9252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2838, device='cuda:0', dtype=torch.float64)
tensor([-440.8489, -196.5415, -246.6730, -346.9051, -241.7167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5820, device='cuda:0', dtype=torch.float64)
tensor([-440.4764, -196.1674, -246.2250, -345.9447, -241.1508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2107, device='cuda:0', dtype=torch.float64)
tensor([-439.5185, -195.7945, -245.9800, -345.1995, -240.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1946, device='cuda:0', dtype=torch.float64)
tensor([-438.0646, -195.3415, -245.6328, -344.0613, -239.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2177, device='cuda:0', dtype=torch.float64)
tensor([-436.3629, -194.9097, -245.4716, -343.3077, -238.7061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2387, device='cuda:0', dtype=torch.float64)
tensor([-434.2429, -194.4663, -245.3345, -342.4869, -237.8517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2082, device='cuda:0', dtype=torch.float64)
tensor([-431.7123, -193.9977, -244.9969, -341.2396, -236.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2609, device='cuda:0', dtype=torch.float64)
tensor([-429.4058, -193.8541, -244.5276, -339.2179, -235.5827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2043, device='cuda:0', dtype=torch.float64)
tensor([-426.3780, -193.9002, -244.1626, -336.9288, -234.1037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2088, device='cuda:0', dtype=torch.float64)
tensor([-423.4231, -193.7747, -243.9571, -335.1914, -232.9102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2075, device='cuda:0', dtype=torch.float64)
tensor([-420.2794, -193.5530, -243.7921, -333.7177, -231.8318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2518, device='cuda:0', dtype=torch.float64)
tensor([-417.1392, -193.2567, -243.5780, -332.5480, -230.7840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1947, device='cuda:0', dtype=torch.float64)
tensor([-414.2965, -193.1076, -243.4409, -331.5458, -229.8196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2450, device='cuda:0', dtype=torch.float64)
tensor([-411.5365, -193.0025, -243.4268, -330.8195, -229.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2450, device='cuda:0', dtype=torch.float64)
tensor([-409.7308, -192.7358, -243.5731, -331.1359, -228.9203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2283, device='cuda:0', dtype=torch.float64)
tensor([-409.0818, -192.4850, -243.6234, -331.4654, -229.2217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2099, device='cuda:0', dtype=torch.float64)
tensor([-409.0403, -192.2167, -243.6101, -331.8076, -229.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2616, device='cuda:0', dtype=torch.float64)
tensor([-408.7546, -191.8390, -243.6049, -332.3252, -229.8071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1983, device='cuda:0', dtype=torch.float64)
tensor([-408.8334, -191.4772, -243.4349, -332.6044, -230.0455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1787, device='cuda:0', dtype=torch.float64)
tensor([-408.5260, -191.2359, -243.2621, -332.7442, -230.0713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3035, device='cuda:0', dtype=torch.float64)
tensor([-408.4026, -191.1036, -243.0132, -332.6246, -230.0048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2251, device='cuda:0', dtype=torch.float64)
tensor([-408.5017, -190.9979, -242.7808, -332.7398, -229.9308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2149, device='cuda:0', dtype=torch.float64)
tensor([-408.7063, -190.8349, -242.5350, -332.8551, -229.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1647, device='cuda:0', dtype=torch.float64)
tensor([-408.1163, -190.7610, -242.4354, -333.0224, -229.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.5106, device='cuda:0', dtype=torch.float64)
tensor([-408.4735, -190.6558, -242.2847, -333.3648, -230.0995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2517, device='cuda:0', dtype=torch.float64)
tensor([-408.3813, -190.4177, -242.0381, -333.5911, -230.2507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1621, device='cuda:0', dtype=torch.float64)
tensor([-408.2228, -190.3084, -241.7957, -333.5884, -230.2216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1870, device='cuda:0', dtype=torch.float64)
tensor([-408.1200, -190.1621, -241.7024, -333.9045, -230.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2149, device='cuda:0', dtype=torch.float64)
tensor([-408.3232, -189.7806, -241.7970, -335.0080, -230.8404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1903, device='cuda:0', dtype=torch.float64)
tensor([-408.5248, -189.5431, -241.6662, -335.4362, -230.9952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2695, device='cuda:0', dtype=torch.float64)
tensor([-409.3483, -189.3057, -241.4173, -335.5386, -231.1736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5803, device='cuda:0', dtype=torch.float64)
tensor([-409.0369, -189.5366, -241.0449, -333.8908, -230.7050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2549, device='cuda:0', dtype=torch.float64)
tensor([-409.1008, -189.9045, -240.4794, -331.6681, -230.0753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2207, device='cuda:0', dtype=torch.float64)
tensor([-409.9454, -190.4308, -239.8826, -329.3407, -229.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1761, device='cuda:0', dtype=torch.float64)
tensor([-410.9198, -191.1012, -239.4010, -327.0535, -229.1835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2227, device='cuda:0', dtype=torch.float64)
tensor([-411.0138, -191.5387, -239.3934, -325.8903, -229.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1877, device='cuda:0', dtype=torch.float64)
tensor([-411.1971, -191.8438, -239.2224, -324.7834, -229.0435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2599, device='cuda:0', dtype=torch.float64)
tensor([-410.4134, -192.1713, -239.0440, -323.3231, -228.4754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1492, device='cuda:0', dtype=torch.float64)
tensor([-409.4970, -192.4593, -238.9276, -321.8815, -227.9584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2146, device='cuda:0', dtype=torch.float64)
tensor([-408.7265, -192.3898, -238.9293, -321.4810, -227.8940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(4.0612, device='cuda:0', dtype=torch.float64)
tensor([-404.4928, -191.6983, -238.8305, -320.8864, -226.6894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2028, device='cuda:0', dtype=torch.float64)
tensor([-400.9836, -191.2527, -238.7424, -320.1824, -225.6984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1987, device='cuda:0', dtype=torch.float64)
tensor([-397.7635, -190.9017, -238.5614, -319.1423, -224.6353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2305, device='cuda:0', dtype=torch.float64)
tensor([-394.9036, -190.5388, -238.5888, -318.6778, -223.8306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1447, device='cuda:0', dtype=torch.float64)
tensor([-392.2576, -190.1634, -238.7345, -318.5692, -223.2577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2305, device='cuda:0', dtype=torch.float64)
tensor([-390.6502, -189.8631, -238.7670, -318.5740, -223.0119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2329, device='cuda:0', dtype=torch.float64)
tensor([-390.3114, -189.6546, -238.8694, -319.0690, -223.3624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1962, device='cuda:0', dtype=torch.float64)
tensor([-390.2555, -189.4475, -238.8981, -319.4134, -223.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1362, device='cuda:0', dtype=torch.float64)
tensor([-390.1964, -189.1370, -238.7643, -319.6475, -223.9612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1670, device='cuda:0', dtype=torch.float64)
tensor([-390.3360, -188.7834, -238.7278, -320.3066, -224.4124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1659, device='cuda:0', dtype=torch.float64)
tensor([-390.1895, -188.5144, -238.5875, -320.5451, -224.5550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1536, device='cuda:0', dtype=torch.float64)
tensor([-390.2469, -188.1248, -238.3738, -320.8576, -224.6646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2004, device='cuda:0', dtype=torch.float64)
tensor([-390.1193, -187.6170, -237.9195, -320.6836, -224.3680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1807, device='cuda:0', dtype=torch.float64)
tensor([-389.7810, -187.1925, -237.4435, -320.3285, -223.9240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1736, device='cuda:0', dtype=torch.float64)
tensor([-390.0998, -186.8203, -237.0649, -320.4519, -223.8523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1635, device='cuda:0', dtype=torch.float64)
tensor([-389.9854, -186.6192, -236.5940, -319.7214, -223.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1369, device='cuda:0', dtype=torch.float64)
tensor([-390.0852, -186.4699, -236.1022, -318.8066, -222.9260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2395, device='cuda:0', dtype=torch.float64)
tensor([-390.3670, -186.2894, -235.4847, -317.8362, -222.3854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2029, device='cuda:0', dtype=torch.float64)
tensor([-390.6087, -186.1553, -234.8688, -316.8996, -221.8480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1564, device='cuda:0', dtype=torch.float64)
tensor([-390.6108, -186.1024, -234.2944, -315.8242, -221.2532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2033, device='cuda:0', dtype=torch.float64)
tensor([-390.4331, -186.1832, -233.9067, -314.7786, -220.6748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1898, device='cuda:0', dtype=torch.float64)
tensor([-390.1104, -186.3134, -233.5878, -313.7017, -220.1016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2338, device='cuda:0', dtype=torch.float64)
tensor([-389.8552, -186.5262, -233.2071, -312.3234, -219.4663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1522, device='cuda:0', dtype=torch.float64)
tensor([-389.7385, -186.7541, -232.7791, -310.7445, -218.7511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2031, device='cuda:0', dtype=torch.float64)
tensor([-389.9235, -186.7551, -232.4064, -310.0488, -218.3071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1919, device='cuda:0', dtype=torch.float64)
tensor([-389.5151, -186.6791, -232.2119, -309.8282, -218.0437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2191, device='cuda:0', dtype=torch.float64)
tensor([-388.9990, -186.5568, -232.2441, -310.3042, -218.0592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7388, device='cuda:0', dtype=torch.float64)
tensor([-388.6794, -186.3876, -232.0754, -310.4768, -217.9910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1931, device='cuda:0', dtype=torch.float64)
tensor([-388.6944, -186.0453, -232.0338, -311.1975, -218.2752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2214, device='cuda:0', dtype=torch.float64)
tensor([-388.9420, -185.5822, -232.2224, -312.5021, -218.9409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2326, device='cuda:0', dtype=torch.float64)
tensor([-388.4887, -185.1384, -232.6382, -314.0829, -219.5925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1811, device='cuda:0', dtype=torch.float64)
tensor([-387.1572, -184.8537, -233.1747, -315.4578, -220.1389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1771, device='cuda:0', dtype=torch.float64)
tensor([-386.3542, -184.7060, -233.5879, -316.4530, -220.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1792, device='cuda:0', dtype=torch.float64)
tensor([-385.7141, -184.7540, -233.9278, -316.8449, -220.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2076, device='cuda:0', dtype=torch.float64)
tensor([-385.2093, -184.8309, -234.0903, -316.8258, -221.1702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1721, device='cuda:0', dtype=torch.float64)
tensor([-384.8222, -184.9689, -234.1620, -316.4496, -221.2000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1769, device='cuda:0', dtype=torch.float64)
tensor([-384.6738, -185.1647, -233.9871, -315.3458, -221.0065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1381, device='cuda:0', dtype=torch.float64)
tensor([-384.2046, -185.4635, -233.6534, -313.6622, -220.4240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.1457, device='cuda:0', dtype=torch.float64)
tensor([-383.5400, -185.8280, -233.2240, -311.6397, -219.6855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1713, device='cuda:0', dtype=torch.float64)
tensor([-383.0478, -186.2589, -232.7671, -309.4533, -218.8840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1741, device='cuda:0', dtype=torch.float64)
tensor([-382.6464, -186.6579, -232.4277, -307.6770, -218.2069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1595, device='cuda:0', dtype=torch.float64)
tensor([-382.7204, -187.2691, -232.0807, -305.5738, -217.5730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1760, device='cuda:0', dtype=torch.float64)
tensor([-382.7597, -187.6134, -231.7833, -304.0710, -217.1293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0925, device='cuda:0', dtype=torch.float64)
tensor([-382.6875, -187.7123, -231.3455, -302.7400, -216.7897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1853, device='cuda:0', dtype=torch.float64)
tensor([-382.3653, -187.5057, -230.9464, -302.0372, -216.5146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2148, device='cuda:0', dtype=torch.float64)
tensor([-382.1663, -187.2408, -230.7370, -301.8662, -216.4838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1697, device='cuda:0', dtype=torch.float64)
tensor([-381.6158, -187.4322, -230.5351, -300.7598, -216.0861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1432, device='cuda:0', dtype=torch.float64)
tensor([-380.5018, -187.3864, -230.4071, -300.1854, -215.7591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1824, device='cuda:0', dtype=torch.float64)
tensor([-379.4280, -187.1341, -230.3339, -299.9972, -215.6643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1886, device='cuda:0', dtype=torch.float64)
tensor([-378.6136, -186.8151, -230.3301, -300.2268, -215.6882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1756, device='cuda:0', dtype=torch.float64)
tensor([-377.7376, -186.7135, -230.3292, -300.0334, -215.4682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1776, device='cuda:0', dtype=torch.float64)
tensor([-377.4065, -186.4803, -230.4008, -300.2513, -215.5701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1944, device='cuda:0', dtype=torch.float64)
tensor([-377.5735, -186.1365, -230.4605, -300.7301, -215.9704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2165, device='cuda:0', dtype=torch.float64)
tensor([-376.9558, -185.8955, -230.3579, -300.3640, -215.8359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1282, device='cuda:0', dtype=torch.float64)
tensor([-376.1652, -185.5271, -230.2997, -300.2614, -215.7614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1658, device='cuda:0', dtype=torch.float64)
tensor([-375.5245, -185.3211, -230.0754, -299.5406, -215.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2970, device='cuda:0', dtype=torch.float64)
tensor([-375.0200, -185.2895, -229.8247, -298.5224, -215.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1830, device='cuda:0', dtype=torch.float64)
tensor([-374.8851, -185.4800, -229.3442, -296.6227, -214.4594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1386, device='cuda:0', dtype=torch.float64)
tensor([-374.8007, -185.5996, -229.0399, -295.4315, -214.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1426, device='cuda:0', dtype=torch.float64)
tensor([-374.5824, -185.6416, -228.8430, -294.6284, -214.0809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2662, device='cuda:0', dtype=torch.float64)
tensor([-374.3621, -185.7720, -228.7220, -293.8885, -213.9695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1646, device='cuda:0', dtype=torch.float64)
tensor([-373.6166, -185.8170, -228.6069, -293.0929, -213.6291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1577, device='cuda:0', dtype=torch.float64)
tensor([-372.5881, -185.8915, -228.5722, -292.3210, -213.2849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1724, device='cuda:0', dtype=torch.float64)
tensor([-371.2345, -185.8277, -228.5428, -291.7746, -212.7738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1785, device='cuda:0', dtype=torch.float64)
tensor([-370.3411, -185.6982, -228.4702, -291.4819, -212.4708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1684, device='cuda:0', dtype=torch.float64)
tensor([-369.1802, -185.5322, -228.3478, -291.1061, -211.9245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1908, device='cuda:0', dtype=torch.float64)
tensor([-367.9892, -185.2583, -228.3862, -291.2658, -211.5854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1942, device='cuda:0', dtype=torch.float64)
tensor([-367.1692, -185.0321, -228.5672, -291.8022, -211.6384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2092, device='cuda:0', dtype=torch.float64)
tensor([-366.4981, -184.8393, -228.7913, -292.4352, -211.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1633, device='cuda:0', dtype=torch.float64)
tensor([-366.3065, -184.6461, -228.8171, -292.6491, -211.9158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1736, device='cuda:0', dtype=torch.float64)
tensor([-366.5671, -184.5304, -228.9557, -293.1433, -212.3527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1360, device='cuda:0', dtype=torch.float64)
tensor([-367.0334, -184.3092, -229.2252, -294.2477, -213.0521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1522, device='cuda:0', dtype=torch.float64)
tensor([-367.4789, -184.0533, -229.4743, -295.3226, -213.6242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1884, device='cuda:0', dtype=torch.float64)
tensor([-367.9902, -183.8996, -229.6727, -296.1819, -214.0059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1941, device='cuda:0', dtype=torch.float64)
tensor([-368.7928, -183.9359, -229.6613, -296.2223, -214.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1576, device='cuda:0', dtype=torch.float64)
tensor([-369.4096, -184.0273, -229.6024, -296.1396, -214.1410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1846, device='cuda:0', dtype=torch.float64)
tensor([-369.9384, -184.1944, -229.4028, -295.4484, -213.9065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1311, device='cuda:0', dtype=torch.float64)
tensor([-370.7621, -184.4206, -229.2584, -294.7995, -213.8585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1428, device='cuda:0', dtype=torch.float64)
tensor([-371.3851, -184.6966, -229.1345, -294.1473, -213.6642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0985, device='cuda:0', dtype=torch.float64)
tensor([-371.7906, -185.0348, -228.9216, -292.9636, -213.1422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1535, device='cuda:0', dtype=torch.float64)
tensor([-371.7665, -185.3053, -228.7788, -292.0143, -212.6154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1353, device='cuda:0', dtype=torch.float64)
tensor([-371.2271, -185.6013, -228.6468, -290.9850, -211.9828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1299, device='cuda:0', dtype=torch.float64)
tensor([-370.5243, -185.8632, -228.5651, -289.9673, -211.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2198, device='cuda:0', dtype=torch.float64)
tensor([-369.7261, -185.8749, -228.5243, -289.3580, -210.9698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1547, device='cuda:0', dtype=torch.float64)
tensor([-368.6697, -186.0303, -228.5065, -288.5427, -210.4247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1241, device='cuda:0', dtype=torch.float64)
tensor([-367.1215, -186.1406, -228.4360, -287.5793, -209.6308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1689, device='cuda:0', dtype=torch.float64)
tensor([-365.6731, -186.3509, -228.2751, -286.5267, -208.8923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1412, device='cuda:0', dtype=torch.float64)
tensor([-363.8437, -186.4640, -228.0956, -285.6108, -208.0910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1498, device='cuda:0', dtype=torch.float64)
tensor([-361.9040, -186.3500, -227.8312, -284.8113, -207.2533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1695, device='cuda:0', dtype=torch.float64)
tensor([-360.4384, -186.2688, -227.5126, -283.9548, -206.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1349, device='cuda:0', dtype=torch.float64)
tensor([-358.8027, -186.1085, -227.3135, -283.4714, -206.0045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1531, device='cuda:0', dtype=torch.float64)
tensor([-357.4731, -186.0372, -227.0554, -282.8141, -205.4097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1882, device='cuda:0', dtype=torch.float64)
tensor([-356.2651, -185.9237, -226.8893, -282.3696, -205.0032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5433, device='cuda:0', dtype=torch.float64)
tensor([-356.3820, -185.8985, -226.7908, -282.3014, -205.1758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1479, device='cuda:0', dtype=torch.float64)
tensor([-356.2670, -186.0737, -226.5439, -281.5208, -204.9542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1844, device='cuda:0', dtype=torch.float64)
tensor([-356.1886, -185.9163, -226.4266, -281.4583, -205.0722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1837, device='cuda:0', dtype=torch.float64)
tensor([-356.3829, -185.7414, -226.3009, -281.4258, -205.3995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1453, device='cuda:0', dtype=torch.float64)
tensor([-356.0542, -185.7177, -226.1185, -280.8981, -205.3973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1314, device='cuda:0', dtype=torch.float64)
tensor([-356.4814, -185.6567, -226.0334, -280.6976, -205.7374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1810, device='cuda:0', dtype=torch.float64)
tensor([-356.6150, -185.7017, -225.8559, -280.0846, -205.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1564, device='cuda:0', dtype=torch.float64)
tensor([-357.0978, -185.7485, -225.7433, -279.6587, -205.9446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1468, device='cuda:0', dtype=torch.float64)
tensor([-357.2673, -185.9149, -225.7110, -279.1821, -205.9567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1426, device='cuda:0', dtype=torch.float64)
tensor([-357.7281, -186.1607, -225.7308, -278.8834, -206.0818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1496, device='cuda:0', dtype=torch.float64)
tensor([-357.8575, -186.2462, -225.6559, -278.6673, -205.9893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1630, device='cuda:0', dtype=torch.float64)
tensor([-357.8762, -186.4092, -225.4999, -278.0691, -205.6774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1374, device='cuda:0', dtype=torch.float64)
tensor([-357.9848, -186.5785, -225.4270, -277.5608, -205.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1630, device='cuda:0', dtype=torch.float64)
tensor([-357.8643, -186.5643, -225.5354, -277.7249, -205.4420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1471, device='cuda:0', dtype=torch.float64)
tensor([-357.7613, -186.5322, -225.4892, -277.5188, -205.2198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1569, device='cuda:0', dtype=torch.float64)
tensor([-357.5917, -186.4068, -225.4930, -277.3650, -205.1304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1121, device='cuda:0', dtype=torch.float64)
tensor([-357.2287, -186.3002, -225.4687, -276.9096, -204.8943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1331, device='cuda:0', dtype=torch.float64)
tensor([-356.6413, -186.1304, -225.4435, -276.5737, -204.6351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1463, device='cuda:0', dtype=torch.float64)
tensor([-355.5079, -185.9811, -225.4661, -276.2442, -204.2166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1883, device='cuda:0', dtype=torch.float64)
tensor([-354.2121, -185.6945, -225.4919, -276.1224, -203.8618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1366, device='cuda:0', dtype=torch.float64)
tensor([-352.9178, -185.3895, -225.5959, -276.2138, -203.6568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1437, device='cuda:0', dtype=torch.float64)
tensor([-352.0481, -185.1178, -225.4493, -275.6653, -203.2889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1298, device='cuda:0', dtype=torch.float64)
tensor([-350.5027, -184.9306, -225.4317, -275.1495, -202.8554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5241, device='cuda:0', dtype=torch.float64)
tensor([-348.7722, -184.7701, -225.3284, -274.4837, -202.1817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1361, device='cuda:0', dtype=torch.float64)
tensor([-346.9489, -184.5565, -225.2046, -273.8803, -201.4261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1970, device='cuda:0', dtype=torch.float64)
tensor([-345.1034, -184.4215, -225.0302, -272.9927, -200.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1514, device='cuda:0', dtype=torch.float64)
tensor([-343.6145, -184.2375, -224.7953, -272.1026, -199.4961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1648, device='cuda:0', dtype=torch.float64)
tensor([-342.4496, -183.8864, -224.6712, -271.9060, -198.9291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5183, device='cuda:0', dtype=torch.float64)
tensor([-341.4365, -183.5993, -224.4256, -271.2154, -198.2158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-341.4397, -183.2625, -224.4010, -270.9392, -198.0899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1163, device='cuda:0', dtype=torch.float64)
tensor([-341.6736, -182.8840, -224.3491, -270.6764, -198.0865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1413, device='cuda:0', dtype=torch.float64)
tensor([-342.2495, -182.5647, -224.1963, -270.2221, -198.1445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1991, device='cuda:0', dtype=torch.float64)
tensor([-343.1691, -182.1783, -224.1982, -270.3453, -198.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2621, device='cuda:0', dtype=torch.float64)
tensor([-343.9623, -181.9906, -224.2652, -270.4502, -199.0403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1611, device='cuda:0', dtype=torch.float64)
tensor([-344.8316, -181.7178, -224.4973, -271.1127, -199.7707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([-345.6081, -181.6442, -224.5303, -270.9565, -200.2684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1628, device='cuda:0', dtype=torch.float64)
tensor([-346.2990, -181.6718, -224.5855, -270.6773, -200.7659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1245, device='cuda:0', dtype=torch.float64)
tensor([-346.6447, -181.6529, -224.7330, -270.6958, -201.2979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2426, device='cuda:0', dtype=torch.float64)
tensor([-347.0824, -181.7400, -224.8426, -270.6253, -201.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1528, device='cuda:0', dtype=torch.float64)
tensor([-347.1228, -181.9304, -224.8876, -270.2054, -202.0433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2130, device='cuda:0', dtype=torch.float64)
tensor([-347.5501, -182.1605, -224.9904, -270.0097, -202.4566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1515, device='cuda:0', dtype=torch.float64)
tensor([-348.1935, -182.4032, -225.0534, -269.8346, -202.9318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-348.6258, -182.5832, -225.1468, -269.8631, -203.3671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1357, device='cuda:0', dtype=torch.float64)
tensor([-348.7762, -182.8177, -225.1440, -269.5970, -203.4702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1267, device='cuda:0', dtype=torch.float64)
tensor([-348.8179, -183.0891, -225.1658, -269.3321, -203.5831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1543, device='cuda:0', dtype=torch.float64)
tensor([-348.8211, -183.3832, -225.1373, -268.9511, -203.6080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1809, device='cuda:0', dtype=torch.float64)
tensor([-348.5105, -183.7205, -225.0475, -268.2282, -203.4447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1384, device='cuda:0', dtype=torch.float64)
tensor([-348.1394, -183.8990, -224.9940, -267.7311, -203.3345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1325, device='cuda:0', dtype=torch.float64)
tensor([-347.4108, -183.9064, -224.8951, -267.3642, -203.1027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1788, device='cuda:0', dtype=torch.float64)
tensor([-346.1533, -183.7425, -224.7394, -266.8479, -202.5707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-344.9022, -183.6091, -224.5330, -266.2254, -201.8715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1331, device='cuda:0', dtype=torch.float64)
tensor([-343.6898, -183.5417, -224.3674, -265.5588, -201.1353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2171, device='cuda:0', dtype=torch.float64)
tensor([-342.7269, -183.4116, -224.2706, -265.2533, -200.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1589, device='cuda:0', dtype=torch.float64)
tensor([-341.9212, -183.1906, -224.2879, -265.3812, -200.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1113, device='cuda:0', dtype=torch.float64)
tensor([-341.0860, -183.1220, -224.1700, -264.9446, -199.8676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1454, device='cuda:0', dtype=torch.float64)
tensor([-340.5960, -183.1506, -224.1177, -264.7085, -199.6559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1361, device='cuda:0', dtype=torch.float64)
tensor([-340.2365, -183.2721, -224.0620, -264.2654, -199.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2125, device='cuda:0', dtype=torch.float64)
tensor([-340.0547, -183.3018, -224.1539, -264.3749, -199.6345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.7632, device='cuda:0', dtype=torch.float64)
tensor([-340.8456, -183.6073, -224.3097, -264.7852, -199.9299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1885, device='cuda:0', dtype=torch.float64)
tensor([-341.4884, -183.8944, -224.3662, -265.0207, -200.0825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1554, device='cuda:0', dtype=torch.float64)
tensor([-342.2294, -184.1568, -224.6444, -265.5966, -200.5140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1233, device='cuda:0', dtype=torch.float64)
tensor([-342.9517, -184.4311, -224.7699, -265.7363, -200.7480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1175, device='cuda:0', dtype=torch.float64)
tensor([-343.5876, -184.7662, -224.8950, -265.7641, -200.8891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1817, device='cuda:0', dtype=torch.float64)
tensor([-343.8839, -185.0229, -225.0802, -265.9041, -201.0660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1266, device='cuda:0', dtype=torch.float64)
tensor([-344.0850, -185.4568, -225.2201, -265.7404, -201.1966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5992, device='cuda:0', dtype=torch.float64)
tensor([-343.8603, -185.7038, -225.1585, -265.0172, -201.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1146, device='cuda:0', dtype=torch.float64)
tensor([-343.6938, -185.8537, -225.0610, -264.3272, -200.8786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([-343.2143, -185.9208, -224.7810, -263.3822, -200.3341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0952, device='cuda:0', dtype=torch.float64)
tensor([-342.8299, -185.6630, -224.6861, -263.1301, -200.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1016, device='cuda:0', dtype=torch.float64)
tensor([-342.4443, -185.4129, -224.6918, -263.1622, -199.9292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1334, device='cuda:0', dtype=torch.float64)
tensor([-341.8744, -185.4520, -224.3847, -262.2485, -199.4235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1593, device='cuda:0', dtype=torch.float64)
tensor([-341.3813, -185.4997, -224.1162, -261.4569, -199.0605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2012, device='cuda:0', dtype=torch.float64)
tensor([-341.0083, -185.7214, -223.8410, -260.5111, -198.7459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1357, device='cuda:0', dtype=torch.float64)
tensor([-340.5144, -185.7574, -223.6048, -259.7647, -198.4586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1600, device='cuda:0', dtype=torch.float64)
tensor([-340.0571, -185.6901, -223.4734, -259.3719, -198.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1133, device='cuda:0', dtype=torch.float64)
tensor([-339.5592, -185.6615, -223.2686, -258.8509, -197.8426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1301, device='cuda:0', dtype=torch.float64)
tensor([-339.0968, -185.4921, -223.1311, -258.6313, -197.5985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1291, device='cuda:0', dtype=torch.float64)
tensor([-338.6011, -185.1897, -223.1759, -258.9342, -197.5536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1596, device='cuda:0', dtype=torch.float64)
tensor([-338.0854, -184.9491, -223.3497, -259.3858, -197.5976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-337.6370, -184.5526, -223.6991, -260.4379, -197.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-337.2486, -184.5035, -223.8856, -260.8710, -198.1277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(4.2743, device='cuda:0', dtype=torch.float64)
tensor([-336.0552, -184.1521, -223.5227, -260.6595, -197.7342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-334.9055, -183.9375, -223.0072, -259.9377, -197.1131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0257, device='cuda:0', dtype=torch.float64)
tensor([-333.7546, -183.6846, -222.3226, -258.6858, -196.2504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1610, device='cuda:0', dtype=torch.float64)
tensor([-332.7970, -183.4633, -221.5369, -257.1469, -195.2420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-332.0678, -183.4083, -220.6372, -255.0759, -194.0046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-331.5786, -183.4083, -219.7734, -252.7451, -192.7282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2168, device='cuda:0', dtype=torch.float64)
tensor([-331.3958, -183.3391, -219.4379, -251.9537, -192.3201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1702, device='cuda:0', dtype=torch.float64)
tensor([-331.6656, -183.4986, -219.0865, -251.0215, -192.0756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1408, device='cuda:0', dtype=torch.float64)
tensor([-331.9537, -183.6958, -218.7908, -250.4590, -192.0128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0875, device='cuda:0', dtype=torch.float64)
tensor([-332.1961, -183.8168, -218.6298, -250.4881, -192.2436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1225, device='cuda:0', dtype=torch.float64)
tensor([-332.4959, -184.0210, -218.4665, -250.4562, -192.4870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1299, device='cuda:0', dtype=torch.float64)
tensor([-332.6640, -184.2020, -218.3747, -250.6309, -192.7573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1577, device='cuda:0', dtype=torch.float64)
tensor([-332.8085, -184.3930, -218.3167, -250.8269, -193.0074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1397, device='cuda:0', dtype=torch.float64)
tensor([-333.0401, -184.5747, -218.5253, -251.7589, -193.6734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1809, device='cuda:0', dtype=torch.float64)
tensor([-333.3100, -184.8331, -218.7493, -252.7302, -194.4044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1286, device='cuda:0', dtype=torch.float64)
tensor([-333.5697, -185.1100, -219.0221, -253.6489, -195.1865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1280, device='cuda:0', dtype=torch.float64)
tensor([-333.8759, -185.3286, -219.3579, -254.7049, -195.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1849, device='cuda:0', dtype=torch.float64)
tensor([-334.4907, -185.3710, -219.9717, -256.3769, -197.2476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1796, device='cuda:0', dtype=torch.float64)
tensor([-335.0284, -185.2677, -220.4586, -257.6159, -198.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1320, device='cuda:0', dtype=torch.float64)
tensor([-335.4511, -185.1588, -220.7978, -258.4073, -198.6443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-335.6852, -185.1202, -220.9942, -258.7259, -198.8062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-335.6746, -185.1568, -220.9439, -258.5059, -198.5291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0980, device='cuda:0', dtype=torch.float64)
tensor([-335.6515, -185.2224, -220.9557, -258.2062, -198.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1584, device='cuda:0', dtype=torch.float64)
tensor([-335.4119, -185.3797, -220.8878, -257.6709, -197.9775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-335.3073, -185.3065, -220.7602, -257.2585, -197.7044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-335.0258, -185.4699, -220.5360, -256.4816, -197.3715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-334.6531, -185.5659, -220.3580, -255.8617, -197.0708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-334.2280, -185.5494, -220.2078, -255.2671, -196.7619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1059, device='cuda:0', dtype=torch.float64)
tensor([-333.7774, -185.4405, -220.0063, -254.5984, -196.3892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2733, device='cuda:0', dtype=torch.float64)
tensor([-333.2557, -185.4121, -219.8088, -253.8684, -196.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2314, device='cuda:0', dtype=torch.float64)
tensor([-332.6282, -185.4644, -219.4284, -252.6567, -195.3504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1231, device='cuda:0', dtype=torch.float64)
tensor([-332.0167, -185.3543, -219.0620, -251.5592, -194.7363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1150, device='cuda:0', dtype=torch.float64)
tensor([-331.4647, -185.2752, -218.7351, -250.5550, -194.2340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1503, device='cuda:0', dtype=torch.float64)
tensor([-330.6933, -185.1641, -218.3374, -249.3259, -193.6044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1171, device='cuda:0', dtype=torch.float64)
tensor([-330.0068, -184.9264, -218.1272, -248.5488, -193.1409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1310, device='cuda:0', dtype=torch.float64)
tensor([-329.3246, -184.7072, -217.9463, -247.8533, -192.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2692, device='cuda:0', dtype=torch.float64)
tensor([-328.7306, -184.6147, -217.7230, -247.1304, -192.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-328.1149, -184.4183, -217.6055, -246.6720, -191.9624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1521, device='cuda:0', dtype=torch.float64)
tensor([-327.4415, -184.0670, -217.6028, -246.5770, -191.7541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1230, device='cuda:0', dtype=torch.float64)
tensor([-326.8452, -183.8653, -217.5323, -246.3493, -191.5754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-326.2995, -183.4697, -217.7352, -246.7472, -191.7539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5238, device='cuda:0', dtype=torch.float64)
tensor([-325.9578, -182.8246, -218.2511, -248.1877, -192.3635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1260, device='cuda:0', dtype=torch.float64)
tensor([-325.8489, -182.3055, -218.8627, -249.7260, -193.1928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1435, device='cuda:0', dtype=torch.float64)
tensor([-325.8526, -182.1600, -219.1832, -250.4585, -193.7432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1689, device='cuda:0', dtype=torch.float64)
tensor([-325.7946, -182.2022, -219.3763, -250.7909, -194.1169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-325.8042, -182.4716, -219.4745, -250.8093, -194.4139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1115, device='cuda:0', dtype=torch.float64)
tensor([-325.6118, -182.9684, -219.3264, -250.1944, -194.3049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1246, device='cuda:0', dtype=torch.float64)
tensor([-325.4175, -183.7009, -219.1370, -249.3608, -194.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1157, device='cuda:0', dtype=torch.float64)
tensor([-325.0977, -184.5865, -218.7460, -248.0883, -193.6756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0965, device='cuda:0', dtype=torch.float64)
tensor([-324.7565, -185.4632, -218.4601, -246.9916, -193.3246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1346, device='cuda:0', dtype=torch.float64)
tensor([-324.4644, -186.1086, -218.3671, -246.4278, -193.1934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1083, device='cuda:0', dtype=torch.float64)
tensor([-324.1687, -186.6334, -218.3523, -246.1141, -193.2065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2123, device='cuda:0', dtype=torch.float64)
tensor([-323.8948, -186.9428, -218.4811, -246.2139, -193.3199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1211, device='cuda:0', dtype=torch.float64)
tensor([-323.6322, -187.0693, -218.6946, -246.5856, -193.5966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1109, device='cuda:0', dtype=torch.float64)
tensor([-323.4036, -187.2832, -219.0258, -247.0472, -194.0232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1235, device='cuda:0', dtype=torch.float64)
tensor([-323.3036, -187.2470, -219.5212, -247.9328, -194.6843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1131, device='cuda:0', dtype=torch.float64)
tensor([-323.3270, -187.1452, -220.0979, -249.0024, -195.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1035, device='cuda:0', dtype=torch.float64)
tensor([-323.3511, -187.0819, -220.5956, -249.9219, -196.1441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1110, device='cuda:0', dtype=torch.float64)
tensor([-323.1240, -187.0864, -220.7843, -250.2820, -196.4890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1349, device='cuda:0', dtype=torch.float64)
tensor([-322.6104, -187.2554, -220.5812, -249.9200, -196.3453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1517, device='cuda:0', dtype=torch.float64)
tensor([-322.0110, -187.4183, -220.2245, -249.2873, -195.9610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1301, device='cuda:0', dtype=torch.float64)
tensor([-321.4242, -187.6123, -219.9029, -248.6873, -195.6680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1163, device='cuda:0', dtype=torch.float64)
tensor([-320.8544, -187.6873, -219.6184, -248.2386, -195.3913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2425, device='cuda:0', dtype=torch.float64)
tensor([-320.4373, -187.9223, -219.5721, -248.2438, -195.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1020, device='cuda:0', dtype=torch.float64)
tensor([-319.8767, -188.1137, -219.3344, -247.9272, -195.1762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1358, device='cuda:0', dtype=torch.float64)
tensor([-319.4434, -188.2565, -219.2975, -247.9513, -195.2958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2532, device='cuda:0', dtype=torch.float64)
tensor([-318.6280, -188.4619, -218.9376, -247.2533, -194.9173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1309, device='cuda:0', dtype=torch.float64)
tensor([-317.6576, -188.9222, -218.4674, -246.0219, -194.3998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4404, device='cuda:0', dtype=torch.float64)
tensor([-316.5394, -189.5115, -217.7144, -244.1241, -193.6546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1348, device='cuda:0', dtype=torch.float64)
tensor([-315.4828, -190.0112, -216.8602, -242.0533, -192.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1150, device='cuda:0', dtype=torch.float64)
tensor([-314.6675, -190.4667, -216.2996, -240.4449, -192.2720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(3.4291, device='cuda:0', dtype=torch.float64)
tensor([-313.9491, -190.7756, -215.6550, -238.5957, -191.7340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.5038, device='cuda:0', dtype=torch.float64)
tensor([-313.4694, -191.0694, -214.8566, -236.4087, -191.1835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1289, device='cuda:0', dtype=torch.float64)
tensor([-313.0411, -191.1622, -214.2520, -234.7299, -190.6686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1128, device='cuda:0', dtype=torch.float64)
tensor([-312.5810, -190.8202, -213.9655, -234.1993, -190.2399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1185, device='cuda:0', dtype=torch.float64)
tensor([-312.1253, -190.3585, -214.0884, -234.6345, -190.1564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1359, device='cuda:0', dtype=torch.float64)
tensor([-311.6893, -189.8987, -214.4226, -235.6254, -190.2923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0952, device='cuda:0', dtype=torch.float64)
tensor([-311.4605, -189.4154, -215.0678, -237.2709, -190.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1119, device='cuda:0', dtype=torch.float64)
tensor([-311.3098, -189.1268, -215.6406, -238.5371, -191.3295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2015, device='cuda:0', dtype=torch.float64)
tensor([-311.3022, -188.8666, -216.3441, -240.0194, -192.1073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1068, device='cuda:0', dtype=torch.float64)
tensor([-311.4805, -188.5794, -217.1502, -241.4593, -193.0526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1705, device='cuda:0', dtype=torch.float64)
tensor([-311.8530, -188.1938, -218.0850, -242.9831, -194.0285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0875, device='cuda:0', dtype=torch.float64)
tensor([-311.9171, -188.0388, -218.6566, -243.6835, -194.5220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1413, device='cuda:0', dtype=torch.float64)
tensor([-311.9532, -187.9423, -219.1659, -244.2876, -194.8787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1455, device='cuda:0', dtype=torch.float64)
tensor([-311.4591, -188.0913, -219.1974, -244.0601, -194.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-310.8736, -188.3022, -219.1067, -243.6176, -194.2890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1266, device='cuda:0', dtype=torch.float64)
tensor([-310.0275, -188.7294, -218.8341, -242.7868, -193.7039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1943, device='cuda:0', dtype=torch.float64)
tensor([-309.1593, -189.2353, -218.6017, -241.9481, -193.1782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1063, device='cuda:0', dtype=torch.float64)
tensor([-308.2543, -189.6815, -218.3018, -241.0324, -192.4873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([-307.3691, -190.0514, -217.9181, -239.9481, -191.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1275, device='cuda:0', dtype=torch.float64)
tensor([-306.5529, -190.4961, -217.5748, -238.7985, -191.2122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-305.9183, -190.8620, -217.4315, -238.0251, -190.8832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1296, device='cuda:0', dtype=torch.float64)
tensor([-305.4858, -191.0087, -217.4530, -237.7820, -190.6932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0984, device='cuda:0', dtype=torch.float64)
tensor([-305.0369, -191.1682, -217.5006, -237.6324, -190.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-304.6637, -191.2306, -217.6708, -237.7590, -190.4439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1022, device='cuda:0', dtype=torch.float64)
tensor([-304.3793, -191.3721, -218.0035, -238.0884, -190.5914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0751, device='cuda:0', dtype=torch.float64)
tensor([-304.1807, -191.3396, -218.3783, -238.6423, -190.7938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1681, device='cuda:0', dtype=torch.float64)
tensor([-303.9754, -191.1157, -218.6979, -239.2353, -190.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([-303.8291, -190.6386, -218.9842, -239.9371, -190.9576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0817, device='cuda:0', dtype=torch.float64)
tensor([-303.6413, -190.1440, -219.3049, -240.6961, -191.0980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.5111, device='cuda:0', dtype=torch.float64)
tensor([-303.5243, -189.3710, -219.4234, -241.3622, -191.1413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-303.3612, -188.7319, -219.4886, -241.7915, -191.1797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(4.7273, device='cuda:0', dtype=torch.float64)
tensor([-303.7231, -187.1718, -218.7884, -241.2653, -190.4052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0978, device='cuda:0', dtype=torch.float64)
tensor([-303.5549, -185.9944, -218.1150, -240.1515, -189.5681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8518, device='cuda:0', dtype=torch.float64)
tensor([-303.0597, -185.1558, -217.2422, -238.3881, -188.5914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-302.3388, -184.5702, -216.2237, -235.9622, -187.4868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2475, device='cuda:0', dtype=torch.float64)
tensor([-301.7902, -184.1378, -215.4048, -233.6821, -186.7235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1178, device='cuda:0', dtype=torch.float64)
tensor([-301.4007, -183.7880, -214.5152, -231.3088, -186.0100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1189, device='cuda:0', dtype=torch.float64)
tensor([-301.1554, -183.7174, -213.5674, -228.9626, -185.4516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1031, device='cuda:0', dtype=torch.float64)
tensor([-300.9437, -183.6910, -212.9939, -227.8679, -185.2640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1781, device='cuda:0', dtype=torch.float64)
tensor([-300.7747, -183.8203, -212.8967, -228.3599, -185.6453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0984, device='cuda:0', dtype=torch.float64)
tensor([-300.5866, -183.9986, -212.9565, -229.5139, -186.2097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1272, device='cuda:0', dtype=torch.float64)
tensor([-300.4653, -184.3132, -213.2878, -231.1337, -186.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2087, device='cuda:0', dtype=torch.float64)
tensor([-300.4668, -184.7972, -213.8339, -233.0170, -188.0508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1216, device='cuda:0', dtype=torch.float64)
tensor([-300.5346, -185.3167, -214.5626, -234.7515, -189.2180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1085, device='cuda:0', dtype=torch.float64)
tensor([-300.4721, -185.8108, -215.2157, -235.7142, -190.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2524, device='cuda:0', dtype=torch.float64)
tensor([-300.4364, -186.1010, -216.0382, -236.7455, -190.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.6702, device='cuda:0', dtype=torch.float64)
tensor([-300.1494, -186.5045, -216.6964, -237.1459, -191.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1790, device='cuda:0', dtype=torch.float64)
tensor([-299.5829, -187.0353, -217.1240, -237.1009, -191.7494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1157, device='cuda:0', dtype=torch.float64)
tensor([-298.9171, -187.6165, -217.5331, -236.9896, -191.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1492, device='cuda:0', dtype=torch.float64)
tensor([-298.2523, -188.1673, -218.0283, -236.9579, -191.9502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-297.4838, -188.7517, -218.3567, -236.7169, -191.9102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0931, device='cuda:0', dtype=torch.float64)
tensor([-296.6932, -189.2319, -218.4996, -236.3190, -191.7603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([-296.0234, -189.5925, -218.6890, -236.1029, -191.6789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1393, device='cuda:0', dtype=torch.float64)
tensor([-295.3853, -189.9145, -218.8526, -235.9183, -191.5930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-294.8182, -190.0762, -218.9539, -235.8428, -191.4556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0992, device='cuda:0', dtype=torch.float64)
tensor([-294.2578, -190.1314, -219.0629, -235.8629, -191.2826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-293.9091, -190.0602, -219.2027, -236.0604, -191.1802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0792, device='cuda:0', dtype=torch.float64)
tensor([-293.4273, -190.0993, -219.1819, -235.8858, -190.9790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0792, device='cuda:0', dtype=torch.float64)
tensor([-293.0379, -190.0488, -219.2889, -235.9422, -190.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0901, device='cuda:0', dtype=torch.float64)
tensor([-292.6710, -189.9519, -219.3870, -236.0251, -190.7526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6995, device='cuda:0', dtype=torch.float64)
tensor([-292.3412, -189.9833, -219.5151, -236.1264, -190.7372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0855, device='cuda:0', dtype=torch.float64)
tensor([-292.0037, -190.0447, -219.6843, -236.2340, -190.7853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5028, device='cuda:0', dtype=torch.float64)
tensor([-291.7414, -190.0174, -219.5986, -236.0444, -190.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0823, device='cuda:0', dtype=torch.float64)
tensor([-291.3332, -190.0014, -219.3317, -235.4981, -190.4775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1178, device='cuda:0', dtype=torch.float64)
tensor([-290.8216, -189.9956, -218.9073, -234.7032, -190.0730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1031, device='cuda:0', dtype=torch.float64)
tensor([-290.2815, -190.0450, -218.5836, -233.9615, -189.7120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1062, device='cuda:0', dtype=torch.float64)
tensor([-289.8099, -190.0444, -218.3763, -233.3707, -189.4663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0995, device='cuda:0', dtype=torch.float64)
tensor([-289.2565, -190.0747, -218.0784, -232.5695, -189.1638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0764, device='cuda:0', dtype=torch.float64)
tensor([-288.7623, -190.0359, -217.8950, -232.0156, -188.9198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0808, device='cuda:0', dtype=torch.float64)
tensor([-288.2083, -190.0434, -217.6515, -231.3730, -188.5988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-287.6079, -190.0253, -217.3656, -230.6970, -188.2282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-287.1390, -189.9068, -217.2502, -230.3715, -188.0316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-286.7838, -189.6944, -217.4021, -230.4927, -188.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1297, device='cuda:0', dtype=torch.float64)
tensor([-286.4397, -189.4947, -217.7045, -230.7568, -188.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0982, device='cuda:0', dtype=torch.float64)
tensor([-286.0467, -189.3707, -217.9442, -230.8872, -188.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.9413, device='cuda:0', dtype=torch.float64)
tensor([-286.2945, -188.7916, -218.3085, -231.4079, -188.6377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-286.5337, -188.3212, -218.7457, -231.9635, -189.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0098, device='cuda:0', dtype=torch.float64)
tensor([-286.9938, -187.9619, -219.5714, -232.9222, -189.7676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-287.3138, -187.7629, -220.2902, -233.5247, -190.4846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0999, device='cuda:0', dtype=torch.float64)
tensor([-287.5108, -187.6205, -220.8540, -233.8471, -191.0666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0920, device='cuda:0', dtype=torch.float64)
tensor([-287.5338, -187.4864, -221.2231, -233.9534, -191.4359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0829, device='cuda:0', dtype=torch.float64)
tensor([-287.1611, -187.4866, -221.2565, -233.5217, -191.4874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7021, device='cuda:0', dtype=torch.float64)
tensor([-286.3324, -187.7529, -220.9748, -232.4805, -191.2338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0818, device='cuda:0', dtype=torch.float64)
tensor([-285.4716, -187.9936, -220.6043, -231.3863, -190.9179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0893, device='cuda:0', dtype=torch.float64)
tensor([-284.7269, -188.1833, -220.2720, -230.4444, -190.6496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-283.8816, -188.4942, -219.8641, -229.3268, -190.3073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-283.0572, -188.7464, -219.4310, -228.1923, -189.9265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0856, device='cuda:0', dtype=torch.float64)
tensor([-282.3603, -189.0198, -219.2411, -227.3961, -189.7627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6054, device='cuda:0', dtype=torch.float64)
tensor([-281.7786, -189.2276, -219.1224, -226.7435, -189.6443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4536, device='cuda:0', dtype=torch.float64)
tensor([-281.1495, -189.3794, -219.4648, -226.6620, -189.7143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-280.6613, -189.3736, -219.8612, -226.7995, -189.8376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6413, device='cuda:0', dtype=torch.float64)
tensor([-280.5986, -189.0654, -220.8240, -227.8707, -190.3428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9567, device='cuda:0', dtype=torch.float64)
tensor([-280.8583, -188.8322, -221.5815, -228.8028, -190.9272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0755, device='cuda:0', dtype=torch.float64)
tensor([-281.1507, -188.5827, -222.2658, -229.6586, -191.4866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0893, device='cuda:0', dtype=torch.float64)
tensor([-281.2915, -188.4292, -222.7050, -230.1865, -191.8957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-281.2181, -188.3641, -222.7916, -230.2963, -192.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2145, device='cuda:0', dtype=torch.float64)
tensor([-280.8132, -188.4762, -222.4870, -229.8629, -191.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1775, device='cuda:0', dtype=torch.float64)
tensor([-280.1971, -188.6158, -222.3185, -229.3647, -191.5606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1033, device='cuda:0', dtype=torch.float64)
tensor([-279.2004, -188.9007, -221.8096, -228.3240, -191.0787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0817, device='cuda:0', dtype=torch.float64)
tensor([-278.1999, -189.1839, -221.3271, -227.2845, -190.6138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-277.2622, -189.4416, -220.7873, -226.2350, -190.1453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-276.3713, -189.7674, -220.2901, -225.2183, -189.7482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0629, device='cuda:0', dtype=torch.float64)
tensor([-275.7890, -189.9048, -220.0758, -224.6763, -189.6136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2429, device='cuda:0', dtype=torch.float64)
tensor([-275.2414, -189.9824, -219.8858, -224.2532, -189.4602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0989, device='cuda:0', dtype=torch.float64)
tensor([-274.9118, -189.8786, -219.9027, -224.2527, -189.4693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1184, device='cuda:0', dtype=torch.float64)
tensor([-274.7434, -189.5757, -219.9301, -224.4632, -189.5013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0865, device='cuda:0', dtype=torch.float64)
tensor([-274.8173, -189.1165, -220.5483, -225.4231, -189.9364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0182, device='cuda:0', dtype=torch.float64)
tensor([-274.2852, -188.9467, -221.8982, -226.6719, -190.6749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-273.9391, -188.8015, -223.2908, -227.9442, -191.5162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0698, device='cuda:0', dtype=torch.float64)
tensor([-273.5547, -188.7384, -224.4529, -228.9368, -192.2049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-273.0610, -188.7678, -225.4229, -229.6871, -192.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-272.4482, -188.9009, -226.1794, -230.1707, -193.1100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-271.7605, -189.0629, -226.7419, -230.4265, -193.3544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0972, device='cuda:0', dtype=torch.float64)
tensor([-270.8897, -189.2799, -227.0769, -230.3838, -193.4185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-269.9011, -189.5623, -227.2305, -230.1104, -193.3570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0796, device='cuda:0', dtype=torch.float64)
tensor([-268.7306, -189.9384, -227.2369, -229.5799, -193.1992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0766, device='cuda:0', dtype=torch.float64)
tensor([-267.7436, -190.1991, -227.2144, -229.1817, -193.0681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0871, device='cuda:0', dtype=torch.float64)
tensor([-266.6777, -190.4481, -227.0006, -228.5607, -192.8268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-265.6875, -190.6321, -226.7274, -227.9120, -192.5604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-264.6898, -190.8779, -226.2864, -227.0609, -192.2292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-263.7890, -191.0524, -225.9478, -226.3483, -191.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-262.9866, -191.1884, -225.5581, -225.6424, -191.6871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6772, device='cuda:0', dtype=torch.float64)
tensor([-262.4464, -191.0981, -225.2585, -225.2834, -191.4650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7750, device='cuda:0', dtype=torch.float64)
tensor([-261.5265, -191.1259, -224.9109, -224.7423, -191.2420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0674, device='cuda:0', dtype=torch.float64)
tensor([-261.0488, -190.8503, -224.8160, -224.7572, -191.2194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0803, device='cuda:0', dtype=torch.float64)
tensor([-260.3626, -190.7578, -224.4852, -224.3636, -191.0445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-259.6677, -190.6637, -224.1983, -223.9730, -190.9167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0939, device='cuda:0', dtype=torch.float64)
tensor([-259.0466, -190.5767, -224.0107, -223.6753, -190.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0759, device='cuda:0', dtype=torch.float64)
tensor([-258.5383, -190.4863, -223.9901, -223.5869, -190.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(2.0946, device='cuda:0', dtype=torch.float64)
tensor([-258.4243, -190.3489, -223.4361, -223.2247, -190.9516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0786, device='cuda:0', dtype=torch.float64)
tensor([-258.4162, -190.0907, -222.9982, -223.0864, -191.0026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-258.4965, -189.7341, -222.7680, -223.2299, -191.1922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1062, device='cuda:0', dtype=torch.float64)
tensor([-258.4122, -189.5071, -222.4971, -223.1985, -191.3223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0852, device='cuda:0', dtype=torch.float64)
tensor([-258.1935, -189.3809, -222.0864, -222.9484, -191.3104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0899, device='cuda:0', dtype=torch.float64)
tensor([-257.8249, -189.3213, -221.6973, -222.6113, -191.2198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0805, device='cuda:0', dtype=torch.float64)
tensor([-257.6123, -189.2024, -221.5999, -222.6218, -191.3305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1364, device='cuda:0', dtype=torch.float64)
tensor([-257.1569, -189.2072, -221.2913, -222.2693, -191.2071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-256.6715, -189.2437, -221.0981, -221.9776, -191.1352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-256.2027, -189.2352, -220.7705, -221.5492, -190.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-255.5574, -189.3302, -220.2402, -220.8049, -190.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-254.9145, -189.4033, -219.6673, -220.0201, -190.1979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0823, device='cuda:0', dtype=torch.float64)
tensor([-254.2218, -189.5285, -218.9508, -219.0092, -189.7052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1055, device='cuda:0', dtype=torch.float64)
tensor([-253.4265, -189.7989, -218.4974, -218.0855, -189.3482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1077, device='cuda:0', dtype=torch.float64)
tensor([-252.7071, -190.0117, -218.3936, -217.5582, -189.2053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8921, device='cuda:0', dtype=torch.float64)
tensor([-251.6038, -190.5818, -217.4376, -215.9172, -188.9992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0789, device='cuda:0', dtype=torch.float64)
tensor([-250.6518, -191.0744, -216.7982, -214.6533, -188.9693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1590, device='cuda:0', dtype=torch.float64)
tensor([-250.0040, -191.3374, -216.7936, -214.2418, -189.2067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-249.4533, -191.5095, -217.2769, -214.4242, -189.5811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4708, device='cuda:0', dtype=torch.float64)
tensor([-249.4160, -191.1849, -218.0069, -215.2727, -190.0046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0943, device='cuda:0', dtype=torch.float64)
tensor([-249.5302, -190.9089, -219.2356, -216.6370, -190.6991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1097, device='cuda:0', dtype=torch.float64)
tensor([-249.4691, -190.8395, -220.2549, -217.6254, -191.2879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-249.4362, -190.7902, -221.3340, -218.6410, -191.9346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0856, device='cuda:0', dtype=torch.float64)
tensor([-249.2925, -190.7843, -222.1662, -219.3281, -192.4440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0732, device='cuda:0', dtype=torch.float64)
tensor([-248.9212, -190.8183, -222.6371, -219.5305, -192.6782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0321, device='cuda:0', dtype=torch.float64)
tensor([-248.4909, -190.9548, -222.7795, -219.3340, -192.7812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1047, device='cuda:0', dtype=torch.float64)
tensor([-247.6523, -191.2148, -222.2823, -218.3728, -192.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1044, device='cuda:0', dtype=torch.float64)
tensor([-246.8195, -191.4743, -221.9056, -217.4760, -192.2086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-245.9502, -191.8996, -221.4901, -216.4337, -191.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-245.1660, -192.3627, -221.2197, -215.5816, -191.7726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0907, device='cuda:0', dtype=torch.float64)
tensor([-244.3983, -192.8101, -220.8437, -214.6416, -191.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-243.7327, -193.2418, -220.7104, -213.9674, -191.3753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-243.1341, -193.5808, -220.5376, -213.3762, -191.2695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.8514, device='cuda:0', dtype=torch.float64)
tensor([-242.7490, -193.7052, -219.8015, -212.7586, -191.0312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-242.5034, -193.6825, -219.3461, -212.4990, -190.9185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-242.2861, -193.6283, -219.1069, -212.4477, -190.9160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0765, device='cuda:0', dtype=torch.float64)
tensor([-242.0976, -193.6287, -219.2431, -212.6737, -191.0915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-242.1506, -193.4174, -219.7812, -213.4371, -191.4345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1112, device='cuda:0', dtype=torch.float64)
tensor([-242.2020, -193.1472, -220.5509, -214.4272, -191.8252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0806, device='cuda:0', dtype=torch.float64)
tensor([-242.1175, -193.0131, -221.1587, -215.0920, -192.1353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0883, device='cuda:0', dtype=torch.float64)
tensor([-242.1699, -192.7721, -221.7543, -215.8413, -192.4711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0859, device='cuda:0', dtype=torch.float64)
tensor([-242.0636, -192.6630, -222.3245, -216.4253, -192.8281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0734, device='cuda:0', dtype=torch.float64)
tensor([-242.0803, -192.3324, -222.8276, -217.1190, -193.1214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-242.0223, -192.0498, -223.2062, -217.6214, -193.3189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1131, device='cuda:0', dtype=torch.float64)
tensor([-241.8558, -191.7908, -223.3854, -217.8237, -193.3619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-241.4738, -191.6584, -223.2989, -217.6045, -193.2486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-240.8452, -191.7479, -223.0055, -216.9823, -192.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0687, device='cuda:0', dtype=torch.float64)
tensor([-240.0921, -191.9971, -222.5375, -216.0875, -192.6394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-239.4103, -192.2196, -222.1031, -215.2698, -192.2768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0784, device='cuda:0', dtype=torch.float64)
tensor([-238.7548, -192.5282, -221.6926, -214.4337, -191.9591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0919, device='cuda:0', dtype=torch.float64)
tensor([-238.1049, -192.8964, -221.3561, -213.5800, -191.7204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1017, device='cuda:0', dtype=torch.float64)
tensor([-237.4598, -193.3383, -220.9087, -212.5720, -191.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-236.9664, -193.7029, -220.6137, -211.7902, -191.3161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0676, device='cuda:0', dtype=torch.float64)
tensor([-236.6750, -193.8106, -220.4608, -211.4033, -191.2639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0790, device='cuda:0', dtype=torch.float64)
tensor([-236.3785, -193.8760, -220.2685, -211.0350, -191.1793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0727, device='cuda:0', dtype=torch.float64)
tensor([-236.2389, -193.7719, -220.3499, -211.0876, -191.2439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-236.2583, -193.4575, -220.6391, -211.5236, -191.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0684, device='cuda:0', dtype=torch.float64)
tensor([-236.3589, -193.0373, -220.9462, -212.0859, -191.6117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1062, device='cuda:0', dtype=torch.float64)
tensor([-236.3969, -192.5900, -221.1448, -212.5384, -191.7561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0994, device='cuda:0', dtype=torch.float64)
tensor([-236.2695, -192.3608, -221.2243, -212.7204, -191.8472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-236.0498, -192.2215, -221.2469, -212.7680, -191.9239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0781, device='cuda:0', dtype=torch.float64)
tensor([-235.8032, -192.0918, -221.2153, -212.7586, -191.9344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0878, device='cuda:0', dtype=torch.float64)
tensor([-235.4758, -192.0339, -221.1232, -212.6407, -191.8990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1332, device='cuda:0', dtype=torch.float64)
tensor([-235.2728, -191.9213, -221.0799, -212.7024, -191.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-235.2552, -191.6739, -221.2498, -213.1242, -192.0971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1110, device='cuda:0', dtype=torch.float64)
tensor([-235.3212, -191.3688, -221.4316, -213.6132, -192.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0725, device='cuda:0', dtype=torch.float64)
tensor([-235.3194, -191.0495, -221.5002, -213.9545, -192.3893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0986, device='cuda:0', dtype=torch.float64)
tensor([-235.3005, -190.8323, -221.5739, -214.2478, -192.5320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0802, device='cuda:0', dtype=torch.float64)
tensor([-235.1312, -190.6882, -221.4888, -214.3105, -192.5584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0794, device='cuda:0', dtype=torch.float64)
tensor([-234.6314, -190.7630, -221.0373, -213.7666, -192.3202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1057, device='cuda:0', dtype=torch.float64)
tensor([-233.9856, -190.9974, -220.3949, -212.9008, -191.9617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0743, device='cuda:0', dtype=torch.float64)
tensor([-233.3611, -191.1912, -219.7476, -212.0573, -191.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5337, device='cuda:0', dtype=torch.float64)
tensor([-232.6850, -191.4913, -219.0220, -211.0050, -191.1834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-232.0972, -191.7218, -218.4045, -210.1368, -190.8420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1647, device='cuda:0', dtype=torch.float64)
tensor([-231.6054, -191.7587, -217.7140, -209.3996, -190.5094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3609, device='cuda:0', dtype=torch.float64)
tensor([-231.3777, -191.4855, -217.0713, -209.0439, -190.2704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-231.2463, -191.1439, -216.6508, -208.9684, -190.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-231.1880, -190.7704, -216.6389, -209.3289, -190.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1535, device='cuda:0', dtype=torch.float64)
tensor([-231.4162, -190.2597, -217.4294, -210.4995, -190.6899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0720, device='cuda:0', dtype=torch.float64)
tensor([-231.7617, -189.7912, -218.5985, -211.9307, -191.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-232.0208, -189.5412, -219.5586, -213.0129, -191.8892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-232.2873, -189.3592, -220.3583, -213.9486, -192.4123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-232.4317, -189.2766, -220.9554, -214.6117, -192.8126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0709, device='cuda:0', dtype=torch.float64)
tensor([-232.1956, -189.4086, -221.0430, -214.5868, -192.8881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0953, device='cuda:0', dtype=torch.float64)
tensor([-231.6802, -189.7438, -220.8308, -214.0738, -192.7753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-231.0294, -190.1735, -220.4499, -213.3376, -192.5670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5836, device='cuda:0', dtype=torch.float64)
tensor([-230.2731, -190.6436, -219.7831, -212.2665, -192.1998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0613, device='cuda:0', dtype=torch.float64)
tensor([-229.5413, -191.1471, -219.0928, -211.1503, -191.8414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-228.9713, -191.5258, -218.5041, -210.2403, -191.5636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5691, device='cuda:0', dtype=torch.float64)
tensor([-228.6845, -191.7100, -218.0826, -209.6881, -191.3578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0695, device='cuda:0', dtype=torch.float64)
tensor([-228.4519, -191.8717, -217.6991, -209.1615, -191.1556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-228.2158, -192.0303, -217.2938, -208.6236, -190.9347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-227.9899, -192.1947, -217.0363, -208.1958, -190.7525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-227.8123, -192.3303, -216.9808, -207.9531, -190.6987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0907, device='cuda:0', dtype=torch.float64)
tensor([-227.5989, -192.4697, -216.9071, -207.6704, -190.6573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-227.3891, -192.5591, -216.7690, -207.3561, -190.5898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0723, device='cuda:0', dtype=torch.float64)
tensor([-227.2864, -192.5166, -216.8286, -207.2945, -190.5455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0613, device='cuda:0', dtype=torch.float64)
tensor([-227.2238, -192.4220, -216.9761, -207.3784, -190.6046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0644, device='cuda:0', dtype=torch.float64)
tensor([-227.0685, -192.4748, -216.9507, -207.2290, -190.5906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0758, device='cuda:0', dtype=torch.float64)
tensor([-226.9056, -192.5804, -217.1000, -207.1940, -190.6879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0717, device='cuda:0', dtype=torch.float64)
tensor([-226.7370, -192.5817, -217.2680, -207.2613, -190.7971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1497, device='cuda:0', dtype=torch.float64)
tensor([-226.5752, -192.4824, -217.3189, -207.3161, -190.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1622, device='cuda:0', dtype=torch.float64)
tensor([-226.3685, -192.4008, -217.2480, -207.2421, -190.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-226.3881, -192.1110, -217.5898, -207.6825, -191.0322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([-226.4467, -191.8337, -217.9896, -208.1273, -191.2525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-226.5802, -191.5587, -218.5610, -208.7979, -191.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0735, device='cuda:0', dtype=torch.float64)
tensor([-226.5567, -191.4212, -218.7830, -209.0379, -191.7541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0725, device='cuda:0', dtype=torch.float64)
tensor([-226.3462, -191.4990, -218.8144, -208.8961, -191.8121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1452, device='cuda:0', dtype=torch.float64)
tensor([-226.0912, -191.5638, -218.6716, -208.6188, -191.7877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1036, device='cuda:0', dtype=torch.float64)
tensor([-225.9130, -191.6267, -218.7219, -208.5273, -191.8653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.7912, device='cuda:0', dtype=torch.float64)
tensor([-225.6103, -191.8817, -218.3715, -207.8933, -191.7172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0886, device='cuda:0', dtype=torch.float64)
tensor([-225.2663, -192.1851, -217.9171, -207.1138, -191.4999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-224.9044, -192.5183, -217.4477, -206.3263, -191.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1085, device='cuda:0', dtype=torch.float64)
tensor([-224.6919, -192.8004, -217.2959, -205.9068, -191.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-224.5530, -192.9663, -217.2293, -205.6838, -191.2920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0789, device='cuda:0', dtype=torch.float64)
tensor([-224.4243, -193.1005, -217.2313, -205.5427, -191.3475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-224.2802, -193.2390, -217.1824, -205.3764, -191.4024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-224.2871, -193.2564, -217.4615, -205.5865, -191.6477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([-224.2328, -193.4934, -217.7124, -205.5917, -191.8628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-224.1788, -193.6971, -218.0596, -205.7224, -192.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.8276, device='cuda:0', dtype=torch.float64)
tensor([-224.3924, -193.7137, -218.7297, -206.2918, -192.5907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-224.5533, -193.7459, -219.2676, -206.7508, -193.0095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-224.6510, -193.8799, -219.6899, -207.0542, -193.3730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-224.7082, -194.0095, -219.9984, -207.2675, -193.6604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1512, device='cuda:0', dtype=torch.float64)
tensor([-224.6508, -194.1379, -220.0540, -207.2214, -193.7941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-224.5731, -194.2689, -220.1595, -207.2190, -193.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0744, device='cuda:0', dtype=torch.float64)
tensor([-224.3285, -194.6176, -220.0531, -206.8751, -193.9707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-223.9551, -195.0970, -219.6258, -206.1269, -193.8009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-223.5262, -195.5652, -219.0404, -205.2501, -193.5577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-223.1684, -195.8989, -218.5821, -204.5904, -193.3801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0500, device='cuda:0', dtype=torch.float64)
tensor([-222.8557, -196.2540, -218.0907, -203.8580, -193.2005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0601, device='cuda:0', dtype=torch.float64)
tensor([-222.7192, -196.4169, -218.0070, -203.6173, -193.2146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-222.6403, -196.4272, -218.0355, -203.6100, -193.3279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1358, device='cuda:0', dtype=torch.float64)
tensor([-222.5691, -196.4685, -218.0447, -203.5512, -193.4301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-222.6795, -196.2432, -218.4515, -204.0331, -193.6623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1353, device='cuda:0', dtype=torch.float64)
tensor([-222.9436, -195.9839, -219.1864, -204.8208, -194.0367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0743, device='cuda:0', dtype=torch.float64)
tensor([-223.2344, -195.6904, -219.9161, -205.6379, -194.4226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-223.5707, -195.2708, -220.5830, -206.4974, -194.7846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-223.9249, -194.9058, -221.2492, -207.3240, -195.1230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-224.1633, -194.5452, -221.6490, -207.8853, -195.2618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-224.0942, -194.4462, -221.5390, -207.7460, -195.1139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-223.8122, -194.5041, -221.1322, -207.1982, -194.7906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0775, device='cuda:0', dtype=torch.float64)
tensor([-223.5554, -194.4957, -220.7597, -206.7343, -194.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-223.2683, -194.5949, -220.4212, -206.2486, -194.2538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-222.9923, -194.7663, -220.2065, -205.8387, -194.1006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-222.7334, -194.9449, -220.0279, -205.4629, -193.9661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2511, device='cuda:0', dtype=torch.float64)
tensor([-222.6555, -194.8589, -219.9510, -205.4614, -193.9285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-222.5357, -194.8823, -219.8980, -205.4169, -193.9256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-222.3961, -195.0290, -219.8818, -205.3372, -193.9857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-222.2050, -195.1783, -219.7626, -205.1541, -193.9762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-222.0304, -195.2634, -219.6925, -205.0452, -193.9583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-221.9164, -195.3145, -219.6841, -205.0281, -193.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-221.8303, -195.2872, -219.7117, -205.1105, -194.0384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-221.7217, -195.2635, -219.6330, -205.1009, -194.0043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1414, device='cuda:0', dtype=torch.float64)
tensor([-221.5926, -195.3558, -219.4953, -204.9481, -193.9735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0565, device='cuda:0', dtype=torch.float64)
tensor([-221.4080, -195.4845, -219.2249, -204.6555, -193.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-221.1526, -195.7000, -218.7973, -204.1839, -193.7415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1006, device='cuda:0', dtype=torch.float64)
tensor([-220.8230, -195.9995, -218.2410, -203.5311, -193.4933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-220.4841, -196.2411, -217.5835, -202.8426, -193.2012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-220.2734, -196.3477, -217.2307, -202.5284, -193.0286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-220.1350, -196.3893, -217.0287, -202.3920, -192.9339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-220.0793, -196.2945, -217.0748, -202.5676, -192.9472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-220.0111, -196.2705, -217.0930, -202.6687, -192.9570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0653, device='cuda:0', dtype=torch.float64)
tensor([-219.9154, -196.2644, -217.0711, -202.7257, -192.9482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-219.8859, -196.1016, -217.2506, -203.0637, -193.0179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0745, device='cuda:0', dtype=torch.float64)
tensor([-219.8822, -195.8899, -217.4691, -203.4564, -193.1228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0918, device='cuda:0', dtype=torch.float64)
tensor([-219.9959, -195.5333, -217.8165, -204.0466, -193.2977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0937, device='cuda:0', dtype=torch.float64)
tensor([-220.1911, -195.1875, -218.3360, -204.7953, -193.5418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-220.3220, -194.9415, -218.6812, -205.3088, -193.7183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-220.4541, -194.6223, -218.8887, -205.7439, -193.8064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-220.5368, -194.3694, -218.9967, -206.0566, -193.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5963, device='cuda:0', dtype=torch.float64)
tensor([-220.9085, -194.0247, -219.5700, -206.7829, -194.0006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-221.0870, -193.8631, -219.7360, -207.0043, -193.9398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1499, device='cuda:0', dtype=torch.float64)
tensor([-221.0422, -193.9853, -219.6038, -206.7681, -193.8046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-220.7373, -194.2988, -219.0632, -206.0450, -193.5138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0613, device='cuda:0', dtype=torch.float64)
tensor([-220.3989, -194.7015, -218.5358, -205.3138, -193.2738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-220.0791, -195.0972, -217.9952, -204.5782, -193.0696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-219.7499, -195.5268, -217.3248, -203.6883, -192.8123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-219.4492, -196.0209, -216.6914, -202.8145, -192.6064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-219.2802, -196.2292, -216.3057, -202.3582, -192.4454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-219.1295, -196.4727, -215.9113, -201.8484, -192.2809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0587, device='cuda:0', dtype=torch.float64)
tensor([-219.0329, -196.7118, -215.7578, -201.5521, -192.2321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-219.0938, -196.6628, -216.0694, -201.8465, -192.3586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-219.2133, -196.5470, -216.5140, -202.2887, -192.5648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-219.3396, -196.4062, -217.0115, -202.7968, -192.7751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-219.5307, -196.2190, -217.6208, -203.4382, -193.0864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-219.7211, -196.0519, -218.1725, -204.0343, -193.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-220.0139, -195.8144, -218.8201, -204.7581, -193.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-220.2426, -195.6373, -219.3124, -205.3194, -193.9395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5154, device='cuda:0', dtype=torch.float64)
tensor([-220.3379, -195.5842, -219.3652, -205.3047, -193.9424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-220.2989, -195.5793, -219.1568, -205.0275, -193.8275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-220.1747, -195.6495, -218.8233, -204.5903, -193.6544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-220.0050, -195.7173, -218.4598, -204.1482, -193.4813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-219.9021, -195.7577, -218.2477, -203.8875, -193.3748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-219.7469, -195.7992, -217.8543, -203.4665, -193.1504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-219.6017, -195.8426, -217.4800, -203.0847, -192.9483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-219.4391, -195.9638, -217.1757, -202.7264, -192.8250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1163, device='cuda:0', dtype=torch.float64)
tensor([-219.1548, -196.1967, -216.5290, -201.9665, -192.5366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-218.9770, -196.3725, -216.0994, -201.4304, -192.3560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-218.8624, -196.4762, -215.8708, -201.1334, -192.2840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-218.6784, -196.6514, -215.5474, -200.7056, -192.1742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-218.4591, -196.9147, -215.1368, -200.1791, -192.0417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-218.2323, -197.1318, -214.7956, -199.7622, -191.9528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0662, device='cuda:0', dtype=torch.float64)
tensor([-218.1798, -196.9760, -215.0269, -200.0684, -192.0434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-218.1159, -196.8285, -215.2562, -200.3909, -192.1802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-218.1819, -196.5485, -215.8167, -201.0766, -192.4423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-218.3518, -196.1857, -216.6371, -202.0594, -192.8509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-218.7383, -195.7345, -217.7877, -203.4128, -193.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-219.1422, -195.2935, -218.8027, -204.6661, -193.9329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0691, device='cuda:0', dtype=torch.float64)
tensor([-219.3739, -195.0611, -219.4153, -205.4217, -194.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-219.4427, -194.9532, -219.7038, -205.8006, -194.4545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-219.1829, -195.0891, -219.4429, -205.5229, -194.3752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0524, device='cuda:0', dtype=torch.float64)
tensor([-218.7424, -195.4059, -218.8504, -204.8282, -194.1493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(3.4299, device='cuda:0', dtype=torch.float64)
tensor([-217.7315, -196.4762, -217.5747, -203.2140, -193.8146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-216.8821, -197.4847, -216.4073, -201.7406, -193.5840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0798, device='cuda:0', dtype=torch.float64)
tensor([-216.0705, -198.4318, -215.0342, -200.1478, -193.2701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0845, device='cuda:0', dtype=torch.float64)
tensor([-215.3713, -199.4685, -213.4872, -198.3767, -192.9717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-214.8940, -200.3704, -212.1658, -196.9131, -192.7899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-214.6662, -200.7541, -211.9558, -196.6625, -192.8913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-214.6280, -200.6141, -212.6702, -197.4485, -193.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-214.8708, -199.9507, -214.1715, -199.2444, -193.7400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-215.2578, -199.3090, -215.5114, -200.9148, -194.2338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-215.7959, -198.5698, -216.9205, -202.7026, -194.7387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-216.3684, -197.8115, -218.1583, -204.3927, -195.2227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-216.7068, -197.3105, -218.8673, -205.4874, -195.5007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0667, device='cuda:0', dtype=torch.float64)
tensor([-216.8858, -197.0034, -219.2450, -206.1733, -195.6523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0582, device='cuda:0', dtype=torch.float64)
tensor([-216.8636, -196.8490, -219.2094, -206.3620, -195.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-216.5553, -196.9682, -218.7409, -205.9936, -195.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-216.1299, -197.2089, -218.0391, -205.3619, -195.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-215.5185, -197.6978, -216.9389, -204.2602, -194.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-214.9021, -198.3342, -215.6702, -202.9061, -194.2898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2633, device='cuda:0', dtype=torch.float64)
tensor([-214.4469, -198.8478, -214.5350, -201.7278, -193.8838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-214.1149, -199.2309, -213.6438, -200.8227, -193.5739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-213.8635, -199.5250, -212.9678, -200.1535, -193.3613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-213.6977, -199.6028, -212.5312, -199.7721, -193.2027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-213.5696, -199.5831, -212.3081, -199.6145, -193.1124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-213.4284, -199.6076, -212.0997, -199.4295, -193.0440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-213.3266, -199.5237, -212.2363, -199.5821, -193.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-213.3473, -199.2704, -212.7773, -200.1497, -193.3084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-213.4352, -198.9581, -213.4675, -200.8790, -193.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0805, device='cuda:0', dtype=torch.float64)
tensor([-213.5731, -198.6129, -214.2342, -201.7119, -193.8496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0805, device='cuda:0', dtype=torch.float64)
tensor([-213.6352, -198.4472, -214.7331, -202.2151, -194.0857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-213.7249, -198.3383, -215.2205, -202.6566, -194.3658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-213.8195, -198.2920, -215.7154, -203.0556, -194.6917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0591, device='cuda:0', dtype=torch.float64)
tensor([-213.8332, -198.3692, -215.9948, -203.2119, -194.9208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-213.6867, -198.5648, -215.8742, -202.9278, -194.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-213.4315, -198.8270, -215.5045, -202.3996, -194.8952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-213.1423, -199.2020, -215.0353, -201.7003, -194.8149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1037, device='cuda:0', dtype=torch.float64)
tensor([-212.8564, -199.5279, -214.3950, -200.8939, -194.5976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-212.5790, -199.8856, -213.7081, -200.0382, -194.4008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-212.3795, -200.1556, -213.1284, -199.3215, -194.2501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-212.2233, -200.4185, -212.6455, -198.6661, -194.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-212.0711, -200.7344, -212.0390, -197.8845, -193.9955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-212.0353, -200.8485, -211.7704, -197.5145, -193.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1284, device='cuda:0', dtype=torch.float64)
tensor([-212.0753, -200.8113, -211.9034, -197.5910, -194.0262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-212.1136, -200.7862, -211.9943, -197.6320, -194.0902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-212.2998, -200.4811, -212.7009, -198.3572, -194.3575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-212.6478, -199.9682, -213.6498, -199.3694, -194.6477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2670, device='cuda:0', dtype=torch.float64)
tensor([-212.8842, -199.5740, -214.1644, -200.0092, -194.8025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-212.9834, -199.3479, -214.2291, -200.1685, -194.8084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-212.9969, -199.1796, -214.1878, -200.2405, -194.8167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-213.0645, -198.9440, -214.3052, -200.5093, -194.8486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-213.1383, -198.7248, -214.4342, -200.7642, -194.8788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-213.2497, -198.4624, -214.6652, -201.1613, -194.9495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-213.2490, -198.3149, -214.6736, -201.3210, -194.9907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-213.1826, -198.2580, -214.5310, -201.2981, -194.9950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-213.0088, -198.3364, -214.1433, -200.9766, -194.9322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-212.8116, -198.4833, -213.6593, -200.5231, -194.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-212.6293, -198.6241, -213.1738, -200.0945, -194.7445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-212.4790, -198.6361, -212.7615, -199.7973, -194.6143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-212.4332, -198.5032, -212.7507, -199.9074, -194.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-212.3560, -198.4021, -212.5662, -199.8546, -194.5762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-212.3421, -198.2319, -212.6240, -200.0365, -194.6067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0813, device='cuda:0', dtype=torch.float64)
tensor([-212.3828, -197.9892, -212.9402, -200.4803, -194.6757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-212.5666, -197.6953, -213.6897, -201.3111, -194.8880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-212.5912, -197.5867, -213.8824, -201.5815, -194.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-212.4573, -197.6341, -213.5750, -201.3496, -194.7913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1287, device='cuda:0', dtype=torch.float64)
tensor([-212.4559, -197.6114, -213.6377, -201.4336, -194.7979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-212.4333, -197.6049, -213.5936, -201.4296, -194.7570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-212.4379, -197.5472, -213.5772, -201.4677, -194.6968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5176, device='cuda:0', dtype=torch.float64)
tensor([-212.1860, -197.6988, -212.7710, -200.7021, -194.4103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-212.0258, -197.8705, -212.2202, -200.1514, -194.2470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0812, device='cuda:0', dtype=torch.float64)
tensor([-211.9231, -197.9987, -211.9340, -199.8320, -194.1486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-211.8592, -198.0947, -211.8787, -199.7240, -194.1403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-211.8979, -198.0295, -212.1975, -199.9875, -194.2234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-211.9091, -198.0449, -212.3588, -200.0797, -194.2343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-212.0749, -197.8653, -213.0722, -200.7395, -194.4327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-212.3056, -197.6538, -213.9350, -201.5535, -194.6861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1701, device='cuda:0', dtype=torch.float64)
tensor([-212.5975, -197.4547, -214.8930, -202.4526, -194.9771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-212.7993, -197.4035, -215.5283, -202.9803, -195.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-213.0149, -197.3248, -216.1710, -203.5874, -195.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-213.1459, -197.2799, -216.5475, -203.9882, -195.6190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-213.0664, -197.4154, -216.4467, -203.8746, -195.6367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-212.9798, -197.4995, -216.2357, -203.6798, -195.5763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-212.7862, -197.6279, -215.6725, -203.1668, -195.3406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-212.4964, -197.8789, -214.8772, -202.4127, -195.0506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-212.2146, -198.2008, -214.0974, -201.6266, -194.7886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-211.8993, -198.6308, -213.1226, -200.6222, -194.4765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-211.6057, -199.1354, -212.0835, -199.5589, -194.1655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-211.3951, -199.5754, -211.1540, -198.6266, -193.9079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-211.2457, -199.9622, -210.3874, -197.8693, -193.7361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-211.1684, -200.2378, -209.9027, -197.3979, -193.6169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-211.2007, -200.3335, -209.8011, -197.2729, -193.5727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-211.3018, -200.2570, -210.0609, -197.5102, -193.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-211.4661, -199.9692, -210.7060, -198.1440, -193.7636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-211.7405, -199.5601, -211.7771, -199.1603, -194.0173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1433, device='cuda:0', dtype=torch.float64)
tensor([-212.1333, -199.0620, -212.8005, -200.1786, -194.2369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-212.4649, -198.6152, -213.6260, -201.0595, -194.4131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-212.7857, -198.2041, -214.3899, -201.8630, -194.5880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-213.0712, -197.7741, -215.1778, -202.7641, -194.8075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-213.3184, -197.4025, -215.8226, -203.5793, -195.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-213.4393, -197.2259, -216.2060, -204.0805, -195.1727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6604, device='cuda:0', dtype=torch.float64)
tensor([-213.5785, -197.1347, -216.6072, -204.5493, -195.3003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-213.5281, -197.2660, -216.5994, -204.5518, -195.3195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-213.3346, -197.4735, -216.2944, -204.2767, -195.2655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-213.0067, -197.7757, -215.6690, -203.6824, -195.0952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-212.6014, -198.1673, -214.7396, -202.8109, -194.8023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-212.3465, -198.3986, -214.0886, -202.2507, -194.5937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-212.0642, -198.6528, -213.3511, -201.6260, -194.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-211.7634, -198.9737, -212.6075, -200.9448, -194.1220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-211.5370, -199.1965, -211.9783, -200.4094, -193.9255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-211.4212, -199.2850, -211.6375, -200.1435, -193.8191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-211.3799, -199.2333, -211.5243, -200.1311, -193.7573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0751, device='cuda:0', dtype=torch.float64)
tensor([-211.3655, -199.0997, -211.5148, -200.2363, -193.7206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-211.5005, -198.7051, -212.0582, -200.9131, -193.8644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-211.6274, -198.3839, -212.5442, -201.5188, -194.0055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-211.7078, -198.1471, -212.9057, -201.9865, -194.1308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-211.7406, -197.9869, -213.1300, -202.3160, -194.2178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-211.6797, -197.9378, -213.0865, -202.3432, -194.2232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-211.7034, -197.7898, -213.2445, -202.5740, -194.3097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-211.6468, -197.7693, -213.2454, -202.6096, -194.3718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-211.5601, -197.7884, -213.1754, -202.5740, -194.4155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-211.4431, -197.8882, -213.0192, -202.4166, -194.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-211.2473, -198.1234, -212.7390, -202.0869, -194.4135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-211.0328, -198.4145, -212.3287, -201.5976, -194.3497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-210.8607, -198.7621, -212.0122, -201.1603, -194.3225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-210.6998, -199.1052, -211.7579, -200.7834, -194.3550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-210.5795, -199.4085, -211.7406, -200.6379, -194.4764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-210.5160, -199.6488, -211.8814, -200.6477, -194.6369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1883, device='cuda:0', dtype=torch.float64)
tensor([-210.5905, -199.5501, -212.3363, -201.1190, -194.8498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-210.6744, -199.4474, -212.7435, -201.5507, -195.0143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-210.6592, -199.4440, -212.8282, -201.6633, -195.0550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-210.7125, -199.3724, -213.0560, -201.9194, -195.1245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-210.7852, -199.3077, -213.2960, -202.1709, -195.2208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-210.8330, -199.2696, -213.4172, -202.3254, -195.2668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-210.7725, -199.3716, -213.2522, -202.1628, -195.2321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0855, device='cuda:0', dtype=torch.float64)
tensor([-210.6705, -199.5623, -212.8700, -201.7513, -195.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-210.5358, -199.8027, -212.3313, -201.1907, -194.9642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-210.4123, -199.9876, -211.7612, -200.6361, -194.7771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0683, device='cuda:0', dtype=torch.float64)
tensor([-210.3162, -200.1714, -211.2889, -200.1781, -194.6240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-210.2857, -200.2064, -210.9746, -199.9245, -194.5287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-210.2736, -200.1558, -210.7781, -199.8230, -194.4490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1733, device='cuda:0', dtype=torch.float64)
tensor([-210.2459, -200.1920, -210.5060, -199.6008, -194.4378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0838, device='cuda:0', dtype=torch.float64)
tensor([-210.2535, -200.1738, -210.5718, -199.6682, -194.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-210.2724, -200.0486, -210.8265, -199.9518, -194.7529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-210.3617, -199.8252, -211.3406, -200.5068, -194.9897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4407, device='cuda:0', dtype=torch.float64)
tensor([-210.4463, -199.6207, -211.8383, -201.0604, -195.2495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-210.5814, -199.3579, -212.3450, -201.6607, -195.4965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-210.6574, -199.1390, -212.5886, -202.0530, -195.6281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-210.6375, -199.0985, -212.5457, -202.1021, -195.6647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-210.5876, -199.1167, -212.3483, -201.9760, -195.6456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-210.5167, -199.1862, -212.1495, -201.8403, -195.6440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-210.4832, -199.2169, -212.0790, -201.8099, -195.6960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-210.5229, -199.1501, -212.2407, -202.0217, -195.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-210.5867, -199.0677, -212.4449, -202.2713, -195.9451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-210.6104, -199.0120, -212.5033, -202.3997, -195.9885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-210.5354, -199.1281, -212.2823, -202.2023, -195.9465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-210.4266, -199.3219, -211.9636, -201.8963, -195.8706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-210.3023, -199.5460, -211.5500, -201.4959, -195.7746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-210.2174, -199.6745, -211.2764, -201.2612, -195.6919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-210.1792, -199.7334, -211.0614, -201.1107, -195.6212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-210.1693, -199.7836, -211.1110, -201.1665, -195.6509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-210.1096, -199.8995, -210.9129, -201.0134, -195.6119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0638, device='cuda:0', dtype=torch.float64)
tensor([-210.1264, -199.9340, -211.0510, -201.1292, -195.6788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-210.1299, -200.0218, -211.1823, -201.1886, -195.7436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-210.2089, -200.0065, -211.7130, -201.6150, -195.9357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-210.2560, -199.9703, -211.9295, -201.8111, -196.0127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-210.3559, -199.8924, -212.3304, -202.1631, -196.1420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-210.3246, -199.9978, -212.2912, -202.0967, -196.1083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-210.2930, -200.0799, -212.2552, -202.0520, -196.0550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-210.2968, -200.1039, -212.3568, -202.1653, -196.0622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-210.2427, -200.2120, -212.2892, -202.1010, -196.0243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-210.1188, -200.4446, -211.9450, -201.7640, -195.9177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-209.9810, -200.6896, -211.4979, -201.3560, -195.7708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-209.8428, -200.9278, -210.8800, -200.8246, -195.5638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-209.8055, -200.9791, -210.6601, -200.6854, -195.4973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-209.8719, -200.8603, -210.8826, -200.9577, -195.5616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-209.9625, -200.7428, -211.1409, -201.2551, -195.6331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-210.0410, -200.6281, -211.4426, -201.5806, -195.7464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-210.0820, -200.5765, -211.5038, -201.6973, -195.7910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-210.0430, -200.6183, -211.2371, -201.5114, -195.7188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1548, device='cuda:0', dtype=torch.float64)
tensor([-209.9932, -200.6806, -210.9626, -201.3320, -195.6693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-210.0579, -200.5551, -211.0591, -201.4999, -195.7173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-210.1384, -200.3747, -211.2962, -201.8111, -195.8059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-210.2135, -200.1860, -211.5032, -202.0904, -195.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-210.2994, -199.9773, -211.7153, -202.3717, -195.9311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-210.3561, -199.7834, -211.8008, -202.5507, -195.9281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-210.4065, -199.5687, -211.8660, -202.7149, -195.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-210.4271, -199.4438, -211.8507, -202.7584, -195.9491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-210.4723, -199.2917, -211.9146, -202.8734, -195.9749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-210.3965, -199.3393, -211.6278, -202.6149, -195.9127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-210.3074, -199.4122, -211.3031, -202.3055, -195.8123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-210.2289, -199.4979, -211.0592, -202.0648, -195.7175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-210.0676, -199.7621, -210.5236, -201.5224, -195.5484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-209.9424, -199.9627, -210.1658, -201.1486, -195.4565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-209.8105, -200.1593, -209.7457, -200.7457, -195.3043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-209.7084, -200.2446, -209.5222, -200.5489, -195.2233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-209.6117, -200.2932, -209.4906, -200.5154, -195.2219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-209.5250, -200.2800, -209.4407, -200.5076, -195.2241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-209.4594, -200.2176, -209.3945, -200.5267, -195.2188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-209.4185, -200.1376, -209.5225, -200.6924, -195.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-209.4365, -199.9498, -209.8869, -201.1118, -195.3931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-209.4792, -199.7799, -210.3042, -201.5608, -195.5761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-209.4912, -199.6276, -210.5220, -201.8510, -195.6895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-209.4620, -199.5560, -210.5184, -201.9193, -195.7372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-209.4395, -199.5412, -210.6588, -202.0677, -195.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-209.4108, -199.5481, -210.7335, -202.1455, -195.8908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0569, device='cuda:0', dtype=torch.float64)
tensor([-209.4903, -199.3859, -211.1833, -202.6149, -196.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-209.5522, -199.2256, -211.4641, -202.9556, -196.1831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-209.5008, -199.1851, -211.3343, -202.9021, -196.1716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-209.4381, -199.1619, -211.0803, -202.7234, -196.0816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-209.3800, -199.1352, -210.7925, -202.5143, -196.0057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2246, device='cuda:0', dtype=torch.float64)
tensor([-209.2063, -199.2331, -210.0286, -201.8587, -195.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-209.0365, -199.3449, -209.1585, -201.0974, -195.4600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-208.8932, -199.5248, -208.3539, -200.3711, -195.2004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-208.7844, -199.7186, -207.6999, -199.7795, -195.0149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-208.7850, -199.7725, -207.5140, -199.6276, -194.9502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-208.8502, -199.7000, -207.6532, -199.7793, -194.9721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-208.9947, -199.4939, -208.2301, -200.3394, -195.0902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0864, device='cuda:0', dtype=torch.float64)
tensor([-209.1855, -199.2272, -209.2373, -201.2497, -195.3296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-209.3384, -199.0587, -210.1110, -202.0237, -195.5690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-209.5319, -198.8955, -211.0751, -202.8566, -195.8177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-209.7576, -198.6545, -211.9636, -203.6610, -196.0218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-209.8935, -198.5369, -212.4716, -204.0985, -196.1055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-209.8942, -198.6200, -212.6283, -204.1825, -196.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-209.7904, -198.8672, -212.6104, -204.0624, -196.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-209.6030, -199.2344, -212.2777, -203.6554, -196.0380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-209.3956, -199.6291, -211.8252, -203.1479, -195.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-209.1182, -200.1488, -211.2514, -202.5176, -195.8331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-208.8179, -200.7608, -210.5781, -201.7805, -195.7320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-208.5376, -201.3599, -209.8001, -200.9958, -195.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-208.2795, -201.9525, -209.1277, -200.2877, -195.5163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-208.1371, -202.3171, -208.7987, -199.9482, -195.4681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-207.9835, -202.6747, -208.5843, -199.6856, -195.4749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-207.8370, -202.9663, -208.5169, -199.5773, -195.4964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-207.7445, -203.1304, -208.5986, -199.6417, -195.5426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-207.6671, -203.2247, -208.7472, -199.7760, -195.6098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-207.6874, -203.1630, -209.3308, -200.3186, -195.8232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-207.6730, -203.2107, -209.5703, -200.5383, -195.9603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-207.7271, -203.0883, -209.9546, -200.9498, -196.0798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-207.7688, -203.0260, -210.3233, -201.2977, -196.2362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-207.7570, -203.0957, -210.4549, -201.3829, -196.3227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-207.7293, -203.1543, -210.3449, -201.2822, -196.3086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-207.7089, -203.1640, -210.2375, -201.2002, -196.2695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1213, device='cuda:0', dtype=torch.float64)
tensor([-207.7128, -203.1449, -210.3999, -201.2973, -196.2873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-207.7260, -203.1362, -210.5208, -201.3594, -196.2753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-207.7038, -203.2341, -210.4179, -201.1853, -196.1715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-207.7688, -203.1490, -210.7741, -201.4124, -196.2202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5288, device='cuda:0', dtype=torch.float64)
tensor([-207.8297, -203.0793, -210.8528, -201.3980, -196.1747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-207.9040, -202.9268, -211.0781, -201.5413, -196.2115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-207.9431, -202.8461, -211.2091, -201.5655, -196.2569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-207.9572, -202.8046, -211.2296, -201.5064, -196.2676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-208.0110, -202.6392, -211.3214, -201.5935, -196.2714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-208.1086, -202.3768, -211.6283, -201.9200, -196.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-208.1675, -202.1798, -211.9005, -202.2116, -196.4917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-208.1158, -202.2752, -211.7882, -202.1150, -196.5293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-208.1485, -202.1141, -212.0060, -202.2883, -196.4981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-208.1202, -202.1088, -212.0238, -202.2542, -196.4545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-207.9643, -202.4216, -211.5920, -201.7862, -196.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-207.8047, -202.8117, -211.0770, -201.2310, -196.1595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-207.7108, -203.0421, -210.7700, -200.9249, -196.0671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-207.6627, -203.0980, -210.6915, -200.8607, -196.0327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-207.6049, -203.1820, -210.6065, -200.8225, -196.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-207.5727, -203.1584, -210.7179, -200.9895, -196.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-207.5586, -203.1206, -210.8980, -201.2225, -196.2119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-207.5743, -202.9702, -211.1134, -201.5272, -196.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-207.6406, -202.7097, -211.6016, -202.0888, -196.5430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-207.7334, -202.4540, -211.9554, -202.5300, -196.7034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-207.7679, -202.3175, -212.0486, -202.7226, -196.8066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-207.7308, -202.2969, -211.7645, -202.5431, -196.7703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-207.6838, -202.2786, -211.2853, -202.1932, -196.6464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-207.6265, -202.2443, -210.8334, -201.8744, -196.5216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1082, device='cuda:0', dtype=torch.float64)
tensor([-207.5676, -202.2225, -210.4173, -201.5727, -196.3967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-207.5487, -202.1153, -210.1200, -201.4018, -196.3165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-207.5481, -201.9703, -209.9893, -201.3545, -196.2924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-207.5014, -201.9083, -209.7413, -201.1771, -196.2397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-207.4792, -201.7563, -209.5733, -201.1082, -196.1886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-207.4218, -201.6857, -209.3223, -200.9277, -196.1334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-207.3901, -201.5693, -209.1626, -200.8382, -196.1100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-207.2924, -201.6042, -208.7917, -200.5306, -196.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-207.1807, -201.7196, -208.3019, -200.0919, -195.9244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-207.0702, -201.7911, -207.9865, -199.8197, -195.8552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-206.9813, -201.8613, -207.8157, -199.6706, -195.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-206.9367, -201.8509, -207.9502, -199.7895, -195.8693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-206.9318, -201.7370, -208.3523, -200.1593, -195.9781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-206.9741, -201.5481, -209.1251, -200.8664, -196.2017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-207.0112, -201.4558, -209.9220, -201.5616, -196.4799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-207.0296, -201.4270, -210.4795, -202.0439, -196.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-207.0138, -201.4842, -210.6778, -202.1941, -196.8294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-206.9903, -201.5552, -210.7698, -202.2738, -196.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-206.9217, -201.7262, -210.6958, -202.1831, -196.9019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-206.8311, -201.9766, -210.4995, -201.9440, -196.8832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-206.7312, -202.2395, -210.2303, -201.6413, -196.8307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-206.6227, -202.5359, -209.8432, -201.2089, -196.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-206.5075, -202.8710, -209.4447, -200.7321, -196.6099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-206.4371, -203.1258, -209.1520, -200.3640, -196.5276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-206.3983, -203.3088, -209.0756, -200.1878, -196.4982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-206.3479, -203.5332, -208.8518, -199.8756, -196.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-206.3646, -203.5988, -208.8692, -199.8092, -196.3875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-206.3690, -203.6770, -208.9730, -199.8223, -196.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-206.3765, -203.7270, -209.0848, -199.8617, -196.4345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-206.4713, -203.5239, -209.6567, -200.3555, -196.5354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-206.5648, -203.3687, -210.1535, -200.7820, -196.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-206.6588, -203.2095, -210.6702, -201.2397, -196.7611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-206.7314, -203.1099, -211.0623, -201.5657, -196.8572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-206.7477, -203.1498, -211.1062, -201.5420, -196.8474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-206.7588, -203.1530, -211.1051, -201.4845, -196.8351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-206.7141, -203.2997, -210.6973, -201.0438, -196.6947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-206.7100, -203.3224, -210.5087, -200.8243, -196.6253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-206.6893, -203.4283, -210.1715, -200.4727, -196.5472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-206.7432, -203.2681, -210.2526, -200.5722, -196.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-206.8008, -203.0378, -210.3062, -200.6900, -196.5247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-206.8200, -202.8832, -210.2032, -200.6669, -196.4785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3968, device='cuda:0', dtype=torch.float64)
tensor([-207.0014, -202.3693, -211.2533, -201.6223, -196.7870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-207.1060, -202.1204, -211.7873, -202.0706, -196.9538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-207.1446, -202.0069, -211.8877, -202.1365, -196.9644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-207.1246, -202.0249, -211.6809, -201.9192, -196.8824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-207.0847, -202.0759, -211.4063, -201.6617, -196.7738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-207.0338, -202.1930, -211.0064, -201.2982, -196.6452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0659, device='cuda:0', dtype=torch.float64)
tensor([-206.9149, -202.5136, -210.3907, -200.6847, -196.5147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-206.8198, -202.7704, -209.9468, -200.2536, -196.4305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-206.6941, -203.1626, -209.3933, -199.6598, -196.3381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-206.6535, -203.2252, -209.3242, -199.6013, -196.3335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-206.6384, -203.0651, -209.7091, -199.9879, -196.4753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-206.6204, -202.9642, -209.9328, -200.2294, -196.5668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-206.5877, -202.9557, -210.0150, -200.3013, -196.6235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-206.5378, -203.0264, -210.0005, -200.2605, -196.6698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-206.5087, -202.9605, -210.1464, -200.3871, -196.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-206.5054, -202.8043, -210.4673, -200.6873, -196.8653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-206.4813, -202.7713, -210.5488, -200.7600, -196.9430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-206.4310, -202.8064, -210.5327, -200.7409, -196.9860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-206.3987, -202.7860, -210.7189, -200.8946, -197.1006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-206.4156, -202.6184, -211.0931, -201.2664, -197.2417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-206.4309, -202.4486, -211.4090, -201.5956, -197.3489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-206.3567, -202.5580, -211.3334, -201.5098, -197.3834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-206.3209, -202.5550, -211.3819, -201.5721, -197.4317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-206.2802, -202.5934, -211.3604, -201.5589, -197.4596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-206.1675, -202.8207, -211.1385, -201.3190, -197.4698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-206.0483, -203.0620, -210.8261, -201.0131, -197.4421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-205.9130, -203.4251, -210.3072, -200.4835, -197.3612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-205.8169, -203.6897, -209.8444, -200.0632, -197.2532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-205.7441, -203.8824, -209.5570, -199.8253, -197.2216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-205.7052, -203.8530, -209.6743, -199.9984, -197.3087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-205.6952, -203.7534, -209.8985, -200.2872, -197.4104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-205.6849, -203.6759, -210.1767, -200.6007, -197.5421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-205.6714, -203.6652, -210.3763, -200.8230, -197.6800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-205.6402, -203.7160, -210.5182, -200.9823, -197.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-205.5778, -203.8659, -210.5323, -200.9891, -197.9242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-205.5329, -203.9871, -210.4846, -200.9341, -198.0071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2435, device='cuda:0', dtype=torch.float64)
tensor([-205.4150, -204.2849, -210.2885, -200.6614, -198.0997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-205.3332, -204.4878, -210.3351, -200.6304, -198.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-205.2442, -204.7243, -210.1803, -200.3970, -198.2948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-205.1706, -204.8998, -210.0748, -200.2312, -198.3429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-205.1131, -205.0509, -209.9244, -200.0630, -198.3664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-205.0529, -205.2545, -209.6284, -199.7702, -198.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-205.0160, -205.3529, -209.4479, -199.6192, -198.3340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-204.9618, -205.5570, -208.9994, -199.2110, -198.2377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-204.9382, -205.6616, -208.7578, -199.0298, -198.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-204.9558, -205.5973, -208.8481, -199.1733, -198.2211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4036, device='cuda:0', dtype=torch.float64)
tensor([-205.0066, -205.5049, -209.1841, -199.4374, -198.3148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-205.1056, -205.2386, -209.6974, -199.9251, -198.4299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-205.2498, -204.8833, -210.4411, -200.6116, -198.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-205.3538, -204.6464, -210.8628, -201.0086, -198.6990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-205.4827, -204.3040, -211.2617, -201.4547, -198.7389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-205.6108, -204.0182, -211.5505, -201.8090, -198.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-205.6852, -203.8785, -211.4614, -201.8063, -198.6582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-205.7026, -203.9090, -211.1076, -201.5262, -198.4853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0734, device='cuda:0', dtype=torch.float64)
tensor([-205.7150, -204.0152, -210.5859, -201.0917, -198.2812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-205.6567, -204.4011, -209.6931, -200.2609, -198.0103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-205.6300, -204.6666, -209.0794, -199.6888, -197.8214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-205.6353, -204.7483, -208.6601, -199.3667, -197.6674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-205.6759, -204.5572, -208.6944, -199.4843, -197.6124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-205.7433, -204.2275, -208.9508, -199.8061, -197.6045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-205.8026, -203.9161, -209.1383, -200.0755, -197.5779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-205.8915, -203.5056, -209.4629, -200.4942, -197.5967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-205.9607, -203.2081, -209.7307, -200.8280, -197.6683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-206.0485, -202.8627, -210.2130, -201.3733, -197.8291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-206.1192, -202.6319, -210.4952, -201.7161, -197.9215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-206.1781, -202.4609, -210.6971, -201.9713, -197.9797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-206.1610, -202.4805, -210.6269, -201.9266, -197.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-206.1193, -202.5469, -210.4800, -201.8078, -197.9902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-206.0946, -202.5414, -210.4832, -201.8398, -198.0009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-206.0674, -202.5643, -210.3381, -201.7452, -197.9539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-206.0225, -202.6671, -209.9481, -201.4276, -197.8144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-205.9671, -202.8557, -209.3114, -200.8945, -197.5933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2750, device='cuda:0', dtype=torch.float64)
tensor([-205.9458, -202.9729, -209.0378, -200.6489, -197.5001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-205.9212, -203.1136, -208.7127, -200.3445, -197.4009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-205.9109, -203.1844, -208.4917, -200.1405, -197.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-205.8903, -203.3106, -208.1657, -199.8339, -197.1931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-205.8787, -203.4130, -207.8889, -199.5787, -197.0958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-205.9033, -203.3179, -207.9590, -199.6819, -197.0774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-205.9579, -203.0829, -208.4069, -200.1265, -197.1465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-205.9983, -202.8793, -208.8906, -200.6008, -197.2143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-206.0214, -202.7614, -209.1451, -200.8762, -197.2254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-206.0880, -202.5412, -209.6333, -201.3734, -197.3033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-206.0931, -202.5146, -209.7468, -201.4944, -197.2943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-206.1022, -202.4697, -209.9533, -201.7023, -197.3108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-206.0543, -202.5943, -209.8763, -201.6094, -197.2632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-205.9757, -202.7909, -209.6419, -201.3776, -197.1813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-205.9226, -202.9274, -209.5158, -201.2474, -197.1394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-205.8952, -202.9793, -209.5532, -201.2837, -197.1471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-205.8466, -203.0928, -209.6484, -201.3542, -197.2134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-205.8125, -203.1418, -209.7068, -201.4265, -197.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-205.7116, -203.4035, -209.4827, -201.1898, -197.2715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-205.6053, -203.6740, -209.1606, -200.9025, -197.2527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-205.5071, -203.9014, -209.0188, -200.7752, -197.3122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-205.4423, -204.0220, -209.0229, -200.7842, -197.3994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-205.4124, -204.0362, -209.1413, -200.9286, -197.4988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-205.3726, -204.1458, -209.0813, -200.8973, -197.5667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-205.3561, -204.1779, -209.1030, -200.9583, -197.6327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1019, device='cuda:0', dtype=torch.float64)
tensor([-205.3542, -204.1559, -209.2604, -201.1498, -197.7318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-205.3533, -204.1295, -209.4545, -201.3661, -197.8484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-205.3763, -204.0443, -209.7358, -201.6787, -197.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-205.4120, -203.9258, -210.1091, -202.0836, -198.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-205.4156, -203.8738, -210.2594, -202.2831, -198.1861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-205.4234, -203.8018, -210.4295, -202.4949, -198.2654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-205.3432, -203.9563, -210.1481, -202.2517, -198.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-205.2348, -204.2044, -209.7698, -201.8978, -198.1220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-205.1477, -204.4413, -209.2975, -201.4662, -197.9869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-205.0597, -204.6987, -208.7997, -201.0025, -197.8328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-205.0034, -204.8885, -208.4361, -200.6736, -197.7181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-204.9764, -204.9416, -208.3375, -200.6019, -197.6974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-204.9301, -205.1276, -208.0938, -200.3559, -197.6536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-204.9270, -205.1332, -208.1361, -200.4055, -197.6622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-204.9443, -205.1185, -208.1442, -200.4459, -197.6707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-204.9093, -205.2877, -207.9603, -200.2744, -197.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-204.8917, -205.3291, -208.0592, -200.3721, -197.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-204.9473, -205.1466, -208.5136, -200.8538, -197.9840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-204.9956, -205.0291, -208.7146, -201.1137, -198.0548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-205.0561, -204.9125, -208.9763, -201.4154, -198.1399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-205.0712, -204.9150, -208.9645, -201.4427, -198.1413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-205.0829, -204.9721, -208.7524, -201.2835, -198.0553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-205.0654, -205.0955, -208.3369, -200.9284, -197.9104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-205.0775, -205.1543, -208.0607, -200.7187, -197.8112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-205.0698, -205.2509, -207.7685, -200.4663, -197.7304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-205.0864, -205.2029, -207.7687, -200.5118, -197.7211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-205.1177, -205.0779, -207.8905, -200.6906, -197.7500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-205.1340, -204.9999, -207.8453, -200.7210, -197.7420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-205.1615, -204.8783, -207.9777, -200.8930, -197.8236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-205.1739, -204.7782, -208.1253, -201.0621, -197.9138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-205.1912, -204.7128, -208.2194, -201.1785, -198.0082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-205.1876, -204.7137, -208.1606, -201.1404, -198.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-205.2165, -204.6413, -208.1761, -201.1883, -198.1413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-205.2581, -204.5418, -208.2801, -201.3296, -198.2307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-205.2907, -204.4764, -208.3688, -201.4494, -198.3227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-205.3037, -204.4587, -208.2463, -201.3964, -198.3424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-205.2921, -204.4950, -208.0570, -201.2437, -198.3690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-205.2876, -204.5174, -207.8603, -201.1101, -198.3705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-205.2551, -204.5924, -207.5102, -200.8275, -198.2933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-205.2024, -204.7417, -207.0257, -200.4023, -198.1935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-205.1617, -204.8953, -206.6192, -200.0523, -198.0982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-205.1292, -205.0484, -206.1859, -199.6766, -197.9724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2426, device='cuda:0', dtype=torch.float64)
tensor([-205.1882, -204.8059, -206.6701, -200.1686, -198.0325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-205.2791, -204.4940, -207.2209, -200.7567, -198.1059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-205.3740, -204.1751, -207.8190, -201.3682, -198.2196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2512, device='cuda:0', dtype=torch.float64)
tensor([-205.4989, -203.8336, -208.3906, -201.9876, -198.3205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-205.5708, -203.6771, -208.4642, -202.1472, -198.2714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-205.6342, -203.5449, -208.4524, -202.2346, -198.1743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-205.6946, -203.4115, -208.4038, -202.2805, -198.0972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-205.7832, -203.2077, -208.5680, -202.5255, -198.0935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-205.8413, -203.0720, -208.7462, -202.7406, -198.0992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-205.8418, -203.0801, -208.5733, -202.6158, -198.0214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-205.8315, -203.1407, -208.3811, -202.4453, -197.9671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-205.7944, -203.2767, -208.0166, -202.1214, -197.8492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-205.7497, -203.4123, -207.6048, -201.7602, -197.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-205.6946, -203.5464, -207.2997, -201.4942, -197.6342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-205.6869, -203.4737, -207.4849, -201.6983, -197.6669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-205.6598, -203.4479, -207.5369, -201.7809, -197.6692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-205.6365, -203.4129, -207.6881, -201.9319, -197.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-205.6163, -203.3537, -207.8953, -202.1422, -197.7816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-205.5909, -203.3297, -208.0449, -202.3015, -197.8270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-205.5363, -203.4060, -207.9890, -202.2682, -197.8142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-205.4762, -203.4723, -207.9155, -202.2030, -197.7917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-205.3519, -203.7586, -207.4997, -201.7801, -197.7302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-205.2604, -203.9632, -207.1544, -201.4464, -197.6880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-205.2253, -204.0274, -207.0940, -201.3980, -197.7073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1800, device='cuda:0', dtype=torch.float64)
tensor([-205.2170, -203.9927, -207.0882, -201.3815, -197.7404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-205.2162, -203.9767, -206.9514, -201.2542, -197.7129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-205.2618, -203.7969, -207.2410, -201.5442, -197.7807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-205.2550, -203.7765, -207.0889, -201.4293, -197.7004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-205.2318, -203.7810, -206.9992, -201.3280, -197.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0560, device='cuda:0', dtype=torch.float64)
tensor([-205.2853, -203.6353, -207.2323, -201.5337, -197.6590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-205.3223, -203.5334, -207.3904, -201.6791, -197.6979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-205.3712, -203.4250, -207.5739, -201.8506, -197.7494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-205.4501, -203.2248, -207.9594, -202.2095, -197.8740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-205.5119, -203.0600, -208.3722, -202.5682, -198.0297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-205.5258, -203.0356, -208.5236, -202.6708, -198.1613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-205.5744, -202.9559, -208.8664, -202.9645, -198.3421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-205.5869, -202.9464, -209.0331, -203.0930, -198.4672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-205.5384, -203.0494, -208.7909, -202.8478, -198.4553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-205.4054, -203.3588, -208.1383, -202.2036, -198.3467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-205.2497, -203.7400, -207.4558, -201.5215, -198.2502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-205.1506, -204.0729, -207.0333, -201.0588, -198.2556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-205.0540, -204.4507, -206.5130, -200.5158, -198.2070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-204.9947, -204.7146, -206.2150, -200.1988, -198.1953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-204.9457, -204.8888, -206.1964, -200.1455, -198.2566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-204.9502, -204.8776, -206.4208, -200.3506, -198.3546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-205.0004, -204.7144, -206.9763, -200.8837, -198.5477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-205.0490, -204.5788, -207.4846, -201.3569, -198.7165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-205.0809, -204.5438, -207.8553, -201.6790, -198.8597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-205.0740, -204.5966, -207.9835, -201.7865, -198.9343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-204.9623, -204.8986, -207.5805, -201.3698, -198.8898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-204.8997, -205.0858, -207.2014, -201.0232, -198.8092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-204.8380, -205.3082, -206.7908, -200.6211, -198.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-204.8400, -205.2959, -206.9152, -200.7459, -198.8179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-204.8785, -205.1536, -207.2653, -201.0979, -198.9246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-205.0094, -204.7466, -208.1215, -201.9633, -199.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-205.1112, -204.4213, -208.6603, -202.5448, -199.1924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.2909, device='cuda:0', dtype=torch.float64)
tensor([-205.0343, -204.4642, -208.5775, -202.4287, -199.1660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-204.8929, -204.6864, -207.9822, -201.8498, -198.9656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-204.7107, -205.2466, -206.7094, -200.6089, -198.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-204.6443, -205.6043, -205.8939, -199.8425, -198.3632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-204.6553, -205.5706, -205.7622, -199.7685, -198.2800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-204.6891, -205.4382, -205.6887, -199.7822, -198.1847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-204.7504, -205.0638, -205.9741, -200.1815, -198.1343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-204.8184, -204.6612, -206.3680, -200.6606, -198.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-204.9067, -204.2391, -206.7596, -201.1413, -198.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-204.9679, -203.9298, -207.0318, -201.4785, -198.1155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-205.0340, -203.6298, -207.2895, -201.8048, -198.1093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-205.1083, -203.2766, -207.7120, -202.2836, -198.1797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-205.0972, -203.2027, -207.7952, -202.3960, -198.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-205.0266, -203.2760, -207.7093, -202.3141, -198.2053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-204.9237, -203.4554, -207.4829, -202.0821, -198.2158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-204.7874, -203.7639, -207.0750, -201.6415, -198.1882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-204.6796, -204.0051, -206.7792, -201.3300, -198.2100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-204.5968, -204.1396, -206.7195, -201.2530, -198.3036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-204.5169, -204.2814, -206.7125, -201.2318, -198.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-204.4324, -204.4855, -206.5686, -201.0634, -198.5339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-204.4847, -204.3044, -207.2985, -201.7634, -198.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-204.4452, -204.4358, -207.3539, -201.7824, -199.0138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-204.3768, -204.6152, -207.1800, -201.5854, -199.0425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-204.2580, -204.9499, -206.6435, -201.0205, -198.9843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-204.1551, -205.2555, -206.0828, -200.4454, -198.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-204.1377, -205.3263, -205.6692, -200.0819, -198.7685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-204.1150, -205.4548, -205.1941, -199.6661, -198.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-204.1270, -205.4242, -205.0754, -199.6128, -198.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-204.1503, -205.3316, -205.0681, -199.6804, -198.4769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-204.1645, -205.3025, -204.9678, -199.6598, -198.3970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-204.1963, -205.1587, -205.2288, -199.9687, -198.4315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-204.2369, -205.0277, -205.4171, -200.2033, -198.4588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-204.3004, -204.7498, -205.9015, -200.7314, -198.5445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-204.3974, -204.4472, -206.3395, -201.2251, -198.6135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-204.4794, -204.2086, -206.6820, -201.6000, -198.6628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-204.5590, -203.9501, -207.0949, -202.0547, -198.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-204.6165, -203.8066, -207.3528, -202.3504, -198.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-204.6381, -203.7896, -207.5000, -202.4549, -198.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-204.6488, -203.7687, -207.6394, -202.5555, -199.0284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-204.6731, -203.7231, -207.8000, -202.6706, -199.1050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-204.6272, -203.8487, -207.5465, -202.3868, -199.0475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-204.5355, -204.1106, -207.0100, -201.8388, -198.9148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-204.4106, -204.5170, -206.2615, -201.0660, -198.7721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-204.3478, -204.7527, -205.7976, -200.6012, -198.6855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-204.3315, -204.8304, -205.6769, -200.4680, -198.6816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-204.3230, -204.8587, -205.7327, -200.4888, -198.7315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-204.3759, -204.6191, -206.4451, -201.1529, -198.9639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-204.4252, -204.4428, -206.9603, -201.6425, -199.1341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0919, device='cuda:0', dtype=torch.float64)
tensor([-204.4444, -204.3606, -207.3229, -201.9910, -199.2607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-204.4543, -204.3239, -207.6164, -202.2730, -199.3678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-204.4126, -204.3586, -207.6274, -202.3319, -199.3579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-204.3590, -204.4781, -207.4322, -202.1825, -199.2971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-204.2772, -204.6637, -207.1385, -201.9383, -199.2186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-204.2075, -204.8676, -206.8552, -201.6909, -199.1574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-204.1055, -205.1785, -206.3593, -201.2272, -199.0359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-204.0437, -205.3743, -206.0239, -200.9490, -198.9398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-204.0125, -205.5482, -205.7463, -200.7163, -198.8740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-204.0033, -205.6406, -205.5877, -200.5917, -198.8403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-204.0203, -205.6075, -205.7396, -200.7746, -198.8849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-204.0703, -205.4202, -206.1117, -201.1891, -198.9459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-204.1454, -205.1792, -206.4703, -201.6002, -198.9867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-204.1626, -205.1682, -206.4017, -201.5707, -198.9289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-204.1777, -205.2147, -206.2005, -201.3897, -198.8612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-204.2276, -205.1280, -206.1666, -201.3892, -198.8019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-204.3045, -204.9565, -206.2766, -201.5283, -198.7758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-204.3530, -204.8890, -206.1995, -201.4843, -198.7011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-204.4055, -204.7796, -206.2982, -201.6115, -198.6925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-204.4279, -204.7369, -206.2297, -201.5751, -198.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-204.4304, -204.8100, -206.0260, -201.4011, -198.5629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-204.4248, -204.9002, -205.9588, -201.3339, -198.5936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-204.4219, -204.9480, -205.9314, -201.3085, -198.6418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-204.4759, -204.8388, -206.0782, -201.4915, -198.6764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4364, device='cuda:0', dtype=torch.float64)
tensor([-204.5085, -204.6892, -206.3956, -201.8579, -198.7109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-204.4930, -204.7106, -206.4918, -201.9786, -198.7220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-204.4990, -204.6731, -206.7689, -202.2781, -198.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-204.5127, -204.6403, -206.9847, -202.5239, -198.8265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-204.5017, -204.7089, -207.0356, -202.6133, -198.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-204.4107, -204.9601, -206.7617, -202.3734, -198.7963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-204.3460, -205.1498, -206.5523, -202.2097, -198.7633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-204.2932, -205.2740, -206.3588, -202.0643, -198.7216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-204.2515, -205.2986, -206.2877, -202.0433, -198.6771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-204.2106, -205.3371, -206.1155, -201.9213, -198.5706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-204.2090, -205.2505, -206.0713, -201.9456, -198.4377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-204.2048, -205.1512, -206.0023, -201.9271, -198.2908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-204.1689, -205.2051, -205.6566, -201.6193, -198.0983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-204.1445, -205.2938, -205.2410, -201.2372, -197.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-204.1284, -205.3906, -204.8936, -200.9004, -197.7317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-204.1220, -205.4246, -204.6960, -200.7187, -197.6506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-204.1286, -205.3423, -204.6845, -200.7322, -197.6153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1721, device='cuda:0', dtype=torch.float64)
tensor([-204.1499, -205.2128, -204.7638, -200.8252, -197.6593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-204.1872, -204.9489, -205.1039, -201.1860, -197.7424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-204.2259, -204.6965, -205.5515, -201.6264, -197.9023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-204.3002, -204.3779, -206.2008, -202.2527, -198.1505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-204.3526, -204.2646, -206.4469, -202.4899, -198.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-204.3783, -204.2606, -206.3955, -202.4369, -198.3275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-204.4146, -204.2329, -206.2457, -202.3153, -198.3207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-204.4197, -204.2804, -206.0382, -202.1170, -198.3423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-204.3977, -204.3634, -205.8453, -201.9055, -198.4015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-204.3463, -204.5481, -205.3481, -201.4093, -198.3560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-204.2666, -204.8593, -204.6699, -200.7221, -198.3042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-204.2421, -204.9277, -204.4938, -200.5315, -198.3454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-204.2706, -204.7644, -204.8769, -200.8779, -198.5029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-204.3619, -204.4341, -205.6415, -201.6169, -198.7635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-204.4130, -204.2828, -206.1296, -202.0817, -199.0086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-204.4530, -204.2135, -206.3428, -202.2828, -199.1543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-204.4496, -204.2314, -206.3838, -202.2991, -199.2566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-204.4311, -204.3514, -206.3851, -202.2474, -199.4072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-204.3624, -204.5904, -206.0995, -201.9281, -199.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-204.2532, -204.9631, -205.6401, -201.4043, -199.4754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-204.1595, -205.3054, -205.1597, -200.8856, -199.4839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-204.0528, -205.7356, -204.4385, -200.1278, -199.4237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-204.0088, -205.9715, -204.0519, -199.7238, -199.3804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-203.9871, -206.1333, -203.8165, -199.4878, -199.3603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-203.9994, -206.1222, -203.8782, -199.5470, -199.3777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-204.0199, -206.0894, -203.9394, -199.5975, -199.3968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-204.0333, -206.0051, -204.1961, -199.8242, -199.4723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-204.0785, -205.8476, -204.5335, -200.1450, -199.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-204.1431, -205.6153, -204.9443, -200.5473, -199.6108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-204.1667, -205.5414, -205.0496, -200.6405, -199.6185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-204.2168, -205.3810, -205.3080, -200.8836, -199.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-204.3004, -205.0759, -205.7549, -201.3381, -199.6651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-204.3544, -204.8580, -206.0136, -201.6110, -199.6503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-204.4137, -204.6183, -206.2638, -201.8829, -199.6347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-204.4357, -204.5433, -206.1670, -201.8055, -199.5436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-204.4626, -204.4494, -206.1421, -201.8002, -199.4965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-204.4887, -204.3895, -206.0674, -201.7434, -199.4583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-204.4739, -204.4917, -205.7179, -201.4105, -199.3733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-204.5162, -204.4099, -205.6587, -201.3741, -199.3251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-204.5024, -204.4629, -205.5512, -201.2404, -199.3210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-204.4438, -204.6303, -205.1734, -200.8562, -199.2605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-204.3622, -204.9071, -204.7777, -200.4246, -199.2361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-204.3134, -205.0629, -204.5569, -200.1871, -199.2426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-204.3140, -205.0998, -204.4950, -200.1089, -199.2724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-204.3241, -205.0605, -204.5739, -200.1946, -199.3266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-204.3587, -204.9008, -204.8982, -200.5346, -199.4126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-204.3478, -204.9727, -204.6478, -200.3288, -199.3450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-204.3642, -204.9169, -204.6691, -200.4023, -199.3375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-204.3293, -205.0758, -204.3177, -200.0967, -199.2449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0939, device='cuda:0', dtype=torch.float64)
tensor([-204.2901, -205.2901, -203.9183, -199.7071, -199.1618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-204.2612, -205.4545, -203.5665, -199.3727, -199.0669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-204.2499, -205.4409, -203.5442, -199.3725, -199.0492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-204.2535, -205.3644, -203.5146, -199.4001, -199.0083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-204.2718, -205.1703, -203.7193, -199.6751, -199.0245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-204.3252, -204.8550, -204.1692, -200.1820, -199.0590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-204.3678, -204.6856, -204.3300, -200.3900, -199.0075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-204.4431, -204.3717, -204.8740, -200.9620, -199.0379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-204.4915, -204.2225, -205.1082, -201.2256, -199.0282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-204.5816, -203.9990, -205.4260, -201.5573, -199.0292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-204.6496, -203.8307, -205.5885, -201.7498, -198.9752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-204.7064, -203.7033, -205.7333, -201.9167, -198.9655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-204.7161, -203.7154, -205.6112, -201.8046, -198.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-204.7109, -203.8162, -205.3368, -201.5307, -198.7825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-204.7560, -203.7661, -205.2973, -201.5060, -198.7382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-204.7288, -203.9687, -204.8282, -201.0638, -198.5890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-204.7128, -204.0821, -204.5688, -200.8273, -198.5049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-204.7095, -204.0813, -204.4990, -200.7790, -198.4580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-204.7138, -204.0520, -204.4835, -200.7919, -198.4264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-204.7443, -203.8918, -204.6805, -201.0321, -198.4324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-204.7572, -203.8062, -204.8191, -201.1976, -198.4437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-204.7852, -203.6830, -205.0910, -201.4974, -198.5338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-204.8397, -203.5328, -205.4535, -201.8770, -198.6630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-204.8646, -203.4680, -205.6237, -202.0646, -198.7163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-204.8895, -203.4312, -205.7662, -202.2054, -198.8055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-205.0141, -203.1253, -206.4748, -202.9225, -199.0483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-205.1097, -202.9415, -206.9658, -203.4202, -199.2299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-205.1524, -202.8244, -207.1549, -203.6432, -199.2714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-205.1274, -202.8507, -206.9464, -203.4736, -199.1959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-204.9971, -203.1776, -206.0961, -202.6524, -198.9668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-204.8469, -203.6332, -204.9875, -201.6060, -198.6722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-204.7379, -204.1541, -203.8413, -200.5284, -198.4093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-204.6612, -204.6965, -202.7736, -199.5225, -198.2049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-204.6221, -205.0886, -201.9697, -198.7902, -198.0717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-204.6292, -205.1924, -201.7452, -198.6120, -198.0528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-204.6433, -205.1307, -201.7861, -198.6875, -198.0847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-204.6697, -204.7712, -202.4033, -199.3013, -198.1898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-204.7327, -204.2440, -203.3732, -200.2638, -198.3756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([-204.8509, -203.9054, -203.8644, -200.8198, -198.4744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-204.9830, -203.5735, -204.3536, -201.3770, -198.5563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-205.1138, -203.2592, -204.8727, -201.9693, -198.6515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-205.1508, -203.1792, -205.0073, -202.1635, -198.6988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-205.2109, -203.0336, -205.2339, -202.4469, -198.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-205.2610, -202.8364, -205.4050, -202.6935, -198.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-205.2718, -202.7107, -205.3571, -202.7203, -198.6726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-205.2468, -202.7082, -205.1202, -202.5617, -198.5689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-205.1914, -202.8473, -204.7851, -202.2827, -198.4803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-205.1089, -203.0632, -204.2835, -201.8373, -198.3427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-205.0641, -203.1297, -204.1428, -201.7408, -198.2779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-204.9938, -203.2668, -203.9005, -201.5276, -198.1737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-204.9385, -203.3904, -203.7227, -201.3670, -198.0500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-204.8687, -203.5496, -203.5611, -201.2074, -197.9609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-204.8426, -203.5198, -203.9547, -201.5564, -198.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-204.7807, -203.6104, -204.2132, -201.7617, -198.1366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-204.7439, -203.6064, -204.6521, -202.1353, -198.2867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-204.6870, -203.6398, -205.1179, -202.5204, -198.5052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-204.6342, -203.7390, -205.4114, -202.7339, -198.7002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-204.5910, -203.8439, -205.6384, -202.9027, -198.8552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-204.5365, -203.9899, -205.6378, -202.8600, -198.9015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-204.4552, -204.1814, -205.4726, -202.6618, -198.8961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-204.3355, -204.4822, -205.1049, -202.2533, -198.8188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-204.2507, -204.7467, -204.7759, -201.8758, -198.7586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-204.1702, -205.0259, -204.3821, -201.4346, -198.6766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-204.0934, -205.3073, -203.9644, -200.9954, -198.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-204.0387, -205.5169, -203.6740, -200.6879, -198.5427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-204.0006, -205.6111, -203.6166, -200.6200, -198.5415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-204.0346, -205.4035, -204.1156, -201.0994, -198.6605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-204.0736, -205.2470, -204.5058, -201.4748, -198.7745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-204.1263, -205.0560, -204.9657, -201.9179, -198.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-204.1906, -204.8539, -205.2935, -202.2576, -198.9497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-204.2282, -204.7472, -205.4742, -202.4484, -198.9777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-204.2461, -204.7114, -205.4744, -202.4565, -198.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-204.2630, -204.6982, -205.4188, -202.4163, -198.9136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-204.2901, -204.6426, -205.5097, -202.5181, -198.9228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-204.3167, -204.5281, -205.6824, -202.6972, -198.9617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-204.3122, -204.5238, -205.6778, -202.7005, -198.9505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-204.3299, -204.4864, -205.7712, -202.7839, -198.9885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-204.2878, -204.5884, -205.6161, -202.6102, -198.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-204.1599, -204.9411, -204.9845, -201.9571, -198.8827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-204.1110, -205.0348, -204.8139, -201.7802, -198.8559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-204.1269, -204.8798, -205.0609, -202.0317, -198.9298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-204.1341, -204.7373, -205.3656, -202.3352, -199.0397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-204.1302, -204.6405, -205.6114, -202.5646, -199.1546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-204.0902, -204.6651, -205.6349, -202.5654, -199.2120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-204.0368, -204.7718, -205.4596, -202.3837, -199.1970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-204.0048, -204.8095, -205.3721, -202.2905, -199.1667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-203.9693, -204.8232, -205.2738, -202.2050, -199.1209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-203.9668, -204.7111, -205.3171, -202.2859, -199.0981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-203.9482, -204.7148, -205.1765, -202.1842, -199.0523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-203.9698, -204.6128, -205.1913, -202.2294, -199.0165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-203.9922, -204.5487, -205.1598, -202.2264, -198.9759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-203.9705, -204.5795, -204.9939, -202.0682, -198.9026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-203.9585, -204.6096, -204.9043, -201.9717, -198.8723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-203.9721, -204.5358, -205.0257, -202.0861, -198.9001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-204.0255, -204.3253, -205.4240, -202.4829, -198.9994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-204.0729, -204.1884, -205.8587, -202.8800, -199.1773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-204.1503, -203.9943, -206.3617, -203.3587, -199.3606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-204.1128, -204.1016, -206.2630, -203.2431, -199.3654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-204.0069, -204.3467, -205.7605, -202.7533, -199.2195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-203.8878, -204.6633, -205.1794, -202.1788, -199.0903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-203.7407, -205.1385, -204.3360, -201.3455, -198.9023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-203.6302, -205.5732, -203.6053, -200.6150, -198.7354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-203.5550, -205.9418, -203.0159, -200.0216, -198.6121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-203.5258, -205.9758, -203.0346, -200.0461, -198.6133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-203.5027, -205.9540, -203.1150, -200.1405, -198.6196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-203.5169, -205.7310, -203.5422, -200.6045, -198.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-203.5908, -205.3456, -204.2002, -201.3125, -198.7705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-203.6595, -205.0911, -204.6783, -201.7983, -198.8584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-203.7654, -204.7788, -205.2967, -202.4334, -198.9944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-203.7414, -204.8431, -205.2339, -202.3476, -198.9883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-203.6493, -205.0801, -204.8917, -201.9725, -198.9162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-203.5511, -205.3878, -204.3842, -201.4333, -198.8075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-203.4814, -205.6161, -203.9939, -201.0385, -198.7239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-203.4395, -205.7589, -203.7203, -200.7741, -198.6495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-203.4199, -205.8030, -203.6157, -200.6819, -198.6145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-203.3641, -205.9925, -203.3020, -200.3661, -198.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-203.3647, -205.9687, -203.4113, -200.4701, -198.6210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-203.4324, -205.6985, -203.8763, -200.9416, -198.7327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-203.5289, -205.3850, -204.4004, -201.4605, -198.9001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-203.6418, -205.0417, -204.9396, -202.0000, -199.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-203.7541, -204.7294, -205.3881, -202.4570, -199.1031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-203.7707, -204.6249, -205.3998, -202.4688, -199.0817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-203.7792, -204.5528, -205.2674, -202.3665, -199.0089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-203.6704, -204.8102, -204.6139, -201.7185, -198.8446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-203.5512, -205.1777, -203.8559, -200.9598, -198.6860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3043, device='cuda:0', dtype=torch.float64)
tensor([-203.4661, -205.4551, -203.4316, -200.5201, -198.6049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-203.4019, -205.6774, -203.1038, -200.1781, -198.5418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-203.3760, -205.7280, -203.0183, -200.1106, -198.5058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-203.3502, -205.7931, -202.9942, -200.1076, -198.4903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-203.3617, -205.6704, -203.2539, -200.3947, -198.5208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-203.4347, -205.2677, -203.9779, -201.1792, -198.6400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-203.5023, -204.9586, -204.6001, -201.8536, -198.7646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-203.6054, -204.5840, -205.3177, -202.6076, -198.9096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-203.7697, -204.1452, -206.2145, -203.5376, -199.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-203.8749, -203.9429, -206.7271, -204.0541, -199.3400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-203.9129, -203.8871, -206.9256, -204.2555, -199.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-203.9481, -203.8754, -207.0551, -204.3796, -199.5018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-203.8855, -204.0518, -206.8336, -204.1350, -199.4820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-203.6922, -204.4865, -205.9793, -203.2875, -199.2748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-203.4687, -205.0406, -204.9650, -202.2671, -199.0563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-203.2483, -205.7291, -203.8022, -201.1035, -198.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-203.1134, -206.2535, -203.0137, -200.3037, -198.7669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-203.0224, -206.6694, -202.3494, -199.6417, -198.6850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-203.0015, -206.7309, -202.2227, -199.5349, -198.6983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-202.9819, -206.6787, -202.3274, -199.6424, -198.7719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-203.0166, -206.3532, -202.8558, -200.1853, -198.9205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-203.0460, -206.0724, -203.2705, -200.6282, -199.0359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-203.1047, -205.7529, -203.7207, -201.1082, -199.1369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-203.1553, -205.5110, -204.0669, -201.4852, -199.2153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-203.1956, -205.3076, -204.3980, -201.8360, -199.2916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-203.2506, -205.1042, -204.6818, -202.1458, -199.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-203.2196, -205.1350, -204.5954, -202.0660, -199.3561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-203.1697, -205.2396, -204.3541, -201.8321, -199.3063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-203.1649, -205.2374, -204.2678, -201.7676, -199.3014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-203.1737, -205.2274, -204.2407, -201.7464, -199.3211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-203.1485, -205.2894, -204.1039, -201.6300, -199.3136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-203.1849, -205.1597, -204.3413, -201.8831, -199.4162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-203.2436, -204.9408, -204.5583, -202.1493, -199.4570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-203.2304, -204.8958, -204.3767, -202.0390, -199.3498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-203.2739, -204.7028, -204.5081, -202.2402, -199.3307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-203.3238, -204.5014, -204.7245, -202.5027, -199.3699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-203.3620, -204.3398, -204.9355, -202.7355, -199.4146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-203.4048, -204.2010, -205.1475, -202.9722, -199.4613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-203.4674, -204.0076, -205.3717, -203.2427, -199.4769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-203.5337, -203.8174, -205.5945, -203.5244, -199.4867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-203.5842, -203.6747, -205.7149, -203.6877, -199.4638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-203.5469, -203.7593, -205.4810, -203.4776, -199.3889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-203.4517, -203.9607, -205.0086, -203.0358, -199.2585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-203.3852, -204.0814, -204.7266, -202.7794, -199.2002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-203.2647, -204.4143, -204.1426, -202.2061, -199.0725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-203.1263, -204.8950, -203.3987, -201.4574, -198.9429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-203.0399, -205.2296, -202.9545, -201.0157, -198.8935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-203.0094, -205.3035, -202.8767, -200.9590, -198.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-202.9916, -205.3551, -202.8339, -200.9499, -198.9509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-202.9947, -205.3305, -202.9125, -201.0498, -199.0228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-203.0112, -205.2789, -203.0580, -201.1985, -199.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-203.0508, -205.1550, -203.2625, -201.4184, -199.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-203.0833, -205.0602, -203.4253, -201.5953, -199.3072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-203.1407, -204.8466, -203.7610, -201.9699, -199.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-203.2157, -204.5902, -204.2147, -202.4533, -199.5273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-203.2848, -204.3759, -204.5350, -202.8170, -199.6212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-203.3490, -204.1636, -204.7919, -203.1363, -199.6714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-203.3340, -204.1643, -204.6447, -203.0659, -199.6032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-203.3322, -204.1559, -204.4725, -202.9716, -199.5463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-203.3309, -204.1809, -204.2847, -202.8355, -199.5005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-203.2769, -204.3208, -203.8258, -202.4308, -199.3770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-203.2186, -204.5143, -203.2198, -201.8999, -199.1964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-203.1604, -204.7366, -202.5499, -201.3159, -199.0184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-203.0812, -205.0561, -201.7960, -200.6397, -198.8187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-203.0590, -205.1821, -201.4869, -200.3686, -198.7655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-203.0599, -205.1265, -201.5406, -200.4404, -198.8322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-203.1028, -204.9137, -201.9359, -200.8623, -198.9808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-203.1341, -204.8212, -202.1493, -201.0805, -199.0878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-203.1521, -204.8397, -202.1400, -201.0627, -199.1412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-203.2143, -204.6696, -202.4387, -201.3579, -199.2544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-203.2589, -204.5627, -202.6664, -201.5505, -199.3690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-203.3112, -204.4686, -202.7490, -201.6068, -199.4170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-203.3791, -204.3002, -203.0294, -201.8508, -199.5374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-203.4307, -204.1723, -203.2732, -202.0528, -199.6373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-203.4395, -204.1615, -203.2831, -202.0354, -199.6728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-203.4780, -204.0463, -203.3903, -202.1387, -199.7012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-203.4897, -204.0276, -203.3758, -202.1300, -199.6900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-203.4962, -204.0175, -203.4079, -202.1711, -199.7058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-203.5213, -203.9226, -203.5813, -202.3843, -199.7592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-203.5243, -203.8850, -203.5790, -202.4369, -199.7492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-203.5003, -203.9598, -203.4118, -202.3061, -199.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-203.4478, -204.1567, -203.0691, -201.9756, -199.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-203.3718, -204.5024, -202.5077, -201.3998, -199.5045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-203.3124, -204.8227, -202.0621, -200.9070, -199.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-203.2896, -204.9602, -201.9581, -200.7802, -199.4833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-203.2572, -205.0371, -201.9877, -200.7912, -199.5579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-203.2516, -204.9994, -202.1938, -200.9874, -199.6623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-203.2506, -204.9130, -202.5081, -201.2855, -199.8111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-203.2649, -204.7547, -202.9919, -201.7586, -200.0101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-203.2744, -204.6701, -203.4291, -202.1738, -200.2094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-203.2788, -204.6172, -203.8911, -202.6070, -200.4225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-203.2034, -204.8296, -203.8888, -202.5315, -200.5216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-203.0498, -205.2241, -203.4276, -201.9870, -200.4624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-202.8839, -205.6557, -202.8535, -201.3419, -200.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-202.7438, -206.0297, -202.4223, -200.8426, -200.2793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-202.6763, -206.1326, -202.3593, -200.7461, -200.2750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-202.6702, -205.9566, -202.6791, -201.0779, -200.3529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-202.6492, -205.8386, -202.7783, -201.2230, -200.3442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-202.7047, -205.4812, -203.1971, -201.7332, -200.3796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-202.7432, -205.1843, -203.4668, -202.1146, -200.3662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-202.7028, -205.1110, -203.2918, -202.0504, -200.2247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-202.6962, -205.0006, -203.1884, -202.0546, -200.1074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-202.7256, -204.8084, -203.2855, -202.2514, -200.0511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-202.7248, -204.7732, -203.1748, -202.2306, -199.9660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-202.7287, -204.6917, -203.1539, -202.2919, -199.8865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-202.7379, -204.6051, -203.1342, -202.3591, -199.7746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-202.7869, -204.4200, -203.2617, -202.5684, -199.7061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-202.7968, -204.3858, -203.2721, -202.6311, -199.6796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-202.7917, -204.4328, -203.1751, -202.5658, -199.6573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-202.7790, -204.5087, -203.0769, -202.4914, -199.6573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-202.7696, -204.6060, -202.9705, -202.3971, -199.6726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-202.7953, -204.6166, -202.9810, -202.4304, -199.7261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-202.7739, -204.8265, -202.6942, -202.1444, -199.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-202.7414, -205.0953, -202.2874, -201.7382, -199.6677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-202.7362, -205.2412, -202.1015, -201.5532, -199.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-202.7490, -205.3243, -202.0132, -201.4757, -199.6748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-202.7964, -205.2651, -202.1988, -201.6606, -199.7278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-202.8378, -205.2156, -202.3343, -201.8070, -199.7447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1178, device='cuda:0', dtype=torch.float64)
tensor([-202.8505, -205.2320, -202.2735, -201.7752, -199.7062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-202.8235, -205.3898, -202.0509, -201.5578, -199.6589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-202.8336, -205.4151, -201.9891, -201.5195, -199.6244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-202.8881, -205.2943, -202.1974, -201.7397, -199.6297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-202.9979, -205.0374, -202.6709, -202.2040, -199.7064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-203.0583, -204.9083, -202.9275, -202.4565, -199.7652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-203.1508, -204.6507, -203.3195, -202.8653, -199.8275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-203.1897, -204.5372, -203.4878, -203.0366, -199.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-203.1513, -204.5801, -203.2868, -202.8518, -199.7678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-203.1805, -204.4268, -203.4607, -203.0453, -199.7783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-203.1869, -204.3162, -203.5226, -203.1267, -199.7700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-203.2188, -204.1801, -203.6429, -203.2654, -199.7647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-203.2138, -204.1666, -203.4781, -203.1233, -199.6850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-203.1717, -204.2951, -203.0765, -202.7413, -199.5582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-203.1403, -204.4042, -202.7943, -202.4735, -199.4843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-203.0772, -204.6201, -202.3943, -202.0717, -199.3987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-203.0402, -204.7472, -202.1863, -201.8540, -199.3882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-203.0315, -204.7957, -202.1134, -201.7750, -199.4039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-203.0449, -204.7456, -202.1786, -201.8536, -199.4397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-203.0297, -204.7801, -202.1623, -201.8341, -199.4609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-203.0521, -204.6708, -202.4312, -202.0999, -199.5591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-203.1048, -204.4784, -202.7326, -202.4151, -199.6200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-203.1827, -204.2284, -203.1593, -202.8509, -199.7250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-203.2770, -203.9527, -203.6851, -203.3802, -199.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-203.3309, -203.8428, -203.9103, -203.6051, -199.9933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-203.3744, -203.7629, -204.0671, -203.7688, -200.0571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-203.4253, -203.6803, -204.2517, -203.9716, -200.1320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-203.4201, -203.7494, -204.1433, -203.8646, -200.1183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-203.3408, -203.9686, -203.7552, -203.4734, -200.0348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-203.1713, -204.4009, -202.9640, -202.6771, -199.8424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-203.0443, -204.7688, -202.3313, -202.0433, -199.6992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-202.9210, -205.1503, -201.7129, -201.4320, -199.5684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-202.8578, -205.3240, -201.4573, -201.1805, -199.5183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-202.8244, -205.4279, -201.3297, -201.0439, -199.5047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-202.8167, -205.4332, -201.3783, -201.0809, -199.5482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-202.9143, -205.1331, -201.9097, -201.6223, -199.6907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-203.0551, -204.7706, -202.5098, -202.2569, -199.8268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-203.1657, -204.5226, -202.8823, -202.6539, -199.8983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-203.2605, -204.3306, -203.1400, -202.9408, -199.9278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-203.3108, -204.2007, -203.2793, -203.1015, -199.9168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-203.3614, -204.0606, -203.3751, -203.2322, -199.8764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-203.3488, -204.0124, -203.2122, -203.1064, -199.7508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-203.2916, -204.0269, -202.8920, -202.8393, -199.5655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-203.2210, -204.0486, -202.4971, -202.5055, -199.3345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-203.1460, -204.1635, -201.9960, -202.0582, -199.1173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-203.0354, -204.4143, -201.2289, -201.3559, -198.8318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-203.0092, -204.4348, -201.0060, -201.1867, -198.7304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-203.0317, -204.2595, -201.1994, -201.4194, -198.7572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-203.0883, -203.9589, -201.6755, -201.9378, -198.8495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-203.1186, -203.7728, -202.0038, -202.2851, -198.9235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-203.1446, -203.6435, -202.2343, -202.5504, -198.9807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-203.1394, -203.6098, -202.2853, -202.6237, -199.0195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-203.0808, -203.6661, -202.2293, -202.5828, -199.0282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2105, device='cuda:0', dtype=torch.float64)
tensor([-202.9771, -203.8190, -201.9840, -202.3571, -198.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-202.8988, -203.9417, -201.7137, -202.1346, -198.9088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1304, device='cuda:0', dtype=torch.float64)
tensor([-202.8394, -203.9784, -201.4831, -201.9814, -198.8264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-202.8319, -203.8991, -201.5435, -202.0970, -198.8264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-202.7877, -203.9453, -201.4036, -202.0099, -198.7895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-202.7645, -203.9512, -201.2865, -201.9408, -198.7552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-202.7706, -203.8456, -201.2371, -201.9583, -198.7051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-202.7767, -203.7226, -201.2625, -202.0389, -198.6739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-202.7885, -203.5800, -201.2896, -202.1249, -198.6308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-202.7649, -203.5164, -201.3071, -202.1929, -198.6205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-202.7651, -203.4270, -201.4319, -202.3582, -198.6493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-202.7637, -203.3628, -201.4890, -202.4647, -198.6529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-202.7338, -203.3944, -201.4913, -202.4931, -198.6687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-202.6826, -203.4914, -201.3361, -202.3459, -198.6263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-202.5990, -203.6985, -200.9673, -201.9763, -198.5344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-202.4869, -204.0015, -200.5089, -201.4967, -198.4376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-202.4041, -204.1999, -200.3391, -201.3022, -198.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-202.3587, -204.2861, -200.3903, -201.3253, -198.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-202.3028, -204.4013, -200.4603, -201.3573, -198.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-202.3089, -204.3505, -200.7988, -201.6614, -198.5815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-202.3542, -204.1886, -201.2603, -202.0964, -198.7117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-202.4092, -204.0421, -201.7052, -202.5178, -198.8482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-202.4880, -203.8665, -202.2089, -203.0085, -199.0089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-202.5784, -203.7052, -202.7156, -203.5119, -199.1794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-202.6275, -203.6540, -203.0370, -203.8185, -199.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-202.6821, -203.5758, -203.2805, -204.0518, -199.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-202.6650, -203.6222, -203.2791, -204.0295, -199.4198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-202.6175, -203.7172, -203.0963, -203.8256, -199.3730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-202.4989, -203.9923, -202.6016, -203.3021, -199.2462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-202.3658, -204.3589, -202.0323, -202.7009, -199.1554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-202.2828, -204.5736, -201.6785, -202.3282, -199.0890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-202.2222, -204.7914, -201.3550, -201.9864, -199.0607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-202.2539, -204.8054, -201.3000, -201.9290, -199.0798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-202.3593, -204.6197, -201.4725, -202.1235, -199.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-202.5393, -204.2619, -202.0143, -202.6769, -199.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-202.7049, -203.9603, -202.5563, -203.2130, -199.4827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-202.8204, -203.7877, -202.9505, -203.5889, -199.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-202.8772, -203.7521, -203.0808, -203.6971, -199.7069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-202.8695, -203.8506, -203.0159, -203.5900, -199.7655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-202.8141, -204.0558, -202.6812, -203.2057, -199.7283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-202.7241, -204.2866, -202.2110, -202.6989, -199.6227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-202.6561, -204.5161, -201.8720, -202.2888, -199.6042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-202.6499, -204.5590, -201.8462, -202.2190, -199.6633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-202.6644, -204.5468, -201.9040, -202.2371, -199.7346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-202.6287, -204.6522, -201.7694, -202.0559, -199.7599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-202.6097, -204.6438, -201.7778, -202.0294, -199.8013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-202.6365, -204.4786, -202.0258, -202.2561, -199.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-202.6637, -204.2968, -202.3699, -202.5892, -200.0172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-202.6909, -204.1695, -202.7629, -202.9738, -200.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-202.7921, -203.9135, -203.3296, -203.5418, -200.4167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-202.8674, -203.7706, -203.6979, -203.9231, -200.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-202.9236, -203.6687, -203.9139, -204.1533, -200.7117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-202.9265, -203.6561, -203.8906, -204.1452, -200.7554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-202.8811, -203.7356, -203.6700, -203.9307, -200.7302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-202.7577, -203.9920, -203.1559, -203.4007, -200.6272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-202.5705, -204.4059, -202.4808, -202.6924, -200.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-202.3862, -204.8614, -201.7068, -201.9025, -200.2951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-202.2567, -205.2134, -201.2296, -201.4014, -200.2037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-202.1969, -205.3770, -201.0784, -201.2196, -200.1939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-202.1615, -205.4663, -200.9969, -201.1101, -200.1706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-202.1868, -205.3122, -201.2348, -201.3422, -200.2150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-202.1790, -205.3139, -201.2805, -201.3762, -200.2458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-202.2309, -205.1506, -201.5696, -201.6817, -200.3320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-202.2841, -204.9822, -201.8442, -201.9627, -200.3953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-202.3199, -204.8455, -202.1265, -202.2477, -200.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-202.3580, -204.6923, -202.5019, -202.6230, -200.5860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-202.4428, -204.4457, -203.0150, -203.1454, -200.7466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-202.4714, -204.4041, -203.2688, -203.4056, -200.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-202.4554, -204.4925, -203.3299, -203.4567, -200.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-202.3698, -204.7511, -203.0451, -203.1650, -200.9353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-202.3464, -204.9078, -202.9499, -203.0688, -201.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-202.2978, -205.1190, -202.7392, -202.8546, -201.0310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-202.3425, -205.1122, -202.8455, -202.9695, -201.1084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-202.3002, -205.2415, -202.6411, -202.7871, -201.0661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-202.2599, -205.3573, -202.4320, -202.6014, -201.0030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-202.1966, -205.5207, -202.1827, -202.3785, -200.9266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-202.1701, -205.5703, -202.0621, -202.2890, -200.8731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-202.0828, -205.7704, -201.5982, -201.8514, -200.7268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-202.0382, -205.8760, -201.2736, -201.5557, -200.6151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-202.0173, -205.9150, -201.0329, -201.3543, -200.5084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-202.0109, -205.8215, -201.0305, -201.3909, -200.4491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-202.0445, -205.6465, -201.2197, -201.6112, -200.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-202.0828, -205.4597, -201.4201, -201.8362, -200.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-202.1227, -205.2777, -201.5991, -202.0486, -200.4689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-202.1717, -205.0627, -201.7418, -202.2289, -200.4413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-202.2243, -204.8422, -201.9737, -202.4840, -200.4533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-202.2811, -204.6353, -202.2074, -202.7403, -200.4848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-202.3659, -204.3960, -202.4907, -203.0556, -200.5313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-202.4635, -204.1440, -202.7902, -203.3823, -200.5609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-202.4861, -204.0617, -202.8533, -203.4745, -200.5424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-202.4729, -204.0456, -202.8258, -203.4761, -200.5096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-202.4998, -203.9634, -203.0005, -203.6707, -200.5468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-202.5355, -203.8721, -203.1618, -203.8564, -200.5485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-202.5326, -203.8673, -203.1913, -203.8970, -200.5457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-202.4579, -203.9714, -202.9680, -203.6970, -200.4555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0708, device='cuda:0', dtype=torch.float64)
tensor([-202.3751, -204.1307, -202.5580, -203.3106, -200.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-202.3352, -204.2555, -202.1901, -202.9763, -200.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2826, device='cuda:0', dtype=torch.float64)
tensor([-202.3179, -204.3038, -201.8046, -202.6554, -200.0122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-202.2870, -204.3776, -201.3787, -202.2763, -199.8258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-202.2945, -204.3957, -201.0352, -201.9980, -199.6763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-202.3588, -204.2279, -201.0338, -202.0687, -199.6111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-202.4547, -203.9765, -201.2279, -202.3364, -199.5925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-202.5609, -203.7038, -201.4524, -202.6328, -199.5738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([-202.6082, -203.5021, -201.1131, -202.4649, -199.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-202.6555, -203.2845, -200.7808, -202.3189, -199.0994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-202.7026, -203.0834, -200.4726, -202.1887, -198.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-202.7912, -202.7776, -200.4066, -202.2869, -198.7408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-202.8888, -202.4430, -200.3713, -202.4076, -198.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-202.9615, -202.2212, -200.2856, -202.4562, -198.4579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-203.0337, -202.0785, -200.1589, -202.4358, -198.3570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-203.0713, -202.0059, -199.8872, -202.2636, -198.2141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-203.0783, -201.9896, -199.4954, -201.9614, -198.0470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-203.0847, -201.9990, -199.0732, -201.6338, -197.8912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-203.1012, -201.9876, -198.8487, -201.4565, -197.7810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-203.1106, -202.0431, -198.5544, -201.2082, -197.6685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-203.1374, -202.0648, -198.4243, -201.1060, -197.6235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-203.1488, -202.1412, -198.3051, -200.9953, -197.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-203.1480, -202.2627, -198.1253, -200.8189, -197.5673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-203.1594, -202.3394, -198.1010, -200.7723, -197.5709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-203.1649, -202.4246, -198.1518, -200.7910, -197.5996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-203.1782, -202.4661, -198.4746, -201.0185, -197.7135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-203.2205, -202.4046, -199.0207, -201.4665, -197.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-203.3406, -202.2045, -199.9025, -202.2488, -198.1285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-203.3960, -202.1637, -200.3612, -202.6700, -198.2615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-203.3782, -202.2489, -200.5463, -202.8063, -198.3145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-203.3449, -202.3259, -200.6695, -202.9057, -198.3445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0866, device='cuda:0', dtype=torch.float64)
tensor([-203.2528, -202.5307, -200.6071, -202.8167, -198.3679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-203.1156, -202.8417, -200.3670, -202.5392, -198.3565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-202.9515, -203.2944, -199.9246, -202.0472, -198.3288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-202.8032, -203.7262, -199.5267, -201.6052, -198.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-202.6438, -204.1778, -199.0308, -201.0830, -198.2422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-202.5445, -204.5808, -198.6760, -200.6757, -198.2416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-202.5234, -204.7899, -198.5873, -200.5475, -198.2670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-202.5706, -204.6899, -199.0167, -200.9235, -198.3755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-202.5910, -204.6244, -199.2108, -201.0958, -198.4104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-202.6514, -204.4039, -199.6243, -201.4927, -198.4774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-202.6963, -204.2382, -200.0065, -201.8595, -198.5735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-202.7905, -203.9594, -200.5382, -202.3870, -198.6916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-202.8488, -203.7309, -200.8647, -202.7177, -198.7255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-202.8670, -203.6404, -200.9843, -202.8229, -198.7344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-202.8487, -203.6821, -200.9178, -202.7399, -198.7196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-202.8172, -203.7615, -200.8717, -202.6661, -198.7306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-202.8299, -203.7193, -201.0236, -202.7976, -198.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-202.8742, -203.6077, -201.3352, -203.0937, -198.8469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-202.9164, -203.5120, -201.6144, -203.3674, -198.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-202.9110, -203.5387, -201.7335, -203.4591, -199.0192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-202.8453, -203.7119, -201.5681, -203.2466, -199.0547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-202.7734, -203.9462, -201.4192, -203.0479, -199.1560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-202.6679, -204.2184, -201.0970, -202.6853, -199.1870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-202.5357, -204.5651, -200.6636, -202.2026, -199.1969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-202.4254, -204.9045, -200.2673, -201.7618, -199.2227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-202.3049, -205.2277, -199.8851, -201.3491, -199.2469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-202.1824, -205.5294, -199.5648, -201.0036, -199.3037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-202.0892, -205.7201, -199.3151, -200.7460, -199.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-202.0306, -205.8241, -199.2183, -200.6464, -199.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-201.9935, -205.8245, -199.2091, -200.6295, -199.3802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-201.9967, -205.7012, -199.4479, -200.8519, -199.4536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-202.0457, -205.4107, -199.8637, -201.2721, -199.5254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-202.0794, -205.1877, -200.1981, -201.6122, -199.5819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-202.1463, -204.8484, -200.7220, -202.1558, -199.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-202.1912, -204.5789, -201.1036, -202.5591, -199.7241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-202.2716, -204.2673, -201.5089, -203.0004, -199.7776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5528, device='cuda:0', dtype=torch.float64)
tensor([-202.3794, -203.8669, -202.0735, -203.5657, -199.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-202.3925, -203.6958, -202.2416, -203.7074, -199.9806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-202.3168, -203.6975, -202.1202, -203.5431, -199.9703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-202.1669, -203.8381, -201.6180, -203.0032, -199.7981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-202.0623, -203.9404, -201.2303, -202.5762, -199.6455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-201.9539, -204.0954, -200.7547, -202.0839, -199.4795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-201.8722, -204.2008, -200.3695, -201.6880, -199.3526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-201.7933, -204.3139, -200.0068, -201.3091, -199.2411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-201.7343, -204.3663, -199.7764, -201.0679, -199.1648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-201.7762, -204.1221, -200.0430, -201.3566, -199.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-201.8270, -203.9182, -200.2853, -201.6359, -199.2442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-201.8478, -203.8005, -200.4347, -201.8089, -199.2759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-201.9118, -203.5964, -200.8090, -202.1876, -199.3895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-201.9499, -203.4543, -201.0600, -202.4469, -199.4790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-201.9098, -203.4971, -200.9384, -202.3320, -199.4566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-201.8611, -203.5962, -200.6823, -202.0930, -199.3951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-201.8582, -203.6232, -200.5856, -202.0182, -199.3779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-201.9010, -203.5519, -200.6840, -202.1582, -199.4166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-201.9231, -203.5338, -200.7360, -202.2547, -199.4520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-201.9473, -203.5507, -200.7533, -202.3179, -199.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-201.9795, -203.5520, -200.8548, -202.4531, -199.5672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-201.9953, -203.5493, -200.9372, -202.5648, -199.6073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-202.0299, -203.5159, -201.0370, -202.7048, -199.6505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-202.0510, -203.4869, -201.0498, -202.7457, -199.6469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-202.0868, -203.4197, -201.0244, -202.7799, -199.6106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-202.0879, -203.4147, -200.8803, -202.6731, -199.5581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-202.0662, -203.4914, -200.7248, -202.5172, -199.5184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-201.9963, -203.6246, -200.4565, -202.2491, -199.4489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-201.9401, -203.7030, -200.3474, -202.1372, -199.4258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-201.8493, -203.8168, -200.1600, -201.9405, -199.3546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-201.7570, -203.8948, -199.9538, -201.7437, -199.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-201.6860, -203.9167, -199.8743, -201.6728, -199.1732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-201.6095, -203.9407, -199.7323, -201.5403, -199.0714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-201.5558, -203.9176, -199.7168, -201.5270, -199.0013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-201.5446, -203.7634, -199.9035, -201.7095, -198.9453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-201.6098, -203.4896, -200.3212, -202.1094, -198.9684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-201.6522, -203.3314, -200.6623, -202.4112, -199.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-201.7238, -203.1781, -201.0366, -202.7461, -199.1473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1280, device='cuda:0', dtype=torch.float64)
tensor([-201.6973, -203.1883, -200.9286, -202.6469, -199.1362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-201.6002, -203.3268, -200.5759, -202.2811, -199.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-201.4721, -203.5733, -200.0235, -201.7144, -198.9249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-201.4205, -203.6308, -199.8484, -201.5229, -198.8895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-201.4362, -203.5793, -199.8611, -201.5287, -198.9312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-201.4498, -203.5487, -199.9037, -201.5682, -199.0020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-201.4343, -203.6005, -199.7402, -201.4177, -199.0129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-201.4229, -203.6935, -199.5472, -201.2368, -199.0392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-201.4766, -203.6397, -199.6687, -201.3620, -199.1552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-201.4913, -203.7292, -199.6103, -201.2849, -199.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-201.5102, -203.7271, -199.6015, -201.2766, -199.2717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-201.5714, -203.6930, -199.7949, -201.4463, -199.3793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-201.6494, -203.6144, -200.2178, -201.8202, -199.5497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-201.7514, -203.5046, -200.6197, -202.2080, -199.6816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-201.8287, -203.3999, -201.0662, -202.6320, -199.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-201.8348, -203.3499, -201.2593, -202.8179, -199.8288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-201.6542, -203.5706, -200.7813, -202.3489, -199.6559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-201.5011, -203.8014, -200.3878, -201.9793, -199.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-201.3554, -204.1090, -200.0059, -201.5801, -199.4495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-201.2291, -204.3745, -199.7413, -201.3047, -199.3707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-201.1453, -204.5636, -199.5928, -201.1369, -199.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-201.0905, -204.6654, -199.6064, -201.1226, -199.3493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-201.0325, -204.7150, -199.7069, -201.1983, -199.3544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-200.9511, -204.7894, -199.6872, -201.1759, -199.3218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-200.8949, -204.8404, -199.6384, -201.1439, -199.2648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-200.8855, -204.7680, -199.8630, -201.3598, -199.2750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-200.7892, -204.9048, -199.7016, -201.1991, -199.2068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-200.7190, -204.9720, -199.5883, -201.0914, -199.1315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-200.7380, -204.8898, -199.8137, -201.3062, -199.1670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-200.7886, -204.7298, -200.0788, -201.5807, -199.1997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-200.7855, -204.6820, -200.1375, -201.6550, -199.1773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-200.8090, -204.6312, -200.2506, -201.7799, -199.2012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-200.8863, -204.4723, -200.5344, -202.0751, -199.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-200.9551, -204.3202, -200.7108, -202.2695, -199.3231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-200.9990, -204.2059, -200.7503, -202.3349, -199.3006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-201.0322, -204.0901, -200.8184, -202.4233, -199.2691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-201.0209, -204.0483, -200.6912, -202.3338, -199.1997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-200.9734, -204.0982, -200.4187, -202.1065, -199.1025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-200.9503, -204.1064, -200.2797, -202.0061, -199.0725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-200.9362, -204.1571, -200.0483, -201.8150, -199.0388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.9509, -204.2032, -199.9948, -201.7865, -199.0958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-200.9376, -204.3144, -199.8080, -201.6351, -199.1086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-200.9625, -204.3510, -199.7944, -201.6569, -199.1741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-201.0133, -204.3381, -199.8940, -201.7832, -199.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-201.0505, -204.3048, -199.8983, -201.8367, -199.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-201.0867, -204.2417, -199.8937, -201.8783, -199.3375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-201.1631, -204.0989, -200.1057, -202.1048, -199.3972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-201.2696, -203.9328, -200.4206, -202.4325, -199.5165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-201.3234, -203.9262, -200.5266, -202.5338, -199.6125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-201.3999, -203.8501, -200.6736, -202.6784, -199.6804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-201.4408, -203.8231, -200.5653, -202.5894, -199.6784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-201.4562, -203.8049, -200.2743, -202.3418, -199.5699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-201.4374, -203.7920, -199.9461, -202.0488, -199.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-201.4513, -203.6782, -199.7516, -201.8893, -199.2726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-201.4632, -203.5315, -199.6183, -201.7724, -199.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-201.4866, -203.3580, -199.5227, -201.6881, -198.9534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-201.4655, -203.3017, -199.2531, -201.4309, -198.7602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-201.4502, -203.2751, -199.1012, -201.2651, -198.6251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-201.5321, -203.0727, -199.2858, -201.4302, -198.5892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-201.6714, -202.7827, -199.8021, -201.8902, -198.6992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-201.8308, -202.4487, -200.4525, -202.4894, -198.8592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-201.9878, -202.1705, -201.0336, -203.0321, -199.0266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-202.0805, -202.0687, -201.3707, -203.3199, -199.1741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-202.0869, -202.1672, -201.4808, -203.3573, -199.3074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-202.0960, -202.2344, -201.5511, -203.3759, -199.3986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2058, device='cuda:0', dtype=torch.float64)
tensor([-202.1783, -202.1703, -202.1244, -203.8499, -199.6356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-202.1315, -202.2793, -202.2027, -203.8563, -199.6851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-202.0177, -202.5078, -202.0018, -203.6025, -199.6469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-201.8231, -202.9081, -201.5365, -203.0718, -199.5638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-201.6800, -203.2630, -201.2353, -202.7157, -199.5614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0740, device='cuda:0', dtype=torch.float64)
tensor([-201.5552, -203.5912, -200.8377, -202.2809, -199.5378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-201.4380, -203.9060, -200.4446, -201.8599, -199.4915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-201.3588, -204.1675, -200.1611, -201.5388, -199.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-201.2849, -204.3732, -199.9487, -201.2957, -199.4711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-201.2853, -204.2950, -200.1778, -201.5182, -199.5425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-201.2845, -204.2474, -200.4127, -201.7309, -199.6427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-201.2963, -204.1863, -200.7118, -202.0020, -199.7625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-201.3886, -203.9886, -201.3077, -202.5713, -199.9643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-201.4917, -203.7835, -201.8527, -203.0981, -200.1437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-201.5439, -203.6975, -202.1268, -203.3614, -200.2504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-201.5335, -203.7199, -202.1443, -203.3774, -200.2959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-201.4435, -203.8922, -201.9553, -203.1851, -200.2849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-201.2906, -204.1838, -201.4953, -202.7251, -200.1958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-201.1397, -204.4553, -201.0638, -202.3094, -200.1095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-200.9640, -204.7510, -200.5617, -201.8227, -200.0003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-200.7987, -205.0011, -199.9934, -201.2780, -199.8241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-200.6833, -205.1779, -199.5746, -200.8780, -199.6967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-200.6184, -205.1996, -199.3339, -200.6659, -199.5901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-200.4980, -205.3525, -198.8572, -200.2174, -199.4131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-200.4510, -205.3288, -198.6295, -200.0345, -199.2827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-200.4838, -205.0490, -198.7865, -200.2474, -199.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-200.5449, -204.7141, -199.0914, -200.5981, -199.2438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-200.6334, -204.3900, -199.3315, -200.8834, -199.2539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-200.7258, -204.0389, -199.6320, -201.2373, -199.2679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-200.8659, -203.6124, -200.1262, -201.7814, -199.3448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-201.0249, -203.2317, -200.6692, -202.3545, -199.4830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-201.1676, -202.8737, -201.1244, -202.8505, -199.5751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-201.2265, -202.6314, -201.2655, -203.0488, -199.5365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-201.2394, -202.4614, -201.1974, -203.0490, -199.4172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-201.2108, -202.4323, -200.9264, -202.8291, -199.2547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-201.1461, -202.4443, -200.6275, -202.5912, -199.0919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1003, device='cuda:0', dtype=torch.float64)
tensor([-201.0026, -202.5430, -199.9566, -202.0553, -198.8192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-200.8887, -202.6294, -199.3652, -201.6003, -198.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-200.8225, -202.6461, -198.8423, -201.2482, -198.4070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-200.7492, -202.6647, -198.4646, -200.9977, -198.2427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-200.6992, -202.6882, -198.1314, -200.7788, -198.1331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-200.6637, -202.7168, -197.8901, -200.6325, -198.0706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-200.6249, -202.7802, -197.6516, -200.4707, -198.0138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-200.6383, -202.8449, -197.6357, -200.4835, -198.0793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-200.6535, -202.9726, -197.5742, -200.4256, -198.1516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-200.6492, -203.0696, -197.4545, -200.2954, -198.1635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-200.6867, -203.0878, -197.6422, -200.4306, -198.2650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-200.7680, -202.9974, -198.1254, -200.8374, -198.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-200.7944, -202.9592, -198.4203, -201.0818, -198.5467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-200.7791, -202.9837, -198.6637, -201.2646, -198.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-200.7755, -202.9407, -198.8885, -201.4611, -198.7306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-200.8228, -202.8244, -199.2661, -201.7985, -198.8336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-200.7973, -202.8200, -199.3716, -201.8697, -198.8346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-200.7516, -202.8522, -199.3999, -201.8350, -198.8010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-200.7604, -202.8599, -199.4854, -201.8656, -198.8108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-200.6963, -202.9728, -199.2420, -201.5891, -198.6955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-200.6338, -203.0783, -199.0055, -201.3482, -198.5711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-200.5576, -203.2014, -198.7453, -201.0893, -198.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-200.4383, -203.4751, -198.1290, -200.5032, -198.2438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-200.4182, -203.6292, -197.8557, -200.2263, -198.1805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-200.4396, -203.7011, -197.8092, -200.1520, -198.1889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-200.4617, -203.7725, -197.7579, -200.0863, -198.2044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-200.5357, -203.7292, -197.8901, -200.2051, -198.2607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-200.6415, -203.6413, -198.1083, -200.4197, -198.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-200.8483, -203.3577, -198.8245, -201.0932, -198.6047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-201.0605, -203.0883, -199.4928, -201.7347, -198.8453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-201.2503, -202.8770, -200.0413, -202.2651, -199.0242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-201.4460, -202.6740, -200.6930, -202.8993, -199.2547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-201.6095, -202.4787, -201.2711, -203.4581, -199.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-201.6099, -202.5253, -201.2883, -203.4695, -199.4581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-201.5073, -202.7025, -200.9961, -203.1849, -199.4098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-201.3965, -202.9188, -200.6461, -202.8317, -199.3602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-201.2711, -203.2016, -200.1781, -202.3565, -199.2994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-201.1131, -203.5084, -199.6113, -201.7869, -199.1835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-201.0242, -203.7231, -199.3411, -201.4846, -199.1351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-200.9332, -203.9654, -198.9456, -201.0739, -199.0550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.8607, -204.1507, -198.5707, -200.7130, -198.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-200.8266, -204.2764, -198.2286, -200.3926, -198.8631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-200.7687, -204.3446, -198.0265, -200.1964, -198.7470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-200.7927, -204.2045, -198.1834, -200.3460, -198.7037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-200.8495, -204.0213, -198.5068, -200.6485, -198.7326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-200.9323, -203.7701, -198.9411, -201.0582, -198.7914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-201.0081, -203.5155, -199.4171, -201.5182, -198.8609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-201.0248, -203.3749, -199.6363, -201.7410, -198.8766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-201.0396, -203.2200, -199.8774, -201.9914, -198.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-201.0651, -203.1029, -200.1220, -202.2451, -198.9784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-201.0368, -203.1330, -200.2977, -202.3800, -199.0688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-201.0048, -203.2037, -200.3558, -202.4237, -199.1289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-200.9406, -203.3651, -200.2444, -202.2983, -199.1606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-200.8615, -203.5384, -200.0445, -202.1003, -199.1399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-200.8136, -203.6438, -199.9116, -201.9650, -199.1180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-200.6974, -203.8540, -199.5393, -201.6023, -199.0205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-200.5892, -204.0950, -199.0913, -201.1874, -198.9263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-200.5075, -204.2878, -198.7777, -200.8946, -198.8917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-200.4871, -204.3430, -198.7438, -200.8603, -198.9034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-200.5195, -204.2984, -198.8270, -200.9585, -198.9331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-200.5726, -204.1868, -198.9943, -201.1401, -198.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-200.6405, -204.0252, -199.2090, -201.3751, -198.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-200.7493, -203.7850, -199.5900, -201.7572, -199.0366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-200.8100, -203.6089, -199.8464, -202.0309, -199.0478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-200.8099, -203.5431, -199.8632, -202.0709, -198.9890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-200.7502, -203.6049, -199.7899, -202.0007, -198.9406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-200.6897, -203.6707, -199.7192, -201.9426, -198.9062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-200.5560, -203.8119, -199.4248, -201.6651, -198.7875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-200.4273, -203.9603, -199.1676, -201.4111, -198.6668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-200.3234, -204.0584, -199.0054, -201.2593, -198.5562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-200.2314, -204.1470, -198.8927, -201.1545, -198.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.2352, -204.0436, -199.0665, -201.3303, -198.4602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-200.2485, -203.9127, -199.3253, -201.5981, -198.4583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-200.2468, -203.7995, -199.5117, -201.8022, -198.4353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-200.2995, -203.5812, -199.8350, -202.1352, -198.4518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-200.2890, -203.5341, -199.9666, -202.2540, -198.4726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-200.3301, -203.4328, -200.3214, -202.5784, -198.5740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-200.3455, -203.3930, -200.4988, -202.7439, -198.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-200.3251, -203.3897, -200.5332, -202.7654, -198.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-200.2631, -203.3779, -200.4383, -202.6874, -198.6136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-200.1713, -203.4390, -200.2260, -202.4932, -198.5590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-200.0142, -203.6712, -199.6516, -201.9579, -198.4215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-199.8936, -203.8693, -199.2017, -201.5380, -198.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.7348, -204.1350, -198.6145, -201.0026, -198.2278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-199.6188, -204.3072, -198.1826, -200.6275, -198.1359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-199.5792, -204.3950, -197.9896, -200.4531, -198.1286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-199.5736, -204.3046, -197.9389, -200.4701, -198.0840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.6346, -204.0975, -198.2689, -200.8340, -198.1559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-199.7455, -203.8503, -198.6636, -201.2450, -198.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-199.9168, -203.5603, -199.2951, -201.8872, -198.4832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-200.0121, -203.4026, -199.5668, -202.2040, -198.5806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-200.0833, -203.2578, -199.7992, -202.4725, -198.6596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-200.1398, -203.1661, -200.0051, -202.6950, -198.7544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-200.1591, -203.1278, -200.1456, -202.8482, -198.8493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-200.0586, -203.2299, -199.9006, -202.6407, -198.8370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.9092, -203.3941, -199.4324, -202.2038, -198.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.7379, -203.6142, -198.8287, -201.6472, -198.6203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-199.5762, -203.8610, -198.2195, -201.0834, -198.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-199.4497, -204.0587, -197.6629, -200.5851, -198.4193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-199.4219, -204.1262, -197.5190, -200.4745, -198.4482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-199.4036, -204.2088, -197.4975, -200.4562, -198.5343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-199.4152, -204.2447, -197.6188, -200.5607, -198.6577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-199.5235, -204.1276, -198.0501, -200.9530, -198.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-199.6050, -204.0224, -198.3863, -201.2619, -199.0012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-199.6458, -203.9708, -198.6007, -201.4601, -199.0950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-199.6383, -203.9966, -198.6185, -201.4779, -199.1334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-199.5972, -204.0468, -198.5059, -201.3797, -199.1125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-199.5726, -204.0512, -198.4377, -201.3229, -199.0827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.5853, -203.9161, -198.5339, -201.4302, -199.0349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.5800, -203.8013, -198.6120, -201.5233, -198.9818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.5723, -203.6983, -198.6513, -201.5860, -198.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-199.6245, -203.5444, -198.7558, -201.7143, -198.9128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-199.7073, -203.4394, -198.9811, -201.9210, -198.9993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-199.8061, -203.3611, -199.1730, -202.0990, -199.1005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.9119, -203.2953, -199.4526, -202.3264, -199.2259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-199.9905, -203.2924, -199.5426, -202.3977, -199.3057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-199.9753, -203.3851, -199.3865, -202.2427, -199.2941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-199.9494, -203.4873, -199.1535, -202.0231, -199.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.9549, -203.5591, -199.1589, -201.9987, -199.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-199.9218, -203.6648, -198.9483, -201.7865, -199.2963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-199.8384, -203.8365, -198.5409, -201.3854, -199.2011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.7418, -204.0309, -198.0071, -200.8922, -199.0859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-199.6961, -204.1043, -197.7232, -200.6500, -199.0234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.6846, -204.0919, -197.5492, -200.5220, -198.9751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-199.6528, -204.1121, -197.3278, -200.3554, -198.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-199.6463, -204.0669, -197.2319, -200.3222, -198.8674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.6564, -204.0069, -197.3113, -200.4406, -198.9003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-199.7068, -203.9209, -197.4882, -200.6319, -198.9593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-199.7550, -203.7969, -197.7548, -200.9053, -199.0107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-199.7994, -203.7279, -198.0091, -201.1341, -199.0747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-199.9149, -203.5723, -198.4188, -201.5147, -199.1868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.0214, -203.4626, -198.7146, -201.7793, -199.2832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-200.1282, -203.3318, -199.0334, -202.0743, -199.3713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-200.2736, -203.1593, -199.4260, -202.4523, -199.4837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-200.4279, -202.9527, -199.8406, -202.8592, -199.6052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-200.4702, -202.9089, -199.9179, -202.9276, -199.6271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-200.5191, -202.8556, -200.0863, -203.0713, -199.6796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3176, device='cuda:0', dtype=torch.float64)
tensor([-200.4483, -202.8607, -199.8304, -202.8527, -199.5777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-200.3241, -202.9933, -199.3970, -202.4552, -199.4358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-200.2035, -203.2149, -198.8709, -201.9495, -199.3070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-200.1133, -203.3627, -198.4491, -201.5795, -199.1731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-200.0813, -203.4676, -198.2720, -201.4270, -199.1479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-200.1024, -203.5005, -198.2982, -201.4590, -199.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-200.1761, -203.4964, -198.4878, -201.6268, -199.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-200.2659, -203.5093, -198.6704, -201.7589, -199.4236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-200.4004, -203.4738, -198.8990, -201.9260, -199.5366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-200.4791, -203.5113, -198.9189, -201.8936, -199.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-200.5581, -203.4691, -198.8638, -201.8239, -199.5827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-200.6275, -203.4498, -198.8306, -201.7540, -199.5709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-200.7146, -203.4262, -198.9114, -201.8097, -199.6086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-200.7170, -203.4906, -198.7196, -201.6167, -199.5179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-200.7575, -203.4312, -198.7144, -201.6158, -199.4400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-200.7829, -203.4148, -198.6504, -201.5546, -199.3663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-200.8481, -203.3382, -198.8345, -201.7286, -199.3836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-200.8934, -203.2219, -199.1146, -201.9868, -199.4019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-200.9462, -203.0658, -199.3554, -202.2238, -199.3873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-200.9694, -202.9721, -199.4501, -202.3237, -199.3488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-201.0275, -202.8198, -199.6762, -202.5526, -199.3296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-201.0229, -202.7244, -199.6540, -202.5505, -199.2144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.9515, -202.6951, -199.3706, -202.3124, -199.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-200.8220, -202.7429, -198.7650, -201.7787, -198.6452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1296, device='cuda:0', dtype=torch.float64)
tensor([-200.7572, -202.7466, -198.1500, -201.2691, -198.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-200.6597, -202.8198, -197.4694, -200.6895, -198.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-200.6545, -202.7018, -197.2733, -200.5511, -197.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-200.7631, -202.4026, -197.5295, -200.8175, -197.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-200.9421, -202.0025, -198.1188, -201.3959, -197.8423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-201.1758, -201.5403, -198.8270, -202.0869, -197.9746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-201.3800, -201.1726, -199.5267, -202.7717, -198.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-201.6379, -200.7702, -200.4122, -203.6284, -198.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-201.8278, -200.4885, -201.0623, -204.2515, -198.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-201.8605, -200.3962, -201.2788, -204.4451, -198.6683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-201.7646, -200.5008, -201.0876, -204.2440, -198.6186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-201.5371, -200.8202, -200.4115, -203.5781, -198.4236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-201.3413, -201.1163, -199.7977, -202.9994, -198.2829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-201.1837, -201.3998, -199.2142, -202.4402, -198.1623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-201.0460, -201.6558, -198.6562, -201.8958, -198.0262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-200.9008, -201.8903, -198.0524, -201.3318, -197.8545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-200.8645, -201.9456, -197.9044, -201.2025, -197.8630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-200.8296, -202.0460, -197.8700, -201.1569, -197.9362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-200.8648, -202.0631, -198.1476, -201.4180, -198.1273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-200.8348, -202.1890, -198.1990, -201.4562, -198.2502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-200.8480, -202.2924, -198.2970, -201.5239, -198.3912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-200.8344, -202.4245, -198.3271, -201.5361, -198.5121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-200.8003, -202.5355, -198.2890, -201.5051, -198.5890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-200.7637, -202.6644, -198.4200, -201.6035, -198.7172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-200.8069, -202.6395, -198.7583, -201.9132, -198.8816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-200.8643, -202.5904, -199.1362, -202.2470, -199.0481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.7957, -202.6895, -199.0540, -202.1356, -199.0557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-200.6719, -202.9025, -198.7873, -201.8358, -199.0111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-200.5767, -203.0017, -198.5977, -201.6401, -198.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-200.4944, -203.0513, -198.4745, -201.5150, -198.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-200.5063, -202.8884, -198.7414, -201.7809, -198.8542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-200.5158, -202.7663, -198.8444, -201.9054, -198.8023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-200.4721, -202.7456, -198.8902, -201.9547, -198.7597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-200.4520, -202.6690, -199.0059, -202.0669, -198.7232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-200.4218, -202.6325, -199.0286, -202.0855, -198.6746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-200.4032, -202.6027, -199.0359, -202.0889, -198.6314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-200.4328, -202.4652, -199.1832, -202.2454, -198.5978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-200.4564, -202.3552, -199.3355, -202.4030, -198.5901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-200.4869, -202.2728, -199.4826, -202.5535, -198.6115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-200.5441, -202.1592, -199.6426, -202.7358, -198.6448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-200.5972, -202.0765, -199.8081, -202.9085, -198.6912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-200.6439, -202.0050, -199.9664, -203.0813, -198.7393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-200.6600, -201.9505, -200.0092, -203.1632, -198.7424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-200.6147, -201.9636, -199.8883, -203.0901, -198.6895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-200.4572, -202.0778, -199.3312, -202.6218, -198.4628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-200.2888, -202.1935, -198.6692, -202.0725, -198.1979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-200.0912, -202.3369, -197.9542, -201.4575, -197.9205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.9566, -202.4179, -197.5140, -201.0792, -197.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-199.8368, -202.5097, -197.2330, -200.8276, -197.6353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2238, device='cuda:0', dtype=torch.float64)
tensor([-199.7299, -202.5509, -197.1607, -200.7645, -197.5470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-199.7009, -202.5236, -197.3110, -200.8908, -197.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-199.8049, -202.3618, -197.8647, -201.3776, -197.7280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-199.9681, -202.1183, -198.4341, -201.9187, -197.8821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-200.1045, -201.9557, -198.8708, -202.3338, -198.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-200.2332, -201.7800, -199.2243, -202.6841, -198.1056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-200.2704, -201.7307, -199.3020, -202.7604, -198.1169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-200.2096, -201.6959, -199.0665, -202.5772, -197.9688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-200.1789, -201.7064, -199.0120, -202.5059, -197.9118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-200.1411, -201.7673, -198.9146, -202.3850, -197.8871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-200.1074, -201.8367, -198.7826, -202.2325, -197.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-200.1044, -201.8777, -198.7568, -202.1777, -197.8766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-200.0978, -201.9301, -198.7345, -202.1294, -197.8999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-200.0415, -202.0219, -198.5761, -201.9609, -197.8768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-199.9645, -202.0615, -198.4136, -201.8047, -197.8114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-199.8947, -202.0839, -198.2914, -201.6894, -197.7638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.9169, -202.0226, -198.3871, -201.7841, -197.8024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-199.9462, -201.9456, -198.5040, -201.9017, -197.8356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.9193, -201.9808, -198.3367, -201.7581, -197.7980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.8602, -202.0814, -198.1370, -201.5775, -197.7775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.8441, -202.1603, -198.0589, -201.4910, -197.7898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-199.8459, -202.1896, -198.0294, -201.4779, -197.8215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.9510, -202.0681, -198.3341, -201.7872, -197.9438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-200.0201, -201.9735, -198.5274, -201.9908, -198.0149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-200.0757, -201.9668, -198.6487, -202.0981, -198.1141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.1173, -201.9938, -198.7190, -202.1583, -198.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-200.1350, -202.0313, -198.7796, -202.2015, -198.2760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-200.0914, -202.1305, -198.6146, -202.0541, -198.2796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-199.9984, -202.2971, -198.3640, -201.8185, -198.2543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.9468, -202.3497, -198.3019, -201.7731, -198.2494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-199.8191, -202.4225, -198.1201, -201.6206, -198.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-199.7409, -202.4564, -198.1182, -201.6262, -198.1396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.6286, -202.5729, -197.8772, -201.4177, -198.0498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.4524, -202.8048, -197.4251, -201.0176, -197.9162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-199.3210, -202.9142, -197.0336, -200.7063, -197.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-199.2977, -202.9653, -197.0484, -200.7428, -197.7598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.3712, -202.8625, -197.5349, -201.2019, -197.9029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-199.3988, -202.8070, -197.7835, -201.4545, -197.9567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.4346, -202.7522, -198.0917, -201.7468, -198.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.4751, -202.6917, -198.3669, -201.9958, -198.0682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.5480, -202.6045, -198.8135, -202.3827, -198.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-199.5890, -202.5561, -199.0312, -202.5618, -198.2415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-199.6987, -202.4033, -199.4750, -202.9679, -198.3451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.6928, -202.3953, -199.5326, -203.0169, -198.3281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.6132, -202.5140, -199.3170, -202.7921, -198.2390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-199.4729, -202.7348, -198.8471, -202.3194, -198.0790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-199.3107, -203.0072, -198.3734, -201.8321, -197.9383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.1717, -203.2617, -197.9532, -201.4140, -197.8348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.0443, -203.5263, -197.5766, -201.0254, -197.7771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.0316, -203.6274, -197.5589, -200.9770, -197.8267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.0464, -203.7125, -197.6634, -201.0213, -197.9410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.0853, -203.7208, -197.8474, -201.1619, -198.0461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.1128, -203.7803, -197.9535, -201.2392, -198.1529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-199.1105, -203.9236, -197.9593, -201.2127, -198.2740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.0697, -204.1601, -197.8431, -201.0598, -198.3858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-199.0536, -204.2808, -197.8115, -201.0012, -198.4736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-199.0517, -204.3334, -197.6996, -200.9031, -198.4978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-199.0850, -204.2863, -197.7688, -200.9593, -198.5044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-199.0958, -204.1972, -197.7600, -200.9594, -198.4520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-199.0905, -204.1354, -197.7289, -200.9281, -198.4117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.1248, -204.0195, -197.8378, -201.0229, -198.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-199.1582, -203.9496, -197.8977, -201.0622, -198.4379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-199.2247, -203.8076, -198.0849, -201.2175, -198.4859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-199.3194, -203.5548, -198.3355, -201.4592, -198.4932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.4222, -203.2722, -198.4307, -201.5881, -198.4301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-199.3761, -203.1804, -197.9681, -201.2026, -198.2152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.3254, -203.0906, -197.5397, -200.8430, -198.0086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-199.3434, -202.9134, -197.3266, -200.6765, -197.8467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.4268, -202.6534, -197.3460, -200.7285, -197.7604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.5828, -202.3189, -197.5303, -200.9213, -197.7375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.7534, -202.0007, -197.8171, -201.1939, -197.7566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.9075, -201.7441, -198.0447, -201.4141, -197.7891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-200.0275, -201.4910, -198.1260, -201.5066, -197.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-200.1028, -201.3273, -198.0858, -201.4656, -197.7005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-200.0962, -201.2451, -197.7943, -201.2014, -197.5547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-200.0383, -201.2626, -197.4217, -200.8525, -197.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-200.0324, -201.2558, -197.2426, -200.7005, -197.3740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-200.0422, -201.2508, -197.2477, -200.6968, -197.4072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-200.0819, -201.2149, -197.4625, -200.8897, -197.5098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-200.0990, -201.2623, -197.6496, -201.0253, -197.6584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-200.1757, -201.2038, -197.9307, -201.2581, -197.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-200.2395, -201.2334, -198.2233, -201.4801, -198.0457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-200.2859, -201.2819, -198.3890, -201.5941, -198.2196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-200.3287, -201.3476, -198.5346, -201.6896, -198.3939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-200.3126, -201.4886, -198.4492, -201.5808, -198.4968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-200.2490, -201.6596, -198.2535, -201.3872, -198.5585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-200.1042, -201.8638, -197.8599, -201.0295, -198.5115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-199.9383, -202.0678, -197.3346, -200.5651, -198.3854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.8272, -202.2135, -197.0235, -200.2980, -198.3338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-199.6510, -202.3892, -196.5729, -199.9092, -198.2302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-199.5109, -202.5467, -196.2063, -199.5890, -198.1511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.4195, -202.6991, -196.0943, -199.4850, -198.1456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.3941, -202.7525, -196.2474, -199.6006, -198.2209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-199.3746, -202.7997, -196.4801, -199.7739, -198.3204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-199.4046, -202.7866, -196.8827, -200.1078, -198.4640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-199.5839, -202.5492, -197.8336, -200.9522, -198.7324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.7661, -202.3318, -198.5676, -201.6209, -198.9486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-199.9233, -202.1347, -199.1760, -202.1910, -199.1399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-200.0233, -202.0443, -199.5593, -202.5464, -199.2802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.0501, -202.0751, -199.6222, -202.5657, -199.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-199.9981, -202.1641, -199.4934, -202.4161, -199.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-199.9020, -202.3220, -199.2024, -202.1184, -199.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-199.7566, -202.5386, -198.6640, -201.5989, -199.0582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.5964, -202.7551, -198.0679, -201.0357, -198.8788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.4517, -202.9280, -197.4286, -200.4656, -198.6640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.2983, -203.1459, -196.6990, -199.8236, -198.4377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-199.1767, -203.3102, -196.1039, -199.3083, -198.2493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-199.0838, -203.4602, -195.6620, -198.9244, -198.1202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-199.0327, -203.5627, -195.6076, -198.8584, -198.1148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-199.0732, -203.5734, -196.0798, -199.2308, -198.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.1057, -203.5937, -196.4981, -199.5638, -198.4847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-199.2233, -203.4103, -197.1658, -200.1774, -198.6952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-199.3344, -203.2365, -197.7751, -200.7438, -198.8890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-199.4607, -203.0685, -198.3669, -201.2983, -199.0751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.5782, -202.9350, -198.7945, -201.7062, -199.2176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.6469, -202.8599, -199.0427, -201.9594, -199.2840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-199.7072, -202.7410, -199.2395, -202.2009, -199.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.7432, -202.6504, -199.3771, -202.3631, -199.2289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-199.7744, -202.6405, -199.4268, -202.3856, -199.1963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.7254, -202.7304, -199.1994, -202.1472, -199.0775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-199.6312, -202.8811, -198.8315, -201.7685, -198.9250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.5763, -203.0072, -198.6449, -201.5662, -198.8712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.5534, -203.0944, -198.5017, -201.4205, -198.8306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.5182, -203.1921, -198.2958, -201.2181, -198.7795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.5107, -203.2524, -198.1805, -201.0967, -198.7443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.4738, -203.3460, -198.0176, -200.9400, -198.7047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-199.4715, -203.3804, -197.9613, -200.8833, -198.7066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-199.4525, -203.3709, -197.8565, -200.8017, -198.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.4401, -203.3827, -197.7505, -200.7212, -198.5731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.4642, -203.3418, -197.6898, -200.7064, -198.5341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.5214, -203.2141, -197.6428, -200.7276, -198.4746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-199.5634, -203.0674, -197.4888, -200.6644, -198.3468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-199.6084, -202.8960, -197.3770, -200.6373, -198.2088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.7000, -202.6954, -197.4521, -200.7678, -198.1650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-199.7850, -202.5155, -197.6172, -200.9641, -198.1455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-199.7628, -202.4387, -197.4427, -200.8566, -198.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-199.6799, -202.4673, -197.1204, -200.5946, -197.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.5533, -202.5424, -196.6225, -200.1715, -197.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-199.4493, -202.6475, -196.3811, -199.9270, -197.6432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-199.3731, -202.7353, -196.1751, -199.7160, -197.5751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-199.4759, -202.5873, -196.6110, -200.0624, -197.6832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-199.6055, -202.4260, -197.2485, -200.5514, -197.8565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-199.7792, -202.1869, -198.0033, -201.1775, -198.0572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.9263, -201.9742, -198.7031, -201.7977, -198.2429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-200.0455, -201.7909, -199.2007, -202.2623, -198.3720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-200.0804, -201.7092, -199.4111, -202.4898, -198.4288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-200.0919, -201.6380, -199.5003, -202.6116, -198.4428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-200.0692, -201.6473, -199.4509, -202.5982, -198.4240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-199.9265, -201.7645, -199.0604, -202.2677, -198.2614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-199.8313, -201.8554, -198.7428, -201.9988, -198.1137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-199.7387, -201.9385, -198.3835, -201.7153, -197.9494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.6759, -202.0166, -198.0761, -201.4794, -197.8118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.6036, -202.1451, -197.7970, -201.2528, -197.7100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-199.5529, -202.2876, -197.4510, -200.9575, -197.6162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.5971, -202.3323, -197.4558, -200.9694, -197.6573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.6598, -202.3249, -197.4898, -201.0371, -197.7155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.7112, -202.3371, -197.5861, -201.1493, -197.7734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-199.8659, -202.2324, -198.0354, -201.5691, -197.9593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.9584, -202.1707, -198.2172, -201.7542, -198.0293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.9986, -202.1290, -198.2144, -201.8054, -198.0124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.9736, -202.1722, -197.9690, -201.6365, -197.9242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-200.0224, -202.1096, -197.9872, -201.7296, -197.8912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-199.9238, -202.1790, -197.6314, -201.4793, -197.7164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.8819, -202.1457, -197.4204, -201.3650, -197.5653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.8009, -202.2250, -197.1182, -201.1253, -197.4488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.7582, -202.2184, -197.0874, -201.1361, -197.4021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.7737, -202.1212, -197.2186, -201.3055, -197.3786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-199.8750, -201.8664, -197.5361, -201.6622, -197.3801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-199.9380, -201.6714, -197.6539, -201.8319, -197.3491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-199.9276, -201.5798, -197.5864, -201.8117, -197.2898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.9230, -201.4564, -197.4629, -201.7612, -197.1979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.8576, -201.4460, -197.1407, -201.5093, -197.0698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.7953, -201.4580, -196.8284, -201.2692, -196.9808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-199.7476, -201.3927, -196.6670, -201.1768, -196.9020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.7423, -201.3401, -196.6052, -201.1429, -196.8925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.7571, -201.3445, -196.7286, -201.2332, -196.9890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.8386, -201.2967, -197.1668, -201.5668, -197.1939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-199.8906, -201.2144, -197.5548, -201.8813, -197.3209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-199.9011, -201.2176, -197.7978, -202.0499, -197.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-199.9339, -201.1840, -198.1082, -202.2826, -197.5373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.9920, -201.1226, -198.4858, -202.5825, -197.6721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.9937, -201.1214, -198.5975, -202.6701, -197.7137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-200.0356, -201.0902, -198.8141, -202.8479, -197.8081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.9515, -201.2116, -198.6489, -202.6847, -197.7961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-199.8438, -201.3103, -198.4013, -202.4828, -197.7297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.7260, -201.4639, -198.1159, -202.2361, -197.7056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.5633, -201.6740, -197.6535, -201.8303, -197.6224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-199.4319, -201.8188, -197.2083, -201.4698, -197.5130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-199.3334, -201.9023, -196.6893, -201.0740, -197.3534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-199.3250, -201.8373, -196.5214, -201.0063, -197.2577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-199.2909, -201.8358, -196.3419, -200.9068, -197.1817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.3035, -201.7977, -196.4678, -201.0562, -197.2250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.3570, -201.7788, -196.6998, -201.2843, -197.3358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-199.3737, -201.8265, -196.8559, -201.4232, -197.4474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-199.4543, -201.8789, -197.1859, -201.6770, -197.6490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-199.5306, -201.9151, -197.4475, -201.8884, -197.8182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-199.5902, -201.9641, -197.5396, -201.9604, -197.9276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.6100, -202.0017, -197.5387, -201.9541, -197.9791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.6669, -202.0138, -197.7359, -202.1114, -198.0952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.7213, -201.9607, -197.9711, -202.3344, -198.1645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-199.7369, -201.9946, -198.0599, -202.3995, -198.2363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.7304, -202.0351, -197.9804, -202.3251, -198.2479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.6948, -202.1086, -197.8040, -202.1652, -198.2267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.6565, -202.1967, -197.6953, -202.0494, -198.2360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.5799, -202.2413, -197.5762, -201.9521, -198.1965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-199.4863, -202.2678, -197.3238, -201.7520, -198.1022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-199.3766, -202.3003, -197.0163, -201.5039, -197.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.3069, -202.2813, -196.8236, -201.3839, -197.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-199.2091, -202.2814, -196.5137, -201.1597, -197.7722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-199.0936, -202.3311, -196.1487, -200.8800, -197.6332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-198.9530, -202.3929, -195.6122, -200.4662, -197.4319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-198.8683, -202.3811, -195.2101, -200.1613, -197.2518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-198.8481, -202.3863, -195.1390, -200.0937, -197.2345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-198.8848, -202.3592, -195.2408, -200.1729, -197.3052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-198.9323, -202.3102, -195.3208, -200.2481, -197.3557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-198.9675, -202.2281, -195.3142, -200.2722, -197.3739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-198.9863, -202.1247, -195.2234, -200.2317, -197.3201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-199.0559, -201.9781, -195.3485, -200.3898, -197.3228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.1980, -201.7910, -195.9116, -200.8859, -197.4896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-199.2621, -201.6876, -196.0911, -201.0603, -197.5537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.2906, -201.5437, -196.1585, -201.1866, -197.5396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-199.3860, -201.3680, -196.5149, -201.5446, -197.6158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.4651, -201.2220, -196.8123, -201.8457, -197.6607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-199.5218, -201.0861, -197.0260, -202.0770, -197.6566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-199.5340, -201.0080, -197.0552, -202.1442, -197.6212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-199.4953, -201.0358, -196.9992, -202.1032, -197.6153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-199.4631, -201.1206, -196.9751, -202.0603, -197.6679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.4706, -201.1810, -197.0746, -202.1373, -197.7405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-199.3952, -201.3659, -196.9919, -202.0301, -197.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.2227, -201.5692, -196.6462, -201.7341, -197.6605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.0286, -201.8202, -196.1072, -201.2521, -197.5130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.8404, -202.0232, -195.5963, -200.8200, -197.3471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.6719, -202.2094, -195.1363, -200.4283, -197.1731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-198.4516, -202.3539, -194.3749, -199.8129, -196.8472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-198.3527, -202.3923, -194.1283, -199.6415, -196.6878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-198.2498, -202.4017, -193.8920, -199.5104, -196.5062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.2236, -202.3658, -193.9788, -199.6355, -196.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-198.2370, -202.2737, -194.1416, -199.8261, -196.4531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-198.3121, -202.0388, -194.4483, -200.1933, -196.4081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-198.4721, -201.8127, -195.1636, -200.8432, -196.5524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-198.6880, -201.6522, -196.0143, -201.5752, -196.8408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.9335, -201.5140, -196.9229, -202.3383, -197.1998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.0709, -201.3977, -197.4404, -202.7688, -197.3760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.1920, -201.2600, -197.7962, -203.0730, -197.4822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.1142, -201.1415, -197.5799, -202.9241, -197.2866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-199.0816, -201.0511, -197.4953, -202.8626, -197.1853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.0840, -201.0034, -197.5234, -202.8598, -197.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-199.1066, -200.9343, -197.6149, -202.9191, -197.1607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.0876, -200.9569, -197.5503, -202.8087, -197.1276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-199.0431, -201.0017, -197.3091, -202.5511, -197.0191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-198.9014, -201.1368, -196.8644, -202.0960, -196.8363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1.1432, device='cuda:0', dtype=torch.float64)
tensor([-198.7601, -201.4950, -196.5424, -201.5089, -196.7200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-198.7577, -201.8160, -196.5423, -201.2127, -196.8173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-198.7899, -202.0692, -196.6338, -201.0433, -196.9300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-198.8056, -202.3272, -196.5288, -200.7338, -196.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-198.8644, -202.5142, -196.5957, -200.6268, -197.1031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.0166, -202.5072, -196.9996, -200.8607, -197.3039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-199.2613, -202.3858, -197.6091, -201.2842, -197.5798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.5692, -202.1385, -198.4149, -201.9310, -197.8889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-199.8355, -201.8868, -199.1639, -202.5633, -198.1611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-199.9446, -201.8119, -199.4553, -202.7748, -198.2710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.9579, -201.8935, -199.4726, -202.7083, -198.3405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.9167, -202.0471, -199.3931, -202.5320, -198.3787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-199.8902, -202.1634, -199.2582, -202.2882, -198.3753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.7762, -202.3767, -198.9167, -201.8466, -198.3118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-199.6286, -202.6391, -198.5269, -201.3581, -198.2452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-199.5456, -202.8472, -198.2514, -200.9820, -198.2223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.4968, -202.9944, -198.0943, -200.7131, -198.2315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-199.4423, -203.0940, -197.9238, -200.4645, -198.1967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-199.4707, -203.1017, -197.9641, -200.4382, -198.2290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.4720, -203.1676, -197.8641, -200.2525, -198.2333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.5180, -203.1497, -197.9340, -200.2645, -198.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-199.5138, -203.1256, -197.8363, -200.1420, -198.2160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.4535, -203.2090, -197.6320, -199.8957, -198.1492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.4569, -203.2001, -197.7353, -199.9505, -198.2110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-199.5415, -203.0370, -198.0886, -200.2822, -198.3114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.6620, -202.7485, -198.5498, -200.7878, -198.4012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.7722, -202.4943, -198.9571, -201.2358, -198.4942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.8500, -202.2081, -199.3293, -201.6837, -198.5423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.8129, -202.0786, -199.3382, -201.7855, -198.4695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-199.6793, -202.1701, -199.0536, -201.5351, -198.3832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-199.5226, -202.2858, -198.7040, -201.2316, -198.2619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.3433, -202.4578, -198.2117, -200.7984, -198.0973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.2014, -202.5518, -197.8426, -200.4972, -197.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.1189, -202.5837, -197.6275, -200.3458, -197.8707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.0250, -202.5855, -197.3782, -200.1747, -197.7595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2542, device='cuda:0', dtype=torch.float64)
tensor([-198.8777, -202.7437, -196.9973, -199.8430, -197.6240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-198.7818, -202.8540, -196.7800, -199.6656, -197.5430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.8239, -202.7968, -197.0036, -199.9036, -197.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.9465, -202.6682, -197.4059, -200.3004, -197.7991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.1789, -202.4823, -198.0841, -200.9462, -198.1048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-199.4478, -202.2921, -198.7467, -201.5779, -198.4086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.6258, -202.2164, -199.1393, -201.9458, -198.6316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.7117, -202.2875, -199.2602, -202.0118, -198.7962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-199.6659, -202.5251, -198.9703, -201.6668, -198.8256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.5501, -202.8153, -198.4986, -201.1650, -198.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-199.5078, -202.9857, -198.2421, -200.8910, -198.7483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-199.4206, -203.1610, -197.9184, -200.5748, -198.7016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.3809, -203.2632, -197.7139, -200.3810, -198.6853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.2479, -203.5056, -197.1990, -199.8934, -198.5786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-199.1306, -203.8273, -196.7075, -199.3800, -198.5518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-199.0855, -203.9917, -196.4933, -199.1427, -198.5696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.1142, -203.9680, -196.6242, -199.2492, -198.6407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-199.2048, -203.8151, -196.9803, -199.5857, -198.7625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-199.2660, -203.7613, -197.2933, -199.8573, -198.9262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.3410, -203.6499, -197.5706, -200.1167, -199.0533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-199.3905, -203.5437, -197.7996, -200.3613, -199.1396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.4057, -203.4858, -197.8694, -200.4628, -199.1727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-199.4261, -203.3211, -198.0441, -200.6914, -199.1777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.4212, -203.2493, -198.0918, -200.7770, -199.1786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-199.4484, -203.0808, -198.1785, -200.9379, -199.1435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.4867, -202.9072, -198.3894, -201.2044, -199.1687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.4686, -202.8310, -198.4502, -201.3322, -199.1414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.4883, -202.6959, -198.6131, -201.5513, -199.1440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-199.5091, -202.5012, -198.7803, -201.8061, -199.0929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-199.5324, -202.3948, -198.8548, -201.9468, -199.0589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.5243, -202.3650, -198.8846, -202.0206, -199.0187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.4804, -202.4123, -198.8507, -202.0272, -198.9793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-199.3166, -202.5883, -198.3797, -201.6537, -198.8072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-199.1085, -202.8729, -197.7566, -201.1186, -198.6203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-198.9349, -203.1410, -197.2719, -200.6758, -198.5181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-198.8212, -203.2921, -196.9471, -200.4251, -198.4424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-198.7530, -203.3050, -196.7342, -200.3197, -198.3586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-198.7631, -203.2390, -196.7832, -200.4277, -198.3653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-198.8361, -203.1742, -197.1169, -200.7652, -198.5015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.9401, -203.1101, -197.5036, -201.1421, -198.6782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.9793, -203.1030, -197.6421, -201.2932, -198.7599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-198.9398, -203.1899, -197.5620, -201.2335, -198.7654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-198.9284, -203.2246, -197.6106, -201.2648, -198.7893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-198.9644, -203.1709, -197.8313, -201.4523, -198.8201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-198.9505, -203.1635, -197.8661, -201.4792, -198.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-199.0084, -203.0811, -198.0315, -201.6568, -198.8038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.9817, -203.0902, -198.0053, -201.6630, -198.7600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-198.9764, -203.0930, -198.0192, -201.6970, -198.7191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-198.9896, -203.0718, -198.1066, -201.8126, -198.6818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.0151, -203.0769, -198.1772, -201.8951, -198.6791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-199.1080, -202.9145, -198.3172, -202.0929, -198.6356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.2139, -202.7653, -198.4730, -202.2942, -198.6269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.1745, -202.7421, -198.2445, -202.1384, -198.4876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-199.1611, -202.6600, -197.9730, -201.9502, -198.3226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-199.0796, -202.5768, -197.4858, -201.5668, -198.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-198.9818, -202.5154, -196.9379, -201.1201, -197.7505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-198.9009, -202.4201, -196.4874, -200.7722, -197.4691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.8611, -202.2704, -196.1587, -200.5572, -197.2166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-198.8053, -202.2933, -195.9329, -200.3712, -197.1313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-198.8286, -202.2478, -195.9202, -200.3806, -197.1312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-198.9070, -202.1515, -196.1270, -200.5935, -197.2207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-199.0681, -201.9662, -196.5737, -201.0286, -197.3863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-199.3555, -201.6329, -197.3723, -201.8001, -197.6680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-199.7285, -201.2810, -198.3675, -202.7240, -198.0648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-200.0478, -200.9981, -199.1690, -203.4382, -198.4072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-200.2110, -200.8385, -199.5099, -203.7501, -198.5789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-200.2342, -200.8301, -199.4730, -203.6791, -198.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-200.0889, -200.9747, -199.0333, -203.2339, -198.5165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.7905, -201.3092, -198.2882, -202.4846, -198.3379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-199.5881, -201.5687, -197.8038, -201.9669, -198.2394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.3947, -201.8076, -197.3067, -201.4766, -198.1183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-199.2695, -202.0036, -196.9414, -201.1151, -198.0504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-199.1904, -202.1680, -196.6051, -200.7831, -198.0049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-199.1703, -202.3207, -196.4781, -200.6344, -198.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.1849, -202.4385, -196.4078, -200.5385, -198.1466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.2861, -202.3840, -196.6282, -200.7338, -198.2782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.4364, -202.3227, -196.9300, -200.9712, -198.4750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.4811, -202.4361, -196.9507, -200.9244, -198.6296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-199.4999, -202.5873, -196.9047, -200.8029, -198.7711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.5764, -202.5887, -196.9929, -200.8585, -198.9081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-199.5606, -202.5708, -196.8266, -200.7373, -198.8923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-199.5791, -202.4795, -196.8593, -200.8108, -198.9140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.6321, -202.2556, -197.1249, -201.1625, -198.9440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-199.7783, -201.9016, -197.7133, -201.8376, -199.0611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.9117, -201.5903, -198.2194, -202.4281, -199.1681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.9199, -201.4308, -198.3071, -202.6264, -199.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-199.8686, -201.3236, -198.2176, -202.6542, -198.9729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-199.8236, -201.2202, -198.0389, -202.5720, -198.7861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0524, device='cuda:0', dtype=torch.float64)
tensor([-199.6913, -201.1529, -197.6264, -202.2989, -198.5026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.5449, -201.1245, -197.1631, -201.9724, -198.2207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-199.4329, -201.1393, -196.7827, -201.6768, -198.0279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-199.2687, -201.2396, -196.2368, -201.1940, -197.8169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-199.1491, -201.3360, -195.7355, -200.7257, -197.6480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.0845, -201.4222, -195.3329, -200.3544, -197.5507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-198.9677, -201.4573, -194.7534, -199.8882, -197.3348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-199.1060, -201.4119, -195.0512, -200.1116, -197.4926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-199.1981, -201.3214, -195.2439, -200.2821, -197.5449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7739, device='cuda:0', dtype=torch.float64)
tensor([-199.2266, -201.5640, -194.5401, -199.4226, -197.5473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.3769, -201.6397, -193.8480, -198.5750, -197.5602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-199.5712, -201.6282, -193.3392, -197.8668, -197.5951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-199.7655, -201.6024, -193.3305, -197.6582, -197.7438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.9692, -201.6301, -194.4155, -198.4691, -198.2371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-200.0570, -201.6691, -195.8799, -199.7608, -198.6998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-200.1412, -201.5603, -197.6069, -201.4147, -199.1388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-200.0715, -201.4839, -198.5167, -202.3655, -199.2994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-200.0376, -201.3944, -199.1837, -203.0625, -199.3977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-200.0516, -201.2574, -199.6985, -203.6352, -199.4220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.9157, -201.3098, -199.7568, -203.7284, -199.3238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-199.6285, -201.5227, -199.4126, -203.4319, -199.0806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-199.2647, -201.8452, -198.7750, -202.8273, -198.7736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-198.8558, -202.2754, -197.9254, -201.9910, -198.4093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.5480, -202.5719, -197.1745, -201.2853, -198.0230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.3407, -202.8419, -196.6195, -200.7653, -197.7636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.9973, device='cuda:0', dtype=torch.float64)
tensor([-198.2781, -202.8543, -196.3643, -200.5877, -197.4781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-198.2467, -202.7644, -196.3406, -200.6077, -197.1940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-198.3107, -202.5977, -196.5103, -200.7886, -197.0141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-198.4096, -202.4726, -196.7425, -201.0245, -196.9725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-198.5215, -202.3993, -196.9053, -201.1934, -196.9579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-198.6380, -202.3411, -197.1306, -201.4042, -196.9824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-198.7359, -202.3033, -197.2753, -201.5479, -196.9994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.7424, -202.4023, -197.1638, -201.4423, -196.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.7138, -202.6474, -196.8712, -201.1607, -196.9533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-198.7445, -202.8460, -196.7264, -201.0299, -197.0491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-198.7340, -203.0421, -196.5814, -200.8920, -197.1089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-198.7362, -203.2231, -196.5047, -200.8072, -197.2103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.7267, -203.4176, -196.4078, -200.6859, -197.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-198.7435, -203.5463, -196.3687, -200.6383, -197.3667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.7394, -203.7103, -196.2513, -200.5144, -197.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.7339, -203.8362, -196.1278, -200.3978, -197.5204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-198.7795, -203.8588, -196.1365, -200.4298, -197.6148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-198.8173, -203.8355, -196.1602, -200.4909, -197.6830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-198.8808, -203.7974, -196.2421, -200.6238, -197.7629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-198.8538, -203.8063, -196.1397, -200.5828, -197.7534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-198.8284, -203.7745, -196.0272, -200.5411, -197.7094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-198.8543, -203.6087, -196.0900, -200.6543, -197.6537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-198.8862, -203.4277, -196.1635, -200.7816, -197.6097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-198.9647, -203.2413, -196.3580, -201.0060, -197.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.0496, -202.9973, -196.5552, -201.2020, -197.6380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.1960, -202.7029, -196.8371, -201.5005, -197.6600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-199.3157, -202.4348, -197.0477, -201.7304, -197.6643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-199.3659, -202.2505, -197.1285, -201.8303, -197.6413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-199.2963, -202.2059, -196.7584, -201.5276, -197.4913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-199.1757, -202.2386, -196.1694, -201.0334, -197.2867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-199.0458, -202.3186, -195.5344, -200.4960, -197.1086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-198.9101, -202.3927, -194.8712, -199.9455, -196.9033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-198.8619, -202.4568, -194.4267, -199.5960, -196.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-198.7713, -202.5024, -193.8596, -199.1562, -196.7689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-198.7661, -202.5444, -193.5212, -198.8930, -196.8025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.9266, -202.6091, -193.8633, -199.1214, -197.1400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-199.1930, -202.6407, -194.6079, -199.6454, -197.6346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.4295, -202.5942, -195.2360, -200.1045, -198.0097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.6961, -202.4305, -195.8598, -200.6095, -198.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.9277, -202.3528, -196.4658, -201.0970, -198.6093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5989, device='cuda:0', dtype=torch.float64)
tensor([-200.1805, -202.2849, -197.0054, -201.5593, -198.7229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-200.2437, -202.3254, -196.9837, -201.5399, -198.6126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.3047, -202.2749, -196.9241, -201.5111, -198.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-200.2581, -202.3189, -196.5430, -201.2102, -198.1806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-200.1981, -202.3734, -196.1687, -200.9175, -197.9153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-200.2457, -202.3130, -196.0602, -200.8648, -197.7328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-200.2006, -202.3399, -195.7602, -200.6136, -197.5003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-200.1963, -202.3638, -195.5811, -200.4650, -197.3480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-200.1623, -202.4193, -195.2920, -200.2126, -197.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-200.2318, -202.4405, -195.3858, -200.2697, -197.1606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-200.3958, -202.3787, -195.8643, -200.6602, -197.2972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-200.6307, -202.2048, -196.5416, -201.2532, -197.4859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-200.9891, -201.9439, -197.5774, -202.1702, -197.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-201.1601, -201.8173, -198.1018, -202.6188, -197.9784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-201.2362, -201.8111, -198.3070, -202.7716, -198.0325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-201.2749, -201.8376, -198.4137, -202.8304, -198.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-201.2355, -201.8579, -198.2565, -202.6717, -197.9526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-201.2333, -201.8585, -198.2075, -202.6149, -197.8790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-201.2599, -201.8522, -198.2234, -202.6199, -197.8576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-201.2230, -201.9398, -198.1636, -202.5348, -197.8374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-201.1933, -201.9633, -198.0569, -202.4520, -197.7599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-201.0814, -202.0555, -197.7548, -202.1770, -197.6078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-200.8332, -202.3701, -197.1313, -201.5573, -197.4209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-200.5858, -202.6955, -196.4477, -200.8974, -197.2456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-200.4426, -202.8706, -196.0402, -200.5187, -197.1241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-200.3536, -203.0369, -195.8420, -200.3225, -197.1042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-200.2491, -203.2315, -195.5733, -200.0687, -197.0916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-200.2793, -203.3138, -195.6521, -200.1133, -197.2196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-200.3286, -203.3221, -195.7850, -200.2193, -197.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-200.5214, -203.0752, -196.2927, -200.7139, -197.4811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-200.6712, -202.8828, -196.6747, -201.0865, -197.5975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-200.8032, -202.6959, -196.9912, -201.4330, -197.6890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-200.9481, -202.4595, -197.3262, -201.8066, -197.7374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-201.0867, -202.2378, -197.6469, -202.1491, -197.7868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-201.1948, -202.0787, -197.8813, -202.3868, -197.8449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-201.1176, -202.0759, -197.7170, -202.2487, -197.7685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-200.9776, -202.1400, -197.4190, -202.0013, -197.6391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-200.7397, -202.3173, -196.8275, -201.5036, -197.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.4549, -202.5809, -196.0711, -200.8460, -197.2080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-200.2680, -202.7066, -195.6159, -200.4809, -197.0483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-200.0251, -202.8073, -195.0105, -200.0381, -196.7940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.7836, -202.9577, -194.3393, -199.5315, -196.5667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-199.6749, -203.0262, -194.1299, -199.4129, -196.5254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.6201, -203.1092, -194.0852, -199.4191, -196.5868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.6511, -203.1159, -194.2793, -199.6389, -196.7067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-199.7027, -203.1163, -194.7126, -200.0367, -196.8921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-199.8158, -203.1390, -195.4216, -200.6290, -197.2239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.9210, -203.0900, -196.0546, -201.2021, -197.5082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-199.9740, -203.1497, -196.4876, -201.5493, -197.7726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-200.0621, -203.1530, -196.9402, -201.9057, -198.0121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.1276, -203.1946, -197.2727, -202.1425, -198.2344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-200.1492, -203.2399, -197.4836, -202.3031, -198.3797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-200.0272, -203.3198, -197.2366, -202.1025, -198.2880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.8360, -203.4711, -196.8229, -201.7877, -198.1435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.6588, -203.5544, -196.3805, -201.4793, -197.9381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.4793, -203.6180, -195.8525, -201.1282, -197.6951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.3018, -203.6438, -195.2259, -200.7131, -197.3949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-199.1413, -203.6382, -194.6502, -200.3419, -197.1009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-198.9831, -203.6131, -194.0557, -199.9772, -196.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.9930, -203.4051, -193.9175, -200.0176, -196.6268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-199.1473, -203.2123, -194.3346, -200.4759, -196.7401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-199.3629, -202.9947, -194.8926, -201.0548, -196.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-199.5710, -202.7807, -195.4481, -201.6422, -197.0843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-199.7116, -202.6414, -195.8571, -202.0660, -197.2276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-199.7441, -202.5873, -196.0044, -202.2766, -197.2989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.6171, -202.5912, -195.7171, -202.1168, -197.1842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.5006, -202.5851, -195.4517, -201.9659, -197.0926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-199.4733, -202.5860, -195.4515, -201.9994, -197.1600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.5801, -202.4810, -195.7549, -202.2808, -197.3116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-199.5664, -202.4647, -195.7193, -202.2620, -197.3192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-199.5158, -202.4387, -195.5500, -202.1542, -197.2331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.5627, -202.3006, -195.5874, -202.2153, -197.1958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-199.5451, -202.2074, -195.4616, -202.1621, -197.0838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.5052, -202.1894, -195.3308, -202.0774, -196.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-199.4907, -202.1321, -195.2443, -202.0433, -196.9129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.4797, -202.1066, -195.1753, -202.0053, -196.8551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.4849, -202.1109, -195.2075, -202.0354, -196.8685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.4277, -202.1911, -195.0645, -201.9050, -196.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.4846, -202.1328, -195.1157, -201.9650, -196.8574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-199.5669, -202.0693, -195.2316, -202.0760, -196.9077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.6788, -202.0052, -195.4590, -202.2609, -197.0157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.7003, -201.9714, -195.4296, -202.2361, -197.0065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-199.7612, -201.9676, -195.5791, -202.3177, -197.0700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.9517, -201.9036, -196.1159, -202.7003, -197.2896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-200.0223, -201.9459, -196.4524, -202.8792, -197.4545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-200.0960, -202.0088, -196.8144, -203.0744, -197.6513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-200.2167, -202.0337, -197.3109, -203.3656, -197.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-200.3254, -202.0434, -197.7568, -203.6374, -198.1365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-200.3912, -202.0168, -198.0902, -203.8576, -198.2873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-200.4038, -201.9839, -198.2372, -203.9523, -198.3155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-200.5169, -201.7951, -198.5340, -204.2317, -198.3466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-200.4268, -201.7948, -198.4138, -204.0997, -198.2255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-200.1504, -201.9324, -197.7387, -203.4843, -197.8785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-199.7770, -202.1351, -196.7112, -202.5822, -197.3781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-199.3597, -202.3739, -195.5296, -201.5678, -196.8121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.9710, -202.6332, -194.3572, -200.5676, -196.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.7672, -202.8482, -193.7382, -200.0027, -196.0107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.5939, -203.0538, -193.1850, -199.4948, -195.8206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-198.5716, -203.1388, -193.1669, -199.4227, -195.8252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-198.7076, -203.0751, -193.7222, -199.8495, -196.0317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-198.9916, -202.8499, -194.6241, -200.5932, -196.3579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-199.3324, -202.5591, -195.6305, -201.4386, -196.7260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.7226, -202.2302, -196.6570, -202.3444, -197.1254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-200.1183, -201.9508, -197.6862, -203.2610, -197.5521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-200.3782, -201.8132, -198.3289, -203.8039, -197.8605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-200.4897, -201.8770, -198.4958, -203.8965, -198.0633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-200.1704, -202.2529, -197.6097, -202.9892, -197.8529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-199.8354, -202.5322, -196.5524, -201.9736, -197.5182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-199.5103, -202.8539, -195.4272, -200.8712, -197.2065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-199.1965, -203.2421, -194.3872, -199.8387, -196.9697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.9712, -203.5615, -193.6384, -199.0705, -196.8335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-198.9484, -203.7385, -193.4972, -198.8122, -196.9215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.0445, -203.7459, -193.7754, -198.9155, -197.1112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-199.4155, -203.4766, -194.8971, -199.8041, -197.5565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-199.8030, -203.1359, -196.0859, -200.7937, -197.9855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-200.3095, -202.6376, -197.6111, -202.1884, -198.4969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-200.7217, -202.2206, -198.7064, -203.2291, -198.8491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-200.9400, -201.9231, -199.2995, -203.8336, -198.9971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-200.9323, -201.7576, -199.3807, -203.9703, -198.9394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-200.7468, -201.7848, -199.1241, -203.7502, -198.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-200.4729, -201.9120, -198.6139, -203.2859, -198.5512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-200.0550, -202.1387, -197.6882, -202.4693, -198.1163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-199.7116, -202.3245, -196.8873, -201.7693, -197.7551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.4290, -202.4142, -196.1288, -201.1460, -197.3810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-199.1432, -202.5240, -195.2365, -200.4101, -196.9813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-199.0168, -202.4840, -194.7486, -200.0552, -196.7408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-198.9421, -202.4538, -194.3603, -199.7739, -196.5689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-198.9249, -202.3787, -194.1050, -199.6023, -196.4386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-199.1114, -202.2004, -194.4943, -199.9597, -196.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.2954, -202.0417, -195.0294, -200.4382, -196.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-199.5871, -201.8042, -195.8262, -201.1609, -197.0484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-199.9008, -201.6428, -196.6607, -201.8754, -197.4133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-200.2008, -201.4809, -197.4069, -202.5303, -197.7317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-200.4135, -201.3798, -197.8616, -202.9487, -197.9352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-200.4021, -201.4771, -197.7768, -202.8430, -197.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-200.2999, -201.6571, -197.4349, -202.4760, -197.9026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-200.1699, -201.8422, -196.9307, -201.9432, -197.7701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-199.9999, -202.0196, -196.3089, -201.3151, -197.5834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.7873, -202.1764, -195.3915, -200.4647, -197.2852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.5385, -202.2599, -194.3910, -199.6205, -196.9197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-199.2913, -202.2593, -193.4180, -198.8646, -196.4904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-199.0846, -202.2571, -192.5383, -198.1602, -196.1113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.9564, -202.2034, -191.8395, -197.6132, -195.8215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-198.8569, -202.3798, -191.6545, -197.4089, -195.8074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.9025, -202.5869, -192.1172, -197.6793, -196.0680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.0873, -202.7398, -193.0908, -198.3559, -196.5588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0684, device='cuda:0', dtype=torch.float64)
tensor([-199.3616, -202.6401, -194.3147, -199.3617, -197.0823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-199.5702, -202.5016, -195.1676, -200.1234, -197.4404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-199.7372, -202.3271, -195.8074, -200.7365, -197.6847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-200.0803, -202.0254, -196.7940, -201.6303, -198.0879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-200.4826, -201.6771, -197.7639, -202.5426, -198.4966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-200.7936, -201.4100, -198.5097, -203.2582, -198.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-200.9289, -201.2449, -198.8559, -203.6327, -198.9260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-200.9099, -201.2481, -198.8557, -203.6362, -198.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-200.7658, -201.3078, -198.5925, -203.4278, -198.8430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-200.5898, -201.3572, -198.2394, -203.1569, -198.6728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-200.2436, -201.5649, -197.4531, -202.4688, -198.3384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.9297, -201.8079, -196.7451, -201.7958, -198.0969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.6686, -201.9902, -196.1237, -201.2568, -197.8731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.5167, -202.1491, -195.8194, -200.9622, -197.8096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-199.3806, -202.3154, -195.4984, -200.6477, -197.7488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.2979, -202.4405, -195.2805, -200.4191, -197.7267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-199.1749, -202.6452, -194.9802, -200.1092, -197.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-199.1138, -202.7938, -194.9029, -200.0081, -197.7929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-199.2367, -202.8579, -195.2893, -200.2841, -198.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.4357, -202.8460, -195.8192, -200.6986, -198.4830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.4891, -202.9534, -195.9484, -200.7777, -198.6735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.3919, -203.0850, -195.8331, -200.7147, -198.6890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-199.2697, -203.2320, -195.6367, -200.5585, -198.6628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.0786, -203.4193, -195.2474, -200.2674, -198.5463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-198.9631, -203.5028, -195.0703, -200.1997, -198.4692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.9491, -203.4668, -195.1163, -200.3541, -198.4585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.0027, -203.3690, -195.3183, -200.6416, -198.4924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-199.2217, -203.0513, -195.9668, -201.3804, -198.6252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.3834, -202.7375, -196.3855, -201.9498, -198.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-199.5576, -202.4885, -196.7707, -202.4385, -198.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.6716, -202.3298, -196.9528, -202.7040, -198.6823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-199.6721, -202.2180, -196.8938, -202.7341, -198.5668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.6197, -202.0529, -196.8500, -202.7797, -198.3935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-199.4303, -201.9819, -196.5188, -202.5675, -198.0968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-199.1717, -201.9575, -195.9855, -202.1570, -197.7234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-198.9015, -201.9606, -195.4063, -201.6984, -197.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-198.7302, -201.8627, -195.0513, -201.4512, -196.9721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-198.5325, -201.6513, -194.6000, -201.1519, -196.5032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.3883, -201.4974, -194.3110, -200.9557, -196.1695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-198.4177, -201.2203, -194.4385, -201.1185, -196.0231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-198.4565, -200.9799, -194.6090, -201.3045, -195.9328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.5268, -200.7511, -194.8218, -201.5239, -195.8996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-198.5624, -200.6138, -194.8647, -201.5966, -195.8748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.7205, -200.4782, -195.2055, -201.9270, -196.0381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.9323, -200.4500, -195.6908, -202.3219, -196.3708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-199.1258, -200.4664, -196.1611, -202.7023, -196.7002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.3492, -200.5103, -196.6512, -203.0907, -197.0615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.4915, -200.6326, -196.9877, -203.3253, -197.3745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.5850, -200.7850, -197.2484, -203.4838, -197.6805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.6021, -200.9972, -197.3334, -203.4638, -197.9201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.4774, -201.3476, -197.0846, -203.0947, -198.0415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.2639, -201.7075, -196.6254, -202.5192, -198.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-199.0922, -202.1036, -196.3035, -202.0459, -198.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-198.8582, -202.5209, -195.8485, -201.4729, -198.1482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.6590, -202.8799, -195.3975, -200.9061, -198.1111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-198.5116, -203.1728, -195.0912, -200.5079, -198.0975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.3899, -203.4848, -194.8218, -200.1167, -198.1503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.3485, -203.6155, -194.7599, -200.0001, -198.1952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-198.2549, -203.6782, -194.6407, -199.9370, -198.1254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.1975, -203.6850, -194.5381, -199.9009, -198.0429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-198.1906, -203.7222, -194.5946, -199.9459, -198.0770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.2808, -203.6394, -194.8344, -200.1674, -198.1528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.4064, -203.5079, -195.1452, -200.4560, -198.2479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-198.4953, -203.4217, -195.4037, -200.6967, -198.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-198.6411, -203.3062, -195.7890, -201.0180, -198.4791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-198.7993, -203.1568, -196.1775, -201.3954, -198.6249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-198.9131, -203.1164, -196.4972, -201.6862, -198.7804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-198.9365, -203.0818, -196.5856, -201.8327, -198.7777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.0416, -202.9212, -196.7411, -202.0525, -198.7588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-199.0529, -202.8345, -196.6546, -202.0476, -198.6311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-199.0025, -202.8206, -196.4712, -201.9712, -198.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.9238, -202.7488, -196.1675, -201.8638, -198.2171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-198.8219, -202.7228, -195.7990, -201.6786, -197.9740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-198.7690, -202.6040, -195.5306, -201.5984, -197.7372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.6771, -202.5054, -195.1969, -201.4364, -197.4635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.6339, -202.3775, -194.9147, -201.3039, -197.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-198.6229, -202.1816, -194.7613, -201.3190, -196.9996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-198.5977, -202.0258, -194.6263, -201.3257, -196.8143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.5778, -201.9166, -194.5418, -201.3505, -196.6774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-198.6010, -201.8050, -194.6096, -201.4729, -196.6083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-198.6228, -201.7503, -194.6386, -201.5308, -196.5700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-198.6266, -201.7659, -194.6303, -201.5140, -196.5670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-198.7301, -201.7403, -194.7521, -201.5828, -196.6586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-198.9196, -201.6793, -195.1813, -201.9003, -196.8799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.1305, -201.6010, -195.6322, -202.2297, -197.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-199.2311, -201.5655, -195.9614, -202.4560, -197.3217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-199.2991, -201.5328, -196.1729, -202.5698, -197.4393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-199.1956, -201.6090, -196.0133, -202.3544, -197.3892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-199.0600, -201.6881, -195.7619, -202.0750, -197.2893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.8975, -201.7224, -195.4061, -201.7574, -197.0998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.7274, -201.8161, -195.0216, -201.3966, -196.9353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.5957, -201.8632, -194.7230, -201.1368, -196.8042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.5576, -201.8572, -194.6991, -201.1211, -196.7835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-198.3885, -201.9593, -194.3195, -200.7972, -196.6682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-198.2764, -202.0005, -194.1593, -200.6455, -196.6098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-198.1803, -202.1509, -194.0250, -200.5017, -196.6406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.2007, -202.1813, -194.2003, -200.6358, -196.7457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-198.3595, -202.1220, -194.7220, -201.0534, -197.0222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-198.4878, -202.1308, -195.1981, -201.4238, -197.3149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.6948, -202.0316, -195.7624, -201.8989, -197.5987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5736, device='cuda:0', dtype=torch.float64)
tensor([-198.9636, -201.7513, -196.1696, -202.3260, -197.7357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-199.0876, -201.5391, -196.2325, -202.4561, -197.7116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-199.1521, -201.3989, -196.1026, -202.4086, -197.6225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.0628, -201.3603, -195.6111, -202.0350, -197.4068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-199.0180, -201.2672, -195.2008, -201.7374, -197.2070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.0185, -201.1744, -194.9498, -201.5789, -197.0937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-199.0717, -201.0704, -194.8444, -201.5411, -197.0455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.1015, -200.9358, -194.6673, -201.4502, -196.9403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-199.0435, -200.7989, -194.1947, -201.1023, -196.6936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-199.0463, -200.5745, -193.7976, -200.8280, -196.4704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.1016, -200.3518, -193.5331, -200.6477, -196.3215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-199.1412, -200.1345, -193.3274, -200.5141, -196.1807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-199.2497, -199.9358, -193.2998, -200.5261, -196.1315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-199.3836, -199.8050, -193.3892, -200.5879, -196.1781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-199.4477, -199.6098, -193.2586, -200.5493, -196.0716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.5855, -199.5783, -193.4388, -200.7023, -196.1910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.6768, -199.6061, -193.6214, -200.8427, -196.3089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.7323, -199.6298, -193.6434, -200.8168, -196.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-200.0308, -199.5295, -194.1837, -201.2503, -196.6183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-200.2399, -199.4715, -194.5108, -201.4924, -196.7879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-200.3275, -199.5054, -194.5511, -201.4659, -196.8565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-200.3019, -199.5158, -194.2389, -201.1380, -196.7603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-200.2117, -199.4420, -193.6986, -200.6718, -196.5151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-200.0710, -199.3960, -193.2365, -200.3380, -196.2678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-199.9940, -199.4233, -193.0134, -200.1616, -196.1676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.9337, -199.4569, -193.0685, -200.2543, -196.1337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-199.9128, -199.4961, -193.2693, -200.4549, -196.1776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-200.1102, -199.6052, -194.0473, -201.0319, -196.5590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-200.2995, -199.6299, -194.7796, -201.5958, -196.8786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-200.4187, -199.5823, -195.2031, -201.9390, -197.0308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-200.6126, -199.5264, -195.8114, -202.4379, -197.2696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-200.6841, -199.5119, -196.1004, -202.6818, -197.3677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-200.6488, -199.4929, -196.1283, -202.7254, -197.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-200.5003, -199.5482, -195.8862, -202.5291, -197.1707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-200.2334, -199.6690, -195.4430, -202.1633, -196.9379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-200.0768, -199.7936, -195.1281, -201.8811, -196.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.9342, -199.9350, -194.7611, -201.5459, -196.7174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-199.8012, -200.0810, -194.4462, -201.2687, -196.6147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.6823, -200.2433, -194.1731, -201.0264, -196.5446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-199.6039, -200.3083, -193.9377, -200.8554, -196.4730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.5503, -200.4317, -193.7956, -200.7186, -196.4823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.6184, -200.5034, -193.9627, -200.8304, -196.6339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-199.8257, -200.5560, -194.4285, -201.1610, -196.9319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-200.0053, -200.6308, -194.7770, -201.3468, -197.2227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1676, device='cuda:0', dtype=torch.float64)
tensor([-200.1441, -200.6408, -194.8898, -201.3771, -197.3959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-200.0653, -200.7188, -194.5281, -201.0044, -197.3477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-199.9373, -200.7506, -194.0768, -200.5920, -197.2004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-199.8199, -200.7474, -193.7900, -200.3692, -197.0940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.7624, -200.7539, -193.8499, -200.4671, -197.1213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-199.6781, -200.6756, -193.7904, -200.5032, -197.0282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-199.6114, -200.6568, -193.8592, -200.6155, -197.0308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-199.5324, -200.6286, -193.9087, -200.7198, -196.9953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-199.4822, -200.5743, -193.9590, -200.7914, -196.9483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-199.3705, -200.5186, -193.8994, -200.7978, -196.8161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.3837, -200.4557, -194.1006, -200.9946, -196.8125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.4533, -200.3792, -194.4852, -201.3618, -196.8763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-199.4404, -200.3316, -194.6577, -201.5510, -196.8538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-199.2906, -200.3524, -194.4430, -201.4085, -196.6803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-199.2215, -200.3453, -194.4389, -201.4419, -196.5913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.1670, -200.4227, -194.4353, -201.4149, -196.5960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.0625, -200.5405, -194.3564, -201.3190, -196.5778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-199.1008, -200.7021, -194.6285, -201.4892, -196.7860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-199.1083, -200.8755, -194.7461, -201.5429, -196.9379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1192, device='cuda:0', dtype=torch.float64)
tensor([-199.1332, -201.0472, -194.7158, -201.4442, -197.0031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-199.1922, -201.1505, -194.8706, -201.4956, -197.1031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-199.1565, -201.1904, -194.7542, -201.3623, -197.0391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-199.1411, -201.1724, -194.6202, -201.2252, -196.9549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-198.9774, -201.0951, -194.1441, -200.8631, -196.6253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-198.8643, -201.0360, -193.8340, -200.6136, -196.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-198.7947, -200.9796, -193.7432, -200.5549, -196.2307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-198.7498, -200.9100, -193.7172, -200.5646, -196.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-198.7677, -200.7495, -193.7070, -200.5849, -195.9906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-198.7989, -200.6422, -193.8025, -200.6699, -195.9554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-198.7372, -200.5402, -193.7375, -200.6284, -195.8052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-198.7044, -200.5234, -193.7822, -200.6229, -195.7573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-198.7342, -200.5425, -194.0108, -200.7635, -195.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-198.7710, -200.5870, -194.2143, -200.8699, -195.9056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-198.8938, -200.5518, -194.5919, -201.1503, -196.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.1181, -200.4787, -195.2006, -201.6407, -196.2766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-199.3234, -200.3938, -195.7944, -202.1365, -196.4830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.2714, -200.3936, -195.8057, -202.1397, -196.4159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.1695, -200.4566, -195.6939, -202.0127, -196.3617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.0768, -200.4622, -195.5502, -201.8875, -196.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-198.8412, -200.5000, -194.9679, -201.4037, -195.9978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.5770, -200.5630, -194.3113, -200.8551, -195.6892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-198.4460, -200.6629, -193.9534, -200.5670, -195.5747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-198.4416, -200.7438, -193.8277, -200.4766, -195.6126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-198.4755, -200.8186, -193.8734, -200.5026, -195.7312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-198.5495, -200.8928, -194.0121, -200.5991, -195.9043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-198.6276, -200.9142, -194.1002, -200.6817, -196.0326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.7637, -200.8204, -194.2818, -200.8358, -196.1559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.8270, -200.7256, -194.2946, -200.8455, -196.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-198.9934, -200.5844, -194.4896, -201.0268, -196.2653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.2338, -200.4508, -194.9270, -201.3936, -196.4915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.4454, -200.2808, -195.3429, -201.7686, -196.6573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-199.7140, -200.0997, -195.7847, -202.1608, -196.8911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-199.8815, -199.9483, -196.0394, -202.3828, -197.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-200.0767, -199.7808, -196.3759, -202.6717, -197.1751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-200.2539, -199.7039, -196.7474, -202.9464, -197.3684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-200.2790, -199.6253, -196.7918, -202.9775, -197.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-200.1233, -199.6622, -196.5270, -202.7221, -197.2396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.8145, -199.7413, -195.9456, -202.2014, -196.9478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-199.4730, -199.7945, -195.2258, -201.5907, -196.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.2598, -199.8981, -194.7927, -201.1562, -196.4289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-199.1101, -200.0307, -194.4559, -200.7975, -196.3671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-198.9849, -200.1229, -194.1721, -200.5151, -196.3057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-198.9365, -200.2436, -194.0414, -200.3427, -196.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-198.8337, -200.3903, -193.8344, -200.0882, -196.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-198.7479, -200.4612, -193.6295, -199.8854, -196.3072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.8103, -200.4878, -193.7344, -199.9513, -196.4245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.0044, -200.5032, -194.2398, -200.3596, -196.7188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-199.2254, -200.5430, -194.7685, -200.7641, -197.0870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.3012, -200.5784, -195.0217, -200.9521, -197.2864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.3573, -200.5434, -195.2539, -201.2101, -197.3924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.3271, -200.4843, -195.2469, -201.3159, -197.3558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-199.2550, -200.4392, -195.0966, -201.2751, -197.2819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-199.0505, -200.4024, -194.5794, -200.9237, -197.0253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.8047, -200.3465, -193.9252, -200.4602, -196.7110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.5981, -200.3122, -193.3542, -200.0240, -196.4489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-198.5202, -200.3106, -193.1841, -199.9166, -196.3837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.4593, -200.3468, -193.1290, -199.8979, -196.3727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-198.5183, -200.3814, -193.3116, -200.0527, -196.4986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.6194, -200.5040, -193.6456, -200.2937, -196.7374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.8337, -200.6167, -194.2110, -200.6858, -197.1059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-199.0571, -200.8400, -194.8408, -201.0436, -197.5638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-199.3618, -200.8985, -195.5775, -201.5548, -198.0112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-199.6795, -200.9162, -196.3446, -202.0922, -198.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-199.8254, -200.9425, -196.7327, -202.3384, -198.7296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-199.8422, -200.9939, -196.7892, -202.2956, -198.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.7999, -201.0514, -196.6873, -202.1307, -198.7678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-199.6325, -201.1441, -196.2766, -201.6743, -198.5847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.3280, -201.1746, -195.5421, -201.0266, -198.1154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-199.2769, -201.1611, -195.3281, -200.7694, -197.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.1957, -201.1849, -194.9045, -200.3182, -197.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.9940, -201.2893, -194.1953, -199.6411, -197.3561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-198.7790, -201.3373, -193.4707, -199.0129, -196.9947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.7245, -201.2906, -193.3303, -198.9340, -196.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-198.7360, -201.0724, -193.3229, -199.0579, -196.6838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-198.9056, -200.8399, -193.6847, -199.4198, -196.7459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-199.1255, -200.6884, -194.1536, -199.8146, -196.9320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.2968, -200.6406, -194.5682, -200.1082, -197.1592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-199.5036, -200.5506, -195.1576, -200.5967, -197.4225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-199.6473, -200.4535, -195.5020, -200.8757, -197.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-199.6862, -200.3587, -195.6437, -201.0329, -197.6104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-199.6906, -200.2385, -195.6446, -201.1083, -197.5320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.5585, -200.1251, -195.3286, -200.9531, -197.2508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-199.3980, -199.9528, -194.9617, -200.8021, -196.8818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-199.1772, -199.7548, -194.4837, -200.5554, -196.4222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-198.9540, -199.6146, -193.9897, -200.2568, -196.0152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-198.6734, -199.5106, -193.3748, -199.8438, -195.5951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-198.3455, -199.4247, -192.5818, -199.2703, -195.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.2369, -199.2985, -192.3458, -199.1644, -194.9133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-198.1822, -199.2402, -192.3193, -199.2022, -194.8118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-198.2155, -199.1515, -192.3782, -199.2908, -194.7994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.2980, -199.2039, -192.6642, -199.5273, -194.9382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-198.4853, -199.4186, -193.2948, -199.9777, -195.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-198.7690, -199.7818, -194.1685, -200.5261, -195.9313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.0183, -199.9791, -194.9673, -201.0699, -196.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.3025, -200.1536, -195.8777, -201.7167, -196.9202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.4714, -200.2655, -196.4727, -202.1729, -197.2030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-199.5703, -200.4194, -196.8558, -202.4384, -197.4167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-199.4904, -200.6488, -196.8797, -202.3985, -197.4729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.2024, -200.9873, -196.4412, -201.9738, -197.3357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-198.7812, -201.4546, -195.6745, -201.2353, -197.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-198.3708, -201.9042, -194.9759, -200.5936, -196.8832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-198.0720, -202.2638, -194.4719, -200.1480, -196.7160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.8141, -202.5160, -194.0536, -199.8185, -196.5337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-197.5923, -202.6959, -193.6561, -199.5147, -196.3328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-197.5500, -202.7672, -193.6034, -199.4970, -196.3013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.6497, -202.7509, -193.8222, -199.7234, -196.3802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-197.8614, -202.7158, -194.4144, -200.2248, -196.6326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.0689, -202.5838, -194.9748, -200.7010, -196.8323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.2290, -202.5203, -195.4242, -201.0615, -197.0347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.3707, -202.4334, -195.7879, -201.3699, -197.2071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-198.4821, -202.4006, -196.0862, -201.6000, -197.3745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-198.6909, -202.3265, -196.5623, -201.9816, -197.6660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.7476, -202.3429, -196.6320, -202.0121, -197.8136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.8482, -202.2408, -196.7373, -202.1036, -197.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-198.8681, -202.2651, -196.6790, -202.0391, -198.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-198.8512, -202.3066, -196.5998, -201.9734, -198.0701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.7150, -202.4287, -196.1311, -201.5533, -197.9925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.5077, -202.5325, -195.5265, -201.0535, -197.7852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-198.3622, -202.6071, -194.9875, -200.5498, -197.6290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-198.2790, -202.6862, -194.4564, -200.0107, -197.5099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.3259, -202.6834, -194.2717, -199.7752, -197.5144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.3206, -202.6516, -193.9311, -199.4396, -197.4051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.3992, -202.5442, -193.7728, -199.2678, -197.3476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-198.5862, -202.4795, -194.0047, -199.3640, -197.4874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-198.7548, -202.3602, -194.1661, -199.4517, -197.5340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-198.9390, -202.1827, -194.4001, -199.6279, -197.5630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-199.1899, -201.9503, -194.8870, -200.0283, -197.6763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-199.5533, -201.7460, -195.4931, -200.4352, -197.9933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-199.8629, -201.5704, -195.9429, -200.7316, -198.2607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-200.1346, -201.4204, -196.3096, -200.9573, -198.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-200.2995, -201.3548, -196.5352, -201.0779, -198.6685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-200.2188, -201.4148, -196.3142, -200.8439, -198.5953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-200.1763, -201.4192, -196.0579, -200.5594, -198.5073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-200.0048, -201.4435, -195.6151, -200.2025, -198.2675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-199.7869, -201.4739, -195.0509, -199.7730, -197.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.4613, -201.4533, -194.1553, -199.1152, -197.4259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-199.0546, -201.4189, -193.0503, -198.3277, -196.7875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-198.6289, -201.3344, -192.1074, -197.7392, -196.1338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.2930, -201.2376, -191.6503, -197.5746, -195.6567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.0630, -201.1187, -191.5971, -197.7605, -195.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.8883, -201.0051, -191.7522, -198.1019, -195.1289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.9529, -200.9386, -192.6145, -198.9655, -195.2966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.0345, -200.8588, -193.4642, -199.7888, -195.4661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.3026, -200.6766, -194.5473, -200.7677, -195.7941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-198.4234, -200.6397, -195.1684, -201.3088, -196.0241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.4697, -200.5991, -195.5905, -201.6640, -196.1441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-198.5243, -200.6794, -195.8790, -201.8558, -196.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-198.4407, -200.8448, -195.8471, -201.7988, -196.3958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-198.2877, -201.0819, -195.6826, -201.5978, -196.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-198.1771, -201.3428, -195.5894, -201.4392, -196.4935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-198.0642, -201.5747, -195.3838, -201.1895, -196.5219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.0542, -201.7256, -195.3180, -201.0722, -196.6200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-197.9818, -201.9366, -195.0337, -200.7758, -196.6398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-197.9252, -202.0678, -194.7415, -200.4791, -196.5983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-197.9243, -202.3151, -194.6371, -200.2840, -196.7528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.8128, -202.7006, -194.3150, -199.8742, -196.8448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-197.8650, -202.9556, -194.3676, -199.7721, -197.0843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-197.9797, -203.2060, -194.5892, -199.7847, -197.4268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-198.0597, -203.4314, -194.7294, -199.7553, -197.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.1071, -203.6003, -194.7078, -199.6485, -197.8779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.2349, -203.6516, -194.7891, -199.6598, -198.0452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-198.3306, -203.7025, -194.8553, -199.6668, -198.1835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.4665, -203.6308, -195.0605, -199.8493, -198.2984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-198.5602, -203.5726, -195.1198, -199.9047, -198.3569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-198.6948, -203.4539, -195.2927, -200.0953, -198.4454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.9201, -203.1664, -195.5880, -200.4314, -198.5134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-199.1027, -202.8878, -195.7478, -200.6611, -198.5186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-199.2706, -202.5291, -195.9030, -200.9568, -198.4313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-199.5295, -202.1428, -196.2275, -201.3665, -198.4609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-199.7851, -201.6962, -196.5869, -201.8698, -198.4136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.8845, -201.3109, -196.6413, -202.1529, -198.1843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-199.9713, -200.9017, -196.6437, -202.3860, -197.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-199.9505, -200.6215, -196.4573, -202.4111, -197.6127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.8675, -200.3818, -196.1777, -202.3494, -197.2951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-199.8217, -200.2193, -195.9474, -202.2613, -197.0752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-199.7153, -200.1146, -195.6013, -202.0558, -196.8186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-199.4825, -200.0219, -195.0104, -201.6296, -196.4259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-199.2734, -199.9411, -194.4448, -201.2107, -196.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-199.1549, -199.8225, -194.0650, -200.9495, -195.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-199.0551, -199.8205, -193.7513, -200.7013, -195.6943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-199.1166, -199.8254, -193.7763, -200.7075, -195.7645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.2971, -199.8410, -194.0253, -200.8596, -195.9684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-199.4296, -199.8521, -194.1597, -200.9189, -196.0955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-199.5499, -199.8268, -194.1990, -200.9202, -196.1980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-199.5588, -199.8193, -194.1520, -200.8492, -196.2288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.7157, -199.7843, -194.4393, -201.0292, -196.4489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-199.7818, -199.7979, -194.5968, -201.1012, -196.6114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.8447, -199.8324, -194.8707, -201.3033, -196.7909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-199.9374, -199.9016, -195.1042, -201.4247, -197.0018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-199.8591, -199.9470, -194.9538, -201.2858, -196.9694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-199.7847, -199.9900, -194.8629, -201.2087, -196.9546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-199.7031, -200.0397, -194.7222, -201.0855, -196.9113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-199.6383, -200.0772, -194.5248, -200.9086, -196.8503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-199.5347, -200.0945, -194.2852, -200.7082, -196.7407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-199.4594, -200.0901, -194.0523, -200.5099, -196.6493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-199.3495, -200.1433, -193.7024, -200.1688, -196.5367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-199.3582, -200.1150, -193.6920, -200.1713, -196.5340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.3766, -200.1430, -193.7486, -200.2126, -196.5746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-199.3501, -200.1320, -193.8219, -200.3088, -196.5571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-199.4909, -200.1423, -194.3270, -200.7126, -196.7821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-199.7375, -200.1887, -195.0316, -201.2316, -197.1580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-199.8774, -200.2805, -195.5247, -201.5841, -197.4321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-199.9093, -200.3952, -195.7965, -201.7480, -197.5766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-199.9082, -200.4504, -196.0130, -201.9048, -197.6485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-199.7523, -200.6084, -195.9454, -201.7991, -197.6043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-199.5697, -200.6724, -195.8037, -201.6894, -197.4445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.4447, -200.7249, -195.6737, -201.5602, -197.3193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-199.1787, -200.8311, -195.3018, -201.2630, -197.0756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1284, device='cuda:0', dtype=torch.float64)
tensor([-199.0473, -200.8982, -195.1230, -201.0804, -196.9564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-198.9334, -200.9929, -194.9342, -200.8742, -196.8861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.8542, -201.1355, -194.7473, -200.6235, -196.8881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.7716, -201.2254, -194.5213, -200.3654, -196.8383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.6357, -201.3345, -194.1975, -200.0235, -196.7433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.6021, -201.4823, -194.0818, -199.8019, -196.8124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.5528, -201.5480, -194.0198, -199.7227, -196.8337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-198.5469, -201.5319, -193.9029, -199.5671, -196.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.4002, -201.4380, -193.6638, -199.4616, -196.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.3586, -201.3447, -193.6336, -199.4940, -196.6288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2110, device='cuda:0', dtype=torch.float64)
tensor([-198.1986, -201.6538, -193.5745, -199.3427, -196.7078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-198.1474, -201.9366, -193.7966, -199.4427, -196.9299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.1370, -202.1835, -194.1212, -199.6048, -197.1883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.0844, -202.3083, -194.2688, -199.6991, -197.2856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.0465, -202.4511, -194.4200, -199.7866, -197.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.0084, -202.5614, -194.4901, -199.8036, -197.4603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-198.1423, -202.5540, -194.8853, -200.0973, -197.6708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.2095, -202.5424, -195.0963, -200.2562, -197.7849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-198.2511, -202.4775, -195.2319, -200.3734, -197.8179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-198.3129, -202.3794, -195.2883, -200.4132, -197.8428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-198.2640, -202.2817, -195.0226, -200.2274, -197.6801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-198.1421, -202.2012, -194.5997, -199.9649, -197.3988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.2100, -202.0800, -194.4127, -199.8106, -197.2938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-198.2035, -201.9794, -194.0648, -199.5468, -197.1026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-198.2227, -202.0188, -193.7994, -199.2508, -197.0655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-198.4170, -201.9578, -193.8585, -199.2341, -197.1624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-198.4978, -201.8550, -193.6900, -199.0644, -197.0769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.7094, -201.6826, -193.8449, -199.1615, -197.1266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-198.7878, -201.5806, -193.8698, -199.2095, -197.0604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-198.9176, -201.5083, -194.0946, -199.3637, -197.1241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.0392, -201.3749, -194.4951, -199.7539, -197.1617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-199.1880, -201.2419, -195.0247, -200.2492, -197.2475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0799, device='cuda:0', dtype=torch.float64)
tensor([-199.2172, -201.0534, -195.1539, -200.4293, -197.1287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-199.2262, -200.8537, -195.2314, -200.5713, -196.9930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-199.0529, -200.5980, -194.9430, -200.5050, -196.5958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.8053, -200.4508, -194.5421, -200.2919, -196.2113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.5068, -200.3205, -194.1147, -200.0440, -195.8111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-198.2007, -200.1853, -193.6557, -199.7478, -195.4035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.9741, -200.0149, -193.4360, -199.6210, -195.0678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-197.7182, -199.9552, -193.1248, -199.3733, -194.7744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.4915, -199.9136, -192.9753, -199.2327, -194.5307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-197.2994, -199.8739, -192.9208, -199.1619, -194.3513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.3446, -199.8289, -193.3104, -199.4443, -194.4641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-197.4866, -199.7851, -193.8342, -199.8408, -194.7024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-197.5588, -199.8373, -194.1796, -200.0857, -194.9422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-197.6833, -199.8521, -194.5509, -200.3605, -195.2070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-197.9360, -199.8087, -195.0964, -200.7918, -195.5843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-198.2288, -199.8229, -195.6451, -201.2024, -196.0423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-198.4884, -199.8592, -195.9619, -201.4116, -196.4248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-198.6351, -199.9457, -195.9251, -201.2677, -196.6357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4172, device='cuda:0', dtype=torch.float64)
tensor([-198.5372, -200.0980, -195.4701, -200.7880, -196.5662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-198.3260, -200.3156, -194.9039, -200.2294, -196.4386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-198.0367, -200.6208, -194.0951, -199.4262, -196.2716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.7645, -200.9100, -193.2227, -198.5559, -196.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-197.7493, -201.2062, -192.8188, -198.0093, -196.2138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-197.7852, -201.4893, -192.5364, -197.5464, -196.3880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-197.9691, -201.6527, -192.7464, -197.5552, -196.7146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-198.1411, -201.6254, -193.1238, -197.8551, -196.9351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-198.2319, -201.6019, -193.4975, -198.2004, -197.0743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-198.4034, -201.5432, -193.9942, -198.6361, -197.2904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.5167, -201.5480, -194.3892, -198.9647, -197.5189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.6665, -201.5167, -194.9704, -199.4864, -197.7987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-198.8577, -201.3994, -195.6450, -200.1549, -198.0595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-198.8846, -201.3197, -196.0755, -200.6664, -198.1486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-198.6653, -201.3128, -196.0313, -200.8121, -197.9814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.4407, -201.1720, -195.8769, -200.9114, -197.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.2570, -201.0191, -195.6725, -200.9542, -197.4011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.1887, -200.8303, -195.6902, -201.1361, -197.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-198.0504, -200.7692, -195.4834, -201.0628, -197.0666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-198.0093, -200.7157, -195.4012, -201.0603, -197.0162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-197.8882, -200.6962, -195.1532, -200.9156, -196.8780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-197.7063, -200.7300, -194.8253, -200.7067, -196.6932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-197.5129, -200.7617, -194.4484, -200.4744, -196.5039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.3778, -200.8018, -194.1505, -200.3022, -196.3968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.2445, -200.8069, -193.7577, -200.0566, -196.2520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-197.2385, -200.9780, -193.6791, -199.9979, -196.3911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.3785, -201.1785, -193.8734, -200.1168, -196.7100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-197.7196, -201.3342, -194.3623, -200.4319, -197.2274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-197.9638, -201.4873, -194.6534, -200.5682, -197.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.2621, -201.5815, -195.0499, -200.7741, -198.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.4979, -201.6557, -195.4001, -200.9568, -198.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-198.8489, -201.6003, -196.1590, -201.5287, -198.8971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-199.0768, -201.6264, -196.7039, -201.9341, -199.2458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-199.0817, -201.6819, -196.8437, -202.0495, -199.3373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-198.9269, -201.7326, -196.6928, -201.9637, -199.2083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-198.8143, -201.7181, -196.5535, -201.9183, -199.0531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.7505, -201.6510, -196.4858, -201.9194, -198.9267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-198.5976, -201.6166, -196.1915, -201.7166, -198.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.4774, -201.5231, -195.9157, -201.5675, -198.4294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-198.0881, -201.4405, -195.0126, -200.9185, -197.8165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-197.7947, -201.3261, -194.3134, -200.4228, -197.3046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-197.6841, -201.2184, -193.9376, -200.1620, -197.0211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-197.7572, -201.0393, -193.9421, -200.2115, -196.9390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-197.9374, -200.9182, -194.1771, -200.4475, -197.0406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-198.1674, -200.8570, -194.5344, -200.7596, -197.2592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-198.3750, -200.8012, -194.8116, -200.9978, -197.4398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.5143, -200.8118, -194.9637, -201.1087, -197.5723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-198.5949, -200.8206, -194.8871, -201.0499, -197.6017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-198.5364, -200.9180, -194.5621, -200.7759, -197.5216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.5193, -200.9109, -194.3208, -200.5974, -197.4188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-198.5715, -200.8445, -194.2613, -200.5800, -197.3789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-198.6058, -200.8569, -194.0896, -200.4379, -197.3418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.6284, -200.8910, -193.9298, -200.3163, -197.3148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.7535, -200.8988, -194.1056, -200.4781, -197.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.8510, -200.9768, -194.2990, -200.6322, -197.5558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.9918, -200.9726, -194.5054, -200.8190, -197.6927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-198.9984, -201.0366, -194.4400, -200.7568, -197.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.8256, -201.1399, -194.0315, -200.4370, -197.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-198.7750, -201.2656, -194.0116, -200.4079, -197.5807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.6647, -201.4023, -193.8668, -200.2707, -197.5523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.4468, -201.5134, -193.5142, -199.9641, -197.3724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.2499, -201.6260, -193.1530, -199.6702, -197.2048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.2640, -201.6587, -193.2087, -199.7038, -197.2249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-198.3991, -201.6917, -193.6312, -200.0150, -197.4260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-198.4955, -201.7294, -194.0153, -200.2950, -197.5974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-198.5988, -201.6494, -194.4301, -200.6367, -197.7077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.8180, -201.5474, -195.0612, -201.1576, -197.9526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.0352, -201.3778, -195.6456, -201.6564, -198.1548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-199.3574, -201.1552, -196.4653, -202.3189, -198.4604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-199.5644, -200.9286, -196.9933, -202.7686, -198.5998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-199.4361, -200.8648, -196.8029, -202.6058, -198.4249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-199.1418, -200.9963, -196.3113, -202.1707, -198.1995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.6713, -201.2234, -195.3831, -201.3655, -197.7935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.2854, -201.3905, -194.6831, -200.7287, -197.4271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-198.0440, -201.4534, -194.2616, -200.3415, -197.1497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.9902, -201.5025, -194.2554, -200.2720, -197.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-197.8581, -201.5845, -194.1453, -200.1270, -197.0157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-197.9272, -201.7285, -194.4917, -200.3015, -197.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-198.0654, -201.7962, -194.9295, -200.5608, -197.5132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-198.1126, -201.9513, -195.2105, -200.6875, -197.7250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.0746, -202.0831, -195.2973, -200.6675, -197.7749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-198.0149, -202.1612, -195.3107, -200.6578, -197.7543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-198.1272, -202.1247, -195.5428, -200.8407, -197.8341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.3167, -202.0339, -195.8631, -201.1005, -197.9695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.4408, -202.0289, -196.0355, -201.2114, -198.0847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.4090, -202.0862, -195.8959, -201.0636, -198.0502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.3851, -202.1336, -195.7235, -200.8731, -198.0237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.2870, -202.1561, -195.4431, -200.6157, -197.8847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.2491, -202.1320, -195.2442, -200.4797, -197.7748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.1925, -201.9833, -195.0132, -200.3670, -197.5462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-198.3809, -201.7158, -195.2065, -200.5816, -197.5490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.5918, -201.5169, -195.4587, -200.8088, -197.6499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.8504, -201.3386, -195.7878, -201.0901, -197.8143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-199.0671, -201.1619, -196.1056, -201.3986, -197.9389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-199.1800, -201.0760, -196.2696, -201.5778, -197.9862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-199.1823, -201.0929, -196.2657, -201.5804, -197.9961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.2426, -201.0572, -196.3079, -201.6177, -198.0317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-199.2253, -200.9735, -196.1636, -201.5057, -197.9249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.1457, -200.9107, -195.9055, -201.3045, -197.7588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.9578, -200.8588, -195.4416, -200.9778, -197.4477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-198.8061, -200.7317, -194.9758, -200.6714, -197.0947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.6174, -200.6154, -194.5576, -200.3921, -196.7286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.3542, -200.5419, -193.9767, -199.9677, -196.3047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-198.1904, -200.4091, -193.6486, -199.7533, -195.9900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-198.1201, -200.2270, -193.4804, -199.6806, -195.7499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-198.1130, -200.0581, -193.4593, -199.6973, -195.6292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-198.1532, -199.8751, -193.5166, -199.7950, -195.5590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-198.3309, -199.6109, -193.9043, -200.1735, -195.6320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.6529, -199.3552, -194.5192, -200.7263, -195.8786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-199.1055, -199.0809, -195.3391, -201.4548, -196.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.5164, -198.8978, -196.0243, -202.0699, -196.6406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-199.9267, -198.7142, -196.7178, -202.6917, -197.0290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-200.1112, -198.6587, -196.9281, -202.9150, -197.2156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-200.2052, -198.5616, -196.8829, -202.9374, -197.2705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-200.2748, -198.5523, -196.8352, -202.9073, -197.3451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-200.0568, -198.5878, -196.3317, -202.5398, -197.1283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.6779, -198.6245, -195.5746, -202.0060, -196.7260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.2894, -198.6985, -194.7018, -201.3496, -196.3196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-198.8331, -198.7415, -193.7245, -200.5923, -195.8208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.4621, -198.7251, -192.9797, -200.0540, -195.3869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-198.3455, -198.7657, -192.5906, -199.7357, -195.2428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-198.3076, -198.8574, -192.3644, -199.5177, -195.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-198.2211, -198.9514, -192.0834, -199.2405, -195.1961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-198.2742, -199.1023, -192.1422, -199.2379, -195.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.4225, -199.2340, -192.2992, -199.2809, -195.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.4387, -199.3523, -192.2569, -199.1728, -195.7129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.6380, -199.5272, -192.5954, -199.3382, -196.0539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.8847, -199.7981, -193.0827, -199.5783, -196.5494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-199.1740, -200.0307, -193.8880, -200.0877, -197.1099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-199.2767, -200.3190, -194.3817, -200.3474, -197.5244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-199.2346, -200.5976, -194.5621, -200.3591, -197.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-199.1099, -200.8665, -194.6581, -200.3413, -197.8848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-198.8523, -201.0720, -194.4982, -200.1801, -197.8096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.5282, -201.2021, -194.0716, -199.8457, -197.5672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-198.1864, -201.4053, -193.5987, -199.4679, -197.3350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-197.8029, -201.6586, -193.0722, -199.0604, -197.1139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.5103, -201.8314, -192.6577, -198.7449, -196.9379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.3620, -201.8988, -192.4920, -198.6408, -196.8545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-197.3358, -201.9414, -192.5190, -198.6675, -196.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-197.3108, -202.0015, -192.5570, -198.6857, -196.9356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-197.3528, -202.0046, -192.6577, -198.7607, -197.0074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-197.5455, -201.8922, -193.0918, -199.1291, -197.1962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-197.9112, -201.6420, -193.9860, -199.9117, -197.5198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.1337, -201.4145, -194.6864, -200.5637, -197.6899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.4377, -201.1595, -195.4260, -201.2424, -197.8983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-198.6368, -200.9388, -196.0002, -201.7970, -198.0289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.7782, -200.7458, -196.3965, -202.1794, -198.0869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.7214, -200.6665, -196.3398, -202.1848, -197.9712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.6001, -200.5878, -196.1293, -202.0576, -197.7655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-198.3519, -200.5041, -195.5828, -201.6832, -197.4002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-198.0658, -200.4469, -194.8721, -201.1431, -196.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.8239, -200.4082, -194.2549, -200.6588, -196.6182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-197.6683, -200.2833, -193.8299, -200.3704, -196.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.7242, -200.3198, -193.7796, -200.2897, -196.3134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.6757, -200.3110, -193.5253, -200.0780, -196.1849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.6623, -200.3204, -193.4578, -200.0111, -196.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-197.5736, -200.3167, -193.1566, -199.7478, -195.9746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-197.6061, -200.2602, -193.0067, -199.6179, -195.8979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-197.6821, -200.1968, -193.0119, -199.5742, -195.8776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-197.8308, -200.1239, -193.1954, -199.6871, -195.9447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.1919, -200.0895, -193.8519, -200.1481, -196.2994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.5008, -200.0570, -194.4369, -200.5625, -196.6057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.6609, -199.9275, -194.6228, -200.6980, -196.6328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-198.6817, -199.7958, -194.5648, -200.6551, -196.4923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-198.6504, -199.7732, -194.4603, -200.5322, -196.3903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.5937, -199.8310, -194.3153, -200.3306, -196.3241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-198.4090, -199.9553, -193.9748, -199.9753, -196.1854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-198.3825, -200.0873, -193.9576, -199.8479, -196.2307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-198.4918, -200.1371, -194.2021, -199.9388, -196.3802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.5551, -200.2250, -194.3215, -199.9228, -196.5083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-198.6325, -200.2757, -194.5267, -200.0446, -196.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-198.9129, -200.2595, -195.0267, -200.3729, -196.9662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-199.2520, -200.2087, -195.6079, -200.7617, -197.3423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-199.5600, -200.0856, -196.1088, -201.1413, -197.6190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-199.7122, -200.0724, -196.4461, -201.4151, -197.7966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-199.6142, -200.1724, -196.2674, -201.3045, -197.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-199.3628, -200.1828, -195.8946, -201.1431, -197.4115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-199.0488, -200.2321, -195.5241, -200.9815, -197.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-198.6804, -200.2449, -194.9761, -200.6769, -196.6854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.4283, -200.2097, -194.6230, -200.5056, -196.3786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.2826, -200.0301, -194.5302, -200.5753, -196.0940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-198.1605, -199.9249, -194.5220, -200.6565, -195.9160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.3040, -199.7317, -195.0387, -201.1192, -195.9804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.3403, -199.6260, -195.3621, -201.3993, -196.0127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-198.2845, -199.6226, -195.5178, -201.5090, -196.0346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-198.1801, -199.6883, -195.6172, -201.5438, -196.0744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.0460, -199.6120, -195.5211, -201.4613, -195.9431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-197.8301, -199.4958, -195.2499, -201.2279, -195.6637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-197.6148, -199.4146, -194.9661, -200.9740, -195.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.5282, -199.2389, -194.8516, -200.8971, -195.1819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.5371, -199.1389, -194.8980, -200.9354, -195.1605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-197.6482, -199.0765, -195.0682, -201.0720, -195.2687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-197.7997, -199.0878, -195.3101, -201.2808, -195.4793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-197.9376, -199.1135, -195.4943, -201.4415, -195.6751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.0159, -199.2021, -195.5360, -201.4569, -195.8624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-198.0880, -199.3676, -195.5945, -201.4422, -196.0851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.0373, -199.5324, -195.4154, -201.2173, -196.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.8479, -199.7474, -194.9837, -200.7673, -196.1067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.7018, -199.9059, -194.6301, -200.4068, -196.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.7028, -200.0801, -194.5025, -200.2188, -196.1818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-197.7399, -200.2330, -194.4646, -200.0927, -196.3503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.7774, -200.3280, -194.4356, -199.9819, -196.4780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.7496, -200.4880, -194.3038, -199.7633, -196.5909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.7400, -200.5920, -194.1632, -199.5700, -196.6648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-197.7371, -200.6354, -194.0559, -199.4272, -196.7042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.8236, -200.6293, -194.0271, -199.3165, -196.8059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-197.9789, -200.5879, -194.0990, -199.2734, -196.9527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-198.0832, -200.5589, -194.2331, -199.3103, -197.0821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.2288, -200.5377, -194.4253, -199.3622, -197.2626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-198.3285, -200.6871, -194.7480, -199.5021, -197.5317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.3265, -200.8180, -194.9048, -199.5638, -197.6782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-198.3285, -200.9769, -195.1787, -199.7416, -197.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.2322, -201.1064, -195.2787, -199.8427, -197.9104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-198.0076, -201.3024, -195.0680, -199.6721, -197.8282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-197.9404, -201.5077, -195.1427, -199.6921, -197.9417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.0879, -201.5615, -195.6378, -200.0711, -198.2118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.1877, -201.6390, -196.0349, -200.3654, -198.4352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-198.2266, -201.7704, -196.3434, -200.5888, -198.6124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.2384, -201.8415, -196.4995, -200.7200, -198.6895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-198.2850, -201.8762, -196.6256, -200.8251, -198.7510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-198.3681, -201.8545, -196.8058, -200.9788, -198.8211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-198.3212, -201.8243, -196.8323, -201.0474, -198.7328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-198.2491, -201.7586, -196.7536, -201.0640, -198.5853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.0325, -201.7581, -196.3353, -200.8147, -198.3066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.7467, -201.8262, -195.7556, -200.4157, -197.9930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-197.3483, -201.8653, -194.8840, -199.7950, -197.4917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-197.0884, -201.8092, -194.2892, -199.3929, -197.0939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2060, device='cuda:0', dtype=torch.float64)
tensor([-196.8700, -201.4600, -193.6138, -199.0117, -196.5489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-196.7421, -201.0310, -193.0955, -198.7358, -196.0660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-196.7145, -200.6733, -192.8050, -198.5967, -195.7495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-196.8950, -200.2756, -193.0287, -198.8684, -195.6586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.1663, -199.8989, -193.3773, -199.2350, -195.6810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-197.4698, -199.5218, -193.7445, -199.6018, -195.7152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.9950, -199.1712, -194.5938, -200.3587, -196.0028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.4905, -198.8469, -195.3520, -201.0067, -196.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.8971, -198.5720, -195.9385, -201.5224, -196.4611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-199.1184, -198.4251, -196.1259, -201.6927, -196.5597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-199.3387, -198.2663, -196.2739, -201.8421, -196.6459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-199.3029, -198.1420, -196.0196, -201.6794, -196.4863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-198.9995, -198.0902, -195.3231, -201.1650, -196.1012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-198.4549, -198.0531, -194.2465, -200.3506, -195.4918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-198.0573, -198.0623, -193.4410, -199.7349, -195.0841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-197.7287, -198.1152, -192.7483, -199.1873, -194.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.5762, -198.1824, -192.2678, -198.7706, -194.6623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.5488, -198.3110, -192.0468, -198.5309, -194.7200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.6854, -198.4210, -192.1239, -198.5597, -194.9229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-197.9510, -198.5521, -192.4887, -198.8152, -195.2611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.1788, -198.7238, -192.8502, -199.0489, -195.6102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-198.4325, -198.8162, -193.2060, -199.2703, -195.9429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-198.8569, -198.9050, -193.8088, -199.6185, -196.4647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-199.1740, -198.9826, -194.1174, -199.7575, -196.8512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-199.3231, -199.0731, -194.2051, -199.7593, -197.0624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-199.2842, -199.1083, -194.1374, -199.7591, -197.0286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-199.2915, -199.1787, -194.0952, -199.7446, -197.0617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-199.1284, -199.1980, -193.8631, -199.6498, -196.8828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-198.8105, -199.3229, -193.3958, -199.3412, -196.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.4550, -199.4841, -193.0035, -199.0964, -196.3384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-198.1283, -199.6128, -192.6491, -198.9034, -196.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-197.8006, -199.6727, -192.3164, -198.7527, -195.7740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-197.5019, -199.6770, -192.0612, -198.6907, -195.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.3307, -199.6939, -191.9606, -198.6937, -195.3068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.2059, -199.7029, -191.7908, -198.5944, -195.1695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-197.0735, -199.5983, -191.5278, -198.4405, -194.9560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-197.0581, -199.5884, -191.5409, -198.4641, -194.9349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.1108, -199.7015, -191.8059, -198.6573, -195.0697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-197.1983, -199.7830, -192.0867, -198.8903, -195.2059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.3282, -199.8640, -192.5631, -199.2959, -195.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-197.3454, -199.9081, -192.8391, -199.5432, -195.4625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-197.4536, -199.9606, -193.3045, -199.9233, -195.6552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-197.4455, -200.0204, -193.4584, -200.0514, -195.6961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-197.4005, -200.0024, -193.5093, -200.1179, -195.6226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.3355, -200.0123, -193.5243, -200.1551, -195.5512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.2736, -200.0014, -193.5222, -200.1504, -195.4728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-197.3936, -200.0009, -193.8542, -200.3913, -195.6122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.5298, -200.0332, -194.2258, -200.6561, -195.7987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.7237, -200.0778, -194.5918, -200.8979, -196.0327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-197.9488, -200.0480, -195.0214, -201.2085, -196.2459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.9949, -200.0181, -195.0549, -201.2060, -196.2411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.0084, -200.0407, -195.0148, -201.1422, -196.2380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-197.9601, -199.9738, -194.8424, -201.0154, -196.0628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.0603, -199.8437, -194.9307, -201.0855, -196.0023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.9031, -199.8582, -194.6057, -200.8100, -195.7970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.7996, -199.8909, -194.3874, -200.6153, -195.6925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.6714, -199.9215, -194.1246, -200.3722, -195.5705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-197.8025, -199.8409, -194.3947, -200.5700, -195.6428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.9651, -199.7988, -194.7210, -200.7821, -195.7839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-198.1043, -199.7432, -195.0523, -201.0058, -195.8850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-198.1690, -199.7124, -195.1719, -201.1028, -195.9189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.0674, -199.7073, -194.9661, -200.9738, -195.7784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-198.1823, -199.6640, -195.1820, -201.1629, -195.8645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-198.0772, -199.7335, -195.0124, -201.0427, -195.7990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-197.8738, -199.8312, -194.6461, -200.7631, -195.6613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-197.5745, -199.9412, -194.1695, -200.3789, -195.4416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.3001, -199.9868, -193.8767, -200.1412, -195.2396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-197.1070, -199.9621, -193.6927, -199.9933, -195.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-197.0881, -199.8807, -193.7871, -200.0902, -194.9908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-197.0708, -199.9316, -193.8439, -200.1099, -195.0279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-197.0244, -200.1196, -193.8879, -200.0754, -195.1392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-197.0303, -200.2920, -193.9887, -200.0855, -195.3019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-197.0555, -200.3717, -193.9823, -200.0209, -195.3905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-197.0033, -200.4618, -193.8792, -199.8871, -195.4041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-196.8817, -200.5557, -193.5384, -199.5842, -195.3250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.8316, -200.5611, -193.3353, -199.3938, -195.2762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.0839, -200.5124, -193.6716, -199.6098, -195.5162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-197.4637, -200.3980, -194.1749, -199.9805, -195.8284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-197.9365, -200.2731, -194.7810, -200.4221, -196.2199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-198.2563, -200.1108, -195.1192, -200.6668, -196.4276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-198.3023, -200.0220, -195.1203, -200.6440, -196.4199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-198.1460, -199.9357, -194.8678, -200.4603, -196.1911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-198.0287, -199.9101, -194.6911, -200.2967, -196.0466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-197.7948, -200.0097, -194.3141, -199.9511, -195.8421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.7001, -200.0122, -194.1382, -199.7747, -195.7224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-197.5337, -199.9266, -193.8662, -199.5633, -195.4723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.3560, -199.8577, -193.5215, -199.3030, -195.2055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.3074, -199.8440, -193.4372, -199.2017, -195.1356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-197.2861, -199.8652, -193.3661, -199.1160, -195.1114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-197.0461, -199.8430, -193.0095, -198.8531, -194.8416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.7605, -199.7697, -192.5237, -198.4872, -194.4849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-196.5370, -199.7006, -192.1820, -198.2482, -194.1965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-196.5874, -199.6394, -192.3604, -198.4106, -194.2017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-196.6373, -199.5939, -192.6237, -198.6228, -194.2364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.8583, -199.5393, -193.1847, -199.0506, -194.4589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-197.0895, -199.4899, -193.6947, -199.4184, -194.7067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-197.5211, -199.1994, -194.5238, -200.1033, -194.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.8940, -198.9605, -195.1868, -200.6743, -195.2299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.2141, -198.8277, -195.7388, -201.1267, -195.4975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-198.4854, -198.7185, -196.2156, -201.5160, -195.7292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-198.6200, -198.5652, -196.4847, -201.7919, -195.7663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-198.5772, -198.5133, -196.4335, -201.7994, -195.6838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.3804, -198.4812, -196.1111, -201.5682, -195.4443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-197.9074, -198.5412, -195.3089, -200.9268, -194.9759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-197.3459, -198.6064, -194.3642, -200.1610, -194.4295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-196.8440, -198.6071, -193.4396, -199.4182, -193.8790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-196.4433, -198.6573, -192.6331, -198.7392, -193.4604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.4652, -198.7161, -192.4527, -198.5504, -193.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-196.6223, -198.7710, -192.4522, -198.5121, -193.6474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-197.0255, -198.8328, -192.8725, -198.8069, -194.0524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.5159, -198.9330, -193.4954, -199.2309, -194.5758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.2825, -198.9868, -194.5937, -199.9876, -195.3398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.0155, -198.9618, -195.6756, -200.7394, -196.0662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-199.6348, -198.9628, -196.4276, -201.2126, -196.6947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-200.1025, -198.9837, -196.9610, -201.5467, -197.1865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-200.1148, -199.0876, -196.8851, -201.3938, -197.2774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-199.7196, -199.1551, -196.3503, -200.9645, -196.9293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-199.3296, -199.2498, -195.8918, -200.6134, -196.6280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-198.7103, -199.4807, -195.0997, -199.9605, -196.1931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-198.1930, -199.6158, -194.4697, -199.4429, -195.8127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-197.7137, -199.6814, -193.8604, -198.9567, -195.4266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-197.4068, -199.7001, -193.5125, -198.6461, -195.1907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.3047, -199.6182, -193.4706, -198.5746, -195.0904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.4064, -199.4774, -193.6713, -198.6685, -195.1396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-197.4946, -199.2542, -193.8545, -198.8376, -195.1126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-197.5271, -199.0217, -194.0566, -199.0661, -195.0487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.7223, -198.7788, -194.5392, -199.4747, -195.1579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-198.0365, -198.5376, -195.2124, -200.0285, -195.3999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-198.3580, -198.3516, -195.8890, -200.5922, -195.6833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-198.6194, -198.2469, -196.4011, -201.0084, -195.9521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-198.7404, -198.2513, -196.7192, -201.2641, -196.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.8112, -198.3051, -196.9048, -201.4146, -196.3243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-198.7924, -198.3899, -196.8804, -201.3840, -196.4081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.8179, -198.4195, -196.9057, -201.3941, -196.4927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-198.8183, -198.4938, -196.8784, -201.3316, -196.5697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-198.5908, -198.6629, -196.4922, -200.9876, -196.4740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.1265, -198.9505, -195.7169, -200.2999, -196.2180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.8590, -199.2182, -195.1616, -199.7395, -196.1542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-197.3952, -199.4423, -194.3062, -199.0086, -195.8611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-196.8312, -199.6994, -193.2963, -198.1156, -195.5137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-196.3803, -199.8279, -192.4560, -197.4039, -195.2096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.0820, -199.8839, -191.9350, -196.9878, -195.0211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.0280, -199.8479, -191.7929, -196.9127, -194.9830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-196.1135, -199.9144, -191.8954, -197.0045, -195.1375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-196.2629, -199.9669, -192.2295, -197.3008, -195.3424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-196.4985, -200.1147, -192.7452, -197.6858, -195.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-196.9067, -200.1867, -193.4472, -198.1660, -196.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-197.1126, -200.1669, -193.8115, -198.4440, -196.3906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-197.5446, -200.1913, -194.6175, -199.0097, -196.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.9241, -200.1110, -195.3270, -199.5609, -197.2761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-198.2931, -199.9942, -195.9390, -200.0660, -197.5837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-198.3891, -199.9217, -196.2258, -200.3856, -197.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.4850, -199.8067, -196.5293, -200.7388, -197.6895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-198.5028, -199.7162, -196.7380, -201.0324, -197.6715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-198.4378, -199.6722, -196.6917, -201.0668, -197.5453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.1790, -199.6610, -196.3476, -200.8624, -197.2316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.7781, -199.6172, -195.8697, -200.6006, -196.7540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.2866, -199.5661, -195.1563, -200.1622, -196.1628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.7336, -199.5916, -194.2885, -199.5333, -195.5817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.1868, -199.6131, -193.5160, -198.9523, -195.0268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.7893, -199.6140, -192.9907, -198.5378, -194.6137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-195.4542, -199.6361, -192.5143, -198.1317, -194.2596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-195.4876, -199.5712, -192.5997, -198.2069, -194.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-195.6917, -199.6058, -192.9109, -198.4068, -194.3757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-195.9862, -199.5717, -193.4164, -198.7891, -194.6104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-196.5277, -199.4908, -194.2900, -199.4947, -195.0490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.9414, -199.4025, -195.0227, -200.0981, -195.3566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.3161, -199.3211, -195.6205, -200.5942, -195.6214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-197.6013, -199.2764, -195.9937, -200.9062, -195.8069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.6199, -199.2911, -196.0030, -200.9194, -195.7971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-197.5160, -199.3825, -195.7612, -200.6971, -195.7085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-197.2699, -199.5378, -195.2948, -200.2744, -195.5307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-197.0896, -199.7081, -194.8653, -199.8582, -195.4327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-196.8304, -199.8631, -194.3527, -199.4015, -195.2691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-196.7082, -199.9919, -194.1020, -199.1393, -195.2365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.6955, -200.0142, -193.9439, -198.9696, -195.2252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.7001, -199.8720, -193.9443, -199.0241, -195.1107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-196.8494, -199.7097, -194.2364, -199.3092, -195.1392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.9898, -199.4779, -194.4841, -199.5830, -195.0974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.0393, -199.3015, -194.6156, -199.7464, -195.0119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-197.0320, -199.1964, -194.5675, -199.7308, -194.9223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-197.1650, -199.1507, -194.7157, -199.8316, -195.0456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.4554, -199.1073, -195.0889, -200.1088, -195.3182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.6058, -199.1402, -195.2333, -200.1895, -195.5003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-197.6753, -199.2072, -195.1732, -200.0720, -195.6061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-197.5728, -199.3297, -194.8419, -199.7045, -195.5767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.3837, -199.4799, -194.3488, -199.1805, -195.5015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-197.1190, -199.5979, -193.7716, -198.5857, -195.3167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.8669, -199.6679, -193.0806, -197.8800, -195.1151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.8219, -199.7046, -192.8656, -197.5582, -195.1164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-196.7851, -199.7110, -192.7789, -197.4168, -195.1075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-196.9194, -199.6012, -193.0968, -197.6848, -195.1834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.1580, -199.4551, -193.6796, -198.2195, -195.3363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.7130, device='cuda:0', dtype=torch.float64)
tensor([-197.3712, -199.1660, -194.1879, -198.7834, -195.3580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-197.4804, -198.9950, -194.5719, -199.1874, -195.3623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-197.5798, -198.9500, -194.8498, -199.4189, -195.4491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-197.5604, -198.8377, -194.9002, -199.5224, -195.3755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-197.5947, -198.7013, -195.0710, -199.7679, -195.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-197.4710, -198.6310, -195.0281, -199.8324, -195.1738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.4317, -198.4986, -195.0699, -199.9784, -195.0614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-197.4988, -198.4398, -195.1818, -200.1378, -195.0914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.4733, -198.3873, -195.1037, -200.1312, -195.0340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-197.3401, -198.4374, -194.9104, -200.0187, -194.9569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.2071, -198.5333, -194.6929, -199.8847, -194.9205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-197.2070, -198.6786, -194.6078, -199.8024, -195.0517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.2990, -198.7838, -194.6023, -199.7498, -195.2268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-197.3459, -198.8252, -194.5347, -199.6827, -195.3056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.3769, -198.8330, -194.4112, -199.5674, -195.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-197.5049, -198.8371, -194.2454, -199.3764, -195.4390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.5371, -198.8481, -193.9898, -199.1426, -195.4604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-197.3936, -198.8171, -193.6437, -198.9045, -195.2941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.4120, -198.7600, -193.5831, -198.8984, -195.2408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-197.3985, -198.8100, -193.5236, -198.8348, -195.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.3988, -198.8808, -193.5505, -198.8320, -195.2653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.3860, -198.8985, -193.5413, -198.7954, -195.2335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-197.3885, -198.9062, -193.5018, -198.7247, -195.2162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.4075, -198.9284, -193.4772, -198.6375, -195.2220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.4138, -198.9821, -193.5928, -198.6885, -195.2471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-197.4881, -198.9175, -193.7556, -198.7990, -195.2531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-197.5024, -198.8099, -193.7179, -198.7556, -195.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-197.5858, -198.6455, -193.8862, -198.9212, -195.0745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-197.7451, -198.5177, -194.1568, -199.1362, -195.0905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-197.8538, -198.3906, -194.2991, -199.2221, -195.0772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-198.0162, -198.2498, -194.5876, -199.4094, -195.1066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-198.1429, -198.1268, -194.8338, -199.5717, -195.1226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-198.2268, -197.9959, -195.0404, -199.7151, -195.0923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-198.2551, -197.9749, -195.1507, -199.7079, -195.1133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.2081, -197.9212, -195.1252, -199.6461, -195.0268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-197.9623, -197.8522, -194.8777, -199.4399, -194.7466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-197.7479, -197.8499, -194.7025, -199.2546, -194.5401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-197.5610, -197.9089, -194.4795, -199.0105, -194.3862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.4279, -197.9921, -194.3265, -198.8200, -194.3031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-197.3603, -198.0655, -194.2776, -198.7193, -194.2697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-197.3871, -198.0985, -194.3438, -198.7247, -194.3012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-197.5252, -198.1562, -194.5748, -198.8221, -194.4688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-197.6153, -198.1943, -194.6630, -198.8146, -194.5635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-197.6734, -198.1787, -194.7569, -198.8662, -194.5923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-197.9156, -198.1985, -195.1911, -199.1421, -194.8489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-198.1172, -198.2649, -195.5558, -199.3317, -195.1054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-198.3542, -198.3028, -196.0618, -199.6774, -195.3926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-198.5641, -198.2945, -196.4883, -199.9866, -195.6067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-198.6226, -198.2932, -196.7803, -200.2407, -195.6854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.4827, -198.3608, -196.7340, -200.2278, -195.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-198.2603, -198.4286, -196.5875, -200.1670, -195.4695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-197.9543, -198.4577, -196.3172, -200.0787, -195.1928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-197.7117, -198.5159, -196.0762, -199.9593, -194.9838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-197.4659, -198.6105, -195.7386, -199.7542, -194.7814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-197.3295, -198.6873, -195.5984, -199.7062, -194.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-197.2142, -198.8572, -195.4476, -199.6172, -194.6608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-197.1070, -199.0090, -195.2775, -199.5387, -194.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.0151, -199.2042, -195.0618, -199.4040, -194.6374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-196.8459, -199.3130, -194.6857, -199.1673, -194.4764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-196.6080, -199.3215, -194.2769, -198.9357, -194.1793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-196.4152, -199.2972, -193.9638, -198.7864, -193.9312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-196.3975, -199.2468, -193.9003, -198.8032, -193.8455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.4305, -199.2052, -193.9467, -198.8800, -193.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-196.5240, -199.0572, -194.0549, -199.0259, -193.7611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-196.7073, -198.9750, -194.3427, -199.2792, -193.8585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.9291, -198.9198, -194.6209, -199.5240, -194.0131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-197.2056, -198.7957, -195.0066, -199.8535, -194.1809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.4632, -198.6886, -195.3734, -200.1660, -194.3408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-197.8379, -198.5826, -195.8492, -200.5639, -194.6104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-198.1568, -198.5284, -196.2301, -200.8517, -194.8963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-198.4289, -198.4950, -196.5624, -201.0814, -195.1458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-198.3318, -198.5054, -196.2722, -200.7806, -195.0951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-198.2068, -198.5290, -195.9584, -200.4455, -195.0354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-197.8586, -198.5106, -195.3462, -199.9135, -194.7220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-197.4510, -198.5543, -194.6499, -199.3087, -194.4128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.1039, -198.6157, -194.0642, -198.7753, -194.1801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.6890, -198.6965, -193.4061, -198.1941, -193.8962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-196.3859, -198.7877, -192.9965, -197.8208, -193.7324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.1392, -198.8837, -192.6870, -197.5401, -193.6138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0764, device='cuda:0', dtype=torch.float64)
tensor([-195.8941, -198.8900, -192.2896, -197.1786, -193.4407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-195.8297, -199.0267, -192.2420, -197.0285, -193.5306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-195.9080, -199.0590, -192.4178, -197.1004, -193.6590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-196.1004, -198.9899, -192.8386, -197.4080, -193.8292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-196.4997, -198.8800, -193.5247, -197.8943, -194.1649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.1114, -198.7085, -194.3951, -198.5011, -194.6785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.7644, -198.5621, -195.2854, -199.1093, -195.2481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-198.4139, -198.4099, -196.1221, -199.6441, -195.8132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-199.0819, -198.2955, -196.9119, -200.0852, -196.4331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.5035, -198.2180, -197.3195, -200.2147, -196.8301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-199.6043, -198.1956, -197.3951, -200.1284, -196.9419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-199.4998, -198.1791, -197.2735, -199.9589, -196.8560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-199.2347, -198.1940, -196.9829, -199.7251, -196.6226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-198.8545, -198.2296, -196.4279, -199.2674, -196.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-198.4469, -198.2942, -195.8097, -198.7470, -195.9037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-198.0292, -198.2944, -195.1122, -198.1827, -195.4889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-197.5678, -198.2441, -194.3790, -197.6744, -194.9877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.1887, -198.1705, -193.6946, -197.1551, -194.5624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.0916, -198.0980, -193.4174, -196.9159, -194.3943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.1958, -197.9743, -193.5242, -197.0382, -194.3774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.2174, -197.8521, -193.5912, -197.1898, -194.2854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.2727, -197.7271, -193.7573, -197.4388, -194.2243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-197.2576, -197.5531, -193.9723, -197.8300, -194.0698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-197.0921, -197.4263, -193.9691, -198.0329, -193.8354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-196.9451, -197.3092, -193.9678, -198.2022, -193.6200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.8478, -197.2518, -194.0008, -198.3423, -193.4810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-196.8280, -197.3386, -194.1436, -198.4952, -193.5487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-196.8307, -197.4834, -194.1911, -198.5174, -193.6810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-196.8354, -197.6019, -194.1554, -198.4462, -193.7953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-196.9261, -197.6687, -194.3469, -198.6083, -193.9612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-196.9796, -197.7430, -194.4445, -198.7077, -194.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-197.1559, -197.7701, -194.7134, -198.9537, -194.3268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-197.3215, -197.8586, -194.9963, -199.1824, -194.5727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-197.5562, -197.8174, -195.3470, -199.5283, -194.7833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.7331, -197.7940, -195.5770, -199.7448, -194.9462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-197.9449, -197.7789, -195.7450, -199.8577, -195.1402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-197.9628, -197.8146, -195.7070, -199.8283, -195.2065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-197.8907, -197.8872, -195.6103, -199.7714, -195.2256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-197.6438, -197.9607, -195.3446, -199.5902, -195.0750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-197.4897, -198.0250, -195.2774, -199.5722, -194.9985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-197.2634, -198.0950, -195.0429, -199.3988, -194.8542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-197.1514, -198.1425, -194.9878, -199.3687, -194.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.1498, -198.2054, -194.9878, -199.3438, -194.8011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.0161, -198.2823, -194.7848, -199.1478, -194.7134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.0682, -198.2054, -194.8537, -199.2323, -194.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.9322, -198.1293, -194.7002, -199.1793, -194.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.7208, -198.0624, -194.4580, -199.0399, -194.2764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.4613, -197.9193, -194.1173, -198.8416, -193.9742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.2864, -197.8024, -193.9072, -198.7099, -193.7734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-196.2171, -197.6738, -193.7860, -198.6417, -193.6543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-196.0458, -197.6204, -193.5244, -198.4195, -193.5340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.8910, -197.6059, -193.2810, -198.2060, -193.4514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.5468, -197.5525, -192.8443, -197.8366, -193.1953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.3196, -197.4698, -192.5479, -197.6008, -193.0157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.1866, -197.4600, -192.3757, -197.4398, -192.9564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-195.0772, -197.5405, -192.2309, -197.2776, -192.9877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-195.2349, -197.7655, -192.3658, -197.3060, -193.2917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-195.7071, -198.1161, -192.9193, -197.5767, -193.9108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-196.3678, -198.4612, -193.6717, -197.9048, -194.6837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-197.1200, -198.7682, -194.5716, -198.2648, -195.5485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-197.5221, -199.0448, -195.0643, -198.3537, -196.1240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.6719, -199.2254, -195.1338, -198.1097, -196.4073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-197.6272, -199.4288, -195.0056, -197.7461, -196.5400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.4261, -199.6932, -194.6189, -197.1990, -196.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.2709, -199.8175, -194.1804, -196.6542, -196.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-197.0158, -199.9217, -193.6930, -196.1427, -196.3674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.7958, -200.0373, -193.4179, -195.8392, -196.2730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.5401, -200.0396, -193.1558, -195.6420, -196.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-196.2615, -199.8942, -193.0171, -195.6431, -195.7619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.9661, -199.7401, -192.9173, -195.7192, -195.4265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.7757, -199.4982, -192.7892, -195.7673, -195.1177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-195.6616, -199.2374, -192.6997, -195.8320, -194.8662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-195.6478, -198.9206, -192.6422, -195.8999, -194.6676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.6396, -198.6401, -192.5450, -195.9134, -194.4934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-195.8069, -198.4148, -192.7368, -196.1538, -194.4919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.0266, -198.1936, -193.1834, -196.6355, -194.5329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-196.2202, -197.9624, -193.7311, -197.2509, -194.5478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.4639, -197.8239, -194.2566, -197.7690, -194.6522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-196.6928, -197.6791, -194.7389, -198.2683, -194.7340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-196.7205, -197.5350, -194.9567, -198.5886, -194.6453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.8619, -197.3863, -195.2505, -198.9490, -194.6320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.8364, -197.2645, -195.4020, -199.2106, -194.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.7421, -197.2336, -195.4674, -199.3608, -194.3919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-196.6110, -197.2536, -195.3809, -199.2937, -194.3062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.6329, -197.2883, -195.3065, -199.1765, -194.3675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-196.7457, -197.3267, -195.2884, -199.0871, -194.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-196.7393, -197.4155, -195.0521, -198.7816, -194.5342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-196.6713, -197.4850, -194.7064, -198.4125, -194.5155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-196.8700, -197.6563, -194.6904, -198.2130, -194.7961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.2140, -197.8208, -194.7910, -198.0214, -195.2001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-197.5064, -197.9590, -194.9185, -197.9249, -195.5521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0793, device='cuda:0', dtype=torch.float64)
tensor([-197.6876, -198.1154, -194.8301, -197.6276, -195.8054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-197.6645, -198.2520, -194.8250, -197.5508, -195.8593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-197.6337, -198.3946, -194.8735, -197.5545, -195.9117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-197.5549, -198.4996, -194.7626, -197.4630, -195.8988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-197.4150, -198.5816, -194.6690, -197.4386, -195.8148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.2365, -198.6924, -194.5311, -197.3815, -195.7285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0926, device='cuda:0', dtype=torch.float64)
tensor([-197.0225, -198.6257, -194.4629, -197.4947, -195.4938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-196.6680, -198.6012, -194.0066, -197.1890, -195.1502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-196.2421, -198.6411, -193.3933, -196.6797, -194.7973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-196.1698, -198.6922, -193.2622, -196.5079, -194.7590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-196.1314, -198.7940, -193.0275, -196.1919, -194.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-196.2277, -198.8474, -193.0911, -196.1396, -194.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-196.3079, -198.8704, -193.2223, -196.2123, -194.9282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-196.4295, -198.8537, -193.6471, -196.6353, -195.0184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.4525, -198.8676, -193.9943, -196.9866, -195.0330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-196.5859, -198.8569, -194.4608, -197.4345, -195.1123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-196.5406, -198.7917, -194.6764, -197.7488, -194.9792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-196.6408, -198.7232, -195.0465, -198.1607, -194.9722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-196.6523, -198.6504, -195.2743, -198.4745, -194.8714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-196.5846, -198.6692, -195.2830, -198.5531, -194.7762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-196.4531, -198.7045, -195.2163, -198.5715, -194.6471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.3746, -198.6288, -195.2225, -198.6816, -194.4808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-196.3167, -198.5601, -195.1920, -198.7386, -194.3257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-196.1800, -198.5320, -195.0214, -198.6164, -194.1717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.8964, -198.5915, -194.5831, -198.2701, -193.9699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.5715, -198.7226, -194.1361, -197.9093, -193.7962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.2912, -198.7835, -193.7258, -197.5969, -193.6292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.2294, -198.7917, -193.5946, -197.4984, -193.6313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.3466, -198.7602, -193.6723, -197.5583, -193.7621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.4590, -198.7249, -193.6789, -197.5681, -193.8820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.4691, -198.6746, -193.5759, -197.4841, -193.9003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.6632, -198.5860, -193.7433, -197.6180, -194.0536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-195.7759, -198.5087, -193.7640, -197.6146, -194.1343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-195.7898, -198.3975, -193.6700, -197.5717, -194.0945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.8206, -198.1768, -193.6121, -197.6203, -193.9767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-195.8393, -197.9517, -193.5974, -197.7284, -193.8291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-196.0903, -197.7357, -193.8693, -198.0442, -193.8734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.2398, -197.4784, -193.8958, -198.1513, -193.7832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-196.6111, -197.2428, -194.2854, -198.5682, -193.8808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-196.7845, -196.9780, -194.4340, -198.7932, -193.7934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-197.0309, -196.7144, -194.5518, -198.9322, -193.7798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-197.2077, -196.5302, -194.5734, -198.9436, -193.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-197.3351, -196.4271, -194.6584, -198.9786, -193.8076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-197.4388, -196.2903, -194.6197, -198.9190, -193.8081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.2831, -196.1486, -194.3167, -198.6549, -193.6059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-196.9019, -195.9812, -193.7945, -198.2602, -193.2141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-196.4271, -195.8371, -193.2805, -197.8805, -192.7773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-195.6902, -195.6774, -192.4574, -197.2346, -192.1427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.0270, -195.5572, -191.7593, -196.6498, -191.6195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.5671, -195.4849, -191.2258, -196.1433, -191.2957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.3350, -195.5731, -191.0732, -195.9318, -191.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-194.3156, -195.6917, -191.2634, -196.0223, -191.3281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.3187, -195.8498, -191.4952, -196.1505, -191.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-194.6523, -196.2148, -192.3089, -196.7232, -192.0078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.2399, -196.5851, -193.4022, -197.4816, -192.7747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.8607, -196.7718, -194.4321, -198.1963, -193.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.1664, -196.9144, -194.9996, -198.5714, -193.8935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.5384, -197.0263, -195.6536, -199.0543, -194.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.9178, -197.0899, -196.2234, -199.4469, -194.8094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-196.8936, -197.1838, -196.3464, -199.5361, -194.9002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-196.7773, -197.2685, -196.2937, -199.4717, -194.8758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-196.4507, -197.3165, -195.9062, -199.1411, -194.6239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.1301, -197.3633, -195.5723, -198.8996, -194.3828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.9306, -197.4238, -195.3451, -198.7082, -194.2685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-195.6246, -197.4700, -194.9962, -198.4580, -194.0473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-195.3474, -197.6036, -194.6473, -198.1840, -193.9243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.1030, -197.7401, -194.2804, -197.8696, -193.8483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-194.8288, -197.7970, -193.7741, -197.4497, -193.7095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-194.9572, -197.8392, -193.8649, -197.4429, -193.9098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.1608, -197.8761, -194.1253, -197.6140, -194.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.3807, -197.8954, -194.3578, -197.7233, -194.4300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.6715, -197.8851, -194.6534, -197.8342, -194.7353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.0671, -197.8545, -195.0366, -198.0245, -195.1202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.4294, -197.7577, -195.5307, -198.4325, -195.4071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.6299, -197.6565, -195.8997, -198.7692, -195.5489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-196.7431, -197.5766, -196.0582, -198.8839, -195.6342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.7656, -197.4596, -196.0262, -198.8450, -195.5792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-196.6733, -197.3670, -195.7815, -198.6269, -195.4166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.4351, -197.3028, -195.4708, -198.3875, -195.1701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-196.0257, -197.2798, -194.9319, -197.9521, -194.8065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.6952, -197.1866, -194.4562, -197.5904, -194.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.3466, -197.0972, -193.9098, -197.1515, -194.0392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.9887, -196.9630, -193.3263, -196.6683, -193.6403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-194.8786, -196.7989, -193.0399, -196.4427, -193.4030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.7851, -196.6329, -192.7904, -196.2626, -193.1632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.5337, -196.6260, -192.5219, -196.0697, -192.9490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-194.3739, -196.7033, -192.5440, -196.1325, -192.8603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-194.2058, -196.8343, -192.6194, -196.2098, -192.8070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.0972, -196.9633, -192.7583, -196.3172, -192.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.0904, -197.0497, -192.9013, -196.4173, -192.8782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.9346, -197.1926, -192.8016, -196.2871, -192.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.8213, -197.3323, -192.6691, -196.1141, -192.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.7511, -197.4196, -192.6093, -196.0449, -192.9384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.0046, -197.4836, -193.0726, -196.4396, -193.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-194.3455, -197.5368, -193.6924, -196.9402, -193.4909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-194.4894, -197.6132, -194.0299, -197.2203, -193.6948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.6165, -197.6367, -194.3016, -197.4589, -193.8269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.7663, -197.6648, -194.4803, -197.6064, -193.9824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.1025, -197.6092, -194.7718, -197.8363, -194.2174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-195.1537, -197.5178, -194.6654, -197.7793, -194.1680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-195.0412, -197.4850, -194.4984, -197.6957, -194.0229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.7840, -197.4536, -194.2608, -197.6161, -193.7556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-194.7452, -197.3682, -194.3272, -197.7843, -193.6163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-194.6182, -197.3066, -194.2775, -197.8826, -193.4333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-194.7245, -197.2943, -194.4847, -198.1408, -193.4639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-195.0610, -197.2699, -194.8898, -198.5328, -193.7023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.4500, -197.3062, -195.3330, -198.9142, -194.0405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.8725, -197.2616, -195.8357, -199.3477, -194.3585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.1545, -197.2402, -196.1664, -199.6495, -194.5750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-196.3437, -197.2193, -196.4101, -199.8872, -194.7320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-196.2175, -197.2369, -196.2845, -199.8219, -194.6497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.1784, -197.1730, -196.2022, -199.8303, -194.5481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-196.0685, -197.0967, -195.8947, -199.6383, -194.3658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.8198, -197.0456, -195.4200, -199.3007, -194.0967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.6863, -197.0104, -195.1124, -199.0817, -193.9581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.4736, -197.0125, -194.6273, -198.7140, -193.7651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.2041, -197.0427, -194.1412, -198.3346, -193.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.7100, -197.1273, -193.4073, -197.7449, -193.2176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.2927, -197.1480, -192.9209, -197.4012, -192.8834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-193.9437, -197.0902, -192.5236, -197.1531, -192.5678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.8056, -197.0612, -192.4472, -197.1344, -192.4453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-193.8845, -197.0566, -192.6214, -197.2956, -192.4990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-193.9832, -197.0154, -192.7935, -197.4511, -192.5852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.1811, -196.9443, -193.0561, -197.7029, -192.7227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.5043, -196.9019, -193.4707, -198.0624, -192.9725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.8841, -196.8716, -194.0301, -198.5443, -193.2699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-195.3954, -196.8508, -194.6503, -199.0095, -193.7134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.7608, -196.8170, -195.0513, -199.2835, -194.0049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-195.8780, -196.8192, -195.1010, -199.2507, -194.1042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.9278, -196.9217, -195.0985, -199.1412, -194.2187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.9777, -197.0226, -194.9877, -198.9234, -194.3341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.9031, -197.1300, -194.6749, -198.5220, -194.3435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-195.7880, -197.1783, -194.3345, -198.1545, -194.2778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.6292, -197.1640, -193.9309, -197.7698, -194.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-195.6407, -197.1241, -193.6664, -197.4919, -194.0892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.6228, -197.0889, -193.4604, -197.3075, -194.0340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-195.6076, -197.1097, -193.3178, -197.1263, -194.0263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-195.6912, -197.0865, -193.3824, -197.1112, -194.0912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-196.0170, -197.0525, -193.7723, -197.3531, -194.3469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-196.1716, -197.0133, -193.9899, -197.4850, -194.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-196.2742, -196.8988, -194.2276, -197.7073, -194.4580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-196.3780, -196.7878, -194.4023, -197.8885, -194.4569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.3516, -196.6036, -194.4097, -198.0234, -194.2858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-196.2498, -196.3193, -194.3205, -198.1351, -193.9719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.9214, -196.1169, -194.0456, -198.0892, -193.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-195.6653, -195.9043, -193.8530, -198.0937, -193.1404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.6349, -195.6780, -193.9054, -198.2604, -192.9129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-195.6310, -195.5259, -194.0914, -198.5091, -192.7776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-195.5275, -195.4000, -194.0076, -198.5038, -192.5826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-195.4295, -195.3424, -193.9474, -198.4923, -192.4467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.0102, -195.3334, -193.5664, -198.2186, -192.0909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.6613, -195.3822, -193.1992, -197.9151, -191.8273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-194.6232, -195.4846, -193.1282, -197.8111, -191.8532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-194.7225, -195.5714, -193.2639, -197.8877, -191.9674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.0347, -195.6255, -193.6055, -198.1383, -192.2280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-195.3046, -195.7332, -193.9221, -198.3643, -192.5038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-195.7448, -195.9095, -194.4750, -198.7170, -192.9696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-196.0549, -196.1024, -194.8056, -198.8675, -193.3525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-196.2291, -196.2805, -194.9299, -198.8545, -193.6016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-196.4135, -196.4745, -195.1199, -198.8856, -193.8796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.3449, -196.6406, -195.0520, -198.7573, -193.9161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-196.3005, -196.7762, -195.0975, -198.7433, -193.9644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-196.2076, -196.9007, -195.1042, -198.6894, -193.9696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-196.0677, -197.0667, -194.9882, -198.4693, -193.9715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-196.0113, -197.2175, -194.9729, -198.3704, -194.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.1237, -197.3119, -195.1200, -198.3877, -194.1868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-196.3671, -197.3876, -195.4349, -198.5525, -194.4341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.4298, -197.4645, -195.3894, -198.4236, -194.5249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.4253, -197.6275, -195.1708, -198.0704, -194.6210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-196.2416, -197.7315, -194.7137, -197.5912, -194.5218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-195.9745, -197.7909, -194.1553, -197.0636, -194.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.7183, -197.7933, -193.8101, -196.8010, -194.0891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-195.5781, -197.7608, -193.6063, -196.6339, -193.9415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.2552, -197.6812, -193.1337, -196.2928, -193.6397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-195.0415, -197.5366, -192.7085, -195.9797, -193.3763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-194.7072, -197.3961, -192.1606, -195.5847, -193.0353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.6007, -197.2044, -191.9665, -195.4612, -192.8267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-194.7348, -197.0428, -192.2667, -195.7603, -192.7868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.8706, -196.9336, -192.5386, -195.9988, -192.8029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.1685, -196.8955, -193.1872, -196.5577, -192.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.5302, -196.7896, -193.7324, -197.0012, -193.1931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.8521, -196.6676, -194.3155, -197.5106, -193.3629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.1780, -196.4912, -194.8153, -197.9704, -193.4892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-196.4907, -196.3508, -195.4449, -198.5609, -193.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-196.4994, -196.1769, -195.6982, -198.9134, -193.4844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.3675, -195.9975, -195.7946, -199.1509, -193.2207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-196.0328, -195.8523, -195.6060, -199.1236, -192.8183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-195.8291, -195.6647, -195.4597, -199.0953, -192.4775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-195.5970, -195.5059, -195.2686, -199.0092, -192.1324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-195.3870, -195.3860, -195.0516, -198.8864, -191.8306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.0617, -195.2311, -194.7389, -198.6877, -191.4120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.7286, -195.1302, -194.3879, -198.4389, -191.0514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.5555, -195.1221, -194.1909, -198.3002, -190.8738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.4212, -195.1288, -193.9641, -198.1350, -190.7431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.3431, -195.1877, -193.6988, -197.9238, -190.7075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.3206, -195.2600, -193.3996, -197.6555, -190.7293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.3234, -195.3982, -193.1166, -197.3683, -190.8414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-194.6096, -195.5753, -193.2482, -197.3702, -191.1777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.1938, -195.7886, -193.9078, -197.7554, -191.7679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-195.6897, -195.8750, -194.5082, -198.1336, -192.2002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-196.1616, -195.9490, -195.1100, -198.5279, -192.6091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.4587, -195.9855, -195.4146, -198.6883, -192.8713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-196.5789, -196.0458, -195.5007, -198.7019, -193.0203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-196.6596, -196.0806, -195.5473, -198.6911, -193.1026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-196.4342, -196.1396, -195.2922, -198.4621, -192.9709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.0062, -196.1778, -194.7978, -198.0726, -192.6638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-195.4334, -196.2688, -194.2598, -197.6185, -192.2861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.9608, -196.3708, -193.9129, -197.3143, -191.9799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-194.5864, -196.5473, -193.6419, -197.0134, -191.8294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.2034, -196.7533, -193.4238, -196.7823, -191.6910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.8838, -197.0037, -193.3150, -196.6294, -191.6561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.0606, -197.1632, -193.6473, -196.8065, -191.9632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.2232, -197.2953, -193.9438, -196.9520, -192.2288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-194.5428, -197.3328, -194.4177, -197.2416, -192.5368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-195.1173, -197.2923, -195.2176, -197.7961, -193.0367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.6787, -197.2170, -195.9676, -198.3090, -193.5105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-196.1338, -197.2271, -196.5932, -198.7383, -193.9494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.4606, -197.1559, -197.0025, -199.0473, -194.1812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-196.5795, -197.0458, -197.2108, -199.2567, -194.1907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-196.6626, -196.9396, -197.3173, -199.3771, -194.1457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-196.6555, -196.8940, -197.2655, -199.3288, -194.0683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-196.5179, -196.8380, -196.9891, -199.0946, -193.8652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-196.2934, -196.8563, -196.5629, -198.7511, -193.6583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.9972, -196.8722, -196.1107, -198.4390, -193.3710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-195.7234, -196.8896, -195.6408, -198.1154, -193.1261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-195.4296, -196.9003, -195.1149, -197.7134, -192.8941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-195.2060, -196.9439, -194.6868, -197.3744, -192.7538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.0811, -196.9081, -194.3439, -197.0921, -192.6438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-194.9278, -196.8317, -194.0136, -196.8545, -192.4899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.9013, -196.6707, -193.8852, -196.8328, -192.3634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-195.0198, -196.5451, -193.8850, -196.8870, -192.3589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.2033, -196.4529, -193.9137, -196.9443, -192.4375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.4753, -196.3646, -194.0758, -197.1045, -192.5993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-195.7936, -196.2563, -194.3556, -197.3774, -192.7922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-195.9165, -196.1811, -194.3244, -197.4020, -192.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.9842, -196.0779, -194.2908, -197.4622, -192.8571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-196.1112, -195.9465, -194.2616, -197.4791, -192.8865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.0933, -195.8029, -194.0172, -197.2945, -192.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-195.9695, -195.7027, -193.6217, -196.9648, -192.6954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-195.8584, -195.5312, -193.1151, -196.5071, -192.5372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-195.6406, -195.3813, -192.4814, -195.9537, -192.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-195.6397, -195.2827, -192.2251, -195.7019, -192.2728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.6579, -195.2595, -192.1418, -195.6132, -192.2719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.8650, -195.2564, -192.4957, -195.9135, -192.4156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.6809, -195.2355, -192.4080, -195.8744, -192.2995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.3410, -195.1770, -192.1421, -195.7570, -192.0482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.2296, -195.1561, -192.2199, -195.8882, -191.9556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.0386, -195.2275, -192.2028, -195.9219, -191.8625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-194.9895, -195.4344, -192.5666, -196.2484, -191.9197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.1065, -195.6620, -192.9979, -196.5862, -192.0916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-195.0312, -195.9321, -193.1888, -196.7453, -192.1778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.0537, -196.1982, -193.4214, -196.9070, -192.3425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-195.4652, -196.3781, -193.7931, -197.1157, -192.7175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.8183, -196.5309, -194.0622, -197.2470, -193.0327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-196.1859, -196.6367, -194.4943, -197.5266, -193.3295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.6595, -196.6959, -195.1001, -197.9774, -193.6993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-196.8133, -196.7705, -195.3283, -198.1386, -193.8228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-196.9144, -196.8570, -195.4701, -198.2466, -193.9303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-196.8352, -196.9742, -195.3505, -198.1505, -193.9354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.7944, -197.0191, -195.3057, -198.1410, -193.9153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-196.7799, -197.0670, -195.2240, -198.0550, -193.9406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-196.7709, -197.1259, -195.0925, -197.8956, -193.9702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-196.7978, -197.2167, -194.8792, -197.6231, -194.0453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-196.8807, -197.2995, -194.7462, -197.4423, -194.1413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-196.9424, -197.4117, -194.6089, -197.2425, -194.2434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-196.9824, -197.5031, -194.3988, -197.0047, -194.3034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-196.9789, -197.6255, -194.1832, -196.7623, -194.3541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.9197, -197.7494, -194.0851, -196.6675, -194.3621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-196.3198, -197.8837, -193.5977, -196.3857, -193.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-195.8777, -197.9764, -193.2534, -196.2294, -193.7215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.5833, -197.9588, -193.0298, -196.1841, -193.4921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-195.4769, -197.9726, -192.9913, -196.1785, -193.4335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0691, device='cuda:0', dtype=torch.float64)
tensor([-195.2262, -197.9593, -192.8050, -196.0954, -193.2850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-194.8657, -197.9967, -192.4651, -195.8783, -193.0738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-194.4890, -198.0063, -192.0986, -195.6829, -192.8357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.1214, -197.9348, -191.5956, -195.3434, -192.5687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.8674, -197.7911, -191.1807, -195.0601, -192.3375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.6155, -197.6662, -190.8324, -194.8355, -192.1244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.6251, -197.4182, -190.6424, -194.7050, -191.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.7538, -197.2671, -190.8368, -194.8929, -191.9938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.8364, -197.1122, -191.0424, -195.1316, -191.9507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.8986, -197.0599, -191.3513, -195.5148, -191.9437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-194.0707, -197.0865, -191.7727, -195.9168, -192.0547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.2441, -197.1569, -192.2201, -196.3251, -192.2090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-194.4027, -197.1423, -192.4795, -196.5320, -192.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-194.5897, -197.1643, -192.7794, -196.7706, -192.4541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.8952, -197.1900, -193.3009, -197.1864, -192.7034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.1140, -197.2011, -193.6397, -197.4217, -192.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-195.5441, -197.2022, -194.2543, -197.8731, -193.2366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.9324, -197.2281, -194.8301, -198.2573, -193.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-196.1374, -197.0730, -195.0688, -198.4579, -193.6520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-196.0547, -196.8527, -194.9560, -198.4269, -193.4455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-196.0847, -196.5770, -194.8284, -198.3650, -193.2691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-196.1040, -196.2549, -194.5166, -198.1112, -193.0691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-196.0843, -195.8933, -194.1854, -197.8701, -192.8081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-196.2060, -195.6055, -193.8889, -197.6005, -192.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.2244, -195.2445, -193.4223, -197.2154, -192.4893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.1078, -194.9463, -192.8982, -196.8208, -192.2299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-196.2980, -194.7675, -192.6931, -196.6158, -192.2363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-196.4074, -194.6766, -192.5172, -196.4275, -192.2319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-196.4512, -194.6218, -192.3474, -196.2142, -192.1981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-196.3111, -194.6409, -192.2878, -196.1173, -192.1215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-196.1901, -194.6227, -192.2575, -196.0746, -192.0182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-195.9901, -194.6384, -192.3607, -196.1949, -191.8814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.5724, -194.6733, -192.0803, -195.9841, -191.6195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-195.2454, -194.7723, -191.9007, -195.8388, -191.4465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-194.9441, -194.9208, -191.6561, -195.6117, -191.3317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-194.7455, -195.0286, -191.4768, -195.4352, -191.2596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-195.0241, -195.1582, -191.8128, -195.6037, -191.4914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.3405, -195.3965, -192.3209, -195.8871, -191.8443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-195.7110, -195.7075, -193.1072, -196.3741, -192.3152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.8926, -195.9948, -193.7608, -196.8004, -192.6842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-196.0109, -196.2602, -194.3036, -197.1510, -193.0030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.1854, -196.4298, -194.8564, -197.5318, -193.2712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-196.0611, -196.5639, -195.1010, -197.7641, -193.2862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-195.6550, -196.7222, -194.9850, -197.7357, -193.1039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.2429, -196.8696, -194.7910, -197.6186, -192.9026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-194.9114, -196.9747, -194.5855, -197.4825, -192.7168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.6080, -196.9612, -194.3392, -197.3418, -192.4729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.3943, -196.9966, -194.1370, -197.1859, -192.3104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-194.3762, -196.9889, -194.1273, -197.1825, -192.2698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.4272, -196.8806, -194.1557, -197.2074, -192.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.6297, -196.7714, -194.4083, -197.3951, -192.3066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.8807, -196.6333, -194.7383, -197.6197, -192.4022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-194.8993, -196.4938, -194.7423, -197.5998, -192.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-194.8060, -196.3678, -194.6603, -197.5279, -192.2063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-194.7808, -196.2661, -194.6821, -197.5185, -192.1877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.8004, -196.0636, -194.6468, -197.4581, -192.1233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.8155, -195.8560, -194.5281, -197.3138, -192.0468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.6984, -195.6584, -194.2187, -197.0077, -191.9092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.6470, -195.4525, -193.8786, -196.6796, -191.8051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.4805, -195.2498, -193.3116, -196.1836, -191.6134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.2603, -195.0593, -192.6251, -195.5853, -191.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-194.0990, -194.8937, -192.0914, -195.1222, -191.2343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-194.4168, -194.7815, -192.0608, -195.0483, -191.3898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-195.0165, -194.7944, -192.2654, -195.0978, -191.7851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.7361, -194.9403, -192.6868, -195.3022, -192.3201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.9022, -195.1525, -193.3949, -195.6392, -193.1658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-197.8510, -195.2541, -194.0190, -196.0003, -193.8402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-198.6252, -195.3124, -194.5678, -196.3646, -194.4170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-199.0609, -195.2878, -194.8073, -196.5394, -194.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-199.0599, -195.2168, -194.8139, -196.5732, -194.7246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-198.9278, -195.1854, -194.9655, -196.7336, -194.7083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-198.6295, -195.1080, -195.1969, -197.0034, -194.5671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-197.9954, -195.0253, -195.0735, -197.0516, -194.1542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-197.1669, -194.9903, -194.6626, -196.9057, -193.6205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-196.4795, -194.9926, -194.2665, -196.7393, -193.1802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-195.8818, -194.9490, -193.8068, -196.5134, -192.7519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.4050, -194.8624, -193.3496, -196.2750, -192.3537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.0703, -194.8818, -193.2442, -196.3241, -192.1089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.7187, -194.9376, -193.0596, -196.2641, -191.8604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-194.5703, -195.0768, -193.0745, -196.2891, -191.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.4708, -195.1791, -193.0629, -196.2812, -191.7983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.4998, -195.2403, -193.1362, -196.3168, -191.8227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-194.6097, -195.2839, -193.2586, -196.4045, -191.9023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.7705, -195.3896, -193.4819, -196.5539, -192.0626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-194.9666, -195.4780, -193.5803, -196.5790, -192.2336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-195.1480, -195.6129, -193.7076, -196.6170, -192.4432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-195.2376, -195.7921, -193.6952, -196.5190, -192.6199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.1329, -195.9000, -193.2852, -196.0660, -192.6158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-194.8820, -195.9861, -192.7776, -195.5616, -192.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.6239, -196.0545, -192.3314, -195.1569, -192.3667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.4401, -196.0991, -192.0246, -194.8235, -192.2727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-194.4359, -196.0764, -191.9162, -194.6564, -192.2511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.4624, -196.1074, -191.9292, -194.5907, -192.2974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-194.5985, -196.1346, -192.1291, -194.7239, -192.3932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-194.7415, -196.1386, -192.4357, -195.0097, -192.4543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-194.9488, -196.1540, -192.9477, -195.4787, -192.5768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-195.1320, -196.1566, -193.2738, -195.7451, -192.6883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-195.3328, -196.0817, -193.7130, -196.1717, -192.7682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-195.5827, -196.0543, -194.1226, -196.5043, -192.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.6905, -196.0424, -194.2677, -196.5911, -192.9737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.7672, -196.0278, -194.3138, -196.5758, -192.9960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-195.9253, -196.0059, -194.4387, -196.6047, -193.0703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-195.9635, -195.9767, -194.4848, -196.6302, -193.0477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-195.7795, -195.9064, -194.1910, -196.4057, -192.8361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-195.4992, -195.8755, -193.7201, -196.0259, -192.5954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-195.1329, -195.8218, -193.0781, -195.4812, -192.2672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.5038, -195.7097, -192.1478, -194.7841, -191.7629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.0271, -195.5645, -191.3734, -194.2035, -191.3609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.6901, -195.3461, -190.8469, -193.8466, -191.0091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.3417, -195.2036, -190.3460, -193.4878, -190.7128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-193.2198, -195.1365, -190.0176, -193.2230, -190.5733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-193.4419, -195.2532, -190.1644, -193.2566, -190.7394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-193.8729, -195.4371, -190.5463, -193.4562, -191.0612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.5098, -195.6886, -191.0951, -193.7133, -191.5399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.2788, -195.8932, -191.7163, -193.9585, -192.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-196.1851, -196.0505, -192.6670, -194.5045, -192.7526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-196.7295, -196.1900, -193.3314, -194.9041, -193.2047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-197.0380, -196.2942, -193.6638, -195.0721, -193.4869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.4003, -196.4198, -193.8029, -195.0004, -193.8058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-197.5598, -196.4866, -193.7387, -194.8258, -193.9618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-197.5996, -196.6026, -193.7110, -194.6749, -194.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-197.4286, -196.6817, -193.4875, -194.4127, -194.0623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-197.0262, -196.8355, -193.3291, -194.2562, -193.9367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-196.5373, -196.9436, -193.1652, -194.1729, -193.7183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-196.0721, -196.9865, -192.8852, -193.9937, -193.4567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-195.4907, -196.9870, -192.6063, -193.9291, -193.1107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.0528, -196.9400, -192.4338, -193.9385, -192.8443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.6043, -196.8561, -192.3047, -194.0211, -192.5488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-194.0596, -196.7685, -191.9723, -193.9179, -192.2142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.7136, -196.6202, -191.8600, -193.9726, -191.9591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.5419, -196.4766, -191.8631, -194.0942, -191.8105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-193.2926, -196.3416, -191.8089, -194.1670, -191.6200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-193.2128, -196.2330, -191.7969, -194.2111, -191.5375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.3903, -196.1084, -192.0172, -194.4356, -191.5681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-193.6267, -195.9984, -192.3347, -194.7249, -191.6576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-194.1795, -195.9088, -192.8297, -195.0738, -191.9151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.9855, -195.8421, -193.5750, -195.5821, -192.3410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.7931, -195.8365, -194.1899, -195.9256, -192.8059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-196.5311, -195.8134, -194.7754, -196.2968, -193.2094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-197.1869, -195.8317, -195.3880, -196.7037, -193.5955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-197.5608, -195.8849, -195.6222, -196.7978, -193.8224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-197.9344, -195.9311, -195.9459, -196.9663, -194.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-198.0133, -196.0101, -196.0357, -196.9593, -194.1209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-198.0345, -196.0323, -195.7861, -196.5974, -194.0907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-197.6059, -196.1437, -195.1469, -195.9470, -193.8246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-197.0564, -196.2622, -194.5219, -195.3472, -193.5471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.3719, -196.2524, -193.7446, -194.7430, -193.1002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-195.8409, -196.2864, -193.0946, -194.2130, -192.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-195.2215, -196.3348, -192.1895, -193.4773, -192.3835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.7542, -196.3739, -191.3908, -192.7773, -192.0969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-194.4012, -196.5031, -190.9701, -192.3450, -191.9754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.2086, -196.6064, -190.4667, -191.8413, -191.9051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.1522, -196.7730, -190.1881, -191.4892, -191.9654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-194.3161, -196.9798, -190.6430, -191.7361, -192.2087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-194.2885, -197.0693, -190.7680, -191.8141, -192.2766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-194.5013, -197.1659, -191.6145, -192.5157, -192.5232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.5423, -197.2404, -192.3960, -193.2686, -192.6702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.7309, -197.2311, -193.4569, -194.3089, -192.8501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-194.7452, -197.2139, -194.2017, -195.0971, -192.9190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.7025, -197.1968, -194.8337, -195.7676, -192.9565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.5708, -197.1896, -195.2824, -196.2315, -192.9426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.4325, -197.1425, -195.6185, -196.5892, -192.8722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.4894, -197.0489, -196.0471, -196.9671, -192.8970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.4463, -196.9618, -196.3318, -197.2224, -192.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.4614, -196.8507, -196.6058, -197.4538, -192.7614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-194.6003, -196.7190, -196.8631, -197.6288, -192.7652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.7618, -196.6148, -197.0353, -197.7291, -192.8147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-194.7493, -196.5541, -196.9524, -197.6474, -192.7468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.7344, -196.5032, -196.6997, -197.4078, -192.6613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-194.6734, -196.5317, -196.3376, -197.0814, -192.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-194.5174, -196.4702, -195.8474, -196.6974, -192.3889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.4672, -196.3125, -195.4750, -196.3984, -192.1993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-194.3948, -196.1510, -195.1900, -196.1891, -191.9997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.3212, -196.0681, -194.9951, -196.0171, -191.8729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-194.2540, -195.9497, -194.8567, -195.9060, -191.7189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.8877, -195.9305, -194.2909, -195.4981, -191.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.7698, -195.8477, -193.9514, -195.2383, -191.2904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-193.5529, -195.7977, -193.5662, -194.9348, -191.1277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.5763, -195.7192, -193.4552, -194.8472, -191.0878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.8213, -195.5471, -193.4349, -194.8337, -191.1147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-194.0752, -195.3439, -193.3622, -194.7985, -191.1252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-193.9977, -195.1735, -192.9651, -194.5126, -190.9527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.0293, -195.1095, -192.8442, -194.4162, -190.9178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-194.1219, -194.9985, -192.6280, -194.2224, -190.8624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.3721, -194.9301, -192.4827, -194.0291, -190.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.7007, -194.8623, -192.4296, -193.8923, -191.0381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.3131, -194.9167, -192.6884, -193.9113, -191.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.7323, -194.9435, -192.8370, -193.8814, -191.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-196.1994, -194.9854, -192.9508, -193.7644, -191.9346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-196.5009, -195.0468, -193.0460, -193.6704, -192.1750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-196.8786, -195.0868, -193.4470, -193.8984, -192.4975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-197.2152, -195.1140, -193.8893, -194.2239, -192.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-197.2235, -195.1418, -194.0581, -194.3693, -192.8473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-197.0135, -195.1225, -194.1652, -194.5825, -192.7319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-196.7452, -195.1502, -194.3149, -194.8291, -192.6202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-196.0865, -195.1123, -194.0491, -194.7932, -192.2196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-195.5288, -195.0379, -193.8342, -194.8031, -191.8477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-194.7655, -194.9686, -193.4579, -194.7096, -191.3520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.2772, -194.9309, -193.3149, -194.7259, -191.0341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-193.7787, -194.8751, -193.1364, -194.6705, -190.7052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.4556, -194.8942, -193.1037, -194.6816, -190.5273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.2494, -195.0041, -193.0525, -194.6424, -190.4800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.2403, -195.1611, -193.2225, -194.7430, -190.5945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.4285, -195.3711, -193.5322, -194.9064, -190.8725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.7325, -195.5986, -193.8872, -195.0802, -191.2477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.1513, -195.7860, -194.3908, -195.3548, -191.6764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.8052, -195.9713, -194.9907, -195.6088, -192.2622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-194.8035, -196.2225, -194.9096, -195.3569, -192.4587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.8107, -196.4672, -194.9116, -195.2035, -192.6603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.6091, -196.6855, -194.6790, -194.8892, -192.6985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-194.2762, -196.7598, -194.4212, -194.6641, -192.5395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-193.7904, -196.8537, -194.0406, -194.3763, -192.3154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.1045, -196.9666, -193.5572, -194.0685, -191.9795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-192.5732, -197.0874, -193.1552, -193.8005, -191.7466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.3106, -197.0410, -193.0016, -193.7242, -191.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-192.2535, -196.8640, -193.0483, -193.7882, -191.4202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-192.3701, -196.7202, -193.1376, -193.8609, -191.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.6741, -196.5167, -193.3392, -193.9544, -191.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.7863, -196.3666, -193.4382, -193.9979, -191.4746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.8440, -196.2941, -193.3757, -193.9080, -191.4524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.8252, -196.2572, -193.2031, -193.7236, -191.3956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-192.9503, -196.2338, -193.1656, -193.6218, -191.4344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-193.2383, -196.1644, -193.3069, -193.6516, -191.5285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.4697, -196.0314, -193.3704, -193.6385, -191.5342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-193.7046, -195.9462, -193.5206, -193.6817, -191.5749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-193.7788, -195.8638, -193.5385, -193.6673, -191.5099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-193.9554, -195.8582, -193.5257, -193.5570, -191.5544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-193.9272, -195.8685, -193.3615, -193.3648, -191.5090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-193.8614, -195.8540, -193.1355, -193.1526, -191.4147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-193.8382, -195.7875, -192.9798, -193.0053, -191.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-194.0221, -195.7888, -193.0794, -193.0091, -191.3842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-194.1898, -195.8644, -193.3919, -193.1708, -191.5150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-194.3599, -196.0191, -193.9209, -193.5181, -191.7117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.4072, -196.1572, -194.3596, -193.9015, -191.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.6064, -196.1998, -194.8455, -194.3140, -192.0325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-194.5152, -196.3126, -194.9630, -194.4238, -192.0878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-194.3323, -196.3216, -194.8263, -194.3889, -191.9927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-194.1398, -196.2777, -194.7016, -194.3692, -191.8342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.6210, -196.2465, -194.3539, -194.2882, -191.4795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.0867, -196.2594, -193.7798, -193.9614, -191.1522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.8657, -196.2340, -193.4773, -193.7661, -190.9963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.7290, -196.1870, -193.2087, -193.5450, -190.8852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-192.5195, -196.0801, -192.8816, -193.3295, -190.6842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-192.6233, -195.9650, -192.9040, -193.3216, -190.6511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.9012, -195.8235, -192.9722, -193.2571, -190.6893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-193.4342, -195.7286, -193.3246, -193.3841, -190.9030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.9801, -195.6693, -193.6977, -193.4873, -191.1650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.5083, -195.5555, -194.0524, -193.6324, -191.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.1068, -195.4139, -194.3368, -193.7302, -191.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-195.8121, -195.3188, -194.5650, -193.7315, -191.9180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-196.7119, -195.2632, -194.9522, -193.8231, -192.3623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-197.3869, -195.1687, -195.2037, -193.9898, -192.6452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-197.6603, -195.1280, -195.1952, -194.0171, -192.7260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-197.6067, -195.0957, -195.0207, -193.9720, -192.6121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-197.2168, -195.0839, -194.6072, -193.7774, -192.3207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-196.7514, -195.1433, -193.8822, -193.2749, -192.0107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-196.0691, -195.2149, -193.1947, -192.9171, -191.6099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-195.3928, -195.2551, -192.3926, -192.4516, -191.2151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-194.6452, -195.3287, -191.5450, -191.9416, -190.8527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-193.8375, -195.3695, -190.7066, -191.5425, -190.4691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-193.2626, -195.4401, -190.5042, -191.6250, -190.2436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.9741, -195.5677, -190.7089, -191.9368, -190.1670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.8914, -195.6874, -191.1491, -192.3704, -190.1722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.1570, -195.8156, -191.8480, -192.9492, -190.3748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-193.3605, -195.9116, -192.3737, -193.3622, -190.5382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-193.6549, -196.0492, -192.8857, -193.6596, -190.7912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-193.9874, -196.0828, -193.4749, -194.0511, -191.0229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-194.1285, -196.0723, -193.7671, -194.2473, -191.1128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-194.0981, -196.0156, -193.8902, -194.3946, -191.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-194.3113, -195.9065, -194.3133, -194.7705, -191.1434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-194.6682, -195.7349, -194.9146, -195.2420, -191.2755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.9431, -195.6103, -195.4640, -195.6766, -191.4002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-194.8300, -195.5319, -195.6343, -195.8703, -191.3116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-194.8787, -195.4064, -195.8649, -196.0616, -191.2884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-194.9122, -195.3357, -196.0950, -196.2202, -191.3049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-195.0305, -195.2577, -196.4004, -196.3925, -191.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-195.1008, -195.1851, -196.6151, -196.4706, -191.4352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-194.7993, -195.1821, -196.5223, -196.3586, -191.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.5072, -195.1515, -196.4807, -196.3186, -191.1372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.0375, -195.2047, -196.2274, -196.1070, -190.9332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.6240, -195.3151, -195.8756, -195.7321, -190.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-193.0635, -195.4405, -195.4879, -195.3827, -190.5692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.8397, -195.5338, -195.3415, -195.1704, -190.5201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.5155, -195.5967, -195.1077, -194.9305, -190.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.3878, -195.6813, -195.0206, -194.7697, -190.3762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-192.3173, -195.7608, -194.9497, -194.5868, -190.4061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-192.1445, -195.7705, -194.6343, -194.2266, -190.3347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-192.2726, -195.7507, -194.5490, -193.9755, -190.4322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-192.3417, -195.6892, -194.3587, -193.6797, -190.4736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-192.5016, -195.6920, -194.3055, -193.4816, -190.6026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.5992, -195.6462, -194.2051, -193.3109, -190.6767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-192.5775, -195.5516, -194.1305, -193.2809, -190.6525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.7075, -195.4073, -194.2413, -193.4195, -190.6726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.8730, -195.2800, -194.2941, -193.5199, -190.7149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.9394, -195.2734, -194.2892, -193.5789, -190.7663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.8430, -195.2968, -194.1225, -193.4645, -190.7469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-192.7322, -195.3446, -193.9284, -193.3364, -190.7332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.5516, -195.4453, -193.5704, -193.1003, -190.7080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.5909, -195.5295, -193.3586, -192.8968, -190.7981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-192.6039, -195.6590, -192.9398, -192.5046, -190.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.5320, -195.7360, -192.4355, -192.0685, -190.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-192.4119, -195.7642, -191.9429, -191.6963, -190.8448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.5765, -195.7361, -191.8016, -191.5645, -190.8881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.6340, -195.7105, -191.7209, -191.5104, -190.9025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-192.8641, -195.6725, -191.6688, -191.4337, -190.9654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-193.2882, -195.6776, -191.8825, -191.5565, -191.1361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-193.4539, -195.6367, -192.0623, -191.7678, -191.1553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.6840, -195.6298, -192.4094, -192.1464, -191.2261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-193.7816, -195.6964, -192.4897, -192.2279, -191.2736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.5564, -195.6870, -192.4339, -192.3107, -191.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.2588, -195.6701, -192.2650, -192.2813, -190.9913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-192.7319, -195.6210, -192.1198, -192.4212, -190.7393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.2270, -195.5376, -191.9637, -192.5636, -190.4916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.9024, -195.5120, -192.1780, -192.9502, -190.3694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-191.5432, -195.3392, -192.1736, -193.1905, -190.1258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.4572, -195.2940, -192.4046, -193.4773, -190.0662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-191.5547, -195.2587, -192.7299, -193.7598, -190.0923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-191.7271, -195.1396, -193.0192, -193.9999, -190.0951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-191.9409, -195.0604, -193.3916, -194.3145, -190.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.0616, -194.9952, -193.6450, -194.5198, -190.2202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-192.1268, -194.9570, -193.7643, -194.5716, -190.2550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-192.3137, -194.8716, -193.9327, -194.6535, -190.3188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.3568, -194.7940, -193.8365, -194.5286, -190.3107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.3913, -194.7869, -193.6680, -194.3269, -190.3331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-192.4065, -194.7410, -193.4396, -194.0520, -190.3237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-192.4030, -194.6100, -193.1933, -193.7884, -190.2545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.3031, -194.4965, -192.8665, -193.4579, -190.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-192.4748, -194.4307, -192.7303, -193.1770, -190.1911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.8132, -194.3987, -192.8149, -193.0359, -190.3458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-193.2339, -194.3744, -193.1344, -193.0889, -190.5362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.6322, -194.3543, -193.5840, -193.2818, -190.7438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.8738, -194.2844, -193.8407, -193.4361, -190.8146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-194.1648, -194.2727, -194.2631, -193.6850, -190.9745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-194.2573, -194.2355, -194.4912, -193.8259, -191.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-194.2858, -194.2556, -194.5776, -193.8170, -191.0362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-194.3365, -194.3140, -194.6171, -193.7272, -191.0864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-194.5647, -194.3291, -194.8244, -193.7593, -191.1962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-194.9548, -194.3340, -195.2287, -193.9545, -191.3990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-195.3892, -194.3108, -195.6042, -194.0898, -191.6014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-195.5765, -194.2488, -195.7817, -194.1814, -191.6450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-195.2930, -194.3058, -195.4304, -193.8771, -191.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-194.9200, -194.3698, -194.9559, -193.5081, -191.2199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.6516, -194.3980, -194.7446, -193.3785, -191.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-194.5008, -194.4177, -194.5653, -193.2446, -190.9356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-194.1938, -194.4086, -194.4822, -193.2973, -190.7180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.7961, -194.4169, -194.1415, -193.1489, -190.4351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.4523, -194.5748, -193.7921, -192.9314, -190.2974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-193.1297, -194.7531, -193.5839, -192.8243, -190.2000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-193.0412, -194.8260, -193.5494, -192.7844, -190.1720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.1210, -194.8560, -193.5671, -192.7474, -190.1634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.1709, -194.9161, -193.5906, -192.7283, -190.1719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-193.1828, -194.9825, -193.5537, -192.6511, -190.1656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.3418, -195.0477, -193.7321, -192.7253, -190.2515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.4282, -195.0796, -193.8866, -192.8193, -190.3182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.3272, -195.1636, -193.9224, -192.8229, -190.3432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-193.2024, -195.1867, -193.9190, -192.8041, -190.3204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.2483, -195.1563, -194.0728, -192.9157, -190.3396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-193.0544, -195.1394, -194.0747, -193.0515, -190.2451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.8258, -195.1398, -194.1092, -193.2579, -190.1463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-192.5151, -195.1274, -193.9746, -193.3347, -189.9801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-192.2387, -195.0080, -193.7659, -193.3695, -189.7418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-191.9670, -194.9173, -193.5440, -193.3451, -189.5206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-192.0766, -194.8409, -193.6917, -193.4480, -189.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-192.2539, -194.8392, -193.8171, -193.4109, -189.6326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.1954, -194.8661, -193.6321, -193.1145, -189.6070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.1461, -194.7878, -193.3496, -192.7552, -189.5176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-191.8949, -194.5931, -192.7326, -192.2033, -189.2646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-192.0179, -194.4496, -192.4660, -191.7892, -189.1816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.1964, -194.3758, -192.3811, -191.5691, -189.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.5312, -194.3307, -192.3898, -191.3487, -189.2453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-192.8268, -194.2761, -192.3932, -191.1348, -189.2991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.1127, -194.1459, -192.0901, -190.6386, -189.2833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-193.0820, -193.9900, -191.7913, -190.3775, -189.1560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-192.6225, -193.6404, -191.3311, -190.2305, -188.7937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-192.0904, -193.4081, -190.8274, -189.9998, -188.4919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-191.5680, -193.2232, -190.4752, -189.9184, -188.2310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.0460, -193.0308, -190.2549, -189.9933, -187.9665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.9908, -192.9760, -190.5308, -190.2892, -187.9398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-191.2844, -192.9377, -191.0400, -190.6930, -188.0453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-192.0212, -193.0999, -191.8891, -191.1451, -188.4410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.5266, -193.1716, -192.4978, -191.4791, -188.7351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-193.1311, -193.1593, -193.2174, -191.9214, -189.0487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-193.4134, -193.0820, -193.5878, -192.1330, -189.1922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-193.5005, -192.9499, -193.8125, -192.2908, -189.2059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.7325, -192.9218, -194.1106, -192.4492, -189.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.0142, -192.9313, -194.3930, -192.5439, -189.5261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-194.0440, -192.9599, -194.6160, -192.6851, -189.6152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.8410, -193.0281, -194.5856, -192.6125, -189.6095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-193.2274, -193.0530, -194.2042, -192.3545, -189.3690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.5458, -193.1293, -193.6489, -191.9772, -189.1008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.8655, -193.1994, -192.9478, -191.5228, -188.8331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.2954, -193.2394, -192.3550, -191.1881, -188.6023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-190.6596, -193.2968, -191.7246, -190.8783, -188.3733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.5968, -193.3019, -191.6795, -190.9258, -188.3459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.6825, -193.3714, -191.7338, -190.9821, -188.4162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.0048, -193.4295, -192.0178, -191.1236, -188.5888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.2878, -193.5135, -192.2466, -191.1584, -188.7775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.6358, -193.6557, -192.5273, -191.1410, -189.0370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.1144, -193.7898, -192.9094, -191.1193, -189.3443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-192.6008, -193.9349, -193.3985, -191.1742, -189.6847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-193.1895, -194.0068, -193.8251, -191.1432, -190.0259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-193.6073, -194.1105, -194.2588, -191.2050, -190.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.9849, -194.1176, -194.7117, -191.4124, -190.5644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-194.6012, -194.0337, -195.2675, -191.7329, -190.8501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-194.9538, -194.0520, -195.3495, -191.6474, -191.0145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-195.1905, -194.1031, -195.4006, -191.5551, -191.1421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-195.3677, -194.1248, -195.4625, -191.5146, -191.2356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-195.5343, -194.1449, -195.4836, -191.4521, -191.2974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-195.3615, -194.1586, -195.3233, -191.3181, -191.2147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.9383, -194.1812, -195.0230, -191.1574, -191.0286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-194.7550, -194.1538, -194.6576, -190.8489, -190.8671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-194.4572, -194.1251, -194.2268, -190.5178, -190.6806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-193.9245, -194.1571, -193.7419, -190.2297, -190.4411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-193.3879, -194.1189, -193.5545, -190.3182, -190.1996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.7761, -194.0392, -193.1672, -190.3275, -189.8900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.3560, -193.9743, -192.8930, -190.3670, -189.6805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.1636, -193.8495, -192.8246, -190.5639, -189.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-192.1902, -193.7253, -193.0310, -190.8759, -189.4764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.1879, -193.5357, -193.0722, -191.0192, -189.3756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-192.2695, -193.3609, -193.0665, -191.0557, -189.3284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.2526, -193.2130, -192.9338, -191.0075, -189.2411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.1359, -193.0938, -192.6343, -190.8155, -189.1219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-192.1097, -192.9834, -192.3490, -190.5806, -189.0398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.1650, -192.8475, -192.0029, -190.2722, -188.9853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.3453, -192.8274, -191.9757, -190.1199, -189.0554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-192.4910, -192.8281, -192.1734, -190.1867, -189.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.5264, -192.8736, -192.2594, -190.1386, -189.2065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.7686, -192.9777, -192.4439, -190.0855, -189.3876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-193.1745, -193.0296, -192.6832, -190.0217, -189.5960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-193.4798, -193.1442, -192.9519, -190.0261, -189.7948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-193.7769, -193.3158, -193.1679, -189.9509, -189.9871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-193.9842, -193.4312, -193.2627, -189.8094, -190.1073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-194.3311, -193.5141, -193.4597, -189.6843, -190.2623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-194.5864, -193.5961, -193.9604, -189.9769, -190.4500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-194.6831, -193.6249, -194.1883, -190.1043, -190.5193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-194.5189, -193.4601, -194.4802, -190.5185, -190.4241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-194.3196, -193.3068, -194.8266, -190.9815, -190.3423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.7016, -193.2168, -194.5928, -191.0394, -190.0772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.0385, -193.1722, -194.2223, -190.9203, -189.7890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.3952, -193.0661, -193.8747, -190.8734, -189.4645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-191.6178, -193.0035, -193.2614, -190.6294, -189.0831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-190.7223, -192.9729, -192.4809, -190.2810, -188.6572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-190.1018, -192.9443, -191.9413, -190.0199, -188.3780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-189.7098, -193.0077, -191.4965, -189.7138, -188.2585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-189.5297, -193.0017, -191.2813, -189.5114, -188.1783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.5477, -193.0176, -191.2428, -189.3857, -188.1716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.0025, -193.0333, -191.5582, -189.3562, -188.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.6046, -193.0364, -191.9627, -189.3334, -188.5810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-191.1849, -193.0510, -192.3345, -189.3117, -188.8025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.0948, -193.0103, -192.9498, -189.4480, -189.1390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-193.3134, -192.9945, -193.6314, -189.5641, -189.5737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-194.4035, -192.9891, -194.3249, -189.9004, -189.9726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-195.4833, -192.9812, -195.0309, -190.3490, -190.3643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-196.2477, -193.0022, -195.4819, -190.6269, -190.6254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-196.5578, -193.1014, -195.6154, -190.6616, -190.7387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-196.6678, -193.1938, -195.5423, -190.5443, -190.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-196.2541, -193.2240, -195.2072, -190.3024, -190.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-195.5763, -193.3219, -194.7097, -189.9650, -190.2018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-194.6192, -193.4068, -194.0312, -189.5509, -189.7839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-193.8039, -193.4982, -193.2240, -188.9567, -189.4165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-193.0766, -193.5769, -192.4809, -188.4107, -189.1185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.4637, -193.6590, -191.7958, -187.8325, -188.8943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-191.6287, -193.6508, -191.0657, -187.3591, -188.5501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-191.0804, -193.5556, -190.4698, -186.9543, -188.2705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-190.5523, -193.4413, -189.7178, -186.2928, -188.0087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-190.2539, -193.3856, -189.4565, -186.0940, -187.8533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.2363, -193.3154, -189.6042, -186.2514, -187.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-190.1256, -193.3206, -189.7337, -186.4518, -187.7081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.0954, -193.2198, -189.9625, -186.8015, -187.6154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-190.3425, -193.1438, -190.3213, -187.1669, -187.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-190.6095, -193.0338, -190.7822, -187.6734, -187.6171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-191.1816, -193.0282, -191.3582, -188.1167, -187.7630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.5721, -193.0557, -191.6425, -188.3224, -187.8880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.9171, -193.0663, -191.8567, -188.4394, -188.0147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-192.5948, -193.0898, -192.3663, -188.7372, -188.2675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.2612, -193.1310, -192.9745, -189.1093, -188.5529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.7858, -193.1152, -193.4932, -189.4814, -188.7424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.1904, -193.0492, -193.9984, -189.8979, -188.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-194.4299, -192.9709, -194.4386, -190.3564, -189.0089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-194.3573, -192.8912, -194.4496, -190.4362, -188.9714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-194.0666, -192.8395, -194.2337, -190.3538, -188.8532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-193.3758, -192.7975, -193.7700, -190.1975, -188.6001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.6592, -192.8307, -193.0856, -189.7881, -188.3637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-191.9532, -192.8297, -192.4866, -189.5129, -188.1373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-191.5854, -192.8058, -192.1454, -189.3605, -188.0429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-191.4409, -192.7350, -191.8611, -189.1132, -187.9857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-191.4349, -192.6603, -191.6128, -188.8142, -187.9688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-191.5577, -192.4445, -191.3042, -188.4382, -187.8934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.5309, -192.1850, -190.8990, -188.0381, -187.7285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-191.8423, -191.9486, -190.8078, -187.8079, -187.6813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.2156, -191.7705, -190.7582, -187.5692, -187.6854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.6565, -191.6417, -190.6870, -187.2856, -187.7094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-193.3227, -191.6225, -190.8066, -187.1308, -187.8267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-193.6490, -191.6089, -191.1917, -187.4602, -187.8990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.9777, -191.6490, -191.5789, -187.7540, -188.0053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-193.7837, -191.6358, -191.9584, -188.2341, -187.9805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.8627, -191.6446, -192.4320, -188.6940, -188.0357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-193.6626, -191.6381, -192.5108, -188.8098, -187.9680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-193.5931, -191.6393, -192.7280, -189.0462, -187.9601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-193.6288, -191.7285, -193.0497, -189.3407, -188.0263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.4815, -191.8318, -193.1828, -189.4703, -188.0174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-193.1912, -191.9419, -193.3521, -189.7159, -187.9644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-193.1105, -192.0951, -193.6464, -189.9849, -188.0236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-193.0592, -192.2574, -193.6913, -189.9719, -188.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.8925, -192.4120, -193.5642, -189.8288, -188.0611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-192.3241, -192.5759, -193.0735, -189.4506, -187.9136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.1521, -192.7310, -192.9379, -189.2732, -187.9046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-192.0308, -192.8546, -192.8616, -189.1434, -187.8977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-191.7607, -192.9120, -192.6226, -188.9383, -187.7830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-191.5276, -192.9251, -192.3369, -188.6823, -187.6645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-191.7587, -192.9808, -192.5206, -188.7086, -187.7271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.9769, -193.0891, -192.6674, -188.6958, -187.8139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-192.0068, -193.2178, -192.7057, -188.6432, -187.8536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.1768, -193.3012, -192.8805, -188.6875, -187.9413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.4985, -193.4693, -193.1475, -188.7101, -188.1236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-192.7006, -193.6429, -193.4882, -188.8592, -188.3101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.1495, -193.7500, -193.9055, -189.0306, -188.5490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.3731, -193.7562, -194.2040, -189.1896, -188.6685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-193.4209, -193.7215, -194.3991, -189.2763, -188.7516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.0692, -193.6787, -194.4977, -189.4575, -188.6735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-192.5774, -193.6072, -194.3222, -189.4084, -188.4874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-192.1010, -193.5052, -194.1899, -189.4651, -188.2654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-192.0516, -193.4156, -194.2910, -189.5994, -188.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-191.9933, -193.2317, -194.2593, -189.6051, -188.0555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-191.7960, -192.9585, -194.1033, -189.5495, -187.7903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-191.8090, -192.6448, -194.0122, -189.5319, -187.5920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-191.9796, -192.3721, -193.9052, -189.3663, -187.4753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.4825, -192.1520, -194.0633, -189.3085, -187.5438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.1394, -191.9804, -194.2762, -189.2155, -187.7119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.5773, -191.7957, -194.2220, -188.9415, -187.7404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-193.7193, -191.5752, -194.0231, -188.7051, -187.6427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-193.7208, -191.3634, -193.7425, -188.4527, -187.4762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.8751, -191.1029, -193.4853, -188.1777, -187.3366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.7784, -190.8886, -192.9791, -187.7729, -187.1259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-193.4744, -190.6225, -192.6228, -187.6650, -186.8611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-193.3720, -190.3686, -192.2074, -187.3803, -186.6431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-193.1856, -190.0960, -191.7843, -187.1827, -186.3836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-193.3620, -189.9987, -191.4881, -186.8503, -186.3396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-192.8933, -189.8901, -190.8785, -186.5269, -186.0818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-192.4644, -189.8713, -190.4876, -186.4077, -185.8905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.2994, -189.9380, -190.2972, -186.3591, -185.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-192.2740, -190.1041, -190.6539, -186.8525, -185.9055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.4244, -190.1763, -191.2904, -187.6306, -185.9843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-192.6754, -190.1916, -191.8299, -188.2050, -186.0677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-193.2009, -190.2940, -192.6082, -188.8103, -186.3263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.5269, -190.3210, -193.2642, -189.4134, -186.5097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-193.6461, -190.3321, -193.6793, -189.8821, -186.5690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-193.7428, -190.3877, -193.8591, -190.0559, -186.6129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-193.6375, -190.4951, -193.6719, -189.8937, -186.5570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-193.2864, -190.6135, -193.2731, -189.6003, -186.4142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-192.8568, -190.7787, -192.7714, -189.2043, -186.2783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-192.5496, -190.9453, -192.3432, -188.7817, -186.1901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-192.3565, -191.0970, -191.9534, -188.3382, -186.1310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.1319, -191.1836, -191.4572, -187.7783, -186.0162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-191.8101, -191.2453, -190.8946, -187.1855, -185.8510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-191.8184, -191.3221, -190.6180, -186.8038, -185.8209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.0565, -191.3399, -190.6204, -186.6906, -185.8370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-192.3419, -191.3705, -190.8832, -186.8165, -185.9078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-192.6362, -191.5016, -190.9548, -186.6505, -186.0014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-193.0880, -191.5931, -191.1915, -186.6138, -186.1132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-193.0936, -191.6953, -191.3281, -186.6439, -186.1280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-193.3867, -191.7249, -191.5966, -186.7058, -186.2046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-193.7780, -191.8160, -191.9530, -186.8198, -186.3428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-194.2375, -191.7992, -192.1927, -186.7998, -186.4384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-194.5602, -191.7131, -192.3270, -186.8522, -186.4651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-194.7019, -191.6232, -192.4653, -186.9497, -186.4603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-194.4663, -191.5318, -192.3595, -186.8802, -186.3760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-193.7655, -191.3906, -192.1221, -186.8357, -186.1683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-193.0635, -191.3438, -191.8926, -186.7957, -186.0172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-192.3039, -191.3478, -191.3990, -186.5181, -185.8518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-191.4879, -191.3262, -190.8733, -186.2539, -185.6657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-190.5235, -191.3373, -190.2834, -185.9618, -185.4696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-189.8798, -191.4023, -190.1042, -186.0422, -185.4136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-189.1318, -191.4525, -190.0002, -186.2749, -185.3139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.6533, -191.5202, -189.9465, -186.4146, -185.2831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.3948, -191.8076, -190.1109, -186.5784, -185.4295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-188.3954, -192.0717, -190.4157, -186.7726, -185.6377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-188.3814, -192.4163, -190.8727, -187.0592, -185.8908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-188.5548, -192.7730, -191.3702, -187.2641, -186.1953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-189.0024, -193.0570, -191.9774, -187.4903, -186.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.7822, -193.3115, -192.7591, -187.7263, -186.9570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-190.6242, -193.5031, -193.4993, -187.9562, -187.3874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-191.7268, -193.6328, -194.2579, -188.1261, -187.8930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.4987, -193.6909, -194.8071, -188.2866, -188.2507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-193.3546, -193.7873, -195.2818, -188.3563, -188.6239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-193.8781, -193.9399, -195.3694, -188.1400, -188.8624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-194.2840, -194.0310, -195.3316, -187.8589, -189.0310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-194.4366, -194.1066, -195.1905, -187.5636, -189.0897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-194.3638, -194.0671, -195.0998, -187.4050, -189.0053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-193.6084, -193.9749, -194.7272, -187.2239, -188.6723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-192.9750, -193.9391, -194.4371, -187.0816, -188.3903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-192.2021, -193.9971, -193.9056, -186.7397, -188.1063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-191.2654, -194.0613, -193.0709, -186.2083, -187.7622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-190.8075, -194.0333, -192.4657, -185.7144, -187.5236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-190.1835, -193.9080, -191.8155, -185.3231, -187.2220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.5549, -193.7949, -191.2437, -185.0528, -186.9860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-189.2023, -193.5529, -190.9501, -185.0356, -186.7654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.9729, -193.2798, -190.8126, -185.1768, -186.5809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-188.7814, -193.0179, -190.8491, -185.4856, -186.4485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-188.4906, -192.7487, -190.5113, -185.4102, -186.2845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.5087, -192.5493, -190.4235, -185.3492, -186.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-188.7279, -192.4249, -190.5109, -185.3487, -186.2550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-189.2623, -192.2998, -190.8803, -185.4669, -186.3395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.7965, -192.0842, -191.3591, -185.7958, -186.3748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-190.5395, -191.7095, -192.0058, -186.2501, -186.3969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-191.1030, -191.4530, -192.6614, -186.8222, -186.4378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-191.6949, -191.2406, -193.3386, -187.3687, -186.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-192.1007, -191.0519, -193.8273, -187.7827, -186.6148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-192.4740, -190.8886, -194.2306, -188.0707, -186.6797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-193.0697, -190.7971, -194.8018, -188.4046, -186.8741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.8736, -190.7304, -194.7439, -188.3871, -186.8005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-192.7768, -190.6827, -194.6050, -188.2565, -186.7396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.2556, -190.5455, -193.8298, -187.6515, -186.4210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-191.7654, -190.4073, -192.6799, -186.6564, -186.0900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-191.4925, -190.3001, -191.7473, -185.7462, -185.8672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-191.3548, -190.2084, -190.9369, -184.8642, -185.6991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-191.1441, -190.1358, -190.0099, -183.9125, -185.4981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-190.6815, -190.1062, -189.3070, -183.3273, -185.3709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.1112, -190.1505, -188.6645, -182.8700, -185.3049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-189.7512, -190.2739, -188.4896, -182.7517, -185.3375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-189.4022, -190.3167, -188.6786, -183.0984, -185.3502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.1992, -190.4249, -189.0873, -183.6800, -185.4256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-189.1920, -190.7303, -189.9296, -184.5727, -185.6556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-188.9927, -191.1380, -190.7289, -185.4508, -185.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-188.8755, -191.6318, -191.5233, -186.2423, -186.2344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-188.9965, -192.0418, -192.3590, -186.8825, -186.5809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-189.2213, -192.3935, -193.1964, -187.4934, -186.9532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-189.5147, -192.5256, -194.0032, -188.1262, -187.2319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-189.8065, -192.6414, -194.5423, -188.4785, -187.4727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.3020, -192.6425, -195.1006, -188.7837, -187.7194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.9423, -192.5734, -195.6281, -188.9895, -187.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.7106, -192.4900, -196.0915, -189.0114, -188.2265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-192.2822, -192.4643, -196.2729, -188.8998, -188.3871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-192.3809, -192.5613, -196.0261, -188.5106, -188.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-192.4214, -192.6955, -195.8153, -188.2067, -188.4485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-192.4319, -192.8840, -195.3342, -187.6067, -188.4332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-192.3289, -193.1275, -194.7296, -186.8815, -188.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-191.7097, -193.3149, -194.0498, -186.3547, -188.1892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-190.7700, -193.4074, -193.2908, -185.9903, -187.8537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-190.0121, -193.4928, -192.6914, -185.7652, -187.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-189.5576, -193.5106, -192.2730, -185.6358, -187.4919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-189.4811, -193.4471, -192.0032, -185.4972, -187.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-189.5019, -193.3621, -191.8068, -185.3530, -187.3040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-189.4195, -193.2231, -191.5907, -185.3151, -187.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-189.4893, -193.0413, -191.4775, -185.3471, -187.0284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-189.3555, -192.7680, -191.3704, -185.5373, -186.8115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-189.5346, -192.5473, -191.5434, -185.7955, -186.7424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.7661, -192.3853, -191.9381, -186.2014, -186.7567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-189.9309, -192.2792, -192.1294, -186.3896, -186.7472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.2637, -192.2068, -192.3379, -186.4563, -186.7660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.9294, -192.1327, -192.5343, -186.3332, -186.8539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-191.3378, -192.0647, -192.4602, -185.9947, -186.8033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-191.4304, -192.0076, -192.3485, -185.7805, -186.7116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-191.2618, -191.9851, -191.9442, -185.3505, -186.5408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-191.1294, -191.9748, -191.5551, -184.9131, -186.3625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-190.6847, -191.8349, -191.0240, -184.5523, -186.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-190.4680, -191.5888, -190.5801, -184.2345, -185.7518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-190.3951, -191.3972, -190.1847, -183.8646, -185.5425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-190.1896, -191.1279, -189.9114, -183.7161, -185.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-190.4554, -190.9036, -189.9884, -183.7106, -185.2703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-190.3975, -190.6917, -189.9625, -183.7466, -185.1555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-190.1907, -190.4554, -190.0568, -184.0238, -185.0434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-190.1669, -190.2997, -190.1902, -184.2352, -185.0016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-190.0609, -190.2033, -190.3269, -184.4584, -184.9868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.1133, -190.0796, -190.5521, -184.7183, -184.9975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-190.3607, -189.9071, -190.8897, -185.0706, -185.0251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-190.2873, -189.6690, -190.9733, -185.3106, -184.9045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-190.2599, -189.5455, -191.1218, -185.5572, -184.8416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-190.2974, -189.4616, -191.0739, -185.5226, -184.7745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-190.4540, -189.3674, -191.0500, -185.3842, -184.7451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-190.5104, -189.3155, -190.9605, -185.2371, -184.7190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-190.7965, -189.2505, -191.0274, -185.1503, -184.7374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-190.8200, -189.0956, -190.8654, -184.9627, -184.6225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-190.7553, -189.0066, -190.5523, -184.6074, -184.4737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-190.4680, -188.9362, -190.3660, -184.4827, -184.3493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-190.5113, -188.8295, -190.3034, -184.3144, -184.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-190.6764, -188.8242, -190.2364, -184.0277, -184.2427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-190.4139, -188.8618, -190.1394, -183.9388, -184.2071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-190.3803, -188.9739, -190.1346, -183.8217, -184.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-190.1787, -189.1105, -190.3140, -184.0795, -184.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-190.2972, -189.3047, -190.6963, -184.4088, -184.5698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-190.1840, -189.4711, -191.1575, -184.9612, -184.7317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.3697, -189.5903, -191.7921, -185.5719, -184.9396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-190.3411, -189.6817, -192.2832, -186.0999, -185.0438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-190.4241, -189.7576, -192.7029, -186.4852, -185.1667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-190.2784, -189.8702, -192.9161, -186.7788, -185.2551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-190.1011, -189.9435, -192.8668, -186.8114, -185.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.3779, -189.9763, -193.0131, -186.8762, -185.3835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-190.5387, -190.0842, -192.9215, -186.6671, -185.4669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-190.8340, -190.0566, -192.8659, -186.4796, -185.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-191.2229, -190.1038, -192.6310, -186.0360, -185.5029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-191.5728, -190.2028, -192.1364, -185.3566, -185.4659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-191.9925, -190.3057, -191.7398, -184.7973, -185.4311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-192.5635, -190.4398, -191.3987, -184.2148, -185.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0619, device='cuda:0', dtype=torch.float64)
tensor([-192.3951, -190.4324, -190.9562, -183.7935, -185.2763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.7646, -190.2621, -190.4865, -183.5705, -184.9538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-190.5263, -189.9636, -190.0300, -183.6380, -184.5599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-189.6090, -189.7298, -189.5913, -183.6499, -184.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-188.6989, -189.5920, -189.3560, -183.9720, -184.1322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-187.8351, -189.5196, -189.0504, -184.2808, -184.0298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-187.4907, -189.5424, -189.1282, -184.7219, -184.0792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-187.3553, -189.6038, -189.5214, -185.4174, -184.1846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-187.1165, -189.7337, -189.9470, -186.1286, -184.2979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-187.1217, -189.7564, -190.3884, -186.6732, -184.3877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-187.3423, -189.7519, -190.8578, -187.1001, -184.5089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-187.7557, -189.7438, -191.3613, -187.4383, -184.6610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-188.3888, -189.6682, -191.9905, -187.8199, -184.8608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-189.0673, -189.5571, -192.5435, -188.0688, -185.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-189.6360, -189.4744, -192.8311, -187.9733, -185.1404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-190.2300, -189.4112, -193.1287, -187.9010, -185.2742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-190.8421, -189.3742, -193.2756, -187.5675, -185.3713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-191.5975, -189.4675, -193.5285, -187.1532, -185.5686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-192.0303, -189.6171, -193.3384, -186.4083, -185.6597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-192.3290, -189.7083, -193.0090, -185.6751, -185.6532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-192.1153, -189.6813, -192.6873, -185.3299, -185.5086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-191.6974, -189.5821, -192.1008, -184.7649, -185.2684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-191.5830, -189.5353, -191.6380, -184.1213, -185.1164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.3861, -189.4294, -191.1144, -183.4989, -184.9277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-191.0062, -189.2676, -190.9474, -183.5441, -184.7529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-190.5781, -189.2392, -190.9250, -183.7490, -184.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-190.6722, -189.1821, -191.1553, -184.0147, -184.6789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.5120, -189.1893, -191.3912, -184.4184, -184.6712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-190.1149, -189.2358, -191.3561, -184.5923, -184.6039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-189.7010, -189.2336, -191.2602, -184.7276, -184.5391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-189.7679, -189.2841, -191.5194, -184.9258, -184.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-189.7824, -189.2992, -191.6460, -185.0195, -184.6885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-189.7881, -189.3231, -191.7742, -185.0701, -184.7343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.7573, -189.3803, -191.9194, -185.1735, -184.8009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.7200, -189.4390, -192.0230, -185.1903, -184.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-189.2499, -189.4399, -191.6285, -184.8974, -184.7912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-188.7939, -189.4159, -191.2693, -184.6124, -184.7122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-188.2335, -189.3519, -190.9219, -184.4836, -184.5946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-187.8323, -189.2519, -190.5432, -184.1984, -184.4846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.5917, -189.1999, -190.1954, -183.8001, -184.4026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-187.7103, -189.2302, -190.4044, -183.8295, -184.4701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.6600, -189.2377, -190.5791, -184.0428, -184.5033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-187.5273, -189.2620, -190.7976, -184.4304, -184.5310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-187.3823, -189.2709, -191.0033, -184.8167, -184.5393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.6289, -189.2773, -191.3830, -185.1102, -184.6318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-188.0603, -189.2223, -191.8998, -185.4290, -184.7299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-188.6429, -189.2603, -192.2623, -185.3893, -184.8752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-189.5754, -189.3476, -193.0261, -185.6711, -185.1776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-190.2735, -189.3914, -193.7229, -186.0922, -185.4535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-190.7506, -189.4671, -194.3285, -186.5611, -185.7037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-191.1177, -189.5269, -194.7075, -186.8385, -185.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-191.2101, -189.5627, -194.9648, -187.1549, -186.0453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-191.1633, -189.6600, -195.1068, -187.4035, -186.1550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-190.8453, -189.7595, -194.9795, -187.4663, -186.1672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-190.6223, -189.9191, -194.6763, -187.2156, -186.1780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-190.4520, -190.0033, -194.4569, -187.0595, -186.1808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-190.3710, -190.1668, -194.1613, -186.6520, -186.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-190.1793, -190.3441, -193.8972, -186.2928, -186.2306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-190.0473, -190.4214, -193.7402, -186.1089, -186.2388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-189.9683, -190.5162, -193.5031, -185.7301, -186.2263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-189.8480, -190.6518, -193.2988, -185.4400, -186.2126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-189.6073, -190.7404, -192.9995, -185.1203, -186.1376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-189.8238, -190.8321, -193.2131, -185.2213, -186.1847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.9765, -190.8867, -193.3473, -185.3248, -186.1758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-190.2556, -190.9702, -193.2957, -184.9961, -186.1454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-190.6751, -190.9612, -193.3755, -184.8181, -186.1064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-191.0335, -191.0672, -193.2870, -184.4456, -186.0585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.8644, -191.0461, -192.9945, -184.1755, -185.9035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-190.1551, -190.8672, -192.5348, -184.0378, -185.6027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-189.2278, -190.6263, -191.9862, -184.0205, -185.2816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-188.3514, -190.3660, -191.3685, -183.9665, -184.9487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-187.8158, -190.2664, -191.0103, -183.9626, -184.7720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-187.4530, -190.2981, -190.7104, -183.8705, -184.7280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-187.5323, -190.3647, -190.7428, -183.8970, -184.7778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-187.6998, -190.6334, -190.9345, -184.0360, -184.9372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-187.8448, -190.9893, -191.2455, -184.2548, -185.1302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-187.8730, -191.2837, -191.4572, -184.4598, -185.2921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-188.0556, -191.4793, -191.5458, -184.4129, -185.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-188.2700, -191.6163, -191.5677, -184.2932, -185.5302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-188.6910, -191.7886, -191.6791, -184.1608, -185.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-189.2643, -191.9136, -191.8115, -184.0152, -185.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-190.1898, -192.0194, -192.0253, -183.8848, -186.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-190.5979, -192.0479, -192.2619, -184.1113, -186.2534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-190.6033, -191.9775, -192.4386, -184.4741, -186.2604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-190.3318, -191.8991, -192.7852, -185.1783, -186.2324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-190.1926, -191.8465, -193.0677, -185.7065, -186.2195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-190.0323, -191.7718, -193.0833, -185.9310, -186.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-189.7320, -191.6276, -192.8990, -186.0255, -185.9809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-189.5758, -191.4399, -192.8207, -186.1925, -185.8496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.6282, -191.2839, -192.7806, -186.2570, -185.8013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-189.6276, -191.1137, -192.6849, -186.2324, -185.7053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-189.6518, -190.9396, -192.5568, -186.1909, -185.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-189.5482, -190.7720, -192.2426, -185.9316, -185.4432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-189.5809, -190.5944, -191.8040, -185.4215, -185.3030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-189.3234, -190.4652, -191.3596, -185.0108, -185.1256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-188.9157, -190.3436, -190.6988, -184.3961, -184.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-188.5373, -190.2952, -189.9128, -183.5246, -184.6777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-187.9865, -190.1538, -189.0339, -182.6958, -184.4116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-187.2420, -190.0623, -188.1049, -181.8606, -184.1656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-187.2974, -190.1592, -187.9213, -181.4154, -184.1662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.8430, -190.3302, -188.3497, -181.3562, -184.2708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-188.6783, -190.4515, -189.0107, -181.5341, -184.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.8237, -190.6790, -189.9763, -181.9599, -184.7609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-190.7870, -190.7968, -190.8217, -182.4487, -185.0497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-191.6210, -190.7535, -191.9036, -183.3824, -185.3460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-191.9711, -190.6504, -193.0575, -184.5522, -185.5473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-191.9608, -190.5253, -194.0511, -185.5917, -185.6655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.4683, -190.3117, -194.9613, -186.7176, -185.6319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-190.9118, -190.2084, -195.5266, -187.5482, -185.5862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-190.2988, -190.1310, -195.7069, -188.0540, -185.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-189.5277, -190.0877, -195.4273, -188.0791, -185.3119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-188.9668, -190.0264, -195.1501, -188.0404, -185.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-188.3653, -189.9476, -194.6363, -187.7467, -184.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-187.8614, -189.8620, -194.0626, -187.2663, -184.6662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-187.7687, -189.7694, -193.6781, -186.7669, -184.5034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-187.7472, -189.7323, -193.2358, -186.1847, -184.3526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-187.8019, -189.7675, -192.7715, -185.5286, -184.2576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-187.6157, -189.8357, -192.4219, -185.1322, -184.1908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-187.8202, -189.8583, -192.2075, -184.7009, -184.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-187.9985, -189.9093, -192.0778, -184.4422, -184.2012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-187.7525, -189.9280, -191.8178, -184.3148, -184.1244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-187.5521, -189.8865, -191.6526, -184.3295, -184.0442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-187.4622, -189.7720, -191.6219, -184.5051, -183.9780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.1968, -189.7209, -191.4643, -184.6078, -183.9100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.9790, -189.6004, -191.3309, -184.7508, -183.8489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-187.0264, -189.4888, -191.3131, -184.8186, -183.8258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-186.9469, -189.4509, -191.0902, -184.6620, -183.7729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-187.0985, -189.4715, -190.7491, -184.0752, -183.7270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-187.0573, -189.5051, -190.4661, -183.7662, -183.6912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-187.0571, -189.5846, -190.2603, -183.5471, -183.7264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-187.5148, -189.6934, -190.2481, -183.2126, -183.8296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-188.3066, -189.7679, -190.3838, -182.8785, -183.9769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-189.2145, -189.7496, -190.6594, -182.7899, -184.1296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-190.0178, -189.7646, -191.3604, -183.2534, -184.3604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-190.7350, -189.7915, -191.8720, -183.5351, -184.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-191.1787, -189.7963, -192.1535, -183.6427, -184.7159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-191.5513, -189.7678, -192.4187, -183.8538, -184.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-191.6145, -189.6425, -192.8290, -184.3898, -184.9505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.2195, -189.4813, -192.9649, -184.8126, -184.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-190.7739, -189.3191, -192.9403, -185.0247, -184.8721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-190.1501, -189.2495, -192.7943, -185.1260, -184.7979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-189.5172, -189.1971, -192.7955, -185.3877, -184.7386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-189.2128, -189.2109, -192.9235, -185.5886, -184.7540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-189.4060, -189.1819, -193.2976, -185.8116, -184.8514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-189.5272, -189.1350, -193.4801, -185.8545, -184.9205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-189.3554, -189.1331, -193.3172, -185.6620, -184.9087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-189.3278, -189.1046, -193.2180, -185.4936, -184.9107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-189.1841, -189.0540, -192.8954, -185.1283, -184.8538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-188.8788, -189.0565, -192.4182, -184.6599, -184.7650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-188.7076, -189.0026, -192.0862, -184.2933, -184.6691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-188.5184, -188.8957, -191.7142, -183.9016, -184.5429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-188.3079, -188.8070, -191.3525, -183.5587, -184.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-188.2650, -188.6940, -191.1675, -183.3832, -184.3270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-188.0859, -188.4647, -190.8581, -183.1647, -184.1107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.8370, -188.2139, -190.5358, -182.9657, -183.9050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.8392, -188.0815, -190.2255, -182.6056, -183.7942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-187.7673, -187.9385, -190.0746, -182.4592, -183.6957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.8489, -187.9402, -190.0537, -182.3288, -183.7175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-188.2128, -187.9995, -190.2668, -182.2958, -183.8361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-188.2662, -187.9578, -190.3414, -182.3236, -183.8302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-188.3526, -187.8078, -190.4461, -182.4064, -183.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-188.3903, -187.5952, -190.4868, -182.5023, -183.6110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-188.2879, -187.3953, -190.7484, -182.8910, -183.4687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-188.3503, -187.2334, -191.1457, -183.3599, -183.3881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-188.4848, -187.0904, -191.5009, -183.7599, -183.3556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-188.7935, -187.0112, -191.8105, -184.0341, -183.3855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-188.6252, -186.9436, -191.9346, -184.3127, -183.3393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-188.3315, -186.9440, -191.7135, -184.2250, -183.2394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-187.9818, -186.8202, -191.2766, -183.9967, -183.0580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-188.1071, -186.7960, -190.8328, -183.5400, -182.9722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-188.3458, -186.8035, -190.6535, -183.2865, -182.9692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-189.0362, -186.9132, -190.5361, -182.8341, -183.0374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-189.8981, -187.0681, -190.6436, -182.5728, -183.1600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-190.6787, -187.2078, -190.8577, -182.5265, -183.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-190.7751, -187.1004, -191.3120, -183.1096, -183.3450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-190.3212, -186.8318, -191.7655, -183.9602, -183.3200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-189.1434, -186.5088, -191.7833, -184.7260, -183.1135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-188.0389, -186.1913, -191.5894, -185.3743, -182.8672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-186.8703, -186.0222, -191.2322, -185.9480, -182.6401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-186.4058, -185.8674, -191.0963, -186.3046, -182.5382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-186.0694, -185.7835, -191.0667, -186.5322, -182.4744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-186.0834, -185.8202, -191.3687, -186.8061, -182.5528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-186.0852, -185.8450, -191.6169, -186.9862, -182.6238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-186.1702, -185.7881, -191.7409, -186.9834, -182.6447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-186.2968, -185.6500, -191.7292, -186.8570, -182.6052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-186.5246, -185.4900, -191.6717, -186.5900, -182.5785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-186.6826, -185.3926, -191.6003, -186.3587, -182.5326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-186.9386, -185.3436, -191.4352, -185.8449, -182.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-187.3938, -185.4130, -191.3128, -185.1473, -182.5349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-187.9379, -185.4417, -191.3921, -184.6684, -182.6056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-188.3580, -185.4203, -191.2659, -184.0667, -182.6149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-188.8502, -185.3777, -191.2246, -183.6300, -182.6386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-189.1381, -185.3220, -190.9765, -183.0584, -182.5965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-189.0759, -185.1527, -190.7424, -182.7490, -182.4665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-188.8969, -184.9733, -190.4403, -182.4745, -182.3141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-188.4776, -184.8301, -190.0876, -182.2607, -182.1712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-188.2249, -184.7887, -189.9349, -182.1493, -182.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.9221, -184.6625, -189.9740, -182.2821, -182.0459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-187.5750, -184.5855, -190.0030, -182.4455, -181.9628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-186.7742, -184.4253, -189.8642, -182.7230, -181.8038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-185.8617, -184.3326, -189.7481, -183.1625, -181.6547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-185.1952, -184.3588, -189.8443, -183.6134, -181.6080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-185.3738, -184.4673, -190.2764, -183.9220, -181.7130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-185.4462, -184.5117, -190.6238, -184.1790, -181.7757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-185.8793, -184.6826, -191.0678, -184.3630, -181.9686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-186.3723, -184.8499, -191.4814, -184.4861, -182.1452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-186.7596, -185.0152, -191.5112, -184.3235, -182.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-186.7480, -185.1914, -191.2566, -183.9853, -182.3287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.8909, -185.4799, -191.0122, -183.4911, -182.4275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-186.8453, -185.7369, -190.6836, -183.0410, -182.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.7368, -185.9721, -190.3645, -182.6587, -182.4896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-186.7459, -186.2108, -190.0973, -182.2550, -182.5271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-186.9805, -186.4429, -190.0891, -182.0711, -182.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.0507, -186.5798, -189.8700, -181.7605, -182.5895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-187.3472, -186.7109, -189.7026, -181.4576, -182.6086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-188.2628, -186.8047, -189.6672, -181.0328, -182.7497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-189.1633, -186.8308, -189.7444, -180.8732, -182.8115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-189.8536, -186.7869, -189.9180, -180.9539, -182.8598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-190.9752, -186.7935, -190.1733, -180.9780, -183.0091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-191.6838, -186.7672, -190.0994, -180.8171, -183.0557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-192.2596, -186.7024, -190.3951, -181.1383, -183.1093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-192.0285, -186.4197, -190.6152, -181.5899, -183.0133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-190.9389, -185.9900, -190.8125, -182.3723, -182.7766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-190.0138, -185.6343, -191.1180, -183.2879, -182.5645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-189.3156, -185.3314, -191.1612, -183.8118, -182.3525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-188.4869, -185.0987, -191.2600, -184.4668, -182.1311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-187.8858, -185.0192, -191.3921, -185.0290, -181.9908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-187.2943, -184.9983, -191.3314, -185.4276, -181.9162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-186.9088, -184.9908, -191.2821, -185.7413, -181.8634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-186.4290, -184.8879, -190.8305, -185.5990, -181.6989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-186.1289, -184.8595, -190.6248, -185.5957, -181.6523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-185.8517, -184.7711, -190.1996, -185.1649, -181.5232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-185.8036, -184.6747, -189.9626, -184.7967, -181.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-185.8268, -184.6083, -189.6477, -184.1840, -181.3172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-186.1465, -184.6585, -189.5421, -183.5567, -181.3341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-186.5772, -184.7560, -189.4522, -182.9128, -181.4301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-187.2746, -184.8689, -189.4463, -182.2919, -181.5981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-188.3317, -185.0145, -189.6382, -181.8311, -181.8333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-189.7362, -185.2732, -189.8560, -181.3967, -182.1830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-191.3703, -185.6453, -190.4133, -181.4571, -182.6854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-192.7116, -186.0629, -190.8428, -181.5632, -183.1177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-193.0283, -186.3533, -190.7498, -181.3139, -183.2212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-192.5708, -186.4061, -190.5259, -181.1424, -183.1183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-191.5634, -186.3269, -190.1148, -180.9239, -182.8779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-190.3480, -186.1353, -189.5527, -180.5830, -182.5491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-188.5311, -185.7983, -189.0091, -180.5365, -182.1571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-187.0908, -185.5994, -188.9788, -181.0470, -181.9647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-186.1279, -185.5075, -189.2768, -181.8629, -181.9614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-185.2656, -185.4652, -189.2750, -182.3725, -181.9579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-184.7759, -185.4868, -189.3758, -182.7708, -182.0296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-184.5240, -185.5576, -189.5626, -183.1180, -182.1300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-184.6127, -185.7009, -189.8754, -183.3297, -182.2976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-185.1612, -185.6777, -190.1441, -183.2106, -182.4121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-185.5970, -185.6228, -190.1962, -182.8911, -182.4594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-186.5311, -185.6042, -190.6278, -182.7143, -182.6077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-188.0215, -185.6171, -191.2302, -182.5328, -182.8700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-189.1821, -185.6336, -191.5433, -182.3375, -183.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-189.8940, -185.5957, -191.7521, -182.2659, -183.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-189.3931, -185.3883, -191.8580, -182.5177, -182.8735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-188.6712, -185.0853, -191.7488, -182.6488, -182.6062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-188.2395, -184.7787, -191.5958, -182.6326, -182.3688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-187.6126, -184.4375, -191.3153, -182.5839, -182.0877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.9547, -184.1055, -190.9660, -182.4983, -181.8345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-186.6015, -183.7885, -190.8115, -182.5325, -181.6829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-186.3816, -183.5891, -190.6700, -182.5227, -181.5737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.2355, -183.5233, -190.5902, -182.4207, -181.5471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-186.3412, -183.5470, -190.6028, -182.2425, -181.5953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-186.8006, -183.6962, -190.8957, -182.1386, -181.7544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-187.0323, -183.7917, -191.0876, -182.0678, -181.8595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-187.2366, -183.8466, -191.4398, -182.2427, -181.9650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-187.1507, -183.8847, -191.5915, -182.3223, -181.9929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-187.2544, -183.8783, -191.7170, -182.3065, -182.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-186.9984, -183.8928, -191.6106, -182.2306, -181.9616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.8412, -183.8262, -191.4694, -182.0560, -181.8828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.4169, -183.7895, -191.0741, -181.6726, -181.7280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-186.3270, -183.8087, -190.6907, -181.1437, -181.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-186.1864, -183.8815, -190.1992, -180.4977, -181.5436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-186.0033, -183.9084, -189.8623, -180.1189, -181.4740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-185.5893, -183.7810, -189.5519, -179.9904, -181.3620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-185.2717, -183.7030, -189.5392, -180.1858, -181.3205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-185.3026, -183.7108, -189.7593, -180.4302, -181.3503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-185.6283, -183.7839, -190.2877, -180.9347, -181.4743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-186.4138, -183.8855, -190.9229, -181.2642, -181.6965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-186.9005, -183.9485, -191.4054, -181.5996, -181.8922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-187.3700, -183.9744, -192.0722, -182.1416, -182.0646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-187.4123, -183.9830, -192.3042, -182.3600, -182.0952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-187.3639, -183.9887, -192.1652, -182.1647, -182.0246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-187.2906, -183.8891, -191.9348, -181.9723, -181.8820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-186.9218, -183.7371, -191.3960, -181.4989, -181.6163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-186.5974, -183.5914, -190.7432, -180.9039, -181.3156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.5830, -183.5181, -190.3622, -180.4710, -181.1695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-186.9353, -183.4563, -190.0136, -179.8919, -181.0868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.9680, -183.4370, -189.6393, -179.4529, -180.9876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-186.8145, -183.4047, -189.3452, -179.1624, -180.8622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-186.0918, -183.3736, -189.0045, -179.0457, -180.7178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-185.5297, -183.4272, -188.8337, -179.0389, -180.6802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-185.4082, -183.5639, -189.3257, -179.6033, -180.8070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-185.1261, -183.7483, -189.6805, -180.0789, -180.9257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-184.7107, -183.8314, -189.8824, -180.4979, -180.9825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-184.3486, -184.0439, -190.1330, -180.9066, -181.1188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-184.0037, -184.4204, -190.1949, -180.9802, -181.2986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-184.0646, -184.7091, -190.3123, -180.9632, -181.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-184.3656, -184.9924, -190.5874, -180.9960, -181.6612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-184.9510, -185.1595, -190.8293, -180.9115, -181.7963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-185.4463, -185.2869, -191.0846, -180.9518, -181.9136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-185.9907, -185.3452, -191.2241, -180.9000, -181.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-186.1814, -185.3257, -191.1471, -180.8006, -181.9630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-186.1101, -185.2605, -190.9637, -180.7283, -181.8655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-185.9173, -185.2362, -190.8362, -180.7625, -181.8272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-185.6492, -185.1440, -190.7887, -180.9831, -181.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-185.6627, -185.0566, -190.6217, -180.8973, -181.6620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-185.7830, -185.0109, -190.6041, -180.9354, -181.6201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-186.2039, -184.9091, -190.7237, -181.0815, -181.6048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-186.8259, -184.8240, -190.9213, -181.2185, -181.6602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-187.1283, -184.7689, -190.9365, -181.2159, -181.6321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-187.0344, -184.6618, -190.6089, -180.9274, -181.4671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-186.8212, -184.5101, -190.2486, -180.6523, -181.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-186.5910, -184.3823, -189.7903, -180.2531, -181.0840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-186.4097, -184.2549, -189.3114, -179.8203, -180.8937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-186.2980, -184.1794, -189.0807, -179.6788, -180.7869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-186.4205, -184.0967, -189.1417, -179.8238, -180.7706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-185.9585, -183.9708, -188.8949, -179.8779, -180.6574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-185.4347, -183.8104, -188.3721, -179.6877, -180.4663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-185.1193, -183.6343, -187.7670, -179.2784, -180.2604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-184.8266, -183.4401, -187.0186, -178.7470, -180.0298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-184.7154, -183.3005, -186.3350, -178.2377, -179.8719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-184.5172, -183.2721, -185.6980, -177.7748, -179.8017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-184.5857, -183.2145, -185.5564, -177.6953, -179.7864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-184.8634, -183.1272, -185.8461, -177.9409, -179.8033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-185.2072, -183.0485, -186.4292, -178.4600, -179.8529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-185.5959, -182.9816, -187.1597, -179.1050, -179.9554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-185.7661, -182.9033, -187.6356, -179.5688, -179.9869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-185.9284, -182.8869, -188.4321, -180.3813, -180.1149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-186.5317, -183.0004, -189.4322, -181.2071, -180.4036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-187.1522, -183.2959, -190.6694, -182.2452, -180.8419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-187.9078, -183.7152, -191.8424, -183.1730, -181.3236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-188.1808, -183.9793, -192.4009, -183.5829, -181.5765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-187.9397, -184.2220, -192.5611, -183.8225, -181.7072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-187.4474, -184.5499, -192.4054, -183.7815, -181.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-186.6530, -184.7104, -191.9490, -183.6243, -181.6564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-186.0819, -184.7891, -191.5234, -183.4223, -181.5297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-185.3505, -184.7161, -190.9394, -183.2013, -181.3388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-184.6459, -184.6283, -190.3460, -182.9691, -181.1179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-184.0201, -184.5980, -189.7794, -182.6780, -180.9572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-183.7491, -184.5733, -189.4052, -182.3307, -180.8490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-183.9397, -184.5760, -189.4253, -182.1300, -180.8181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-184.5821, -184.5888, -189.7419, -181.8198, -180.8683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-184.9084, -184.5618, -189.6957, -181.2870, -180.8339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-185.3192, -184.5356, -189.6497, -180.7271, -180.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-186.1279, -184.6628, -189.8369, -180.2259, -180.9289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-187.3347, -184.8161, -190.1054, -179.7222, -181.0990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-188.2622, -184.9599, -190.2334, -179.3421, -181.2179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-188.6204, -185.0661, -190.1656, -179.0408, -181.2195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-188.1298, -184.9355, -189.8741, -178.8885, -181.0533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-187.3965, -184.7787, -189.5046, -178.7229, -180.8185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-186.6475, -184.5806, -189.2310, -178.7083, -180.5962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-185.5482, -184.3838, -188.8360, -178.7895, -180.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-184.6220, -184.2815, -188.7063, -179.1650, -180.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-183.9716, -184.2205, -188.4847, -179.3607, -180.1024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-183.5325, -184.1617, -188.4273, -179.6209, -180.0575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-183.1460, -184.0708, -188.2079, -179.6282, -179.9710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-183.4447, -184.0637, -188.1633, -179.3613, -179.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-183.9022, -184.1734, -188.2491, -179.1100, -180.0148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-184.7549, -184.2129, -188.4215, -178.8467, -180.0758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-185.7026, -184.1847, -188.7543, -178.8743, -180.1445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-186.6326, -184.2432, -188.9233, -178.7330, -180.2028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-187.9917, -184.3969, -189.4341, -178.8912, -180.4312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-188.8423, -184.4498, -189.8577, -179.1867, -180.5867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-188.9458, -184.3967, -190.2022, -179.6393, -180.6493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-188.8057, -184.2509, -190.4269, -180.0573, -180.6207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-187.9714, -183.9390, -190.4752, -180.4606, -180.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-187.4367, -183.7359, -190.5686, -180.8295, -180.3401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-186.7393, -183.4606, -190.4640, -181.0803, -180.1744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-185.6017, -183.2000, -190.0239, -181.1681, -179.9456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.3079, -182.9758, -189.4010, -181.1403, -179.6976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-183.0863, -182.7366, -188.7046, -181.1465, -179.4762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-182.2657, -182.5514, -188.0852, -181.0248, -179.3155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-181.9214, -182.3759, -187.9373, -181.1238, -179.2434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-182.3200, -182.1986, -188.3955, -181.3982, -179.2297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-182.5404, -182.0723, -188.6256, -181.4231, -179.1851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-182.6919, -181.8717, -188.5615, -181.1560, -179.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-183.1820, -181.6086, -188.6072, -180.8321, -178.8694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-183.6105, -181.4277, -188.5417, -180.4776, -178.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-184.0704, -181.2164, -188.2603, -179.9486, -178.6290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-184.7104, -181.0546, -187.9098, -179.3230, -178.5374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-185.3370, -180.9512, -187.4913, -178.6378, -178.4767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-186.6502, -181.0528, -187.4056, -178.0302, -178.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-187.8848, -181.1840, -187.2499, -177.4742, -178.7538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-188.7337, -181.2503, -187.2894, -177.2512, -178.9170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-189.0167, -181.1293, -187.0783, -176.9523, -178.9704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-189.3810, -181.0664, -186.9128, -176.6402, -179.0559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-188.7527, -180.8633, -186.6053, -176.3844, -178.9787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-187.8252, -180.6164, -186.2699, -176.2200, -178.8470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-186.6013, -180.4067, -186.4397, -176.6418, -178.7542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-185.5850, -180.3264, -186.6794, -177.0983, -178.7102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-184.7701, -180.4030, -187.2197, -177.8856, -178.8275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-184.2507, -180.5774, -187.7697, -178.6020, -178.9470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-184.3025, -180.8651, -188.6378, -179.4612, -179.1748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.8209, -181.1193, -189.5533, -180.2264, -179.3851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-186.0015, -181.2931, -190.7388, -180.9601, -179.6630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-187.1351, -181.3951, -191.4876, -181.2705, -179.8417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-188.4316, -181.4844, -192.0460, -181.4045, -179.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-189.9845, -181.6118, -192.4883, -181.4201, -180.1065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-190.7640, -181.7715, -192.4239, -181.1591, -180.0910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-191.0677, -181.9061, -192.2468, -180.8469, -180.0186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-190.9414, -181.9773, -191.9800, -180.5085, -179.8558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-190.4225, -181.9393, -191.1304, -179.6265, -179.5272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-189.2237, -181.7984, -190.0349, -178.6562, -179.0928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-187.5119, -181.6058, -188.8346, -177.7472, -178.6067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-185.6249, -181.5342, -187.8917, -177.2663, -178.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-183.6300, -181.6244, -186.9310, -176.9397, -178.2092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-182.0227, -181.8943, -186.1899, -176.8643, -178.3031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-180.9195, -182.1697, -185.7985, -177.0308, -178.4634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-180.6142, -182.3333, -185.8542, -177.1345, -178.5459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-180.5017, -182.4190, -185.9822, -177.1727, -178.5613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-180.7238, -182.4328, -186.3240, -177.2283, -178.5500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-181.3948, -182.4007, -186.9639, -177.3799, -178.5347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-182.1883, -182.3625, -187.7298, -177.6338, -178.5734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-183.3152, -182.2477, -188.4858, -177.8053, -178.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-184.3802, -182.2605, -189.0658, -177.8898, -178.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-185.2979, -182.2983, -189.6666, -178.1201, -178.8560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.0451, -182.4347, -190.0846, -178.2576, -179.0360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-186.0872, -182.6599, -190.1536, -178.1524, -179.1779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-186.5615, -182.8802, -190.4189, -178.1985, -179.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-186.3587, -183.0500, -190.4527, -178.2126, -179.5059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-186.2287, -183.1638, -190.4282, -178.1252, -179.6522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-185.7714, -183.2557, -189.9276, -177.6289, -179.6713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-185.2255, -183.3192, -189.4125, -177.1597, -179.7113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-184.5322, -183.3184, -189.0048, -176.9587, -179.7188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-183.8431, -183.2057, -188.5848, -176.8644, -179.6661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-183.3005, -183.0068, -188.3033, -176.9964, -179.6182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-182.6459, -182.8351, -188.1109, -177.3456, -179.6001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-182.3801, -182.6765, -188.2601, -177.8696, -179.6228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-182.0299, -182.4474, -188.1811, -178.1011, -179.5833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-182.0065, -182.1683, -188.1679, -178.2298, -179.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-182.0257, -181.9324, -188.2467, -178.3796, -179.4501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-183.0888, -181.6530, -188.8639, -178.3789, -179.4000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-184.4492, -181.3366, -189.2021, -178.0364, -179.3270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-186.1659, -181.1998, -189.6631, -177.8996, -179.4021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-187.6171, -181.1475, -189.9184, -177.7596, -179.4739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-188.9723, -181.1604, -190.0519, -177.6231, -179.5808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-189.8805, -181.1344, -189.8805, -177.2959, -179.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-190.6502, -181.1338, -189.9067, -177.2227, -179.6618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-190.6967, -181.0167, -189.9132, -177.2246, -179.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-190.0463, -180.8653, -189.6075, -176.9660, -179.3729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-188.7461, -180.5731, -189.3128, -176.9150, -179.1149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-187.7559, -180.3811, -189.1824, -177.0585, -178.9342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-187.1171, -180.2358, -188.8773, -176.9382, -178.7821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-186.5372, -180.1157, -188.6847, -177.0239, -178.6913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-185.8502, -179.9568, -188.5207, -177.2323, -178.6002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-185.2435, -179.7956, -188.2593, -177.4040, -178.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-184.8347, -179.6359, -187.8629, -177.3292, -178.3577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-184.4695, -179.5090, -187.5639, -177.3802, -178.2777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-184.3424, -179.3584, -187.3454, -177.3379, -178.2241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-184.1758, -179.2554, -187.2710, -177.4727, -178.1725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-184.4859, -179.2022, -187.5866, -177.7721, -178.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-184.5044, -179.2072, -187.6518, -177.8273, -178.1644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-184.3820, -179.2000, -187.8266, -178.0272, -178.1406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-184.1105, -179.2374, -187.7225, -177.9103, -178.0834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-183.8292, -179.3076, -187.4494, -177.5436, -178.0015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-183.7701, -179.3155, -187.3573, -177.2817, -177.9497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-183.8560, -179.4508, -187.6360, -177.3243, -178.0407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-184.1510, -179.5578, -187.8101, -177.1173, -178.0936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-184.6644, -179.6684, -188.2827, -177.2069, -178.1580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-185.6090, -179.7212, -188.6955, -177.1880, -178.2506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-186.5599, -179.8305, -189.0009, -177.1060, -178.3888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-187.2220, -179.9028, -189.2438, -177.1034, -178.4953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-187.2130, -179.9099, -189.2083, -176.9403, -178.5019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-186.7380, -179.8684, -189.2187, -176.9195, -178.4451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-186.2011, -180.0094, -189.2733, -176.8837, -178.4528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-185.5065, -180.1446, -188.9823, -176.5385, -178.4322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-185.0986, -180.2406, -188.6569, -176.1420, -178.4143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-184.3838, -180.3272, -188.3441, -175.8570, -178.3567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-183.6780, -180.3499, -187.9555, -175.5501, -178.2775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-182.8322, -180.4156, -187.5739, -175.2888, -178.2204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-181.9176, -180.5816, -187.4860, -175.3731, -178.2387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-181.4768, -180.7427, -187.4540, -175.4100, -178.2668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-180.8938, -180.8788, -187.2143, -175.2663, -178.2509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-180.9016, -180.8630, -186.9325, -174.7682, -178.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-181.3398, -180.7980, -186.8498, -174.4004, -178.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-181.5456, -180.7631, -186.5538, -173.9225, -177.9420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-181.5733, -180.6995, -186.3104, -173.6058, -177.8324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-181.2823, -180.7191, -186.1157, -173.4368, -177.7792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-181.4829, -180.7664, -186.5059, -173.6901, -177.7886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-181.8433, -180.8868, -187.0863, -174.0796, -177.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-182.0391, -181.0711, -187.7075, -174.5640, -178.0313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-182.6947, -181.0622, -188.5543, -175.2172, -178.1628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-183.6687, -181.0837, -189.6743, -176.1054, -178.4195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-184.5171, -181.0146, -190.4678, -176.7075, -178.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-185.1165, -180.9348, -191.0853, -177.2497, -178.7560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-185.5662, -180.8109, -191.5609, -177.6851, -178.8562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-185.5936, -180.7032, -191.9370, -178.1221, -178.8971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0111, device='cuda:0', dtype=torch.float64)
tensor([-185.9001, -180.6268, -192.2588, -178.4049, -178.9492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-186.1933, -180.5250, -192.4514, -178.5646, -179.0014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0130, device='cuda:0', dtype=torch.float64)
tensor([-186.3760, -180.4885, -192.7621, -178.8275, -179.1000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-186.6359, -180.4597, -193.0853, -179.0424, -179.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-186.2572, -180.2755, -192.8486, -178.8704, -179.0544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-185.1581, -180.0493, -192.1413, -178.3857, -178.7586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-184.0894, -179.8094, -191.1425, -177.6654, -178.3834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-182.8574, -179.5912, -190.1829, -177.1020, -178.0553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-181.6615, -179.3440, -189.3582, -176.7572, -177.7927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0119, device='cuda:0', dtype=torch.float64)
tensor([-180.4711, -179.1468, -188.4681, -176.4176, -177.5984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-179.6541, -179.0053, -188.0422, -176.4161, -177.5379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-179.3203, -178.8251, -187.8697, -176.4111, -177.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-179.2006, -178.5001, -187.7588, -176.3759, -177.3214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-178.9892, -178.1177, -187.2777, -175.9414, -177.0856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-179.1597, -177.6971, -187.0302, -175.5510, -176.8498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-179.2152, -177.2728, -186.6550, -175.0623, -176.6288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-179.7091, -176.8764, -186.9432, -175.1373, -176.4466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-180.4728, -176.6437, -187.7012, -175.5979, -176.3817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-181.1170, -176.4703, -188.1587, -175.8494, -176.3280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-181.7093, -176.4026, -188.6212, -176.1078, -176.3613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-182.1424, -176.3791, -188.8063, -176.0580, -176.3578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-182.3842, -176.3075, -188.6805, -175.7632, -176.2913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-182.8270, -176.4251, -188.8117, -175.6195, -176.3576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-183.5308, -176.5584, -188.9382, -175.3778, -176.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-184.1704, -176.6620, -188.9982, -175.0947, -176.5256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-184.1956, -176.8591, -188.7938, -174.6993, -176.5519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-184.3383, -177.0307, -188.5902, -174.3107, -176.5399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-184.0280, -177.1486, -188.3727, -174.0986, -176.4942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-183.4437, -177.2746, -188.1848, -174.0019, -176.4807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-182.5526, -177.4475, -187.9514, -173.9459, -176.4507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-181.8809, -177.5856, -187.9780, -174.1860, -176.4725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-181.0262, -177.6844, -187.7309, -174.1830, -176.4539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-180.0208, -177.8253, -187.5189, -174.2923, -176.4856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-179.8675, -177.8875, -187.7447, -174.5758, -176.5118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-180.0259, -178.0042, -188.4562, -175.2520, -176.5706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-180.1770, -178.1884, -189.1311, -175.8566, -176.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-180.0530, -178.4749, -189.7455, -176.4999, -176.9174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-180.1793, -178.7310, -190.2056, -176.8598, -177.0591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-180.1963, -178.9160, -190.4867, -177.1194, -177.1374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-180.2512, -179.0735, -190.6886, -177.2747, -177.1806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-180.2568, -179.0902, -190.6224, -177.2149, -177.0997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-180.1913, -179.1083, -190.5511, -177.1936, -177.0108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-179.7235, -179.2869, -190.5320, -177.3966, -177.0495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-179.6188, -179.3759, -190.4042, -177.3840, -177.0206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-179.7952, -179.5237, -190.6025, -177.6717, -177.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-180.3039, -179.5666, -190.9234, -177.8765, -177.1446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-180.5366, -179.6093, -191.1919, -178.0837, -177.1659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-180.6693, -179.5374, -191.3119, -178.2315, -177.1427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-180.9352, -179.5452, -191.5177, -178.3490, -177.1501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-180.9847, -179.5623, -191.4509, -178.2021, -177.0745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-180.3571, -179.5879, -190.7752, -177.7039, -176.8564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-179.2557, -179.7266, -190.1265, -177.3900, -176.7589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-178.3574, -179.8068, -189.5765, -177.2023, -176.7052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-178.1460, -179.7981, -189.4654, -177.1641, -176.6631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-178.0131, -179.7657, -189.3240, -177.0497, -176.5938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-177.8074, -179.6925, -189.1121, -176.9332, -176.5151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-177.8084, -179.5973, -189.1139, -176.9219, -176.4616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-178.5680, -179.3612, -189.3739, -176.7461, -176.3283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-179.3366, -179.1402, -189.5527, -176.5252, -176.1868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-180.0900, -178.8455, -189.5226, -176.0489, -175.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-180.8576, -178.4593, -189.1720, -175.3076, -175.7618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-181.3951, -178.2393, -188.9327, -174.7300, -175.6156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-181.6847, -178.0606, -188.7894, -174.3603, -175.4640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-182.1372, -177.9489, -188.7276, -174.0262, -175.3588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-181.4407, -177.7603, -188.4918, -173.8941, -175.2060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-180.4583, -177.6520, -188.5023, -174.1770, -175.1455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0115, device='cuda:0', dtype=torch.float64)
tensor([-179.4614, -177.5751, -188.4651, -174.5107, -175.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-179.2157, -177.4406, -188.5746, -174.7586, -175.1151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-178.9042, -177.2816, -188.5372, -174.9089, -175.0501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-178.6541, -177.2022, -188.5921, -174.9700, -174.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-178.3501, -177.1179, -188.6092, -175.0673, -174.9256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-178.2058, -177.0735, -188.6317, -175.0480, -174.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-178.6746, -176.9808, -188.9192, -175.0130, -174.8483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-179.1398, -176.8037, -188.9503, -174.7083, -174.7095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-179.5922, -176.7825, -189.0935, -174.5553, -174.6871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-180.1063, -176.8694, -189.4501, -174.5637, -174.7548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-181.2631, -176.9449, -190.1677, -174.7811, -174.9144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-182.2233, -176.9870, -190.7016, -174.9682, -175.0341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-182.7820, -176.8559, -190.8017, -174.9234, -174.9989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-183.2847, -176.7392, -190.8067, -174.8201, -174.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-183.4023, -176.5012, -190.4404, -174.4892, -174.7493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-183.5148, -176.2411, -189.7693, -173.8618, -174.4562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-183.2984, -176.0202, -189.1656, -173.3337, -174.1746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-182.6518, -175.7782, -188.5066, -172.8195, -173.9029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-181.9629, -175.5566, -188.2973, -172.7834, -173.7623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-181.6180, -175.3831, -188.1882, -172.7594, -173.6130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-181.7813, -175.3081, -188.3317, -172.8893, -173.5705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-181.7465, -175.1498, -188.2779, -172.9329, -173.5054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-181.4857, -175.0907, -188.1725, -172.9301, -173.4911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-181.5162, -175.0511, -188.1984, -172.9475, -173.4828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-181.7987, -175.0088, -188.3351, -173.0511, -173.4804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-182.0996, -175.1171, -188.9486, -173.5259, -173.6217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-182.4957, -175.2443, -189.7760, -174.2168, -173.7972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-182.7854, -175.4807, -190.9842, -175.3761, -174.1201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-183.6331, -175.7634, -192.3997, -176.6143, -174.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-184.7368, -176.0008, -193.6401, -177.6467, -175.0072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-185.5782, -176.2259, -194.6260, -178.5360, -175.3748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-185.7133, -176.3295, -195.0254, -179.0473, -175.5290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-185.5500, -176.3282, -194.7933, -178.9521, -175.4528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-184.1905, -176.2008, -193.6132, -178.1746, -175.0389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-182.6203, -176.0376, -192.1535, -177.2250, -174.5646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-181.3958, -175.8694, -190.8731, -176.3459, -174.1905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-180.2006, -175.7559, -189.7719, -175.7130, -173.9360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-179.0648, -175.6535, -188.4944, -174.7595, -173.6832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-178.4367, -175.6431, -187.6534, -174.0728, -173.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-178.3432, -175.6811, -187.4800, -173.7218, -173.5438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-178.3910, -175.6006, -187.2248, -173.2094, -173.4316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-178.6704, -175.5838, -187.0735, -172.6872, -173.3351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-179.1897, -175.5869, -187.2097, -172.3822, -173.2690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-179.5276, -175.7078, -187.7135, -172.6511, -173.3276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-179.1598, -175.8536, -187.8869, -173.0044, -173.3963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-178.7367, -175.9898, -188.2769, -173.7468, -173.5158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-178.6412, -176.0642, -188.5885, -174.1427, -173.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-179.3400, -176.0196, -189.2989, -174.5955, -173.6742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-180.0364, -175.9055, -189.9557, -175.0039, -173.7314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-180.3717, -175.6530, -190.4095, -175.4448, -173.7001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-180.8923, -175.3877, -190.5178, -175.2944, -173.5983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-181.5320, -175.0454, -190.4853, -175.0495, -173.4475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-182.1874, -174.6486, -190.1907, -174.5878, -173.2535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-182.6636, -174.2863, -189.7498, -174.0408, -173.0603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-182.1860, -174.0685, -189.2641, -173.6388, -172.8960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-181.4662, -173.8638, -188.8939, -173.4319, -172.7327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-180.7937, -173.6709, -188.4187, -173.1006, -172.5598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-180.0337, -173.6885, -188.1470, -172.9900, -172.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-179.1019, -173.7881, -187.3708, -172.3949, -172.4417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-178.2721, -173.9154, -186.7727, -172.0060, -172.3915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-177.5205, -174.1186, -186.4630, -171.9150, -172.4279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-177.4184, -174.2889, -186.7522, -172.2581, -172.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-177.7556, -174.4471, -187.3912, -172.7998, -172.5771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-178.1471, -174.5787, -187.9406, -173.2024, -172.6344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-178.4173, -174.8435, -188.2080, -173.3198, -172.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-178.5333, -175.0907, -188.5477, -173.5838, -172.7699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-179.1231, -175.2504, -188.9257, -173.7320, -172.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-179.5152, -175.4009, -189.2243, -173.8249, -172.8345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-180.0556, -175.5213, -189.4537, -173.8478, -172.8137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-180.9512, -175.6522, -189.7504, -173.8792, -172.8479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-181.6009, -175.8106, -189.8866, -173.8428, -172.9156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-181.9221, -175.8080, -189.3647, -173.1751, -172.7978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-180.7935, -175.4986, -188.2809, -172.3271, -172.4751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-179.3628, -175.1153, -187.0853, -171.5471, -172.1841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-178.2486, -174.8097, -186.2185, -171.0546, -171.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-177.3465, -174.6651, -185.8045, -170.9810, -171.9534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-176.4055, -174.5302, -185.4915, -171.1507, -171.9852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-176.1147, -174.4896, -185.6879, -171.5450, -172.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-176.0372, -174.5100, -186.1602, -172.0656, -172.1013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-176.0998, -174.5848, -186.7192, -172.5837, -172.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-176.1519, -174.5354, -186.9958, -172.8122, -172.2157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-176.5260, -174.5957, -187.5105, -173.0489, -172.2672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-177.0650, -174.6860, -188.0791, -173.2843, -172.3310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-177.5590, -174.8346, -188.8041, -173.6778, -172.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-177.5780, -175.0125, -189.1766, -173.8037, -172.5713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-177.8718, -175.2250, -189.6932, -174.0047, -172.7359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-178.1261, -175.4024, -190.2276, -174.2932, -172.9100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-178.5912, -175.5014, -190.8028, -174.6083, -173.0803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-178.8774, -175.6368, -191.3295, -175.0036, -173.2421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-178.9845, -175.7516, -191.7051, -175.3227, -173.3404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-178.8923, -175.8154, -191.8112, -175.3787, -173.3564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-178.4527, -175.7859, -191.4920, -175.1004, -173.2738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-178.1409, -175.7086, -191.0119, -174.5731, -173.1162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-178.1685, -175.5759, -190.7653, -174.1588, -172.9627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-177.8591, -175.3607, -190.0344, -173.3750, -172.7054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-177.7684, -175.1991, -189.3536, -172.6383, -172.4812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-177.4332, -175.0564, -188.6764, -171.9654, -172.3014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-176.9705, -174.8905, -187.7638, -171.0828, -172.1360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-176.3016, -174.7721, -187.1533, -170.6695, -172.0912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-175.7252, -174.8313, -186.9484, -170.6549, -172.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-175.6061, -175.1192, -187.4855, -171.2427, -172.2369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-175.6161, -175.4072, -187.8576, -171.6711, -172.3850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-176.3800, -175.8073, -188.6863, -172.2925, -172.6245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-177.2142, -176.1663, -189.5578, -172.9878, -172.8683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-177.9181, -176.5090, -190.6207, -174.1176, -173.1825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-178.2835, -176.7525, -191.3837, -175.0063, -173.3884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-177.8875, -176.8966, -191.7119, -175.7959, -173.5030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-177.4491, -176.8726, -191.6973, -176.2694, -173.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-176.7374, -176.7530, -191.2743, -176.3181, -173.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-176.1201, -176.4942, -190.4226, -175.6733, -173.3133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-175.7259, -176.2773, -189.8573, -175.1805, -173.1601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-175.7006, -176.0324, -189.3756, -174.5434, -173.0044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-175.6235, -175.8804, -188.9999, -174.1341, -172.9084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-175.8009, -175.7042, -188.7073, -173.6068, -172.7737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-175.9534, -175.4786, -188.2620, -172.8963, -172.5804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-176.2963, -175.3004, -188.0796, -172.4353, -172.4060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-176.8001, -175.3382, -188.3126, -172.3923, -172.3820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-177.1989, -175.5075, -188.8852, -172.8116, -172.4651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-177.4999, -175.6693, -189.4889, -173.2854, -172.5672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-177.6624, -175.8101, -189.9068, -173.5425, -172.6391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-177.6820, -175.8106, -190.1884, -173.7487, -172.6479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-178.1504, -175.8102, -190.5425, -173.8511, -172.6239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-177.9339, -175.8416, -190.7386, -174.0344, -172.5685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-177.6854, -175.9094, -190.7558, -173.9907, -172.5144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-177.6965, -175.8285, -190.7643, -173.8451, -172.3825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-177.2576, -175.6057, -190.3908, -173.4076, -172.1267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-176.9683, -175.2754, -190.0126, -172.8712, -171.7987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-176.8887, -174.8717, -189.6140, -172.2593, -171.4590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-177.1903, -174.4290, -189.0396, -171.5117, -171.1334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-177.2067, -174.1121, -188.6339, -171.0563, -170.8899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-176.8313, -173.7622, -188.0275, -170.5290, -170.6554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-176.5107, -173.4927, -187.4562, -170.0509, -170.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-176.3508, -173.2720, -186.8722, -169.5342, -170.2292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-176.1968, -173.1103, -186.7856, -169.5255, -170.1239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-175.7590, -173.0007, -186.8657, -169.7119, -170.1124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-175.5757, -173.0176, -187.3139, -170.2133, -170.1838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-175.3171, -172.9365, -187.6361, -170.6478, -170.2270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-175.5032, -172.8875, -187.9246, -170.8230, -170.2350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-175.9118, -172.7018, -188.1117, -170.8567, -170.1944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-175.9493, -172.3091, -187.8221, -170.6604, -170.0932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-175.8654, -171.8488, -187.2243, -170.2016, -169.9105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-176.1729, -171.5251, -187.0505, -169.9831, -169.7569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-176.3237, -171.3461, -187.5600, -170.4073, -169.7245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-176.9815, -171.2945, -188.3589, -170.9192, -169.7449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-177.6119, -171.2500, -188.8543, -171.1730, -169.7520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-178.0359, -171.2001, -189.2689, -171.4293, -169.7670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-177.4060, -171.0862, -189.4706, -171.8454, -169.8352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-177.3182, -170.9531, -189.7087, -172.1515, -169.8892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-177.0769, -170.7829, -189.6995, -172.2487, -169.8976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-177.2706, -170.6092, -189.4267, -171.8884, -169.8171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-176.6007, -170.2861, -188.5272, -171.2251, -169.6737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-176.3084, -170.1459, -187.6679, -170.3909, -169.5864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-175.3793, -170.0091, -186.4108, -169.3876, -169.5353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-174.4789, -170.0490, -185.5670, -168.7906, -169.6727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-174.0215, -170.1273, -184.9355, -168.2215, -169.8349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-173.7961, -170.2286, -184.7661, -167.9753, -169.9521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-173.7046, -170.4004, -184.7490, -167.8097, -170.1025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-173.3228, -170.5757, -184.4726, -167.5994, -170.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-173.3543, -170.8029, -184.5256, -167.5417, -170.4903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-173.6118, -170.9874, -185.1373, -168.0246, -170.5601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-173.6560, -171.2443, -185.7654, -168.6620, -170.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-173.9542, -171.5143, -186.4135, -169.2054, -170.8494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-174.1386, -171.8740, -187.3031, -170.0408, -171.0512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-175.1982, -172.0962, -188.1763, -170.4904, -171.1224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-176.2983, -172.4435, -189.1190, -171.0980, -171.3150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-176.8062, -172.6723, -189.6564, -171.5198, -171.4752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-176.3053, -172.6936, -189.4689, -171.4727, -171.4636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-175.9682, -172.6042, -189.3473, -171.4415, -171.4028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-175.9701, -172.4645, -189.2695, -171.3411, -171.3219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-176.4000, -172.1911, -189.0575, -170.9571, -171.1205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-176.8091, -172.0194, -188.9293, -170.6747, -170.9443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-177.2470, -171.7520, -188.6165, -170.2318, -170.6989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-177.5153, -171.5234, -188.2308, -169.7485, -170.4662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-176.8991, -171.1763, -187.6977, -169.3684, -170.1854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-175.8128, -170.8615, -186.8931, -168.8751, -169.8777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-174.8515, -170.6212, -186.1832, -168.5044, -169.6641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-174.1541, -170.5296, -186.1113, -168.7107, -169.5483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-173.5900, -170.5164, -185.9847, -168.7477, -169.4832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-173.3957, -170.4726, -185.8610, -168.5739, -169.3235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-173.6298, -170.4814, -186.2168, -168.6593, -169.1847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-174.0261, -170.4389, -186.2995, -168.4507, -169.0236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-174.2012, -170.3920, -186.5454, -168.5749, -168.9897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-174.9875, -170.2612, -186.5841, -168.2734, -168.8873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-175.5344, -170.1977, -186.7356, -168.2078, -168.8583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-175.6614, -170.1460, -186.8182, -168.2205, -168.8868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-175.7999, -170.1735, -187.1303, -168.3921, -168.9580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-175.7925, -170.2417, -187.5597, -168.6980, -169.0541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-175.9643, -170.3439, -187.8239, -168.7631, -169.1387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-175.5960, -170.4453, -188.1006, -169.0121, -169.2601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-174.7770, -170.4463, -187.8511, -168.9106, -169.2773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-173.8308, -170.4381, -187.6821, -168.9548, -169.3301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-172.7761, -170.4960, -187.3206, -168.8528, -169.3914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-172.3625, -170.5233, -187.1442, -168.6687, -169.3535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-171.9172, -170.5330, -186.5314, -168.1227, -169.2631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-171.8773, -170.5846, -186.4755, -167.9251, -169.1876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-172.5388, -170.5923, -186.7721, -167.7646, -169.0497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-173.5852, -170.6381, -187.1776, -167.5486, -168.9188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-174.4863, -170.7187, -187.3033, -167.1714, -168.8568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-175.9528, -170.7895, -187.4818, -166.7788, -168.8422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-177.1980, -170.7864, -187.3706, -166.3060, -168.8410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-177.8222, -170.8296, -187.3824, -166.1340, -168.8949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-177.0552, -170.6978, -187.3924, -166.2594, -168.8793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-175.7560, -170.4977, -187.2383, -166.3558, -168.8488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-174.2049, -170.4231, -187.4487, -166.9884, -168.9194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-173.0533, -170.3299, -187.2350, -167.2194, -168.9834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-172.3493, -170.2682, -186.5801, -166.8247, -168.9873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-172.3350, -170.1823, -185.7825, -165.9824, -168.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-172.6400, -170.1052, -184.9478, -165.0464, -168.7925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-172.7617, -170.1815, -184.1012, -164.1546, -168.7616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-173.1478, -170.2128, -183.9195, -163.8411, -168.6366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-173.8037, -170.2152, -183.7628, -163.6068, -168.5186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-173.7570, -170.2287, -183.6037, -163.5462, -168.4758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-174.0440, -170.2386, -184.0006, -163.9324, -168.3940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-175.5105, -170.2175, -184.6687, -164.3848, -168.2522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-176.5256, -170.2341, -185.2130, -164.8537, -168.2341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-177.0071, -170.3186, -185.9963, -165.6356, -168.3033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-176.6762, -170.4872, -187.2419, -167.0082, -168.4679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-175.8980, -170.5842, -188.0130, -168.1320, -168.6219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-175.1676, -170.7079, -188.6795, -169.2835, -168.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-174.9429, -170.7290, -188.9973, -169.9905, -168.8077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-174.7530, -170.6577, -189.1293, -170.4942, -168.8104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-174.1408, -170.5915, -188.9543, -170.7732, -168.7628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-172.8601, -170.5708, -188.4534, -171.0967, -168.7831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-172.3646, -170.4521, -188.0970, -171.1235, -168.7303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-172.6153, -170.2549, -188.0025, -170.8479, -168.5806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-173.3866, -170.1209, -188.0761, -170.4157, -168.3823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-175.1207, -170.0252, -188.7394, -170.2497, -168.2226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-177.2320, -170.0234, -189.5860, -170.3782, -168.2046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-179.2995, -170.0706, -189.9662, -170.2318, -168.1882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-181.2003, -170.1126, -190.0900, -170.0953, -168.2027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-181.9404, -170.0304, -189.9094, -169.9116, -168.1308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-181.7846, -169.9698, -189.5963, -169.6007, -168.0385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-180.8631, -169.7563, -188.8915, -169.0054, -167.8330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-179.9208, -169.5817, -188.1898, -168.3772, -167.6149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-178.2242, -169.2305, -187.1670, -167.6113, -167.2978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-176.3217, -168.8248, -185.4761, -166.3713, -167.0535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-174.4057, -168.6770, -184.3398, -165.8154, -167.0864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-172.6773, -168.7564, -183.4624, -165.5543, -167.3648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-171.6188, -168.8777, -182.9432, -165.5107, -167.6667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-171.1229, -168.9568, -182.7965, -165.5986, -167.8669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-170.7104, -169.1291, -183.4385, -166.3717, -168.0132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-171.2128, -169.1934, -184.6415, -167.2013, -167.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-171.9860, -169.3829, -186.1428, -168.2468, -167.7659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-173.0436, -169.6701, -187.4027, -168.8994, -167.7701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-174.4160, -170.0275, -188.7625, -169.6052, -167.8463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-175.9919, -170.3347, -189.9463, -170.1957, -168.0008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-177.0863, -170.5117, -190.6156, -170.5191, -168.1624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-177.5571, -170.5991, -190.9413, -170.8231, -168.3184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-177.9401, -170.6268, -190.8836, -170.7621, -168.3833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-178.5475, -170.5423, -190.2046, -170.0286, -168.3419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-178.9393, -170.4526, -189.0820, -168.9780, -168.3113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-178.8740, -170.3851, -187.7099, -167.6927, -168.2136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-177.7295, -170.2126, -186.3460, -166.5908, -168.1256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-175.3494, -170.1876, -185.3090, -166.0245, -168.2191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-173.2822, -170.3131, -184.4986, -165.8826, -168.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-171.4045, -170.6179, -183.7238, -165.8694, -168.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-169.9427, -171.0149, -183.7591, -166.7685, -169.4746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-169.1835, -171.2032, -184.2985, -168.0241, -169.7841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-168.7460, -171.3137, -184.8137, -169.1502, -170.0163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-168.8682, -171.1916, -185.5731, -170.0031, -169.9421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-169.5024, -170.8071, -186.0814, -170.0183, -169.6399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-170.2736, -170.3873, -186.3173, -169.5892, -169.3037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-171.3769, -169.9689, -186.4982, -168.9170, -168.9662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-172.4534, -169.6254, -186.6760, -168.3882, -168.6751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-173.4674, -169.3642, -186.8298, -168.0151, -168.4214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-173.9102, -169.1554, -186.8488, -167.7542, -168.2249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-174.0740, -169.0109, -186.9235, -167.6122, -168.1016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-174.1172, -168.9295, -186.8184, -167.3279, -168.0135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-173.6096, -168.8476, -186.7562, -167.2788, -168.0096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-173.1550, -168.8067, -186.5826, -167.0989, -167.9918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-172.2232, -168.8918, -186.4849, -167.2091, -168.1266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-171.1820, -168.9995, -186.5691, -167.6279, -168.2633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-170.3763, -169.0836, -186.7571, -168.2257, -168.4516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-170.0670, -169.0275, -187.2019, -168.8883, -168.4955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-169.4180, -169.1143, -187.3608, -169.3538, -168.5787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-168.8709, -169.1728, -187.4583, -169.6502, -168.6612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-169.0237, -169.1160, -187.7316, -169.5903, -168.5392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-168.8612, -169.2042, -188.0111, -169.8612, -168.5394],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-168.4839, -169.3696, -188.0734, -170.0189, -168.6115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-168.4711, -169.3272, -187.9352, -169.6055, -168.5467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-168.4389, -169.2873, -187.9804, -169.4936, -168.4877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-168.8813, -169.1915, -188.2827, -169.3919, -168.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-169.6359, -169.1186, -188.8816, -169.4796, -168.0931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-170.9632, -168.9238, -189.0304, -168.7934, -167.8007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-172.4667, -168.7355, -188.6926, -167.7332, -167.5246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-174.2883, -168.6315, -188.3084, -166.8375, -167.2927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-175.9802, -168.5359, -187.6563, -166.0121, -167.1214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-176.5540, -168.4126, -186.9517, -165.3425, -166.9058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-175.9070, -168.1748, -186.3992, -164.8780, -166.6438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-174.9512, -168.0022, -185.7473, -164.3209, -166.4173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-173.6776, -167.8515, -184.9658, -163.6658, -166.2383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-172.5029, -167.7709, -184.0973, -162.9560, -166.1901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-171.1829, -167.7907, -183.2623, -162.3563, -166.2699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-169.9675, -167.8510, -182.8930, -162.2409, -166.4384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-168.9545, -167.9446, -182.5557, -162.1832, -166.6593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-168.1004, -168.1090, -182.1747, -162.1887, -166.9357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-167.3931, -168.3065, -181.9357, -162.3946, -167.2337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-167.2208, -168.3733, -181.6684, -162.3597, -167.3571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-167.5150, -168.1536, -181.6134, -162.2663, -167.1562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-167.9310, -167.9709, -181.7317, -162.1647, -166.8694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-168.5164, -167.6706, -182.3448, -162.5796, -166.4741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-169.6271, -167.3435, -183.0266, -162.8903, -166.0774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-171.0159, -167.0947, -183.8525, -163.3494, -165.8131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-172.7779, -167.0022, -184.7417, -163.8183, -165.6507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-175.1473, -167.0927, -186.0480, -164.7013, -165.6596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-177.3173, -167.2041, -186.8687, -165.2723, -165.8458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-178.8505, -167.1999, -187.3100, -165.6465, -166.0299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-179.2855, -167.1284, -187.3476, -165.7017, -166.1264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-178.2787, -166.9585, -187.3386, -165.7104, -166.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-177.1867, -166.7330, -187.2898, -165.7249, -165.9317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-175.8882, -166.4704, -187.0270, -165.6021, -165.7788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-174.7210, -166.1636, -186.6200, -165.3621, -165.6529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-173.4177, -165.9292, -186.1528, -165.0998, -165.5909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-171.7668, -165.7466, -185.7053, -164.9644, -165.5821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-170.7960, -165.5325, -185.4402, -165.0128, -165.6449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-169.7944, -165.3634, -185.1812, -165.1229, -165.6977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-168.7626, -165.3171, -185.0837, -165.4338, -165.7471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-168.5339, -165.1935, -185.0058, -165.4260, -165.7416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-168.6053, -165.0356, -184.8351, -165.1408, -165.7164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-169.4714, -164.8200, -184.7095, -164.5972, -165.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-171.0587, -164.6331, -184.5064, -163.8459, -165.2706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-173.1224, -164.4978, -184.1117, -163.0172, -165.0427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-175.3103, -164.5174, -183.8745, -162.5229, -164.9257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-176.7050, -164.5530, -183.5496, -162.1774, -164.9555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-177.5296, -164.6117, -183.1408, -161.8215, -165.0013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-176.3256, -164.5746, -183.2180, -161.7982, -164.9217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-175.2299, -164.5434, -183.4784, -161.9801, -164.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-173.7535, -164.5639, -183.9044, -162.3298, -164.6038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-171.7413, -164.7114, -184.8877, -163.4273, -164.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-170.1584, -164.9380, -185.6991, -164.5789, -164.4587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-168.5423, -165.1826, -185.9791, -165.4051, -164.5792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-167.0076, -165.4612, -186.0246, -166.1017, -164.8071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-166.5403, -165.5428, -185.7619, -165.9752, -164.9319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-166.7008, -165.5786, -185.7214, -165.6931, -164.9128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-166.5835, -165.6675, -185.6139, -165.4744, -164.9285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-166.6882, -165.7168, -185.4207, -165.0886, -164.8859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-166.5841, -165.7838, -184.9758, -164.5339, -164.8582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-166.2579, -165.9114, -184.6388, -164.1843, -164.8898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-166.3089, -165.9378, -184.5779, -164.0417, -164.8483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-165.9159, -165.9729, -184.6378, -164.2305, -164.8952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-165.6258, -165.9354, -184.6463, -164.3619, -164.8844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-165.7757, -165.7845, -184.5725, -164.2775, -164.8317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-165.5652, -165.7483, -184.3424, -164.1781, -164.8835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-165.4649, -165.6483, -184.3815, -164.3604, -164.8485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-165.7010, -165.5263, -184.1100, -164.0457, -164.8234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-166.2833, -165.3321, -183.6799, -163.4572, -164.7928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-167.1244, -165.2112, -183.3002, -162.9414, -164.7971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-168.1352, -165.1534, -182.4157, -161.9076, -164.8969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-168.2966, -165.1843, -182.2158, -161.7097, -164.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-167.3340, -165.3186, -182.1177, -161.9208, -165.1681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-166.4018, -165.4169, -182.3141, -162.4753, -165.3349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-165.5856, -165.4381, -182.9934, -163.5942, -165.4296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-165.1220, -165.4195, -183.5798, -164.5626, -165.5175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-164.5491, -165.4172, -184.3468, -165.9076, -165.5870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-164.6632, -165.3166, -185.3048, -167.0576, -165.4603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-165.4297, -165.0994, -186.0297, -167.3888, -165.1789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-166.7749, -164.9001, -186.5832, -167.2383, -164.8667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-167.7824, -164.7813, -186.6584, -166.8797, -164.7416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-167.8778, -164.7749, -186.5114, -166.7181, -164.7396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-167.6439, -164.6766, -185.9439, -166.2321, -164.7772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-166.7276, -164.6563, -185.5862, -166.2169, -164.8866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-166.0608, -164.6622, -185.1530, -165.9650, -164.9789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-165.9554, -164.5843, -184.6153, -165.2864, -164.9657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-165.6466, -164.5364, -184.1767, -164.7750, -164.9114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-165.8879, -164.4036, -183.7750, -164.1723, -164.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-166.1747, -164.2477, -183.5861, -163.8623, -164.7956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-167.1004, -164.0852, -183.4346, -163.4255, -164.6783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-167.5971, -164.0281, -183.3529, -163.1541, -164.5458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-168.0461, -163.9515, -183.6695, -163.3538, -164.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-168.5440, -163.9245, -184.1321, -163.7169, -164.2015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-168.6265, -163.9228, -184.6494, -164.2088, -164.0826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-167.8861, -163.8771, -185.3919, -165.1768, -163.9963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-167.1563, -163.9230, -185.8450, -165.8544, -163.9235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-166.7854, -163.9313, -186.8248, -167.0797, -163.7821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-165.7822, -163.9124, -187.2130, -167.8628, -163.6562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-164.7125, -163.8772, -187.3921, -168.5777, -163.5889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-163.2978, -163.8193, -186.6478, -168.4795, -163.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-162.3199, -163.7934, -186.3226, -168.7323, -163.7311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-161.8676, -163.6262, -185.4623, -167.9464, -163.7502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-162.1403, -163.2798, -184.1411, -166.0879, -163.6735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-162.9824, -162.8951, -182.6515, -163.8386, -163.5923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-164.2757, -162.7714, -181.3078, -161.9611, -163.6880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-165.6008, -162.6507, -180.9046, -161.3074, -163.5964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-166.8265, -162.4915, -180.9156, -161.1414, -163.3304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-168.2929, -162.3471, -181.2425, -161.3246, -162.9622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-169.0322, -162.2280, -181.6858, -161.7305, -162.7224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-169.6368, -162.1760, -181.9973, -162.0302, -162.5480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-170.2674, -162.2281, -182.2593, -162.3085, -162.4379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-169.7721, -162.2418, -182.7251, -162.7966, -162.3216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-168.5718, -162.1835, -183.0307, -163.2169, -162.2373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-166.6350, -162.1929, -183.3766, -163.8951, -162.2490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-164.8129, -162.3194, -183.6290, -164.5941, -162.3018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-163.0494, -162.5856, -183.8935, -165.5102, -162.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-161.2785, -162.9462, -183.9371, -166.4819, -162.7632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-160.0231, -163.3095, -183.5482, -166.9124, -163.1510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-159.4099, -163.5528, -183.2459, -166.9895, -163.3382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-159.1924, -163.6340, -182.9542, -166.6637, -163.3352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-159.1944, -163.6526, -182.6359, -166.0607, -163.2376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-159.4578, -163.6040, -181.9756, -164.8315, -163.0890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-160.3960, -163.3123, -181.5944, -163.5436, -162.5830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-161.4125, -162.9422, -181.8373, -163.1221, -161.9364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-162.4922, -162.7966, -182.3156, -163.0063, -161.3674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-162.9039, -162.8402, -183.1492, -163.5446, -160.9863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-163.0546, -162.9194, -184.3849, -164.5385, -160.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-163.4788, -162.8998, -185.8294, -165.6740, -160.4056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-164.8437, -162.7510, -186.8871, -166.1679, -160.1165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-165.1120, -162.5934, -187.3726, -166.4998, -159.9508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-165.2746, -162.4200, -187.7791, -166.8757, -159.8726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-165.3186, -162.3129, -188.0597, -167.1623, -159.7839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-164.7469, -162.2008, -188.0225, -167.2286, -159.6907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-164.2802, -162.1734, -187.3499, -166.7155, -159.5955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-163.0792, -162.1290, -186.7257, -166.4945, -159.6033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-162.1450, -162.1224, -185.7905, -165.9532, -159.6054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-161.3308, -162.1478, -184.3830, -164.9183, -159.7353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-160.2733, -162.2683, -182.6008, -163.6434, -160.1015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-159.4349, -162.5989, -181.0269, -162.5136, -160.5908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-158.7159, -163.1315, -179.5111, -161.4744, -161.3761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-158.4096, -163.4740, -178.6847, -160.9920, -161.9144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-158.9955, -163.5414, -177.7721, -160.0349, -162.2578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-159.5904, -163.3090, -177.3601, -159.5158, -162.1819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-160.0570, -162.9096, -177.2223, -159.3098, -161.9212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-160.6757, -162.2184, -177.5336, -159.4181, -161.3081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-162.1493, -161.6527, -177.5780, -159.1591, -160.7653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-164.0388, -161.1509, -177.6940, -159.0608, -160.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-165.1836, -160.8039, -178.3230, -159.5417, -159.8061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-165.6049, -160.6081, -179.4940, -160.6677, -159.5238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-165.9362, -160.5570, -181.0129, -162.1773, -159.2852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-165.4357, -160.5528, -182.4034, -163.7332, -159.2368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-164.5651, -160.5251, -184.0082, -165.6908, -159.2662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-163.6651, -160.5728, -184.9767, -167.1200, -159.3858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-162.9515, -160.6353, -185.3620, -167.9335, -159.4994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-161.6245, -160.7258, -185.3674, -168.5412, -159.6562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-160.5680, -160.9132, -185.4366, -169.2469, -159.8570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-160.0407, -161.1678, -185.3014, -169.4924, -160.1061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-159.5563, -161.4253, -184.8612, -169.3505, -160.4133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-159.4008, -161.5787, -184.3945, -168.9665, -160.7373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-160.0565, -161.5922, -183.6540, -167.7074, -160.9334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-160.4644, -161.7216, -182.2740, -165.8454, -161.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-161.0285, -161.8744, -180.9638, -164.1709, -161.3949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-161.4670, -162.0025, -180.1377, -163.1199, -161.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-160.8843, -162.2854, -179.3384, -162.3556, -161.8310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-159.8130, -162.5475, -179.1091, -162.3383, -162.0342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-158.3301, -163.0466, -178.7808, -162.4682, -162.4836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-157.6786, -163.6761, -178.1308, -162.0367, -163.0000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-157.7193, -164.0080, -177.7542, -161.5484, -163.0970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-157.7119, -164.0278, -177.8025, -161.3778, -162.7883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-157.1761, -163.8754, -178.3189, -161.9057, -162.3686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-156.8938, -163.4849, -179.2378, -162.7745, -161.6512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-157.1648, -163.0346, -180.3374, -163.5840, -160.7684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-157.2857, -162.7537, -181.3206, -164.4917, -160.2148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-158.0196, -162.3942, -182.2737, -165.0920, -159.6340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-158.9251, -161.9410, -183.7017, -166.2631, -159.0952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-160.0674, -161.6027, -184.4560, -166.6488, -158.6833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-160.6518, -161.3284, -185.2893, -167.3082, -158.3625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-161.1903, -161.0378, -186.1192, -168.0773, -158.1587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-160.8499, -160.7332, -186.4024, -168.4320, -158.0212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-160.1321, -160.4848, -186.3612, -168.5888, -157.9749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-159.3998, -160.2661, -185.8636, -168.2823, -157.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-158.9733, -160.0525, -184.8931, -167.3339, -157.8627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-158.4584, -159.9546, -183.5770, -166.0753, -157.9432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-158.2649, -159.9252, -181.7146, -164.0792, -158.0616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-157.9287, -159.9313, -180.4111, -162.7733, -158.2794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-157.3573, -160.1256, -179.1599, -161.5471, -158.6521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-157.2258, -160.2966, -178.0274, -160.2767, -158.9487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-157.0493, -160.3535, -177.4786, -159.7115, -159.1392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-157.3465, -160.4108, -176.7393, -158.8359, -159.2919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-156.4317, -160.5186, -176.7272, -159.0180, -159.5383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-155.6894, -160.3777, -177.0849, -159.5988, -159.4795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-154.7088, -160.3731, -177.4664, -160.3356, -159.5125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-154.1939, -159.9565, -178.5236, -161.6999, -158.9973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-153.8679, -159.5659, -179.8758, -163.3592, -158.4875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-153.9978, -159.1462, -181.0058, -164.4420, -158.0351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-154.3224, -158.7268, -182.4447, -165.8066, -157.5458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-154.2201, -158.4878, -183.3439, -166.8352, -157.3789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-154.2522, -158.3115, -183.8904, -167.3509, -157.1955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-154.9448, -157.9362, -184.5354, -167.6941, -156.8211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-156.0463, -157.6724, -184.6049, -167.2622, -156.5258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-157.0969, -157.4751, -184.6880, -166.9589, -156.3338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-157.6550, -157.3118, -184.8652, -166.9397, -156.2344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-157.7584, -157.1924, -184.8131, -166.7488, -156.1445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-157.4553, -157.2887, -183.3934, -165.1990, -156.3096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-157.6153, -157.4846, -181.8675, -163.5009, -156.5163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-157.6735, -157.7216, -180.2512, -161.8240, -156.7671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-157.3222, -157.9436, -179.1355, -160.6865, -156.9002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-156.0431, -158.3333, -178.0934, -159.8817, -157.2679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-154.7601, -158.6418, -177.9173, -159.8540, -157.4083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-154.2349, -158.8056, -177.7184, -159.6491, -157.4210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-154.2229, -158.8535, -177.4456, -159.1649, -157.2608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-154.1785, -158.9174, -177.1752, -158.6982, -157.1334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-154.3399, -158.9126, -177.1359, -158.3095, -156.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-154.5080, -158.8725, -177.1804, -158.0299, -156.4200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-154.3257, -158.8500, -177.5565, -158.1714, -156.1073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-154.0164, -158.8673, -178.0864, -158.5398, -155.8533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-153.0854, -158.9964, -179.0555, -159.6886, -155.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-153.0078, -158.8607, -179.9459, -160.5821, -155.6562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-152.6694, -158.9621, -180.5099, -161.4130, -155.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-152.7730, -158.8782, -180.9172, -161.9319, -155.6746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-153.1388, -158.7971, -180.9803, -161.9550, -155.5725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-153.9005, -158.6552, -180.5242, -161.2891, -155.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-154.8179, -158.5997, -179.8376, -160.4335, -155.4334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-155.5424, -158.4883, -179.4800, -160.0355, -155.4014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-156.4882, -158.2621, -179.0250, -159.5362, -155.3406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-157.1809, -158.1406, -178.2478, -158.8583, -155.4633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-157.7248, -158.0582, -177.4584, -158.2393, -155.6618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-157.6816, -158.0716, -177.1234, -158.1089, -155.8510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-157.6302, -158.1152, -176.5689, -157.8252, -156.1536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-157.3401, -158.2444, -176.0431, -157.7069, -156.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-156.3219, -158.5163, -175.9120, -158.0188, -157.1234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-155.8367, -158.4797, -176.0935, -158.6012, -157.3322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-155.4992, -158.4200, -176.2309, -159.0402, -157.4543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-155.4781, -158.1941, -176.4034, -159.5043, -157.5250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-155.3964, -158.0551, -176.3216, -159.6978, -157.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-155.6991, -157.7246, -176.4122, -159.8363, -157.4775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-155.9969, -157.3993, -176.6419, -160.1007, -157.1925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-156.2405, -157.0545, -176.9380, -160.4541, -156.8892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-156.4401, -156.7016, -177.6988, -161.2698, -156.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-155.2553, -156.7019, -178.7642, -162.7249, -156.1742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-154.2220, -156.7678, -179.7907, -164.2255, -155.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-153.2690, -156.9092, -180.7154, -165.7214, -155.8443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-152.1890, -157.2345, -181.5786, -167.4054, -155.9934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-151.6517, -157.4239, -182.3409, -168.8082, -156.1039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-151.5876, -157.5375, -182.6393, -169.3149, -156.1045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-152.1453, -157.4644, -182.3799, -168.7692, -156.0754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-152.7891, -157.3994, -181.3350, -167.3125, -156.3104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-153.2048, -157.4064, -180.2304, -166.0173, -156.7197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-154.0331, -157.3876, -178.8151, -164.3416, -157.2358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-155.0422, -157.4372, -177.5237, -162.8218, -157.8054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-156.3019, -157.4469, -176.4373, -161.3892, -158.1496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-157.9943, -157.4159, -175.4604, -160.0548, -158.3443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-159.0098, -157.3068, -175.1549, -159.5019, -158.1928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-158.7201, -157.1449, -175.3157, -159.5509, -157.9227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-157.8196, -156.8879, -176.1202, -160.2769, -157.4365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-157.4354, -156.7764, -176.3308, -160.3577, -157.1625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-156.7698, -156.6899, -176.4506, -160.3880, -156.9492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-156.1946, -156.5875, -176.6164, -160.4242, -156.6591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-155.1343, -156.5065, -177.2305, -161.1060, -156.3029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-154.1319, -156.4833, -177.7768, -161.7336, -155.9746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-153.3300, -156.5025, -178.1785, -162.2475, -155.7090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-152.3908, -156.6946, -178.2886, -162.5228, -155.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-151.9699, -156.7343, -178.1325, -162.3861, -155.5487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-151.6280, -156.8745, -177.8416, -162.0909, -155.6044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-151.7910, -156.8031, -177.1968, -161.1787, -155.5489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-151.8758, -156.7354, -176.7309, -160.4865, -155.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-152.2773, -156.5663, -176.0349, -159.4168, -155.2376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-152.1094, -156.4191, -176.0349, -159.2438, -154.9278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-151.9417, -156.3285, -175.6318, -158.7013, -154.8538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-151.9227, -156.3041, -175.1291, -157.9414, -154.7406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-151.7403, -156.3034, -174.7652, -157.4123, -154.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-150.9490, -156.3728, -175.1465, -157.8145, -154.3536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-150.5711, -156.1481, -175.6989, -158.2483, -153.7920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-150.7052, -155.8036, -176.2941, -158.5626, -153.0483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-150.8826, -155.4429, -177.0015, -159.0532, -152.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-151.3724, -155.0648, -177.1438, -158.8981, -151.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-151.7784, -154.7665, -177.4800, -158.9467, -151.3682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-152.3973, -154.4677, -177.4694, -158.6227, -150.9038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0728, device='cuda:0', dtype=torch.float64)
tensor([-153.0265, -154.2073, -177.6224, -158.7111, -150.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-153.2051, -154.0559, -177.5543, -158.6673, -150.6092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-153.1520, -153.9793, -176.7091, -157.9025, -150.8317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-152.6366, -153.8906, -176.3453, -157.7472, -151.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-151.0072, -154.0623, -176.5274, -158.4453, -151.5395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-149.7626, -154.3092, -176.5683, -159.0112, -152.1097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-149.2605, -154.4245, -176.4072, -159.1943, -152.5081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-148.8867, -154.5488, -176.0937, -159.1630, -152.9211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-148.8368, -154.5995, -175.6531, -158.8701, -153.1838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-148.8910, -154.6238, -175.4086, -158.6888, -153.2545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-148.7472, -154.7354, -175.4576, -158.8503, -153.3224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-148.5815, -154.7229, -175.9987, -159.5150, -153.2513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-148.3328, -154.7007, -177.0011, -160.7278, -153.0093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-148.4967, -154.6617, -177.2453, -160.9896, -152.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-148.4182, -154.6073, -177.7448, -161.6695, -152.7554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-148.5852, -154.5046, -178.1044, -161.9997, -152.4190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-148.7608, -154.4494, -178.0046, -161.8270, -152.2385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-148.8480, -154.4750, -177.8288, -161.5531, -152.1345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-148.8758, -154.4876, -177.1680, -160.7471, -152.1847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-149.3236, -154.3133, -176.3066, -159.5986, -152.0964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-149.8611, -154.1318, -175.2853, -158.3201, -152.0846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-149.7215, -154.1558, -174.3376, -157.3340, -152.3323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-148.7356, -154.3771, -174.1950, -157.4445, -152.6116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-147.1788, -154.8354, -174.3958, -158.3083, -153.1748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-146.0628, -155.3005, -174.5381, -159.0831, -153.7482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-145.4443, -155.5177, -174.7384, -159.5851, -153.8464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-144.8484, -155.7669, -174.9743, -160.1576, -153.9907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-145.2088, -155.4017, -174.6041, -159.3507, -153.5363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-145.7452, -154.8150, -174.2376, -158.4120, -152.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-146.0299, -154.3187, -174.4928, -158.4033, -152.2350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-146.5743, -153.9644, -174.1890, -157.6681, -151.8160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-147.2677, -153.6900, -173.5906, -156.6438, -151.6642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-147.1850, -153.6098, -173.9305, -157.0937, -151.3649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-146.9826, -153.4878, -174.6389, -158.1454, -151.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-147.1784, -153.1929, -175.2052, -158.8982, -150.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-147.2177, -152.9654, -176.4135, -160.5647, -150.1260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-147.3440, -152.7449, -177.5598, -162.2130, -149.7844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-147.8861, -152.4533, -178.4391, -163.3399, -149.3893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-149.0351, -152.1235, -178.5141, -163.0580, -148.9688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-149.8401, -151.9610, -178.4667, -162.7222, -148.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-150.3579, -151.8604, -178.1250, -162.0104, -148.5301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-151.0035, -151.7936, -177.5471, -161.0218, -148.3989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-151.6499, -151.7563, -176.9710, -160.1924, -148.3556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-152.0679, -151.6360, -176.3087, -159.3274, -148.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-152.4342, -151.5281, -175.4239, -158.1635, -148.5313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-153.2099, -151.4910, -174.4601, -156.9096, -148.6289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-152.7653, -151.3879, -173.5725, -155.8093, -148.7435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-152.1600, -151.3326, -172.9649, -155.1427, -148.8766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-151.4320, -151.3250, -172.5858, -154.7244, -148.9396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-150.6312, -151.3660, -172.4051, -154.6003, -149.1081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-149.5213, -151.5640, -172.6756, -155.0792, -149.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-147.4146, -152.2133, -173.8043, -157.1113, -149.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-146.3346, -152.7621, -174.2105, -158.1911, -150.3180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-145.2297, -153.4639, -175.1787, -160.2298, -150.8607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-144.4570, -154.1256, -175.7139, -161.6574, -151.5873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-143.9227, -154.7447, -175.9100, -162.5186, -152.4068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-143.8485, -154.8573, -175.6525, -162.2722, -152.6748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-143.8720, -154.7822, -175.3128, -161.7520, -152.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-143.8818, -154.6015, -175.2791, -161.5734, -152.5107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-144.0573, -154.0472, -175.3819, -161.3027, -151.7865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-144.4045, -153.3963, -175.2527, -160.6077, -150.9463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-145.1072, -152.6504, -174.9959, -159.6198, -149.9238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-145.8970, -152.0918, -174.4159, -158.2769, -149.2203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-146.8859, -151.5877, -173.6451, -156.7578, -148.6540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-147.8330, -151.2427, -172.6316, -155.1552, -148.4167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-148.6404, -151.0157, -171.9584, -154.1646, -148.1766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-149.2359, -150.9139, -171.6092, -153.6927, -147.9133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-149.2942, -150.8236, -171.6200, -153.6700, -147.8273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-149.0086, -150.7656, -171.7286, -153.8157, -147.8523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-147.5589, -150.8538, -173.0236, -155.6586, -147.9762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-146.2735, -151.0309, -174.5186, -158.1230, -148.0895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-144.9399, -151.3995, -175.9300, -160.8736, -148.5094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-143.9639, -151.7630, -176.9854, -163.1897, -148.9928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-143.0115, -152.2912, -177.6258, -164.9701, -149.7836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-142.2854, -152.8072, -177.9868, -166.2809, -150.5160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-142.1529, -152.8908, -177.2300, -165.2613, -150.7103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-142.1111, -152.7893, -176.4152, -164.1095, -150.7776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-142.1876, -152.6845, -175.2056, -162.3347, -151.0388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-142.4155, -152.3100, -174.2771, -160.7985, -150.9009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-143.2057, -151.5127, -173.2885, -158.7983, -150.2614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-144.1164, -150.7840, -172.2756, -156.9662, -149.7617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-144.9989, -150.2454, -171.4910, -155.5642, -149.3320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-145.8520, -149.7948, -171.1115, -154.7148, -148.7083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-146.4626, -149.4681, -171.0967, -154.4241, -148.0318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-147.1695, -149.2457, -171.5188, -154.6557, -147.2327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-146.9840, -149.2073, -172.6656, -155.9799, -146.7699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-146.1559, -149.2783, -174.5521, -158.3749, -146.4146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-145.7252, -149.2506, -175.9119, -160.1459, -146.2049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-144.8455, -149.3090, -177.7016, -162.6071, -146.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-143.9689, -149.4360, -179.2628, -164.8154, -146.1091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-143.1413, -149.7234, -180.3114, -166.4939, -146.3189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-142.5402, -150.0284, -180.5073, -166.9823, -146.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-142.2679, -150.2091, -180.4263, -166.9376, -146.7294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-142.0366, -150.3434, -180.1719, -166.6081, -146.8543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-141.8431, -150.4624, -178.9363, -164.9850, -147.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-142.1288, -150.2576, -177.5175, -162.8257, -147.0481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-142.5635, -150.0271, -176.5616, -161.2544, -146.8632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-143.0860, -149.6847, -175.1081, -159.1543, -146.8713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-144.0045, -149.2130, -173.2340, -156.6405, -147.0100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-144.8313, -148.6941, -171.9993, -155.0625, -147.0351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-145.7178, -148.2234, -171.0495, -153.9190, -147.0280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-146.0340, -147.8567, -170.9087, -153.8577, -146.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-146.2059, -147.5656, -170.8704, -153.8404, -146.8061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-145.6776, -147.4456, -171.4494, -154.5533, -146.6781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-145.1942, -147.3176, -172.0860, -155.3640, -146.4261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-145.1287, -147.1297, -172.3658, -155.6850, -146.2260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-144.8408, -146.9722, -172.7575, -156.3183, -146.1044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-144.6969, -146.8497, -172.9911, -156.7395, -146.0216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-145.1516, -146.7252, -172.7764, -156.5353, -145.8900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-145.1489, -146.6996, -173.0151, -156.9272, -145.8047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-144.9437, -146.6421, -173.6563, -157.7573, -145.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-144.9483, -146.5190, -173.6111, -157.7899, -145.6803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-144.8019, -146.4520, -173.9139, -158.2148, -145.6260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-144.8086, -146.2953, -173.5724, -157.8665, -145.6568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-144.3025, -146.2445, -173.9645, -158.5789, -145.7087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-143.6326, -146.2019, -174.4447, -159.3599, -145.7564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-143.4013, -146.2039, -174.4907, -159.5406, -145.8813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-142.9994, -146.2421, -174.8099, -159.9838, -145.9480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-142.9725, -146.2799, -174.2959, -159.3424, -146.1153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-143.3160, -146.2664, -173.5799, -158.5128, -146.2199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-143.6786, -146.3423, -172.9707, -157.8233, -146.2120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-143.8769, -146.4735, -172.2894, -156.9867, -146.2566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-143.6358, -146.5746, -171.6981, -156.3674, -146.4950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-142.9493, -146.7345, -171.6518, -156.3891, -146.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-142.4988, -146.9528, -171.2253, -156.0936, -147.2132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-142.0414, -147.2161, -170.7209, -155.6973, -147.7716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-141.7449, -147.5633, -170.1879, -155.3597, -148.4203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-141.2954, -148.0725, -169.8835, -155.4588, -149.3019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-140.6009, -148.6261, -169.9504, -156.0894, -150.1958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-140.0616, -148.9550, -170.1301, -156.7794, -150.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-139.6066, -148.7659, -170.4983, -157.4318, -150.5004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-139.0031, -148.1322, -171.5485, -158.8506, -149.4545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-138.8475, -147.4490, -172.4369, -160.0167, -148.1845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-138.7006, -146.9984, -173.9701, -162.0682, -146.9107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-139.4478, -146.6882, -174.6757, -162.8339, -145.8335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-140.9668, -146.6366, -174.2032, -161.9428, -145.1583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-143.2584, -146.8451, -172.9116, -160.1446, -144.9772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-145.8642, -147.3001, -171.3524, -158.0776, -145.1450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-147.8729, -147.7708, -170.1901, -156.5841, -145.4354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-148.4598, -147.9262, -169.6117, -155.7974, -145.4576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-147.8205, -147.6354, -169.1825, -155.1533, -145.3052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-146.1590, -147.0800, -168.8814, -154.7469, -145.1933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-143.6639, -146.6749, -169.3626, -155.1991, -145.1387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-141.2531, -146.6709, -170.4465, -156.4695, -145.4112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-139.6371, -146.9849, -171.4709, -157.8509, -145.8760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-138.2560, -147.4953, -173.3368, -160.6329, -146.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-137.4662, -148.0714, -175.0803, -163.2959, -146.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-137.1073, -148.6808, -176.9511, -166.0427, -146.0445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-137.0792, -149.0346, -178.5848, -168.2671, -145.9386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-137.2261, -149.2452, -179.8480, -169.8416, -145.7549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-137.5095, -149.2411, -180.7516, -170.6849, -145.4995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-138.1181, -148.9990, -180.9803, -170.2509, -144.8840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-138.6499, -148.5683, -179.9023, -168.4009, -144.4162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-139.2517, -148.1856, -178.6984, -166.5396, -144.0087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-139.5827, -147.9125, -177.4204, -164.7802, -143.8413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-140.0951, -147.5404, -175.6555, -162.4881, -143.6911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-140.8568, -147.1937, -173.8125, -160.1189, -143.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-141.4505, -146.8821, -171.8792, -157.7241, -143.8170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-142.0924, -146.7765, -170.4181, -155.9884, -144.0492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-142.5727, -146.7933, -169.5134, -155.0074, -144.2523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-142.4457, -146.9579, -169.0681, -154.6176, -144.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-141.5534, -147.3854, -169.5724, -155.2267, -145.0918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-140.7105, -147.8041, -170.0994, -155.8289, -145.3847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-140.3222, -148.1651, -170.0986, -155.8452, -145.6156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-139.9151, -148.4198, -170.2210, -155.9859, -145.7695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-139.6333, -148.4733, -170.3203, -156.0821, -145.6955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-139.1179, -148.5592, -170.8879, -156.8095, -145.5444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-138.9019, -148.4843, -171.0943, -157.0379, -145.1818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-138.4957, -148.5143, -171.7853, -157.8708, -144.7927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-138.2654, -148.4306, -172.4851, -158.6313, -144.1722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-138.3561, -148.1932, -172.7015, -158.7523, -143.4182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-138.4047, -148.0637, -172.4590, -158.3623, -143.0200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-138.3529, -147.9740, -171.7699, -157.4286, -142.9627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-138.0426, -147.9645, -171.6653, -157.3360, -142.9112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-138.0361, -147.6727, -170.8591, -156.4852, -142.8226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-138.4406, -147.2034, -169.7951, -155.2123, -142.6693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-138.8013, -146.7996, -168.8201, -154.2062, -142.6675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-138.7642, -146.6470, -168.2593, -153.7255, -142.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-138.6539, -146.5951, -167.6475, -153.3321, -143.3640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-138.8392, -146.4971, -166.8779, -152.8280, -143.7799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-138.7528, -146.4109, -166.7062, -152.9476, -144.0551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-138.7132, -146.1309, -166.8042, -153.3005, -144.0390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-138.2759, -145.9053, -167.2728, -154.1265, -144.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-138.1810, -145.5999, -167.5860, -154.7300, -143.9530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-137.9057, -145.2845, -168.3378, -155.8418, -143.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-137.5849, -144.9946, -169.0131, -156.7638, -143.4860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-137.4843, -144.7757, -169.2579, -157.0577, -143.5774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-137.6373, -144.5005, -169.1343, -156.9897, -143.6689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-137.4127, -144.5081, -169.1842, -157.0777, -144.0659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-137.1155, -144.6799, -169.4277, -157.2257, -144.4866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-136.5874, -145.2154, -169.8751, -157.7012, -145.3588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-136.3471, -145.3837, -170.3596, -158.2344, -145.6368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-136.2793, -145.2710, -170.9257, -158.7799, -145.3798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-136.5392, -144.8999, -171.1645, -158.8258, -144.7069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-137.1488, -144.3978, -170.8906, -158.2251, -143.8650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-137.8710, -144.0300, -170.2530, -157.2149, -143.3015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-138.8556, -143.7333, -169.4561, -156.0176, -142.7446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-139.3874, -143.5323, -169.0467, -155.2902, -142.4135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-139.3473, -143.4892, -169.2013, -155.3437, -142.3422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-139.1651, -143.5560, -169.1601, -155.2392, -142.4875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-138.7762, -143.6757, -169.2882, -155.3369, -142.7194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-138.1558, -144.0012, -170.0192, -156.0274, -142.8537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-137.0906, -144.6932, -171.3164, -157.5237, -143.4252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-136.3918, -145.3733, -172.3399, -158.7536, -144.0228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-135.7881, -146.0774, -173.1691, -159.9127, -144.6276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-135.5548, -146.2359, -173.6511, -160.3230, -144.5191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-135.5886, -146.0514, -173.4374, -159.6034, -144.1458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-135.8224, -145.7627, -172.7852, -158.0858, -143.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-136.2469, -145.4702, -171.7612, -156.1376, -142.9387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-136.7254, -145.0727, -170.9980, -154.5400, -142.1619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-137.1509, -144.8255, -170.3319, -153.1313, -141.5512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-137.5529, -144.5777, -169.8646, -152.0926, -140.8570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-137.9573, -144.3523, -169.3846, -151.1228, -140.2095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-138.1859, -144.1785, -169.1846, -150.6782, -139.7608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-138.5008, -143.8344, -168.5959, -149.9740, -139.5011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-138.9765, -143.4417, -167.8184, -149.1223, -139.2644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-139.3731, -143.0291, -167.2917, -148.6506, -139.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-139.0580, -142.9323, -167.1408, -148.7080, -139.3868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-138.1952, -143.0367, -167.7618, -149.6257, -139.7937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-136.9624, -143.3204, -169.3608, -151.8782, -140.2870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-136.2057, -143.3293, -170.6829, -153.7675, -140.4001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-135.6549, -143.1720, -171.7155, -155.4565, -140.4225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-135.0216, -143.2975, -172.8574, -157.3166, -140.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-134.6549, -143.3302, -173.9062, -158.9013, -140.6188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-134.5636, -143.1337, -174.7526, -159.9592, -140.2409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-134.8076, -142.7293, -175.3282, -160.3376, -139.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-135.3801, -142.1879, -174.8998, -159.3377, -138.6795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-136.0951, -141.5611, -173.4154, -157.2176, -138.0960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-136.8275, -140.8937, -171.3304, -154.5936, -137.6820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-137.9614, -140.2980, -169.1046, -151.9085, -137.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-138.7299, -139.8512, -167.0909, -149.6951, -137.2977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-139.2163, -139.4265, -165.2444, -147.8433, -137.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-138.7467, -139.1893, -164.5473, -147.3008, -138.0337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-137.6852, -139.1992, -164.2971, -147.3851, -138.7926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-136.8833, -139.4186, -164.1065, -147.4963, -139.7235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-136.0058, -139.5538, -164.5966, -148.2978, -140.3089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-135.0043, -139.6853, -165.5165, -149.5739, -140.8681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-133.9936, -140.0603, -166.5921, -151.0532, -141.6874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-133.2887, -140.4731, -167.5014, -152.4029, -142.3517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-132.8535, -140.4253, -167.9782, -153.3878, -142.4206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-132.4019, -140.1783, -168.7071, -154.5544, -142.0121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-132.2961, -139.4833, -169.1949, -155.2403, -140.7226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-132.1978, -139.1374, -169.8474, -156.0836, -139.7310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-132.2527, -138.8893, -170.5584, -156.9339, -138.7794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-132.2793, -138.8815, -171.3896, -157.8400, -138.0314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-132.7134, -138.8532, -171.4421, -157.9063, -137.2816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-133.2273, -138.9885, -171.3261, -157.8931, -136.7521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-133.7703, -139.1811, -170.8630, -157.5412, -136.3527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-133.9682, -139.1994, -170.0901, -157.1435, -136.2005],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-133.4658, -139.0853, -169.3659, -156.9859, -136.3163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-133.1082, -138.9887, -168.5952, -156.5960, -136.3495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-132.4904, -138.7384, -167.7771, -156.4073, -136.6955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-131.6823, -138.5542, -167.5247, -156.8209, -137.2333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-130.8054, -138.5293, -167.7865, -157.8139, -137.8813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-130.1007, -138.6388, -167.7823, -158.4596, -138.8353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-129.4268, -139.0272, -168.3098, -159.6280, -139.9990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-129.3592, -139.0890, -167.9674, -159.4608, -140.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-129.4025, -139.3215, -167.3329, -158.8160, -141.2476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-129.9153, -139.2523, -165.8175, -156.8453, -141.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-130.3891, -139.1387, -164.6091, -155.2645, -141.3545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-131.3185, -138.5951, -162.7964, -153.0817, -140.5662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-133.2777, -137.8777, -160.1335, -150.2427, -139.5208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-136.3494, -137.6947, -157.5299, -147.7344, -138.8727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-138.6272, -137.9260, -156.2941, -146.5182, -138.6230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-139.5595, -138.2024, -155.7926, -146.0874, -138.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-138.0934, -137.8175, -156.4643, -146.4836, -137.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-136.6351, -137.4984, -157.3607, -147.2367, -137.1707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-134.6125, -137.0252, -158.6920, -148.6567, -136.6874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-132.1809, -136.6847, -160.7550, -150.9046, -136.5317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-130.0470, -136.6522, -163.5959, -154.1166, -136.6576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-128.1264, -137.3506, -167.0461, -158.4102, -137.7710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-127.2253, -138.2813, -169.7853, -162.1727, -139.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-126.7354, -139.0559, -172.0315, -165.5709, -140.2128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-126.5179, -139.1067, -173.1839, -167.0595, -140.0117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-126.4092, -138.8932, -173.8961, -167.8273, -139.5867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-126.3983, -138.7370, -173.3624, -167.0780, -139.2046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-126.4892, -138.3307, -172.2336, -165.6197, -138.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-126.7750, -137.9347, -170.4402, -163.2563, -137.7862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-127.1614, -137.6621, -168.9830, -161.2870, -137.2285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-127.6689, -137.3738, -167.6401, -159.3612, -136.6980],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-127.9750, -137.3135, -166.8780, -158.3795, -136.5429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-128.2529, -137.3620, -166.1362, -157.4952, -136.8177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-128.6683, -137.5300, -165.3013, -156.2672, -137.0852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-128.9692, -137.6963, -164.5970, -155.2324, -137.1265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-129.5295, -137.6388, -163.3753, -153.5311, -136.9036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-129.9582, -137.7742, -162.4906, -152.3771, -137.1212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-130.4193, -137.7808, -161.7060, -151.3355, -137.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-131.3063, -137.5969, -160.3012, -149.6797, -137.2675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-131.6751, -137.3635, -159.7047, -149.0824, -137.1986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-131.4671, -137.2248, -159.9174, -149.5392, -137.3405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-131.1590, -136.6298, -160.3383, -150.2383, -136.9581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-130.4647, -135.9043, -161.5077, -151.8855, -136.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-129.9477, -135.3266, -162.4123, -153.3391, -136.0015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-129.2182, -134.8420, -163.7342, -155.3192, -135.7235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-128.7019, -134.4841, -164.6840, -156.7573, -135.6986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-128.0553, -134.1110, -165.8937, -158.4468, -135.6981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-127.4012, -133.8570, -167.4144, -160.4919, -135.7955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-127.0716, -133.4045, -167.8458, -161.1637, -135.9043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-126.9226, -132.8192, -167.9393, -161.3006, -135.8018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-126.8601, -132.3400, -167.4254, -160.7097, -135.7212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-127.0380, -131.7126, -166.7259, -159.8277, -135.2041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-127.4210, -131.1521, -165.6918, -158.5313, -134.6461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-127.8981, -130.7870, -164.6683, -157.2582, -134.1872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-128.3990, -130.6441, -163.3900, -155.5999, -133.8592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-128.5892, -130.7158, -161.8852, -153.9125, -134.0946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-128.5589, -130.9761, -160.7881, -152.6268, -134.5116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-128.9341, -131.3439, -159.2365, -150.7780, -134.9691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-128.8952, -132.1440, -158.5036, -149.7895, -136.1152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-128.5920, -133.0390, -158.7091, -149.8569, -137.3607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-128.3511, -133.9014, -159.0755, -150.1701, -138.5697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-128.1190, -134.7195, -159.3750, -150.3808, -139.6472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-127.7698, -135.7267, -160.0314, -151.1043, -140.9178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-127.3565, -136.2388, -160.4481, -151.5027, -141.4018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-126.7375, -136.0558, -160.7791, -151.7837, -140.9676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-126.2709, -135.1325, -160.4785, -151.6731, -139.6921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-125.7291, -133.6004, -160.0507, -151.4999, -137.6358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-125.4429, -132.6980, -159.7131, -151.3127, -136.4154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-124.9699, -131.9811, -159.9540, -151.8322, -135.4285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-124.5273, -131.4144, -160.3311, -152.4228, -134.5998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-124.2710, -131.0686, -160.4022, -152.6826, -133.9477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-124.2101, -130.6585, -160.3208, -152.6312, -133.1774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-124.3919, -130.4796, -159.6500, -152.0612, -132.6111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-124.1105, -130.6626, -159.5585, -152.1832, -132.5624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-123.9599, -130.8651, -159.3410, -151.9906, -132.5315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-123.6817, -131.1306, -159.3409, -152.0115, -132.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-123.5809, -131.4106, -158.8110, -151.5973, -132.8724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-123.5337, -131.7290, -158.2986, -151.1293, -133.3175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-123.4509, -132.3999, -157.9424, -150.6830, -134.0631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-123.5363, -133.4301, -157.5371, -150.0893, -135.2257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-123.9249, -134.1298, -156.6776, -149.1011, -135.9270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-123.9923, -134.8910, -156.4466, -148.7788, -136.7375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-123.6682, -135.6359, -157.0105, -149.1937, -137.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-123.3991, -136.4416, -157.6231, -149.6554, -138.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-123.0848, -136.9799, -158.1820, -150.0563, -139.4318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-122.9121, -136.6016, -157.9066, -149.7537, -138.8377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-122.6653, -136.1905, -157.7048, -149.5913, -138.2308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-122.3653, -135.5982, -157.4918, -149.4693, -137.3627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-121.9700, -135.1266, -157.6618, -149.7829, -136.4744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-121.5083, -134.6904, -158.0501, -150.3713, -135.7173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-120.8498, -134.3511, -159.0232, -151.6103, -134.8324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-120.7008, -133.5480, -158.6973, -151.6980, -133.2938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-120.5667, -133.1945, -158.8827, -152.2382, -132.1167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-120.6492, -133.0349, -158.6820, -152.2763, -131.0700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-120.6471, -133.1677, -158.5224, -152.3695, -130.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-120.6102, -133.3436, -158.5950, -152.7886, -129.8045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-120.8938, -133.5975, -157.7979, -152.3091, -129.3663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-121.4868, -133.8869, -156.4306, -151.2789, -128.9245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-122.1312, -134.4302, -154.8638, -149.9969, -128.9631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-122.4763, -135.2357, -153.7777, -149.2364, -129.5440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-122.7113, -136.2252, -153.0206, -148.7849, -130.6340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-122.8855, -137.2984, -152.7496, -148.8396, -132.0355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-122.9387, -138.5087, -153.0971, -149.6171, -133.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-123.4336, -139.8746, -153.0328, -150.0601, -135.7794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-123.8322, -141.0665, -153.2761, -150.8567, -137.5749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-124.0026, -141.8955, -153.6899, -151.7558, -138.7161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-124.3414, -142.3128, -153.4006, -151.8221, -139.1474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-124.6703, -142.5895, -152.8826, -151.4588, -139.2637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-124.9611, -142.3585, -151.9958, -150.6819, -138.7164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-124.1341, -141.2981, -152.3170, -150.8444, -137.1542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-123.2895, -140.5506, -153.0036, -151.5585, -136.0516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-122.2586, -139.8735, -154.2865, -152.9164, -135.2499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-121.4031, -139.5500, -155.9661, -154.7536, -135.1401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-120.7396, -139.7331, -158.0324, -157.0899, -135.8100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-120.4923, -139.8638, -159.2930, -158.4657, -136.2934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-120.4187, -139.8122, -159.7390, -158.6909, -136.3227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-120.5452, -140.1672, -160.1990, -158.9443, -136.8303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-120.4807, -139.9938, -160.3014, -158.8827, -136.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-120.5841, -139.9944, -160.3460, -158.6957, -136.5360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-120.4556, -139.2294, -159.9185, -158.0725, -135.5629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-120.4795, -138.6194, -159.3250, -157.2802, -134.8810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-120.7061, -138.5312, -158.9117, -156.7495, -134.9028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-121.2230, -138.7564, -157.9362, -155.4545, -135.2498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-121.7172, -139.1119, -157.3037, -154.7555, -136.0539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-122.1059, -139.3106, -156.8636, -154.3378, -136.6528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-122.5435, -139.7322, -156.7356, -154.3692, -137.6764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-123.1554, -140.3682, -156.4361, -154.3371, -138.9109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-123.4623, -140.2907, -156.1509, -154.4583, -139.4385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-123.7127, -140.0877, -155.7690, -154.4966, -139.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-123.8713, -139.6853, -155.3849, -154.5954, -139.5585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-123.8434, -138.8781, -154.9744, -154.5113, -138.9079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-123.7400, -138.2445, -154.9677, -154.8058, -138.4260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-123.5144, -137.4606, -154.6686, -154.8470, -137.6887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-123.4085, -137.1648, -154.6712, -155.1039, -137.4582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-123.4449, -136.9772, -154.5391, -155.2144, -137.4290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-123.1543, -136.4833, -154.5667, -155.4707, -137.0740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-122.4916, -135.3247, -154.3715, -155.4653, -135.6990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-122.1614, -134.6851, -154.2532, -155.4507, -134.9990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-122.1685, -134.2431, -153.5954, -154.9626, -134.4990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-122.3210, -133.7210, -152.5280, -154.0210, -133.7458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-122.4057, -133.4142, -151.9449, -153.5671, -133.3359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-122.5917, -133.3880, -151.4276, -153.1788, -133.1546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-122.3650, -133.8339, -152.3640, -154.2594, -133.8549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-122.7268, -135.0493, -153.1771, -155.1458, -135.4607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-123.3605, -136.6951, -154.1226, -156.0308, -137.5017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-124.0654, -138.2471, -154.9122, -156.7193, -139.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-125.0130, -140.2470, -155.7543, -157.6354, -141.7297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-126.0099, -142.0874, -155.6254, -157.4010, -143.6823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-126.4482, -143.1339, -155.7502, -157.4795, -144.5851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-126.6471, -143.8308, -156.3172, -157.9182, -145.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-126.2147, -143.1409, -155.8512, -157.2519, -143.9737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-125.7416, -142.1416, -154.6519, -155.9064, -142.2782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-124.9876, -140.4362, -153.1181, -154.3014, -139.7062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-123.9281, -138.5112, -152.0495, -153.1939, -136.6062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-122.8316, -136.7364, -151.3755, -152.4688, -133.6256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-122.1925, -135.9156, -150.8590, -151.7831, -131.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-121.5021, -135.3443, -150.9168, -151.5284, -129.8433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-121.0519, -134.9404, -151.0236, -151.3113, -128.4281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-120.7349, -134.6250, -151.0968, -151.2847, -127.4530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-120.5538, -134.4812, -151.1016, -151.2300, -126.5703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-120.2967, -134.2880, -151.0898, -151.3494, -126.7001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-119.9892, -134.0007, -151.3239, -151.6567, -127.1012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-119.9591, -134.1406, -151.2395, -151.6008, -127.7166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-120.1432, -134.4554, -150.9738, -151.4300, -128.4451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-120.5961, -135.4411, -150.8060, -151.4060, -129.9800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-121.3753, -136.7769, -150.4083, -151.0885, -131.7841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-122.1477, -138.1490, -150.3261, -151.2487, -133.7699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-122.9524, -139.4821, -149.9223, -151.0186, -135.3562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-123.6196, -140.8130, -149.7641, -151.0869, -136.8407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-124.0139, -142.2739, -151.0714, -152.5715, -138.9889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-124.4322, -143.6493, -152.5947, -154.3407, -141.0523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-124.3556, -143.6552, -153.2729, -155.2570, -141.3245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-123.9415, -142.9226, -153.8554, -155.9184, -140.6977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-123.2197, -141.8029, -154.9345, -157.0547, -139.6511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-122.2110, -140.0467, -155.0278, -157.1765, -137.7452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-121.2726, -138.3366, -155.2833, -157.5256, -135.9143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-120.3359, -136.7614, -154.6741, -156.9892, -134.0174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-119.6201, -135.7548, -154.3263, -156.6867, -132.8433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-118.9474, -134.7076, -153.9035, -156.4270, -131.5718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-118.4905, -133.9410, -152.6724, -155.0004, -130.2219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-118.4431, -133.7494, -151.2434, -153.3851, -129.3514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-118.9762, -134.3641, -149.7231, -151.9831, -129.5257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-119.9289, -135.6854, -148.2883, -150.6618, -130.3873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-121.1597, -137.5727, -147.2617, -149.7943, -132.1263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-122.3566, -139.5583, -146.5262, -149.3756, -134.0976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-123.4155, -141.4045, -145.8616, -149.1756, -135.9190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-124.4231, -143.5987, -145.7971, -149.5975, -138.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-124.5537, -144.8792, -146.7500, -150.6541, -140.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-124.4135, -145.6863, -148.1366, -152.1737, -141.9911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-123.9790, -145.5305, -148.9202, -153.0069, -142.2568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-123.5514, -145.1602, -149.4892, -153.7318, -142.3023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-122.3708, -143.4672, -150.2820, -154.3666, -140.7791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-121.2258, -141.8923, -151.0686, -155.2281, -139.2947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-120.3070, -140.8290, -151.6275, -156.1010, -138.1693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-119.4457, -139.7314, -151.9588, -156.8241, -136.9293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-118.7643, -138.9279, -152.4128, -157.6420, -136.0548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-118.2604, -138.2945, -152.2392, -157.8671, -135.1116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-117.8084, -137.7207, -152.2813, -158.3473, -134.3093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-117.2628, -137.0928, -152.1869, -158.5508, -133.3136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-116.6378, -136.2932, -151.7018, -158.3258, -132.0412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-115.9262, -135.2690, -151.0721, -157.7821, -130.3919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-115.3596, -134.3260, -150.9526, -157.7299, -129.2067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-114.9106, -133.7831, -151.1183, -157.9901, -128.4477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-114.2518, -132.9706, -151.9757, -159.1280, -127.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-113.8252, -132.5520, -152.3151, -159.5507, -127.3931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-114.1125, -133.1114, -151.8758, -159.2662, -127.8312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-114.8989, -134.3422, -151.3205, -158.9108, -129.2539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-115.7260, -135.5391, -150.9704, -158.6621, -130.7793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-116.5158, -136.5653, -151.1073, -159.1407, -132.6318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-117.1654, -137.4233, -151.0169, -159.5360, -134.4105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-118.0964, -138.7243, -150.5952, -159.4809, -136.5602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-118.9343, -139.9275, -150.3763, -159.5684, -138.5067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-119.6703, -141.0493, -149.9297, -159.4300, -139.9438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-120.5664, -142.4524, -149.5803, -159.4352, -141.7110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-121.6974, -144.3082, -149.3925, -159.6633, -144.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-122.2058, -145.0613, -149.0136, -159.6305, -144.9725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-122.4031, -145.3905, -148.6086, -159.4957, -145.4919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-122.1536, -144.9780, -148.2310, -159.2697, -145.0975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-121.7674, -144.4144, -147.9547, -159.1726, -144.5729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-121.1162, -143.5275, -147.7707, -159.1321, -143.7683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-120.3974, -142.6957, -147.4022, -158.8241, -142.8055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-119.5922, -141.9782, -147.1005, -158.3396, -141.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-118.7768, -141.5538, -147.9144, -158.9889, -141.6307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-118.1933, -141.2217, -147.7966, -158.6119, -141.1041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-117.6052, -140.5474, -146.6704, -157.3192, -139.5569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-117.4017, -140.5249, -146.0288, -156.6411, -138.9871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-116.6494, -139.6629, -145.9333, -156.5798, -137.9353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-115.8135, -138.5884, -145.5825, -156.1944, -136.3167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-114.9204, -137.4499, -145.4446, -156.0826, -134.8367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-114.0273, -136.2580, -145.5600, -156.3500, -133.6012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-114.0113, -136.4529, -144.9708, -155.9254, -133.3778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-113.8600, -136.3930, -144.4667, -155.5751, -132.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-113.5018, -136.0929, -144.3200, -155.8983, -132.5658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-113.4480, -136.8283, -144.0239, -156.0294, -133.0551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-113.2249, -137.4903, -144.1993, -156.8467, -134.1602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-113.4901, -138.9941, -144.0527, -157.4013, -135.7563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-113.6192, -140.1773, -144.0732, -158.2003, -137.2821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-114.0574, -141.8228, -144.0683, -159.0998, -139.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-114.5698, -143.7286, -144.7085, -160.6681, -141.7690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-115.4251, -145.8250, -145.5943, -162.4545, -144.8196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-116.6231, -148.3970, -146.5731, -164.2017, -148.3133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-117.7728, -150.4523, -148.4581, -166.6684, -151.9026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-118.7232, -152.1411, -149.7640, -168.5711, -154.3631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-118.6609, -152.2032, -150.2495, -169.4742, -154.5208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-118.0618, -151.3324, -150.4994, -170.0459, -153.5824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-117.2445, -150.3042, -150.5424, -170.3083, -152.2330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-116.0642, -148.8826, -150.4850, -170.3960, -150.4862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-114.7979, -147.3650, -149.9439, -170.0728, -148.4083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-113.8816, -146.8769, -148.9727, -169.3303, -146.9990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-113.4814, -146.4028, -148.7565, -169.3592, -146.3497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-113.0770, -146.4090, -147.9098, -168.7259, -145.6551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-112.8187, -146.6223, -147.2732, -168.3267, -145.3070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-112.4603, -146.5330, -146.5848, -167.6884, -144.5874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-111.8087, -145.6890, -145.9125, -166.9009, -143.1950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-111.2675, -144.8402, -145.5475, -166.5052, -142.2259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-110.8157, -143.8569, -145.1665, -166.5181, -141.3771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-110.2224, -142.5248, -144.9950, -166.6169, -140.3040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-110.2324, -142.5518, -144.3241, -166.0196, -140.0349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-110.5761, -143.2314, -144.0833, -166.0492, -141.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0632, device='cuda:0', dtype=torch.float64)
tensor([-111.1195, -144.8377, -143.5371, -165.3154, -142.0893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-111.9510, -147.2196, -143.5037, -165.1046, -144.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-112.8523, -149.7133, -144.0111, -165.7271, -147.4821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-113.6931, -152.1400, -144.7519, -166.5640, -150.6557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-114.2823, -154.0518, -145.2786, -167.1126, -152.9111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-115.2879, -156.8727, -145.6959, -167.6808, -155.8437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-115.0811, -157.2151, -145.4392, -167.3873, -155.6334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-114.0749, -155.9049, -145.6124, -167.3254, -154.1038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-113.1732, -154.4903, -145.9369, -167.3964, -152.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-111.7988, -151.8686, -146.5268, -167.5690, -149.8921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-110.9604, -150.0004, -146.6704, -167.5875, -147.7280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-110.2447, -148.3192, -146.5976, -167.7679, -145.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-109.0860, -145.8828, -146.2848, -167.8184, -142.6277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-108.1130, -143.7507, -146.6007, -168.5862, -140.5250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-107.4518, -142.5453, -146.5162, -168.9002, -139.0222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-106.9319, -141.5564, -146.2314, -169.0309, -137.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-106.3817, -140.3940, -145.8817, -168.9678, -136.1874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-105.8891, -139.2779, -145.7589, -168.9376, -134.6956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-105.7949, -139.3203, -145.3388, -168.6963, -134.1216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-106.0414, -140.1207, -144.5370, -168.1851, -134.1663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-106.5788, -141.5971, -143.8648, -168.0066, -135.0880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-107.3763, -144.0599, -142.9975, -167.6444, -136.5935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-107.9639, -146.1424, -142.6287, -167.7479, -138.1441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-108.1467, -147.7263, -143.1667, -169.0415, -139.9119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-108.6960, -149.5725, -144.1726, -170.9648, -142.4387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-109.2078, -150.7069, -145.3550, -172.9809, -144.4926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-109.7468, -152.0585, -146.3931, -174.6652, -146.4632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-110.4362, -154.0146, -146.7805, -175.5703, -148.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-111.1230, -156.2868, -146.8791, -176.1888, -150.4596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-111.7641, -158.6804, -146.7893, -176.3841, -152.2941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-111.5977, -159.6462, -146.1971, -175.7476, -152.3189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-111.1703, -160.6065, -144.8800, -174.2332, -151.7898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-111.2323, -162.3445, -143.8795, -173.1694, -152.0347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-111.1884, -163.0573, -143.2689, -172.5002, -151.9259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-110.9478, -162.4176, -143.1895, -172.4073, -151.4686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-110.7872, -162.0759, -143.2532, -172.5195, -151.2786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-110.5497, -161.2708, -143.0503, -172.2264, -150.5446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-110.3009, -160.1874, -143.1016, -172.4175, -149.7672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-109.6207, -157.9041, -143.3998, -172.8095, -148.1209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-109.2816, -156.4822, -143.3539, -173.1044, -147.0192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-108.8317, -154.8018, -143.5824, -173.8609, -145.8321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-108.6210, -153.6338, -144.0671, -174.9987, -145.2956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-108.7468, -152.7495, -144.9594, -176.5075, -145.6044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-108.9945, -151.7069, -146.2051, -178.6023, -146.1248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-110.0824, -151.6886, -148.2821, -181.4818, -148.0318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-111.0375, -152.1198, -149.9171, -183.6050, -149.7300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-111.4097, -152.2815, -150.8443, -184.8976, -150.4788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-111.7383, -152.3972, -151.4583, -186.1498, -151.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-112.3683, -153.7553, -151.3550, -186.7859, -152.4543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-112.5267, -154.5718, -150.7470, -186.5494, -153.0592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-112.6274, -155.4898, -149.9876, -186.0944, -153.5867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-112.7169, -156.7134, -149.1228, -185.5403, -154.1894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-112.5362, -157.9196, -148.0338, -184.6754, -154.5916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-112.8132, -159.9941, -147.0115, -183.8321, -155.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-113.0575, -161.8072, -146.1821, -183.0295, -156.5305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-113.7787, -164.2162, -145.7125, -182.7678, -158.2853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-114.7955, -167.4782, -145.2828, -182.5477, -160.7059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-114.5873, -168.4847, -144.6186, -181.8226, -160.6384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-114.4986, -168.9646, -144.2568, -181.4150, -160.3659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-113.6197, -167.0083, -143.9247, -181.1625, -158.0899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-112.8382, -165.1946, -143.7047, -181.0036, -156.0318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-112.3755, -163.7842, -143.7746, -181.2403, -154.6624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-111.8344, -162.0969, -143.9245, -181.6959, -153.2558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-111.0482, -160.6990, -143.6720, -181.5633, -151.5895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-110.1959, -159.6320, -143.0502, -180.7381, -149.8936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-109.6696, -158.9659, -142.5871, -179.9831, -148.9111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-109.5730, -159.4974, -142.2820, -179.3850, -149.0378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-109.5997, -159.2878, -142.5088, -179.5569, -149.1356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-109.7707, -158.7916, -143.0953, -180.1752, -149.2564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-110.0945, -159.0158, -143.5526, -180.4799, -149.7160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-111.1882, -159.9315, -144.8216, -181.8479, -151.5554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-112.1982, -160.9540, -145.9167, -182.8345, -153.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-113.6602, -161.6996, -147.6408, -184.6779, -155.3207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-115.3478, -163.1640, -148.9826, -186.3496, -157.9592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-116.2985, -164.5736, -149.2337, -186.7694, -159.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-116.6294, -165.4592, -149.0505, -186.6437, -160.0540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-116.6349, -166.2304, -148.4398, -185.9752, -160.1672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-115.5664, -165.6418, -147.4681, -184.8763, -158.5608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-114.2818, -164.5621, -146.5674, -183.8084, -156.5147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-113.0821, -163.9432, -145.5640, -182.5323, -154.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-111.7063, -163.0663, -144.5836, -181.0200, -152.5479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-111.0396, -163.7171, -143.7592, -179.7749, -151.6412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-111.0386, -165.7510, -143.1703, -178.7864, -152.0857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-111.1778, -166.7899, -143.0624, -178.5480, -152.3872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-112.0143, -169.6146, -143.0331, -178.3680, -154.3929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-113.1136, -172.5627, -143.2683, -178.6388, -156.9747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-113.7304, -173.4688, -143.3317, -178.8417, -157.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-114.2022, -172.4757, -143.6820, -179.6778, -158.1031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-115.3483, -172.5022, -144.2507, -180.9465, -159.3335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-116.5494, -172.2394, -145.0140, -182.5908, -160.4645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-117.1693, -171.6893, -145.4152, -183.6871, -160.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-117.5061, -171.3163, -145.7442, -184.7290, -160.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-117.1722, -169.9922, -145.7022, -185.1334, -159.5333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-116.3895, -168.4118, -145.4277, -185.1531, -157.6654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-115.0378, -166.3440, -144.8797, -184.5782, -155.1340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-115.0232, -165.2468, -145.1449, -185.1389, -154.5816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-115.2750, -165.3071, -145.3348, -185.3618, -154.7818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-116.0841, -165.6358, -145.9074, -186.2152, -155.6444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-116.9703, -166.4235, -146.4476, -186.9813, -156.9611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-116.8389, -166.2700, -146.4654, -187.2997, -156.8961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-117.3837, -168.1899, -146.4037, -187.7262, -158.4378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-117.3537, -169.6905, -146.0253, -187.6709, -159.2377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-116.2905, -169.4102, -145.2829, -187.1959, -158.0164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-115.8201, -169.6676, -144.8229, -187.0250, -157.6331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-115.6972, -170.9400, -144.4422, -186.9302, -158.0820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-115.4387, -172.6890, -143.9557, -186.7329, -158.6617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-115.1793, -174.0648, -143.5431, -186.6934, -159.1154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-115.4033, -174.5884, -143.6535, -187.3810, -159.5896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-115.9561, -176.6225, -143.7748, -187.8263, -161.2227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-115.8280, -177.8839, -143.4484, -187.5109, -161.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-115.5952, -179.5107, -143.1788, -186.9417, -162.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-115.4189, -180.7340, -143.0064, -186.8065, -162.6487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-115.8480, -182.4213, -143.2676, -187.4437, -163.8739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-116.2925, -183.1389, -143.7450, -188.4226, -164.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-117.2475, -183.6357, -144.6749, -189.7275, -165.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-117.5100, -182.6779, -145.3219, -190.5202, -165.2933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-118.1125, -181.7496, -146.1475, -191.6378, -165.4200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-119.1205, -182.3770, -146.9034, -192.4514, -166.5472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-119.0729, -182.4819, -147.0011, -192.4111, -166.3889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-118.7914, -182.4562, -146.9799, -192.2011, -165.8547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-117.6877, -181.3164, -146.5949, -191.4498, -164.0476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-117.0397, -179.0967, -146.7807, -191.7119, -162.2470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-116.3513, -177.6219, -146.6268, -191.7104, -160.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-115.1340, -176.9165, -145.9389, -190.7904, -159.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0839, device='cuda:0', dtype=torch.float64)
tensor([-114.3061, -175.9705, -145.6454, -190.2064, -158.8325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-113.5665, -173.5262, -145.7658, -190.4595, -157.5271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-112.8661, -172.7032, -145.6593, -190.1881, -156.7905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-112.6801, -171.9413, -145.8465, -190.4483, -156.3550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-112.5657, -170.6830, -146.1539, -191.0154, -155.7335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-112.1728, -170.3324, -146.1411, -191.0032, -155.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-112.4451, -171.2973, -146.1944, -191.3003, -156.0541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-112.7130, -171.8715, -146.2221, -191.7095, -156.4834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-112.8655, -172.5364, -146.2395, -192.1284, -156.9587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-112.2877, -172.0673, -145.8840, -192.0829, -156.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-111.3004, -171.8536, -145.1900, -191.4296, -155.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-110.3681, -172.4567, -144.4007, -190.7268, -154.9316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-110.2675, -175.2600, -143.6222, -190.1241, -155.9896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-111.3982, -179.0246, -143.5966, -190.8149, -158.8201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-112.3872, -181.9335, -143.6440, -191.6575, -161.3013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-114.7839, -185.7779, -144.5569, -193.9021, -165.4566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-117.3141, -189.9167, -145.6224, -196.1351, -169.8456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-119.4448, -193.0811, -146.6485, -198.0874, -173.6789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-122.0845, -196.9069, -147.8926, -200.1989, -178.3100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-124.9723, -201.6657, -149.2197, -202.1478, -183.6551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-126.5444, -205.2680, -149.7604, -203.1151, -186.9495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-126.0337, -205.8610, -149.1503, -203.0130, -186.7814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-123.9309, -203.4983, -147.7797, -202.1051, -183.5645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-121.3153, -200.5484, -146.2345, -200.8005, -179.4522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-119.2929, -198.1415, -145.1518, -199.9014, -176.3847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-116.1526, -191.9523, -143.7516, -198.6777, -170.4754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-112.9363, -185.1511, -142.5292, -197.3176, -164.3404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-110.7467, -180.1355, -141.8646, -196.4587, -160.2497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-109.6484, -175.2410, -142.0892, -197.0176, -157.3044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-110.4004, -172.4609, -143.4805, -199.3175, -157.1557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-111.9901, -171.8183, -145.3439, -201.5880, -159.1088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-113.9200, -172.7204, -147.4219, -203.6817, -162.1952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-115.9525, -174.9810, -149.4896, -205.5195, -166.2427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-117.8571, -178.5499, -150.8721, -206.6607, -170.4974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-119.3453, -182.8462, -151.6594, -207.2172, -174.5228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-120.5223, -187.2677, -152.1586, -207.6504, -178.0903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-120.3082, -191.0661, -151.7812, -207.1372, -180.0056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-120.4103, -195.1122, -151.3731, -206.8527, -181.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-119.4487, -198.6142, -150.4123, -205.8992, -182.2261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-117.5348, -200.5789, -149.4072, -204.5663, -181.2679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-115.7178, -202.4580, -148.5867, -203.4794, -180.6616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-114.6629, -204.2956, -148.3287, -203.1106, -180.7082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-113.7172, -207.0562, -148.2263, -202.8708, -181.5004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-113.5158, -210.0197, -148.6964, -203.4283, -183.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-113.6853, -211.3494, -149.5058, -204.3791, -184.4294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-114.5202, -211.4060, -150.3855, -206.0343, -185.0066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-115.1724, -210.2214, -150.8679, -207.4519, -184.4000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-116.5920, -210.9728, -151.6336, -209.5075, -185.7299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-116.9709, -209.7148, -151.8448, -211.1054, -184.8520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-117.0176, -208.9207, -151.8403, -212.4561, -184.1252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-116.5729, -207.3175, -151.6410, -213.7071, -182.6677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-115.7040, -205.1668, -151.0461, -214.4866, -180.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-115.4488, -202.6227, -151.1159, -215.9900, -179.2043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-115.0196, -199.6269, -151.2348, -217.3722, -177.6247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-114.5775, -197.5840, -151.3616, -218.4167, -176.3895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-114.7520, -197.4088, -151.6182, -219.7916, -176.3833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-115.6338, -197.3612, -152.1424, -221.9415, -177.1268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-117.1049, -199.3274, -153.0400, -224.3270, -179.4590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-118.6373, -201.6675, -153.8770, -226.7889, -181.6889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-120.6211, -205.4635, -154.4783, -229.1615, -184.4133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-122.1167, -208.7118, -155.1112, -231.0384, -186.8835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-123.6081, -211.9175, -155.6965, -232.7322, -189.5018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-124.5630, -215.9024, -155.8185, -233.4263, -191.9862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-125.8860, -221.4147, -156.2025, -234.0554, -195.6369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-127.0060, -226.3047, -156.6759, -234.5644, -199.3072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-126.6489, -229.5711, -156.3303, -234.2082, -201.1077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-125.4970, -231.7990, -155.5503, -233.4282, -201.8746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-122.3569, -233.2132, -153.9090, -231.0516, -201.1514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-120.6543, -235.7850, -153.0687, -229.7247, -202.4229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-119.8252, -236.7032, -152.7964, -229.6292, -203.3669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-119.3397, -235.7477, -152.7783, -230.1970, -203.1044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-120.4402, -236.5031, -153.8526, -231.9331, -205.1569],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-120.4292, -237.1895, -154.5664, -232.7670, -206.3420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-120.1628, -237.1107, -154.9872, -233.2676, -206.9053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-120.2656, -238.5186, -155.3465, -233.7287, -208.8825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-120.7853, -239.2175, -155.9282, -234.7852, -210.4888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-121.2306, -238.7393, -156.4498, -235.9432, -210.8943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-121.3193, -238.0154, -156.7599, -236.9694, -210.4883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-120.7401, -236.2672, -156.7675, -237.4746, -209.2723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-120.6831, -236.2044, -156.8423, -238.0922, -209.1460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-121.4008, -237.4643, -157.0987, -239.1556, -209.9513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-120.8865, -238.1541, -156.6392, -239.2316, -209.4171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-120.4333, -238.7609, -156.1850, -239.4128, -209.0087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-119.3729, -238.5045, -155.6765, -239.2193, -207.8204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-119.0260, -238.4292, -155.7722, -239.7667, -207.3044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-118.8819, -239.2664, -155.9085, -240.2698, -207.5289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-119.3067, -241.3555, -156.5663, -241.2187, -209.2768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-119.3604, -243.2711, -156.8165, -241.8129, -210.4909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-118.7694, -244.2754, -156.7463, -242.0983, -210.4698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-118.8146, -245.4719, -157.0086, -242.8344, -210.9774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-118.8739, -245.0042, -157.3084, -243.7671, -210.4095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-119.0837, -245.7816, -157.7668, -244.7241, -210.8654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-118.4946, -245.5683, -157.6899, -245.0099, -209.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-118.8563, -245.8078, -158.2986, -246.1354, -210.0405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-120.1104, -247.3548, -159.5070, -248.2229, -211.7540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-120.7669, -247.1845, -160.4938, -249.8825, -212.2579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-120.7467, -247.1624, -161.1128, -250.9001, -212.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-121.1391, -249.0266, -161.9989, -252.1440, -214.3041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-120.7220, -249.0178, -162.4669, -253.0419, -214.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-120.6105, -250.0742, -163.1254, -253.8693, -215.4164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0145, device='cuda:0', dtype=torch.float64)
tensor([-118.8296, -249.7725, -162.7468, -253.3413, -214.5367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-116.2200, -247.7936, -161.7225, -252.0086, -211.8442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-114.6293, -247.5539, -161.0921, -251.6511, -210.3878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-113.2359, -248.2222, -160.4262, -251.1680, -209.5171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-113.0570, -248.6891, -160.7564, -251.7251, -209.8603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-113.8227, -249.7871, -161.4523, -253.0897, -210.9998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-115.6479, -250.6718, -163.2025, -255.5305, -213.3019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-117.9287, -253.1602, -165.2097, -258.3383, -216.7726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-118.5902, -253.3636, -165.6157, -260.2804, -216.5159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-118.1010, -253.1277, -165.1205, -261.3348, -215.0769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-116.5174, -253.1635, -164.0215, -261.2622, -213.2190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-115.4933, -253.1922, -163.8204, -261.6533, -212.5780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-114.9985, -253.0496, -163.9889, -262.5525, -212.3427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-115.7327, -252.9357, -164.9300, -264.6715, -213.2542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-117.5656, -253.1330, -166.7782, -267.7349, -215.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-119.3206, -255.4611, -168.4243, -270.5572, -219.1024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-119.5295, -257.1234, -168.6787, -271.9134, -220.1038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-120.6978, -259.2077, -169.3282, -274.3042, -221.8205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-123.0108, -262.9884, -170.7928, -277.6491, -225.5327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-123.4741, -265.7130, -171.2424, -279.2211, -227.2517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-123.0505, -267.6851, -170.8513, -280.3238, -227.4287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-121.7656, -269.0807, -169.8089, -280.3326, -227.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-119.9973, -270.3567, -168.3947, -279.6007, -226.3938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-119.6642, -272.5195, -168.0854, -280.0965, -227.5296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-120.2744, -276.4947, -168.6246, -281.3991, -230.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-119.4159, -278.3646, -168.4115, -281.4545, -231.7733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0144, device='cuda:0', dtype=torch.float64)
tensor([-119.2901, -281.6742, -168.6849, -282.0568, -234.4922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-118.6607, -283.4107, -168.6338, -282.3126, -235.5425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-118.0903, -284.2028, -168.7565, -282.4910, -236.3693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-117.7663, -283.6131, -169.2799, -283.3664, -236.2321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-117.2817, -282.7072, -169.9062, -284.0260, -236.1311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-116.6636, -282.5332, -170.2352, -284.2033, -236.5772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-116.5326, -282.1449, -170.5068, -285.0455, -236.8634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-116.8144, -282.2840, -171.2073, -286.1594, -237.9881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-117.1556, -281.4381, -171.8119, -287.4901, -238.3830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-118.6362, -282.3002, -173.0941, -290.0745, -240.6502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-118.9648, -283.0258, -173.3777, -291.3615, -241.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-119.9904, -284.4940, -174.1136, -293.4121, -243.7601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-121.7290, -286.3672, -175.2721, -296.2903, -246.7462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-122.8012, -287.0614, -176.1941, -298.8787, -248.2129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-124.0666, -287.8370, -177.4073, -301.5715, -249.9784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-124.9370, -289.0966, -178.3928, -303.9801, -251.9241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-125.6009, -290.6379, -179.4360, -306.0133, -254.0954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-125.4988, -292.1280, -180.0131, -307.4656, -255.3905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0124, device='cuda:0', dtype=torch.float64)
tensor([-125.4527, -293.7762, -180.6069, -308.5829, -257.1203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-125.5258, -294.5726, -181.0079, -310.0113, -258.0928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-125.5033, -294.4272, -181.3097, -311.4347, -258.6466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-126.2110, -294.0966, -182.0280, -313.9773, -259.2400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-125.7353, -293.1552, -181.9353, -315.1901, -258.6135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-124.1565, -290.0513, -180.2196, -315.3825, -254.1843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-124.0310, -289.1548, -179.4779, -317.0046, -251.9585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-124.9459, -290.0224, -179.7026, -319.7008, -251.8744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-126.1579, -291.6477, -180.2933, -322.6829, -252.5325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-126.8659, -293.0505, -180.7519, -324.7501, -253.3142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-128.2756, -294.4317, -181.9363, -327.8428, -255.0320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-130.4895, -296.1116, -183.9172, -331.3425, -258.0802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-132.4148, -297.6051, -185.6482, -334.3149, -260.8427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-135.0945, -299.6561, -187.9021, -338.2423, -264.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-137.7103, -302.2214, -189.9572, -342.2369, -267.8689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-139.2269, -304.5690, -191.0123, -344.7460, -270.3145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-139.9317, -306.1563, -191.6753, -346.7080, -271.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-139.5750, -306.8018, -191.5106, -347.3250, -271.7962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-139.0449, -307.5129, -190.9507, -347.4531, -271.4458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-137.4662, -307.7637, -189.9627, -346.1845, -270.2491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-135.9015, -307.7584, -188.8943, -345.1410, -268.8657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-135.8412, -308.4668, -188.9990, -345.8309, -269.3117],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-136.0764, -309.7045, -189.4560, -346.8181, -270.4720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-136.6143, -311.0376, -190.1399, -348.4210, -271.9430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-136.3085, -311.6362, -190.2796, -348.8785, -272.5680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-136.5301, -312.5925, -190.6719, -350.0561, -273.4776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-138.3012, -314.2036, -192.2587, -353.6835, -275.9444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-140.1800, -315.7599, -193.8656, -357.7454, -278.2715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-141.5253, -317.9989, -194.6784, -360.7979, -280.0819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-142.6316, -321.8602, -195.5077, -362.6468, -282.7401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-143.4065, -325.5525, -196.5084, -364.2813, -285.6925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-143.5538, -328.1210, -197.1438, -365.1590, -287.8563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-143.6831, -330.5482, -197.3642, -365.9941, -289.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-144.0344, -333.4866, -197.8781, -366.9238, -291.8796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-143.8727, -334.8643, -198.1683, -367.7658, -292.8655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0131, device='cuda:0', dtype=torch.float64)
tensor([-142.9212, -334.6246, -197.7186, -368.0268, -291.9818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-142.9148, -334.7602, -197.7685, -369.7618, -291.6148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-142.9529, -335.1594, -198.1080, -371.2790, -292.0925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-142.9315, -334.5727, -198.7138, -372.8634, -292.4867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-141.6204, -332.7212, -198.5618, -372.5712, -291.6019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-141.9319, -333.2962, -199.5899, -374.5129, -293.1066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-142.6831, -334.4746, -200.5654, -377.2635, -294.4570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-143.4475, -336.1948, -201.4133, -379.6637, -295.7255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-144.7457, -338.9126, -202.2945, -382.6500, -297.2673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-146.5142, -342.3935, -203.5948, -385.9343, -299.9886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-148.8036, -346.4707, -205.3547, -389.7309, -303.7361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-149.5965, -350.1762, -205.7827, -391.4531, -305.7814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0104, device='cuda:0', dtype=torch.float64)
tensor([-149.5242, -352.5187, -205.8214, -392.1226, -306.8555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-150.0368, -355.1780, -206.6020, -393.6870, -308.8291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-150.1738, -358.4199, -207.2874, -394.6438, -311.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-149.6598, -361.1032, -207.1665, -394.3338, -312.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-149.5903, -364.1975, -207.1991, -394.7555, -314.3442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-149.8179, -367.1852, -207.2098, -395.7312, -316.0079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-150.1916, -370.1540, -207.8125, -396.8762, -318.4255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-150.3357, -373.8672, -207.9123, -397.3368, -321.1281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-150.8414, -376.5333, -208.4944, -398.7688, -323.4454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-151.1676, -378.4010, -209.1034, -400.0474, -325.3099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-151.6096, -379.7814, -209.8017, -401.6035, -326.9163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-152.2005, -381.6273, -210.7711, -403.5386, -328.8982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-152.9709, -381.9907, -211.7348, -405.8410, -330.2287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-154.2544, -383.0213, -213.0601, -408.9626, -332.3955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-154.9953, -382.5316, -214.1263, -411.4010, -333.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-155.4741, -381.4660, -214.7915, -413.7866, -332.9391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-156.5675, -381.0084, -216.1837, -417.2702, -333.6595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-156.8705, -380.7008, -216.8829, -419.8018, -333.6619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-156.4116, -379.7383, -216.8601, -421.4913, -332.4159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-156.0409, -380.5551, -216.7437, -422.7049, -332.1094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-154.9897, -380.6235, -215.9858, -422.2459, -331.4579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-154.6612, -381.7983, -215.5377, -422.7312, -331.4766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-155.0482, -384.5071, -215.8049, -424.4987, -332.9905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-156.1995, -388.6326, -216.7240, -427.5034, -335.6686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-157.7039, -393.3675, -218.2025, -430.6979, -339.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-159.5672, -398.3153, -220.0095, -434.3588, -344.3354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-160.1038, -401.6144, -220.8497, -435.9315, -347.3126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-160.5120, -404.6140, -221.3285, -437.4108, -349.7302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-161.3477, -408.3115, -222.0576, -439.0100, -353.0416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-162.4568, -412.7599, -223.0136, -440.8111, -356.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0062, device='cuda:0', dtype=torch.float64)
tensor([-163.0340, -416.6149, -223.3351, -441.6863, -359.9749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-164.7690, -421.0628, -224.5698, -444.7109, -364.2210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-166.5173, -425.5272, -225.5467, -447.5734, -368.2421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0100, device='cuda:0', dtype=torch.float64)
tensor([-168.8632, -430.0380, -226.8827, -451.3991, -372.3832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-171.2068, -434.1312, -228.2510, -455.5765, -376.0228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-173.1779, -438.3105, -229.5599, -458.8981, -379.9919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-174.8506, -444.7689, -231.4197, -461.0326, -386.8967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-176.1028, -451.6684, -232.7895, -462.7848, -393.8720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-177.8414, -459.2001, -234.6104, -465.1741, -401.6940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0123, device='cuda:0', dtype=torch.float64)
tensor([-177.3559, -464.7777, -234.7991, -464.6424, -406.8565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-176.6746, -469.5479, -234.4978, -463.7793, -410.9198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-175.9759, -473.2173, -233.8271, -463.4079, -413.4368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-175.8881, -475.9761, -233.5027, -464.1105, -415.0210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-176.2772, -477.6172, -233.4627, -465.7429, -415.5902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-177.1541, -478.4578, -233.8323, -468.2727, -415.5801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-179.1629, -481.4275, -235.1308, -472.4196, -418.2401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-182.1546, -483.2856, -237.1333, -478.8400, -419.7059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-185.9324, -486.9372, -239.5471, -486.4957, -422.6629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-189.0761, -490.3265, -241.8618, -493.0001, -425.6775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-191.4658, -492.1125, -243.8641, -498.4186, -427.2939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-193.5891, -494.6299, -245.9080, -503.1549, -429.9722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-195.1531, -496.5472, -247.6758, -506.8416, -432.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-195.0739, -496.6222, -248.4028, -508.2266, -432.5738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-193.3050, -494.5312, -248.3462, -506.7851, -430.1795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-192.0444, -493.1900, -248.0183, -505.6687, -428.2169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-191.9876, -493.6292, -248.7395, -506.3618, -428.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0063, device='cuda:0', dtype=torch.float64)
tensor([-191.9208, -493.7047, -249.3184, -507.0965, -428.4946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-193.1449, -494.6593, -250.4183, -510.0431, -429.5119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-194.1581, -496.3466, -251.3769, -512.3014, -431.0616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-195.5500, -498.3570, -252.3733, -515.4102, -432.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-197.1508, -499.3560, -253.0288, -519.1279, -432.6241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-198.0439, -499.8060, -253.5455, -521.7167, -432.1833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-198.6295, -501.7510, -253.4701, -523.3477, -432.3696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-198.9756, -503.4816, -253.4922, -524.5242, -432.6914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-199.3044, -505.0998, -253.3002, -525.6783, -432.9656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-200.0052, -507.9465, -253.6026, -527.1073, -434.8615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-200.5328, -510.2385, -253.1773, -528.2281, -435.5527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-201.5669, -513.4131, -252.8958, -530.1661, -437.1420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0043, device='cuda:0', dtype=torch.float64)
tensor([-203.4988, -517.1169, -253.6218, -533.7184, -439.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-204.8933, -521.1266, -254.0505, -536.1454, -442.9643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-206.1645, -524.9094, -254.3774, -538.5348, -445.6346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-207.1181, -529.1369, -255.7701, -540.3943, -449.8685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-209.8837, -534.2706, -258.8627, -545.3877, -455.6624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-212.7723, -539.2928, -262.3371, -550.7497, -461.7346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-214.7382, -543.5317, -265.0441, -554.5577, -466.9874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-216.9481, -548.7300, -267.8824, -558.6698, -473.1591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-218.6673, -553.1010, -270.9312, -562.5053, -478.9515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-218.6439, -556.7891, -273.0798, -563.4459, -483.9098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0074, device='cuda:0', dtype=torch.float64)
tensor([-218.1043, -560.0764, -275.0467, -563.5975, -488.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0106, device='cuda:0', dtype=torch.float64)
tensor([-216.0389, -562.0010, -275.8685, -560.8229, -491.5656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-214.9483, -563.3315, -276.1318, -559.7734, -493.0403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-215.7098, -566.0669, -276.8959, -562.2071, -495.5324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-218.3474, -571.2972, -277.8915, -568.6555, -499.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0056, device='cuda:0', dtype=torch.float64)
tensor([-221.2264, -575.9406, -279.1011, -575.7120, -503.3575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-225.6017, -580.8190, -280.8283, -585.6429, -506.6916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-230.3531, -585.9999, -282.5948, -595.9475, -510.2610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-234.0782, -590.4605, -283.6434, -604.6437, -512.5472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-236.9929, -593.3689, -284.5045, -611.7931, -513.6131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-237.8653, -593.7831, -284.3433, -615.1672, -512.4734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0068, device='cuda:0', dtype=torch.float64)
tensor([-237.9637, -594.7037, -283.9969, -616.8687, -512.2283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-238.0515, -596.2469, -283.5158, -618.0240, -512.6879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-237.4340, -597.6491, -282.7248, -617.4850, -513.3518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-237.4140, -599.3632, -282.7191, -617.8655, -514.9166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-237.7659, -601.3582, -283.4287, -618.5956, -517.4450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-238.5329, -607.2806, -285.2785, -619.6803, -525.8902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0038, device='cuda:0', dtype=torch.float64)
tensor([-239.5430, -612.5350, -287.5073, -621.4719, -533.4363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0051, device='cuda:0', dtype=torch.float64)
tensor([-241.5443, -618.7878, -290.4426, -624.9192, -541.9631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-243.8315, -624.7179, -293.3810, -628.7534, -549.7284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-246.3029, -630.9238, -296.3984, -632.7757, -557.3548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0047, device='cuda:0', dtype=torch.float64)
tensor([-249.2649, -637.0155, -299.6059, -637.4794, -564.3920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-253.5934, -643.8228, -303.4218, -644.3961, -572.0416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-257.1327, -648.4821, -306.1795, -650.6570, -576.7357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-259.9144, -651.3693, -307.8952, -656.0738, -579.1285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-261.1757, -651.7335, -307.8877, -659.5144, -578.1146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-262.5846, -652.4439, -307.2836, -662.9956, -576.9049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-263.9750, -652.1071, -306.2361, -666.5807, -574.1130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-263.4091, -651.5111, -304.1058, -666.6616, -571.0922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0053, device='cuda:0', dtype=torch.float64)
tensor([-262.1153, -650.6010, -301.5827, -665.0232, -567.8056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0055, device='cuda:0', dtype=torch.float64)
tensor([-260.9992, -650.8632, -299.7601, -663.3385, -566.1851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0059, device='cuda:0', dtype=torch.float64)
tensor([-259.9104, -652.4720, -298.3649, -661.3292, -566.5462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-257.8680, -652.9356, -296.7406, -658.0686, -565.9483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0043, device='cuda:0', dtype=torch.float64)
tensor([-257.1316, -654.4669, -296.1631, -656.9969, -566.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0039, device='cuda:0', dtype=torch.float64)
tensor([-257.9118, -657.5678, -296.9847, -658.6961, -570.0157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-259.8873, -661.4741, -298.2648, -662.3645, -573.6674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-263.3038, -667.2581, -300.4499, -668.0942, -579.5243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0048, device='cuda:0', dtype=torch.float64)
tensor([-267.6308, -673.0400, -303.4076, -675.9475, -585.3969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-271.8866, -679.0714, -306.7738, -683.4854, -591.8036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0037, device='cuda:0', dtype=torch.float64)
tensor([-275.7786, -684.8943, -310.0271, -690.4490, -597.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-279.1472, -691.3379, -313.1354, -696.4536, -604.8398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-280.6538, -696.1858, -315.2507, -699.9776, -610.0824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0049, device='cuda:0', dtype=torch.float64)
tensor([-281.0296, -699.2361, -316.9531, -702.2589, -613.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0029, device='cuda:0', dtype=torch.float64)
tensor([-281.4980, -702.9193, -318.9164, -704.5515, -617.8244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0044, device='cuda:0', dtype=torch.float64)
tensor([-282.2581, -707.1927, -321.1938, -707.2622, -622.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0048, device='cuda:0', dtype=torch.float64)
tensor([-283.9155, -712.1297, -323.3426, -711.0977, -627.8279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-285.8906, -717.0674, -325.5413, -715.0823, -632.9094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-288.7193, -721.8824, -327.6669, -720.5754, -637.3004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0057, device='cuda:0', dtype=torch.float64)
tensor([-292.0718, -726.6777, -329.3227, -727.0206, -640.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-293.4158, -729.7172, -329.9318, -731.0643, -642.3591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-295.3440, -732.4675, -330.7319, -736.3684, -643.4614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-296.9935, -735.5220, -331.6802, -741.1816, -645.4395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0026, device='cuda:0', dtype=torch.float64)
tensor([-298.6726, -739.0038, -332.7322, -745.4637, -648.1658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0034, device='cuda:0', dtype=torch.float64)
tensor([-299.9734, -741.2556, -333.4306, -748.9475, -649.4915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-300.4484, -742.5325, -333.6847, -750.9388, -649.9255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-300.1029, -743.7712, -333.9365, -751.8725, -650.8283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0040, device='cuda:0', dtype=torch.float64)
tensor([-300.8419, -746.8856, -334.5603, -753.6972, -653.8665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0033, device='cuda:0', dtype=torch.float64)
tensor([-300.1363, -748.4870, -334.3841, -753.1355, -655.2468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0033, device='cuda:0', dtype=torch.float64)
tensor([-299.4352, -750.9026, -334.3465, -752.1742, -657.5202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0043, device='cuda:0', dtype=torch.float64)
tensor([-300.4345, -754.8065, -335.4088, -753.8127, -661.3904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0042, device='cuda:0', dtype=torch.float64)
tensor([-301.4052, -757.3907, -335.8799, -755.6827, -663.1943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0052, device='cuda:0', dtype=torch.float64)
tensor([-303.4354, -760.1147, -336.8902, -759.2655, -665.0955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-305.4729, -763.4408, -337.8768, -762.8650, -667.4231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0024, device='cuda:0', dtype=torch.float64)
tensor([-307.5905, -766.7123, -339.1504, -766.5167, -670.1935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0054, device='cuda:0', dtype=torch.float64)
tensor([-308.1124, -768.6128, -339.5886, -767.8841, -671.5677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-310.0799, -771.6306, -341.2761, -771.3994, -674.3405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0031, device='cuda:0', dtype=torch.float64)
tensor([-312.7678, -775.9209, -343.4381, -775.5474, -678.6634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0045, device='cuda:0', dtype=torch.float64)
tensor([-314.2218, -779.0896, -344.7666, -777.8637, -681.8711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-316.6346, -783.4169, -346.4268, -781.4385, -686.2263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0028, device='cuda:0', dtype=torch.float64)
tensor([-318.3057, -787.5838, -347.5442, -783.7769, -690.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0036, device='cuda:0', dtype=torch.float64)
tensor([-319.4906, -791.5276, -348.7972, -785.4756, -694.7253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0026, device='cuda:0', dtype=torch.float64)
tensor([-321.4016, -796.2850, -350.3297, -788.1928, -699.6612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0034, device='cuda:0', dtype=torch.float64)
tensor([-323.4305, -800.5371, -351.7688, -791.4415, -703.4511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0021, device='cuda:0', dtype=torch.float64)
tensor([-325.3021, -804.5009, -353.1079, -794.7389, -707.1126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0037, device='cuda:0', dtype=torch.float64)
tensor([-326.5092, -808.2917, -354.4620, -796.7975, -710.8719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-328.7801, -811.5389, -356.0385, -800.8762, -713.9209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0036, device='cuda:0', dtype=torch.float64)
tensor([-330.1253, -813.9161, -357.2310, -803.4943, -716.4113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0066, device='cuda:0', dtype=torch.float64)
tensor([-335.0691, -819.0300, -360.5804, -811.4136, -722.0123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-338.9107, -824.1648, -363.5423, -817.7806, -727.8622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0026, device='cuda:0', dtype=torch.float64)
tensor([-343.0135, -830.0795, -366.8014, -824.0946, -734.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-346.0382, -835.1800, -369.6001, -828.7366, -741.1915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0045, device='cuda:0', dtype=torch.float64)
tensor([-350.0110, -841.2269, -372.5072, -834.4497, -748.4526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-351.9274, -846.1496, -374.4445, -837.0610, -754.8657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0060, device='cuda:0', dtype=torch.float64)
tensor([-354.5334, -852.2082, -377.1002, -840.3432, -762.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-353.9028, -854.9808, -377.8350, -840.1688, -766.6670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0035, device='cuda:0', dtype=torch.float64)
tensor([-353.3433, -856.7239, -378.6913, -840.8975, -769.0650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0043, device='cuda:0', dtype=torch.float64)
tensor([-351.8960, -857.9114, -379.2162, -840.6403, -770.6814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0033, device='cuda:0', dtype=torch.float64)
tensor([-350.3541, -858.7492, -379.0716, -840.4826, -771.4013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0027, device='cuda:0', dtype=torch.float64)
tensor([-349.3663, -859.8612, -378.9857, -840.6967, -772.3840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0030, device='cuda:0', dtype=torch.float64)
tensor([-349.2602, -861.1834, -379.0604, -842.3278, -773.1479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0050, device='cuda:0', dtype=torch.float64)
tensor([-349.2970, -862.1838, -378.8139, -844.5384, -773.1287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0028, device='cuda:0', dtype=torch.float64)
tensor([-350.0938, -863.0413, -378.7703, -847.9002, -772.7654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0032, device='cuda:0', dtype=torch.float64)
tensor([-351.2529, -864.2098, -378.6374, -851.4919, -772.5118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0047, device='cuda:0', dtype=torch.float64)
tensor([-354.7481, -866.5600, -379.7037, -858.3499, -773.6823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0026, device='cuda:0', dtype=torch.float64)
tensor([-358.7009, -869.1454, -381.0232, -865.8303, -774.9909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0041, device='cuda:0', dtype=torch.float64)
tensor([-364.4221, -873.7357, -383.2046, -875.3746, -778.5252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0029, device='cuda:0', dtype=torch.float64)
tensor([-370.2579, -879.0523, -385.9442, -884.6957, -783.2651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0046, device='cuda:0', dtype=torch.float64)
tensor([-373.4982, -883.6965, -387.9217, -889.8944, -787.6784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0044, device='cuda:0', dtype=torch.float64)
tensor([-376.3851, -888.6549, -390.3197, -894.5967, -793.1178],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_043009.csv
