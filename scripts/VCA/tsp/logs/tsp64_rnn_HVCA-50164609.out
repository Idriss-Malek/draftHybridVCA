ng31401
==== Thu 25 Sep 2025 11:36:56 AM EDT | job 50164609 | node ng31401 ====
model= instance= sa_anneal=
SLURM_JOB_GPUS=1
CUDA_VISIBLE_DEVICES=0
0, GPU-35aa592c-65e0-0e21-32fb-2a116cae6212, NVIDIA A100-SXM4-40GB
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:49: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model_opt.load_state_dict(torch.load("/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/vca.pth", map_location=device), strict=True)
/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/tsp.py:62: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  heuristic_samples_idx = torch.load(heuristic_samples_file, map_location=device)
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(107.6595, device='cuda:0', dtype=torch.float64)
tensor([ -2.0870, -13.2232,  -6.7417, -12.3715,  -5.4945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(58.1230, device='cuda:0', dtype=torch.float64)
tensor([ -2.8341, -10.8572,  -7.2389, -11.5326, -16.6665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(102.4253, device='cuda:0', dtype=torch.float64)
tensor([ -3.6546,  -7.2893,  -6.3026, -15.6318, -19.2905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(113.9736, device='cuda:0', dtype=torch.float64)
tensor([ -2.6446,  -5.6437,  -4.8370, -13.6314, -14.4177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(83.3722, device='cuda:0', dtype=torch.float64)
tensor([ -2.6095,  -4.8962,  -3.5394, -10.2887, -10.6650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(43.9190, device='cuda:0', dtype=torch.float64)
tensor([-2.5617, -5.1305, -3.0847, -7.5351, -8.5679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.7171, device='cuda:0', dtype=torch.float64)
tensor([-2.5987, -5.3578, -3.0030, -6.2354, -5.4837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(37.6406, device='cuda:0', dtype=torch.float64)
tensor([-2.6443, -5.0979, -2.9619, -6.8536, -5.0789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(41.6057, device='cuda:0', dtype=torch.float64)
tensor([-2.6412, -4.8943, -2.9316, -6.5549, -4.7773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.4384, device='cuda:0', dtype=torch.float64)
tensor([-2.6624, -5.6127, -2.9916, -7.7602, -4.5088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(30.9118, device='cuda:0', dtype=torch.float64)
tensor([ -2.6390,  -5.6941,  -3.2365, -11.9649,  -4.3853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(29.0266, device='cuda:0', dtype=torch.float64)
tensor([ -2.5440,  -4.8894,  -3.5808, -14.2315,  -4.4191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.6791, device='cuda:0', dtype=torch.float64)
tensor([ -2.3869,  -4.2102,  -3.8173, -13.1508,  -4.9251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.5522, device='cuda:0', dtype=torch.float64)
tensor([ -2.2068,  -3.7567,  -4.1485, -10.0359,  -5.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.8958, device='cuda:0', dtype=torch.float64)
tensor([-2.0757, -3.4230, -4.5770, -6.8055, -4.8000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.9795, device='cuda:0', dtype=torch.float64)
tensor([-2.0216, -3.2579, -4.5746, -4.6022, -4.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.2610, device='cuda:0', dtype=torch.float64)
tensor([-2.0281, -3.2323, -4.1913, -3.9636, -3.8993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.1628, device='cuda:0', dtype=torch.float64)
tensor([-2.0822, -3.2824, -3.7706, -3.7251, -3.8504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3167, device='cuda:0', dtype=torch.float64)
tensor([-2.1617, -3.4182, -3.4960, -3.5772, -3.8334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.5687, device='cuda:0', dtype=torch.float64)
tensor([-2.2330, -3.6536, -3.3487, -3.4940, -3.8126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3605, device='cuda:0', dtype=torch.float64)
tensor([-2.2776, -3.8352, -3.2756, -3.4788, -3.7963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3824, device='cuda:0', dtype=torch.float64)
tensor([-2.2743, -3.7754, -3.2305, -3.4912, -3.7741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.9495, device='cuda:0', dtype=torch.float64)
tensor([-2.2274, -3.4824, -3.1957, -3.4922, -3.7359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.4217, device='cuda:0', dtype=torch.float64)
tensor([-2.1579, -3.1556, -3.1613, -3.5020, -3.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3099, device='cuda:0', dtype=torch.float64)
tensor([-2.0902, -2.9694, -3.1198, -3.5384, -3.6178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8131, device='cuda:0', dtype=torch.float64)
tensor([-2.0418, -2.9173, -3.0769, -3.5870, -3.5718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2724, device='cuda:0', dtype=torch.float64)
tensor([-2.0114, -2.9172, -3.0385, -3.6299, -3.5392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0075, device='cuda:0', dtype=torch.float64)
tensor([-1.9957, -2.9344, -3.0029, -3.6575, -3.5190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7897, device='cuda:0', dtype=torch.float64)
tensor([-1.9898, -2.9557, -2.9705, -3.6721, -3.5074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7141, device='cuda:0', dtype=torch.float64)
tensor([-1.9912, -2.9784, -2.9421, -3.6813, -3.5047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6400, device='cuda:0', dtype=torch.float64)
tensor([-1.9989, -3.0083, -2.9198, -3.7036, -3.5136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8877, device='cuda:0', dtype=torch.float64)
tensor([-2.0100, -3.0427, -2.9027, -3.7414, -3.5280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8025, device='cuda:0', dtype=torch.float64)
tensor([-2.0244, -3.0807, -2.8883, -3.7891, -3.5437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9377, device='cuda:0', dtype=torch.float64)
tensor([-2.0403, -3.1211, -2.8778, -3.8371, -3.5535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0247, device='cuda:0', dtype=torch.float64)
tensor([-2.0566, -3.1575, -2.8673, -3.8775, -3.5566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-2.0786, -3.2005, -2.8586, -3.9338, -3.5643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1910, device='cuda:0', dtype=torch.float64)
tensor([-2.1066, -3.2479, -2.8524, -3.9962, -3.5703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4911, device='cuda:0', dtype=torch.float64)
tensor([-2.1388, -3.3021, -2.8481, -4.0757, -3.5810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-2.1768, -3.3614, -2.8450, -4.1621, -3.5906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2551, device='cuda:0', dtype=torch.float64)
tensor([-2.2182, -3.4268, -2.8420, -4.2617, -3.6067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0310, device='cuda:0', dtype=torch.float64)
tensor([-2.2647, -3.4966, -2.8406, -4.3688, -3.6211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9118, device='cuda:0', dtype=torch.float64)
tensor([-2.3133, -3.5690, -2.8402, -4.4759, -3.6361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9638, device='cuda:0', dtype=torch.float64)
tensor([-2.3618, -3.6413, -2.8406, -4.5893, -3.6515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1286, device='cuda:0', dtype=torch.float64)
tensor([-2.4090, -3.7189, -2.8415, -4.7272, -3.6731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8073, device='cuda:0', dtype=torch.float64)
tensor([-2.4581, -3.8019, -2.8436, -4.8756, -3.6942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9710, device='cuda:0', dtype=torch.float64)
tensor([-2.5063, -3.8852, -2.8460, -5.0232, -3.7144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9249, device='cuda:0', dtype=torch.float64)
tensor([-2.5501, -3.9672, -2.8482, -5.1675, -3.7335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8768, device='cuda:0', dtype=torch.float64)
tensor([-2.5949, -4.0532, -2.8506, -5.3107, -3.7536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8400, device='cuda:0', dtype=torch.float64)
tensor([-2.6417, -4.1371, -2.8534, -5.4449, -3.7716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8956, device='cuda:0', dtype=torch.float64)
tensor([-2.6909, -4.2231, -2.8567, -5.5682, -3.7858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8221, device='cuda:0', dtype=torch.float64)
tensor([-2.7434, -4.3167, -2.8604, -5.6877, -3.8001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7008, device='cuda:0', dtype=torch.float64)
tensor([-2.7940, -4.4042, -2.8648, -5.7840, -3.8118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5350, device='cuda:0', dtype=torch.float64)
tensor([-2.8535, -4.4881, -2.8693, -5.8609, -3.8203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6618, device='cuda:0', dtype=torch.float64)
tensor([-2.9072, -4.5783, -2.8740, -5.9492, -3.8317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5629, device='cuda:0', dtype=torch.float64)
tensor([-2.9522, -4.6608, -2.8779, -6.0316, -3.8430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5289, device='cuda:0', dtype=torch.float64)
tensor([-2.9931, -4.7340, -2.8816, -6.1068, -3.8547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4773, device='cuda:0', dtype=torch.float64)
tensor([-3.0341, -4.8007, -2.8854, -6.1849, -3.8646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4768, device='cuda:0', dtype=torch.float64)
tensor([-3.0747, -4.8636, -2.8894, -6.2583, -3.8733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4015, device='cuda:0', dtype=torch.float64)
tensor([-3.1163, -4.9266, -2.8936, -6.3243, -3.8801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5754, device='cuda:0', dtype=torch.float64)
tensor([-3.1572, -4.9887, -2.8986, -6.3785, -3.8894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3704, device='cuda:0', dtype=torch.float64)
tensor([-3.1959, -5.0462, -2.9034, -6.4285, -3.8976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4567, device='cuda:0', dtype=torch.float64)
tensor([-3.2326, -5.1006, -2.9078, -6.4733, -3.9056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3322, device='cuda:0', dtype=torch.float64)
tensor([-3.2687, -5.1539, -2.9116, -6.5116, -3.9140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4274, device='cuda:0', dtype=torch.float64)
tensor([-3.2993, -5.1959, -2.9151, -6.5358, -3.9217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3748, device='cuda:0', dtype=torch.float64)
tensor([-3.3259, -5.2295, -2.9190, -6.5584, -3.9302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2844, device='cuda:0', dtype=torch.float64)
tensor([-3.3513, -5.2601, -2.9223, -6.5801, -3.9374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2806, device='cuda:0', dtype=torch.float64)
tensor([-3.3785, -5.2932, -2.9253, -6.6023, -3.9426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3184, device='cuda:0', dtype=torch.float64)
tensor([-3.3996, -5.3227, -2.9276, -6.6340, -3.9488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2710, device='cuda:0', dtype=torch.float64)
tensor([-3.4180, -5.3487, -2.9294, -6.6647, -3.9552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2664, device='cuda:0', dtype=torch.float64)
tensor([-3.4357, -5.3677, -2.9309, -6.6887, -3.9603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2789, device='cuda:0', dtype=torch.float64)
tensor([-3.4486, -5.3772, -2.9320, -6.7107, -3.9648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3150, device='cuda:0', dtype=torch.float64)
tensor([-3.4631, -5.3880, -2.9327, -6.7364, -3.9688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2646, device='cuda:0', dtype=torch.float64)
tensor([-3.4725, -5.3928, -2.9330, -6.7567, -3.9717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2820, device='cuda:0', dtype=torch.float64)
tensor([-3.4804, -5.3953, -2.9330, -6.7691, -3.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3432, device='cuda:0', dtype=torch.float64)
tensor([-3.4861, -5.3896, -2.9325, -6.7721, -3.9720], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_113739.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(115.3771, device='cuda:0', dtype=torch.float64)
tensor([ -2.0671, -12.5693,  -6.5528, -11.4337,  -5.4630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(61.6994, device='cuda:0', dtype=torch.float64)
tensor([ -2.8677, -10.2376,  -7.0935, -11.6572, -16.5452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(109.9175, device='cuda:0', dtype=torch.float64)
tensor([ -3.6425,  -6.9216,  -6.1183, -16.1165, -18.5029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(120.5749, device='cuda:0', dtype=torch.float64)
tensor([ -2.6353,  -5.3781,  -4.6544, -13.3910, -13.8611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(85.3088, device='cuda:0', dtype=torch.float64)
tensor([ -2.6029,  -4.8288,  -3.4186, -10.0346, -10.6217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(48.3076, device='cuda:0', dtype=torch.float64)
tensor([-2.5240, -5.0006, -3.0370, -6.8564, -7.2981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(38.5491, device='cuda:0', dtype=torch.float64)
tensor([-2.5538, -5.1896, -2.9655, -6.3060, -5.0073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(44.4901, device='cuda:0', dtype=torch.float64)
tensor([-2.5740, -4.8885, -2.9193, -6.6957, -4.8102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(47.1293, device='cuda:0', dtype=torch.float64)
tensor([-2.5976, -5.1602, -2.9252, -6.8971, -4.5523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.5770, device='cuda:0', dtype=torch.float64)
tensor([ -2.6047,  -5.6704,  -3.0857, -10.3260,  -4.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(39.8364, device='cuda:0', dtype=torch.float64)
tensor([ -2.5259,  -4.9140,  -3.4132, -13.4496,  -4.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(33.4245, device='cuda:0', dtype=torch.float64)
tensor([ -2.3735,  -4.1398,  -3.6756, -12.7228,  -4.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(26.3955, device='cuda:0', dtype=torch.float64)
tensor([-2.1903, -3.6573, -4.0079, -9.6657, -5.0570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.7091, device='cuda:0', dtype=torch.float64)
tensor([-2.0540, -3.3258, -4.4983, -6.3069, -4.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.0697, device='cuda:0', dtype=torch.float64)
tensor([-2.0040, -3.1708, -4.3729, -4.2536, -4.0202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.1221, device='cuda:0', dtype=torch.float64)
tensor([-2.0318, -3.1716, -3.8916, -3.7946, -3.8373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3275, device='cuda:0', dtype=torch.float64)
tensor([-2.1106, -3.2479, -3.5143, -3.5878, -3.8057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.5205, device='cuda:0', dtype=torch.float64)
tensor([-2.1947, -3.4935, -3.3192, -3.4768, -3.7833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.1848, device='cuda:0', dtype=torch.float64)
tensor([-2.2270, -3.7266, -3.2261, -3.4649, -3.7587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.3219, device='cuda:0', dtype=torch.float64)
tensor([-2.1785, -3.5596, -3.1725, -3.4763, -3.7149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.5639, device='cuda:0', dtype=torch.float64)
tensor([-2.0873, -3.1708, -3.1300, -3.4835, -3.6460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.2171, device='cuda:0', dtype=torch.float64)
tensor([-2.0023, -2.9378, -3.0840, -3.5323, -3.5670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.9823, device='cuda:0', dtype=torch.float64)
tensor([-1.9476, -2.8873, -3.0296, -3.5906, -3.5035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.4357, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.8993, -2.9727, -3.6239, -3.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5378, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.9300, -2.9249, -3.6558, -3.4666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9052, device='cuda:0', dtype=torch.float64)
tensor([-1.9190, -2.9768, -2.8890, -3.7213, -3.4820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3632, device='cuda:0', dtype=torch.float64)
tensor([-1.9267, -3.0310, -2.8655, -3.8086, -3.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7043, device='cuda:0', dtype=torch.float64)
tensor([-1.9398, -3.0820, -2.8484, -3.8617, -3.4666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.9383, device='cuda:0', dtype=torch.float64)
tensor([-1.9513, -3.1137, -2.8345, -3.8510, -3.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.6710, device='cuda:0', dtype=torch.float64)
tensor([-1.9459, -3.1122, -2.8237, -3.7923, -3.4209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6361, device='cuda:0', dtype=torch.float64)
tensor([-1.9209, -3.0834, -2.8163, -3.7252, -3.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0940, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -3.0416, -2.8134, -3.6685, -3.4201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5828, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.9985, -2.8133, -3.6292, -3.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0746, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.9605, -2.8166, -3.6065, -3.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6891, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.9316, -2.8218, -3.5961, -3.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1451, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.9112, -2.8293, -3.5925, -3.5043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9760, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.8950, -2.8372, -3.5944, -3.5277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0472, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.8752, -2.8448, -3.5973, -3.5444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1276, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.8497, -2.8504, -3.5990, -3.5514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0696, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.8247, -2.8522, -3.5985, -3.5464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8245, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.8076, -2.8499, -3.5972, -3.5312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0492, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.7976, -2.8441, -3.5937, -3.5075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7656, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.7939, -2.8354, -3.5910, -3.4785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6203, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.7962, -2.8248, -3.5876, -3.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6905, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.8034, -2.8126, -3.5803, -3.4194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2732, device='cuda:0', dtype=torch.float64)
tensor([-1.9195, -2.8116, -2.8012, -3.5734, -3.3935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0344, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.8217, -2.7891, -3.5672, -3.3689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9255, device='cuda:0', dtype=torch.float64)
tensor([-1.9362, -2.8328, -2.7766, -3.5589, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8932, device='cuda:0', dtype=torch.float64)
tensor([-1.9440, -2.8445, -2.7630, -3.5476, -3.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8333, device='cuda:0', dtype=torch.float64)
tensor([-1.9506, -2.8556, -2.7507, -3.5333, -3.3084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9882, device='cuda:0', dtype=torch.float64)
tensor([-1.9560, -2.8637, -2.7421, -3.5208, -3.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7668, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.8716, -2.7343, -3.5107, -3.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9003, device='cuda:0', dtype=torch.float64)
tensor([-1.9680, -2.8812, -2.7275, -3.5011, -3.2797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5453, device='cuda:0', dtype=torch.float64)
tensor([-1.9748, -2.8918, -2.7224, -3.4914, -3.2775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7550, device='cuda:0', dtype=torch.float64)
tensor([-1.9813, -2.9014, -2.7192, -3.4809, -3.2776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6328, device='cuda:0', dtype=torch.float64)
tensor([-1.9885, -2.9127, -2.7159, -3.4678, -3.2809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5087, device='cuda:0', dtype=torch.float64)
tensor([-1.9962, -2.9243, -2.7137, -3.4525, -3.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4941, device='cuda:0', dtype=torch.float64)
tensor([-2.0044, -2.9361, -2.7124, -3.4382, -3.2948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2810, device='cuda:0', dtype=torch.float64)
tensor([-2.0115, -2.9458, -2.7135, -3.4264, -3.3026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5649, device='cuda:0', dtype=torch.float64)
tensor([-2.0175, -2.9530, -2.7174, -3.4170, -3.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4972, device='cuda:0', dtype=torch.float64)
tensor([-2.0233, -2.9596, -2.7221, -3.4088, -3.3178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5742, device='cuda:0', dtype=torch.float64)
tensor([-2.0302, -2.9675, -2.7275, -3.4007, -3.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5006, device='cuda:0', dtype=torch.float64)
tensor([-2.0373, -2.9733, -2.7336, -3.3944, -3.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4387, device='cuda:0', dtype=torch.float64)
tensor([-2.0452, -2.9791, -2.7398, -3.3899, -3.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5521, device='cuda:0', dtype=torch.float64)
tensor([-2.0525, -2.9853, -2.7459, -3.3852, -3.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3905, device='cuda:0', dtype=torch.float64)
tensor([-2.0603, -2.9915, -2.7517, -3.3822, -3.3535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3430, device='cuda:0', dtype=torch.float64)
tensor([-2.0679, -2.9985, -2.7576, -3.3794, -3.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5213, device='cuda:0', dtype=torch.float64)
tensor([-2.0770, -3.0050, -2.7614, -3.3748, -3.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2250, device='cuda:0', dtype=torch.float64)
tensor([-2.0868, -3.0105, -2.7654, -3.3709, -3.3791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1616, device='cuda:0', dtype=torch.float64)
tensor([-2.0969, -3.0159, -2.7697, -3.3674, -3.3895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4216, device='cuda:0', dtype=torch.float64)
tensor([-2.1100, -3.0239, -2.7733, -3.3624, -3.4016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2244, device='cuda:0', dtype=torch.float64)
tensor([-2.1233, -3.0329, -2.7766, -3.3605, -3.4159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1614, device='cuda:0', dtype=torch.float64)
tensor([-2.1356, -3.0418, -2.7805, -3.3600, -3.4284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2434, device='cuda:0', dtype=torch.float64)
tensor([-2.1470, -3.0497, -2.7839, -3.3597, -3.4407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5266, device='cuda:0', dtype=torch.float64)
tensor([-2.1574, -3.0555, -2.7873, -3.3598, -3.4543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1836, device='cuda:0', dtype=torch.float64)
tensor([-2.1689, -3.0608, -2.7907, -3.3614, -3.4671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3703, device='cuda:0', dtype=torch.float64)
tensor([-2.1819, -3.0667, -2.7942, -3.3644, -3.4787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2126, device='cuda:0', dtype=torch.float64)
tensor([-2.1976, -3.0767, -2.7963, -3.3666, -3.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6075, device='cuda:0', dtype=torch.float64)
tensor([-2.2159, -3.0875, -2.7981, -3.3665, -3.5063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4561, device='cuda:0', dtype=torch.float64)
tensor([-2.2354, -3.1009, -2.8000, -3.3682, -3.5226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0264, device='cuda:0', dtype=torch.float64)
tensor([-2.2565, -3.1166, -2.8004, -3.3688, -3.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1924, device='cuda:0', dtype=torch.float64)
tensor([-2.2780, -3.1332, -2.8020, -3.3718, -3.5580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4189, device='cuda:0', dtype=torch.float64)
tensor([-2.2998, -3.1506, -2.8039, -3.3741, -3.5775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9988, device='cuda:0', dtype=torch.float64)
tensor([-2.3231, -3.1688, -2.8058, -3.3748, -3.5975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3092, device='cuda:0', dtype=torch.float64)
tensor([-2.3473, -3.1875, -2.8066, -3.3724, -3.6180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-2.3713, -3.2061, -2.8082, -3.3725, -3.6378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9694, device='cuda:0', dtype=torch.float64)
tensor([-2.3937, -3.2263, -2.8106, -3.3743, -3.6568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1694, device='cuda:0', dtype=torch.float64)
tensor([-2.4166, -3.2472, -2.8140, -3.3762, -3.6744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9252, device='cuda:0', dtype=torch.float64)
tensor([-2.4402, -3.2689, -2.8172, -3.3774, -3.6920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0878, device='cuda:0', dtype=torch.float64)
tensor([-2.4642, -3.2905, -2.8211, -3.3815, -3.7080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-2.4903, -3.3146, -2.8247, -3.3833, -3.7239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([-2.5158, -3.3385, -2.8287, -3.3854, -3.7410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0474, device='cuda:0', dtype=torch.float64)
tensor([-2.5403, -3.3615, -2.8337, -3.3909, -3.7587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8541, device='cuda:0', dtype=torch.float64)
tensor([-2.5644, -3.3840, -2.8389, -3.3961, -3.7759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9460, device='cuda:0', dtype=torch.float64)
tensor([-2.5877, -3.4065, -2.8443, -3.4032, -3.7941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([-2.6102, -3.4285, -2.8499, -3.4132, -3.8128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7360, device='cuda:0', dtype=torch.float64)
tensor([-2.6331, -3.4512, -2.8562, -3.4235, -3.8332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8534, device='cuda:0', dtype=torch.float64)
tensor([-2.6556, -3.4727, -2.8634, -3.4335, -3.8533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0713, device='cuda:0', dtype=torch.float64)
tensor([-2.6786, -3.4942, -2.8695, -3.4406, -3.8728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0035, device='cuda:0', dtype=torch.float64)
tensor([-2.7018, -3.5156, -2.8750, -3.4448, -3.8927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7549, device='cuda:0', dtype=torch.float64)
tensor([-2.7244, -3.5363, -2.8818, -3.4525, -3.9123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6902, device='cuda:0', dtype=torch.float64)
tensor([-2.7474, -3.5566, -2.8880, -3.4571, -3.9317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7551, device='cuda:0', dtype=torch.float64)
tensor([-2.7704, -3.5775, -2.8937, -3.4642, -3.9490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7370, device='cuda:0', dtype=torch.float64)
tensor([-2.7927, -3.5966, -2.8994, -3.4701, -3.9653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7201, device='cuda:0', dtype=torch.float64)
tensor([-2.8153, -3.6166, -2.9064, -3.4786, -3.9820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6178, device='cuda:0', dtype=torch.float64)
tensor([-2.8366, -3.6357, -2.9136, -3.4866, -3.9984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6359, device='cuda:0', dtype=torch.float64)
tensor([-2.8575, -3.6544, -2.9212, -3.4944, -4.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6780, device='cuda:0', dtype=torch.float64)
tensor([-2.8783, -3.6724, -2.9290, -3.5032, -4.0281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6523, device='cuda:0', dtype=torch.float64)
tensor([-2.8991, -3.6905, -2.9371, -3.5155, -4.0423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6765, device='cuda:0', dtype=torch.float64)
tensor([-2.9181, -3.7069, -2.9447, -3.5276, -4.0556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6751, device='cuda:0', dtype=torch.float64)
tensor([-2.9371, -3.7235, -2.9525, -3.5391, -4.0681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5756, device='cuda:0', dtype=torch.float64)
tensor([-2.9561, -3.7405, -2.9598, -3.5498, -4.0799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6869, device='cuda:0', dtype=torch.float64)
tensor([-2.9739, -3.7567, -2.9674, -3.5615, -4.0907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5846, device='cuda:0', dtype=torch.float64)
tensor([-2.9918, -3.7720, -2.9747, -3.5703, -4.1018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6698, device='cuda:0', dtype=torch.float64)
tensor([-3.0094, -3.7883, -2.9822, -3.5830, -4.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5931, device='cuda:0', dtype=torch.float64)
tensor([-3.0249, -3.8035, -2.9893, -3.5938, -4.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([-3.0400, -3.8189, -2.9964, -3.6054, -4.1309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5465, device='cuda:0', dtype=torch.float64)
tensor([-3.0547, -3.8345, -3.0030, -3.6161, -4.1404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5047, device='cuda:0', dtype=torch.float64)
tensor([-3.0696, -3.8502, -3.0086, -3.6278, -4.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5622, device='cuda:0', dtype=torch.float64)
tensor([-3.0845, -3.8662, -3.0147, -3.6425, -4.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4402, device='cuda:0', dtype=torch.float64)
tensor([-3.0991, -3.8813, -3.0204, -3.6569, -4.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4393, device='cuda:0', dtype=torch.float64)
tensor([-3.1131, -3.8964, -3.0262, -3.6719, -4.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5285, device='cuda:0', dtype=torch.float64)
tensor([-3.1265, -3.9103, -3.0320, -3.6839, -4.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4167, device='cuda:0', dtype=torch.float64)
tensor([-3.1392, -3.9231, -3.0375, -3.6945, -4.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4286, device='cuda:0', dtype=torch.float64)
tensor([-3.1518, -3.9350, -3.0435, -3.7045, -4.2068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3649, device='cuda:0', dtype=torch.float64)
tensor([-3.1633, -3.9462, -3.0489, -3.7154, -4.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2940, device='cuda:0', dtype=torch.float64)
tensor([-3.1745, -3.9569, -3.0544, -3.7252, -4.2239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4331, device='cuda:0', dtype=torch.float64)
tensor([-3.1847, -3.9670, -3.0596, -3.7343, -4.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3793, device='cuda:0', dtype=torch.float64)
tensor([-3.1943, -3.9771, -3.0639, -3.7436, -4.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3760, device='cuda:0', dtype=torch.float64)
tensor([-3.2028, -3.9861, -3.0687, -3.7520, -4.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3321, device='cuda:0', dtype=torch.float64)
tensor([-3.2104, -3.9940, -3.0724, -3.7591, -4.2554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3412, device='cuda:0', dtype=torch.float64)
tensor([-3.2175, -4.0012, -3.0763, -3.7654, -4.2628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3122, device='cuda:0', dtype=torch.float64)
tensor([-3.2241, -4.0078, -3.0802, -3.7713, -4.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3605, device='cuda:0', dtype=torch.float64)
tensor([-3.2301, -4.0140, -3.0840, -3.7771, -4.2761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3368, device='cuda:0', dtype=torch.float64)
tensor([-3.2355, -4.0194, -3.0873, -3.7798, -4.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3040, device='cuda:0', dtype=torch.float64)
tensor([-3.2409, -4.0243, -3.0902, -3.7804, -4.2887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3174, device='cuda:0', dtype=torch.float64)
tensor([-3.2452, -4.0280, -3.0933, -3.7798, -4.2942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2849, device='cuda:0', dtype=torch.float64)
tensor([-3.2489, -4.0311, -3.0958, -3.7784, -4.2995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3108, device='cuda:0', dtype=torch.float64)
tensor([-3.2523, -4.0337, -3.0981, -3.7751, -4.3046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2978, device='cuda:0', dtype=torch.float64)
tensor([-3.2557, -4.0363, -3.1000, -3.7719, -4.3097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2843, device='cuda:0', dtype=torch.float64)
tensor([-3.2585, -4.0382, -3.1017, -3.7697, -4.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2577, device='cuda:0', dtype=torch.float64)
tensor([-3.2606, -4.0397, -3.1034, -3.7685, -4.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3079, device='cuda:0', dtype=torch.float64)
tensor([-3.2613, -4.0401, -3.1048, -3.7684, -4.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2751, device='cuda:0', dtype=torch.float64)
tensor([-3.2618, -4.0407, -3.1056, -3.7673, -4.3230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2864, device='cuda:0', dtype=torch.float64)
tensor([-3.2620, -4.0409, -3.1059, -3.7679, -4.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3196, device='cuda:0', dtype=torch.float64)
tensor([-3.2615, -4.0400, -3.1054, -3.7664, -4.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3485, device='cuda:0', dtype=torch.float64)
tensor([-3.2590, -4.0371, -3.1047, -3.7665, -4.3238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3174, device='cuda:0', dtype=torch.float64)
tensor([-3.2558, -4.0337, -3.1043, -3.7668, -4.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2104, device='cuda:0', dtype=torch.float64)
tensor([-3.2523, -4.0297, -3.1039, -3.7672, -4.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2500, device='cuda:0', dtype=torch.float64)
tensor([-3.2486, -4.0249, -3.1031, -3.7663, -4.3156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3261, device='cuda:0', dtype=torch.float64)
tensor([-3.2438, -4.0190, -3.1019, -3.7614, -4.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3326, device='cuda:0', dtype=torch.float64)
tensor([-3.2381, -4.0130, -3.1006, -3.7587, -4.3077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2995, device='cuda:0', dtype=torch.float64)
tensor([-3.2321, -4.0066, -3.0992, -3.7547, -4.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3030, device='cuda:0', dtype=torch.float64)
tensor([-3.2263, -3.9997, -3.0975, -3.7482, -4.2968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3189, device='cuda:0', dtype=torch.float64)
tensor([-3.2199, -3.9924, -3.0954, -3.7412, -4.2905], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_113739.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(119.2368, device='cuda:0', dtype=torch.float64)
tensor([ -2.0583, -12.2694,  -6.4698, -10.9979,  -5.4572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(63.5097, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870,  -9.9633,  -7.0288, -11.7684, -16.4903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(113.7784, device='cuda:0', dtype=torch.float64)
tensor([ -3.6306,  -6.7629,  -6.0345, -16.3209, -18.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(123.8195, device='cuda:0', dtype=torch.float64)
tensor([ -2.6359,  -5.2588,  -4.5674, -13.2625, -13.6015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.0736, device='cuda:0', dtype=torch.float64)
tensor([ -2.5954,  -4.8003,  -3.3672,  -9.8784, -10.5628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(50.4322, device='cuda:0', dtype=torch.float64)
tensor([-2.5072, -4.9398, -3.0183, -6.5570, -6.7125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(40.4578, device='cuda:0', dtype=torch.float64)
tensor([-2.5337, -5.1027, -2.9490, -6.3681, -4.8825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(47.7750, device='cuda:0', dtype=torch.float64)
tensor([-2.5505, -4.8408, -2.9045, -6.6241, -4.7100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(49.7094, device='cuda:0', dtype=torch.float64)
tensor([-2.5822, -5.3523, -2.9336, -7.4427, -4.4736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(49.3296, device='cuda:0', dtype=torch.float64)
tensor([ -2.5770,  -5.5328,  -3.1540, -11.6698,  -4.3248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(43.5800, device='cuda:0', dtype=torch.float64)
tensor([ -2.4691,  -4.5921,  -3.4892, -13.6569,  -4.2996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(34.7431, device='cuda:0', dtype=torch.float64)
tensor([ -2.2933,  -3.9048,  -3.7222, -11.6406,  -4.7189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(26.2861, device='cuda:0', dtype=torch.float64)
tensor([-2.1153, -3.4764, -4.2008, -8.3063, -4.9231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.9873, device='cuda:0', dtype=torch.float64)
tensor([-2.0127, -3.2111, -4.5204, -5.0485, -4.3233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.5334, device='cuda:0', dtype=torch.float64)
tensor([-2.0021, -3.1455, -4.1470, -3.9583, -3.8899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.9400, device='cuda:0', dtype=torch.float64)
tensor([-2.0645, -3.1844, -3.6556, -3.6641, -3.8180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0783, device='cuda:0', dtype=torch.float64)
tensor([-2.1551, -3.3281, -3.3704, -3.5028, -3.7891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.7266, device='cuda:0', dtype=torch.float64)
tensor([-2.2096, -3.6224, -3.2401, -3.4481, -3.7611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.1431, device='cuda:0', dtype=torch.float64)
tensor([-2.1788, -3.6169, -3.1745, -3.4633, -3.7237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.7985, device='cuda:0', dtype=torch.float64)
tensor([-2.0817, -3.2358, -3.1271, -3.4694, -3.6543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.1240, device='cuda:0', dtype=torch.float64)
tensor([-1.9861, -2.9510, -3.0780, -3.5163, -3.5669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0463, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.8871, -3.0206, -3.5814, -3.4946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.8431, device='cuda:0', dtype=torch.float64)
tensor([-1.9012, -2.9014, -2.9621, -3.6218, -3.4584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.9444, device='cuda:0', dtype=torch.float64)
tensor([-1.8969, -2.9404, -2.9130, -3.6669, -3.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1461, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.9955, -2.8783, -3.7572, -3.4780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5261, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -3.0566, -2.8538, -3.8558, -3.4765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.1439, device='cuda:0', dtype=torch.float64)
tensor([-1.9200, -3.1037, -2.8357, -3.8865, -3.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0911, device='cuda:0', dtype=torch.float64)
tensor([-1.9218, -3.1119, -2.8231, -3.8332, -3.4186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3026, device='cuda:0', dtype=torch.float64)
tensor([-1.8951, -3.0755, -2.8153, -3.7441, -3.4078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2233, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -3.0170, -2.8124, -3.6699, -3.4098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0970, device='cuda:0', dtype=torch.float64)
tensor([-1.8125, -2.9598, -2.8141, -3.6266, -3.4251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4004, device='cuda:0', dtype=torch.float64)
tensor([-1.7900, -2.9141, -2.8192, -3.6055, -3.4507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8980, device='cuda:0', dtype=torch.float64)
tensor([-1.7810, -2.8852, -2.8257, -3.5966, -3.4816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4762, device='cuda:0', dtype=torch.float64)
tensor([-1.7806, -2.8678, -2.8340, -3.5955, -3.5107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5662, device='cuda:0', dtype=torch.float64)
tensor([-1.7857, -2.8491, -2.8417, -3.5967, -3.5310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6393, device='cuda:0', dtype=torch.float64)
tensor([-1.7944, -2.8229, -2.8470, -3.5952, -3.5369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7835, device='cuda:0', dtype=torch.float64)
tensor([-1.8050, -2.7941, -2.8474, -3.5932, -3.5254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7613, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.7720, -2.8420, -3.5921, -3.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5430, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.7616, -2.8313, -3.5938, -3.4612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3845, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7615, -2.8171, -3.5954, -3.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8309, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7695, -2.8012, -3.5950, -3.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3471, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.7821, -2.7844, -3.5921, -3.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1148, device='cuda:0', dtype=torch.float64)
tensor([-1.8640, -2.7977, -2.7653, -3.5834, -3.3244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0156, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.8156, -2.7438, -3.5664, -3.2950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9168, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.8333, -2.7233, -3.5451, -3.2704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7750, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.8502, -2.7072, -3.5245, -3.2544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7131, device='cuda:0', dtype=torch.float64)
tensor([-1.8859, -2.8660, -2.6961, -3.5039, -3.2471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6141, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.8786, -2.6914, -3.4838, -3.2456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6057, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.8884, -2.6912, -3.4632, -3.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5651, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.8948, -2.6954, -3.4433, -3.2561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2578, device='cuda:0', dtype=torch.float64)
tensor([-1.8946, -2.8981, -2.7040, -3.4263, -3.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2054, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.8994, -2.7152, -3.4110, -3.2746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0604, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.8983, -2.7278, -3.3980, -3.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9037, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.8952, -2.7406, -3.3879, -3.2968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9868, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.8905, -2.7532, -3.3818, -3.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8047, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.8852, -2.7647, -3.3790, -3.3205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8522, device='cuda:0', dtype=torch.float64)
tensor([-1.8931, -2.8802, -2.7748, -3.3773, -3.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8211, device='cuda:0', dtype=torch.float64)
tensor([-1.8937, -2.8751, -2.7841, -3.3787, -3.3451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9115, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.8695, -2.7931, -3.3829, -3.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7542, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.8647, -2.8006, -3.3884, -3.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9026, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.8612, -2.8062, -3.3925, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8359, device='cuda:0', dtype=torch.float64)
tensor([-1.8931, -2.8592, -2.8096, -3.3964, -3.3767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6404, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.8575, -2.8106, -3.3991, -3.3803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8061, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.8560, -2.8084, -3.3984, -3.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5558, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.8550, -2.8050, -3.3970, -3.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5123, device='cuda:0', dtype=torch.float64)
tensor([-1.8959, -2.8545, -2.8002, -3.3946, -3.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6235, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.8523, -2.7977, -3.3924, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5542, device='cuda:0', dtype=torch.float64)
tensor([-1.8931, -2.8477, -2.7962, -3.3907, -3.3812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5311, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.8412, -2.7968, -3.3882, -3.3792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5310, device='cuda:0', dtype=torch.float64)
tensor([-1.8892, -2.8351, -2.7985, -3.3865, -3.3779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3829, device='cuda:0', dtype=torch.float64)
tensor([-1.8885, -2.8302, -2.8009, -3.3853, -3.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3016, device='cuda:0', dtype=torch.float64)
tensor([-1.8885, -2.8274, -2.8027, -3.3839, -3.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3737, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.8254, -2.8050, -3.3817, -3.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1882, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.8245, -2.8076, -3.3799, -3.3815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3310, device='cuda:0', dtype=torch.float64)
tensor([-1.8860, -2.8245, -2.8108, -3.3787, -3.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2354, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.8250, -2.8142, -3.3784, -3.3861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2757, device='cuda:0', dtype=torch.float64)
tensor([-1.8833, -2.8253, -2.8182, -3.3786, -3.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2685, device='cuda:0', dtype=torch.float64)
tensor([-1.8819, -2.8252, -2.8227, -3.3800, -3.3887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4631, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.8228, -2.8285, -3.3827, -3.3911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4390, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.8221, -2.8339, -3.3868, -3.3929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3247, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.8227, -2.8383, -3.3900, -3.3956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4281, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.8244, -2.8422, -3.3904, -3.3993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3995, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.8269, -2.8446, -3.3865, -3.4049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2984, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.8305, -2.8466, -3.3791, -3.4118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0615, device='cuda:0', dtype=torch.float64)
tensor([-1.9022, -2.8334, -2.8488, -3.3735, -3.4184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1321, device='cuda:0', dtype=torch.float64)
tensor([-1.9088, -2.8355, -2.8512, -3.3703, -3.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3432, device='cuda:0', dtype=torch.float64)
tensor([-1.9132, -2.8381, -2.8538, -3.3689, -3.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1824, device='cuda:0', dtype=torch.float64)
tensor([-1.9178, -2.8413, -2.8548, -3.3668, -3.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5992, device='cuda:0', dtype=torch.float64)
tensor([-1.9212, -2.8423, -2.8570, -3.3665, -3.4352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3213, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.8432, -2.8597, -3.3665, -3.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4178, device='cuda:0', dtype=torch.float64)
tensor([-1.9289, -2.8439, -2.8607, -3.3638, -3.4411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4508, device='cuda:0', dtype=torch.float64)
tensor([-1.9322, -2.8456, -2.8623, -3.3600, -3.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2479, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.8466, -2.8635, -3.3578, -3.4418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2452, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.8483, -2.8637, -3.3560, -3.4398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4902, device='cuda:0', dtype=torch.float64)
tensor([-1.9373, -2.8506, -2.8636, -3.3546, -3.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5001, device='cuda:0', dtype=torch.float64)
tensor([-1.9405, -2.8548, -2.8618, -3.3519, -3.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2538, device='cuda:0', dtype=torch.float64)
tensor([-1.9439, -2.8568, -2.8616, -3.3503, -3.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-1.9475, -2.8597, -2.8620, -3.3498, -3.4308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3500, device='cuda:0', dtype=torch.float64)
tensor([-1.9502, -2.8625, -2.8628, -3.3510, -3.4284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0867, device='cuda:0', dtype=torch.float64)
tensor([-1.9520, -2.8646, -2.8635, -3.3528, -3.4240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2159, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.8662, -2.8646, -3.3545, -3.4197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2544, device='cuda:0', dtype=torch.float64)
tensor([-1.9549, -2.8683, -2.8662, -3.3571, -3.4160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4796, device='cuda:0', dtype=torch.float64)
tensor([-1.9571, -2.8723, -2.8667, -3.3578, -3.4125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4682, device='cuda:0', dtype=torch.float64)
tensor([-1.9587, -2.8737, -2.8694, -3.3601, -3.4092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5579, device='cuda:0', dtype=torch.float64)
tensor([-1.9610, -2.8743, -2.8723, -3.3605, -3.4087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2385, device='cuda:0', dtype=torch.float64)
tensor([-1.9629, -2.8751, -2.8756, -3.3628, -3.4076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4980, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.8773, -2.8776, -3.3645, -3.4048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3234, device='cuda:0', dtype=torch.float64)
tensor([-1.9680, -2.8804, -2.8785, -3.3639, -3.4034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-1.9720, -2.8831, -2.8786, -3.3628, -3.4017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3594, device='cuda:0', dtype=torch.float64)
tensor([-1.9756, -2.8865, -2.8786, -3.3622, -3.3995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3119, device='cuda:0', dtype=torch.float64)
tensor([-1.9797, -2.8903, -2.8787, -3.3617, -3.3994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2900, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.8939, -2.8790, -3.3601, -3.3996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1839, device='cuda:0', dtype=torch.float64)
tensor([-1.9857, -2.8961, -2.8813, -3.3586, -3.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5483, device='cuda:0', dtype=torch.float64)
tensor([-1.9888, -2.8966, -2.8827, -3.3576, -3.4049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0794, device='cuda:0', dtype=torch.float64)
tensor([-1.9904, -2.8986, -2.8842, -3.3585, -3.4080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3001, device='cuda:0', dtype=torch.float64)
tensor([-1.9911, -2.8993, -2.8858, -3.3593, -3.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2015, device='cuda:0', dtype=torch.float64)
tensor([-1.9938, -2.9011, -2.8879, -3.3587, -3.4156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6066, device='cuda:0', dtype=torch.float64)
tensor([-1.9976, -2.9048, -2.8894, -3.3588, -3.4214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1821, device='cuda:0', dtype=torch.float64)
tensor([-2.0019, -2.9095, -2.8902, -3.3604, -3.4270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4155, device='cuda:0', dtype=torch.float64)
tensor([-2.0075, -2.9116, -2.8929, -3.3609, -3.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1858, device='cuda:0', dtype=torch.float64)
tensor([-2.0142, -2.9142, -2.8956, -3.3599, -3.4396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2137, device='cuda:0', dtype=torch.float64)
tensor([-2.0211, -2.9163, -2.8981, -3.3573, -3.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5603, device='cuda:0', dtype=torch.float64)
tensor([-2.0282, -2.9194, -2.9005, -3.3542, -3.4520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4376, device='cuda:0', dtype=torch.float64)
tensor([-2.0353, -2.9224, -2.9023, -3.3497, -3.4585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6221, device='cuda:0', dtype=torch.float64)
tensor([-2.0444, -2.9273, -2.9033, -3.3437, -3.4659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5518, device='cuda:0', dtype=torch.float64)
tensor([-2.0543, -2.9316, -2.9042, -3.3411, -3.4732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5057, device='cuda:0', dtype=torch.float64)
tensor([-2.0636, -2.9355, -2.9069, -3.3413, -3.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4532, device='cuda:0', dtype=torch.float64)
tensor([-2.0715, -2.9420, -2.9088, -3.3435, -3.4817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3831, device='cuda:0', dtype=torch.float64)
tensor([-2.0784, -2.9502, -2.9108, -3.3449, -3.4835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6296, device='cuda:0', dtype=torch.float64)
tensor([-2.0832, -2.9572, -2.9142, -3.3486, -3.4857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3317, device='cuda:0', dtype=torch.float64)
tensor([-2.0876, -2.9626, -2.9162, -3.3533, -3.4886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3060, device='cuda:0', dtype=torch.float64)
tensor([-2.0919, -2.9678, -2.9179, -3.3545, -3.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3128, device='cuda:0', dtype=torch.float64)
tensor([-2.0956, -2.9716, -2.9192, -3.3580, -3.4909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4883, device='cuda:0', dtype=torch.float64)
tensor([-2.0994, -2.9758, -2.9210, -3.3652, -3.4942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2649, device='cuda:0', dtype=torch.float64)
tensor([-2.1051, -2.9797, -2.9214, -3.3727, -3.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2773, device='cuda:0', dtype=torch.float64)
tensor([-2.1112, -2.9836, -2.9223, -3.3772, -3.5028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4013, device='cuda:0', dtype=torch.float64)
tensor([-2.1180, -2.9880, -2.9228, -3.3816, -3.5071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4610, device='cuda:0', dtype=torch.float64)
tensor([-2.1242, -2.9937, -2.9244, -3.3839, -3.5136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2809, device='cuda:0', dtype=torch.float64)
tensor([-2.1305, -2.9971, -2.9270, -3.3868, -3.5197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4002, device='cuda:0', dtype=torch.float64)
tensor([-2.1376, -3.0022, -2.9283, -3.3917, -3.5251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6724, device='cuda:0', dtype=torch.float64)
tensor([-2.1479, -3.0088, -2.9268, -3.3930, -3.5299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2073, device='cuda:0', dtype=torch.float64)
tensor([-2.1602, -3.0168, -2.9252, -3.3920, -3.5356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4749, device='cuda:0', dtype=torch.float64)
tensor([-2.1724, -3.0240, -2.9254, -3.3923, -3.5402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0687, device='cuda:0', dtype=torch.float64)
tensor([-2.1837, -3.0319, -2.9260, -3.3927, -3.5442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0452, device='cuda:0', dtype=torch.float64)
tensor([-2.1945, -3.0414, -2.9268, -3.3922, -3.5490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2725, device='cuda:0', dtype=torch.float64)
tensor([-2.2069, -3.0521, -2.9279, -3.3938, -3.5521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6383, device='cuda:0', dtype=torch.float64)
tensor([-2.2243, -3.0675, -2.9281, -3.3962, -3.5556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3625, device='cuda:0', dtype=torch.float64)
tensor([-2.2438, -3.0846, -2.9265, -3.3963, -3.5601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4608, device='cuda:0', dtype=torch.float64)
tensor([-2.2634, -3.1023, -2.9262, -3.3964, -3.5683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3441, device='cuda:0', dtype=torch.float64)
tensor([-2.2830, -3.1203, -2.9276, -3.3984, -3.5786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1807, device='cuda:0', dtype=torch.float64)
tensor([-2.3056, -3.1429, -2.9288, -3.4033, -3.5924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3639, device='cuda:0', dtype=torch.float64)
tensor([-2.3295, -3.1705, -2.9308, -3.4101, -3.6077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5279, device='cuda:0', dtype=torch.float64)
tensor([-2.3522, -3.1953, -2.9341, -3.4158, -3.6221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([-2.3737, -3.2212, -2.9384, -3.4246, -3.6344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2419, device='cuda:0', dtype=torch.float64)
tensor([-2.3960, -3.2473, -2.9427, -3.4329, -3.6475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4704, device='cuda:0', dtype=torch.float64)
tensor([-2.4190, -3.2731, -2.9478, -3.4400, -3.6612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5003, device='cuda:0', dtype=torch.float64)
tensor([-2.4440, -3.3002, -2.9535, -3.4487, -3.6781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3850, device='cuda:0', dtype=torch.float64)
tensor([-2.4704, -3.3346, -2.9585, -3.4600, -3.6967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2190, device='cuda:0', dtype=torch.float64)
tensor([-2.4994, -3.3776, -2.9631, -3.4728, -3.7198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4688, device='cuda:0', dtype=torch.float64)
tensor([-2.5255, -3.4115, -2.9706, -3.4832, -3.7357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2536, device='cuda:0', dtype=torch.float64)
tensor([-2.5521, -3.4486, -2.9795, -3.4976, -3.7537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2579, device='cuda:0', dtype=torch.float64)
tensor([-2.5801, -3.4855, -2.9877, -3.5134, -3.7726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3220, device='cuda:0', dtype=torch.float64)
tensor([-2.6090, -3.5225, -2.9984, -3.5316, -3.7922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1575, device='cuda:0', dtype=torch.float64)
tensor([-2.6389, -3.5652, -3.0091, -3.5540, -3.8086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3400, device='cuda:0', dtype=torch.float64)
tensor([-2.6683, -3.6099, -3.0203, -3.5805, -3.8237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0107, device='cuda:0', dtype=torch.float64)
tensor([-2.6973, -3.6575, -3.0305, -3.6110, -3.8398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4981, device='cuda:0', dtype=torch.float64)
tensor([-2.7261, -3.7086, -3.0407, -3.6444, -3.8575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3796, device='cuda:0', dtype=torch.float64)
tensor([-2.7574, -3.7631, -3.0512, -3.6739, -3.8816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1415, device='cuda:0', dtype=torch.float64)
tensor([-2.7902, -3.8259, -3.0625, -3.7064, -3.9067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1249, device='cuda:0', dtype=torch.float64)
tensor([-2.8228, -3.8962, -3.0762, -3.7434, -3.9332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0461, device='cuda:0', dtype=torch.float64)
tensor([-2.8565, -3.9722, -3.0894, -3.7813, -3.9621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9479, device='cuda:0', dtype=torch.float64)
tensor([-2.8902, -4.0491, -3.1027, -3.8195, -3.9941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-2.9231, -4.1271, -3.1152, -3.8571, -4.0281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0585, device='cuda:0', dtype=torch.float64)
tensor([-2.9565, -4.1949, -3.1312, -3.8886, -4.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3134, device='cuda:0', dtype=torch.float64)
tensor([-2.9927, -4.2764, -3.1493, -3.9203, -4.1051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9931, device='cuda:0', dtype=torch.float64)
tensor([-3.0297, -4.3736, -3.1666, -3.9632, -4.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1554, device='cuda:0', dtype=torch.float64)
tensor([-3.0680, -4.4860, -3.1838, -4.0134, -4.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1750, device='cuda:0', dtype=torch.float64)
tensor([-3.1043, -4.6006, -3.2027, -4.0665, -4.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9673, device='cuda:0', dtype=torch.float64)
tensor([-3.1389, -4.7095, -3.2205, -4.1104, -4.3077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0500, device='cuda:0', dtype=torch.float64)
tensor([-3.1758, -4.8405, -3.2413, -4.1732, -4.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8801, device='cuda:0', dtype=torch.float64)
tensor([-3.2131, -4.9740, -3.2629, -4.2314, -4.4242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8554, device='cuda:0', dtype=torch.float64)
tensor([-3.2489, -5.1213, -3.2862, -4.2959, -4.4823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1392, device='cuda:0', dtype=torch.float64)
tensor([-3.2843, -5.2772, -3.3146, -4.3595, -4.5323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9187, device='cuda:0', dtype=torch.float64)
tensor([-3.3194, -5.4402, -3.3449, -4.4212, -4.5979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9516, device='cuda:0', dtype=torch.float64)
tensor([-3.3554, -5.6128, -3.3769, -4.4973, -4.6703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3725, device='cuda:0', dtype=torch.float64)
tensor([-3.3925, -5.7799, -3.4067, -4.5718, -4.7619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9748, device='cuda:0', dtype=torch.float64)
tensor([-3.4275, -5.9717, -3.4401, -4.6675, -4.8582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1953, device='cuda:0', dtype=torch.float64)
tensor([-3.4604, -6.1417, -3.4713, -4.7391, -4.9502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([-3.4945, -6.3019, -3.5054, -4.7995, -5.0361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9768, device='cuda:0', dtype=torch.float64)
tensor([-3.5303, -6.4692, -3.5387, -4.8667, -5.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8044, device='cuda:0', dtype=torch.float64)
tensor([-3.5646, -6.6292, -3.5776, -4.9384, -5.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0799, device='cuda:0', dtype=torch.float64)
tensor([-3.5966, -6.7741, -3.6129, -4.9845, -5.2765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([-3.6266, -6.9160, -3.6448, -5.0712, -5.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7117, device='cuda:0', dtype=torch.float64)
tensor([-3.6546, -7.0289, -3.6661, -5.1333, -5.3689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8183, device='cuda:0', dtype=torch.float64)
tensor([-3.6805, -7.1213, -3.6842, -5.1812, -5.3923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7622, device='cuda:0', dtype=torch.float64)
tensor([-3.7071, -7.1879, -3.6957, -5.2027, -5.4041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9835, device='cuda:0', dtype=torch.float64)
tensor([-3.7334, -7.2715, -3.7097, -5.2333, -5.4332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8430, device='cuda:0', dtype=torch.float64)
tensor([-3.7607, -7.3888, -3.7330, -5.2864, -5.5015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7368, device='cuda:0', dtype=torch.float64)
tensor([-3.7889, -7.4801, -3.7536, -5.3231, -5.5648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7621, device='cuda:0', dtype=torch.float64)
tensor([-3.8181, -7.5728, -3.7726, -5.3566, -5.6350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8101, device='cuda:0', dtype=torch.float64)
tensor([-3.8498, -7.6517, -3.7871, -5.3849, -5.7120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7751, device='cuda:0', dtype=torch.float64)
tensor([-3.8792, -7.7233, -3.7974, -5.4040, -5.7664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8307, device='cuda:0', dtype=torch.float64)
tensor([-3.9089, -7.7812, -3.8104, -5.4274, -5.7946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8234, device='cuda:0', dtype=torch.float64)
tensor([-3.9408, -7.8570, -3.8339, -5.4487, -5.8485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8431, device='cuda:0', dtype=torch.float64)
tensor([-3.9738, -7.9063, -3.8622, -5.4516, -5.8825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7954, device='cuda:0', dtype=torch.float64)
tensor([-4.0069, -7.9381, -3.8979, -5.4537, -5.9164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6889, device='cuda:0', dtype=torch.float64)
tensor([-4.0378, -7.9533, -3.9376, -5.4721, -5.9242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7634, device='cuda:0', dtype=torch.float64)
tensor([-4.0686, -7.9919, -3.9802, -5.5064, -5.9402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7435, device='cuda:0', dtype=torch.float64)
tensor([-4.0968, -8.0282, -4.0242, -5.5418, -5.9596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6710, device='cuda:0', dtype=torch.float64)
tensor([-4.1240, -8.0438, -4.0618, -5.5671, -5.9731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6617, device='cuda:0', dtype=torch.float64)
tensor([-4.1481, -8.0626, -4.1065, -5.5981, -6.0060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7348, device='cuda:0', dtype=torch.float64)
tensor([-4.1704, -8.0679, -4.1329, -5.6149, -6.0286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7182, device='cuda:0', dtype=torch.float64)
tensor([-4.1909, -8.0632, -4.1477, -5.6239, -6.0292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6399, device='cuda:0', dtype=torch.float64)
tensor([-4.2125, -8.0484, -4.1580, -5.6297, -6.0210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7844, device='cuda:0', dtype=torch.float64)
tensor([-4.2351, -8.0505, -4.1562, -5.6422, -6.0168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5444, device='cuda:0', dtype=torch.float64)
tensor([-4.2574, -8.0474, -4.1586, -5.6570, -6.0116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6965, device='cuda:0', dtype=torch.float64)
tensor([-4.2814, -8.0378, -4.1688, -5.6770, -6.0113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6276, device='cuda:0', dtype=torch.float64)
tensor([-4.3045, -8.0258, -4.1847, -5.7034, -6.0095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6155, device='cuda:0', dtype=torch.float64)
tensor([-4.3269, -8.0060, -4.2039, -5.7366, -6.0148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8629, device='cuda:0', dtype=torch.float64)
tensor([-4.3473, -8.0009, -4.2246, -5.7612, -6.0132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6876, device='cuda:0', dtype=torch.float64)
tensor([-4.3678, -7.9917, -4.2390, -5.7825, -6.0102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6870, device='cuda:0', dtype=torch.float64)
tensor([-4.3872, -7.9775, -4.2503, -5.8018, -6.0038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7253, device='cuda:0', dtype=torch.float64)
tensor([-4.4063, -7.9971, -4.2628, -5.8377, -6.0103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5880, device='cuda:0', dtype=torch.float64)
tensor([-4.4240, -8.0268, -4.2810, -5.8824, -6.0333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-4.4427, -8.0413, -4.2991, -5.9282, -6.0403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6413, device='cuda:0', dtype=torch.float64)
tensor([-4.4588, -8.0359, -4.3009, -5.9651, -6.0425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6037, device='cuda:0', dtype=torch.float64)
tensor([-4.4759, -8.0422, -4.2987, -6.0031, -6.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6628, device='cuda:0', dtype=torch.float64)
tensor([-4.4968, -8.0510, -4.2990, -6.0307, -6.0396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6661, device='cuda:0', dtype=torch.float64)
tensor([-4.5205, -8.0476, -4.3021, -6.0588, -6.0217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7396, device='cuda:0', dtype=torch.float64)
tensor([-4.5514, -8.0399, -4.2918, -6.0848, -5.9654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5326, device='cuda:0', dtype=torch.float64)
tensor([-4.5849, -8.0081, -4.2867, -6.1024, -5.9073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6197, device='cuda:0', dtype=torch.float64)
tensor([-4.6154, -7.9927, -4.2847, -6.1169, -5.8770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4904, device='cuda:0', dtype=torch.float64)
tensor([-4.6455, -7.9577, -4.2806, -6.1269, -5.8378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4971, device='cuda:0', dtype=torch.float64)
tensor([-4.6738, -7.9248, -4.2823, -6.1433, -5.8113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5451, device='cuda:0', dtype=torch.float64)
tensor([-4.7002, -7.8925, -4.2812, -6.1600, -5.7841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4905, device='cuda:0', dtype=torch.float64)
tensor([-4.7257, -7.8586, -4.2782, -6.1755, -5.7659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5414, device='cuda:0', dtype=torch.float64)
tensor([-4.7557, -7.8156, -4.2733, -6.1935, -5.7433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5523, device='cuda:0', dtype=torch.float64)
tensor([-4.7777, -7.7857, -4.2660, -6.2104, -5.7411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5931, device='cuda:0', dtype=torch.float64)
tensor([-4.8034, -7.7625, -4.2653, -6.2348, -5.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5627, device='cuda:0', dtype=torch.float64)
tensor([-4.8243, -7.7610, -4.2692, -6.2699, -5.7314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4703, device='cuda:0', dtype=torch.float64)
tensor([-4.8412, -7.7702, -4.2746, -6.3061, -5.7375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5842, device='cuda:0', dtype=torch.float64)
tensor([-4.8612, -7.7661, -4.2773, -6.3296, -5.7349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5132, device='cuda:0', dtype=torch.float64)
tensor([-4.8835, -7.7591, -4.2807, -6.3559, -5.7361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5273, device='cuda:0', dtype=torch.float64)
tensor([-4.9071, -7.7265, -4.2825, -6.3757, -5.7306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5483, device='cuda:0', dtype=torch.float64)
tensor([-4.9356, -7.6996, -4.2839, -6.4069, -5.7204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5360, device='cuda:0', dtype=torch.float64)
tensor([-4.9656, -7.6956, -4.2911, -6.4537, -5.7203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4570, device='cuda:0', dtype=torch.float64)
tensor([-4.9877, -7.7047, -4.3007, -6.4921, -5.7296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4838, device='cuda:0', dtype=torch.float64)
tensor([-5.0052, -7.6986, -4.3070, -6.5180, -5.7410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4938, device='cuda:0', dtype=torch.float64)
tensor([-5.0352, -7.6709, -4.3140, -6.5556, -5.7365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4323, device='cuda:0', dtype=torch.float64)
tensor([-5.0582, -7.6547, -4.3190, -6.5917, -5.7395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4311, device='cuda:0', dtype=torch.float64)
tensor([-5.0859, -7.6277, -4.3194, -6.6280, -5.7274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4375, device='cuda:0', dtype=torch.float64)
tensor([-5.1160, -7.5898, -4.3240, -6.6614, -5.7103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3656, device='cuda:0', dtype=torch.float64)
tensor([-5.1435, -7.5471, -4.3272, -6.6875, -5.6923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3755, device='cuda:0', dtype=torch.float64)
tensor([-5.1737, -7.5142, -4.3338, -6.7251, -5.6753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4478, device='cuda:0', dtype=torch.float64)
tensor([-5.1944, -7.4914, -4.3406, -6.7576, -5.6645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3752, device='cuda:0', dtype=torch.float64)
tensor([-5.2224, -7.4813, -4.3440, -6.8012, -5.6513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3888, device='cuda:0', dtype=torch.float64)
tensor([-5.2501, -7.4789, -4.3474, -6.8563, -5.6402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3487, device='cuda:0', dtype=torch.float64)
tensor([-5.2754, -7.4831, -4.3534, -6.9156, -5.6352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3381, device='cuda:0', dtype=torch.float64)
tensor([-5.2950, -7.4722, -4.3600, -6.9560, -5.6358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4407, device='cuda:0', dtype=torch.float64)
tensor([-5.3057, -7.4695, -4.3695, -6.9859, -5.6404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4172, device='cuda:0', dtype=torch.float64)
tensor([-5.3157, -7.4574, -4.3742, -7.0074, -5.6435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4084, device='cuda:0', dtype=torch.float64)
tensor([-5.3201, -7.4486, -4.3774, -7.0205, -5.6474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4242, device='cuda:0', dtype=torch.float64)
tensor([-5.3204, -7.4330, -4.3796, -7.0349, -5.6448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3541, device='cuda:0', dtype=torch.float64)
tensor([-5.3248, -7.4288, -4.3768, -7.0530, -5.6372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4515, device='cuda:0', dtype=torch.float64)
tensor([-5.3311, -7.4300, -4.3736, -7.0736, -5.6354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4172, device='cuda:0', dtype=torch.float64)
tensor([-5.3301, -7.4355, -4.3746, -7.0839, -5.6381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3389, device='cuda:0', dtype=torch.float64)
tensor([-5.3284, -7.4462, -4.3742, -7.0874, -5.6435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4331, device='cuda:0', dtype=torch.float64)
tensor([-5.3182, -7.4572, -4.3775, -7.0748, -5.6452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3825, device='cuda:0', dtype=torch.float64)
tensor([-5.3038, -7.4626, -4.3830, -7.0595, -5.6526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3399, device='cuda:0', dtype=torch.float64)
tensor([-5.2976, -7.4573, -4.3855, -7.0507, -5.6553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3570, device='cuda:0', dtype=torch.float64)
tensor([-5.2912, -7.4544, -4.3893, -7.0427, -5.6590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3526, device='cuda:0', dtype=torch.float64)
tensor([-5.2883, -7.4564, -4.3930, -7.0402, -5.6607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3870, device='cuda:0', dtype=torch.float64)
tensor([-5.2897, -7.4498, -4.3865, -7.0453, -5.6577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4118, device='cuda:0', dtype=torch.float64)
tensor([-5.2879, -7.4349, -4.3794, -7.0433, -5.6553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3709, device='cuda:0', dtype=torch.float64)
tensor([-5.2919, -7.4148, -4.3752, -7.0462, -5.6479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2985, device='cuda:0', dtype=torch.float64)
tensor([-5.2912, -7.3980, -4.3686, -7.0474, -5.6397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3344, device='cuda:0', dtype=torch.float64)
tensor([-5.2917, -7.3695, -4.3578, -7.0472, -5.6302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3088, device='cuda:0', dtype=torch.float64)
tensor([-5.2875, -7.3434, -4.3475, -7.0425, -5.6254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3355, device='cuda:0', dtype=torch.float64)
tensor([-5.2724, -7.3171, -4.3356, -7.0235, -5.6277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2850, device='cuda:0', dtype=torch.float64)
tensor([-5.2564, -7.2957, -4.3229, -7.0080, -5.6290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3161, device='cuda:0', dtype=torch.float64)
tensor([-5.2361, -7.2818, -4.3105, -6.9870, -5.6398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2977, device='cuda:0', dtype=torch.float64)
tensor([-5.2175, -7.2474, -4.2982, -6.9595, -5.6430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3209, device='cuda:0', dtype=torch.float64)
tensor([-5.2041, -7.2224, -4.2881, -6.9450, -5.6444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3414, device='cuda:0', dtype=torch.float64)
tensor([-5.1934, -7.1888, -4.2765, -6.9236, -5.6472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3610, device='cuda:0', dtype=torch.float64)
tensor([-5.1738, -7.1703, -4.2640, -6.8941, -5.6553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2732, device='cuda:0', dtype=torch.float64)
tensor([-5.1563, -7.1577, -4.2527, -6.8627, -5.6669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2949, device='cuda:0', dtype=torch.float64)
tensor([-5.1319, -7.1389, -4.2407, -6.8147, -5.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3258, device='cuda:0', dtype=torch.float64)
tensor([-5.1008, -7.1270, -4.2278, -6.7560, -5.6885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2358, device='cuda:0', dtype=torch.float64)
tensor([-5.0715, -7.1179, -4.2170, -6.7041, -5.6953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2660, device='cuda:0', dtype=torch.float64)
tensor([-5.0473, -7.1124, -4.2055, -6.6634, -5.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2764, device='cuda:0', dtype=torch.float64)
tensor([-5.0274, -7.1064, -4.1971, -6.6291, -5.7116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2819, device='cuda:0', dtype=torch.float64)
tensor([-5.0111, -7.0944, -4.1881, -6.5975, -5.7127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([-4.9991, -7.0735, -4.1793, -6.5633, -5.7067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2953, device='cuda:0', dtype=torch.float64)
tensor([-4.9869, -7.0521, -4.1697, -6.5299, -5.6977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2826, device='cuda:0', dtype=torch.float64)
tensor([-4.9745, -7.0226, -4.1619, -6.4999, -5.6899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2355, device='cuda:0', dtype=torch.float64)
tensor([-4.9625, -6.9972, -4.1542, -6.4773, -5.6787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2328, device='cuda:0', dtype=torch.float64)
tensor([-4.9555, -6.9689, -4.1478, -6.4618, -5.6649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2918, device='cuda:0', dtype=torch.float64)
tensor([-4.9460, -6.9297, -4.1418, -6.4376, -5.6552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2440, device='cuda:0', dtype=torch.float64)
tensor([-4.9407, -6.8803, -4.1362, -6.4149, -5.6404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2993, device='cuda:0', dtype=torch.float64)
tensor([-4.9317, -6.8334, -4.1303, -6.3827, -5.6275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2824, device='cuda:0', dtype=torch.float64)
tensor([-4.9199, -6.7844, -4.1236, -6.3406, -5.6158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2382, device='cuda:0', dtype=torch.float64)
tensor([-4.9040, -6.7423, -4.1166, -6.2934, -5.6086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2694, device='cuda:0', dtype=torch.float64)
tensor([-4.8893, -6.6930, -4.1102, -6.2436, -5.6035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2899, device='cuda:0', dtype=torch.float64)
tensor([-4.8754, -6.6368, -4.1050, -6.1969, -5.5894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([-4.8568, -6.5808, -4.0985, -6.1473, -5.5720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2657, device='cuda:0', dtype=torch.float64)
tensor([-4.8335, -6.5256, -4.0918, -6.0948, -5.5550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3118, device='cuda:0', dtype=torch.float64)
tensor([-4.8064, -6.4852, -4.0854, -6.0404, -5.5408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3001, device='cuda:0', dtype=torch.float64)
tensor([-4.7888, -6.4443, -4.0806, -5.9985, -5.5261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2957, device='cuda:0', dtype=torch.float64)
tensor([-4.7684, -6.4028, -4.0763, -5.9534, -5.5119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3142, device='cuda:0', dtype=torch.float64)
tensor([-4.7483, -6.3662, -4.0698, -5.9101, -5.4965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2968, device='cuda:0', dtype=torch.float64)
tensor([-4.7280, -6.3253, -4.0626, -5.8657, -5.4780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3475, device='cuda:0', dtype=torch.float64)
tensor([-4.7050, -6.2831, -4.0544, -5.8204, -5.4540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2751, device='cuda:0', dtype=torch.float64)
tensor([-4.6844, -6.2386, -4.0472, -5.7774, -5.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2757, device='cuda:0', dtype=torch.float64)
tensor([-4.6657, -6.1992, -4.0401, -5.7391, -5.4142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3623, device='cuda:0', dtype=torch.float64)
tensor([-4.6501, -6.1494, -4.0331, -5.7007, -5.3919], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_113739.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(121.1668, device='cuda:0', dtype=torch.float64)
tensor([ -2.0542, -12.1258,  -6.4309, -10.7881,  -5.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.4294, device='cuda:0', dtype=torch.float64)
tensor([ -2.8973,  -9.8341,  -6.9983, -11.8393, -16.4621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(115.7217, device='cuda:0', dtype=torch.float64)
tensor([ -3.6232,  -6.6891,  -5.9951, -16.4192, -18.0363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(125.4275, device='cuda:0', dtype=torch.float64)
tensor([ -2.6374,  -5.2043,  -4.5258, -13.2000, -13.4817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.4047, device='cuda:0', dtype=torch.float64)
tensor([ -2.5914,  -4.7901,  -3.3444,  -9.8021, -10.5282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.5265, device='cuda:0', dtype=torch.float64)
tensor([-2.4996, -4.9150, -3.0103, -6.4267, -6.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(41.4664, device='cuda:0', dtype=torch.float64)
tensor([-2.5244, -5.0633, -2.9416, -6.3946, -4.8344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(49.4115, device='cuda:0', dtype=torch.float64)
tensor([-2.5406, -4.8285, -2.8985, -6.5945, -4.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.0535, device='cuda:0', dtype=torch.float64)
tensor([-2.5751, -5.4407, -2.9404, -7.7967, -4.4394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.0689, device='cuda:0', dtype=torch.float64)
tensor([ -2.5623,  -5.4413,  -3.1894, -12.2401,  -4.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.1622, device='cuda:0', dtype=torch.float64)
tensor([ -2.4409,  -4.4632,  -3.5219, -13.6174,  -4.3076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.3022, device='cuda:0', dtype=torch.float64)
tensor([ -2.2555,  -3.8109,  -3.7585, -11.0653,  -4.7665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.9948, device='cuda:0', dtype=torch.float64)
tensor([-2.0840, -3.4038, -4.2989, -7.6214, -4.8250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3278, device='cuda:0', dtype=torch.float64)
tensor([-1.9987, -3.1742, -4.4854, -4.6311, -4.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.4012, device='cuda:0', dtype=torch.float64)
tensor([-2.0064, -3.1430, -4.0277, -3.8699, -3.8587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.3381, device='cuda:0', dtype=torch.float64)
tensor([-2.0817, -3.1912, -3.5640, -3.6155, -3.8088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.5530, device='cuda:0', dtype=torch.float64)
tensor([-2.1693, -3.3820, -3.3214, -3.4766, -3.7774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.2481, device='cuda:0', dtype=torch.float64)
tensor([-2.2006, -3.6519, -3.2131, -3.4503, -3.7464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.2294, device='cuda:0', dtype=torch.float64)
tensor([-2.1409, -3.5149, -3.1552, -3.4673, -3.7003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0499, device='cuda:0', dtype=torch.float64)
tensor([-2.0349, -3.1096, -3.1077, -3.4811, -3.6201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.0646, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.9101, -3.0536, -3.5414, -3.5323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8505, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.8884, -2.9931, -3.5981, -3.4715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0152, device='cuda:0', dtype=torch.float64)
tensor([-1.8891, -2.9159, -2.9369, -3.6366, -3.4533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7283, device='cuda:0', dtype=torch.float64)
tensor([-1.8892, -2.9658, -2.8936, -3.7078, -3.4687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.3119, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -3.0283, -2.8646, -3.8198, -3.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9956, device='cuda:0', dtype=torch.float64)
tensor([-1.9039, -3.0859, -2.8435, -3.8890, -3.4593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3134, device='cuda:0', dtype=torch.float64)
tensor([-1.9111, -3.1114, -2.8282, -3.8610, -3.4247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.6800, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -3.0858, -2.8186, -3.7717, -3.4068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.4592, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -3.0271, -2.8140, -3.6864, -3.4056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2975, device='cuda:0', dtype=torch.float64)
tensor([-1.8049, -2.9645, -2.8141, -3.6336, -3.4190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2965, device='cuda:0', dtype=torch.float64)
tensor([-1.7769, -2.9134, -2.8180, -3.6082, -3.4447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5524, device='cuda:0', dtype=torch.float64)
tensor([-1.7647, -2.8795, -2.8247, -3.5995, -3.4767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1091, device='cuda:0', dtype=torch.float64)
tensor([-1.7631, -2.8595, -2.8326, -3.5999, -3.5075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1535, device='cuda:0', dtype=torch.float64)
tensor([-1.7680, -2.8392, -2.8403, -3.6024, -3.5283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.4885, device='cuda:0', dtype=torch.float64)
tensor([-1.7770, -2.8102, -2.8451, -3.5997, -3.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6015, device='cuda:0', dtype=torch.float64)
tensor([-1.7883, -2.7796, -2.8444, -3.5954, -3.5165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5510, device='cuda:0', dtype=torch.float64)
tensor([-1.8003, -2.7584, -2.8373, -3.5949, -3.4844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3513, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.7509, -2.8245, -3.5955, -3.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9224, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.7542, -2.8086, -3.5960, -3.4025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4215, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.7647, -2.7911, -3.5951, -3.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8969, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7802, -2.7718, -3.5906, -3.3307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5198, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7985, -2.7491, -3.5773, -3.2971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3889, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.8174, -2.7258, -3.5559, -3.2680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2723, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.8361, -2.7060, -3.5314, -3.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2879, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.8528, -2.6931, -3.5076, -3.2393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1830, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.8669, -2.6872, -3.4852, -3.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1286, device='cuda:0', dtype=torch.float64)
tensor([-1.8704, -2.8784, -2.6872, -3.4624, -3.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9967, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.8865, -2.6924, -3.4401, -3.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7722, device='cuda:0', dtype=torch.float64)
tensor([-1.8711, -2.8908, -2.7015, -3.4198, -3.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5886, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.8907, -2.7137, -3.4033, -3.2713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4255, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.8862, -2.7286, -3.3928, -3.2825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3690, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.8780, -2.7444, -3.3875, -3.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2239, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.8684, -2.7597, -3.3862, -3.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2363, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.8591, -2.7733, -3.3878, -3.3185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2051, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.8515, -2.7843, -3.3906, -3.3304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1637, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.8457, -2.7922, -3.3937, -3.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1368, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.8415, -2.7973, -3.3959, -3.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0701, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.8378, -2.8002, -3.3981, -3.3594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0507, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.8337, -2.8014, -3.3997, -3.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9515, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.8296, -2.8009, -3.3999, -3.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9804, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.8256, -2.7984, -3.3980, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8708, device='cuda:0', dtype=torch.float64)
tensor([-1.8536, -2.8216, -2.7950, -3.3945, -3.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8381, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.8172, -2.7918, -3.3899, -3.3631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7958, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.8121, -2.7887, -3.3841, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5376, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.8069, -2.7877, -3.3792, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6007, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.8007, -2.7890, -3.3763, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5619, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7934, -2.7933, -3.3747, -3.3609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4270, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7855, -2.7989, -3.3745, -3.3614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4325, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.7781, -2.8059, -3.3757, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3693, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7725, -2.8128, -3.3763, -3.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3545, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7694, -2.8188, -3.3760, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2985, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7693, -2.8232, -3.3740, -3.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3572, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.7717, -2.8263, -3.3706, -3.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2596, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7758, -2.8288, -3.3668, -3.3739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2751, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.7807, -2.8313, -3.3637, -3.3781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2091, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7857, -2.8336, -3.3611, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7907, -2.8359, -3.3587, -3.3860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1219, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7957, -2.8379, -3.3558, -3.3894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2014, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.7995, -2.8400, -3.3524, -3.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0895, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.8030, -2.8419, -3.3493, -3.3949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2136, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.8062, -2.8434, -3.3464, -3.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1758, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.8084, -2.8450, -3.3433, -3.3964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1319, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.8101, -2.8463, -3.3404, -3.3969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0278, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.8106, -2.8478, -3.3382, -3.3972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0405, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.8098, -2.8499, -3.3373, -3.3964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0287, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.8084, -2.8522, -3.3376, -3.3950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1238, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.8070, -2.8539, -3.3383, -3.3925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0560, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.8061, -2.8541, -3.3383, -3.3894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0701, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.8043, -2.8543, -3.3387, -3.3860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0633, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.8032, -2.8544, -3.3379, -3.3835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-1.8733, -2.8030, -2.8533, -3.3358, -3.3818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1013, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.8030, -2.8530, -3.3341, -3.3796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0348, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.8022, -2.8534, -3.3343, -3.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0043, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.8010, -2.8545, -3.3355, -3.3765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0707, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.8001, -2.8561, -3.3365, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1291, device='cuda:0', dtype=torch.float64)
tensor([-1.8668, -2.8006, -2.8566, -3.3363, -3.3771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0529, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.8008, -2.8570, -3.3354, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.8016, -2.8575, -3.3347, -3.3799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.8017, -2.8583, -3.3348, -3.3815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8958, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.8016, -2.8595, -3.3350, -3.3824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8999, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.8006, -2.8619, -3.3358, -3.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9491, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.7992, -2.8644, -3.3371, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0547, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.7989, -2.8663, -3.3374, -3.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0402, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7980, -2.8686, -3.3379, -3.3819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1688, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.7972, -2.8702, -3.3365, -3.3818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([-1.8740, -2.7979, -2.8714, -3.3356, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-1.8758, -2.8001, -2.8710, -3.3335, -3.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.8026, -2.8698, -3.3313, -3.3762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8776, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.8041, -2.8685, -3.3300, -3.3743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0363, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.8055, -2.8680, -3.3307, -3.3721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1710, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.8062, -2.8686, -3.3322, -3.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-1.8833, -2.8069, -2.8686, -3.3327, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9806, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.8070, -2.8692, -3.3335, -3.3721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3831, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.8064, -2.8697, -3.3331, -3.3747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0261, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.8063, -2.8710, -3.3346, -3.3779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0784, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.8047, -2.8725, -3.3373, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9689, device='cuda:0', dtype=torch.float64)
tensor([-1.8807, -2.8032, -2.8738, -3.3399, -3.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0621, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.8014, -2.8754, -3.3426, -3.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9070, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.8003, -2.8762, -3.3454, -3.3930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0903, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.8000, -2.8770, -3.3478, -3.3975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1160, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.8009, -2.8758, -3.3468, -3.4015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.8031, -2.8726, -3.3407, -3.4049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1109, device='cuda:0', dtype=torch.float64)
tensor([-1.8946, -2.8055, -2.8696, -3.3355, -3.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1015, device='cuda:0', dtype=torch.float64)
tensor([-1.8979, -2.8070, -2.8682, -3.3330, -3.4085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1148, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.8088, -2.8677, -3.3316, -3.4091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0870, device='cuda:0', dtype=torch.float64)
tensor([-1.9022, -2.8086, -2.8684, -3.3333, -3.4096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0333, device='cuda:0', dtype=torch.float64)
tensor([-1.9020, -2.8070, -2.8711, -3.3372, -3.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0035, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.8071, -2.8727, -3.3408, -3.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9913, device='cuda:0', dtype=torch.float64)
tensor([-1.8987, -2.8089, -2.8751, -3.3414, -3.4044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1243, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.8095, -2.8773, -3.3418, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.8094, -2.8788, -3.3402, -3.4025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0735, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.8093, -2.8797, -3.3367, -3.4025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8814, device='cuda:0', dtype=torch.float64)
tensor([-1.8964, -2.8099, -2.8803, -3.3329, -3.4035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2325, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.8111, -2.8806, -3.3302, -3.4051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0986, device='cuda:0', dtype=torch.float64)
tensor([-1.8979, -2.8117, -2.8812, -3.3298, -3.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1176, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.8106, -2.8824, -3.3288, -3.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1643, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.8088, -2.8833, -3.3299, -3.4065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.8073, -2.8846, -3.3314, -3.4064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9675, device='cuda:0', dtype=torch.float64)
tensor([-1.9019, -2.8064, -2.8849, -3.3332, -3.4055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1731, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.8060, -2.8843, -3.3358, -3.4044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3217, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.8072, -2.8810, -3.3378, -3.4025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0045, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.8074, -2.8779, -3.3403, -3.4007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2556, device='cuda:0', dtype=torch.float64)
tensor([-1.9067, -2.8076, -2.8756, -3.3430, -3.3980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4248, device='cuda:0', dtype=torch.float64)
tensor([-1.9045, -2.8067, -2.8749, -3.3466, -3.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9665, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.8069, -2.8747, -3.3470, -3.3949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1676, device='cuda:0', dtype=torch.float64)
tensor([-1.9049, -2.8075, -2.8745, -3.3451, -3.3938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0091, device='cuda:0', dtype=torch.float64)
tensor([-1.9094, -2.8106, -2.8729, -3.3419, -3.3934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2991, device='cuda:0', dtype=torch.float64)
tensor([-1.9144, -2.8143, -2.8711, -3.3380, -3.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1535, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.8190, -2.8697, -3.3344, -3.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3065, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.8227, -2.8705, -3.3340, -3.3944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9993, device='cuda:0', dtype=torch.float64)
tensor([-1.9244, -2.8250, -2.8730, -3.3365, -3.3956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1664, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.8269, -2.8762, -3.3409, -3.3979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3224, device='cuda:0', dtype=torch.float64)
tensor([-1.9241, -2.8292, -2.8800, -3.3459, -3.4008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1246, device='cuda:0', dtype=torch.float64)
tensor([-1.9220, -2.8309, -2.8824, -3.3492, -3.4019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2478, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.8330, -2.8833, -3.3498, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3405, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.8341, -2.8833, -3.3511, -3.4046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2466, device='cuda:0', dtype=torch.float64)
tensor([-1.9222, -2.8340, -2.8832, -3.3522, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0596, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.8336, -2.8832, -3.3527, -3.4061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2080, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.8332, -2.8839, -3.3549, -3.4056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1420, device='cuda:0', dtype=torch.float64)
tensor([-1.9177, -2.8306, -2.8852, -3.3587, -3.4034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-1.9145, -2.8266, -2.8884, -3.3655, -3.4017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3518, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.8232, -2.8911, -3.3667, -3.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2918, device='cuda:0', dtype=torch.float64)
tensor([-1.9158, -2.8192, -2.8938, -3.3643, -3.3969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1685, device='cuda:0', dtype=torch.float64)
tensor([-1.9179, -2.8163, -2.8954, -3.3623, -3.3939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4113, device='cuda:0', dtype=torch.float64)
tensor([-1.9184, -2.8149, -2.8976, -3.3608, -3.3901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2719, device='cuda:0', dtype=torch.float64)
tensor([-1.9170, -2.8108, -2.9008, -3.3596, -3.3862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1299, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.8074, -2.9032, -3.3584, -3.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2930, device='cuda:0', dtype=torch.float64)
tensor([-1.9113, -2.8038, -2.9056, -3.3611, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4370, device='cuda:0', dtype=torch.float64)
tensor([-1.9095, -2.8031, -2.9056, -3.3627, -3.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4656, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.8055, -2.9069, -3.3639, -3.3792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2540, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.8103, -2.9055, -3.3576, -3.3804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3051, device='cuda:0', dtype=torch.float64)
tensor([-1.9205, -2.8195, -2.9011, -3.3465, -3.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2798, device='cuda:0', dtype=torch.float64)
tensor([-1.9267, -2.8294, -2.8974, -3.3388, -3.3891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2025, device='cuda:0', dtype=torch.float64)
tensor([-1.9347, -2.8423, -2.8938, -3.3336, -3.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5695, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.8510, -2.8922, -3.3345, -3.3996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0986, device='cuda:0', dtype=torch.float64)
tensor([-1.9410, -2.8539, -2.8922, -3.3361, -3.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2837, device='cuda:0', dtype=torch.float64)
tensor([-1.9411, -2.8526, -2.8935, -3.3412, -3.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0923, device='cuda:0', dtype=torch.float64)
tensor([-1.9408, -2.8521, -2.8965, -3.3522, -3.4033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1576, device='cuda:0', dtype=torch.float64)
tensor([-1.9412, -2.8546, -2.8994, -3.3655, -3.4061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3974, device='cuda:0', dtype=torch.float64)
tensor([-1.9412, -2.8557, -2.9002, -3.3706, -3.4059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4876, device='cuda:0', dtype=torch.float64)
tensor([-1.9425, -2.8572, -2.8967, -3.3647, -3.4055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2495, device='cuda:0', dtype=torch.float64)
tensor([-1.9435, -2.8577, -2.8946, -3.3577, -3.4071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3566, device='cuda:0', dtype=torch.float64)
tensor([-1.9454, -2.8587, -2.8940, -3.3525, -3.4105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1184, device='cuda:0', dtype=torch.float64)
tensor([-1.9470, -2.8580, -2.8935, -3.3503, -3.4128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1957, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.8554, -2.8962, -3.3511, -3.4135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5998, device='cuda:0', dtype=torch.float64)
tensor([-1.9427, -2.8495, -2.8993, -3.3523, -3.4118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1703, device='cuda:0', dtype=torch.float64)
tensor([-1.9403, -2.8434, -2.9034, -3.3562, -3.4126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4494, device='cuda:0', dtype=torch.float64)
tensor([-1.9419, -2.8407, -2.9059, -3.3587, -3.4169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2757, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.8410, -2.9076, -3.3592, -3.4206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3979, device='cuda:0', dtype=torch.float64)
tensor([-1.9512, -2.8427, -2.9034, -3.3503, -3.4237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2201, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.8466, -2.8996, -3.3431, -3.4267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5506, device='cuda:0', dtype=torch.float64)
tensor([-1.9594, -2.8503, -2.8959, -3.3415, -3.4289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2978, device='cuda:0', dtype=torch.float64)
tensor([-1.9593, -2.8524, -2.8948, -3.3446, -3.4284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3545, device='cuda:0', dtype=torch.float64)
tensor([-1.9565, -2.8488, -2.8954, -3.3501, -3.4270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4972, device='cuda:0', dtype=torch.float64)
tensor([-1.9541, -2.8419, -2.8956, -3.3569, -3.4244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2240, device='cuda:0', dtype=torch.float64)
tensor([-1.9553, -2.8396, -2.8949, -3.3576, -3.4225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2246, device='cuda:0', dtype=torch.float64)
tensor([-1.9583, -2.8393, -2.8930, -3.3571, -3.4216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-1.9630, -2.8400, -2.8913, -3.3549, -3.4197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7584, device='cuda:0', dtype=torch.float64)
tensor([-1.9700, -2.8419, -2.8896, -3.3488, -3.4193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2644, device='cuda:0', dtype=torch.float64)
tensor([-1.9776, -2.8452, -2.8865, -3.3418, -3.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([-1.9851, -2.8493, -2.8853, -3.3376, -3.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0845, device='cuda:0', dtype=torch.float64)
tensor([-1.9909, -2.8541, -2.8855, -3.3365, -3.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4478, device='cuda:0', dtype=torch.float64)
tensor([-1.9973, -2.8615, -2.8851, -3.3378, -3.4119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4266, device='cuda:0', dtype=torch.float64)
tensor([-2.0022, -2.8683, -2.8847, -3.3393, -3.4111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-2.0030, -2.8714, -2.8859, -3.3435, -3.4115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3181, device='cuda:0', dtype=torch.float64)
tensor([-2.0026, -2.8717, -2.8875, -3.3476, -3.4111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0155, device='cuda:0', dtype=torch.float64)
tensor([-2.0010, -2.8704, -2.8912, -3.3558, -3.4123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3261, device='cuda:0', dtype=torch.float64)
tensor([-2.0004, -2.8706, -2.8947, -3.3647, -3.4164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4255, device='cuda:0', dtype=torch.float64)
tensor([-1.9992, -2.8700, -2.8977, -3.3732, -3.4195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4721, device='cuda:0', dtype=torch.float64)
tensor([-1.9993, -2.8724, -2.8977, -3.3753, -3.4239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3038, device='cuda:0', dtype=torch.float64)
tensor([-2.0000, -2.8737, -2.8983, -3.3748, -3.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3072, device='cuda:0', dtype=torch.float64)
tensor([-2.0009, -2.8752, -2.8994, -3.3743, -3.4311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2265, device='cuda:0', dtype=torch.float64)
tensor([-2.0000, -2.8753, -2.9025, -3.3746, -3.4334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4839, device='cuda:0', dtype=torch.float64)
tensor([-1.9984, -2.8736, -2.9072, -3.3726, -3.4345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0247, device='cuda:0', dtype=torch.float64)
tensor([-1.9974, -2.8722, -2.9113, -3.3695, -3.4360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([-1.9970, -2.8694, -2.9145, -3.3634, -3.4349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4120, device='cuda:0', dtype=torch.float64)
tensor([-1.9957, -2.8650, -2.9192, -3.3599, -3.4339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1246, device='cuda:0', dtype=torch.float64)
tensor([-1.9961, -2.8607, -2.9247, -3.3584, -3.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3167, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.8595, -2.9282, -3.3577, -3.4338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3400, device='cuda:0', dtype=torch.float64)
tensor([-2.0020, -2.8609, -2.9309, -3.3526, -3.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3682, device='cuda:0', dtype=torch.float64)
tensor([-2.0055, -2.8636, -2.9327, -3.3476, -3.4315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3891, device='cuda:0', dtype=torch.float64)
tensor([-2.0095, -2.8655, -2.9349, -3.3433, -3.4305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6100, device='cuda:0', dtype=torch.float64)
tensor([-2.0132, -2.8662, -2.9349, -3.3439, -3.4299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1826, device='cuda:0', dtype=torch.float64)
tensor([-2.0168, -2.8654, -2.9352, -3.3490, -3.4296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3701, device='cuda:0', dtype=torch.float64)
tensor([-2.0183, -2.8625, -2.9369, -3.3583, -3.4298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4535, device='cuda:0', dtype=torch.float64)
tensor([-2.0179, -2.8582, -2.9380, -3.3695, -3.4292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4085, device='cuda:0', dtype=torch.float64)
tensor([-2.0173, -2.8537, -2.9393, -3.3805, -3.4275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5778, device='cuda:0', dtype=torch.float64)
tensor([-2.0174, -2.8551, -2.9388, -3.3904, -3.4266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4034, device='cuda:0', dtype=torch.float64)
tensor([-2.0181, -2.8560, -2.9384, -3.3987, -3.4281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3573, device='cuda:0', dtype=torch.float64)
tensor([-2.0188, -2.8536, -2.9374, -3.4038, -3.4297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4476, device='cuda:0', dtype=torch.float64)
tensor([-2.0190, -2.8534, -2.9378, -3.4122, -3.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0682, device='cuda:0', dtype=torch.float64)
tensor([-2.0196, -2.8552, -2.9382, -3.4208, -3.4366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4608, device='cuda:0', dtype=torch.float64)
tensor([-2.0243, -2.8610, -2.9357, -3.4207, -3.4441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5386, device='cuda:0', dtype=torch.float64)
tensor([-2.0322, -2.8695, -2.9311, -3.4127, -3.4516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3359, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -2.8770, -2.9272, -3.4051, -3.4575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3664, device='cuda:0', dtype=torch.float64)
tensor([-2.0505, -2.8831, -2.9264, -3.3982, -3.4625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3961, device='cuda:0', dtype=torch.float64)
tensor([-2.0539, -2.8873, -2.9254, -3.3940, -3.4658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5778, device='cuda:0', dtype=torch.float64)
tensor([-2.0557, -2.8873, -2.9269, -3.3932, -3.4671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3539, device='cuda:0', dtype=torch.float64)
tensor([-2.0574, -2.8870, -2.9306, -3.3962, -3.4703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3458, device='cuda:0', dtype=torch.float64)
tensor([-2.0587, -2.8877, -2.9342, -3.3952, -3.4747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3584, device='cuda:0', dtype=torch.float64)
tensor([-2.0621, -2.8951, -2.9339, -3.3889, -3.4810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-2.0650, -2.9017, -2.9331, -3.3831, -3.4858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3830, device='cuda:0', dtype=torch.float64)
tensor([-2.0689, -2.9104, -2.9310, -3.3791, -3.4886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6536, device='cuda:0', dtype=torch.float64)
tensor([-2.0730, -2.9198, -2.9319, -3.3807, -3.4938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3317, device='cuda:0', dtype=torch.float64)
tensor([-2.0749, -2.9276, -2.9346, -3.3834, -3.4986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4203, device='cuda:0', dtype=torch.float64)
tensor([-2.0755, -2.9335, -2.9388, -3.3875, -3.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4197, device='cuda:0', dtype=torch.float64)
tensor([-2.0767, -2.9404, -2.9450, -3.3948, -3.5035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5204, device='cuda:0', dtype=torch.float64)
tensor([-2.0795, -2.9478, -2.9505, -3.4007, -3.5062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2597, device='cuda:0', dtype=torch.float64)
tensor([-2.0804, -2.9522, -2.9563, -3.4067, -3.5088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3650, device='cuda:0', dtype=torch.float64)
tensor([-2.0808, -2.9542, -2.9629, -3.4128, -3.5108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6164, device='cuda:0', dtype=torch.float64)
tensor([-2.0840, -2.9570, -2.9659, -3.4158, -3.5108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5296, device='cuda:0', dtype=torch.float64)
tensor([-2.0906, -2.9616, -2.9672, -3.4182, -3.5122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5459, device='cuda:0', dtype=torch.float64)
tensor([-2.0957, -2.9645, -2.9689, -3.4227, -3.5144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2501, device='cuda:0', dtype=torch.float64)
tensor([-2.0996, -2.9678, -2.9706, -3.4267, -3.5168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4425, device='cuda:0', dtype=torch.float64)
tensor([-2.1037, -2.9696, -2.9728, -3.4272, -3.5215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3909, device='cuda:0', dtype=torch.float64)
tensor([-2.1055, -2.9676, -2.9754, -3.4235, -3.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3497, device='cuda:0', dtype=torch.float64)
tensor([-2.1048, -2.9631, -2.9782, -3.4207, -3.5282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4883, device='cuda:0', dtype=torch.float64)
tensor([-2.1045, -2.9592, -2.9813, -3.4182, -3.5312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2020, device='cuda:0', dtype=torch.float64)
tensor([-2.1023, -2.9538, -2.9860, -3.4205, -3.5340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2487, device='cuda:0', dtype=torch.float64)
tensor([-2.1001, -2.9474, -2.9885, -3.4203, -3.5340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2636, device='cuda:0', dtype=torch.float64)
tensor([-2.0993, -2.9424, -2.9898, -3.4197, -3.5364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1892, device='cuda:0', dtype=torch.float64)
tensor([-2.0983, -2.9377, -2.9907, -3.4204, -3.5384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3518, device='cuda:0', dtype=torch.float64)
tensor([-2.0953, -2.9343, -2.9931, -3.4246, -3.5412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3620, device='cuda:0', dtype=torch.float64)
tensor([-2.0928, -2.9336, -2.9969, -3.4283, -3.5463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3917, device='cuda:0', dtype=torch.float64)
tensor([-2.0947, -2.9358, -2.9979, -3.4335, -3.5518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0985, device='cuda:0', dtype=torch.float64)
tensor([-2.0998, -2.9421, -2.9946, -3.4343, -3.5543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2095, device='cuda:0', dtype=torch.float64)
tensor([-2.1068, -2.9509, -2.9884, -3.4272, -3.5564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4517, device='cuda:0', dtype=torch.float64)
tensor([-2.1152, -2.9612, -2.9802, -3.4202, -3.5599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3140, device='cuda:0', dtype=torch.float64)
tensor([-2.1262, -2.9716, -2.9744, -3.4106, -3.5675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3368, device='cuda:0', dtype=torch.float64)
tensor([-2.1371, -2.9826, -2.9688, -3.4032, -3.5758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1867, device='cuda:0', dtype=torch.float64)
tensor([-2.1486, -2.9960, -2.9636, -3.3945, -3.5809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6076, device='cuda:0', dtype=torch.float64)
tensor([-2.1611, -3.0103, -2.9588, -3.3923, -3.5869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5185, device='cuda:0', dtype=torch.float64)
tensor([-2.1677, -3.0182, -2.9592, -3.3949, -3.5920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4413, device='cuda:0', dtype=torch.float64)
tensor([-2.1722, -3.0244, -2.9618, -3.3953, -3.5955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3923, device='cuda:0', dtype=torch.float64)
tensor([-2.1726, -3.0285, -2.9658, -3.4014, -3.5967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5121, device='cuda:0', dtype=torch.float64)
tensor([-2.1716, -3.0318, -2.9719, -3.4109, -3.5999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-2.1701, -3.0332, -2.9805, -3.4243, -3.6011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3023, device='cuda:0', dtype=torch.float64)
tensor([-2.1695, -3.0342, -2.9888, -3.4333, -3.6046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0935, device='cuda:0', dtype=torch.float64)
tensor([-2.1713, -3.0368, -2.9964, -3.4384, -3.6085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2716, device='cuda:0', dtype=torch.float64)
tensor([-2.1729, -3.0415, -3.0029, -3.4413, -3.6117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0997, device='cuda:0', dtype=torch.float64)
tensor([-2.1751, -3.0469, -3.0082, -3.4415, -3.6162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3251, device='cuda:0', dtype=torch.float64)
tensor([-2.1810, -3.0532, -3.0129, -3.4397, -3.6200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5638, device='cuda:0', dtype=torch.float64)
tensor([-2.1872, -3.0649, -3.0170, -3.4384, -3.6264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4618, device='cuda:0', dtype=torch.float64)
tensor([-2.1918, -3.0717, -3.0237, -3.4423, -3.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2154, device='cuda:0', dtype=torch.float64)
tensor([-2.1955, -3.0803, -3.0289, -3.4484, -3.6346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1927, device='cuda:0', dtype=torch.float64)
tensor([-2.2005, -3.0885, -3.0345, -3.4532, -3.6349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5348, device='cuda:0', dtype=torch.float64)
tensor([-2.2091, -3.0980, -3.0360, -3.4550, -3.6360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3964, device='cuda:0', dtype=torch.float64)
tensor([-2.2173, -3.1091, -3.0362, -3.4645, -3.6386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1559, device='cuda:0', dtype=torch.float64)
tensor([-2.2239, -3.1198, -3.0357, -3.4765, -3.6414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4778, device='cuda:0', dtype=torch.float64)
tensor([-2.2313, -3.1310, -3.0384, -3.4889, -3.6454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0183, device='cuda:0', dtype=torch.float64)
tensor([-2.2405, -3.1392, -3.0409, -3.4971, -3.6500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4770, device='cuda:0', dtype=torch.float64)
tensor([-2.2499, -3.1489, -3.0451, -3.5087, -3.6559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3596, device='cuda:0', dtype=torch.float64)
tensor([-2.2622, -3.1564, -3.0484, -3.5163, -3.6614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4748, device='cuda:0', dtype=torch.float64)
tensor([-2.2766, -3.1654, -3.0506, -3.5154, -3.6677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3978, device='cuda:0', dtype=torch.float64)
tensor([-2.2929, -3.1743, -3.0527, -3.5187, -3.6706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3393, device='cuda:0', dtype=torch.float64)
tensor([-2.3100, -3.1888, -3.0553, -3.5283, -3.6730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2210, device='cuda:0', dtype=torch.float64)
tensor([-2.3286, -3.2006, -3.0574, -3.5347, -3.6771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2559, device='cuda:0', dtype=torch.float64)
tensor([-2.3473, -3.2120, -3.0584, -3.5279, -3.6790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5681, device='cuda:0', dtype=torch.float64)
tensor([-2.3640, -3.2177, -3.0620, -3.5226, -3.6816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5588, device='cuda:0', dtype=torch.float64)
tensor([-2.3853, -3.2280, -3.0661, -3.5120, -3.6843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4810, device='cuda:0', dtype=torch.float64)
tensor([-2.4091, -3.2370, -3.0707, -3.4956, -3.6899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1975, device='cuda:0', dtype=torch.float64)
tensor([-2.4323, -3.2465, -3.0766, -3.4837, -3.6953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6433, device='cuda:0', dtype=torch.float64)
tensor([-2.4555, -3.2550, -3.0812, -3.4774, -3.7036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1814, device='cuda:0', dtype=torch.float64)
tensor([-2.4792, -3.2662, -3.0840, -3.4649, -3.7139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4348, device='cuda:0', dtype=torch.float64)
tensor([-2.5027, -3.2802, -3.0856, -3.4578, -3.7218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2090, device='cuda:0', dtype=torch.float64)
tensor([-2.5284, -3.2964, -3.0904, -3.4567, -3.7323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2828, device='cuda:0', dtype=torch.float64)
tensor([-2.5515, -3.3127, -3.0951, -3.4594, -3.7426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-2.5752, -3.3299, -3.0997, -3.4625, -3.7547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6441, device='cuda:0', dtype=torch.float64)
tensor([-2.5950, -3.3465, -3.1058, -3.4733, -3.7657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1549, device='cuda:0', dtype=torch.float64)
tensor([-2.6170, -3.3653, -3.1109, -3.4892, -3.7750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3798, device='cuda:0', dtype=torch.float64)
tensor([-2.6458, -3.3897, -3.1158, -3.5055, -3.7878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2677, device='cuda:0', dtype=torch.float64)
tensor([-2.6757, -3.4132, -3.1185, -3.5116, -3.8047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4109, device='cuda:0', dtype=torch.float64)
tensor([-2.7080, -3.4393, -3.1223, -3.5198, -3.8231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3175, device='cuda:0', dtype=torch.float64)
tensor([-2.7384, -3.4676, -3.1252, -3.5339, -3.8452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2784, device='cuda:0', dtype=torch.float64)
tensor([-2.7700, -3.4952, -3.1235, -3.5373, -3.8692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3661, device='cuda:0', dtype=torch.float64)
tensor([-2.8038, -3.5249, -3.1211, -3.5486, -3.9010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7296, device='cuda:0', dtype=torch.float64)
tensor([-2.8392, -3.5557, -3.1190, -3.5546, -3.9534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3597, device='cuda:0', dtype=torch.float64)
tensor([-2.8764, -3.5881, -3.1130, -3.5658, -4.0372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3087, device='cuda:0', dtype=torch.float64)
tensor([-2.9179, -3.6321, -3.1083, -3.5875, -4.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-2.9613, -3.6845, -3.1078, -3.6148, -4.3354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1312, device='cuda:0', dtype=torch.float64)
tensor([-3.0027, -3.7399, -3.1084, -3.6450, -4.5425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2720, device='cuda:0', dtype=torch.float64)
tensor([-3.0458, -3.8111, -3.1127, -3.6907, -4.8212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2441, device='cuda:0', dtype=torch.float64)
tensor([-3.0934, -3.8822, -3.1173, -3.7308, -5.0782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9561, device='cuda:0', dtype=torch.float64)
tensor([-3.1411, -3.9626, -3.1225, -3.7829, -5.3533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-3.1873, -4.0552, -3.1305, -3.8590, -5.6969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([-3.2341, -4.1715, -3.1414, -3.9640, -6.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0769, device='cuda:0', dtype=torch.float64)
tensor([-3.2806, -4.3002, -3.1536, -4.1176, -6.4998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1176, device='cuda:0', dtype=torch.float64)
tensor([-3.3281, -4.4715, -3.1647, -4.3614, -7.0954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-3.3765, -4.6884, -3.1751, -4.6936, -7.7424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3022, device='cuda:0', dtype=torch.float64)
tensor([-3.4250, -5.0029, -3.1840, -5.0444, -8.2951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1119, device='cuda:0', dtype=torch.float64)
tensor([-3.4745, -5.4216, -3.1957, -5.4574, -8.8497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2461, device='cuda:0', dtype=torch.float64)
tensor([-3.5259, -5.9072, -3.2079, -5.8561, -9.3324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2565, device='cuda:0', dtype=torch.float64)
tensor([-3.5810, -6.4813, -3.2196, -6.3038, -9.8274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0793, device='cuda:0', dtype=torch.float64)
tensor([ -3.6342,  -6.9813,  -3.2333,  -6.6577, -10.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0686, device='cuda:0', dtype=torch.float64)
tensor([ -3.6885,  -7.5205,  -3.2480,  -6.8777, -10.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([ -3.7412,  -8.0201,  -3.2665,  -7.1297, -10.6489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2131, device='cuda:0', dtype=torch.float64)
tensor([ -3.7904,  -8.5210,  -3.2849,  -7.4498, -10.9903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([ -3.8364,  -9.0258,  -3.3072,  -7.8043, -11.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([ -3.8844,  -9.4006,  -3.3319,  -8.1441, -11.6525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0952, device='cuda:0', dtype=torch.float64)
tensor([ -3.9340,  -9.7168,  -3.3600,  -8.4677, -11.9633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2176, device='cuda:0', dtype=torch.float64)
tensor([ -3.9846, -10.1339,  -3.3885,  -8.7928, -12.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0784, device='cuda:0', dtype=torch.float64)
tensor([ -4.0364, -10.4312,  -3.4233,  -9.0571, -12.4485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([ -4.0882, -10.6615,  -3.4662,  -9.3581, -12.7232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1490, device='cuda:0', dtype=torch.float64)
tensor([ -4.1436, -10.8715,  -3.5151,  -9.6583, -12.9560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0635, device='cuda:0', dtype=torch.float64)
tensor([ -4.1989, -11.1678,  -3.5759, -10.0059, -13.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9589, device='cuda:0', dtype=torch.float64)
tensor([ -4.2528, -11.4753,  -3.6294, -10.3476, -13.4571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0136, device='cuda:0', dtype=torch.float64)
tensor([ -4.3100, -11.7572,  -3.6856, -10.7276, -13.7179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0377, device='cuda:0', dtype=torch.float64)
tensor([ -4.3720, -11.9374,  -3.7373, -11.1238, -13.9707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0770, device='cuda:0', dtype=torch.float64)
tensor([ -4.4289, -12.0889,  -3.7798, -11.4344, -14.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1172, device='cuda:0', dtype=torch.float64)
tensor([ -4.4877, -12.2850,  -3.8234, -11.8768, -14.4429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([ -4.5523, -12.4964,  -3.8716, -12.4171, -14.7947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([ -4.6193, -12.6501,  -3.9382, -12.8587, -15.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0719, device='cuda:0', dtype=torch.float64)
tensor([ -4.6936, -12.8282,  -4.0163, -13.3712, -15.4675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0572, device='cuda:0', dtype=torch.float64)
tensor([ -4.7697, -13.0166,  -4.0794, -13.8869, -15.9065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9241, device='cuda:0', dtype=torch.float64)
tensor([ -4.8491, -13.1817,  -4.1570, -14.4525, -16.3811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9482, device='cuda:0', dtype=torch.float64)
tensor([ -4.9195, -13.3893,  -4.2523, -14.8836, -16.7687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([ -4.9928, -13.3518,  -4.3350, -15.1846, -17.0289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8663, device='cuda:0', dtype=torch.float64)
tensor([ -5.0558, -13.2910,  -4.4300, -15.4043, -17.2525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0090, device='cuda:0', dtype=torch.float64)
tensor([ -5.1138, -13.2658,  -4.5054, -15.5832, -17.4843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0155, device='cuda:0', dtype=torch.float64)
tensor([ -5.1660, -13.2791,  -4.6052, -15.6555, -17.6713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1358, device='cuda:0', dtype=torch.float64)
tensor([ -5.2127, -13.2782,  -4.6763, -15.7055, -17.8271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9404, device='cuda:0', dtype=torch.float64)
tensor([ -5.2777, -13.2363,  -4.7349, -15.9161, -18.0836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0636, device='cuda:0', dtype=torch.float64)
tensor([ -5.3509, -13.0896,  -4.7719, -16.1475, -18.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0340, device='cuda:0', dtype=torch.float64)
tensor([ -5.4548, -12.8897,  -4.8213, -16.5571, -18.8466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1056, device='cuda:0', dtype=torch.float64)
tensor([ -5.5494, -12.8131,  -4.8430, -16.9494, -19.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9926, device='cuda:0', dtype=torch.float64)
tensor([ -5.6388, -12.6671,  -4.8456, -17.2405, -19.7371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1246, device='cuda:0', dtype=torch.float64)
tensor([ -5.7110, -12.5077,  -4.8235, -17.3521, -19.9764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9794, device='cuda:0', dtype=torch.float64)
tensor([ -5.7808, -12.4152,  -4.8379, -17.4576, -20.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9773, device='cuda:0', dtype=torch.float64)
tensor([ -5.8538, -12.3516,  -4.8232, -17.5503, -20.2704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3037, device='cuda:0', dtype=torch.float64)
tensor([ -5.8798, -12.2567,  -4.8081, -17.4151, -20.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7379, device='cuda:0', dtype=torch.float64)
tensor([ -5.8963, -12.2016,  -4.7595, -17.2682, -20.0635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9419, device='cuda:0', dtype=torch.float64)
tensor([ -5.8994, -12.1273,  -4.7348, -17.0091, -19.8830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9577, device='cuda:0', dtype=torch.float64)
tensor([ -5.9073, -12.0253,  -4.7283, -16.7280, -19.6874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7944, device='cuda:0', dtype=torch.float64)
tensor([ -5.9153, -11.9270,  -4.7027, -16.4694, -19.5413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1648, device='cuda:0', dtype=torch.float64)
tensor([ -5.8971, -11.9021,  -4.6777, -15.9904, -19.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8118, device='cuda:0', dtype=torch.float64)
tensor([ -5.9019, -11.9163,  -4.6807, -15.6754, -18.9207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9200, device='cuda:0', dtype=torch.float64)
tensor([ -5.9289, -11.8547,  -4.6979, -15.3659, -18.7124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0111, device='cuda:0', dtype=torch.float64)
tensor([ -5.9540, -11.8097,  -4.7047, -15.0038, -18.4346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8146, device='cuda:0', dtype=torch.float64)
tensor([ -5.9774, -11.8154,  -4.7274, -14.6540, -18.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9137, device='cuda:0', dtype=torch.float64)
tensor([ -5.9861, -11.8343,  -4.7460, -14.2297, -17.6904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9504, device='cuda:0', dtype=torch.float64)
tensor([ -5.9884, -11.8444,  -4.7585, -13.8032, -17.3097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9701, device='cuda:0', dtype=torch.float64)
tensor([ -6.0020, -11.8286,  -4.7691, -13.3926, -16.9335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9461, device='cuda:0', dtype=torch.float64)
tensor([ -6.0428, -11.6849,  -4.7905, -13.0406, -16.5807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([ -6.0993, -11.5424,  -4.8202, -12.7980, -16.2710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8207, device='cuda:0', dtype=torch.float64)
tensor([ -6.1562, -11.3632,  -4.8489, -12.5309, -15.9529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8839, device='cuda:0', dtype=torch.float64)
tensor([ -6.2170, -11.1467,  -4.8905, -12.2549, -15.6209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1234, device='cuda:0', dtype=torch.float64)
tensor([ -6.3213, -10.8607,  -4.9510, -11.9919, -15.2388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8416, device='cuda:0', dtype=torch.float64)
tensor([ -6.4432, -10.6092,  -4.9888, -11.7789, -14.9790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8217, device='cuda:0', dtype=torch.float64)
tensor([ -6.6147, -10.3980,  -5.0301, -11.6271, -14.8404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9389, device='cuda:0', dtype=torch.float64)
tensor([ -6.8107, -10.1016,  -5.0853, -11.5166, -14.8577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8469, device='cuda:0', dtype=torch.float64)
tensor([ -7.0194,  -9.7988,  -5.1391, -11.3749, -14.8615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7549, device='cuda:0', dtype=torch.float64)
tensor([ -7.2224,  -9.5692,  -5.2042, -11.2950, -14.9191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8492, device='cuda:0', dtype=torch.float64)
tensor([ -7.4135,  -9.3838,  -5.2819, -11.2938, -14.9738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7313, device='cuda:0', dtype=torch.float64)
tensor([ -7.6274,  -9.1074,  -5.3915, -11.2796, -15.0419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9509, device='cuda:0', dtype=torch.float64)
tensor([ -7.8034,  -8.8842,  -5.4980, -11.2704, -15.1168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8789, device='cuda:0', dtype=torch.float64)
tensor([ -7.9503,  -8.6306,  -5.6215, -11.2560, -15.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9255, device='cuda:0', dtype=torch.float64)
tensor([ -8.0210,  -8.4768,  -5.7305, -11.2072, -15.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7674, device='cuda:0', dtype=torch.float64)
tensor([ -8.0813,  -8.3342,  -5.8404, -11.1395, -15.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8430, device='cuda:0', dtype=torch.float64)
tensor([ -8.1622,  -8.2727,  -5.9236, -11.0228, -15.1108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8260, device='cuda:0', dtype=torch.float64)
tensor([ -8.1735,  -8.2078,  -6.0040, -10.9073, -15.0302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6779, device='cuda:0', dtype=torch.float64)
tensor([ -8.1115,  -8.1751,  -6.0783, -10.8713, -14.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8796, device='cuda:0', dtype=torch.float64)
tensor([ -8.1301,  -8.1700,  -6.1206, -10.9084, -14.9470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7795, device='cuda:0', dtype=torch.float64)
tensor([ -8.1323,  -8.1565,  -6.1572, -10.9660, -14.9462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7594, device='cuda:0', dtype=torch.float64)
tensor([ -8.1125,  -8.1504,  -6.1834, -11.0000, -14.9148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7503, device='cuda:0', dtype=torch.float64)
tensor([ -8.0915,  -8.1449,  -6.1911, -11.0112, -14.7646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8933, device='cuda:0', dtype=torch.float64)
tensor([ -8.0712,  -8.1193,  -6.2107, -10.9757, -14.5302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9970, device='cuda:0', dtype=torch.float64)
tensor([ -8.0967,  -8.0652,  -6.2476, -11.0082, -14.3540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7702, device='cuda:0', dtype=torch.float64)
tensor([ -8.0844,  -8.0051,  -6.2748, -11.0406, -14.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1408, device='cuda:0', dtype=torch.float64)
tensor([ -8.0364,  -7.9019,  -6.2734, -10.8986, -13.8920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8252, device='cuda:0', dtype=torch.float64)
tensor([ -7.9615,  -7.7858,  -6.2632, -10.7894, -13.6445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9596, device='cuda:0', dtype=torch.float64)
tensor([ -7.9152,  -7.7422,  -6.2637, -10.7053, -13.3044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8672, device='cuda:0', dtype=torch.float64)
tensor([ -7.8486,  -7.6817,  -6.2742, -10.6201, -12.9270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9501, device='cuda:0', dtype=torch.float64)
tensor([ -7.7349,  -7.5924,  -6.2932, -10.4547, -12.4641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7546, device='cuda:0', dtype=torch.float64)
tensor([ -7.6306,  -7.5146,  -6.3054, -10.3424, -12.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7393, device='cuda:0', dtype=torch.float64)
tensor([ -7.5069,  -7.4670,  -6.3045, -10.2473, -11.8473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7591, device='cuda:0', dtype=torch.float64)
tensor([ -7.4224,  -7.4492,  -6.3374, -10.2373, -11.6441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7812, device='cuda:0', dtype=torch.float64)
tensor([ -7.3435,  -7.4481,  -6.3666, -10.2187, -11.3968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9083, device='cuda:0', dtype=torch.float64)
tensor([ -7.2962,  -7.4717,  -6.3934, -10.2639, -11.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8002, device='cuda:0', dtype=torch.float64)
tensor([ -7.2433,  -7.4379,  -6.4232, -10.2313, -11.0219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8057, device='cuda:0', dtype=torch.float64)
tensor([ -7.1917,  -7.4208,  -6.4420, -10.1963, -10.8523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6995, device='cuda:0', dtype=torch.float64)
tensor([ -7.1558,  -7.4279,  -6.4714, -10.1840, -10.7365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8119, device='cuda:0', dtype=torch.float64)
tensor([ -7.1176,  -7.4401,  -6.4898, -10.1919, -10.6645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8114, device='cuda:0', dtype=torch.float64)
tensor([ -7.0794,  -7.4298,  -6.4904, -10.1403, -10.5666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6258, device='cuda:0', dtype=torch.float64)
tensor([ -7.0536,  -7.4018,  -6.5010, -10.1294, -10.5717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8498, device='cuda:0', dtype=torch.float64)
tensor([ -7.0362,  -7.3649,  -6.5115, -10.1066, -10.5262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8629, device='cuda:0', dtype=torch.float64)
tensor([ -7.0113,  -7.3228,  -6.5050, -10.0533, -10.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6687, device='cuda:0', dtype=torch.float64)
tensor([ -6.9966,  -7.2994,  -6.5187, -10.0078, -10.3751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7907, device='cuda:0', dtype=torch.float64)
tensor([ -6.9923,  -7.2658,  -6.5136,  -9.9380, -10.3727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6950, device='cuda:0', dtype=torch.float64)
tensor([ -6.9685,  -7.2450,  -6.5138,  -9.8633, -10.3980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7321, device='cuda:0', dtype=torch.float64)
tensor([ -6.9492,  -7.2284,  -6.4967,  -9.8030, -10.3811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8973, device='cuda:0', dtype=torch.float64)
tensor([ -6.9710,  -7.2387,  -6.4847,  -9.7941, -10.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7304, device='cuda:0', dtype=torch.float64)
tensor([ -7.0094,  -7.2519,  -6.4675,  -9.8116, -10.4341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6723, device='cuda:0', dtype=torch.float64)
tensor([ -7.0432,  -7.2714,  -6.4531,  -9.8402, -10.3499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5928, device='cuda:0', dtype=torch.float64)
tensor([ -7.0924,  -7.2904,  -6.4471,  -9.8494, -10.2941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8440, device='cuda:0', dtype=torch.float64)
tensor([ -7.1525,  -7.3506,  -6.4373,  -9.8852, -10.2788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7848, device='cuda:0', dtype=torch.float64)
tensor([ -7.1760,  -7.3668,  -6.4126,  -9.8859, -10.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([ -7.1844,  -7.3481,  -6.3899,  -9.8435, -10.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8333, device='cuda:0', dtype=torch.float64)
tensor([ -7.1898,  -7.3058,  -6.3658,  -9.7843, -10.3166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8289, device='cuda:0', dtype=torch.float64)
tensor([ -7.2222,  -7.2932,  -6.3548,  -9.7590, -10.3779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6958, device='cuda:0', dtype=torch.float64)
tensor([ -7.2676,  -7.3053,  -6.3540,  -9.8068, -10.5000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8200, device='cuda:0', dtype=torch.float64)
tensor([ -7.3118,  -7.3375,  -6.3525,  -9.8578, -10.6776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6589, device='cuda:0', dtype=torch.float64)
tensor([ -7.3775,  -7.3595,  -6.3667,  -9.9080, -10.8901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6256, device='cuda:0', dtype=torch.float64)
tensor([ -7.4322,  -7.3774,  -6.3706,  -9.9531, -11.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7274, device='cuda:0', dtype=torch.float64)
tensor([ -7.4856,  -7.3779,  -6.3833, -10.0007, -11.4498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6976, device='cuda:0', dtype=torch.float64)
tensor([ -7.5442,  -7.3835,  -6.4069, -10.0817, -11.8429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7448, device='cuda:0', dtype=torch.float64)
tensor([ -7.5700,  -7.3724,  -6.4161, -10.1284, -12.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5589, device='cuda:0', dtype=torch.float64)
tensor([ -7.5882,  -7.3731,  -6.4447, -10.2149, -12.5578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7064, device='cuda:0', dtype=torch.float64)
tensor([ -7.6269,  -7.4192,  -6.4764, -10.3317, -12.9146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6446, device='cuda:0', dtype=torch.float64)
tensor([ -7.6503,  -7.4407,  -6.5037, -10.4172, -13.3224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7095, device='cuda:0', dtype=torch.float64)
tensor([ -7.6733,  -7.4764,  -6.5200, -10.5104, -13.6893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5278, device='cuda:0', dtype=torch.float64)
tensor([ -7.6903,  -7.5119,  -6.5315, -10.6037, -14.0209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6010, device='cuda:0', dtype=torch.float64)
tensor([ -7.7272,  -7.5575,  -6.5428, -10.7276, -14.2802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6818, device='cuda:0', dtype=torch.float64)
tensor([ -7.7608,  -7.6133,  -6.5514, -10.8378, -14.5044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6994, device='cuda:0', dtype=torch.float64)
tensor([ -7.7672,  -7.6335,  -6.5405, -10.8576, -14.6065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7147, device='cuda:0', dtype=torch.float64)
tensor([ -7.7812,  -7.6779,  -6.5281, -10.9043, -14.6937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6643, device='cuda:0', dtype=torch.float64)
tensor([ -7.8110,  -7.7371,  -6.5297, -10.9681, -14.7669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6428, device='cuda:0', dtype=torch.float64)
tensor([ -7.8460,  -7.8107,  -6.5278, -11.0701, -14.8120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7134, device='cuda:0', dtype=torch.float64)
tensor([ -7.8839,  -7.8970,  -6.5334, -11.1785, -14.7830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4841, device='cuda:0', dtype=torch.float64)
tensor([ -7.9211,  -7.9895,  -6.5324, -11.2377, -14.7227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6609, device='cuda:0', dtype=torch.float64)
tensor([ -7.9508,  -8.0446,  -6.5436, -11.3064, -14.6996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6200, device='cuda:0', dtype=torch.float64)
tensor([ -7.9777,  -8.1398,  -6.5772, -11.4692, -14.8229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5540, device='cuda:0', dtype=torch.float64)
tensor([ -8.0111,  -8.2324,  -6.6278, -11.6865, -15.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4320, device='cuda:0', dtype=torch.float64)
tensor([ -8.0417,  -8.3037,  -6.6746, -11.8555, -15.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6236, device='cuda:0', dtype=torch.float64)
tensor([ -8.0607,  -8.3403,  -6.7015, -11.9128, -15.3974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5260, device='cuda:0', dtype=torch.float64)
tensor([ -8.0737,  -8.3597,  -6.7192, -11.9226, -15.4116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5699, device='cuda:0', dtype=torch.float64)
tensor([ -8.1038,  -8.4069,  -6.7469, -12.0059, -15.4548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5785, device='cuda:0', dtype=torch.float64)
tensor([ -8.1355,  -8.4461,  -6.7775, -12.0567, -15.3950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6660, device='cuda:0', dtype=torch.float64)
tensor([ -8.1788,  -8.5194,  -6.8224, -12.1468, -15.3867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5728, device='cuda:0', dtype=torch.float64)
tensor([ -8.2105,  -8.5718,  -6.8591, -12.1710, -15.2790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7501, device='cuda:0', dtype=torch.float64)
tensor([ -8.2409,  -8.6041,  -6.8990, -12.1353, -15.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5515, device='cuda:0', dtype=torch.float64)
tensor([ -8.2698,  -8.6385,  -6.9447, -12.0806, -14.9124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5006, device='cuda:0', dtype=torch.float64)
tensor([ -8.2752,  -8.6326,  -6.9707, -11.9845, -14.7015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5747, device='cuda:0', dtype=torch.float64)
tensor([ -8.2578,  -8.6273,  -6.9846, -11.8980, -14.5308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5167, device='cuda:0', dtype=torch.float64)
tensor([ -8.2427,  -8.6265,  -7.0045, -11.8412, -14.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5219, device='cuda:0', dtype=torch.float64)
tensor([ -8.2313,  -8.6764,  -7.0365, -11.8657, -14.3227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5024, device='cuda:0', dtype=torch.float64)
tensor([ -8.2320,  -8.7588,  -7.0718, -11.9151, -14.3031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5622, device='cuda:0', dtype=torch.float64)
tensor([ -8.2152,  -8.7700,  -7.0865, -11.8819, -14.2214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6016, device='cuda:0', dtype=torch.float64)
tensor([ -8.1636,  -8.7346,  -7.0972, -11.8480, -14.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6518, device='cuda:0', dtype=torch.float64)
tensor([ -8.0965,  -8.6660,  -7.1001, -11.7549, -14.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6674, device='cuda:0', dtype=torch.float64)
tensor([ -7.9826,  -8.5282,  -7.0713, -11.5171, -13.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6395, device='cuda:0', dtype=torch.float64)
tensor([ -7.8897,  -8.4552,  -7.0531, -11.3464, -13.8426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4797, device='cuda:0', dtype=torch.float64)
tensor([ -7.7948,  -8.3812,  -7.0255, -11.1591, -13.7451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5397, device='cuda:0', dtype=torch.float64)
tensor([ -7.6942,  -8.3115,  -6.9784, -10.9555, -13.5623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5637, device='cuda:0', dtype=torch.float64)
tensor([ -7.6031,  -8.2727,  -6.9303, -10.8012, -13.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5881, device='cuda:0', dtype=torch.float64)
tensor([ -7.5243,  -8.2951,  -6.9034, -10.7445, -13.4266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5519, device='cuda:0', dtype=torch.float64)
tensor([ -7.4623,  -8.3123,  -6.8827, -10.6958, -13.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5803, device='cuda:0', dtype=torch.float64)
tensor([ -7.4060,  -8.3297,  -6.8711, -10.7012, -13.6229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5259, device='cuda:0', dtype=torch.float64)
tensor([ -7.3490,  -8.3464,  -6.8624, -10.7060, -13.6914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5075, device='cuda:0', dtype=torch.float64)
tensor([ -7.3105,  -8.3649,  -6.8581, -10.7341, -13.6990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5102, device='cuda:0', dtype=torch.float64)
tensor([ -7.2661,  -8.3580,  -6.8472, -10.6918, -13.6881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4031, device='cuda:0', dtype=torch.float64)
tensor([ -7.2177,  -8.3200,  -6.8305, -10.6156, -13.7194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4660, device='cuda:0', dtype=torch.float64)
tensor([ -7.1775,  -8.2861,  -6.8198, -10.5469, -13.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5163, device='cuda:0', dtype=torch.float64)
tensor([ -7.1540,  -8.2631,  -6.8183, -10.5448, -13.7078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4928, device='cuda:0', dtype=torch.float64)
tensor([ -7.1283,  -8.2231,  -6.8020, -10.4952, -13.6367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4702, device='cuda:0', dtype=torch.float64)
tensor([ -7.1055,  -8.1795,  -6.7918, -10.4561, -13.5961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4571, device='cuda:0', dtype=torch.float64)
tensor([ -7.0686,  -8.1391,  -6.7904, -10.3873, -13.5516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3710, device='cuda:0', dtype=torch.float64)
tensor([ -7.0487,  -8.1145,  -6.7968, -10.3481, -13.4849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4637, device='cuda:0', dtype=torch.float64)
tensor([ -7.0328,  -8.0885,  -6.8039, -10.3087, -13.4193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5219, device='cuda:0', dtype=torch.float64)
tensor([ -7.0216,  -8.0583,  -6.8241, -10.3144, -13.4492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5288, device='cuda:0', dtype=torch.float64)
tensor([ -7.0162,  -8.0290,  -6.8528, -10.3449, -13.5284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3891, device='cuda:0', dtype=torch.float64)
tensor([ -7.0112,  -8.0042,  -6.8831, -10.3935, -13.6493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5404, device='cuda:0', dtype=torch.float64)
tensor([ -7.0173,  -7.9885,  -6.9293, -10.4719, -13.7634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5338, device='cuda:0', dtype=torch.float64)
tensor([ -7.0295,  -7.9935,  -6.9665, -10.5580, -13.8919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4925, device='cuda:0', dtype=torch.float64)
tensor([ -7.0532,  -8.0027,  -7.0010, -10.6355, -14.0098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5930, device='cuda:0', dtype=torch.float64)
tensor([ -7.0631,  -7.9866,  -7.0421, -10.7088, -14.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4892, device='cuda:0', dtype=torch.float64)
tensor([ -7.0672,  -7.9664,  -7.0831, -10.7471, -14.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4514, device='cuda:0', dtype=torch.float64)
tensor([ -7.0646,  -7.9549,  -7.1262, -10.7999, -14.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4217, device='cuda:0', dtype=torch.float64)
tensor([ -7.0595,  -7.9454,  -7.1615, -10.8415, -14.4204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4603, device='cuda:0', dtype=torch.float64)
tensor([ -7.0497,  -7.9349,  -7.2090, -10.8896, -14.4629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5014, device='cuda:0', dtype=torch.float64)
tensor([ -7.0381,  -7.9017,  -7.2343, -10.8823, -14.4180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4768, device='cuda:0', dtype=torch.float64)
tensor([ -7.0185,  -7.8249,  -7.2251, -10.7971, -14.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4872, device='cuda:0', dtype=torch.float64)
tensor([ -6.9962,  -7.7537,  -7.2181, -10.7288, -14.2804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4120, device='cuda:0', dtype=torch.float64)
tensor([ -6.9710,  -7.6998,  -7.2026, -10.6616, -14.2648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5552, device='cuda:0', dtype=torch.float64)
tensor([ -6.9560,  -7.6779,  -7.1865, -10.5949, -14.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4098, device='cuda:0', dtype=torch.float64)
tensor([ -6.9300,  -7.6590,  -7.1645, -10.4975, -14.1519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4100, device='cuda:0', dtype=torch.float64)
tensor([ -6.9050,  -7.6546,  -7.1485, -10.4468, -14.1011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4026, device='cuda:0', dtype=torch.float64)
tensor([ -6.8847,  -7.6574,  -7.1467, -10.4422, -14.1225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4644, device='cuda:0', dtype=torch.float64)
tensor([ -6.8584,  -7.6584,  -7.1336, -10.4193, -14.1060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4889, device='cuda:0', dtype=torch.float64)
tensor([ -6.8228,  -7.6325,  -7.1076, -10.3370, -13.9970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4241, device='cuda:0', dtype=torch.float64)
tensor([ -6.7872,  -7.6024,  -7.0825, -10.2426, -13.8165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3833, device='cuda:0', dtype=torch.float64)
tensor([ -6.7536,  -7.5775,  -7.0737, -10.1867, -13.7069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3915, device='cuda:0', dtype=torch.float64)
tensor([ -6.7190,  -7.5641,  -7.0674, -10.1395, -13.5488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3864, device='cuda:0', dtype=torch.float64)
tensor([ -6.6901,  -7.5733,  -7.0737, -10.1468, -13.4947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4334, device='cuda:0', dtype=torch.float64)
tensor([ -6.6620,  -7.5845,  -7.0750, -10.1206, -13.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4491, device='cuda:0', dtype=torch.float64)
tensor([ -6.6392,  -7.5892,  -7.0781, -10.0751, -13.2741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4548, device='cuda:0', dtype=torch.float64)
tensor([ -6.6194,  -7.6062,  -7.0790, -10.0043, -13.1081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3270, device='cuda:0', dtype=torch.float64)
tensor([ -6.5998,  -7.6267,  -7.0723,  -9.9435, -12.9650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3314, device='cuda:0', dtype=torch.float64)
tensor([ -6.5880,  -7.6589,  -7.0699,  -9.8928, -12.8365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3939, device='cuda:0', dtype=torch.float64)
tensor([ -6.5756,  -7.7129,  -7.0671,  -9.8488, -12.7260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4321, device='cuda:0', dtype=torch.float64)
tensor([ -6.5622,  -7.7545,  -7.0680,  -9.8235, -12.6607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3443, device='cuda:0', dtype=torch.float64)
tensor([ -6.5554,  -7.7944,  -7.0770,  -9.8111, -12.6433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3332, device='cuda:0', dtype=torch.float64)
tensor([ -6.5434,  -7.8405,  -7.0818,  -9.7896, -12.5813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4449, device='cuda:0', dtype=torch.float64)
tensor([ -6.5243,  -7.9023,  -7.0865,  -9.7665, -12.4599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4078, device='cuda:0', dtype=torch.float64)
tensor([ -6.5088,  -7.9531,  -7.0887,  -9.7445, -12.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4228, device='cuda:0', dtype=torch.float64)
tensor([ -6.4914,  -8.0293,  -7.0920,  -9.7206, -12.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3540, device='cuda:0', dtype=torch.float64)
tensor([ -6.4710,  -8.1018,  -7.1012,  -9.7042, -12.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3800, device='cuda:0', dtype=torch.float64)
tensor([ -6.4438,  -8.1576,  -7.1099,  -9.6764, -12.0526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4267, device='cuda:0', dtype=torch.float64)
tensor([ -6.4200,  -8.2148,  -7.1184,  -9.6741, -12.0839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3988, device='cuda:0', dtype=torch.float64)
tensor([ -6.4002,  -8.2682,  -7.1321,  -9.6835, -12.1685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3167, device='cuda:0', dtype=torch.float64)
tensor([ -6.3816,  -8.3214,  -7.1412,  -9.6955, -12.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3378, device='cuda:0', dtype=torch.float64)
tensor([ -6.3583,  -8.3758,  -7.1507,  -9.6980, -12.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3548, device='cuda:0', dtype=torch.float64)
tensor([ -6.3413,  -8.4407,  -7.1639,  -9.6980, -12.1817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3964, device='cuda:0', dtype=torch.float64)
tensor([ -6.3278,  -8.4575,  -7.1667,  -9.7327, -12.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4108, device='cuda:0', dtype=torch.float64)
tensor([ -6.3127,  -8.4800,  -7.1787,  -9.7596, -12.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3333, device='cuda:0', dtype=torch.float64)
tensor([ -6.2975,  -8.4961,  -7.2005,  -9.8092, -12.4955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4189, device='cuda:0', dtype=torch.float64)
tensor([ -6.2772,  -8.5171,  -7.2185,  -9.8294, -12.5907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3498, device='cuda:0', dtype=torch.float64)
tensor([ -6.2612,  -8.5437,  -7.2337,  -9.8683, -12.7467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3579, device='cuda:0', dtype=torch.float64)
tensor([ -6.2385,  -8.5730,  -7.2465,  -9.8944, -12.8537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3331, device='cuda:0', dtype=torch.float64)
tensor([ -6.2159,  -8.6054,  -7.2593,  -9.8899, -12.8627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3442, device='cuda:0', dtype=torch.float64)
tensor([ -6.1925,  -8.6463,  -7.2746,  -9.8963, -12.8645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2700, device='cuda:0', dtype=torch.float64)
tensor([ -6.1723,  -8.6904,  -7.2898,  -9.9091, -12.8816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3261, device='cuda:0', dtype=torch.float64)
tensor([ -6.1559,  -8.7161,  -7.3051,  -9.9396, -12.9838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3139, device='cuda:0', dtype=torch.float64)
tensor([ -6.1441,  -8.7456,  -7.3079,  -9.9564, -13.0656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2891, device='cuda:0', dtype=torch.float64)
tensor([ -6.1394,  -8.7548,  -7.3125, -10.0090, -13.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3091, device='cuda:0', dtype=torch.float64)
tensor([ -6.1332,  -8.7932,  -7.3208, -10.0581, -13.2757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3190, device='cuda:0', dtype=torch.float64)
tensor([ -6.1219,  -8.8285,  -7.3250, -10.0761, -13.3337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3170, device='cuda:0', dtype=torch.float64)
tensor([ -6.1129,  -8.8454,  -7.3185, -10.0806, -13.3940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3531, device='cuda:0', dtype=torch.float64)
tensor([ -6.1053,  -8.8537,  -7.3056, -10.0820, -13.3811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3188, device='cuda:0', dtype=torch.float64)
tensor([ -6.0972,  -8.8540,  -7.2870, -10.0814, -13.3832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3182, device='cuda:0', dtype=torch.float64)
tensor([ -6.0931,  -8.8293,  -7.2742, -10.1094, -13.4528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3032, device='cuda:0', dtype=torch.float64)
tensor([ -6.0932,  -8.8273,  -7.2521, -10.1411, -13.5100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2753, device='cuda:0', dtype=torch.float64)
tensor([ -6.0929,  -8.8240,  -7.2356, -10.1824, -13.5260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3647, device='cuda:0', dtype=torch.float64)
tensor([ -6.0936,  -8.7859,  -7.2312, -10.2205, -13.5444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3151, device='cuda:0', dtype=torch.float64)
tensor([ -6.0948,  -8.7357,  -7.2213, -10.2311, -13.5393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3197, device='cuda:0', dtype=torch.float64)
tensor([ -6.1009,  -8.6642,  -7.2157, -10.2466, -13.5424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3404, device='cuda:0', dtype=torch.float64)
tensor([ -6.1054,  -8.6056,  -7.2209, -10.2585, -13.5312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3247, device='cuda:0', dtype=torch.float64)
tensor([ -6.1079,  -8.5356,  -7.2251, -10.2677, -13.5468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3783, device='cuda:0', dtype=torch.float64)
tensor([ -6.0989,  -8.4664,  -7.2158, -10.2147, -13.4743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3762, device='cuda:0', dtype=torch.float64)
tensor([ -6.0909,  -8.4061,  -7.2125, -10.1545, -13.3442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3059, device='cuda:0', dtype=torch.float64)
tensor([ -6.0874,  -8.3360,  -7.2142, -10.1306, -13.2933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3466, device='cuda:0', dtype=torch.float64)
tensor([ -6.0860,  -8.2561,  -7.2225, -10.0909, -13.2377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2718, device='cuda:0', dtype=torch.float64)
tensor([ -6.0852,  -8.1915,  -7.2313, -10.0841, -13.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2807, device='cuda:0', dtype=torch.float64)
tensor([ -6.0754,  -8.1328,  -7.2281, -10.0457, -13.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3080, device='cuda:0', dtype=torch.float64)
tensor([ -6.0659,  -8.0834,  -7.2277, -10.0154, -13.1600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3178, device='cuda:0', dtype=torch.float64)
tensor([ -6.0537,  -8.0374,  -7.2245,  -9.9695, -13.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3056, device='cuda:0', dtype=torch.float64)
tensor([ -6.0409,  -7.9969,  -7.2213,  -9.9275, -13.0559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2659, device='cuda:0', dtype=torch.float64)
tensor([ -6.0262,  -7.9528,  -7.2142,  -9.8693, -12.9721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2781, device='cuda:0', dtype=torch.float64)
tensor([ -6.0116,  -7.9088,  -7.2136,  -9.8267, -12.9262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2909, device='cuda:0', dtype=torch.float64)
tensor([ -6.0015,  -7.8680,  -7.2167,  -9.7989, -12.9133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2503, device='cuda:0', dtype=torch.float64)
tensor([ -5.9920,  -7.8379,  -7.2227,  -9.7704, -12.8563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2998, device='cuda:0', dtype=torch.float64)
tensor([ -5.9800,  -7.8048,  -7.2345,  -9.7609, -12.8291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2634, device='cuda:0', dtype=torch.float64)
tensor([ -5.9699,  -7.7612,  -7.2426,  -9.7520, -12.8020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3213, device='cuda:0', dtype=torch.float64)
tensor([ -5.9626,  -7.7272,  -7.2642,  -9.7456, -12.8128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2993, device='cuda:0', dtype=torch.float64)
tensor([ -5.9512,  -7.6846,  -7.2739,  -9.7277, -12.8719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2711, device='cuda:0', dtype=torch.float64)
tensor([ -5.9429,  -7.6467,  -7.2830,  -9.7354, -12.9463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2660, device='cuda:0', dtype=torch.float64)
tensor([ -5.9313,  -7.6074,  -7.2808,  -9.7254, -12.9704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3067, device='cuda:0', dtype=torch.float64)
tensor([ -5.9198,  -7.5650,  -7.2692,  -9.6990, -12.9858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2391, device='cuda:0', dtype=torch.float64)
tensor([ -5.9066,  -7.5232,  -7.2537,  -9.6478, -12.9291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2490, device='cuda:0', dtype=torch.float64)
tensor([ -5.8901,  -7.4827,  -7.2436,  -9.5987, -12.8333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2129, device='cuda:0', dtype=torch.float64)
tensor([ -5.8764,  -7.4431,  -7.2314,  -9.5470, -12.7246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2623, device='cuda:0', dtype=torch.float64)
tensor([ -5.8638,  -7.4047,  -7.2164,  -9.4894, -12.5986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2805, device='cuda:0', dtype=torch.float64)
tensor([ -5.8453,  -7.3754,  -7.1854,  -9.4124, -12.4319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2678, device='cuda:0', dtype=torch.float64)
tensor([ -5.8252,  -7.3487,  -7.1587,  -9.3263, -12.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2805, device='cuda:0', dtype=torch.float64)
tensor([ -5.8030,  -7.3313,  -7.1222,  -9.2332, -12.0479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2556, device='cuda:0', dtype=torch.float64)
tensor([ -5.7846,  -7.3107,  -7.0906,  -9.1460, -11.8426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2813, device='cuda:0', dtype=torch.float64)
tensor([ -5.7713,  -7.2997,  -7.0525,  -9.0634, -11.6168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2997, device='cuda:0', dtype=torch.float64)
tensor([ -5.7552,  -7.2902,  -7.0155,  -8.9688, -11.3747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2728, device='cuda:0', dtype=torch.float64)
tensor([ -5.7406,  -7.2755,  -6.9783,  -8.8983, -11.1773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2913, device='cuda:0', dtype=torch.float64)
tensor([ -5.7260,  -7.2682,  -6.9408,  -8.8383, -10.9847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2290, device='cuda:0', dtype=torch.float64)
tensor([ -5.7140,  -7.2525,  -6.9047,  -8.7823, -10.8354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3093, device='cuda:0', dtype=torch.float64)
tensor([ -5.7034,  -7.2279,  -6.8736,  -8.7407, -10.7828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2214, device='cuda:0', dtype=torch.float64)
tensor([ -5.6927,  -7.2060,  -6.8410,  -8.6921, -10.6885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2944, device='cuda:0', dtype=torch.float64)
tensor([ -5.6782,  -7.1797,  -6.7983,  -8.6260, -10.5664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2825, device='cuda:0', dtype=torch.float64)
tensor([ -5.6662,  -7.1531,  -6.7618,  -8.5610, -10.5000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2827, device='cuda:0', dtype=torch.float64)
tensor([ -5.6568,  -7.1229,  -6.7282,  -8.4902, -10.4390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2806, device='cuda:0', dtype=torch.float64)
tensor([ -5.6443,  -7.0916,  -6.6958,  -8.4201, -10.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2368, device='cuda:0', dtype=torch.float64)
tensor([ -5.6315,  -7.0633,  -6.6632,  -8.3465, -10.3015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2446, device='cuda:0', dtype=torch.float64)
tensor([ -5.6188,  -7.0333,  -6.6333,  -8.2670, -10.2619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2880, device='cuda:0', dtype=torch.float64)
tensor([ -5.6051,  -7.0054,  -6.5983,  -8.1875, -10.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3339, device='cuda:0', dtype=torch.float64)
tensor([ -5.5956,  -6.9807,  -6.5724,  -8.1456, -10.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2903, device='cuda:0', dtype=torch.float64)
tensor([ -5.5851,  -6.9641,  -6.5487,  -8.0894, -10.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2660, device='cuda:0', dtype=torch.float64)
tensor([ -5.5708,  -6.9511,  -6.5231,  -8.0271, -10.0806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2573, device='cuda:0', dtype=torch.float64)
tensor([ -5.5566,  -6.9422,  -6.5000,  -7.9783, -10.0249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2677, device='cuda:0', dtype=torch.float64)
tensor([-5.5404, -6.9249, -6.4823, -7.9270, -9.9949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3362, device='cuda:0', dtype=torch.float64)
tensor([-5.5277, -6.9060, -6.4559, -7.8679, -9.9745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2777, device='cuda:0', dtype=torch.float64)
tensor([-5.5142, -6.8827, -6.4336, -7.8088, -9.9315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2759, device='cuda:0', dtype=torch.float64)
tensor([-5.4996, -6.8609, -6.4066, -7.7461, -9.8541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2818, device='cuda:0', dtype=torch.float64)
tensor([-5.4809, -6.8356, -6.3683, -7.6718, -9.7570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2482, device='cuda:0', dtype=torch.float64)
tensor([-5.4629, -6.7988, -6.3289, -7.5969, -9.6635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2665, device='cuda:0', dtype=torch.float64)
tensor([-5.4436, -6.7613, -6.2883, -7.5314, -9.5746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3397, device='cuda:0', dtype=torch.float64)
tensor([-5.4273, -6.7351, -6.2449, -7.4641, -9.5106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2757, device='cuda:0', dtype=torch.float64)
tensor([-5.4133, -6.7084, -6.2069, -7.3950, -9.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2940, device='cuda:0', dtype=torch.float64)
tensor([-5.4027, -6.6881, -6.1734, -7.3321, -9.4350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2488, device='cuda:0', dtype=torch.float64)
tensor([-5.3903, -6.6674, -6.1450, -7.2820, -9.4650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2625, device='cuda:0', dtype=torch.float64)
tensor([-5.3743, -6.6525, -6.1108, -7.2255, -9.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2888, device='cuda:0', dtype=torch.float64)
tensor([-5.3594, -6.6336, -6.0835, -7.1732, -9.4703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2864, device='cuda:0', dtype=torch.float64)
tensor([-5.3424, -6.6088, -6.0513, -7.1204, -9.4340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2883, device='cuda:0', dtype=torch.float64)
tensor([-5.3283, -6.5880, -6.0269, -7.0767, -9.4249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2697, device='cuda:0', dtype=torch.float64)
tensor([-5.3164, -6.5654, -6.0058, -7.0356, -9.4155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2750, device='cuda:0', dtype=torch.float64)
tensor([-5.3031, -6.5474, -5.9847, -6.9933, -9.3762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3026, device='cuda:0', dtype=torch.float64)
tensor([-5.2878, -6.5211, -5.9593, -6.9393, -9.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3216, device='cuda:0', dtype=torch.float64)
tensor([-5.2715, -6.4968, -5.9385, -6.8958, -9.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2883, device='cuda:0', dtype=torch.float64)
tensor([-5.2556, -6.4700, -5.9096, -6.8503, -9.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3002, device='cuda:0', dtype=torch.float64)
tensor([-5.2403, -6.4460, -5.8948, -6.8107, -9.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3400, device='cuda:0', dtype=torch.float64)
tensor([-5.2283, -6.4210, -5.8698, -6.7551, -9.1362], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_113739.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(122.1318, device='cuda:0', dtype=torch.float64)
tensor([ -2.0522, -12.0556,  -6.4120, -10.6852,  -5.4565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(64.8904, device='cuda:0', dtype=torch.float64)
tensor([ -2.9026,  -9.7712,  -6.9833, -11.8774, -16.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(116.7066, device='cuda:0', dtype=torch.float64)
tensor([ -3.6190,  -6.6530,  -5.9758, -16.4674, -17.9690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(126.2339, device='cuda:0', dtype=torch.float64)
tensor([ -2.6383,  -5.1778,  -4.5054, -13.1676, -13.4241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.5518, device='cuda:0', dtype=torch.float64)
tensor([ -2.5892,  -4.7855,  -3.3335,  -9.7628, -10.5088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.0702, device='cuda:0', dtype=torch.float64)
tensor([-2.4960, -4.9044, -3.0065, -6.3642, -6.3205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(41.9795, device='cuda:0', dtype=torch.float64)
tensor([-2.5199, -5.0459, -2.9380, -6.4049, -4.8120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(50.2243, device='cuda:0', dtype=torch.float64)
tensor([-2.5363, -4.8264, -2.8961, -6.5812, -4.6448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.7263, device='cuda:0', dtype=torch.float64)
tensor([-2.5719, -5.4856, -2.9449, -7.9904, -4.4237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(51.8779, device='cuda:0', dtype=torch.float64)
tensor([ -2.5547,  -5.3976,  -3.2070, -12.4946,  -4.2948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(45.9087, device='cuda:0', dtype=torch.float64)
tensor([ -2.4269,  -4.4053,  -3.5357, -13.5593,  -4.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.5425, device='cuda:0', dtype=torch.float64)
tensor([ -2.2373,  -3.7684,  -3.7804, -10.7725,  -4.7865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.8046, device='cuda:0', dtype=torch.float64)
tensor([-2.0700, -3.3714, -4.3425, -7.2749, -4.7721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.5658, device='cuda:0', dtype=torch.float64)
tensor([-1.9931, -3.1604, -4.4598, -4.4754, -4.1248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(19.8775, device='cuda:0', dtype=torch.float64)
tensor([-2.0093, -3.1437, -3.9712, -3.8336, -3.8482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.0465, device='cuda:0', dtype=torch.float64)
tensor([-2.0897, -3.1956, -3.5248, -3.5946, -3.8042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3036, device='cuda:0', dtype=torch.float64)
tensor([-2.1742, -3.4098, -3.3014, -3.4672, -3.7713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.9915, device='cuda:0', dtype=torch.float64)
tensor([-2.1929, -3.6535, -3.2021, -3.4533, -3.7388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7082, device='cuda:0', dtype=torch.float64)
tensor([-2.1209, -3.4550, -3.1472, -3.4686, -3.6877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0784, device='cuda:0', dtype=torch.float64)
tensor([-2.0136, -3.0581, -3.0992, -3.4889, -3.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9711, device='cuda:0', dtype=torch.float64)
tensor([-1.9338, -2.8990, -3.0430, -3.5538, -3.5165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.8052, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.8915, -2.9818, -3.6057, -3.4623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.2199, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.9245, -2.9268, -3.6474, -3.4529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.1879, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.9796, -2.8863, -3.7342, -3.4726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9803, device='cuda:0', dtype=torch.float64)
tensor([-1.8918, -3.0442, -2.8593, -3.8491, -3.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7161, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -3.0965, -2.8395, -3.8940, -3.4474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7817, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -3.1071, -2.8255, -3.8386, -3.4152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.8500, device='cuda:0', dtype=torch.float64)
tensor([-1.8759, -3.0666, -2.8172, -3.7413, -3.4033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5004, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -3.0021, -2.8139, -3.6639, -3.4072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3324, device='cuda:0', dtype=torch.float64)
tensor([-1.7866, -2.9409, -2.8152, -3.6215, -3.4264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3769, device='cuda:0', dtype=torch.float64)
tensor([-1.7642, -2.8948, -2.8202, -3.6035, -3.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6496, device='cuda:0', dtype=torch.float64)
tensor([-1.7561, -2.8664, -2.8275, -3.5998, -3.4896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3677, device='cuda:0', dtype=torch.float64)
tensor([-1.7572, -2.8470, -2.8354, -3.6038, -3.5174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6446, device='cuda:0', dtype=torch.float64)
tensor([-1.7641, -2.8225, -2.8417, -3.6054, -3.5309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9724, device='cuda:0', dtype=torch.float64)
tensor([-1.7746, -2.7906, -2.8436, -3.6005, -3.5246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0262, device='cuda:0', dtype=torch.float64)
tensor([-1.7867, -2.7631, -2.8390, -3.5968, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8833, device='cuda:0', dtype=torch.float64)
tensor([-1.7988, -2.7489, -2.8280, -3.5971, -3.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5401, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.7479, -2.8126, -3.5978, -3.4155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9802, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.7562, -2.7955, -3.5978, -3.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3909, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.7705, -2.7767, -3.5949, -3.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9352, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7886, -2.7545, -3.5846, -3.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6970, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.8082, -2.7298, -3.5642, -3.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5922, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.8273, -2.7079, -3.5388, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5122, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.8448, -2.6929, -3.5140, -3.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4957, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.8597, -2.6857, -3.4905, -3.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4264, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.8715, -2.6853, -3.4669, -3.2379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3006, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.8804, -2.6900, -3.4432, -3.2464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0899, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.8857, -2.6989, -3.4211, -3.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8510, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.8867, -2.7107, -3.4026, -3.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6784, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.8829, -2.7247, -3.3896, -3.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5865, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.8747, -2.7403, -3.3829, -3.2943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4764, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.8643, -2.7557, -3.3814, -3.3066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3870, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.8538, -2.7701, -3.3840, -3.3186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4040, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.8446, -2.7822, -3.3888, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4041, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.8373, -2.7913, -3.3938, -3.3410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3490, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.8318, -2.7971, -3.3981, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2879, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.8274, -2.7998, -3.4006, -3.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1861, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.8236, -2.7995, -3.4011, -3.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1267, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.8193, -2.7971, -3.3994, -3.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0546, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.8146, -2.7933, -3.3958, -3.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9775, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.8094, -2.7892, -3.3910, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8546, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.8036, -2.7858, -3.3863, -3.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7620, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7971, -2.7843, -3.3821, -3.3598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6968, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.7900, -2.7844, -3.3782, -3.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6031, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.7833, -2.7869, -3.3752, -3.3598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5794, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.7763, -2.7916, -3.3737, -3.3601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5081, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.7697, -2.7983, -3.3730, -3.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4615, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.7635, -2.8058, -3.3729, -3.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4915, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.7591, -2.8135, -3.3730, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4397, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.7572, -2.8204, -3.3719, -3.3632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4089, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.7579, -2.8256, -3.3691, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3180, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.7613, -2.8290, -3.3641, -3.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2895, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.7662, -2.8313, -3.3580, -3.3721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2264, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.7719, -2.8329, -3.3515, -3.3760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2013, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7778, -2.8339, -3.3456, -3.3799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1699, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.7833, -2.8346, -3.3410, -3.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1625, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7879, -2.8353, -3.3372, -3.3852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1874, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7913, -2.8361, -3.3347, -3.3864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1739, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7932, -2.8370, -3.3330, -3.3868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0729, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.7946, -2.8377, -3.3319, -3.3861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0749, device='cuda:0', dtype=torch.float64)
tensor([-1.8545, -2.7956, -2.8381, -3.3310, -3.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0571, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.7960, -2.8384, -3.3302, -3.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0454, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7960, -2.8385, -3.3295, -3.3809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0366, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7954, -2.8390, -3.3288, -3.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.7937, -2.8403, -3.3286, -3.3768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.7914, -2.8419, -3.3291, -3.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0484, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.7892, -2.8437, -3.3293, -3.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0056, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.7875, -2.8450, -3.3289, -3.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9639, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.7857, -2.8466, -3.3287, -3.3699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9642, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7843, -2.8482, -3.3272, -3.3698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9265, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7836, -2.8493, -3.3246, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9241, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.7831, -2.8505, -3.3224, -3.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9091, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7823, -2.8521, -3.3216, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8651, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7816, -2.8536, -3.3217, -3.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.7810, -2.8553, -3.3220, -3.3734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8981, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7817, -2.8559, -3.3219, -3.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9083, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7829, -2.8559, -3.3210, -3.3762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8523, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7841, -2.8558, -3.3203, -3.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8832, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7843, -2.8561, -3.3209, -3.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8042, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7838, -2.8566, -3.3218, -3.3767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8192, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7824, -2.8575, -3.3233, -3.3752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7972, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7812, -2.8580, -3.3248, -3.3735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7811, -2.8573, -3.3245, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8417, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.7808, -2.8569, -3.3239, -3.3700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.7809, -2.8562, -3.3220, -3.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7759, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.7817, -2.8557, -3.3205, -3.3677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8180, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.7829, -2.8549, -3.3188, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7840, -2.8536, -3.3174, -3.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7669, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7845, -2.8528, -3.3166, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7562, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.7847, -2.8524, -3.3167, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8745, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.7844, -2.8527, -3.3168, -3.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8003, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.7841, -2.8524, -3.3164, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7405, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7835, -2.8521, -3.3163, -3.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.7822, -2.8523, -3.3167, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7886, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.7808, -2.8534, -3.3191, -3.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7789, -2.8543, -3.3218, -3.3732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7493, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.7780, -2.8545, -3.3232, -3.3741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7849, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7779, -2.8544, -3.3239, -3.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7160, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7782, -2.8542, -3.3243, -3.3754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8161, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7783, -2.8544, -3.3247, -3.3765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7716, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.7785, -2.8544, -3.3241, -3.3774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7553, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7794, -2.8539, -3.3218, -3.3784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7734, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.7806, -2.8532, -3.3198, -3.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7836, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.7813, -2.8532, -3.3194, -3.3801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7983, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.7817, -2.8536, -3.3196, -3.3810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7409, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.7812, -2.8539, -3.3206, -3.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7199, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.7804, -2.8547, -3.3216, -3.3819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7747, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.7805, -2.8543, -3.3217, -3.3815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7630, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7818, -2.8542, -3.3216, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8569, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.7828, -2.8539, -3.3210, -3.3809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7894, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.7832, -2.8529, -3.3192, -3.3809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7552, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.7838, -2.8516, -3.3170, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7003, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.7846, -2.8506, -3.3163, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7262, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.7845, -2.8501, -3.3167, -3.3812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8490, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.7834, -2.8508, -3.3192, -3.3814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7688, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.7819, -2.8524, -3.3225, -3.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7247, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.7806, -2.8536, -3.3257, -3.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8384, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.7793, -2.8551, -3.3270, -3.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7384, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.7785, -2.8561, -3.3276, -3.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9460, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.7777, -2.8567, -3.3291, -3.3769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8429, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.7771, -2.8562, -3.3302, -3.3756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8137, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7761, -2.8559, -3.3304, -3.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7967, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.7758, -2.8555, -3.3304, -3.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8019, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.7771, -2.8539, -3.3290, -3.3721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7185, device='cuda:0', dtype=torch.float64)
tensor([-1.8633, -2.7799, -2.8517, -3.3252, -3.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.7834, -2.8493, -3.3209, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7429, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.7880, -2.8465, -3.3173, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8262, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.7913, -2.8447, -3.3165, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7155, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.7929, -2.8444, -3.3175, -3.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9627, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.7921, -2.8464, -3.3214, -3.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6944, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.7904, -2.8495, -3.3268, -3.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7598, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.7895, -2.8529, -3.3313, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9748, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.7890, -2.8553, -3.3326, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8277, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.7888, -2.8558, -3.3306, -3.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8647, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.7890, -2.8553, -3.3274, -3.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8612, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7883, -2.8547, -3.3262, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7729, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.7869, -2.8556, -3.3268, -3.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7987, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.7853, -2.8568, -3.3285, -3.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7979, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.7839, -2.8577, -3.3301, -3.3723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7802, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.7823, -2.8586, -3.3318, -3.3697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8015, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.7808, -2.8595, -3.3330, -3.3680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9194, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.7797, -2.8603, -3.3314, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7851, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.7777, -2.8616, -3.3306, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8523, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.7742, -2.8630, -3.3311, -3.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9255, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7706, -2.8655, -3.3339, -3.3631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8063, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7670, -2.8679, -3.3359, -3.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8412, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.7657, -2.8681, -3.3345, -3.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9428, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.7668, -2.8665, -3.3334, -3.3626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0421, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.7709, -2.8623, -3.3298, -3.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8469, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.7776, -2.8584, -3.3278, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.7834, -2.8553, -3.3254, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8279, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.7891, -2.8531, -3.3227, -3.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8467, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.7937, -2.8530, -3.3222, -3.3687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8893, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.7990, -2.8525, -3.3196, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8751, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.8024, -2.8540, -3.3187, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.8024, -2.8564, -3.3178, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8084, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.7996, -2.8594, -3.3178, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8434, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7952, -2.8631, -3.3210, -3.3689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8415, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.7920, -2.8662, -3.3243, -3.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8060, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.7887, -2.8674, -3.3258, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7989, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.7877, -2.8664, -3.3245, -3.3664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9219, device='cuda:0', dtype=torch.float64)
tensor([-1.8668, -2.7870, -2.8645, -3.3211, -3.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8731, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.7865, -2.8625, -3.3169, -3.3680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7912, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.7855, -2.8603, -3.3142, -3.3690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8051, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.7850, -2.8597, -3.3137, -3.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9012, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7843, -2.8602, -3.3147, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9229, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7837, -2.8608, -3.3171, -3.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8820, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.7836, -2.8603, -3.3168, -3.3742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8014, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.7836, -2.8605, -3.3180, -3.3747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8690, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.7840, -2.8592, -3.3193, -3.3759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8441, device='cuda:0', dtype=torch.float64)
tensor([-1.8726, -2.7825, -2.8603, -3.3230, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9693, device='cuda:0', dtype=torch.float64)
tensor([-1.8711, -2.7805, -2.8617, -3.3274, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8370, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.7793, -2.8628, -3.3297, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9418, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.7785, -2.8617, -3.3281, -3.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0893, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.7794, -2.8578, -3.3232, -3.3742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7929, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.7835, -2.8525, -3.3186, -3.3734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.7861, -2.8495, -3.3193, -3.3731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9701, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.7860, -2.8491, -3.3228, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0058, device='cuda:0', dtype=torch.float64)
tensor([-1.8837, -2.7853, -2.8519, -3.3275, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8902, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.7866, -2.8542, -3.3305, -3.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0611, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.7889, -2.8545, -3.3277, -3.3719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9507, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.7928, -2.8539, -3.3230, -3.3723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9812, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.7967, -2.8534, -3.3199, -3.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1640, device='cuda:0', dtype=torch.float64)
tensor([-1.8884, -2.7962, -2.8548, -3.3194, -3.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9929, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.7920, -2.8572, -3.3228, -3.3690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9589, device='cuda:0', dtype=torch.float64)
tensor([-1.8802, -2.7889, -2.8593, -3.3276, -3.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8955, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.7884, -2.8592, -3.3289, -3.3687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-1.8808, -2.7894, -2.8579, -3.3267, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8619, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.7898, -2.8565, -3.3267, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9195, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.7887, -2.8555, -3.3279, -3.3700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0815, device='cuda:0', dtype=torch.float64)
tensor([-1.8804, -2.7851, -2.8557, -3.3299, -3.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-1.8812, -2.7827, -2.8549, -3.3309, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8953, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.7822, -2.8525, -3.3271, -3.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0599, device='cuda:0', dtype=torch.float64)
tensor([-1.8854, -2.7842, -2.8499, -3.3222, -3.3632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7808, device='cuda:0', dtype=torch.float64)
tensor([-1.8876, -2.7858, -2.8485, -3.3171, -3.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9392, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.7861, -2.8487, -3.3125, -3.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1662, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.7846, -2.8518, -3.3117, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8711, device='cuda:0', dtype=torch.float64)
tensor([-1.8892, -2.7819, -2.8570, -3.3138, -3.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9019, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.7804, -2.8609, -3.3156, -3.3611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1204, device='cuda:0', dtype=torch.float64)
tensor([-1.8901, -2.7811, -2.8648, -3.3160, -3.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0740, device='cuda:0', dtype=torch.float64)
tensor([-1.8901, -2.7825, -2.8692, -3.3165, -3.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9888, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.7831, -2.8755, -3.3211, -3.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1313, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.7801, -2.8813, -3.3260, -3.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9144, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.7771, -2.8873, -3.3325, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9927, device='cuda:0', dtype=torch.float64)
tensor([-1.8793, -2.7754, -2.8905, -3.3351, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4238, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.7766, -2.8874, -3.3283, -3.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0266, device='cuda:0', dtype=torch.float64)
tensor([-1.8825, -2.7782, -2.8819, -3.3204, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9368, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.7800, -2.8771, -3.3179, -3.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2262, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.7752, -2.8747, -3.3197, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.7669, -2.8738, -3.3255, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1128, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7645, -2.8735, -3.3365, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2990, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.7650, -2.8698, -3.3372, -3.3611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2729, device='cuda:0', dtype=torch.float64)
tensor([-1.8855, -2.7696, -2.8624, -3.3286, -3.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9769, device='cuda:0', dtype=torch.float64)
tensor([-1.8934, -2.7759, -2.8571, -3.3241, -3.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9857, device='cuda:0', dtype=torch.float64)
tensor([-1.8994, -2.7800, -2.8551, -3.3221, -3.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2461, device='cuda:0', dtype=torch.float64)
tensor([-1.9026, -2.7818, -2.8573, -3.3199, -3.3644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0334, device='cuda:0', dtype=torch.float64)
tensor([-1.9031, -2.7865, -2.8612, -3.3217, -3.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1652, device='cuda:0', dtype=torch.float64)
tensor([-1.9050, -2.7946, -2.8630, -3.3185, -3.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1663, device='cuda:0', dtype=torch.float64)
tensor([-1.9088, -2.8030, -2.8620, -3.3091, -3.3769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0349, device='cuda:0', dtype=torch.float64)
tensor([-1.9118, -2.8114, -2.8589, -3.2998, -3.3848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0988, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.8203, -2.8555, -3.2982, -3.3934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3103, device='cuda:0', dtype=torch.float64)
tensor([-1.9099, -2.8213, -2.8565, -3.3010, -3.3964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9943, device='cuda:0', dtype=torch.float64)
tensor([-1.9017, -2.8178, -2.8604, -3.3129, -3.3957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0878, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.8137, -2.8651, -3.3279, -3.3965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1627, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.8093, -2.8686, -3.3344, -3.3966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9791, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.8044, -2.8700, -3.3338, -3.3941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0857, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.8000, -2.8700, -3.3340, -3.3912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.7968, -2.8705, -3.3375, -3.3873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1590, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.7902, -2.8720, -3.3426, -3.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0101, device='cuda:0', dtype=torch.float64)
tensor([-1.8674, -2.7831, -2.8745, -3.3494, -3.3746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0227, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.7783, -2.8751, -3.3551, -3.3691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1949, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.7758, -2.8730, -3.3499, -3.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9880, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.7747, -2.8698, -3.3440, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9491, device='cuda:0', dtype=torch.float64)
tensor([-1.8792, -2.7740, -2.8690, -3.3402, -3.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1790, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.7728, -2.8701, -3.3378, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0711, device='cuda:0', dtype=torch.float64)
tensor([-1.8863, -2.7702, -2.8741, -3.3379, -3.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0088, device='cuda:0', dtype=torch.float64)
tensor([-1.8888, -2.7689, -2.8784, -3.3383, -3.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1855, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.7707, -2.8798, -3.3349, -3.3727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9865, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.7742, -2.8802, -3.3328, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0062, device='cuda:0', dtype=torch.float64)
tensor([-1.9064, -2.7786, -2.8790, -3.3314, -3.3795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-1.9111, -2.7839, -2.8767, -3.3311, -3.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0722, device='cuda:0', dtype=torch.float64)
tensor([-1.9129, -2.7866, -2.8760, -3.3315, -3.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2221, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.7874, -2.8760, -3.3358, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0014, device='cuda:0', dtype=torch.float64)
tensor([-1.9066, -2.7879, -2.8769, -3.3422, -3.3810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2478, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.7906, -2.8763, -3.3401, -3.3814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9997, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.7947, -2.8736, -3.3320, -3.3796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8807, device='cuda:0', dtype=torch.float64)
tensor([-1.9056, -2.7989, -2.8709, -3.3214, -3.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.8029, -2.8683, -3.3129, -3.3783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-1.9015, -2.8045, -2.8673, -3.3103, -3.3752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1267, device='cuda:0', dtype=torch.float64)
tensor([-1.8976, -2.8022, -2.8681, -3.3116, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-1.8942, -2.8008, -2.8715, -3.3171, -3.3644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2544, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.7985, -2.8737, -3.3221, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3706, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.7974, -2.8730, -3.3226, -3.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3014, device='cuda:0', dtype=torch.float64)
tensor([-1.8990, -2.8008, -2.8716, -3.3225, -3.3595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2007, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.8004, -2.8744, -3.3254, -3.3614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4987, device='cuda:0', dtype=torch.float64)
tensor([-1.8975, -2.7945, -2.8811, -3.3302, -3.3601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9748, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.7914, -2.8897, -3.3388, -3.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3771, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.7897, -2.8906, -3.3343, -3.3662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4515, device='cuda:0', dtype=torch.float64)
tensor([-1.8973, -2.7936, -2.8849, -3.3182, -3.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0877, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.8028, -2.8781, -3.3067, -3.3760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0842, device='cuda:0', dtype=torch.float64)
tensor([-1.9034, -2.8111, -2.8759, -3.3047, -3.3798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3615, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.8146, -2.8764, -3.3043, -3.3782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3857, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.8157, -2.8802, -3.3137, -3.3754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1466, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.8154, -2.8869, -3.3312, -3.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4176, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.8151, -2.8926, -3.3463, -3.3710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2680, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.8161, -2.8946, -3.3489, -3.3698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.8209, -2.8908, -3.3514, -3.3710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1746, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.8225, -2.8882, -3.3553, -3.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3960, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.8143, -2.8877, -3.3480, -3.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2475, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.8047, -2.8901, -3.3483, -3.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0161, device='cuda:0', dtype=torch.float64)
tensor([-1.8957, -2.8020, -2.8921, -3.3557, -3.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6703, device='cuda:0', dtype=torch.float64)
tensor([-1.9031, -2.8011, -2.8891, -3.3490, -3.3752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4782, device='cuda:0', dtype=torch.float64)
tensor([-1.9119, -2.8013, -2.8834, -3.3307, -3.3768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1932, device='cuda:0', dtype=torch.float64)
tensor([-1.9222, -2.8064, -2.8800, -3.3240, -3.3837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5190, device='cuda:0', dtype=torch.float64)
tensor([-1.9269, -2.8051, -2.8821, -3.3254, -3.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3393, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7984, -2.8862, -3.3313, -3.3774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0828, device='cuda:0', dtype=torch.float64)
tensor([-1.9208, -2.7928, -2.8900, -3.3392, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4467, device='cuda:0', dtype=torch.float64)
tensor([-1.9204, -2.7933, -2.8886, -3.3378, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1820, device='cuda:0', dtype=torch.float64)
tensor([-1.9214, -2.7966, -2.8848, -3.3326, -3.3599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9758, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.8028, -2.8795, -3.3296, -3.3587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3945, device='cuda:0', dtype=torch.float64)
tensor([-1.9288, -2.8068, -2.8769, -3.3255, -3.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3254, device='cuda:0', dtype=torch.float64)
tensor([-1.9262, -2.8078, -2.8775, -3.3261, -3.3590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3257, device='cuda:0', dtype=torch.float64)
tensor([-1.9217, -2.8054, -2.8807, -3.3327, -3.3586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9500, device='cuda:0', dtype=torch.float64)
tensor([-1.9176, -2.8025, -2.8820, -3.3390, -3.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1630, device='cuda:0', dtype=torch.float64)
tensor([-1.9157, -2.8022, -2.8819, -3.3432, -3.3626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([-1.9135, -2.7985, -2.8831, -3.3479, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.7957, -2.8820, -3.3511, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2298, device='cuda:0', dtype=torch.float64)
tensor([-1.9166, -2.7924, -2.8796, -3.3460, -3.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3657, device='cuda:0', dtype=torch.float64)
tensor([-1.9197, -2.7878, -2.8780, -3.3410, -3.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0912, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.7826, -2.8771, -3.3354, -3.3627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0260, device='cuda:0', dtype=torch.float64)
tensor([-1.9245, -2.7769, -2.8780, -3.3310, -3.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1962, device='cuda:0', dtype=torch.float64)
tensor([-1.9255, -2.7760, -2.8774, -3.3291, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-1.9259, -2.7770, -2.8763, -3.3265, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1063, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.7804, -2.8754, -3.3276, -3.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3935, device='cuda:0', dtype=torch.float64)
tensor([-1.9196, -2.7832, -2.8730, -3.3276, -3.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.7870, -2.8745, -3.3320, -3.3693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1419, device='cuda:0', dtype=torch.float64)
tensor([-1.9079, -2.7912, -2.8763, -3.3373, -3.3707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3048, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.7954, -2.8790, -3.3388, -3.3738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2990, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.7997, -2.8818, -3.3329, -3.3800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1315, device='cuda:0', dtype=torch.float64)
tensor([-1.9089, -2.8059, -2.8830, -3.3259, -3.3851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1791, device='cuda:0', dtype=torch.float64)
tensor([-1.9137, -2.8122, -2.8836, -3.3177, -3.3918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2416, device='cuda:0', dtype=torch.float64)
tensor([-1.9158, -2.8155, -2.8871, -3.3162, -3.3966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2256, device='cuda:0', dtype=torch.float64)
tensor([-1.9184, -2.8151, -2.8915, -3.3170, -3.4005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2006, device='cuda:0', dtype=torch.float64)
tensor([-1.9207, -2.8130, -2.8969, -3.3204, -3.4061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1983, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.8107, -2.8993, -3.3228, -3.4076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3211, device='cuda:0', dtype=torch.float64)
tensor([-1.9282, -2.8129, -2.8975, -3.3283, -3.4063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1092, device='cuda:0', dtype=torch.float64)
tensor([-1.9333, -2.8167, -2.8943, -3.3382, -3.4047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3712, device='cuda:0', dtype=torch.float64)
tensor([-1.9386, -2.8194, -2.8895, -3.3448, -3.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3587, device='cuda:0', dtype=torch.float64)
tensor([-1.9441, -2.8211, -2.8840, -3.3430, -3.3994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1640, device='cuda:0', dtype=torch.float64)
tensor([-1.9502, -2.8218, -2.8797, -3.3422, -3.3974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2658, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.8255, -2.8745, -3.3419, -3.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3071, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.8300, -2.8696, -3.3280, -3.4016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2585, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.8345, -2.8657, -3.3162, -3.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3636, device='cuda:0', dtype=torch.float64)
tensor([-1.9554, -2.8298, -2.8651, -3.3122, -3.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3264, device='cuda:0', dtype=torch.float64)
tensor([-1.9449, -2.8203, -2.8680, -3.3159, -3.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3279, device='cuda:0', dtype=torch.float64)
tensor([-1.9311, -2.8055, -2.8752, -3.3237, -3.3817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-1.9187, -2.7943, -2.8816, -3.3298, -3.3743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1891, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.7885, -2.8880, -3.3359, -3.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3403, device='cuda:0', dtype=torch.float64)
tensor([-1.9067, -2.7860, -2.8911, -3.3370, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-1.9061, -2.7884, -2.8931, -3.3396, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3856, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.7920, -2.8932, -3.3411, -3.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3561, device='cuda:0', dtype=torch.float64)
tensor([-1.9104, -2.7926, -2.8955, -3.3395, -3.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4678, device='cuda:0', dtype=torch.float64)
tensor([-1.9138, -2.7955, -2.8951, -3.3356, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1751, device='cuda:0', dtype=torch.float64)
tensor([-1.9177, -2.7972, -2.8954, -3.3277, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3320, device='cuda:0', dtype=torch.float64)
tensor([-1.9212, -2.8016, -2.8944, -3.3163, -3.3709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-1.9244, -2.8083, -2.8927, -3.3063, -3.3792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0031, device='cuda:0', dtype=torch.float64)
tensor([-1.9248, -2.8146, -2.8921, -3.3010, -3.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0297, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.8187, -2.8943, -3.3051, -3.3932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3376, device='cuda:0', dtype=torch.float64)
tensor([-1.9232, -2.8257, -2.8971, -3.3132, -3.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1798, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.8329, -2.8988, -3.3269, -3.3998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4567, device='cuda:0', dtype=torch.float64)
tensor([-1.9278, -2.8427, -2.8973, -3.3428, -3.4032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1860, device='cuda:0', dtype=torch.float64)
tensor([-1.9342, -2.8504, -2.8948, -3.3523, -3.4038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2582, device='cuda:0', dtype=torch.float64)
tensor([-1.9435, -2.8576, -2.8901, -3.3525, -3.4045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2235, device='cuda:0', dtype=torch.float64)
tensor([-1.9478, -2.8609, -2.8870, -3.3514, -3.4035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3796, device='cuda:0', dtype=torch.float64)
tensor([-1.9497, -2.8612, -2.8837, -3.3426, -3.4033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2384, device='cuda:0', dtype=torch.float64)
tensor([-1.9489, -2.8564, -2.8828, -3.3334, -3.4023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.8487, -2.8849, -3.3273, -3.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2601, device='cuda:0', dtype=torch.float64)
tensor([-1.9405, -2.8391, -2.8864, -3.3220, -3.3935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4495, device='cuda:0', dtype=torch.float64)
tensor([-1.9344, -2.8273, -2.8864, -3.3218, -3.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2360, device='cuda:0', dtype=torch.float64)
tensor([-1.9271, -2.8163, -2.8856, -3.3205, -3.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3548, device='cuda:0', dtype=torch.float64)
tensor([-1.9206, -2.8082, -2.8852, -3.3205, -3.3741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1797, device='cuda:0', dtype=torch.float64)
tensor([-1.9168, -2.8050, -2.8860, -3.3264, -3.3686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1687, device='cuda:0', dtype=torch.float64)
tensor([-1.9152, -2.7995, -2.8872, -3.3274, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5447, device='cuda:0', dtype=torch.float64)
tensor([-1.9144, -2.7944, -2.8901, -3.3244, -3.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-1.9172, -2.7928, -2.8905, -3.3231, -3.3579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1068, device='cuda:0', dtype=torch.float64)
tensor([-1.9237, -2.7958, -2.8865, -3.3230, -3.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3620, device='cuda:0', dtype=torch.float64)
tensor([-1.9294, -2.8019, -2.8855, -3.3263, -3.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3254, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.8092, -2.8847, -3.3306, -3.3576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1453, device='cuda:0', dtype=torch.float64)
tensor([-1.9411, -2.8159, -2.8880, -3.3415, -3.3625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5301, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.8152, -2.8970, -3.3527, -3.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4561, device='cuda:0', dtype=torch.float64)
tensor([-1.9396, -2.8159, -2.9057, -3.3656, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2358, device='cuda:0', dtype=torch.float64)
tensor([-1.9414, -2.8168, -2.9120, -3.3683, -3.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3887, device='cuda:0', dtype=torch.float64)
tensor([-1.9456, -2.8192, -2.9157, -3.3667, -3.3662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3332, device='cuda:0', dtype=torch.float64)
tensor([-1.9553, -2.8252, -2.9181, -3.3530, -3.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3262, device='cuda:0', dtype=torch.float64)
tensor([-1.9669, -2.8322, -2.9185, -3.3426, -3.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4125, device='cuda:0', dtype=torch.float64)
tensor([-1.9795, -2.8420, -2.9182, -3.3379, -3.3846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4785, device='cuda:0', dtype=torch.float64)
tensor([-1.9856, -2.8462, -2.9178, -3.3298, -3.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2199, device='cuda:0', dtype=torch.float64)
tensor([-1.9887, -2.8495, -2.9182, -3.3264, -3.3835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4532, device='cuda:0', dtype=torch.float64)
tensor([-1.9900, -2.8511, -2.9184, -3.3255, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3620, device='cuda:0', dtype=torch.float64)
tensor([-1.9900, -2.8508, -2.9156, -3.3211, -3.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2330, device='cuda:0', dtype=torch.float64)
tensor([-1.9903, -2.8536, -2.9121, -3.3110, -3.3819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2533, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.8533, -2.9108, -3.3138, -3.3814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4590, device='cuda:0', dtype=torch.float64)
tensor([-1.9702, -2.8467, -2.9130, -3.3180, -3.3765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2508, device='cuda:0', dtype=torch.float64)
tensor([-1.9547, -2.8380, -2.9163, -3.3236, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2258, device='cuda:0', dtype=torch.float64)
tensor([-1.9387, -2.8331, -2.9214, -3.3324, -3.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2654, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.8302, -2.9234, -3.3363, -3.3699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3613, device='cuda:0', dtype=torch.float64)
tensor([-1.9201, -2.8296, -2.9193, -3.3325, -3.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1848, device='cuda:0', dtype=torch.float64)
tensor([-1.9202, -2.8315, -2.9137, -3.3329, -3.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1481, device='cuda:0', dtype=torch.float64)
tensor([-1.9190, -2.8374, -2.9101, -3.3397, -3.3782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4011, device='cuda:0', dtype=torch.float64)
tensor([-1.9162, -2.8357, -2.9093, -3.3397, -3.3800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4713, device='cuda:0', dtype=torch.float64)
tensor([-1.9159, -2.8332, -2.9082, -3.3463, -3.3798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5478, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.8324, -2.9080, -3.3613, -3.3813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4094, device='cuda:0', dtype=torch.float64)
tensor([-1.9245, -2.8345, -2.9046, -3.3695, -3.3863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3038, device='cuda:0', dtype=torch.float64)
tensor([-1.9369, -2.8399, -2.8984, -3.3632, -3.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1698, device='cuda:0', dtype=torch.float64)
tensor([-1.9458, -2.8426, -2.8957, -3.3635, -3.3974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0758, device='cuda:0', dtype=torch.float64)
tensor([-1.9500, -2.8422, -2.8954, -3.3641, -3.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3235, device='cuda:0', dtype=torch.float64)
tensor([-1.9530, -2.8407, -2.8967, -3.3682, -3.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1776, device='cuda:0', dtype=torch.float64)
tensor([-1.9540, -2.8381, -2.8981, -3.3736, -3.4013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0508, device='cuda:0', dtype=torch.float64)
tensor([-1.9517, -2.8349, -2.9008, -3.3822, -3.4018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4231, device='cuda:0', dtype=torch.float64)
tensor([-1.9508, -2.8299, -2.9017, -3.3821, -3.4005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2518, device='cuda:0', dtype=torch.float64)
tensor([-1.9534, -2.8285, -2.8985, -3.3770, -3.4004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3383, device='cuda:0', dtype=torch.float64)
tensor([-1.9602, -2.8288, -2.8943, -3.3690, -3.4010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2703, device='cuda:0', dtype=torch.float64)
tensor([-1.9675, -2.8305, -2.8919, -3.3644, -3.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2995, device='cuda:0', dtype=torch.float64)
tensor([-1.9709, -2.8326, -2.8927, -3.3628, -3.3992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3079, device='cuda:0', dtype=torch.float64)
tensor([-1.9748, -2.8329, -2.8950, -3.3602, -3.3972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4170, device='cuda:0', dtype=torch.float64)
tensor([-1.9795, -2.8333, -2.8965, -3.3576, -3.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2061, device='cuda:0', dtype=torch.float64)
tensor([-1.9849, -2.8327, -2.8978, -3.3568, -3.3965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3561, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.8326, -2.8989, -3.3546, -3.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2641, device='cuda:0', dtype=torch.float64)
tensor([-1.9897, -2.8324, -2.9012, -3.3543, -3.3982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3535, device='cuda:0', dtype=torch.float64)
tensor([-1.9877, -2.8315, -2.9044, -3.3543, -3.3978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2777, device='cuda:0', dtype=torch.float64)
tensor([-1.9839, -2.8295, -2.9099, -3.3605, -3.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1903, device='cuda:0', dtype=torch.float64)
tensor([-1.9776, -2.8271, -2.9173, -3.3630, -3.3989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4692, device='cuda:0', dtype=torch.float64)
tensor([-1.9738, -2.8232, -2.9238, -3.3550, -3.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4369, device='cuda:0', dtype=torch.float64)
tensor([-1.9748, -2.8266, -2.9272, -3.3443, -3.4012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0900, device='cuda:0', dtype=torch.float64)
tensor([-1.9762, -2.8331, -2.9303, -3.3318, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1846, device='cuda:0', dtype=torch.float64)
tensor([-1.9798, -2.8434, -2.9310, -3.3240, -3.4080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4039, device='cuda:0', dtype=torch.float64)
tensor([-1.9902, -2.8557, -2.9257, -3.3144, -3.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2054, device='cuda:0', dtype=torch.float64)
tensor([-1.9992, -2.8699, -2.9190, -3.3085, -3.4221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3315, device='cuda:0', dtype=torch.float64)
tensor([-2.0092, -2.8811, -2.9118, -3.3020, -3.4289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1874, device='cuda:0', dtype=torch.float64)
tensor([-2.0133, -2.8855, -2.9074, -3.2999, -3.4337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2687, device='cuda:0', dtype=torch.float64)
tensor([-2.0107, -2.8863, -2.9051, -3.3028, -3.4371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2985, device='cuda:0', dtype=torch.float64)
tensor([-2.0004, -2.8811, -2.9071, -3.3179, -3.4299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2893, device='cuda:0', dtype=torch.float64)
tensor([-1.9861, -2.8707, -2.9126, -3.3320, -3.4211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2678, device='cuda:0', dtype=torch.float64)
tensor([-1.9695, -2.8580, -2.9218, -3.3475, -3.4127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3555, device='cuda:0', dtype=torch.float64)
tensor([-1.9562, -2.8486, -2.9270, -3.3570, -3.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3700, device='cuda:0', dtype=torch.float64)
tensor([-1.9479, -2.8384, -2.9304, -3.3544, -3.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2333, device='cuda:0', dtype=torch.float64)
tensor([-1.9431, -2.8292, -2.9347, -3.3499, -3.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5836, device='cuda:0', dtype=torch.float64)
tensor([-1.9451, -2.8235, -2.9377, -3.3448, -3.4006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2712, device='cuda:0', dtype=torch.float64)
tensor([-1.9463, -2.8188, -2.9411, -3.3402, -3.3979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2934, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.8152, -2.9428, -3.3322, -3.3969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3857, device='cuda:0', dtype=torch.float64)
tensor([-1.9542, -2.8153, -2.9433, -3.3287, -3.3968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-1.9593, -2.8182, -2.9441, -3.3256, -3.3972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-1.9650, -2.8246, -2.9416, -3.3202, -3.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-1.9706, -2.8326, -2.9368, -3.3132, -3.4006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0975, device='cuda:0', dtype=torch.float64)
tensor([-1.9786, -2.8443, -2.9304, -3.3072, -3.4037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4830, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.8584, -2.9224, -3.3045, -3.4048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2065, device='cuda:0', dtype=torch.float64)
tensor([-2.0022, -2.8762, -2.9149, -3.3104, -3.4104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3609, device='cuda:0', dtype=torch.float64)
tensor([-2.0084, -2.8843, -2.9137, -3.3003, -3.4106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2308, device='cuda:0', dtype=torch.float64)
tensor([-2.0154, -2.8918, -2.9126, -3.2956, -3.4118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4980, device='cuda:0', dtype=torch.float64)
tensor([-2.0196, -2.8998, -2.9116, -3.2924, -3.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2745, device='cuda:0', dtype=torch.float64)
tensor([-2.0207, -2.9014, -2.9128, -3.2958, -3.4109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3308, device='cuda:0', dtype=torch.float64)
tensor([-2.0194, -2.9022, -2.9171, -3.3037, -3.4077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2824, device='cuda:0', dtype=torch.float64)
tensor([-2.0150, -2.8999, -2.9224, -3.3135, -3.4023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3023, device='cuda:0', dtype=torch.float64)
tensor([-2.0058, -2.8972, -2.9305, -3.3252, -3.3969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3262, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.8908, -2.9429, -3.3422, -3.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4047, device='cuda:0', dtype=torch.float64)
tensor([-1.9842, -2.8859, -2.9545, -3.3593, -3.3888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4192, device='cuda:0', dtype=torch.float64)
tensor([-1.9767, -2.8844, -2.9631, -3.3731, -3.3885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5393, device='cuda:0', dtype=torch.float64)
tensor([-1.9761, -2.8840, -2.9640, -3.3757, -3.3928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5473, device='cuda:0', dtype=torch.float64)
tensor([-1.9813, -2.8902, -2.9574, -3.3744, -3.3994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3150, device='cuda:0', dtype=torch.float64)
tensor([-1.9860, -2.8952, -2.9497, -3.3730, -3.4028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-1.9896, -2.8952, -2.9440, -3.3709, -3.4037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3099, device='cuda:0', dtype=torch.float64)
tensor([-1.9933, -2.8890, -2.9420, -3.3758, -3.4045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4784, device='cuda:0', dtype=torch.float64)
tensor([-2.0005, -2.8844, -2.9436, -3.3855, -3.4088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3495, device='cuda:0', dtype=torch.float64)
tensor([-2.0097, -2.8797, -2.9441, -3.3837, -3.4181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0483, device='cuda:0', dtype=torch.float64)
tensor([-2.0180, -2.8768, -2.9450, -3.3825, -3.4268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5909, device='cuda:0', dtype=torch.float64)
tensor([-2.0268, -2.8799, -2.9433, -3.3780, -3.4321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4422, device='cuda:0', dtype=torch.float64)
tensor([-2.0398, -2.8839, -2.9397, -3.3687, -3.4365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2922, device='cuda:0', dtype=torch.float64)
tensor([-2.0487, -2.8847, -2.9385, -3.3690, -3.4362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4326, device='cuda:0', dtype=torch.float64)
tensor([-2.0565, -2.8851, -2.9367, -3.3702, -3.4359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1806, device='cuda:0', dtype=torch.float64)
tensor([-2.0600, -2.8819, -2.9347, -3.3735, -3.4341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3725, device='cuda:0', dtype=torch.float64)
tensor([-2.0636, -2.8786, -2.9305, -3.3779, -3.4297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4444, device='cuda:0', dtype=torch.float64)
tensor([-2.0673, -2.8776, -2.9228, -3.3758, -3.4292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5483, device='cuda:0', dtype=torch.float64)
tensor([-2.0737, -2.8775, -2.9106, -3.3637, -3.4280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1883, device='cuda:0', dtype=torch.float64)
tensor([-2.0713, -2.8751, -2.9034, -3.3625, -3.4273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6337, device='cuda:0', dtype=torch.float64)
tensor([-2.0618, -2.8684, -2.9021, -3.3743, -3.4220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4101, device='cuda:0', dtype=torch.float64)
tensor([-2.0473, -2.8591, -2.9049, -3.3866, -3.4134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4170, device='cuda:0', dtype=torch.float64)
tensor([-2.0317, -2.8564, -2.9109, -3.4144, -3.4068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5077, device='cuda:0', dtype=torch.float64)
tensor([-2.0217, -2.8596, -2.9160, -3.4404, -3.4047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3573, device='cuda:0', dtype=torch.float64)
tensor([-2.0130, -2.8609, -2.9180, -3.4424, -3.4039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4352, device='cuda:0', dtype=torch.float64)
tensor([-2.0078, -2.8610, -2.9170, -3.4245, -3.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2818, device='cuda:0', dtype=torch.float64)
tensor([-2.0052, -2.8650, -2.9188, -3.4096, -3.4049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5377, device='cuda:0', dtype=torch.float64)
tensor([-2.0063, -2.8737, -2.9243, -3.4104, -3.4126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7097, device='cuda:0', dtype=torch.float64)
tensor([-2.0075, -2.8734, -2.9319, -3.4027, -3.4158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5087, device='cuda:0', dtype=torch.float64)
tensor([-2.0020, -2.8644, -2.9424, -3.3922, -3.4125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3047, device='cuda:0', dtype=torch.float64)
tensor([-1.9972, -2.8548, -2.9560, -3.3910, -3.4096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7511, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.8507, -2.9731, -3.4070, -3.4104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6336, device='cuda:0', dtype=torch.float64)
tensor([-2.0010, -2.8487, -2.9851, -3.4145, -3.4139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5033, device='cuda:0', dtype=torch.float64)
tensor([-2.0082, -2.8464, -2.9910, -3.4080, -3.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2342, device='cuda:0', dtype=torch.float64)
tensor([-2.0196, -2.8528, -2.9918, -3.3964, -3.4199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5455, device='cuda:0', dtype=torch.float64)
tensor([-2.0314, -2.8639, -2.9901, -3.3886, -3.4228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4442, device='cuda:0', dtype=torch.float64)
tensor([-2.0396, -2.8757, -2.9892, -3.3830, -3.4237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3662, device='cuda:0', dtype=torch.float64)
tensor([-2.0459, -2.8835, -2.9847, -3.3746, -3.4243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6482, device='cuda:0', dtype=torch.float64)
tensor([-2.0529, -2.8949, -2.9809, -3.3671, -3.4255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4769, device='cuda:0', dtype=torch.float64)
tensor([-2.0564, -2.9016, -2.9814, -3.3698, -3.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3072, device='cuda:0', dtype=torch.float64)
tensor([-2.0588, -2.9136, -2.9821, -3.3752, -3.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3604, device='cuda:0', dtype=torch.float64)
tensor([-2.0623, -2.9200, -2.9844, -3.3838, -3.4256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6035, device='cuda:0', dtype=torch.float64)
tensor([-2.0719, -2.9214, -2.9848, -3.3899, -3.4323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3112, device='cuda:0', dtype=torch.float64)
tensor([-2.0809, -2.9218, -2.9831, -3.3930, -3.4407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4946, device='cuda:0', dtype=torch.float64)
tensor([-2.0902, -2.9258, -2.9786, -3.3938, -3.4523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3281, device='cuda:0', dtype=torch.float64)
tensor([-2.1035, -2.9300, -2.9720, -3.3921, -3.4648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0925, device='cuda:0', dtype=torch.float64)
tensor([-2.1137, -2.9318, -2.9643, -3.3914, -3.4741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3155, device='cuda:0', dtype=torch.float64)
tensor([-2.1124, -2.9254, -2.9601, -3.3982, -3.4785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1874, device='cuda:0', dtype=torch.float64)
tensor([-2.1086, -2.9203, -2.9548, -3.3963, -3.4795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0995, device='cuda:0', dtype=torch.float64)
tensor([-2.0988, -2.9137, -2.9526, -3.3927, -3.4791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5934, device='cuda:0', dtype=torch.float64)
tensor([-2.0889, -2.9117, -2.9485, -3.3900, -3.4790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5363, device='cuda:0', dtype=torch.float64)
tensor([-2.0774, -2.9104, -2.9476, -3.3930, -3.4802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2899, device='cuda:0', dtype=torch.float64)
tensor([-2.0663, -2.9086, -2.9484, -3.3953, -3.4794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6531, device='cuda:0', dtype=torch.float64)
tensor([-2.0549, -2.9099, -2.9481, -3.4060, -3.4755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3861, device='cuda:0', dtype=torch.float64)
tensor([-2.0439, -2.9104, -2.9517, -3.4179, -3.4716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6947, device='cuda:0', dtype=torch.float64)
tensor([-2.0326, -2.9095, -2.9620, -3.4307, -3.4644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3560, device='cuda:0', dtype=torch.float64)
tensor([-2.0254, -2.9112, -2.9738, -3.4445, -3.4606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1722, device='cuda:0', dtype=torch.float64)
tensor([-2.0176, -2.9115, -2.9851, -3.4610, -3.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4235, device='cuda:0', dtype=torch.float64)
tensor([-2.0188, -2.9177, -2.9919, -3.4766, -3.4577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4318, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -2.9256, -2.9934, -3.4830, -3.4541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4849, device='cuda:0', dtype=torch.float64)
tensor([-2.0249, -2.9294, -2.9934, -3.4819, -3.4523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3741, device='cuda:0', dtype=torch.float64)
tensor([-2.0309, -2.9331, -2.9909, -3.4807, -3.4509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3855, device='cuda:0', dtype=torch.float64)
tensor([-2.0402, -2.9367, -2.9841, -3.4699, -3.4482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4130, device='cuda:0', dtype=torch.float64)
tensor([-2.0507, -2.9379, -2.9763, -3.4613, -3.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9865, device='cuda:0', dtype=torch.float64)
tensor([-2.0595, -2.9387, -2.9690, -3.4600, -3.4443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2564, device='cuda:0', dtype=torch.float64)
tensor([-2.0679, -2.9432, -2.9650, -3.4510, -3.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3701, device='cuda:0', dtype=torch.float64)
tensor([-2.0790, -2.9494, -2.9624, -3.4390, -3.4476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2853, device='cuda:0', dtype=torch.float64)
tensor([-2.0874, -2.9519, -2.9610, -3.4256, -3.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3120, device='cuda:0', dtype=torch.float64)
tensor([-2.0979, -2.9546, -2.9576, -3.4019, -3.4514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5834, device='cuda:0', dtype=torch.float64)
tensor([-2.1070, -2.9542, -2.9579, -3.3842, -3.4545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-2.1162, -2.9557, -2.9603, -3.3764, -3.4630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5075, device='cuda:0', dtype=torch.float64)
tensor([-2.1237, -2.9566, -2.9639, -3.3733, -3.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0736, device='cuda:0', dtype=torch.float64)
tensor([-2.1302, -2.9611, -2.9678, -3.3739, -3.4823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4440, device='cuda:0', dtype=torch.float64)
tensor([-2.1370, -2.9674, -2.9720, -3.3773, -3.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5016, device='cuda:0', dtype=torch.float64)
tensor([-2.1383, -2.9703, -2.9761, -3.3806, -3.4956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6004, device='cuda:0', dtype=torch.float64)
tensor([-2.1381, -2.9778, -2.9833, -3.3880, -3.5047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6975, device='cuda:0', dtype=torch.float64)
tensor([-2.1337, -2.9792, -2.9912, -3.3973, -3.5108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4452, device='cuda:0', dtype=torch.float64)
tensor([-2.1233, -2.9785, -2.9988, -3.4068, -3.5113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3390, device='cuda:0', dtype=torch.float64)
tensor([-2.1145, -2.9766, -3.0074, -3.4201, -3.5122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3593, device='cuda:0', dtype=torch.float64)
tensor([-2.1086, -2.9763, -3.0129, -3.4341, -3.5109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5019, device='cuda:0', dtype=torch.float64)
tensor([-2.1039, -2.9747, -3.0178, -3.4457, -3.5071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3520, device='cuda:0', dtype=torch.float64)
tensor([-2.1028, -2.9734, -3.0181, -3.4481, -3.5048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3818, device='cuda:0', dtype=torch.float64)
tensor([-2.1051, -2.9753, -3.0121, -3.4495, -3.5042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3047, device='cuda:0', dtype=torch.float64)
tensor([-2.1107, -2.9786, -3.0076, -3.4512, -3.5044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3671, device='cuda:0', dtype=torch.float64)
tensor([-2.1174, -2.9804, -3.0020, -3.4494, -3.5075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3268, device='cuda:0', dtype=torch.float64)
tensor([-2.1216, -2.9759, -2.9998, -3.4541, -3.5068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3200, device='cuda:0', dtype=torch.float64)
tensor([-2.1278, -2.9736, -2.9943, -3.4656, -3.5027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3928, device='cuda:0', dtype=torch.float64)
tensor([-2.1300, -2.9625, -2.9969, -3.4785, -3.4929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3183, device='cuda:0', dtype=torch.float64)
tensor([-2.1288, -2.9490, -3.0067, -3.5029, -3.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3921, device='cuda:0', dtype=torch.float64)
tensor([-2.1296, -2.9387, -3.0194, -3.5270, -3.4797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2950, device='cuda:0', dtype=torch.float64)
tensor([-2.1314, -2.9294, -3.0346, -3.5527, -3.4838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6523, device='cuda:0', dtype=torch.float64)
tensor([-2.1367, -2.9211, -3.0455, -3.5528, -3.4931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5336, device='cuda:0', dtype=torch.float64)
tensor([-2.1407, -2.9155, -3.0533, -3.5502, -3.5041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3160, device='cuda:0', dtype=torch.float64)
tensor([-2.1483, -2.9102, -3.0561, -3.5408, -3.5115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3546, device='cuda:0', dtype=torch.float64)
tensor([-2.1573, -2.9108, -3.0584, -3.5304, -3.5211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7947, device='cuda:0', dtype=torch.float64)
tensor([-2.1717, -2.9176, -3.0585, -3.5176, -3.5380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2646, device='cuda:0', dtype=torch.float64)
tensor([-2.1898, -2.9331, -3.0557, -3.5072, -3.5506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3666, device='cuda:0', dtype=torch.float64)
tensor([-2.2033, -2.9509, -3.0552, -3.4980, -3.5624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3853, device='cuda:0', dtype=torch.float64)
tensor([-2.2126, -2.9659, -3.0577, -3.4885, -3.5703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4667, device='cuda:0', dtype=torch.float64)
tensor([-2.2141, -2.9718, -3.0608, -3.4779, -3.5745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4453, device='cuda:0', dtype=torch.float64)
tensor([-2.2119, -2.9762, -3.0618, -3.4778, -3.5728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3132, device='cuda:0', dtype=torch.float64)
tensor([-2.2095, -2.9823, -3.0618, -3.4826, -3.5708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2614, device='cuda:0', dtype=torch.float64)
tensor([-2.2046, -2.9904, -3.0628, -3.4912, -3.5690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3923, device='cuda:0', dtype=torch.float64)
tensor([-2.2020, -3.0076, -3.0574, -3.4912, -3.5649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3306, device='cuda:0', dtype=torch.float64)
tensor([-2.1960, -3.0242, -3.0555, -3.4970, -3.5581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4369, device='cuda:0', dtype=torch.float64)
tensor([-2.1892, -3.0382, -3.0551, -3.5003, -3.5486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4215, device='cuda:0', dtype=torch.float64)
tensor([-2.1831, -3.0520, -3.0541, -3.4945, -3.5445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3788, device='cuda:0', dtype=torch.float64)
tensor([-2.1774, -3.0643, -3.0505, -3.4830, -3.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2334, device='cuda:0', dtype=torch.float64)
tensor([-2.1768, -3.0864, -3.0449, -3.4722, -3.5418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1364, device='cuda:0', dtype=torch.float64)
tensor([-2.1850, -3.1099, -3.0360, -3.4635, -3.5490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5825, device='cuda:0', dtype=torch.float64)
tensor([-2.1901, -3.1340, -3.0285, -3.4677, -3.5587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4839, device='cuda:0', dtype=torch.float64)
tensor([-2.1898, -3.1422, -3.0262, -3.4748, -3.5582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1591, device='cuda:0', dtype=torch.float64)
tensor([-2.1857, -3.1476, -3.0274, -3.4881, -3.5561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4432, device='cuda:0', dtype=torch.float64)
tensor([-2.1821, -3.1483, -3.0295, -3.5093, -3.5534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3716, device='cuda:0', dtype=torch.float64)
tensor([-2.1809, -3.1463, -3.0363, -3.5317, -3.5514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3535, device='cuda:0', dtype=torch.float64)
tensor([-2.1822, -3.1409, -3.0479, -3.5538, -3.5500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3478, device='cuda:0', dtype=torch.float64)
tensor([-2.1862, -3.1329, -3.0595, -3.5764, -3.5516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3797, device='cuda:0', dtype=torch.float64)
tensor([-2.1926, -3.1280, -3.0708, -3.5988, -3.5548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2926, device='cuda:0', dtype=torch.float64)
tensor([-2.2061, -3.1242, -3.0780, -3.6148, -3.5602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-2.2206, -3.1226, -3.0812, -3.6185, -3.5652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4029, device='cuda:0', dtype=torch.float64)
tensor([-2.2361, -3.1214, -3.0815, -3.6089, -3.5710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2308, device='cuda:0', dtype=torch.float64)
tensor([-2.2525, -3.1177, -3.0785, -3.5842, -3.5752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4361, device='cuda:0', dtype=torch.float64)
tensor([-2.2697, -3.1196, -3.0760, -3.5504, -3.5788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5202, device='cuda:0', dtype=torch.float64)
tensor([-2.2827, -3.1204, -3.0737, -3.5265, -3.5807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3873, device='cuda:0', dtype=torch.float64)
tensor([-2.2961, -3.1206, -3.0758, -3.4987, -3.5861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6870, device='cuda:0', dtype=torch.float64)
tensor([-2.3008, -3.1146, -3.0779, -3.4845, -3.5878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4613, device='cuda:0', dtype=torch.float64)
tensor([-2.3021, -3.1097, -3.0859, -3.4891, -3.5883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2349, device='cuda:0', dtype=torch.float64)
tensor([-2.3020, -3.1037, -3.0921, -3.4950, -3.5883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3849, device='cuda:0', dtype=torch.float64)
tensor([-2.2987, -3.0994, -3.0989, -3.5022, -3.5885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5279, device='cuda:0', dtype=torch.float64)
tensor([-2.2955, -3.0900, -3.1101, -3.5152, -3.5895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2697, device='cuda:0', dtype=torch.float64)
tensor([-2.2988, -3.0811, -3.1197, -3.5122, -3.5913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3209, device='cuda:0', dtype=torch.float64)
tensor([-2.3071, -3.0740, -3.1266, -3.5006, -3.5966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-2.3189, -3.0706, -3.1293, -3.4931, -3.6049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3905, device='cuda:0', dtype=torch.float64)
tensor([-2.3360, -3.0741, -3.1269, -3.4809, -3.6134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2142, device='cuda:0', dtype=torch.float64)
tensor([-2.3550, -3.0836, -3.1270, -3.4767, -3.6270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5514, device='cuda:0', dtype=torch.float64)
tensor([-2.3754, -3.0952, -3.1277, -3.4816, -3.6417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5711, device='cuda:0', dtype=torch.float64)
tensor([-2.3865, -3.0999, -3.1357, -3.4849, -3.6554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4571, device='cuda:0', dtype=torch.float64)
tensor([-2.3942, -3.1043, -3.1427, -3.4882, -3.6684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4690, device='cuda:0', dtype=torch.float64)
tensor([-2.3966, -3.1075, -3.1504, -3.4849, -3.6781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4189, device='cuda:0', dtype=torch.float64)
tensor([-2.3928, -3.1135, -3.1571, -3.4806, -3.6890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3055, device='cuda:0', dtype=torch.float64)
tensor([-2.3899, -3.1292, -3.1625, -3.4830, -3.6988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1546, device='cuda:0', dtype=torch.float64)
tensor([-2.3849, -3.1455, -3.1663, -3.4878, -3.7063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4095, device='cuda:0', dtype=torch.float64)
tensor([-2.3867, -3.1676, -3.1674, -3.4919, -3.7148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4197, device='cuda:0', dtype=torch.float64)
tensor([-2.3881, -3.1933, -3.1694, -3.5021, -3.7246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2851, device='cuda:0', dtype=torch.float64)
tensor([-2.3926, -3.2093, -3.1651, -3.5045, -3.7297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0930, device='cuda:0', dtype=torch.float64)
tensor([-2.3965, -3.2177, -3.1606, -3.5070, -3.7300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3285, device='cuda:0', dtype=torch.float64)
tensor([-2.4057, -3.2192, -3.1537, -3.5007, -3.7209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0147, device='cuda:0', dtype=torch.float64)
tensor([-2.4164, -3.2260, -3.1443, -3.4955, -3.7133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3022, device='cuda:0', dtype=torch.float64)
tensor([-2.4245, -3.2325, -3.1389, -3.4943, -3.7085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3834, device='cuda:0', dtype=torch.float64)
tensor([-2.4317, -3.2386, -3.1382, -3.5109, -3.7055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1721, device='cuda:0', dtype=torch.float64)
tensor([-2.4366, -3.2473, -3.1436, -3.5446, -3.7007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3833, device='cuda:0', dtype=torch.float64)
tensor([-2.4407, -3.2506, -3.1520, -3.5633, -3.6953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3271, device='cuda:0', dtype=torch.float64)
tensor([-2.4456, -3.2523, -3.1625, -3.5952, -3.6882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4645, device='cuda:0', dtype=torch.float64)
tensor([-2.4503, -3.2528, -3.1721, -3.6090, -3.6808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0830, device='cuda:0', dtype=torch.float64)
tensor([-2.4518, -3.2496, -3.1830, -3.6189, -3.6752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4711, device='cuda:0', dtype=torch.float64)
tensor([-2.4512, -3.2464, -3.1987, -3.6276, -3.6696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4730, device='cuda:0', dtype=torch.float64)
tensor([-2.4547, -3.2503, -3.2148, -3.6472, -3.6688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6073, device='cuda:0', dtype=torch.float64)
tensor([-2.4560, -3.2579, -3.2303, -3.6619, -3.6717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4123, device='cuda:0', dtype=torch.float64)
tensor([-2.4568, -3.2673, -3.2479, -3.6875, -3.6722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3474, device='cuda:0', dtype=torch.float64)
tensor([-2.4622, -3.2783, -3.2653, -3.7140, -3.6728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5320, device='cuda:0', dtype=torch.float64)
tensor([-2.4709, -3.2902, -3.2762, -3.7327, -3.6732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2956, device='cuda:0', dtype=torch.float64)
tensor([-2.4826, -3.3093, -3.2874, -3.7533, -3.6792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3519, device='cuda:0', dtype=torch.float64)
tensor([-2.4956, -3.3348, -3.2938, -3.7589, -3.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2853, device='cuda:0', dtype=torch.float64)
tensor([-2.5114, -3.3566, -3.2942, -3.7512, -3.7036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1725, device='cuda:0', dtype=torch.float64)
tensor([-2.5362, -3.3827, -3.2912, -3.7297, -3.7167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2991, device='cuda:0', dtype=torch.float64)
tensor([-2.5685, -3.4086, -3.2889, -3.7094, -3.7335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([-2.6102, -3.4415, -3.2882, -3.7061, -3.7532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2215, device='cuda:0', dtype=torch.float64)
tensor([-2.6523, -3.4716, -3.2888, -3.7045, -3.7838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1755, device='cuda:0', dtype=torch.float64)
tensor([-2.6903, -3.4958, -3.2920, -3.7046, -3.8108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5160, device='cuda:0', dtype=torch.float64)
tensor([-2.7305, -3.5279, -3.2914, -3.7108, -3.8391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4092, device='cuda:0', dtype=torch.float64)
tensor([-2.7687, -3.5493, -3.2946, -3.6919, -3.8632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3269, device='cuda:0', dtype=torch.float64)
tensor([-2.8004, -3.5704, -3.2995, -3.6620, -3.8864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4804, device='cuda:0', dtype=torch.float64)
tensor([-2.8349, -3.5957, -3.3051, -3.6228, -3.9195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2918, device='cuda:0', dtype=torch.float64)
tensor([-2.8697, -3.6225, -3.3142, -3.6010, -3.9549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1958, device='cuda:0', dtype=torch.float64)
tensor([-2.9028, -3.6580, -3.3234, -3.6094, -3.9948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1928, device='cuda:0', dtype=torch.float64)
tensor([-2.9371, -3.6944, -3.3320, -3.6154, -4.0326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3846, device='cuda:0', dtype=torch.float64)
tensor([-2.9680, -3.7230, -3.3398, -3.6359, -4.0612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2193, device='cuda:0', dtype=torch.float64)
tensor([-2.9926, -3.7511, -3.3483, -3.6680, -4.0891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1860, device='cuda:0', dtype=torch.float64)
tensor([-3.0146, -3.7800, -3.3607, -3.7090, -4.1151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0314, device='cuda:0', dtype=torch.float64)
tensor([-3.0394, -3.8101, -3.3644, -3.7445, -4.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2647, device='cuda:0', dtype=torch.float64)
tensor([-3.0638, -3.8389, -3.3683, -3.7826, -4.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0674, device='cuda:0', dtype=torch.float64)
tensor([-3.0884, -3.8631, -3.3768, -3.8196, -4.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2072, device='cuda:0', dtype=torch.float64)
tensor([-3.1226, -3.8938, -3.3830, -3.8727, -4.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1551, device='cuda:0', dtype=torch.float64)
tensor([-3.1565, -3.9181, -3.3886, -3.9037, -4.1978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1735, device='cuda:0', dtype=torch.float64)
tensor([-3.1951, -3.9297, -3.3874, -3.8801, -4.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3170, device='cuda:0', dtype=torch.float64)
tensor([-3.2305, -3.9421, -3.3897, -3.8590, -4.2260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2837, device='cuda:0', dtype=torch.float64)
tensor([-3.2680, -3.9637, -3.3938, -3.8494, -4.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4755, device='cuda:0', dtype=torch.float64)
tensor([-3.3047, -3.9919, -3.3998, -3.8679, -4.2839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9539, device='cuda:0', dtype=torch.float64)
tensor([-3.3468, -4.0264, -3.4107, -3.8986, -4.3280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([-3.3855, -4.0606, -3.4228, -3.9382, -4.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0699, device='cuda:0', dtype=torch.float64)
tensor([-3.4244, -4.1002, -3.4409, -3.9677, -4.4201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9627, device='cuda:0', dtype=torch.float64)
tensor([-3.4679, -4.1458, -3.4662, -4.0097, -4.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1888, device='cuda:0', dtype=torch.float64)
tensor([-3.5169, -4.2020, -3.5026, -4.0739, -4.5337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2225, device='cuda:0', dtype=torch.float64)
tensor([-3.5641, -4.2531, -3.5390, -4.1268, -4.5901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4516, device='cuda:0', dtype=torch.float64)
tensor([-3.6149, -4.3066, -3.5766, -4.2183, -4.6499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1739, device='cuda:0', dtype=torch.float64)
tensor([-3.6700, -4.3441, -3.6272, -4.2677, -4.7055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1928, device='cuda:0', dtype=torch.float64)
tensor([-3.7409, -4.4008, -3.6785, -4.3438, -4.7692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0544, device='cuda:0', dtype=torch.float64)
tensor([-3.8126, -4.4568, -3.7241, -4.4215, -4.8340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0641, device='cuda:0', dtype=torch.float64)
tensor([-3.8909, -4.5283, -3.7778, -4.5218, -4.9048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2696, device='cuda:0', dtype=torch.float64)
tensor([-3.9731, -4.6204, -3.8116, -4.7639, -4.9850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3864, device='cuda:0', dtype=torch.float64)
tensor([-4.0580, -4.7196, -3.8532, -4.9935, -5.0531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0968, device='cuda:0', dtype=torch.float64)
tensor([-4.1605, -4.8325, -3.8916, -5.5976, -5.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9509, device='cuda:0', dtype=torch.float64)
tensor([-4.2751, -4.9640, -3.9265, -6.5726, -5.2414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0176, device='cuda:0', dtype=torch.float64)
tensor([-4.3942, -5.1090, -3.9672, -7.5066, -5.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3222, device='cuda:0', dtype=torch.float64)
tensor([-4.5039, -5.1779, -4.0251, -7.6486, -5.3724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2924, device='cuda:0', dtype=torch.float64)
tensor([-4.6326, -5.3125, -4.0685, -8.7113, -5.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2529, device='cuda:0', dtype=torch.float64)
tensor([-4.7862, -5.4853, -4.1163, -9.9058, -5.5254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2487, device='cuda:0', dtype=torch.float64)
tensor([ -4.9531,  -5.7199,  -4.1660, -11.3274,  -5.6114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1384, device='cuda:0', dtype=torch.float64)
tensor([ -5.1791,  -5.8944,  -4.2313, -12.8632,  -5.7006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5113, device='cuda:0', dtype=torch.float64)
tensor([ -5.4322,  -6.1435,  -4.3016, -14.8699,  -5.8211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3263, device='cuda:0', dtype=torch.float64)
tensor([ -5.6825,  -6.4046,  -4.3725, -16.4663,  -5.9347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0308, device='cuda:0', dtype=torch.float64)
tensor([ -5.8994,  -6.6562,  -4.4522, -17.3707,  -6.0243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1172, device='cuda:0', dtype=torch.float64)
tensor([ -6.1314,  -6.9705,  -4.5361, -18.9934,  -6.1472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2371, device='cuda:0', dtype=torch.float64)
tensor([ -6.3964,  -7.2831,  -4.6666, -20.4050,  -6.2680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2471, device='cuda:0', dtype=torch.float64)
tensor([ -6.6617,  -7.9169,  -4.7775, -22.9206,  -6.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([ -6.9762,  -8.7045,  -4.9062, -25.8290,  -6.6532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2190, device='cuda:0', dtype=torch.float64)
tensor([ -7.1759,  -9.3396,  -5.0212, -27.7301,  -6.8289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1874, device='cuda:0', dtype=torch.float64)
tensor([ -7.3456, -10.1346,  -5.1597, -29.6128,  -7.0414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2189, device='cuda:0', dtype=torch.float64)
tensor([ -7.4142, -10.8751,  -5.2567, -31.4973,  -7.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([ -7.4463, -11.5775,  -5.4016, -33.1653,  -7.5212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0214, device='cuda:0', dtype=torch.float64)
tensor([ -7.5188, -12.2853,  -5.5823, -34.9452,  -7.7790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9317, device='cuda:0', dtype=torch.float64)
tensor([ -7.6191, -12.9342,  -5.7593, -36.6089,  -8.0329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([ -7.6523, -13.1935,  -5.8623, -36.9210,  -8.2445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0214, device='cuda:0', dtype=torch.float64)
tensor([ -7.7278, -13.9116,  -6.0671, -38.6086,  -8.5549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0982, device='cuda:0', dtype=torch.float64)
tensor([ -7.8709, -14.8766,  -6.3458, -41.0257,  -8.9470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1108, device='cuda:0', dtype=torch.float64)
tensor([ -8.0545, -15.4374,  -6.6802, -43.4581,  -9.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2161, device='cuda:0', dtype=torch.float64)
tensor([ -8.1985, -15.5564,  -6.9683, -44.7717,  -9.5662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9327, device='cuda:0', dtype=torch.float64)
tensor([ -8.3257, -15.9101,  -7.2574, -46.4415,  -9.8799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3955, device='cuda:0', dtype=torch.float64)
tensor([ -8.4543, -15.8712,  -7.4686, -47.5239, -10.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0939, device='cuda:0', dtype=torch.float64)
tensor([ -8.5062, -15.5992,  -7.7143, -47.2330, -10.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1513, device='cuda:0', dtype=torch.float64)
tensor([ -8.4751, -15.0007,  -7.9521, -45.8263, -10.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1360, device='cuda:0', dtype=torch.float64)
tensor([ -8.4567, -14.4549,  -8.1074, -44.5330, -10.2289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1338, device='cuda:0', dtype=torch.float64)
tensor([ -8.3931, -13.6191,  -8.0989, -41.8675, -10.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([ -8.3956, -13.0177,  -8.0204, -39.2177, -10.0923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1077, device='cuda:0', dtype=torch.float64)
tensor([ -8.4356, -12.7505,  -8.1280, -37.7449, -10.1766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1364, device='cuda:0', dtype=torch.float64)
tensor([ -8.4471, -12.5031,  -8.1860, -35.7595, -10.1237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0243, device='cuda:0', dtype=torch.float64)
tensor([ -8.4299, -12.1751,  -8.1893, -33.3252,  -9.9333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0081, device='cuda:0', dtype=torch.float64)
tensor([ -8.4227, -11.9130,  -8.1531, -31.2453,  -9.7773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2837, device='cuda:0', dtype=torch.float64)
tensor([ -8.3988, -11.2792,  -8.0674, -27.8938,  -9.5299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1429, device='cuda:0', dtype=torch.float64)
tensor([ -8.3442, -10.7731,  -8.0567, -24.9553,  -9.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2074, device='cuda:0', dtype=torch.float64)
tensor([ -8.2926, -10.4748,  -8.0883, -22.9736,  -9.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2046, device='cuda:0', dtype=torch.float64)
tensor([ -8.2691, -10.1952,  -8.1286, -21.0139,  -9.4749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7712, device='cuda:0', dtype=torch.float64)
tensor([ -8.2152,  -9.8356,  -8.1304, -19.5884,  -9.5629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0917, device='cuda:0', dtype=torch.float64)
tensor([ -8.2225,  -9.6754,  -8.2256, -18.8520,  -9.6959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([ -8.1734,  -9.6058,  -8.3974, -18.3486,  -9.8239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9962, device='cuda:0', dtype=torch.float64)
tensor([ -8.1330,  -9.5350,  -8.5776, -18.0291,  -9.9739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0650, device='cuda:0', dtype=torch.float64)
tensor([ -8.0983,  -9.4385,  -8.7871, -17.6481, -10.0911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1561, device='cuda:0', dtype=torch.float64)
tensor([ -8.0700,  -9.4393,  -9.0130, -17.2618, -10.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8861, device='cuda:0', dtype=torch.float64)
tensor([ -8.0374,  -9.4799,  -9.1946, -16.9381, -10.1155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8634, device='cuda:0', dtype=torch.float64)
tensor([ -8.0161,  -9.5296,  -9.2889, -16.7906, -10.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9852, device='cuda:0', dtype=torch.float64)
tensor([ -8.0256,  -9.6321,  -9.4557, -16.7584, -10.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([ -8.0466,  -9.7081,  -9.6451, -16.8149, -10.5622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9972, device='cuda:0', dtype=torch.float64)
tensor([ -8.0749,  -9.8740,  -9.8979, -16.9138, -10.8525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9638, device='cuda:0', dtype=torch.float64)
tensor([ -8.0975, -10.1188, -10.0768, -17.0545, -11.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8806, device='cuda:0', dtype=torch.float64)
tensor([ -8.1735, -10.3010, -10.2598, -17.1857, -11.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9756, device='cuda:0', dtype=torch.float64)
tensor([ -8.2115, -10.3711, -10.2864, -17.2020, -11.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9682, device='cuda:0', dtype=torch.float64)
tensor([ -8.3178, -10.5356, -10.2559, -17.4362, -11.5477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([ -8.3788, -10.7028, -10.2433, -17.8449, -11.7450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0562, device='cuda:0', dtype=torch.float64)
tensor([ -8.4100, -10.7455, -10.1496, -17.9473, -11.7789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0321, device='cuda:0', dtype=torch.float64)
tensor([ -8.4600, -10.9243, -10.1214, -18.2436, -11.7919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8962, device='cuda:0', dtype=torch.float64)
tensor([ -8.5565, -11.1217, -10.1102, -18.5975, -11.7788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0135, device='cuda:0', dtype=torch.float64)
tensor([ -8.6523, -11.6009, -10.1250, -19.2282, -11.8182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9529, device='cuda:0', dtype=torch.float64)
tensor([ -8.7666, -12.1205, -10.2296, -20.2999, -11.9623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1111, device='cuda:0', dtype=torch.float64)
tensor([ -8.9072, -12.8582, -10.4306, -21.9122, -12.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([ -9.0406, -13.7141, -10.6391, -23.7345, -12.3698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([ -9.0975, -14.6031, -10.8296, -25.3414, -12.5326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8103, device='cuda:0', dtype=torch.float64)
tensor([ -9.1472, -15.3958, -11.0354, -27.1273, -12.7867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1143, device='cuda:0', dtype=torch.float64)
tensor([ -9.1569, -16.0225, -11.1827, -28.3279, -12.9999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0795, device='cuda:0', dtype=torch.float64)
tensor([ -9.2203, -16.6780, -11.4480, -29.6914, -13.2933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9792, device='cuda:0', dtype=torch.float64)
tensor([ -9.2094, -17.0070, -11.5395, -29.7771, -13.4070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1570, device='cuda:0', dtype=torch.float64)
tensor([ -9.1569, -17.2344, -11.5856, -29.3648, -13.5928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2648, device='cuda:0', dtype=torch.float64)
tensor([ -9.1271, -17.4443, -11.6413, -28.8970, -13.6081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1737, device='cuda:0', dtype=torch.float64)
tensor([ -9.0553, -17.3093, -11.5060, -27.2620, -13.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8578, device='cuda:0', dtype=torch.float64)
tensor([ -8.9615, -17.2071, -11.4275, -25.9867, -13.1237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9785, device='cuda:0', dtype=torch.float64)
tensor([ -8.8048, -17.0286, -11.1897, -24.1784, -12.8683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9135, device='cuda:0', dtype=torch.float64)
tensor([ -8.6916, -17.2301, -11.2110, -23.5819, -12.8531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0717, device='cuda:0', dtype=torch.float64)
tensor([ -8.6133, -17.5377, -11.1938, -23.4732, -12.8562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1192, device='cuda:0', dtype=torch.float64)
tensor([ -8.6178, -18.0486, -11.2813, -23.9796, -13.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1811, device='cuda:0', dtype=torch.float64)
tensor([ -8.6829, -18.8563, -11.5546, -25.2896, -13.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([ -8.7515, -19.3516, -11.6636, -26.2423, -13.6358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([ -8.7739, -20.0591, -11.8295, -27.2997, -13.9125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0550, device='cuda:0', dtype=torch.float64)
tensor([ -8.8225, -21.1062, -12.2079, -29.2820, -14.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0603, device='cuda:0', dtype=torch.float64)
tensor([ -8.9097, -22.2435, -12.5242, -31.8582, -15.0093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8568, device='cuda:0', dtype=torch.float64)
tensor([ -8.9493, -23.1278, -12.7516, -34.0189, -15.5869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9192, device='cuda:0', dtype=torch.float64)
tensor([ -8.9689, -23.7669, -12.8387, -35.2456, -15.9882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1185, device='cuda:0', dtype=torch.float64)
tensor([ -8.9933, -24.3409, -13.0472, -35.9014, -16.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0450, device='cuda:0', dtype=torch.float64)
tensor([ -8.9763, -24.8101, -13.1743, -36.6972, -16.6471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9706, device='cuda:0', dtype=torch.float64)
tensor([ -8.9215, -25.5294, -13.3454, -38.0176, -17.1696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9457, device='cuda:0', dtype=torch.float64)
tensor([ -8.8544, -26.6074, -13.5962, -40.0273, -17.7881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9398, device='cuda:0', dtype=torch.float64)
tensor([ -8.8036, -28.0381, -14.0340, -43.3508, -18.8644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9007, device='cuda:0', dtype=torch.float64)
tensor([ -8.7947, -29.5318, -14.5359, -46.9620, -20.0413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([ -8.8051, -31.3100, -15.1892, -50.8529, -21.0771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9010, device='cuda:0', dtype=torch.float64)
tensor([ -8.7651, -32.7918, -15.5932, -53.6934, -21.8922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([ -8.7841, -35.0611, -16.1729, -57.3855, -22.8954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0172, device='cuda:0', dtype=torch.float64)
tensor([ -8.8003, -36.7037, -16.3866, -59.9675, -23.4643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0498, device='cuda:0', dtype=torch.float64)
tensor([ -8.8498, -38.3618, -16.7339, -62.6288, -24.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9030, device='cuda:0', dtype=torch.float64)
tensor([ -8.9620, -40.3058, -17.2236, -65.5843, -24.8564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9603, device='cuda:0', dtype=torch.float64)
tensor([ -9.0930, -41.7757, -17.5588, -67.8383, -25.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0390, device='cuda:0', dtype=torch.float64)
tensor([ -9.1479, -41.8437, -17.3957, -68.2178, -25.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7876, device='cuda:0', dtype=torch.float64)
tensor([ -9.1495, -41.4339, -17.2089, -67.6317, -24.9470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0231, device='cuda:0', dtype=torch.float64)
tensor([ -9.1484, -41.1993, -17.1456, -67.2783, -24.5575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9921, device='cuda:0', dtype=torch.float64)
tensor([ -9.1831, -41.3887, -17.1974, -67.6976, -24.4287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9369, device='cuda:0', dtype=torch.float64)
tensor([ -9.1720, -41.1076, -17.1521, -67.3912, -23.9657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1000, device='cuda:0', dtype=torch.float64)
tensor([ -9.1494, -40.7484, -17.1183, -66.9678, -23.5299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8531, device='cuda:0', dtype=torch.float64)
tensor([ -9.1733, -41.0334, -17.2746, -67.7145, -23.5218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0550, device='cuda:0', dtype=torch.float64)
tensor([ -9.1898, -41.3957, -17.3985, -68.2140, -23.3959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7836, device='cuda:0', dtype=torch.float64)
tensor([ -9.1956, -41.5415, -17.5443, -68.4576, -23.0517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0953, device='cuda:0', dtype=torch.float64)
tensor([ -9.2079, -42.4429, -17.8627, -69.6403, -23.0071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8697, device='cuda:0', dtype=torch.float64)
tensor([ -9.2316, -43.3227, -17.9253, -70.7753, -22.6622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9080, device='cuda:0', dtype=torch.float64)
tensor([ -9.1650, -43.4218, -17.8980, -70.1941, -21.8759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8322, device='cuda:0', dtype=torch.float64)
tensor([ -9.0745, -43.3371, -17.9176, -69.1940, -21.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7993, device='cuda:0', dtype=torch.float64)
tensor([ -9.0141, -43.0971, -17.9521, -67.9116, -20.5426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9847, device='cuda:0', dtype=torch.float64)
tensor([ -9.0006, -42.4839, -18.0275, -66.3879, -19.8769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9611, device='cuda:0', dtype=torch.float64)
tensor([ -8.9776, -40.4710, -17.8103, -62.8290, -18.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7280, device='cuda:0', dtype=torch.float64)
tensor([ -8.9391, -38.4801, -17.3806, -58.8886, -17.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([ -8.8731, -36.8237, -16.9430, -55.0438, -15.8203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0616, device='cuda:0', dtype=torch.float64)
tensor([ -8.8743, -35.7672, -16.6976, -51.7157, -14.6062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9924, device='cuda:0', dtype=torch.float64)
tensor([ -8.8823, -34.6460, -16.4677, -48.5343, -13.5265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9692, device='cuda:0', dtype=torch.float64)
tensor([ -8.9149, -33.6670, -16.1542, -46.0354, -12.7777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8587, device='cuda:0', dtype=torch.float64)
tensor([ -8.9428, -32.4949, -15.7765, -43.7120, -12.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0345, device='cuda:0', dtype=torch.float64)
tensor([ -8.9406, -31.3586, -15.4055, -41.7822, -11.7709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([ -8.9379, -30.1037, -14.9827, -39.3920, -11.3248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([ -8.9686, -28.8667, -14.3980, -37.4440, -10.9761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0216, device='cuda:0', dtype=torch.float64)
tensor([ -9.0176, -27.5943, -13.7199, -35.8255, -10.7568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8762, device='cuda:0', dtype=torch.float64)
tensor([ -9.0985, -26.5701, -13.0370, -34.9832, -10.6836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8072, device='cuda:0', dtype=torch.float64)
tensor([ -9.1699, -25.6741, -12.3850, -34.4673, -10.6945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9394, device='cuda:0', dtype=torch.float64)
tensor([ -9.2432, -24.6581, -11.7252, -33.0075, -10.6961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9466, device='cuda:0', dtype=torch.float64)
tensor([ -9.2961, -24.0454, -11.2629, -32.0568, -10.7132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7617, device='cuda:0', dtype=torch.float64)
tensor([ -9.3198, -23.6790, -10.8864, -31.4865, -10.7449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7841, device='cuda:0', dtype=torch.float64)
tensor([ -9.3341, -23.5816, -10.8121, -31.4606, -10.6973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9295, device='cuda:0', dtype=torch.float64)
tensor([ -9.3662, -23.8025, -10.9094, -32.0752, -10.7229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0502, device='cuda:0', dtype=torch.float64)
tensor([ -9.3735, -24.1332, -11.0270, -32.4217, -10.8534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8087, device='cuda:0', dtype=torch.float64)
tensor([ -9.3720, -24.2409, -11.0430, -32.0683, -10.9802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8735, device='cuda:0', dtype=torch.float64)
tensor([ -9.3893, -24.1904, -11.0145, -31.2574, -11.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8698, device='cuda:0', dtype=torch.float64)
tensor([ -9.3875, -23.9725, -10.9006, -30.3660, -11.2567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8062, device='cuda:0', dtype=torch.float64)
tensor([ -9.3375, -23.5721, -10.6524, -28.8071, -11.4109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9087, device='cuda:0', dtype=torch.float64)
tensor([ -9.3320, -23.6334, -10.6182, -28.7419, -11.5886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9566, device='cuda:0', dtype=torch.float64)
tensor([ -9.3551, -23.8709, -10.6612, -28.9033, -11.7435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8940, device='cuda:0', dtype=torch.float64)
tensor([ -9.3640, -24.1403, -10.7025, -29.3614, -11.9224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6530, device='cuda:0', dtype=torch.float64)
tensor([ -9.3937, -24.3589, -10.7658, -29.8255, -12.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8666, device='cuda:0', dtype=torch.float64)
tensor([ -9.4014, -24.3668, -10.7480, -29.8791, -12.2486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7614, device='cuda:0', dtype=torch.float64)
tensor([ -9.4157, -24.3933, -10.7805, -30.3108, -12.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8478, device='cuda:0', dtype=torch.float64)
tensor([ -9.4705, -24.2154, -10.8253, -30.2256, -12.5966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9641, device='cuda:0', dtype=torch.float64)
tensor([ -9.5833, -24.4493, -10.8991, -31.0973, -12.7898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7792, device='cuda:0', dtype=torch.float64)
tensor([ -9.7168, -24.9578, -11.0622, -32.9408, -13.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7892, device='cuda:0', dtype=torch.float64)
tensor([ -9.8282, -25.2072, -11.2265, -33.9914, -13.3219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9274, device='cuda:0', dtype=torch.float64)
tensor([ -9.9266, -25.2498, -11.3587, -34.4476, -13.4723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7270, device='cuda:0', dtype=torch.float64)
tensor([ -9.9932, -25.2569, -11.5618, -34.9975, -13.5333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8931, device='cuda:0', dtype=torch.float64)
tensor([-10.0535, -25.1669, -11.7498, -34.9342, -13.5355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7994, device='cuda:0', dtype=torch.float64)
tensor([-10.1374, -25.2650, -12.1406, -35.0446, -13.4271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8169, device='cuda:0', dtype=torch.float64)
tensor([-10.1739, -24.9571, -12.4669, -34.2136, -13.3447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9311, device='cuda:0', dtype=torch.float64)
tensor([-10.1966, -24.7067, -12.7472, -33.7541, -13.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8372, device='cuda:0', dtype=torch.float64)
tensor([-10.1591, -24.2429, -12.8827, -32.8678, -13.1358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-10.1772, -23.8288, -12.8062, -31.8446, -13.0868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-10.1903, -23.2249, -12.7816, -30.3018, -13.0000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8591, device='cuda:0', dtype=torch.float64)
tensor([-10.2208, -22.8587, -12.7574, -29.2592, -12.9530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7947, device='cuda:0', dtype=torch.float64)
tensor([-10.2829, -22.4752, -12.6534, -28.3010, -12.9542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8731, device='cuda:0', dtype=torch.float64)
tensor([-10.3291, -22.3111, -12.4842, -27.8419, -12.8934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7957, device='cuda:0', dtype=torch.float64)
tensor([-10.3849, -22.2475, -12.2709, -27.5326, -12.8682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7379, device='cuda:0', dtype=torch.float64)
tensor([-10.4743, -22.2410, -12.2129, -27.6243, -12.8817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8271, device='cuda:0', dtype=torch.float64)
tensor([-10.5961, -22.3055, -12.2905, -27.8442, -12.9408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8563, device='cuda:0', dtype=torch.float64)
tensor([-10.6704, -22.1932, -12.4620, -27.9375, -12.9963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8430, device='cuda:0', dtype=torch.float64)
tensor([-10.7198, -22.2196, -12.8577, -28.2296, -13.0327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8812, device='cuda:0', dtype=torch.float64)
tensor([-10.7461, -22.1645, -13.2590, -28.5902, -13.0942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8790, device='cuda:0', dtype=torch.float64)
tensor([-10.7581, -21.9664, -13.6604, -29.0060, -13.0710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8829, device='cuda:0', dtype=torch.float64)
tensor([-10.8376, -22.2314, -14.2156, -30.7258, -13.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7111, device='cuda:0', dtype=torch.float64)
tensor([-10.9499, -22.6251, -14.8728, -32.8132, -13.5910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([-11.0969, -23.1864, -15.6393, -35.1980, -13.9976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9046, device='cuda:0', dtype=torch.float64)
tensor([-11.2119, -23.8889, -16.3850, -37.5617, -14.4196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7966, device='cuda:0', dtype=torch.float64)
tensor([-11.3098, -24.5880, -17.0525, -39.6449, -14.8021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9077, device='cuda:0', dtype=torch.float64)
tensor([-11.4765, -25.4895, -17.8287, -42.1991, -15.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8348, device='cuda:0', dtype=torch.float64)
tensor([-11.6078, -26.6067, -18.6715, -45.1972, -15.8348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8281, device='cuda:0', dtype=torch.float64)
tensor([-11.7146, -28.0777, -19.5993, -49.0849, -16.5907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8529, device='cuda:0', dtype=torch.float64)
tensor([-11.8014, -28.7214, -20.1854, -50.9882, -16.9436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6972, device='cuda:0', dtype=torch.float64)
tensor([-11.9255, -29.4762, -20.8872, -52.9484, -17.3720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8045, device='cuda:0', dtype=torch.float64)
tensor([-12.0377, -29.6531, -21.4051, -53.6767, -17.5415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6937, device='cuda:0', dtype=torch.float64)
tensor([-12.1509, -29.8125, -21.8952, -54.5542, -17.7012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8093, device='cuda:0', dtype=torch.float64)
tensor([-12.2508, -30.0065, -22.3620, -55.3898, -17.8973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6525, device='cuda:0', dtype=torch.float64)
tensor([-12.3109, -29.9240, -22.7091, -55.6956, -18.0533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9748, device='cuda:0', dtype=torch.float64)
tensor([-12.3377, -30.5843, -23.2205, -56.4615, -18.2694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9604, device='cuda:0', dtype=torch.float64)
tensor([-12.4017, -31.3050, -23.8722, -56.5164, -18.4418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9512, device='cuda:0', dtype=torch.float64)
tensor([-12.5046, -32.1173, -24.7627, -56.9896, -18.8393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7286, device='cuda:0', dtype=torch.float64)
tensor([-12.5855, -32.4901, -25.5311, -57.0804, -19.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9087, device='cuda:0', dtype=torch.float64)
tensor([-12.7328, -33.3615, -26.5204, -58.4986, -19.7824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8203, device='cuda:0', dtype=torch.float64)
tensor([-12.8927, -34.3542, -27.7045, -60.0677, -20.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7620, device='cuda:0', dtype=torch.float64)
tensor([-13.0357, -34.9687, -28.5254, -60.6960, -20.9390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8651, device='cuda:0', dtype=torch.float64)
tensor([-13.2078, -35.3385, -29.1562, -60.6287, -21.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8385, device='cuda:0', dtype=torch.float64)
tensor([-13.4381, -35.0953, -29.3107, -59.4786, -21.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8687, device='cuda:0', dtype=torch.float64)
tensor([-13.6866, -34.8464, -29.4479, -58.1234, -20.9662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8787, device='cuda:0', dtype=torch.float64)
tensor([-13.9652, -34.8785, -29.6126, -57.8335, -21.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7404, device='cuda:0', dtype=torch.float64)
tensor([-14.2041, -35.0367, -29.7821, -57.9545, -21.4776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8182, device='cuda:0', dtype=torch.float64)
tensor([-14.3828, -35.1050, -29.6585, -57.2324, -21.5525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9347, device='cuda:0', dtype=torch.float64)
tensor([-14.4682, -35.1366, -29.4646, -56.2375, -21.6333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7221, device='cuda:0', dtype=torch.float64)
tensor([-14.5305, -34.7682, -29.0832, -54.9113, -21.5716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9096, device='cuda:0', dtype=torch.float64)
tensor([-14.6082, -34.6745, -28.9157, -53.8322, -21.6559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-14.6461, -34.5321, -28.6579, -52.2109, -21.7459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6660, device='cuda:0', dtype=torch.float64)
tensor([-14.7374, -34.7952, -28.5800, -51.0690, -22.0011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7709, device='cuda:0', dtype=torch.float64)
tensor([-14.8037, -34.6900, -28.3130, -49.5037, -22.0203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7010, device='cuda:0', dtype=torch.float64)
tensor([-14.8075, -34.9324, -28.1039, -48.8319, -22.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8741, device='cuda:0', dtype=torch.float64)
tensor([-14.7437, -35.3133, -27.9612, -48.0992, -22.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7674, device='cuda:0', dtype=torch.float64)
tensor([-14.6539, -35.8199, -27.7775, -47.7737, -22.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0132, device='cuda:0', dtype=torch.float64)
tensor([-14.5572, -36.6133, -27.6279, -47.9235, -22.2839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7459, device='cuda:0', dtype=torch.float64)
tensor([-14.4719, -37.0901, -27.3132, -47.8338, -22.3902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9176, device='cuda:0', dtype=torch.float64)
tensor([-14.4054, -37.8832, -27.1480, -48.4573, -22.5233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6618, device='cuda:0', dtype=torch.float64)
tensor([-14.3300, -38.9703, -27.1598, -49.5495, -22.8164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6238, device='cuda:0', dtype=torch.float64)
tensor([-14.1917, -39.3504, -26.8915, -49.5578, -22.7686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7495, device='cuda:0', dtype=torch.float64)
tensor([-14.0910, -39.4104, -26.4798, -49.0203, -22.7460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6793, device='cuda:0', dtype=torch.float64)
tensor([-14.0111, -39.4675, -26.1134, -48.4089, -22.6681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7843, device='cuda:0', dtype=torch.float64)
tensor([-13.8891, -39.2143, -25.6245, -47.2685, -22.6524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6486, device='cuda:0', dtype=torch.float64)
tensor([-13.7351, -38.5183, -24.9312, -45.3688, -22.3288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7103, device='cuda:0', dtype=torch.float64)
tensor([-13.5928, -38.0296, -24.3247, -43.8310, -21.9744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([-13.4885, -37.7005, -23.7901, -42.5876, -21.6612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([-13.4131, -37.5901, -23.4428, -41.5883, -21.3894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6558, device='cuda:0', dtype=torch.float64)
tensor([-13.3502, -37.1934, -23.0425, -40.1903, -21.0138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6855, device='cuda:0', dtype=torch.float64)
tensor([-13.3599, -37.1578, -22.8025, -39.4681, -20.9484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7183, device='cuda:0', dtype=torch.float64)
tensor([-13.3621, -36.6315, -22.5293, -38.0116, -20.6326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9799, device='cuda:0', dtype=torch.float64)
tensor([-13.3557, -35.8899, -22.1640, -36.3121, -19.9683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6670, device='cuda:0', dtype=torch.float64)
tensor([-13.3554, -35.0489, -21.8019, -34.4829, -19.2999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7883, device='cuda:0', dtype=torch.float64)
tensor([-13.3342, -34.2940, -21.4987, -32.8780, -18.7437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6693, device='cuda:0', dtype=torch.float64)
tensor([-13.2999, -33.3148, -21.0616, -31.0108, -18.0611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8179, device='cuda:0', dtype=torch.float64)
tensor([-13.3028, -32.9211, -20.8519, -29.8934, -17.6287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6507, device='cuda:0', dtype=torch.float64)
tensor([-13.2716, -32.4869, -20.6976, -28.8931, -17.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6744, device='cuda:0', dtype=torch.float64)
tensor([-13.2421, -31.9763, -20.4528, -27.9619, -16.7581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6266, device='cuda:0', dtype=torch.float64)
tensor([-13.2014, -31.4613, -20.1535, -26.9185, -16.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8036, device='cuda:0', dtype=torch.float64)
tensor([-13.2181, -31.1953, -20.0856, -26.0642, -15.9450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6578, device='cuda:0', dtype=torch.float64)
tensor([-13.2656, -31.2710, -20.1404, -25.9592, -15.6894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7848, device='cuda:0', dtype=torch.float64)
tensor([-13.3143, -31.5103, -20.3542, -26.3541, -15.6259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7196, device='cuda:0', dtype=torch.float64)
tensor([-13.3355, -31.5420, -20.5310, -26.1238, -15.4136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5963, device='cuda:0', dtype=torch.float64)
tensor([-13.3620, -31.5606, -20.6485, -25.7057, -15.1951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8644, device='cuda:0', dtype=torch.float64)
tensor([-13.3716, -31.9418, -21.0736, -25.9985, -15.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7937, device='cuda:0', dtype=torch.float64)
tensor([-13.3855, -32.1988, -21.2920, -26.1559, -15.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6800, device='cuda:0', dtype=torch.float64)
tensor([-13.4154, -32.5655, -21.4706, -26.1315, -15.1042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8638, device='cuda:0', dtype=torch.float64)
tensor([-13.4744, -33.2835, -21.8460, -26.8914, -15.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7332, device='cuda:0', dtype=torch.float64)
tensor([-13.5730, -33.7919, -22.1385, -27.4313, -15.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7799, device='cuda:0', dtype=torch.float64)
tensor([-13.6275, -34.3451, -22.2978, -27.6446, -14.9785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7386, device='cuda:0', dtype=torch.float64)
tensor([-13.6661, -34.5762, -22.2393, -27.5255, -14.7904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7296, device='cuda:0', dtype=torch.float64)
tensor([-13.6182, -34.6949, -22.0453, -27.3015, -14.6836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7989, device='cuda:0', dtype=torch.float64)
tensor([-13.5956, -34.8089, -21.8783, -26.7584, -14.5470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7595, device='cuda:0', dtype=torch.float64)
tensor([-13.6614, -35.2692, -21.7183, -27.4147, -14.6483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7005, device='cuda:0', dtype=torch.float64)
tensor([-13.7079, -35.6618, -21.7174, -28.1598, -14.7973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8846, device='cuda:0', dtype=torch.float64)
tensor([-13.7179, -35.9594, -21.8124, -28.6371, -14.9387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8219, device='cuda:0', dtype=torch.float64)
tensor([-13.6879, -35.9270, -21.6236, -28.1518, -14.8488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6798, device='cuda:0', dtype=torch.float64)
tensor([-13.7043, -35.8784, -21.4719, -27.5402, -14.6942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-13.6968, -35.3435, -21.1656, -26.2519, -14.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7291, device='cuda:0', dtype=torch.float64)
tensor([-13.7224, -35.1350, -20.9530, -25.0027, -14.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7872, device='cuda:0', dtype=torch.float64)
tensor([-13.7407, -34.7733, -20.5925, -23.6314, -14.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7340, device='cuda:0', dtype=torch.float64)
tensor([-13.7325, -34.5060, -20.2600, -22.4724, -14.2748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7169, device='cuda:0', dtype=torch.float64)
tensor([-13.7633, -34.1981, -19.8579, -20.9945, -14.2463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8787, device='cuda:0', dtype=torch.float64)
tensor([-13.8256, -33.9491, -19.5475, -19.9428, -14.2977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8956, device='cuda:0', dtype=torch.float64)
tensor([-13.9844, -33.9544, -19.2410, -19.3816, -14.4198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7082, device='cuda:0', dtype=torch.float64)
tensor([-14.1822, -34.0884, -18.9875, -19.3170, -14.5912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6765, device='cuda:0', dtype=torch.float64)
tensor([-14.3958, -34.3307, -18.7565, -19.5146, -14.8508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6048, device='cuda:0', dtype=torch.float64)
tensor([-14.6132, -34.6556, -18.5178, -19.8296, -14.9948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7435, device='cuda:0', dtype=torch.float64)
tensor([-14.8122, -35.0662, -18.3534, -20.7345, -15.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8494, device='cuda:0', dtype=torch.float64)
tensor([-14.9242, -35.4245, -18.2215, -21.2014, -15.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7041, device='cuda:0', dtype=torch.float64)
tensor([-14.8942, -35.7203, -18.2581, -21.3637, -15.3717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6206, device='cuda:0', dtype=torch.float64)
tensor([-14.8588, -36.0316, -18.3670, -21.6829, -15.4698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6395, device='cuda:0', dtype=torch.float64)
tensor([-14.8741, -36.3308, -18.5912, -22.1902, -15.5994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7661, device='cuda:0', dtype=torch.float64)
tensor([-14.9608, -36.6386, -18.8006, -22.4136, -15.5776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6467, device='cuda:0', dtype=torch.float64)
tensor([-15.0366, -36.9214, -19.1273, -22.7069, -15.5454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8118, device='cuda:0', dtype=torch.float64)
tensor([-15.0346, -37.1906, -19.3870, -22.5146, -15.4526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5666, device='cuda:0', dtype=torch.float64)
tensor([-15.0783, -37.5262, -19.6370, -22.6262, -15.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6438, device='cuda:0', dtype=torch.float64)
tensor([-15.1726, -37.9932, -19.9974, -23.2700, -15.6413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6757, device='cuda:0', dtype=torch.float64)
tensor([-15.2575, -38.3787, -20.2737, -23.6682, -15.7538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6636, device='cuda:0', dtype=torch.float64)
tensor([-15.2695, -38.6591, -20.4481, -23.8126, -15.7610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6755, device='cuda:0', dtype=torch.float64)
tensor([-15.3694, -39.1907, -20.7250, -24.4391, -15.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7603, device='cuda:0', dtype=torch.float64)
tensor([-15.4654, -39.8466, -21.0249, -24.9938, -16.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6615, device='cuda:0', dtype=torch.float64)
tensor([-15.4938, -40.4481, -21.2339, -25.5191, -16.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6891, device='cuda:0', dtype=torch.float64)
tensor([-15.5122, -40.8773, -21.3865, -25.4399, -16.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6577, device='cuda:0', dtype=torch.float64)
tensor([-15.5780, -41.3678, -21.5776, -25.4903, -16.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7027, device='cuda:0', dtype=torch.float64)
tensor([-15.6188, -41.5875, -21.6969, -25.1273, -16.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6046, device='cuda:0', dtype=torch.float64)
tensor([-15.6709, -42.1386, -21.8786, -25.2205, -16.1885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7197, device='cuda:0', dtype=torch.float64)
tensor([-15.7331, -42.5209, -21.9178, -25.0536, -16.2197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6694, device='cuda:0', dtype=torch.float64)
tensor([-15.7859, -42.9720, -21.9645, -25.1328, -16.2928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5846, device='cuda:0', dtype=torch.float64)
tensor([-15.8214, -43.2046, -21.9607, -25.1301, -16.3461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6532, device='cuda:0', dtype=torch.float64)
tensor([-15.9050, -43.4806, -21.9516, -25.2223, -16.5211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6629, device='cuda:0', dtype=torch.float64)
tensor([-15.9369, -43.6280, -21.9335, -25.0559, -16.6062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6696, device='cuda:0', dtype=torch.float64)
tensor([-15.9119, -43.4570, -21.9321, -24.7239, -16.6910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6770, device='cuda:0', dtype=torch.float64)
tensor([-15.8217, -43.0529, -21.8470, -24.2470, -16.7677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5866, device='cuda:0', dtype=torch.float64)
tensor([-15.7959, -42.6047, -21.7931, -23.9398, -16.8862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7064, device='cuda:0', dtype=torch.float64)
tensor([-15.8288, -42.2994, -21.6205, -23.9805, -17.1361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5738, device='cuda:0', dtype=torch.float64)
tensor([-15.8513, -42.0073, -21.3392, -23.9588, -17.3172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6026, device='cuda:0', dtype=torch.float64)
tensor([-15.9093, -41.8334, -21.2231, -24.0857, -17.5533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6021, device='cuda:0', dtype=torch.float64)
tensor([-15.9295, -41.6982, -21.1164, -24.3990, -18.0120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7373, device='cuda:0', dtype=torch.float64)
tensor([-15.9965, -41.5492, -20.9854, -24.5071, -18.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6050, device='cuda:0', dtype=torch.float64)
tensor([-16.1208, -41.4763, -20.9592, -24.5067, -18.8601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6509, device='cuda:0', dtype=torch.float64)
tensor([-16.2443, -41.5109, -20.8758, -24.3599, -19.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6883, device='cuda:0', dtype=torch.float64)
tensor([-16.3403, -41.4206, -20.7103, -24.2257, -19.4174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7250, device='cuda:0', dtype=torch.float64)
tensor([-16.4732, -41.5868, -20.7072, -24.4897, -19.9374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7179, device='cuda:0', dtype=torch.float64)
tensor([-16.5883, -42.0668, -20.9359, -25.1197, -20.5566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6304, device='cuda:0', dtype=torch.float64)
tensor([-16.7536, -42.4260, -21.0541, -25.6727, -21.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6218, device='cuda:0', dtype=torch.float64)
tensor([-16.8845, -42.7859, -20.9903, -26.0595, -21.7144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6246, device='cuda:0', dtype=torch.float64)
tensor([-17.0412, -43.0691, -20.8555, -26.4707, -22.2796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5177, device='cuda:0', dtype=torch.float64)
tensor([-17.2467, -43.4586, -20.8283, -27.1775, -22.8713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5744, device='cuda:0', dtype=torch.float64)
tensor([-17.4227, -43.7557, -20.6855, -27.5717, -23.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5479, device='cuda:0', dtype=torch.float64)
tensor([-17.6048, -44.0299, -20.5118, -28.1738, -23.9169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5957, device='cuda:0', dtype=torch.float64)
tensor([-17.7941, -44.3166, -20.4750, -28.4450, -24.3389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6668, device='cuda:0', dtype=torch.float64)
tensor([-17.9855, -44.4530, -20.3232, -28.6896, -24.6265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5857, device='cuda:0', dtype=torch.float64)
tensor([-18.2245, -44.4631, -20.1833, -28.6946, -24.7983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7321, device='cuda:0', dtype=torch.float64)
tensor([-18.4778, -44.3905, -20.0916, -28.5643, -24.8983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6053, device='cuda:0', dtype=torch.float64)
tensor([-18.7494, -44.4240, -20.1282, -28.6449, -25.0231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5769, device='cuda:0', dtype=torch.float64)
tensor([-18.9802, -44.6459, -20.1454, -29.0055, -25.2147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5036, device='cuda:0', dtype=torch.float64)
tensor([-19.1270, -44.8317, -20.1415, -29.2551, -25.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5856, device='cuda:0', dtype=torch.float64)
tensor([-19.2702, -45.0155, -20.1117, -29.4059, -25.5870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6204, device='cuda:0', dtype=torch.float64)
tensor([-19.4269, -45.4545, -20.1427, -30.0939, -25.7032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7111, device='cuda:0', dtype=torch.float64)
tensor([-19.5382, -45.8010, -20.1430, -30.3215, -25.6273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4975, device='cuda:0', dtype=torch.float64)
tensor([-19.6717, -46.1946, -20.1753, -30.6310, -25.6908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6076, device='cuda:0', dtype=torch.float64)
tensor([-19.8407, -46.6755, -20.1838, -30.8007, -25.6620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5878, device='cuda:0', dtype=torch.float64)
tensor([-19.9587, -47.1508, -20.1688, -31.0499, -25.6839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6627, device='cuda:0', dtype=torch.float64)
tensor([-20.0091, -47.4179, -20.1140, -30.8299, -25.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5244, device='cuda:0', dtype=torch.float64)
tensor([-20.0435, -47.5045, -19.9418, -30.3276, -25.6885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6126, device='cuda:0', dtype=torch.float64)
tensor([-20.0929, -47.6612, -19.8754, -30.0270, -25.7531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6189, device='cuda:0', dtype=torch.float64)
tensor([-20.0649, -47.4011, -19.7171, -29.0223, -25.5047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6963, device='cuda:0', dtype=torch.float64)
tensor([-20.0377, -47.0782, -19.4684, -28.1121, -25.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5746, device='cuda:0', dtype=torch.float64)
tensor([-19.9774, -46.9153, -19.3780, -27.8003, -25.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5435, device='cuda:0', dtype=torch.float64)
tensor([-19.9227, -46.6779, -19.2957, -27.2791, -24.7819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5641, device='cuda:0', dtype=torch.float64)
tensor([-19.8464, -46.3380, -19.2041, -26.7494, -24.5700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5654, device='cuda:0', dtype=torch.float64)
tensor([-19.7980, -45.9560, -19.0609, -26.2236, -24.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6303, device='cuda:0', dtype=torch.float64)
tensor([-19.7783, -45.6694, -18.9852, -25.8178, -24.0468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6513, device='cuda:0', dtype=torch.float64)
tensor([-19.7667, -45.2853, -18.9940, -25.4668, -23.6103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5358, device='cuda:0', dtype=torch.float64)
tensor([-19.6475, -44.8275, -18.9597, -25.1853, -23.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6823, device='cuda:0', dtype=torch.float64)
tensor([-19.5667, -44.4868, -18.9178, -25.1047, -23.0416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6878, device='cuda:0', dtype=torch.float64)
tensor([-19.5370, -44.0607, -18.9006, -24.9818, -22.8712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5532, device='cuda:0', dtype=torch.float64)
tensor([-19.5807, -43.9194, -18.9261, -25.1002, -22.8529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4951, device='cuda:0', dtype=torch.float64)
tensor([-19.6677, -43.7172, -18.8989, -25.1834, -22.8276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6218, device='cuda:0', dtype=torch.float64)
tensor([-19.7652, -43.6447, -18.8712, -25.3133, -22.8335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5817, device='cuda:0', dtype=torch.float64)
tensor([-19.9257, -43.4419, -18.8217, -25.4535, -22.8217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5646, device='cuda:0', dtype=torch.float64)
tensor([-20.0337, -43.0799, -18.7884, -25.5087, -22.8338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6191, device='cuda:0', dtype=torch.float64)
tensor([-20.0292, -42.7614, -18.7142, -25.4599, -22.8258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5185, device='cuda:0', dtype=torch.float64)
tensor([-20.0499, -42.4944, -18.7639, -25.3823, -22.8579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-20.0750, -42.2534, -18.8833, -25.3235, -22.8010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6493, device='cuda:0', dtype=torch.float64)
tensor([-20.0655, -41.9522, -18.9573, -25.0753, -22.6303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5790, device='cuda:0', dtype=torch.float64)
tensor([-20.0229, -41.7431, -19.0035, -24.8305, -22.5355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5025, device='cuda:0', dtype=torch.float64)
tensor([-20.0213, -41.5081, -18.9499, -24.7018, -22.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6298, device='cuda:0', dtype=torch.float64)
tensor([-19.9836, -41.5877, -19.0493, -24.6072, -22.4342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6692, device='cuda:0', dtype=torch.float64)
tensor([-19.8921, -41.8410, -19.3296, -24.5632, -22.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5210, device='cuda:0', dtype=torch.float64)
tensor([-19.7669, -41.9984, -19.5983, -24.5739, -22.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5931, device='cuda:0', dtype=torch.float64)
tensor([-19.5035, -42.1197, -19.7035, -24.5363, -22.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5344, device='cuda:0', dtype=torch.float64)
tensor([-19.2565, -42.1433, -19.8187, -24.5316, -22.4383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5445, device='cuda:0', dtype=torch.float64)
tensor([-19.0685, -42.1055, -19.8509, -24.5132, -22.4880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5607, device='cuda:0', dtype=torch.float64)
tensor([-19.0073, -42.2698, -20.0274, -24.6715, -22.6134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4621, device='cuda:0', dtype=torch.float64)
tensor([-19.0072, -42.5578, -20.3088, -24.8430, -22.6927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5998, device='cuda:0', dtype=torch.float64)
tensor([-19.0204, -42.6272, -20.4762, -25.0113, -22.6911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5710, device='cuda:0', dtype=torch.float64)
tensor([-19.0470, -42.5011, -20.4433, -25.0086, -22.5224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4838, device='cuda:0', dtype=torch.float64)
tensor([-19.0833, -42.4639, -20.4144, -25.0874, -22.3747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5428, device='cuda:0', dtype=torch.float64)
tensor([-19.1205, -42.4544, -20.3804, -25.2234, -22.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5275, device='cuda:0', dtype=torch.float64)
tensor([-19.1509, -42.4168, -20.3506, -25.3639, -22.3122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5115, device='cuda:0', dtype=torch.float64)
tensor([-19.1780, -42.2679, -20.3141, -25.4805, -22.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-19.1246, -42.0106, -20.2108, -25.4906, -22.0497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5103, device='cuda:0', dtype=torch.float64)
tensor([-19.0058, -41.7104, -20.1028, -25.4657, -21.9394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3950, device='cuda:0', dtype=torch.float64)
tensor([-18.7977, -41.3569, -19.9332, -25.3922, -21.8312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5090, device='cuda:0', dtype=torch.float64)
tensor([-18.5908, -41.0332, -19.8777, -25.1645, -21.7323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4894, device='cuda:0', dtype=torch.float64)
tensor([-18.3461, -40.8486, -19.8171, -24.9257, -21.6472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5277, device='cuda:0', dtype=torch.float64)
tensor([-18.0968, -40.7725, -19.8655, -24.6705, -21.5977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5112, device='cuda:0', dtype=torch.float64)
tensor([-17.8542, -40.7645, -19.9221, -24.4263, -21.5607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4933, device='cuda:0', dtype=torch.float64)
tensor([-17.6215, -40.7077, -19.9138, -24.2185, -21.4820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3821, device='cuda:0', dtype=torch.float64)
tensor([-17.4415, -40.7534, -19.9206, -24.1339, -21.5101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4912, device='cuda:0', dtype=torch.float64)
tensor([-17.3106, -40.7778, -19.9144, -24.0812, -21.4997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5956, device='cuda:0', dtype=torch.float64)
tensor([-17.1660, -40.6661, -19.7285, -24.0753, -21.4281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5294, device='cuda:0', dtype=torch.float64)
tensor([-17.0689, -40.5472, -19.5620, -24.1451, -21.3497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5721, device='cuda:0', dtype=torch.float64)
tensor([-17.0602, -40.3377, -19.3277, -24.1959, -21.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4631, device='cuda:0', dtype=torch.float64)
tensor([-16.9952, -40.0191, -19.0550, -24.2052, -20.7660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4981, device='cuda:0', dtype=torch.float64)
tensor([-16.9018, -39.6793, -18.8056, -24.2448, -20.5244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4521, device='cuda:0', dtype=torch.float64)
tensor([-16.8701, -39.4130, -18.6179, -24.3234, -20.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5056, device='cuda:0', dtype=torch.float64)
tensor([-16.8780, -39.2329, -18.4203, -24.4457, -20.4174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4794, device='cuda:0', dtype=torch.float64)
tensor([-16.9101, -39.0203, -18.2290, -24.6625, -20.3839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4232, device='cuda:0', dtype=torch.float64)
tensor([-16.9429, -38.9514, -18.1122, -24.8490, -20.4238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4684, device='cuda:0', dtype=torch.float64)
tensor([-16.9606, -38.7257, -18.0109, -25.0128, -20.4125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4401, device='cuda:0', dtype=torch.float64)
tensor([-16.9436, -38.5161, -17.9512, -25.1108, -20.3958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4938, device='cuda:0', dtype=torch.float64)
tensor([-16.8865, -38.2117, -17.8787, -25.1542, -20.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4974, device='cuda:0', dtype=torch.float64)
tensor([-16.8013, -37.9516, -17.7719, -25.1907, -20.4772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4778, device='cuda:0', dtype=torch.float64)
tensor([-16.7215, -37.5761, -17.7658, -25.1921, -20.5144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4808, device='cuda:0', dtype=torch.float64)
tensor([-16.6952, -37.2308, -17.8138, -25.2245, -20.5930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5247, device='cuda:0', dtype=torch.float64)
tensor([-16.5609, -36.7885, -17.7749, -25.1095, -20.5908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5040, device='cuda:0', dtype=torch.float64)
tensor([-16.3946, -36.4325, -17.7156, -24.9744, -20.5140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5489, device='cuda:0', dtype=torch.float64)
tensor([-16.2047, -36.0237, -17.5349, -24.7426, -20.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4526, device='cuda:0', dtype=torch.float64)
tensor([-16.0042, -35.7867, -17.4359, -24.4913, -20.2960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4568, device='cuda:0', dtype=torch.float64)
tensor([-15.7602, -35.4097, -17.2335, -24.2288, -20.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4542, device='cuda:0', dtype=torch.float64)
tensor([-15.4914, -34.9973, -17.0432, -23.9393, -19.9147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4941, device='cuda:0', dtype=torch.float64)
tensor([-15.2601, -34.5902, -16.9923, -23.6101, -19.7248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5127, device='cuda:0', dtype=torch.float64)
tensor([-15.0656, -34.1734, -16.9572, -23.2927, -19.6068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3854, device='cuda:0', dtype=torch.float64)
tensor([-14.9136, -33.8537, -16.9111, -23.0561, -19.4820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4082, device='cuda:0', dtype=torch.float64)
tensor([-14.7701, -33.5324, -16.9171, -22.7825, -19.4604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5432, device='cuda:0', dtype=torch.float64)
tensor([-14.6917, -33.3046, -16.9676, -22.5697, -19.5310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4824, device='cuda:0', dtype=torch.float64)
tensor([-14.5788, -33.0722, -17.0016, -22.2570, -19.4712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5169, device='cuda:0', dtype=torch.float64)
tensor([-14.5135, -33.0427, -17.0689, -21.9707, -19.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4428, device='cuda:0', dtype=torch.float64)
tensor([-14.4293, -32.8819, -17.0224, -21.6933, -19.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5447, device='cuda:0', dtype=torch.float64)
tensor([-14.3510, -32.7235, -16.9678, -21.4266, -18.9508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4576, device='cuda:0', dtype=torch.float64)
tensor([-14.2938, -32.5653, -16.9018, -21.1833, -18.6443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4241, device='cuda:0', dtype=torch.float64)
tensor([-14.2278, -32.3849, -16.8854, -20.9113, -18.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4064, device='cuda:0', dtype=torch.float64)
tensor([-14.1393, -32.1855, -16.8475, -20.6567, -18.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4393, device='cuda:0', dtype=torch.float64)
tensor([-14.0302, -32.0742, -16.8005, -20.4366, -18.2095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4881, device='cuda:0', dtype=torch.float64)
tensor([-13.9930, -32.0991, -16.7446, -20.3526, -18.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4862, device='cuda:0', dtype=torch.float64)
tensor([-13.9987, -32.2163, -16.7979, -20.3124, -18.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5241, device='cuda:0', dtype=torch.float64)
tensor([-14.0244, -32.3387, -16.8346, -20.3324, -18.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4615, device='cuda:0', dtype=torch.float64)
tensor([-14.0592, -32.4100, -16.8620, -20.3427, -18.4948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3797, device='cuda:0', dtype=torch.float64)
tensor([-14.0605, -32.3538, -16.8036, -20.2785, -18.5495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3875, device='cuda:0', dtype=torch.float64)
tensor([-14.0529, -32.2579, -16.7107, -20.2291, -18.6268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4769, device='cuda:0', dtype=torch.float64)
tensor([-14.0298, -32.2245, -16.6233, -20.1240, -18.6743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3678, device='cuda:0', dtype=torch.float64)
tensor([-13.9926, -32.1029, -16.4526, -20.0059, -18.7208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3448, device='cuda:0', dtype=torch.float64)
tensor([-13.9781, -31.9400, -16.2852, -19.8861, -18.6332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4679, device='cuda:0', dtype=torch.float64)
tensor([-13.9927, -31.7999, -16.1500, -19.7986, -18.4785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4181, device='cuda:0', dtype=torch.float64)
tensor([-14.0128, -31.6341, -15.9913, -19.7447, -18.2856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4588, device='cuda:0', dtype=torch.float64)
tensor([-14.0587, -31.4571, -15.8574, -19.7247, -18.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3617, device='cuda:0', dtype=torch.float64)
tensor([-14.1206, -31.3330, -15.7236, -19.6950, -17.9575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4152, device='cuda:0', dtype=torch.float64)
tensor([-14.1883, -31.1567, -15.6242, -19.6311, -17.8085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3524, device='cuda:0', dtype=torch.float64)
tensor([-14.2312, -30.9953, -15.5460, -19.5818, -17.6963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4347, device='cuda:0', dtype=torch.float64)
tensor([-14.2759, -30.8658, -15.5191, -19.4863, -17.5764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4106, device='cuda:0', dtype=torch.float64)
tensor([-14.2920, -30.7567, -15.4748, -19.3449, -17.5072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4066, device='cuda:0', dtype=torch.float64)
tensor([-14.3208, -30.6125, -15.4524, -19.2606, -17.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4828, device='cuda:0', dtype=torch.float64)
tensor([-14.4241, -30.5210, -15.4258, -19.2370, -17.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3914, device='cuda:0', dtype=torch.float64)
tensor([-14.4505, -30.5344, -15.3798, -19.1630, -17.3060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4313, device='cuda:0', dtype=torch.float64)
tensor([-14.5060, -30.4703, -15.3861, -19.1476, -17.2510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4027, device='cuda:0', dtype=torch.float64)
tensor([-14.5468, -30.3671, -15.3835, -19.1471, -17.1094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3674, device='cuda:0', dtype=torch.float64)
tensor([-14.5775, -30.3199, -15.4084, -19.1856, -16.9984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3898, device='cuda:0', dtype=torch.float64)
tensor([-14.5818, -30.2338, -15.4135, -19.2331, -16.8909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4188, device='cuda:0', dtype=torch.float64)
tensor([-14.5262, -30.0168, -15.4053, -19.2693, -16.7437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4419, device='cuda:0', dtype=torch.float64)
tensor([-14.4312, -29.7144, -15.3531, -19.3030, -16.6158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3912, device='cuda:0', dtype=torch.float64)
tensor([-14.3074, -29.4659, -15.3056, -19.3521, -16.4644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4062, device='cuda:0', dtype=torch.float64)
tensor([-14.2195, -29.3068, -15.2567, -19.4130, -16.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3638, device='cuda:0', dtype=torch.float64)
tensor([-14.1391, -29.1711, -15.2282, -19.4538, -16.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4535, device='cuda:0', dtype=torch.float64)
tensor([-14.0746, -28.9702, -15.1931, -19.5799, -16.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4742, device='cuda:0', dtype=torch.float64)
tensor([-13.9819, -28.7836, -15.1409, -19.6626, -16.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3761, device='cuda:0', dtype=torch.float64)
tensor([-13.8750, -28.6447, -15.1000, -19.7136, -16.2706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4073, device='cuda:0', dtype=torch.float64)
tensor([-13.7724, -28.4605, -15.0479, -19.8391, -16.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3164, device='cuda:0', dtype=torch.float64)
tensor([-13.6691, -28.2678, -15.0170, -19.9846, -16.3064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3543, device='cuda:0', dtype=torch.float64)
tensor([-13.5935, -28.1352, -14.9827, -20.1793, -16.2537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4188, device='cuda:0', dtype=torch.float64)
tensor([-13.5122, -27.9558, -14.9522, -20.3773, -16.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3652, device='cuda:0', dtype=torch.float64)
tensor([-13.4130, -27.7879, -14.9410, -20.5121, -16.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3649, device='cuda:0', dtype=torch.float64)
tensor([-13.3155, -27.6497, -14.9391, -20.5495, -16.2917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3409, device='cuda:0', dtype=torch.float64)
tensor([-13.2113, -27.4599, -14.9548, -20.5921, -16.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3986, device='cuda:0', dtype=torch.float64)
tensor([-13.1281, -27.3977, -14.9871, -20.6239, -16.6328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3333, device='cuda:0', dtype=torch.float64)
tensor([-13.0452, -27.3655, -15.0148, -20.6302, -16.8299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3387, device='cuda:0', dtype=torch.float64)
tensor([-12.9729, -27.3123, -15.0496, -20.7497, -16.9742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4301, device='cuda:0', dtype=torch.float64)
tensor([-12.9031, -27.2873, -15.0747, -20.8681, -17.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3668, device='cuda:0', dtype=torch.float64)
tensor([-12.8318, -27.2497, -15.1029, -20.9582, -17.2341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3892, device='cuda:0', dtype=torch.float64)
tensor([-12.7795, -27.2397, -15.1295, -20.9820, -17.3916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3234, device='cuda:0', dtype=torch.float64)
tensor([-12.7415, -27.2097, -15.1694, -21.0332, -17.5285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3712, device='cuda:0', dtype=torch.float64)
tensor([-12.6958, -27.1185, -15.1838, -21.1221, -17.5586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3944, device='cuda:0', dtype=torch.float64)
tensor([-12.6149, -27.0154, -15.2289, -21.1780, -17.7090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3755, device='cuda:0', dtype=torch.float64)
tensor([-12.5692, -26.8923, -15.2734, -21.2413, -17.7868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3038, device='cuda:0', dtype=torch.float64)
tensor([-12.5080, -26.8194, -15.2933, -21.2200, -17.8096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3658, device='cuda:0', dtype=torch.float64)
tensor([-12.4482, -26.7609, -15.3110, -21.1860, -17.8829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3765, device='cuda:0', dtype=torch.float64)
tensor([-12.3927, -26.7101, -15.3524, -21.2265, -17.9557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3928, device='cuda:0', dtype=torch.float64)
tensor([-12.3476, -26.7255, -15.3612, -21.2537, -18.0245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3901, device='cuda:0', dtype=torch.float64)
tensor([-12.3261, -26.7320, -15.3677, -21.2473, -18.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3516, device='cuda:0', dtype=torch.float64)
tensor([-12.3269, -26.7884, -15.3444, -21.2904, -18.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3482, device='cuda:0', dtype=torch.float64)
tensor([-12.3655, -26.9767, -15.3007, -21.3227, -18.2002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3318, device='cuda:0', dtype=torch.float64)
tensor([-12.3911, -27.2571, -15.2675, -21.3868, -18.3201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3777, device='cuda:0', dtype=torch.float64)
tensor([-12.3883, -27.5020, -15.2159, -21.4722, -18.3823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2924, device='cuda:0', dtype=torch.float64)
tensor([-12.3809, -27.7593, -15.1634, -21.6283, -18.4763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3709, device='cuda:0', dtype=torch.float64)
tensor([-12.3296, -28.0391, -15.1141, -21.7763, -18.6231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3398, device='cuda:0', dtype=torch.float64)
tensor([-12.2760, -28.2071, -15.0603, -21.8956, -18.6889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3143, device='cuda:0', dtype=torch.float64)
tensor([-12.2280, -28.3564, -15.0111, -21.9798, -18.7232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3689, device='cuda:0', dtype=torch.float64)
tensor([-12.2158, -28.5243, -14.9379, -22.0627, -18.7155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4041, device='cuda:0', dtype=torch.float64)
tensor([-12.2216, -28.5911, -14.8810, -22.0944, -18.6973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2617, device='cuda:0', dtype=torch.float64)
tensor([-12.2101, -28.6662, -14.8476, -22.1537, -18.7539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3512, device='cuda:0', dtype=torch.float64)
tensor([-12.2127, -28.7369, -14.7898, -22.2089, -18.8028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3177, device='cuda:0', dtype=torch.float64)
tensor([-12.1985, -28.8096, -14.7500, -22.2255, -18.8630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3577, device='cuda:0', dtype=torch.float64)
tensor([-12.1924, -28.8862, -14.6879, -22.2197, -18.8611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3392, device='cuda:0', dtype=torch.float64)
tensor([-12.1751, -28.9778, -14.6236, -22.2323, -18.9165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3209, device='cuda:0', dtype=torch.float64)
tensor([-12.1557, -29.1196, -14.5577, -22.2522, -18.9558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3287, device='cuda:0', dtype=torch.float64)
tensor([-12.1377, -29.2569, -14.5153, -22.2551, -19.0228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3823, device='cuda:0', dtype=torch.float64)
tensor([-12.1205, -29.3757, -14.4763, -22.2792, -19.0394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3676, device='cuda:0', dtype=torch.float64)
tensor([-12.0828, -29.4705, -14.4396, -22.2913, -19.0144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3162, device='cuda:0', dtype=torch.float64)
tensor([-12.0479, -29.6582, -14.3844, -22.3231, -18.9984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2859, device='cuda:0', dtype=torch.float64)
tensor([-12.0545, -29.8919, -14.3473, -22.4356, -19.0403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3295, device='cuda:0', dtype=torch.float64)
tensor([-12.0501, -30.1292, -14.3409, -22.5528, -19.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3379, device='cuda:0', dtype=torch.float64)
tensor([-12.0548, -30.4163, -14.3202, -22.7253, -19.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3212, device='cuda:0', dtype=torch.float64)
tensor([-12.0178, -30.6714, -14.2778, -22.8571, -19.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3046, device='cuda:0', dtype=torch.float64)
tensor([-12.0118, -30.8282, -14.2646, -23.0042, -19.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3314, device='cuda:0', dtype=torch.float64)
tensor([-12.0207, -30.9028, -14.2362, -23.1180, -19.2682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3249, device='cuda:0', dtype=torch.float64)
tensor([-12.0376, -30.9643, -14.2256, -23.1646, -19.2336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2884, device='cuda:0', dtype=torch.float64)
tensor([-12.0187, -31.0224, -14.2190, -23.2748, -19.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2631, device='cuda:0', dtype=torch.float64)
tensor([-12.0162, -31.1354, -14.2163, -23.3865, -19.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2557, device='cuda:0', dtype=torch.float64)
tensor([-12.0214, -31.2263, -14.2298, -23.4942, -19.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2923, device='cuda:0', dtype=torch.float64)
tensor([-12.0064, -31.2487, -14.2567, -23.4903, -19.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2676, device='cuda:0', dtype=torch.float64)
tensor([-12.0089, -31.1712, -14.2575, -23.3815, -18.9264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2774, device='cuda:0', dtype=torch.float64)
tensor([-12.0304, -31.0793, -14.2399, -23.2608, -18.7218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2798, device='cuda:0', dtype=torch.float64)
tensor([-12.0709, -31.0286, -14.2488, -23.1549, -18.5732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2468, device='cuda:0', dtype=torch.float64)
tensor([-12.1375, -30.9665, -14.2576, -23.0256, -18.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2648, device='cuda:0', dtype=torch.float64)
tensor([-12.2215, -30.8890, -14.2790, -22.9111, -18.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2880, device='cuda:0', dtype=torch.float64)
tensor([-12.3248, -30.8420, -14.2970, -22.8130, -18.0996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3663, device='cuda:0', dtype=torch.float64)
tensor([-12.4357, -30.8680, -14.3558, -22.8758, -18.0370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2867, device='cuda:0', dtype=torch.float64)
tensor([-12.5262, -30.9231, -14.4040, -22.9706, -17.9587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2781, device='cuda:0', dtype=torch.float64)
tensor([-12.6235, -30.9704, -14.4575, -23.1119, -17.8886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2468, device='cuda:0', dtype=torch.float64)
tensor([-12.7196, -31.0976, -14.4810, -23.3033, -17.7830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2894, device='cuda:0', dtype=torch.float64)
tensor([-12.8294, -31.3699, -14.5138, -23.6239, -17.7566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2952, device='cuda:0', dtype=torch.float64)
tensor([-12.8944, -31.5922, -14.5240, -23.9829, -17.7532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2748, device='cuda:0', dtype=torch.float64)
tensor([-12.9717, -31.7870, -14.5084, -24.2540, -17.6642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3119, device='cuda:0', dtype=torch.float64)
tensor([-13.0257, -31.9234, -14.4465, -24.4318, -17.5423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2929, device='cuda:0', dtype=torch.float64)
tensor([-13.0744, -31.9049, -14.3611, -24.5077, -17.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2781, device='cuda:0', dtype=torch.float64)
tensor([-13.1128, -31.9696, -14.3351, -24.7456, -17.2858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2800, device='cuda:0', dtype=torch.float64)
tensor([-13.1747, -31.9699, -14.3110, -24.9195, -17.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2932, device='cuda:0', dtype=torch.float64)
tensor([-13.1983, -31.9449, -14.3054, -25.1317, -17.0505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2967, device='cuda:0', dtype=torch.float64)
tensor([-13.1779, -31.8924, -14.2788, -25.3255, -16.9723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2625, device='cuda:0', dtype=torch.float64)
tensor([-13.1606, -31.7778, -14.2191, -25.4519, -16.8987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2183, device='cuda:0', dtype=torch.float64)
tensor([-13.1434, -31.7124, -14.1725, -25.5955, -16.8339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2618, device='cuda:0', dtype=torch.float64)
tensor([-13.1247, -31.6356, -14.1308, -25.6941, -16.7999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2488, device='cuda:0', dtype=torch.float64)
tensor([-13.1010, -31.6069, -14.0935, -25.8184, -16.7891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2934, device='cuda:0', dtype=torch.float64)
tensor([-13.0886, -31.6034, -14.0725, -26.0495, -16.8996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2529, device='cuda:0', dtype=torch.float64)
tensor([-13.0646, -31.5473, -14.0507, -26.1952, -16.9743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2795, device='cuda:0', dtype=torch.float64)
tensor([-13.0224, -31.4694, -13.9859, -26.3162, -17.0098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2796, device='cuda:0', dtype=torch.float64)
tensor([-12.9834, -31.3820, -13.9086, -26.4133, -17.0611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2818, device='cuda:0', dtype=torch.float64)
tensor([-12.9438, -31.2907, -13.8440, -26.4302, -17.0859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2218, device='cuda:0', dtype=torch.float64)
tensor([-12.9078, -31.1870, -13.8016, -26.4297, -17.0868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3391, device='cuda:0', dtype=torch.float64)
tensor([-12.8621, -31.1126, -13.7908, -26.4547, -17.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2856, device='cuda:0', dtype=torch.float64)
tensor([-12.8012, -30.9309, -13.8183, -26.3698, -17.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2657, device='cuda:0', dtype=torch.float64)
tensor([-12.7288, -30.6729, -13.8091, -26.1385, -17.0094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2546, device='cuda:0', dtype=torch.float64)
tensor([-12.6543, -30.5229, -13.7920, -26.0118, -17.0037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2755, device='cuda:0', dtype=torch.float64)
tensor([-12.5622, -30.3733, -13.7722, -25.8700, -16.9978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2602, device='cuda:0', dtype=torch.float64)
tensor([-12.4720, -30.2110, -13.7473, -25.7163, -16.9119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2242, device='cuda:0', dtype=torch.float64)
tensor([-12.3873, -30.0290, -13.7292, -25.5419, -16.7865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2343, device='cuda:0', dtype=torch.float64)
tensor([-12.3046, -29.8742, -13.7349, -25.4280, -16.6989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2451, device='cuda:0', dtype=torch.float64)
tensor([-12.2047, -29.7411, -13.7430, -25.3071, -16.5841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3102, device='cuda:0', dtype=torch.float64)
tensor([-12.1193, -29.6472, -13.7326, -25.2328, -16.4380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2595, device='cuda:0', dtype=torch.float64)
tensor([-12.0396, -29.5014, -13.7218, -25.0906, -16.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2414, device='cuda:0', dtype=torch.float64)
tensor([-11.9681, -29.2940, -13.6986, -24.9369, -16.0528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2454, device='cuda:0', dtype=torch.float64)
tensor([-11.9053, -29.1703, -13.6716, -24.8087, -15.8806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2328, device='cuda:0', dtype=torch.float64)
tensor([-11.8249, -28.9934, -13.6417, -24.6852, -15.7012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2624, device='cuda:0', dtype=torch.float64)
tensor([-11.7522, -28.7840, -13.6040, -24.5330, -15.4800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2308, device='cuda:0', dtype=torch.float64)
tensor([-11.6512, -28.4988, -13.5634, -24.3574, -15.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2674, device='cuda:0', dtype=torch.float64)
tensor([-11.5428, -28.2198, -13.5391, -24.1727, -15.0627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1977, device='cuda:0', dtype=torch.float64)
tensor([-11.4482, -27.9646, -13.5270, -23.9846, -14.8941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2598, device='cuda:0', dtype=torch.float64)
tensor([-11.3704, -27.7756, -13.5082, -23.8932, -14.7561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2549, device='cuda:0', dtype=torch.float64)
tensor([-11.2629, -27.5263, -13.5105, -23.7622, -14.6331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2137, device='cuda:0', dtype=torch.float64)
tensor([-11.1584, -27.2905, -13.5206, -23.6278, -14.4849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2365, device='cuda:0', dtype=torch.float64)
tensor([-11.0627, -27.0618, -13.5323, -23.5033, -14.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2360, device='cuda:0', dtype=torch.float64)
tensor([-11.0062, -26.8622, -13.5404, -23.4427, -14.2881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2496, device='cuda:0', dtype=torch.float64)
tensor([-10.9726, -26.6960, -13.5506, -23.4040, -14.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2431, device='cuda:0', dtype=torch.float64)
tensor([-10.9457, -26.5293, -13.5692, -23.3236, -14.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2321, device='cuda:0', dtype=torch.float64)
tensor([-10.9178, -26.4471, -13.6033, -23.2782, -14.1745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2672, device='cuda:0', dtype=torch.float64)
tensor([-10.8938, -26.4395, -13.6210, -23.2276, -14.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2791, device='cuda:0', dtype=torch.float64)
tensor([-10.8864, -26.3865, -13.6191, -23.1011, -14.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2609, device='cuda:0', dtype=torch.float64)
tensor([-10.8737, -26.3263, -13.5826, -22.9781, -13.9688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1919, device='cuda:0', dtype=torch.float64)
tensor([-10.8702, -26.2584, -13.5656, -22.8844, -13.9096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2120, device='cuda:0', dtype=torch.float64)
tensor([-10.8414, -26.1834, -13.5542, -22.8242, -13.9065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2727, device='cuda:0', dtype=torch.float64)
tensor([-10.7914, -26.0461, -13.5645, -22.7437, -13.8331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2456, device='cuda:0', dtype=torch.float64)
tensor([-10.7501, -25.9516, -13.5567, -22.6195, -13.7604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2817, device='cuda:0', dtype=torch.float64)
tensor([-10.7162, -25.8721, -13.5584, -22.5369, -13.6749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2532, device='cuda:0', dtype=torch.float64)
tensor([-10.6605, -25.7399, -13.5727, -22.3967, -13.6450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2349, device='cuda:0', dtype=torch.float64)
tensor([-10.6069, -25.6461, -13.5970, -22.2234, -13.6515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2269, device='cuda:0', dtype=torch.float64)
tensor([-10.5440, -25.5461, -13.6454, -22.0438, -13.6634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2707, device='cuda:0', dtype=torch.float64)
tensor([-10.4923, -25.4507, -13.6998, -21.9497, -13.7349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2359, device='cuda:0', dtype=torch.float64)
tensor([-10.4340, -25.3163, -13.7490, -21.8160, -13.7588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2463, device='cuda:0', dtype=torch.float64)
tensor([-10.3582, -25.1657, -13.8124, -21.6545, -13.7868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-10.2873, -25.0163, -13.8448, -21.5609, -13.8085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2258, device='cuda:0', dtype=torch.float64)
tensor([-10.2300, -24.8984, -13.8777, -21.5084, -13.8440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2300, device='cuda:0', dtype=torch.float64)
tensor([-10.1692, -24.8242, -13.8999, -21.5017, -13.8537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2704, device='cuda:0', dtype=torch.float64)
tensor([-10.1125, -24.7196, -13.9231, -21.4807, -13.8410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2555, device='cuda:0', dtype=torch.float64)
tensor([-10.0698, -24.6348, -13.9475, -21.4735, -13.8400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2358, device='cuda:0', dtype=torch.float64)
tensor([-10.0420, -24.5392, -13.9539, -21.4564, -13.8192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2323, device='cuda:0', dtype=torch.float64)
tensor([-10.0288, -24.5021, -13.9261, -21.4655, -13.7890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2002, device='cuda:0', dtype=torch.float64)
tensor([-10.0109, -24.4831, -13.8999, -21.4653, -13.7572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2443, device='cuda:0', dtype=torch.float64)
tensor([ -9.9913, -24.4767, -13.8711, -21.5106, -13.7538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2531, device='cuda:0', dtype=torch.float64)
tensor([ -9.9782, -24.4084, -13.8566, -21.5188, -13.7522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1844, device='cuda:0', dtype=torch.float64)
tensor([ -9.9847, -24.3563, -13.8625, -21.5143, -13.7278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-10.0174, -24.3325, -13.8605, -21.5124, -13.6890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1861, device='cuda:0', dtype=torch.float64)
tensor([-10.0499, -24.3284, -13.8538, -21.4789, -13.6274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2549, device='cuda:0', dtype=torch.float64)
tensor([-10.1121, -24.3404, -13.8199, -21.4383, -13.5270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2166, device='cuda:0', dtype=torch.float64)
tensor([-10.1554, -24.3243, -13.7831, -21.4016, -13.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1940, device='cuda:0', dtype=torch.float64)
tensor([-10.2113, -24.2768, -13.7501, -21.3610, -13.3380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2086, device='cuda:0', dtype=torch.float64)
tensor([-10.2808, -24.2214, -13.6904, -21.3731, -13.2604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2307, device='cuda:0', dtype=torch.float64)
tensor([-10.3249, -24.1803, -13.6483, -21.3780, -13.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2449, device='cuda:0', dtype=torch.float64)
tensor([-10.3980, -24.1442, -13.6135, -21.3733, -13.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2306, device='cuda:0', dtype=torch.float64)
tensor([-10.4519, -24.0964, -13.6003, -21.3628, -13.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2395, device='cuda:0', dtype=torch.float64)
tensor([-10.4951, -24.0256, -13.5724, -21.3151, -13.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2074, device='cuda:0', dtype=torch.float64)
tensor([-10.5493, -23.9369, -13.5512, -21.2482, -13.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2101, device='cuda:0', dtype=torch.float64)
tensor([-10.5782, -23.8483, -13.5211, -21.1892, -13.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1994, device='cuda:0', dtype=torch.float64)
tensor([-10.5965, -23.7488, -13.5127, -21.0941, -13.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2485, device='cuda:0', dtype=torch.float64)
tensor([-10.5893, -23.6327, -13.5159, -20.9763, -13.1643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2156, device='cuda:0', dtype=torch.float64)
tensor([-10.5780, -23.4958, -13.5447, -20.8727, -13.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1954, device='cuda:0', dtype=torch.float64)
tensor([-10.5588, -23.3474, -13.5985, -20.7282, -13.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1635, device='cuda:0', dtype=torch.float64)
tensor([-10.5245, -23.2319, -13.6451, -20.5765, -13.0501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2437, device='cuda:0', dtype=torch.float64)
tensor([-10.4869, -23.1664, -13.6834, -20.4604, -12.9812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2249, device='cuda:0', dtype=torch.float64)
tensor([-10.4435, -23.1138, -13.7543, -20.3674, -12.9538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2073, device='cuda:0', dtype=torch.float64)
tensor([-10.3834, -23.0526, -13.8285, -20.2529, -12.9374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2332, device='cuda:0', dtype=torch.float64)
tensor([-10.3220, -22.9934, -13.8770, -20.1438, -12.9621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2350, device='cuda:0', dtype=torch.float64)
tensor([-10.2735, -22.9619, -13.9374, -20.0411, -12.9771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2212, device='cuda:0', dtype=torch.float64)
tensor([-10.2276, -22.9592, -13.9612, -19.9685, -12.9971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1855, device='cuda:0', dtype=torch.float64)
tensor([-10.1772, -22.9728, -14.0002, -19.9070, -12.9907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2628, device='cuda:0', dtype=torch.float64)
tensor([-10.1392, -22.9686, -14.0737, -19.8385, -12.9620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2508, device='cuda:0', dtype=torch.float64)
tensor([-10.1198, -22.9908, -14.1425, -19.7564, -12.9359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2064, device='cuda:0', dtype=torch.float64)
tensor([-10.1237, -23.0293, -14.1978, -19.6949, -12.9079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2139, device='cuda:0', dtype=torch.float64)
tensor([-10.1276, -23.0341, -14.2587, -19.6388, -12.9078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2900, device='cuda:0', dtype=torch.float64)
tensor([-10.1358, -23.0785, -14.2898, -19.6433, -12.9470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2586, device='cuda:0', dtype=torch.float64)
tensor([-10.1142, -23.1487, -14.2829, -19.6770, -13.0163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1838, device='cuda:0', dtype=torch.float64)
tensor([-10.0937, -23.2306, -14.2768, -19.7104, -13.0907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2586, device='cuda:0', dtype=torch.float64)
tensor([-10.0601, -23.2800, -14.3025, -19.7150, -13.1104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2160, device='cuda:0', dtype=torch.float64)
tensor([-10.0282, -23.3389, -14.3190, -19.7419, -13.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2358, device='cuda:0', dtype=torch.float64)
tensor([-10.0121, -23.3904, -14.3391, -19.7874, -13.2594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2107, device='cuda:0', dtype=torch.float64)
tensor([ -9.9927, -23.4968, -14.3026, -19.8516, -13.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2134, device='cuda:0', dtype=torch.float64)
tensor([-10.0071, -23.6447, -14.2670, -19.8979, -13.3865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2154, device='cuda:0', dtype=torch.float64)
tensor([-10.0252, -23.8240, -14.2527, -19.9526, -13.4846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1967, device='cuda:0', dtype=torch.float64)
tensor([-10.0280, -23.9845, -14.2454, -19.9747, -13.5236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2327, device='cuda:0', dtype=torch.float64)
tensor([-10.0239, -24.1580, -14.2458, -20.0062, -13.5630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2453, device='cuda:0', dtype=torch.float64)
tensor([-10.0360, -24.3192, -14.2503, -20.0766, -13.6192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1959, device='cuda:0', dtype=torch.float64)
tensor([-10.0550, -24.4356, -14.2676, -20.1410, -13.6849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2523, device='cuda:0', dtype=torch.float64)
tensor([-10.0907, -24.5892, -14.2484, -20.1749, -13.7636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2165, device='cuda:0', dtype=torch.float64)
tensor([-10.1127, -24.7217, -14.2134, -20.2016, -13.7866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2062, device='cuda:0', dtype=torch.float64)
tensor([-10.1460, -24.8457, -14.1718, -20.2192, -13.7767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2051, device='cuda:0', dtype=torch.float64)
tensor([-10.1590, -24.9107, -14.1605, -20.2286, -13.7866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2043, device='cuda:0', dtype=torch.float64)
tensor([-10.1757, -24.9754, -14.1303, -20.2180, -13.7920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2582, device='cuda:0', dtype=torch.float64)
tensor([-10.1865, -24.9944, -14.1223, -20.2133, -13.7975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2159, device='cuda:0', dtype=torch.float64)
tensor([-10.2043, -25.0347, -14.1117, -20.2589, -13.8636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1713, device='cuda:0', dtype=torch.float64)
tensor([-10.2154, -25.0371, -14.1173, -20.2704, -13.9245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1928, device='cuda:0', dtype=torch.float64)
tensor([-10.2279, -25.0389, -14.1183, -20.2908, -13.9734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2455, device='cuda:0', dtype=torch.float64)
tensor([-10.2384, -25.0344, -14.1388, -20.3524, -14.0827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([-10.2101, -25.0594, -14.1687, -20.4187, -14.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2171, device='cuda:0', dtype=torch.float64)
tensor([-10.1789, -25.0828, -14.2109, -20.5055, -14.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2517, device='cuda:0', dtype=torch.float64)
tensor([-10.1509, -25.1394, -14.2372, -20.5550, -14.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2068, device='cuda:0', dtype=torch.float64)
tensor([-10.1339, -25.1444, -14.2874, -20.5753, -14.3798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2351, device='cuda:0', dtype=torch.float64)
tensor([-10.0844, -25.1428, -14.3506, -20.5704, -14.4175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2398, device='cuda:0', dtype=torch.float64)
tensor([-10.0434, -25.1148, -14.4019, -20.5423, -14.3658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2329, device='cuda:0', dtype=torch.float64)
tensor([-10.0239, -25.0861, -14.4701, -20.5391, -14.3350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2238, device='cuda:0', dtype=torch.float64)
tensor([-10.0350, -25.0493, -14.5195, -20.5204, -14.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2402, device='cuda:0', dtype=torch.float64)
tensor([-10.0579, -24.9940, -14.5847, -20.5387, -14.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1989, device='cuda:0', dtype=torch.float64)
tensor([-10.0801, -24.9985, -14.6311, -20.6250, -14.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2384, device='cuda:0', dtype=torch.float64)
tensor([-10.1048, -25.0170, -14.6685, -20.7280, -14.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2108, device='cuda:0', dtype=torch.float64)
tensor([-10.0984, -25.0388, -14.6838, -20.8058, -14.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2628, device='cuda:0', dtype=torch.float64)
tensor([-10.0768, -25.1006, -14.7034, -20.9095, -14.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2151, device='cuda:0', dtype=torch.float64)
tensor([-10.0474, -25.1474, -14.7149, -21.0098, -14.3126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2560, device='cuda:0', dtype=torch.float64)
tensor([-10.0087, -25.1893, -14.7283, -21.1070, -14.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2311, device='cuda:0', dtype=torch.float64)
tensor([ -9.9879, -25.2556, -14.7408, -21.2530, -14.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2666, device='cuda:0', dtype=torch.float64)
tensor([ -9.9728, -25.2281, -14.7543, -21.3460, -14.2202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2067, device='cuda:0', dtype=torch.float64)
tensor([ -9.9705, -25.2189, -14.7573, -21.4930, -14.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2347, device='cuda:0', dtype=torch.float64)
tensor([ -9.9432, -25.1550, -14.7730, -21.5661, -14.1015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2715, device='cuda:0', dtype=torch.float64)
tensor([ -9.9215, -25.0621, -14.7837, -21.6363, -14.0137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2431, device='cuda:0', dtype=torch.float64)
tensor([ -9.9108, -24.9719, -14.7862, -21.6990, -13.9666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2332, device='cuda:0', dtype=torch.float64)
tensor([ -9.8872, -24.9168, -14.8018, -21.7109, -13.8926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2191, device='cuda:0', dtype=torch.float64)
tensor([ -9.8659, -24.8825, -14.8292, -21.7336, -13.8412], device='cuda:0',
       dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_113739.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(122.6144, device='cuda:0', dtype=torch.float64)
tensor([ -2.0512, -12.0209,  -6.4028, -10.6342,  -5.4567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.1218, device='cuda:0', dtype=torch.float64)
tensor([ -2.9053,  -9.7401,  -6.9760, -11.8968, -16.4414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(117.1999, device='cuda:0', dtype=torch.float64)
tensor([ -3.6168,  -6.6352,  -5.9663, -16.4908, -17.9364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(126.6351, device='cuda:0', dtype=torch.float64)
tensor([ -2.6388,  -5.1650,  -4.4952, -13.1509, -13.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.6221, device='cuda:0', dtype=torch.float64)
tensor([ -2.5881,  -4.7834,  -3.3282,  -9.7426, -10.4981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.3379, device='cuda:0', dtype=torch.float64)
tensor([-2.4942, -4.8999, -3.0047, -6.3338, -6.2585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(42.2388, device='cuda:0', dtype=torch.float64)
tensor([-2.5177, -5.0380, -2.9362, -6.4097, -4.8013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(50.6330, device='cuda:0', dtype=torch.float64)
tensor([-2.5343, -4.8262, -2.8949, -6.5754, -4.6345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.0626, device='cuda:0', dtype=torch.float64)
tensor([-2.5704, -5.5061, -2.9472, -8.0904, -4.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.2697, device='cuda:0', dtype=torch.float64)
tensor([ -2.5509,  -5.3741,  -3.2156, -12.6110,  -4.2900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.2673, device='cuda:0', dtype=torch.float64)
tensor([ -2.4200,  -4.3773,  -3.5419, -13.5175,  -4.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.6490, device='cuda:0', dtype=torch.float64)
tensor([ -2.2286,  -3.7477,  -3.7921, -10.6231,  -4.7951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.7099, device='cuda:0', dtype=torch.float64)
tensor([-2.0635, -3.3558, -4.3623, -7.1005, -4.7448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.6947, device='cuda:0', dtype=torch.float64)
tensor([-1.9906, -3.1543, -4.4454, -4.4086, -4.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.1205, device='cuda:0', dtype=torch.float64)
tensor([-2.0108, -3.1444, -3.9438, -3.8167, -3.8438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.4048, device='cuda:0', dtype=torch.float64)
tensor([-2.0933, -3.1982, -3.5065, -3.5847, -3.8018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.6763, device='cuda:0', dtype=torch.float64)
tensor([-2.1758, -3.4242, -3.2919, -3.4632, -3.7682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.3656, device='cuda:0', dtype=torch.float64)
tensor([-2.1881, -3.6520, -3.1968, -3.4549, -3.7350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.9268, device='cuda:0', dtype=torch.float64)
tensor([-2.1105, -3.4243, -3.1432, -3.4691, -3.6813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0730, device='cuda:0', dtype=torch.float64)
tensor([-2.0034, -3.0358, -3.0950, -3.4933, -3.5943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9132, device='cuda:0', dtype=torch.float64)
tensor([-1.9269, -2.8952, -3.0378, -3.5597, -3.5091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7878, device='cuda:0', dtype=torch.float64)
tensor([-1.8913, -2.8934, -2.9762, -3.6092, -3.4585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.3484, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.9289, -2.9219, -3.6535, -3.4534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.4402, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.9862, -2.8829, -3.7485, -3.4744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.3155, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -3.0512, -2.8567, -3.8626, -3.4757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0760, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -3.0999, -2.8375, -3.8939, -3.4415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.9804, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -3.1027, -2.8241, -3.8264, -3.4111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9112, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -3.0558, -2.8165, -3.7275, -3.4019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5115, device='cuda:0', dtype=torch.float64)
tensor([-1.8167, -2.9899, -2.8140, -3.6550, -3.4084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3440, device='cuda:0', dtype=torch.float64)
tensor([-1.7784, -2.9303, -2.8159, -3.6172, -3.4304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.4184, device='cuda:0', dtype=torch.float64)
tensor([-1.7586, -2.8871, -2.8214, -3.6022, -3.4621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.7239, device='cuda:0', dtype=torch.float64)
tensor([-1.7523, -2.8614, -2.8289, -3.6004, -3.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5681, device='cuda:0', dtype=torch.float64)
tensor([-1.7546, -2.8412, -2.8368, -3.6049, -3.5210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.9067, device='cuda:0', dtype=torch.float64)
tensor([-1.7623, -2.8141, -2.8424, -3.6049, -3.5306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2043, device='cuda:0', dtype=torch.float64)
tensor([-1.7732, -2.7814, -2.8429, -3.5994, -3.5193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.2172, device='cuda:0', dtype=torch.float64)
tensor([-1.7854, -2.7561, -2.8365, -3.5969, -3.4888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0316, device='cuda:0', dtype=torch.float64)
tensor([-1.7975, -2.7455, -2.8238, -3.5978, -3.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6116, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.7474, -2.8075, -3.5987, -3.4026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9994, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.7579, -2.7899, -3.5984, -3.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3980, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.7740, -2.7700, -3.5941, -3.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0071, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7932, -2.7461, -3.5804, -3.2914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7967, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.8132, -2.7208, -3.5572, -3.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6876, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.8323, -2.7002, -3.5310, -3.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6361, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.8493, -2.6877, -3.5062, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6361, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.8634, -2.6831, -3.4821, -3.2327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5470, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.8744, -2.6849, -3.4573, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3699, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.8821, -2.6914, -3.4330, -3.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1192, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.8859, -2.7019, -3.4114, -3.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8963, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.8846, -2.7150, -3.3947, -3.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7499, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.8783, -2.7301, -3.3840, -3.2871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6546, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.8682, -2.7460, -3.3797, -3.2996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5509, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.8568, -2.7614, -3.3805, -3.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4881, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.8462, -2.7751, -3.3848, -3.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5065, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.8372, -2.7862, -3.3905, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5027, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.8302, -2.7941, -3.3959, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4401, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.8248, -2.7985, -3.4001, -3.3542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3596, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.8204, -2.7995, -3.4021, -3.3594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2603, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.8162, -2.7976, -3.4014, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1953, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.8116, -2.7936, -3.3981, -3.3611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0771, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.8065, -2.7889, -3.3933, -3.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9680, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.8007, -2.7847, -3.3878, -3.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8615, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.7943, -2.7819, -3.3826, -3.3572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7664, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.7873, -2.7814, -3.3782, -3.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6988, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.7799, -2.7833, -3.3746, -3.3572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6319, device='cuda:0', dtype=torch.float64)
tensor([-1.8184, -2.7727, -2.7875, -3.3722, -3.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5822, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.7659, -2.7938, -3.3710, -3.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5249, device='cuda:0', dtype=torch.float64)
tensor([-1.8107, -2.7599, -2.8013, -3.3703, -3.3592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5101, device='cuda:0', dtype=torch.float64)
tensor([-1.8080, -2.7554, -2.8091, -3.3696, -3.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5112, device='cuda:0', dtype=torch.float64)
tensor([-1.8067, -2.7529, -2.8164, -3.3682, -3.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4566, device='cuda:0', dtype=torch.float64)
tensor([-1.8074, -2.7531, -2.8224, -3.3651, -3.3638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4069, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.7557, -2.8268, -3.3605, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3230, device='cuda:0', dtype=torch.float64)
tensor([-1.8141, -2.7604, -2.8297, -3.3544, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2714, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.7659, -2.8317, -3.3480, -3.3740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2335, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.7716, -2.8330, -3.3418, -3.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2398, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.7771, -2.8338, -3.3366, -3.3806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2285, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7817, -2.8344, -3.3325, -3.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2168, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7853, -2.8350, -3.3294, -3.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1990, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7878, -2.8354, -3.3275, -3.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1498, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.7891, -2.8359, -3.3264, -3.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0716, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7898, -2.8360, -3.3260, -3.3813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0736, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.7899, -2.8360, -3.3258, -3.3790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0584, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.7895, -2.8359, -3.3258, -3.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0721, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.7888, -2.8358, -3.3256, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.7875, -2.8361, -3.3252, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0625, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.7856, -2.8371, -3.3249, -3.3690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.7833, -2.8385, -3.3245, -3.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0076, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7810, -2.8402, -3.3237, -3.3658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9662, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7790, -2.8419, -3.3226, -3.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9375, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7771, -2.8440, -3.3218, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9240, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7754, -2.8461, -3.3206, -3.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9013, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.7742, -2.8479, -3.3192, -3.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8976, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.7733, -2.8496, -3.3178, -3.3674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8666, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.7725, -2.8512, -3.3169, -3.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8415, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.7721, -2.8524, -3.3164, -3.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8545, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.7719, -2.8534, -3.3160, -3.3703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8071, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.7724, -2.8536, -3.3155, -3.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.7733, -2.8531, -3.3148, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7976, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.7741, -2.8523, -3.3145, -3.3713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7982, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7747, -2.8514, -3.3147, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7671, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7749, -2.8505, -3.3151, -3.3693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7755, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7746, -2.8499, -3.3156, -3.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7502, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7742, -2.8491, -3.3161, -3.3664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7686, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7741, -2.8481, -3.3160, -3.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7723, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.7739, -2.8475, -3.3156, -3.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7848, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.7739, -2.8468, -3.3145, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7249, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7740, -2.8464, -3.3134, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7318, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7743, -2.8459, -3.3122, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7240, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7745, -2.8454, -3.3112, -3.3644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7036, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.7742, -2.8451, -3.3108, -3.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7021, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7736, -2.8453, -3.3111, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7332, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.7728, -2.8457, -3.3115, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6998, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7722, -2.8458, -3.3115, -3.3675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6726, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7716, -2.8456, -3.3117, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7514, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7709, -2.8454, -3.3121, -3.3687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6867, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7704, -2.8457, -3.3134, -3.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6748, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7698, -2.8460, -3.3151, -3.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6540, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7695, -2.8460, -3.3163, -3.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6821, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7696, -2.8458, -3.3169, -3.3680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6372, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7699, -2.8456, -3.3170, -3.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6758, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7702, -2.8455, -3.3166, -3.3681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6531, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.7704, -2.8453, -3.3159, -3.3684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6459, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.7710, -2.8449, -3.3143, -3.3691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6512, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7713, -2.8446, -3.3135, -3.3698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6429, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7712, -2.8447, -3.3136, -3.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6221, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7711, -2.8448, -3.3138, -3.3707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6261, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7711, -2.8445, -3.3141, -3.3710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6173, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7710, -2.8442, -3.3140, -3.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6311, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7714, -2.8435, -3.3136, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6372, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7719, -2.8433, -3.3134, -3.3698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6390, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7719, -2.8433, -3.3134, -3.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6343, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7715, -2.8432, -3.3130, -3.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6060, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7713, -2.8429, -3.3122, -3.3681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5951, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7712, -2.8428, -3.3120, -3.3676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6156, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7705, -2.8429, -3.3127, -3.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6423, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.7693, -2.8437, -3.3144, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6082, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7681, -2.8446, -3.3162, -3.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5858, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7673, -2.8452, -3.3170, -3.3654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6350, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.7671, -2.8455, -3.3167, -3.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5947, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7668, -2.8455, -3.3161, -3.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6873, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7663, -2.8456, -3.3163, -3.3625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6358, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.7658, -2.8452, -3.3166, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6122, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.7654, -2.8448, -3.3168, -3.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6211, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7656, -2.8443, -3.3168, -3.3595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6252, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7665, -2.8432, -3.3160, -3.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5911, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.7682, -2.8419, -3.3139, -3.3594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6383, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7700, -2.8408, -3.3121, -3.3601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5789, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7720, -2.8400, -3.3107, -3.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6102, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7731, -2.8396, -3.3105, -3.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5499, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7736, -2.8400, -3.3107, -3.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5752, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.7733, -2.8410, -3.3116, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5430, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7725, -2.8425, -3.3128, -3.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5893, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7721, -2.8441, -3.3136, -3.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6522, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.7715, -2.8453, -3.3137, -3.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5873, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.7706, -2.8461, -3.3134, -3.3626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5847, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.7698, -2.8462, -3.3127, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6191, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.7688, -2.8462, -3.3135, -3.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5819, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.7673, -2.8469, -3.3151, -3.3588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5854, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.7666, -2.8470, -3.3162, -3.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6637, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.7665, -2.8464, -3.3162, -3.3551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5981, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7665, -2.8457, -3.3161, -3.3533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5753, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7666, -2.8453, -3.3156, -3.3520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.7665, -2.8448, -3.3137, -3.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5827, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7659, -2.8450, -3.3127, -3.3509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5982, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7643, -2.8455, -3.3128, -3.3510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6053, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.7631, -2.8462, -3.3134, -3.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5904, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7619, -2.8467, -3.3129, -3.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5822, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.7618, -2.8463, -3.3111, -3.3533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6088, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7626, -2.8453, -3.3107, -3.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6436, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7638, -2.8439, -3.3103, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6070, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7658, -2.8431, -3.3115, -3.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6132, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7681, -2.8419, -3.3114, -3.3568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5704, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.7711, -2.8404, -3.3096, -3.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5771, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7735, -2.8400, -3.3086, -3.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5695, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7755, -2.8401, -3.3075, -3.3586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6698, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.7758, -2.8417, -3.3084, -3.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5615, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.7744, -2.8434, -3.3089, -3.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5460, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.7723, -2.8449, -3.3096, -3.3559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5899, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.7705, -2.8459, -3.3100, -3.3551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5666, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.7698, -2.8461, -3.3101, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5717, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.7686, -2.8457, -3.3095, -3.3542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5222, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.7675, -2.8452, -3.3093, -3.3539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5721, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.7656, -2.8451, -3.3093, -3.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5738, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.7639, -2.8450, -3.3093, -3.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5832, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.7625, -2.8445, -3.3092, -3.3537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5678, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.7618, -2.8444, -3.3095, -3.3541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6417, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.7611, -2.8443, -3.3097, -3.3544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6039, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.7611, -2.8438, -3.3087, -3.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6015, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.7614, -2.8433, -3.3067, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5657, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7618, -2.8436, -3.3059, -3.3545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5819, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.7621, -2.8435, -3.3058, -3.3542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6215, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7611, -2.8448, -3.3078, -3.3532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5770, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7605, -2.8455, -3.3096, -3.3527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6016, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7612, -2.8455, -3.3098, -3.3525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6293, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.7622, -2.8440, -3.3085, -3.3522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6357, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.7635, -2.8417, -3.3069, -3.3516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5745, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7653, -2.8393, -3.3057, -3.3510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6244, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.7660, -2.8382, -3.3062, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5598, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.7661, -2.8379, -3.3078, -3.3500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7105, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.7665, -2.8382, -3.3073, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6273, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.7676, -2.8380, -3.3055, -3.3510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6276, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.7692, -2.8379, -3.3042, -3.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5733, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.7700, -2.8385, -3.3041, -3.3517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6501, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.7697, -2.8399, -3.3048, -3.3503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7121, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.7677, -2.8426, -3.3078, -3.3487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5636, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.7655, -2.8449, -3.3113, -3.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6131, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.7649, -2.8455, -3.3116, -3.3473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6359, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.7655, -2.8447, -3.3092, -3.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6219, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.7665, -2.8438, -3.3069, -3.3485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6273, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7662, -2.8430, -3.3067, -3.3480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6415, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7650, -2.8428, -3.3081, -3.3474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5758, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.7634, -2.8425, -3.3089, -3.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6556, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.7633, -2.8408, -3.3066, -3.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5826, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7639, -2.8387, -3.3034, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7004, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.7652, -2.8380, -3.3016, -3.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6747, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.7648, -2.8389, -3.3014, -3.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6332, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.7634, -2.8406, -3.3026, -3.3442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7066, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.7627, -2.8433, -3.3041, -3.3430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6679, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.7619, -2.8452, -3.3035, -3.3427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6259, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.7620, -2.8462, -3.3023, -3.3432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6738, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7621, -2.8479, -3.3024, -3.3430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6746, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.7610, -2.8500, -3.3031, -3.3430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5910, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7598, -2.8520, -3.3030, -3.3437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6202, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7587, -2.8526, -3.3023, -3.3443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6245, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7581, -2.8526, -3.3015, -3.3453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6823, device='cuda:0', dtype=torch.float64)
tensor([-1.8527, -2.7583, -2.8517, -3.2989, -3.3464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6431, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.7592, -2.8496, -3.2956, -3.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6565, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.7598, -2.8478, -3.2932, -3.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6107, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7598, -2.8466, -3.2931, -3.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7536, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7575, -2.8468, -3.2962, -3.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6090, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.7542, -2.8470, -3.3000, -3.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6729, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7534, -2.8459, -3.3019, -3.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7421, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7554, -2.8428, -3.3007, -3.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6748, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7591, -2.8391, -3.2993, -3.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6607, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.7618, -2.8372, -3.2994, -3.3418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6675, device='cuda:0', dtype=torch.float64)
tensor([-1.8575, -2.7631, -2.8377, -3.3015, -3.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.7649, -2.8382, -3.3027, -3.3413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7038, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7678, -2.8381, -3.3010, -3.3426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7794, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.7711, -2.8371, -3.2965, -3.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6885, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.7737, -2.8365, -3.2939, -3.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5906, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.7745, -2.8367, -3.2923, -3.3512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7388, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.7755, -2.8371, -3.2930, -3.3535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6100, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.7748, -2.8382, -3.2945, -3.3544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6264, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7743, -2.8382, -3.2960, -3.3546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6229, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7742, -2.8379, -3.2969, -3.3547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6334, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.7731, -2.8383, -3.2975, -3.3542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6079, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.7700, -2.8396, -3.2996, -3.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6724, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7655, -2.8408, -3.3038, -3.3493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6914, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.7619, -2.8416, -3.3076, -3.3464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6363, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.7583, -2.8420, -3.3097, -3.3445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6759, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.7548, -2.8421, -3.3102, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6316, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.7523, -2.8415, -3.3103, -3.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6973, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.7499, -2.8411, -3.3091, -3.3391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6748, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.7471, -2.8419, -3.3105, -3.3378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6646, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.7455, -2.8434, -3.3112, -3.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7044, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.7462, -2.8441, -3.3094, -3.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7428, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.7478, -2.8450, -3.3062, -3.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7037, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7486, -2.8468, -3.3032, -3.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6794, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7502, -2.8474, -3.3003, -3.3439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6778, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.7516, -2.8483, -3.3002, -3.3447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6598, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.7521, -2.8481, -3.3000, -3.3452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6686, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.7538, -2.8463, -3.2998, -3.3445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6803, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7552, -2.8441, -3.3006, -3.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7037, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7557, -2.8430, -3.3022, -3.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6626, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.7559, -2.8421, -3.3028, -3.3381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.7587, -2.8397, -3.3006, -3.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6953, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7641, -2.8357, -3.2942, -3.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5863, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.7700, -2.8325, -3.2873, -3.3370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6353, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.7743, -2.8310, -3.2828, -3.3366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6696, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7758, -2.8322, -3.2842, -3.3344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7000, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.7743, -2.8358, -3.2902, -3.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6948, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.7713, -2.8406, -3.2968, -3.3314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7719, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.7676, -2.8447, -3.3005, -3.3301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7461, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.7646, -2.8469, -3.3016, -3.3301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7982, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.7627, -2.8485, -3.2998, -3.3293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8169, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7597, -2.8508, -3.2985, -3.3281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7429, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7573, -2.8532, -3.3006, -3.3269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.7576, -2.8528, -3.2990, -3.3270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8467, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.7597, -2.8482, -3.2927, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6247, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.7637, -2.8438, -3.2893, -3.3310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8027, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.7660, -2.8415, -3.2888, -3.3314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8377, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.7675, -2.8423, -3.2944, -3.3311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7197, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.7692, -2.8425, -3.3008, -3.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9029, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7719, -2.8403, -3.3018, -3.3352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7501, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.7725, -2.8390, -3.3008, -3.3384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7323, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.7714, -2.8388, -3.3025, -3.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.7660, -2.8422, -3.3045, -3.3416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7052, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.7601, -2.8439, -3.3055, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6794, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.7559, -2.8443, -3.3045, -3.3435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7099, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7534, -2.8437, -3.3044, -3.3442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7491, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7517, -2.8432, -3.3046, -3.3438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6598, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.7516, -2.8430, -3.3054, -3.3431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7541, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.7520, -2.8433, -3.3057, -3.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7187, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.7536, -2.8437, -3.3050, -3.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7864, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.7568, -2.8432, -3.3036, -3.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7522, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.7593, -2.8423, -3.3006, -3.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6609, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.7603, -2.8424, -3.2979, -3.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7624, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.7596, -2.8428, -3.2957, -3.3268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7385, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.7608, -2.8427, -3.2934, -3.3228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6988, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.7621, -2.8428, -3.2920, -3.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6839, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7641, -2.8418, -3.2903, -3.3199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8533, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.7651, -2.8416, -3.2902, -3.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7194, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.7661, -2.8415, -3.2917, -3.3218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8944, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.7656, -2.8412, -3.2940, -3.3227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6886, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.7645, -2.8413, -3.2958, -3.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7536, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7628, -2.8415, -3.2959, -3.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7666, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.7591, -2.8440, -3.2968, -3.3232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0021, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.7580, -2.8427, -3.2923, -3.3228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8450, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7591, -2.8391, -3.2828, -3.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8228, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.7591, -2.8376, -3.2777, -3.3248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7680, device='cuda:0', dtype=torch.float64)
tensor([-1.8651, -2.7568, -2.8381, -3.2784, -3.3237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8365, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.7527, -2.8400, -3.2840, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8572, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.7516, -2.8400, -3.2894, -3.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7372, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.7515, -2.8380, -3.2923, -3.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7011, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.7521, -2.8376, -3.2969, -3.3275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8913, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.7517, -2.8375, -3.2996, -3.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6774, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.7529, -2.8377, -3.2994, -3.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8050, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.7552, -2.8368, -3.2953, -3.3274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8630, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.7584, -2.8360, -3.2892, -3.3286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7814, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7598, -2.8364, -3.2842, -3.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7312, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.7598, -2.8381, -3.2840, -3.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9135, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.7591, -2.8398, -3.2863, -3.3317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7557, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.7587, -2.8416, -3.2926, -3.3320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7777, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.7593, -2.8423, -3.2971, -3.3326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.7620, -2.8402, -3.2977, -3.3347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8028, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.7657, -2.8365, -3.2958, -3.3375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.7685, -2.8332, -3.2934, -3.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8565, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.7669, -2.8324, -3.2913, -3.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7727, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.7633, -2.8335, -3.2893, -3.3377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.7610, -2.8328, -3.2831, -3.3375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7914, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.7581, -2.8340, -3.2812, -3.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8621, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.7546, -2.8367, -3.2837, -3.3360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8070, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.7533, -2.8396, -3.2855, -3.3350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.7536, -2.8411, -3.2876, -3.3324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7850, device='cuda:0', dtype=torch.float64)
tensor([-1.8591, -2.7546, -2.8415, -3.2884, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8148, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7559, -2.8420, -3.2893, -3.3274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7901, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.7550, -2.8428, -3.2876, -3.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9352, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.7547, -2.8415, -3.2846, -3.3210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7949, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.7537, -2.8415, -3.2843, -3.3176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8084, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7524, -2.8418, -3.2856, -3.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7972, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.7525, -2.8422, -3.2884, -3.3140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8774, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.7547, -2.8416, -3.2917, -3.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8313, device='cuda:0', dtype=torch.float64)
tensor([-1.8617, -2.7563, -2.8413, -3.2929, -3.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9039, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.7617, -2.8404, -3.2919, -3.3187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6878, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.7663, -2.8398, -3.2919, -3.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8757, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.7680, -2.8409, -3.2937, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7663, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.7689, -2.8426, -3.2952, -3.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7514, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.7715, -2.8410, -3.2909, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8233, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.7747, -2.8365, -3.2841, -3.3314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7904, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.7767, -2.8329, -3.2808, -3.3345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9687, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7766, -2.8305, -3.2829, -3.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8453, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.7745, -2.8293, -3.2884, -3.3326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9147, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.7715, -2.8290, -3.2912, -3.3318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8545, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.7695, -2.8287, -3.2892, -3.3310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8050, device='cuda:0', dtype=torch.float64)
tensor([-1.8683, -2.7656, -2.8294, -3.2866, -3.3295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8692, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.7628, -2.8304, -3.2816, -3.3301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7627, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.7590, -2.8339, -3.2753, -3.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8280, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.7556, -2.8376, -3.2704, -3.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8572, device='cuda:0', dtype=torch.float64)
tensor([-1.8591, -2.7517, -2.8413, -3.2693, -3.3306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8924, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.7463, -2.8465, -3.2749, -3.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8990, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.7425, -2.8505, -3.2810, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9795, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7421, -2.8502, -3.2851, -3.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8407, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.7448, -2.8479, -3.2870, -3.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0021, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.7476, -2.8441, -3.2867, -3.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9513, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.7523, -2.8381, -3.2851, -3.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9000, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.7588, -2.8297, -3.2792, -3.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9136, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.7649, -2.8208, -3.2728, -3.3174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8841, device='cuda:0', dtype=torch.float64)
tensor([-1.8809, -2.7703, -2.8185, -3.2742, -3.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9594, device='cuda:0', dtype=torch.float64)
tensor([-1.8787, -2.7697, -2.8218, -3.2811, -3.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8907, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.7669, -2.8289, -3.2911, -3.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8503, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.7651, -2.8350, -3.2974, -3.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9580, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.7664, -2.8373, -3.2968, -3.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7543, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.7677, -2.8386, -3.2926, -3.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9202, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.7658, -2.8409, -3.2921, -3.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7631, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.7628, -2.8448, -3.2921, -3.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7682, device='cuda:0', dtype=torch.float64)
tensor([-1.8668, -2.7598, -2.8458, -3.2920, -3.3202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0112, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7598, -2.8420, -3.2903, -3.3202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9814, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.7588, -2.8382, -3.2902, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9199, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.7562, -2.8358, -3.2894, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9584, device='cuda:0', dtype=torch.float64)
tensor([-1.8711, -2.7513, -2.8352, -3.2892, -3.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9457, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.7488, -2.8319, -3.2889, -3.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9634, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.7504, -2.8282, -3.2843, -3.3144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8546, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.7507, -2.8276, -3.2833, -3.3191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8602, device='cuda:0', dtype=torch.float64)
tensor([-1.8678, -2.7514, -2.8291, -3.2833, -3.3235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.7550, -2.8299, -3.2819, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8216, device='cuda:0', dtype=torch.float64)
tensor([-1.8640, -2.7600, -2.8306, -3.2766, -3.3370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7807, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7648, -2.8322, -3.2726, -3.3415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7573, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.7683, -2.8322, -3.2685, -3.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9701, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.7696, -2.8313, -3.2681, -3.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7714, -2.8306, -3.2721, -3.3400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8935, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7690, -2.8310, -3.2784, -3.3364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9398, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.7651, -2.8305, -3.2864, -3.3319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9697, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.7614, -2.8305, -3.2919, -3.3276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8395, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.7574, -2.8304, -3.2956, -3.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8102, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7537, -2.8325, -3.2994, -3.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9133, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.7481, -2.8376, -3.3063, -3.3137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9169, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7453, -2.8401, -3.3044, -3.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0369, device='cuda:0', dtype=torch.float64)
tensor([-1.8735, -2.7458, -2.8388, -3.2973, -3.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7852, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.7490, -2.8376, -3.2925, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9718, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.7520, -2.8375, -3.2943, -3.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9305, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.7538, -2.8380, -3.2990, -3.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8263, device='cuda:0', dtype=torch.float64)
tensor([-1.8695, -2.7606, -2.8334, -3.2999, -3.3084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9060, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.7682, -2.8264, -3.2944, -3.3096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([-1.8743, -2.7742, -2.8206, -3.2886, -3.3116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9468, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.7765, -2.8189, -3.2877, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9839, device='cuda:0', dtype=torch.float64)
tensor([-1.8711, -2.7718, -2.8234, -3.2861, -3.3106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0250, device='cuda:0', dtype=torch.float64)
tensor([-1.8703, -2.7657, -2.8275, -3.2800, -3.3111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8696, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.7584, -2.8320, -3.2765, -3.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8566, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.7537, -2.8357, -3.2764, -3.3131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8720, device='cuda:0', dtype=torch.float64)
tensor([-1.8693, -2.7536, -2.8404, -3.2801, -3.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9693, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.7562, -2.8428, -3.2783, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0018, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.7602, -2.8440, -3.2778, -3.3216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9030, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.7637, -2.8450, -3.2743, -3.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8678, device='cuda:0', dtype=torch.float64)
tensor([-1.8750, -2.7654, -2.8455, -3.2675, -3.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8540, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.7691, -2.8432, -3.2538, -3.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7598, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.7701, -2.8427, -3.2427, -3.3346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8893, device='cuda:0', dtype=torch.float64)
tensor([-1.8807, -2.7688, -2.8434, -3.2415, -3.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0791, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.7665, -2.8434, -3.2483, -3.3337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8698, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.7626, -2.8430, -3.2587, -3.3307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9726, device='cuda:0', dtype=torch.float64)
tensor([-1.8755, -2.7601, -2.8400, -3.2658, -3.3274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7466, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.7575, -2.8374, -3.2716, -3.3239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3379, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.7523, -2.8356, -3.2706, -3.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7875, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.7473, -2.8363, -3.2729, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7420, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.7450, -2.8373, -3.2717, -3.3084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0863, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.7442, -2.8373, -3.2701, -3.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9779, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.7449, -2.8374, -3.2727, -3.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9119, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.7441, -2.8390, -3.2790, -3.3063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1510, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7422, -2.8421, -3.2831, -3.3079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9996, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.7462, -2.8392, -3.2835, -3.3115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1167, device='cuda:0', dtype=torch.float64)
tensor([-1.8731, -2.7553, -2.8317, -3.2781, -3.3144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8468, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.7672, -2.8227, -3.2760, -3.3165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2786, device='cuda:0', dtype=torch.float64)
tensor([-1.8939, -2.7707, -2.8195, -3.2762, -3.3146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9792, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7715, -2.8204, -3.2842, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9658, device='cuda:0', dtype=torch.float64)
tensor([-1.8936, -2.7741, -2.8186, -3.2818, -3.3079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1849, device='cuda:0', dtype=torch.float64)
tensor([-1.8937, -2.7795, -2.8127, -3.2720, -3.3110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9776, device='cuda:0', dtype=torch.float64)
tensor([-1.8933, -2.7868, -2.8094, -3.2710, -3.3156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-1.8875, -2.7854, -2.8113, -3.2707, -3.3131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9652, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.7836, -2.8148, -3.2752, -3.3099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9433, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.7804, -2.8210, -3.2896, -3.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2018, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.7733, -2.8252, -3.2932, -3.3051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0716, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.7674, -2.8270, -3.2914, -3.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0042, device='cuda:0', dtype=torch.float64)
tensor([-1.8670, -2.7608, -2.8310, -3.2945, -3.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.7526, -2.8369, -3.2923, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9184, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.7465, -2.8422, -3.2945, -3.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8463, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.7462, -2.8441, -3.2962, -3.3135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9340, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.7508, -2.8403, -3.2925, -3.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.7566, -2.8357, -3.2919, -3.3229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0423, device='cuda:0', dtype=torch.float64)
tensor([-1.8668, -2.7588, -2.8327, -3.2913, -3.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9473, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.7604, -2.8281, -3.2921, -3.3215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-1.8811, -2.7665, -2.8208, -3.2885, -3.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9186, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.7733, -2.8117, -3.2810, -3.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7236, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.7764, -2.8057, -3.2754, -3.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9579, device='cuda:0', dtype=torch.float64)
tensor([-1.8996, -2.7719, -2.8056, -3.2767, -3.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8760, device='cuda:0', dtype=torch.float64)
tensor([-1.9005, -2.7661, -2.8110, -3.2736, -3.3237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0979, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.7612, -2.8161, -3.2659, -3.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8391, device='cuda:0', dtype=torch.float64)
tensor([-1.8974, -2.7580, -2.8212, -3.2669, -3.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9914, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.7508, -2.8283, -3.2744, -3.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8007, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.7451, -2.8326, -3.2837, -3.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0361, device='cuda:0', dtype=torch.float64)
tensor([-1.8779, -2.7421, -2.8370, -3.2921, -3.3297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2675, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.7444, -2.8356, -3.3003, -3.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9790, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.7462, -2.8331, -3.3050, -3.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1952, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.7507, -2.8263, -3.3051, -3.3267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1924, device='cuda:0', dtype=torch.float64)
tensor([-1.8820, -2.7573, -2.8159, -3.2961, -3.3260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0081, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.7615, -2.8067, -3.2803, -3.3256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1009, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.7584, -2.8072, -3.2724, -3.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-1.8759, -2.7500, -2.8144, -3.2733, -3.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8081, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.7459, -2.8238, -3.2804, -3.3029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9593, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.7445, -2.8330, -3.2823, -3.2960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1422, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.7472, -2.8394, -3.2786, -3.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2018, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.7483, -2.8460, -3.2728, -3.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0534, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.7486, -2.8522, -3.2705, -3.2956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9543, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.7513, -2.8563, -3.2740, -3.2989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0343, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.7547, -2.8566, -3.2734, -3.3040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0599, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7559, -2.8565, -3.2759, -3.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9098, device='cuda:0', dtype=torch.float64)
tensor([-1.8704, -2.7561, -2.8565, -3.2842, -3.3149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.7578, -2.8539, -3.2882, -3.3180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0737, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.7598, -2.8515, -3.2956, -3.3199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0234, device='cuda:0', dtype=torch.float64)
tensor([-1.8868, -2.7615, -2.8459, -3.2981, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0225, device='cuda:0', dtype=torch.float64)
tensor([-1.8920, -2.7616, -2.8420, -3.2954, -3.3208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9160, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7603, -2.8390, -3.2885, -3.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8969, device='cuda:0', dtype=torch.float64)
tensor([-1.8940, -2.7581, -2.8367, -3.2784, -3.3202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0246, device='cuda:0', dtype=torch.float64)
tensor([-1.8896, -2.7536, -2.8396, -3.2726, -3.3173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.7493, -2.8459, -3.2724, -3.3152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([-1.8788, -2.7463, -2.8530, -3.2744, -3.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0251, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7446, -2.8585, -3.2775, -3.3081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8866, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.7461, -2.8605, -3.2822, -3.3074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1038, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.7537, -2.8572, -3.2833, -3.3098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0446, device='cuda:0', dtype=torch.float64)
tensor([-1.8917, -2.7640, -2.8525, -3.2793, -3.3133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9674, device='cuda:0', dtype=torch.float64)
tensor([-1.8986, -2.7732, -2.8498, -3.2773, -3.3171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0397, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.7819, -2.8473, -3.2754, -3.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3464, device='cuda:0', dtype=torch.float64)
tensor([-1.9020, -2.7843, -2.8448, -3.2820, -3.3219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-1.8980, -2.7829, -2.8403, -3.2809, -3.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8836, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.7769, -2.8372, -3.2840, -3.3189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7490, device='cuda:0', dtype=torch.float64)
tensor([-1.8802, -2.7705, -2.8371, -3.2850, -3.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1736, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.7607, -2.8399, -3.2875, -3.3127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.7539, -2.8415, -3.2856, -3.3111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3134, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.7500, -2.8411, -3.2875, -3.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.7520, -2.8378, -3.2810, -3.3144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9484, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.7568, -2.8341, -3.2777, -3.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1089, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.7545, -2.8356, -3.2800, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.7527, -2.8379, -3.2866, -3.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8905, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7513, -2.8396, -3.2868, -3.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0146, device='cuda:0', dtype=torch.float64)
tensor([-1.8783, -2.7484, -2.8401, -3.2809, -3.3062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2317, device='cuda:0', dtype=torch.float64)
tensor([-1.8817, -2.7468, -2.8392, -3.2779, -3.3078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1344, device='cuda:0', dtype=torch.float64)
tensor([-1.8833, -2.7455, -2.8362, -3.2776, -3.3094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2041, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.7448, -2.8333, -3.2770, -3.3091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1644, device='cuda:0', dtype=torch.float64)
tensor([-1.8848, -2.7484, -2.8294, -3.2761, -3.3124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1383, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.7559, -2.8226, -3.2710, -3.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0311, device='cuda:0', dtype=torch.float64)
tensor([-1.8960, -2.7644, -2.8156, -3.2640, -3.3200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9733, device='cuda:0', dtype=torch.float64)
tensor([-1.8993, -2.7697, -2.8156, -3.2676, -3.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1975, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.7685, -2.8227, -3.2736, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1342, device='cuda:0', dtype=torch.float64)
tensor([-1.8894, -2.7667, -2.8338, -3.2861, -3.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0542, device='cuda:0', dtype=torch.float64)
tensor([-1.8841, -2.7635, -2.8398, -3.2879, -3.3137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0396, device='cuda:0', dtype=torch.float64)
tensor([-1.8825, -2.7662, -2.8407, -3.2842, -3.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0796, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.7663, -2.8393, -3.2821, -3.3152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2051, device='cuda:0', dtype=torch.float64)
tensor([-1.8733, -2.7609, -2.8388, -3.2801, -3.3151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2161, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.7596, -2.8366, -3.2828, -3.3196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9775, device='cuda:0', dtype=torch.float64)
tensor([-1.8717, -2.7663, -2.8299, -3.2832, -3.3232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4057, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.7770, -2.8220, -3.2711, -3.3298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9524, device='cuda:0', dtype=torch.float64)
tensor([-1.8862, -2.7859, -2.8205, -3.2658, -3.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3322, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.7836, -2.8288, -3.2682, -3.3298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2756, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.7798, -2.8389, -3.2758, -3.3263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2673, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.7798, -2.8428, -3.2705, -3.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1629, device='cuda:0', dtype=torch.float64)
tensor([-1.8824, -2.7813, -2.8433, -3.2659, -3.3184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1138, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.7812, -2.8410, -3.2741, -3.3125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5367, device='cuda:0', dtype=torch.float64)
tensor([-1.8812, -2.7730, -2.8396, -3.2819, -3.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0426, device='cuda:0', dtype=torch.float64)
tensor([-1.8779, -2.7659, -2.8397, -3.2951, -3.2942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1549, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.7589, -2.8350, -3.2969, -3.2930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2278, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.7509, -2.8338, -3.2968, -3.2954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0677, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.7419, -2.8360, -3.2968, -3.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7303, -2.8434, -3.3034, -3.2971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2219, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.7237, -2.8493, -3.3192, -3.2935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3350, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.7213, -2.8475, -3.3138, -3.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2722, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.7296, -2.8387, -3.3060, -3.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0030, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.7427, -2.8288, -3.2993, -3.2929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3552, device='cuda:0', dtype=torch.float64)
tensor([-1.8937, -2.7513, -2.8235, -3.2936, -3.2882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0830, device='cuda:0', dtype=torch.float64)
tensor([-1.8982, -2.7576, -2.8196, -3.2926, -3.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3123, device='cuda:0', dtype=torch.float64)
tensor([-1.9052, -2.7646, -2.8134, -3.2834, -3.2855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0475, device='cuda:0', dtype=torch.float64)
tensor([-1.9108, -2.7688, -2.8102, -3.2736, -3.2870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1571, device='cuda:0', dtype=torch.float64)
tensor([-1.9139, -2.7711, -2.8101, -3.2712, -3.2900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3224, device='cuda:0', dtype=torch.float64)
tensor([-1.9110, -2.7654, -2.8146, -3.2697, -3.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9702, device='cuda:0', dtype=torch.float64)
tensor([-1.9057, -2.7585, -2.8236, -3.2748, -3.2957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0185, device='cuda:0', dtype=torch.float64)
tensor([-1.9011, -2.7524, -2.8316, -3.2750, -3.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3149, device='cuda:0', dtype=torch.float64)
tensor([-1.8971, -2.7518, -2.8341, -3.2614, -3.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0658, device='cuda:0', dtype=torch.float64)
tensor([-1.8928, -2.7517, -2.8379, -3.2532, -3.3063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2593, device='cuda:0', dtype=torch.float64)
tensor([-1.8849, -2.7498, -2.8432, -3.2570, -3.3049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0337, device='cuda:0', dtype=torch.float64)
tensor([-1.8782, -2.7506, -2.8457, -3.2653, -3.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1528, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.7545, -2.8488, -3.2801, -3.3030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4850, device='cuda:0', dtype=torch.float64)
tensor([-1.8768, -2.7673, -2.8446, -3.2866, -3.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9640, device='cuda:0', dtype=torch.float64)
tensor([-1.8789, -2.7786, -2.8427, -3.2985, -3.3063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0460, device='cuda:0', dtype=torch.float64)
tensor([-1.8790, -2.7857, -2.8450, -3.3078, -3.3063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3538, device='cuda:0', dtype=torch.float64)
tensor([-1.8777, -2.7860, -2.8497, -3.3191, -3.3048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1967, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.7831, -2.8538, -3.3264, -3.3007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9723, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.7854, -2.8547, -3.3222, -3.2997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2185, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.7873, -2.8512, -3.2996, -3.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4519, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.7896, -2.8513, -3.2877, -3.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0052, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.7880, -2.8558, -3.2774, -3.3075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1244, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.7862, -2.8571, -3.2635, -3.3127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0528, device='cuda:0', dtype=torch.float64)
tensor([-1.8712, -2.7850, -2.8571, -3.2489, -3.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0649, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.7829, -2.8572, -3.2370, -3.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.7783, -2.8538, -3.2317, -3.3198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9456, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.7715, -2.8507, -3.2358, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0112, device='cuda:0', dtype=torch.float64)
tensor([-1.8889, -2.7643, -2.8467, -3.2453, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8381, device='cuda:0', dtype=torch.float64)
tensor([-1.8907, -2.7587, -2.8443, -3.2602, -3.3109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-1.8905, -2.7526, -2.8456, -3.2738, -3.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2711, device='cuda:0', dtype=torch.float64)
tensor([-1.8927, -2.7513, -2.8468, -3.2780, -3.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.7515, -2.8445, -3.2760, -3.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0235, device='cuda:0', dtype=torch.float64)
tensor([-1.9011, -2.7585, -2.8361, -3.2665, -3.3122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0893, device='cuda:0', dtype=torch.float64)
tensor([-1.9061, -2.7642, -2.8277, -3.2607, -3.3165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3110, device='cuda:0', dtype=torch.float64)
tensor([-1.9116, -2.7673, -2.8202, -3.2557, -3.3213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1304, device='cuda:0', dtype=torch.float64)
tensor([-1.9095, -2.7623, -2.8173, -3.2619, -3.3231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0375, device='cuda:0', dtype=torch.float64)
tensor([-1.9072, -2.7601, -2.8175, -3.2688, -3.3228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0146, device='cuda:0', dtype=torch.float64)
tensor([-1.9061, -2.7581, -2.8162, -3.2691, -3.3262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1728, device='cuda:0', dtype=torch.float64)
tensor([-1.9043, -2.7575, -2.8176, -3.2712, -3.3264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3586, device='cuda:0', dtype=torch.float64)
tensor([-1.8954, -2.7503, -2.8295, -3.2768, -3.3187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2398, device='cuda:0', dtype=torch.float64)
tensor([-1.8883, -2.7461, -2.8433, -3.2817, -3.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1297, device='cuda:0', dtype=torch.float64)
tensor([-1.8889, -2.7491, -2.8492, -3.2692, -3.3159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1952, device='cuda:0', dtype=torch.float64)
tensor([-1.8917, -2.7531, -2.8507, -3.2576, -3.3202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0225, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.7554, -2.8479, -3.2429, -3.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1201, device='cuda:0', dtype=torch.float64)
tensor([-1.8914, -2.7516, -2.8483, -3.2369, -3.3262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1679, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.7492, -2.8482, -3.2432, -3.3259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3065, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -2.7520, -2.8440, -3.2501, -3.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3294, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.7583, -2.8342, -3.2496, -3.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0124, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7689, -2.8242, -3.2513, -3.3314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1222, device='cuda:0', dtype=torch.float64)
tensor([-1.8905, -2.7734, -2.8208, -3.2569, -3.3328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3301, device='cuda:0', dtype=torch.float64)
tensor([-1.8877, -2.7795, -2.8184, -3.2572, -3.3347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9797, device='cuda:0', dtype=torch.float64)
tensor([-1.8853, -2.7818, -2.8202, -3.2578, -3.3324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2285, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.7812, -2.8208, -3.2516, -3.3311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2611, device='cuda:0', dtype=torch.float64)
tensor([-1.8940, -2.7789, -2.8251, -3.2440, -3.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2435, device='cuda:0', dtype=torch.float64)
tensor([-1.9001, -2.7768, -2.8288, -3.2453, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1412, device='cuda:0', dtype=torch.float64)
tensor([-1.8994, -2.7659, -2.8365, -3.2513, -3.3207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1847, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.7531, -2.8456, -3.2603, -3.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2364, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.7455, -2.8518, -3.2655, -3.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0821, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.7430, -2.8513, -3.2600, -3.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3092, device='cuda:0', dtype=torch.float64)
tensor([-1.8827, -2.7421, -2.8472, -3.2610, -3.2977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2675, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.7405, -2.8466, -3.2706, -3.2951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4319, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.7386, -2.8490, -3.2863, -3.2906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1752, device='cuda:0', dtype=torch.float64)
tensor([-1.8871, -2.7404, -2.8501, -3.2987, -3.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1872, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.7439, -2.8488, -3.3035, -3.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8472, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.7480, -2.8494, -3.3073, -3.2956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2246, device='cuda:0', dtype=torch.float64)
tensor([-1.8993, -2.7465, -2.8545, -3.3070, -3.2946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2275, device='cuda:0', dtype=torch.float64)
tensor([-1.8985, -2.7473, -2.8589, -3.2984, -3.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0217, device='cuda:0', dtype=torch.float64)
tensor([-1.8955, -2.7482, -2.8599, -3.2894, -3.2933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0609, device='cuda:0', dtype=torch.float64)
tensor([-1.8940, -2.7527, -2.8596, -3.2827, -3.2933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2243, device='cuda:0', dtype=torch.float64)
tensor([-1.8975, -2.7628, -2.8560, -3.2792, -3.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0061, device='cuda:0', dtype=torch.float64)
tensor([-1.8986, -2.7715, -2.8524, -3.2803, -3.2986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1436, device='cuda:0', dtype=torch.float64)
tensor([-1.9009, -2.7771, -2.8478, -3.2848, -3.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0614, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.7771, -2.8493, -3.2940, -3.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1749, device='cuda:0', dtype=torch.float64)
tensor([-1.9000, -2.7807, -2.8477, -3.3006, -3.3063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1269, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.7850, -2.8423, -3.3052, -3.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1084, device='cuda:0', dtype=torch.float64)
tensor([-1.9064, -2.7813, -2.8408, -3.3030, -3.3058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2303, device='cuda:0', dtype=torch.float64)
tensor([-1.9104, -2.7785, -2.8401, -3.2873, -3.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2854, device='cuda:0', dtype=torch.float64)
tensor([-1.9149, -2.7778, -2.8383, -3.2648, -3.2972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1511, device='cuda:0', dtype=torch.float64)
tensor([-1.9181, -2.7778, -2.8394, -3.2513, -3.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9972, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.7833, -2.8359, -3.2491, -3.2929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2677, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.7865, -2.8334, -3.2536, -3.2952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2910, device='cuda:0', dtype=torch.float64)
tensor([-1.9155, -2.7877, -2.8322, -3.2631, -3.2944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2884, device='cuda:0', dtype=torch.float64)
tensor([-1.9077, -2.7923, -2.8342, -3.2834, -3.2977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3608, device='cuda:0', dtype=torch.float64)
tensor([-1.9048, -2.8013, -2.8236, -3.2935, -3.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0250, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.8135, -2.8139, -3.3150, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2127, device='cuda:0', dtype=torch.float64)
tensor([-1.8898, -2.8071, -2.8118, -3.3254, -3.3136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1053, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.7928, -2.8174, -3.3329, -3.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3675, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7847, -2.8149, -3.3241, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1483, device='cuda:0', dtype=torch.float64)
tensor([-1.8791, -2.7793, -2.8132, -3.3038, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9354, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.7765, -2.8114, -3.2934, -3.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4442, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.7720, -2.8155, -3.2872, -3.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2114, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.7645, -2.8234, -3.2897, -3.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1631, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.7659, -2.8266, -3.2856, -3.2964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4600, device='cuda:0', dtype=torch.float64)
tensor([-1.9060, -2.7764, -2.8215, -3.2778, -3.3037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1534, device='cuda:0', dtype=torch.float64)
tensor([-1.9192, -2.7898, -2.8161, -3.2780, -3.3126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3546, device='cuda:0', dtype=torch.float64)
tensor([-1.9212, -2.7898, -2.8156, -3.2793, -3.3156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0830, device='cuda:0', dtype=torch.float64)
tensor([-1.9193, -2.7904, -2.8170, -3.2831, -3.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2249, device='cuda:0', dtype=torch.float64)
tensor([-1.9190, -2.7917, -2.8139, -3.2765, -3.3297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2038, device='cuda:0', dtype=torch.float64)
tensor([-1.9154, -2.7900, -2.8121, -3.2707, -3.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0188, device='cuda:0', dtype=torch.float64)
tensor([-1.9075, -2.7871, -2.8154, -3.2812, -3.3398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3672, device='cuda:0', dtype=torch.float64)
tensor([-1.8969, -2.7761, -2.8278, -3.2785, -3.3404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3181, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.7692, -2.8424, -3.2847, -3.3385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3484, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.7659, -2.8504, -3.2847, -3.3404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4276, device='cuda:0', dtype=torch.float64)
tensor([-1.8959, -2.7704, -2.8472, -3.2762, -3.3485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2999, device='cuda:0', dtype=torch.float64)
tensor([-1.9050, -2.7733, -2.8483, -3.2627, -3.3527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.7660, -2.8549, -3.2559, -3.3464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0981, device='cuda:0', dtype=torch.float64)
tensor([-1.9041, -2.7569, -2.8610, -3.2564, -3.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1685, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.7514, -2.8641, -3.2522, -3.3256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2902, device='cuda:0', dtype=torch.float64)
tensor([-1.9000, -2.7497, -2.8609, -3.2388, -3.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2427, device='cuda:0', dtype=torch.float64)
tensor([-1.9021, -2.7575, -2.8614, -3.2389, -3.3059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4349, device='cuda:0', dtype=torch.float64)
tensor([-1.9023, -2.7627, -2.8648, -3.2503, -3.2928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2293, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.7695, -2.8684, -3.2642, -3.2849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1639, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.7750, -2.8692, -3.2734, -3.2808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0487, device='cuda:0', dtype=torch.float64)
tensor([-1.9028, -2.7789, -2.8693, -3.2801, -3.2796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2451, device='cuda:0', dtype=torch.float64)
tensor([-1.9076, -2.7873, -2.8629, -3.2786, -3.2842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0674, device='cuda:0', dtype=torch.float64)
tensor([-1.9132, -2.7921, -2.8550, -3.2745, -3.2907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0498, device='cuda:0', dtype=torch.float64)
tensor([-1.9142, -2.7866, -2.8483, -3.2712, -3.2994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1072, device='cuda:0', dtype=torch.float64)
tensor([-1.9124, -2.7796, -2.8458, -3.2652, -3.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1997, device='cuda:0', dtype=torch.float64)
tensor([-1.9068, -2.7716, -2.8468, -3.2654, -3.3133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1959, device='cuda:0', dtype=torch.float64)
tensor([-1.9035, -2.7666, -2.8497, -3.2715, -3.3159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0783, device='cuda:0', dtype=torch.float64)
tensor([-1.9010, -2.7648, -2.8536, -3.2778, -3.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3136, device='cuda:0', dtype=torch.float64)
tensor([-1.9049, -2.7705, -2.8535, -3.2732, -3.3179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0622, device='cuda:0', dtype=torch.float64)
tensor([-1.9075, -2.7764, -2.8539, -3.2685, -3.3172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3386, device='cuda:0', dtype=torch.float64)
tensor([-1.9067, -2.7835, -2.8560, -3.2723, -3.3143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2044, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.7835, -2.8618, -3.2753, -3.3093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1575, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.7800, -2.8731, -3.2801, -3.3018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2499, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.7731, -2.8854, -3.2801, -3.2939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-1.8785, -2.7672, -2.8856, -3.2562, -3.2928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2300, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.7643, -2.8853, -3.2466, -3.2946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.7550, -2.8885, -3.2541, -3.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3545, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.7420, -2.8918, -3.2706, -3.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1400, device='cuda:0', dtype=torch.float64)
tensor([-1.8874, -2.7388, -2.8913, -3.2856, -3.2855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4533, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.7473, -2.8753, -3.2858, -3.2934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2915, device='cuda:0', dtype=torch.float64)
tensor([-1.9293, -2.7581, -2.8595, -3.2862, -3.3047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2724, device='cuda:0', dtype=torch.float64)
tensor([-1.9381, -2.7608, -2.8504, -3.2846, -3.3123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4513, device='cuda:0', dtype=torch.float64)
tensor([-1.9435, -2.7659, -2.8468, -3.2832, -3.3181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1672, device='cuda:0', dtype=torch.float64)
tensor([-1.9509, -2.7747, -2.8447, -3.2758, -3.3257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2692, device='cuda:0', dtype=torch.float64)
tensor([-1.9575, -2.7845, -2.8446, -3.2637, -3.3377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2303, device='cuda:0', dtype=torch.float64)
tensor([-1.9620, -2.7894, -2.8435, -3.2503, -3.3471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1901, device='cuda:0', dtype=torch.float64)
tensor([-1.9641, -2.7919, -2.8436, -3.2409, -3.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2048, device='cuda:0', dtype=torch.float64)
tensor([-1.9601, -2.7879, -2.8462, -3.2398, -3.3524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2814, device='cuda:0', dtype=torch.float64)
tensor([-1.9470, -2.7758, -2.8506, -3.2496, -3.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1588, device='cuda:0', dtype=torch.float64)
tensor([-1.9301, -2.7655, -2.8533, -3.2620, -3.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2968, device='cuda:0', dtype=torch.float64)
tensor([-1.9115, -2.7586, -2.8550, -3.2784, -3.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2125, device='cuda:0', dtype=torch.float64)
tensor([-1.8908, -2.7492, -2.8573, -3.2941, -3.3311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6451, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.7451, -2.8537, -3.2979, -3.3219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1952, device='cuda:0', dtype=torch.float64)
tensor([-1.8711, -2.7465, -2.8475, -3.2972, -3.3138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1567, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.7538, -2.8422, -3.2926, -3.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1751, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.7679, -2.8354, -3.2898, -3.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3359, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.7765, -2.8348, -3.2915, -3.3135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3208, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.7849, -2.8394, -3.3016, -3.3106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2210, device='cuda:0', dtype=torch.float64)
tensor([-1.8994, -2.7949, -2.8423, -3.3134, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3870, device='cuda:0', dtype=torch.float64)
tensor([-1.9139, -2.8057, -2.8438, -3.3078, -3.3152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2279, device='cuda:0', dtype=torch.float64)
tensor([-1.9232, -2.8103, -2.8488, -3.2917, -3.3191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3835, device='cuda:0', dtype=torch.float64)
tensor([-1.9276, -2.8095, -2.8557, -3.2850, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3110, device='cuda:0', dtype=torch.float64)
tensor([-1.9250, -2.8004, -2.8629, -3.2817, -3.3056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1091, device='cuda:0', dtype=torch.float64)
tensor([-1.9239, -2.7910, -2.8628, -3.2739, -3.2990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1130, device='cuda:0', dtype=torch.float64)
tensor([-1.9202, -2.7844, -2.8555, -3.2620, -3.2919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0342, device='cuda:0', dtype=torch.float64)
tensor([-1.9150, -2.7774, -2.8479, -3.2589, -3.2872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2375, device='cuda:0', dtype=torch.float64)
tensor([-1.9051, -2.7676, -2.8449, -3.2625, -3.2792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3371, device='cuda:0', dtype=torch.float64)
tensor([-1.8974, -2.7590, -2.8430, -3.2732, -3.2721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1138, device='cuda:0', dtype=torch.float64)
tensor([-1.8952, -2.7544, -2.8393, -3.2785, -3.2659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2424, device='cuda:0', dtype=torch.float64)
tensor([-1.9015, -2.7570, -2.8314, -3.2749, -3.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2723, device='cuda:0', dtype=torch.float64)
tensor([-1.9072, -2.7644, -2.8284, -3.2818, -3.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5107, device='cuda:0', dtype=torch.float64)
tensor([-1.9070, -2.7622, -2.8330, -3.2800, -3.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2663, device='cuda:0', dtype=torch.float64)
tensor([-1.9037, -2.7535, -2.8423, -3.2892, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2332, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.7446, -2.8506, -3.2850, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3840, device='cuda:0', dtype=torch.float64)
tensor([-1.9076, -2.7450, -2.8457, -3.2670, -3.2592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4467, device='cuda:0', dtype=torch.float64)
tensor([-1.9144, -2.7521, -2.8410, -3.2599, -3.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2613, device='cuda:0', dtype=torch.float64)
tensor([-1.9134, -2.7527, -2.8356, -3.2489, -3.2865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2501, device='cuda:0', dtype=torch.float64)
tensor([-1.9126, -2.7546, -2.8313, -3.2481, -3.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4555, device='cuda:0', dtype=torch.float64)
tensor([-1.9139, -2.7615, -2.8293, -3.2491, -3.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2399, device='cuda:0', dtype=torch.float64)
tensor([-1.9220, -2.7754, -2.8278, -3.2503, -3.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1470, device='cuda:0', dtype=torch.float64)
tensor([-1.9335, -2.7947, -2.8286, -3.2638, -3.2968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3547, device='cuda:0', dtype=torch.float64)
tensor([-1.9337, -2.7993, -2.8377, -3.2718, -3.2940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-1.9309, -2.8062, -2.8504, -3.2863, -3.2928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1839, device='cuda:0', dtype=torch.float64)
tensor([-1.9286, -2.8125, -2.8554, -3.2974, -3.2908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6058, device='cuda:0', dtype=torch.float64)
tensor([-1.9267, -2.8103, -2.8524, -3.2864, -3.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1432, device='cuda:0', dtype=torch.float64)
tensor([-1.9167, -2.8041, -2.8490, -3.2805, -3.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4654, device='cuda:0', dtype=torch.float64)
tensor([-1.9012, -2.7941, -2.8494, -3.2798, -3.3174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3200, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.7795, -2.8563, -3.2821, -3.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2102, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.7697, -2.8561, -3.2886, -3.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5729, device='cuda:0', dtype=torch.float64)
tensor([-1.8708, -2.7673, -2.8565, -3.2913, -3.3410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2993, device='cuda:0', dtype=torch.float64)
tensor([-1.8833, -2.7794, -2.8523, -3.2901, -3.3452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0193, device='cuda:0', dtype=torch.float64)
tensor([-1.9054, -2.7945, -2.8459, -3.2841, -3.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3713, device='cuda:0', dtype=torch.float64)
tensor([-1.9264, -2.8102, -2.8363, -3.2704, -3.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5739, device='cuda:0', dtype=torch.float64)
tensor([-1.9382, -2.8141, -2.8320, -3.2564, -3.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2687, device='cuda:0', dtype=torch.float64)
tensor([-1.9469, -2.8175, -2.8338, -3.2483, -3.3399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6404, device='cuda:0', dtype=torch.float64)
tensor([-1.9535, -2.8192, -2.8342, -3.2306, -3.3380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1697, device='cuda:0', dtype=torch.float64)
tensor([-1.9559, -2.8133, -2.8370, -3.2154, -3.3345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4701, device='cuda:0', dtype=torch.float64)
tensor([-1.9506, -2.7997, -2.8416, -3.2173, -3.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7867, device='cuda:0', dtype=torch.float64)
tensor([-1.9367, -2.7701, -2.8558, -3.2360, -3.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2228, device='cuda:0', dtype=torch.float64)
tensor([-1.9240, -2.7491, -2.8726, -3.2639, -3.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8863, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.7386, -2.8701, -3.2589, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3393, device='cuda:0', dtype=torch.float64)
tensor([-1.9260, -2.7380, -2.8581, -3.2507, -3.3074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0439, device='cuda:0', dtype=torch.float64)
tensor([-1.9258, -2.7411, -2.8511, -3.2555, -3.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5631, device='cuda:0', dtype=torch.float64)
tensor([-1.9166, -2.7381, -2.8545, -3.2647, -3.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2425, device='cuda:0', dtype=torch.float64)
tensor([-1.9037, -2.7341, -2.8630, -3.2862, -3.2808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5653, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.7384, -2.8662, -3.2966, -3.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6914, device='cuda:0', dtype=torch.float64)
tensor([-1.8983, -2.7525, -2.8618, -3.2877, -3.2707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([-1.9008, -2.7745, -2.8593, -3.2852, -3.2740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3977, device='cuda:0', dtype=torch.float64)
tensor([-1.8988, -2.7905, -2.8667, -3.2839, -3.2750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3144, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.8032, -2.8700, -3.2811, -3.2776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3517, device='cuda:0', dtype=torch.float64)
tensor([-1.9143, -2.8121, -2.8669, -3.2748, -3.2837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2169, device='cuda:0', dtype=torch.float64)
tensor([-1.9272, -2.8219, -2.8567, -3.2689, -3.2968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9902, device='cuda:0', dtype=torch.float64)
tensor([-1.9421, -2.8261, -2.8443, -3.2609, -3.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1446, device='cuda:0', dtype=torch.float64)
tensor([-1.9546, -2.8247, -2.8361, -3.2554, -3.3179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6836, device='cuda:0', dtype=torch.float64)
tensor([-1.9577, -2.8115, -2.8355, -3.2582, -3.3231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2264, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.7967, -2.8354, -3.2614, -3.3275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2772, device='cuda:0', dtype=torch.float64)
tensor([-1.9546, -2.7803, -2.8358, -3.2631, -3.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2129, device='cuda:0', dtype=torch.float64)
tensor([-1.9534, -2.7740, -2.8376, -3.2684, -3.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1872, device='cuda:0', dtype=torch.float64)
tensor([-1.9554, -2.7784, -2.8356, -3.2698, -3.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2432, device='cuda:0', dtype=torch.float64)
tensor([-1.9576, -2.7848, -2.8382, -3.2650, -3.3364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5198, device='cuda:0', dtype=torch.float64)
tensor([-1.9596, -2.7902, -2.8430, -3.2568, -3.3323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1496, device='cuda:0', dtype=torch.float64)
tensor([-1.9574, -2.7941, -2.8482, -3.2537, -3.3291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2962, device='cuda:0', dtype=torch.float64)
tensor([-1.9537, -2.8025, -2.8500, -3.2492, -3.3288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2212, device='cuda:0', dtype=torch.float64)
tensor([-1.9537, -2.8112, -2.8474, -3.2479, -3.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4639, device='cuda:0', dtype=torch.float64)
tensor([-1.9532, -2.8234, -2.8471, -3.2498, -3.3254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3866, device='cuda:0', dtype=torch.float64)
tensor([-1.9537, -2.8354, -2.8442, -3.2475, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1472, device='cuda:0', dtype=torch.float64)
tensor([-1.9531, -2.8419, -2.8459, -3.2546, -3.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3426, device='cuda:0', dtype=torch.float64)
tensor([-1.9407, -2.8327, -2.8591, -3.2695, -3.3289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1442, device='cuda:0', dtype=torch.float64)
tensor([-1.9218, -2.8053, -2.8794, -3.2780, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2340, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.7775, -2.8984, -3.2871, -3.3176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3840, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.7620, -2.9039, -3.2811, -3.3199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3456, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.7593, -2.8974, -3.2686, -3.3262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4803, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.7583, -2.8839, -3.2658, -3.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3221, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.7568, -2.8756, -3.2632, -3.3316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.7554, -2.8723, -3.2665, -3.3335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3945, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.7644, -2.8652, -3.2782, -3.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2373, device='cuda:0', dtype=torch.float64)
tensor([-1.9359, -2.7753, -2.8511, -3.2693, -3.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4299, device='cuda:0', dtype=torch.float64)
tensor([-1.9435, -2.7842, -2.8488, -3.2727, -3.3524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3945, device='cuda:0', dtype=torch.float64)
tensor([-1.9501, -2.7874, -2.8516, -3.2797, -3.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3862, device='cuda:0', dtype=torch.float64)
tensor([-1.9480, -2.7832, -2.8605, -3.2690, -3.3557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4710, device='cuda:0', dtype=torch.float64)
tensor([-1.9407, -2.7771, -2.8730, -3.2778, -3.3519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3656, device='cuda:0', dtype=torch.float64)
tensor([-1.9388, -2.7810, -2.8771, -3.2755, -3.3537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5498, device='cuda:0', dtype=torch.float64)
tensor([-1.9458, -2.7916, -2.8690, -3.2498, -3.3526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2848, device='cuda:0', dtype=torch.float64)
tensor([-1.9556, -2.8022, -2.8591, -3.2527, -3.3558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6229, device='cuda:0', dtype=torch.float64)
tensor([-1.9527, -2.7976, -2.8630, -3.2539, -3.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4151, device='cuda:0', dtype=torch.float64)
tensor([-1.9468, -2.7854, -2.8721, -3.2635, -3.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2907, device='cuda:0', dtype=torch.float64)
tensor([-1.9424, -2.7807, -2.8762, -3.2850, -3.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4834, device='cuda:0', dtype=torch.float64)
tensor([-1.9396, -2.7784, -2.8783, -3.2777, -3.3197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2337, device='cuda:0', dtype=torch.float64)
tensor([-1.9330, -2.7784, -2.8844, -3.2887, -3.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6102, device='cuda:0', dtype=torch.float64)
tensor([-1.9150, -2.7718, -2.8937, -3.3061, -3.3037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2180, device='cuda:0', dtype=torch.float64)
tensor([-1.9059, -2.7731, -2.8996, -3.3173, -3.2981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3056, device='cuda:0', dtype=torch.float64)
tensor([-1.9032, -2.7812, -2.8991, -3.3107, -3.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4334, device='cuda:0', dtype=torch.float64)
tensor([-1.9105, -2.7998, -2.8842, -3.2922, -3.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2028, device='cuda:0', dtype=torch.float64)
tensor([-1.9297, -2.8266, -2.8656, -3.2715, -3.3233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3574, device='cuda:0', dtype=torch.float64)
tensor([-1.9452, -2.8475, -2.8519, -3.2505, -3.3296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3556, device='cuda:0', dtype=torch.float64)
tensor([-1.9587, -2.8574, -2.8422, -3.2401, -3.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2303, device='cuda:0', dtype=torch.float64)
tensor([-1.9627, -2.8507, -2.8448, -3.2411, -3.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4234, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.8371, -2.8526, -3.2449, -3.3110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4736, device='cuda:0', dtype=torch.float64)
tensor([-1.9578, -2.8207, -2.8613, -3.2468, -3.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3765, device='cuda:0', dtype=torch.float64)
tensor([-1.9616, -2.8133, -2.8635, -3.2425, -3.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3319, device='cuda:0', dtype=torch.float64)
tensor([-1.9606, -2.8075, -2.8684, -3.2396, -3.2965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2587, device='cuda:0', dtype=torch.float64)
tensor([-1.9599, -2.8026, -2.8652, -3.2414, -3.2931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4320, device='cuda:0', dtype=torch.float64)
tensor([-1.9498, -2.7961, -2.8629, -3.2475, -3.2878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3332, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.7921, -2.8601, -3.2609, -3.2812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4829, device='cuda:0', dtype=torch.float64)
tensor([-1.9306, -2.7919, -2.8501, -3.2661, -3.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3881, device='cuda:0', dtype=torch.float64)
tensor([-1.9296, -2.7945, -2.8351, -3.2694, -3.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4668, device='cuda:0', dtype=torch.float64)
tensor([-1.9314, -2.7958, -2.8256, -3.2676, -3.2960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7158, device='cuda:0', dtype=torch.float64)
tensor([-1.9232, -2.7794, -2.8301, -3.2557, -3.2891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5265, device='cuda:0', dtype=torch.float64)
tensor([-1.9253, -2.7722, -2.8339, -3.2561, -3.2912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4464, device='cuda:0', dtype=torch.float64)
tensor([-1.9356, -2.7732, -2.8323, -3.2461, -3.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3433, device='cuda:0', dtype=torch.float64)
tensor([-1.9525, -2.7844, -2.8288, -3.2419, -3.3167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2422, device='cuda:0', dtype=torch.float64)
tensor([-1.9635, -2.7946, -2.8298, -3.2443, -3.3244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4615, device='cuda:0', dtype=torch.float64)
tensor([-1.9651, -2.7933, -2.8383, -3.2507, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3918, device='cuda:0', dtype=torch.float64)
tensor([-1.9607, -2.7882, -2.8455, -3.2725, -3.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8509, device='cuda:0', dtype=torch.float64)
tensor([-1.9595, -2.7882, -2.8406, -3.2872, -3.3146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4998, device='cuda:0', dtype=torch.float64)
tensor([-1.9634, -2.7894, -2.8295, -3.3064, -3.3079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5384, device='cuda:0', dtype=torch.float64)
tensor([-1.9776, -2.7962, -2.8183, -3.4044, -3.3093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7671, device='cuda:0', dtype=torch.float64)
tensor([-1.9822, -2.7855, -2.8226, -3.3344, -3.3057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4283, device='cuda:0', dtype=torch.float64)
tensor([-1.9869, -2.7783, -2.8307, -3.2909, -3.3015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2537, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.7769, -2.8415, -3.2767, -3.3027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2822, device='cuda:0', dtype=torch.float64)
tensor([-2.0052, -2.7734, -2.8514, -3.2648, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4404, device='cuda:0', dtype=torch.float64)
tensor([-2.0044, -2.7727, -2.8551, -3.2426, -3.3238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1658, device='cuda:0', dtype=torch.float64)
tensor([-1.9907, -2.7687, -2.8614, -3.2369, -3.3307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4991, device='cuda:0', dtype=torch.float64)
tensor([-1.9672, -2.7637, -2.8727, -3.2448, -3.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3807, device='cuda:0', dtype=torch.float64)
tensor([-1.9400, -2.7636, -2.8836, -3.2643, -3.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5614, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.7623, -2.8874, -3.2863, -3.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3215, device='cuda:0', dtype=torch.float64)
tensor([-1.9164, -2.7671, -2.8818, -3.2894, -3.3220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2995, device='cuda:0', dtype=torch.float64)
tensor([-1.9141, -2.7784, -2.8732, -3.2726, -3.3199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-1.9175, -2.7970, -2.8631, -3.2589, -3.3207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6834, device='cuda:0', dtype=torch.float64)
tensor([-1.9172, -2.8050, -2.8615, -3.2534, -3.3172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5096, device='cuda:0', dtype=torch.float64)
tensor([-1.9107, -2.8048, -2.8666, -3.2666, -3.3094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5136, device='cuda:0', dtype=torch.float64)
tensor([-1.9052, -2.8061, -2.8732, -3.2900, -3.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4280, device='cuda:0', dtype=torch.float64)
tensor([-1.9091, -2.8092, -2.8728, -3.2928, -3.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3728, device='cuda:0', dtype=torch.float64)
tensor([-1.9288, -2.8176, -2.8673, -3.2894, -3.3194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3422, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.8317, -2.8620, -3.2909, -3.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4172, device='cuda:0', dtype=torch.float64)
tensor([-1.9623, -2.8366, -2.8596, -3.2761, -3.3324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5716, device='cuda:0', dtype=torch.float64)
tensor([-1.9634, -2.8365, -2.8620, -3.2730, -3.3313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1454, device='cuda:0', dtype=torch.float64)
tensor([-1.9680, -2.8451, -2.8588, -3.2775, -3.3366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2589, device='cuda:0', dtype=torch.float64)
tensor([-1.9707, -2.8433, -2.8523, -3.2624, -3.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3827, device='cuda:0', dtype=torch.float64)
tensor([-1.9718, -2.8406, -2.8460, -3.2449, -3.3524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3996, device='cuda:0', dtype=torch.float64)
tensor([-1.9648, -2.8319, -2.8511, -3.2614, -3.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3552, device='cuda:0', dtype=torch.float64)
tensor([-1.9472, -2.8160, -2.8614, -3.2809, -3.3324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1895, device='cuda:0', dtype=torch.float64)
tensor([-1.9264, -2.8008, -2.8749, -3.3075, -3.3163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3783, device='cuda:0', dtype=torch.float64)
tensor([-1.9142, -2.7940, -2.8828, -3.3286, -3.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3020, device='cuda:0', dtype=torch.float64)
tensor([-1.9102, -2.7944, -2.8806, -3.3319, -3.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1434, device='cuda:0', dtype=torch.float64)
tensor([-1.9111, -2.7987, -2.8807, -3.3483, -3.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4313, device='cuda:0', dtype=torch.float64)
tensor([-1.9093, -2.7983, -2.8891, -3.3485, -3.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4308, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.7915, -2.8988, -3.3296, -3.2749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3411, device='cuda:0', dtype=torch.float64)
tensor([-1.9290, -2.7876, -2.9051, -3.3139, -3.2740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2465, device='cuda:0', dtype=torch.float64)
tensor([-1.9518, -2.7946, -2.8991, -3.2843, -3.2804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3850, device='cuda:0', dtype=torch.float64)
tensor([-1.9733, -2.8035, -2.8951, -3.2641, -3.2893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6486, device='cuda:0', dtype=torch.float64)
tensor([-1.9823, -2.8001, -2.8949, -3.2552, -3.2970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3101, device='cuda:0', dtype=torch.float64)
tensor([-1.9815, -2.7962, -2.8948, -3.2556, -3.2963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4512, device='cuda:0', dtype=torch.float64)
tensor([-1.9779, -2.7946, -2.8984, -3.2676, -3.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3254, device='cuda:0', dtype=torch.float64)
tensor([-1.9744, -2.7949, -2.9003, -3.2628, -3.3032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4795, device='cuda:0', dtype=torch.float64)
tensor([-1.9693, -2.7947, -2.9032, -3.2519, -3.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5199, device='cuda:0', dtype=torch.float64)
tensor([-1.9669, -2.7994, -2.9043, -3.2415, -3.3197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2734, device='cuda:0', dtype=torch.float64)
tensor([-1.9666, -2.8069, -2.9051, -3.2273, -3.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4329, device='cuda:0', dtype=torch.float64)
tensor([-1.9641, -2.8079, -2.9078, -3.2266, -3.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4043, device='cuda:0', dtype=torch.float64)
tensor([-1.9612, -2.8109, -2.9103, -3.2342, -3.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3331, device='cuda:0', dtype=torch.float64)
tensor([-1.9502, -2.8074, -2.9155, -3.2522, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4621, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.8063, -2.9228, -3.2720, -3.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4789, device='cuda:0', dtype=torch.float64)
tensor([-1.9442, -2.8103, -2.9313, -3.2893, -3.3291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2330, device='cuda:0', dtype=torch.float64)
tensor([-1.9509, -2.8181, -2.9294, -3.3002, -3.3256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4188, device='cuda:0', dtype=torch.float64)
tensor([-1.9616, -2.8221, -2.9204, -3.2975, -3.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4839, device='cuda:0', dtype=torch.float64)
tensor([-1.9730, -2.8261, -2.9046, -3.2850, -3.3328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2179, device='cuda:0', dtype=torch.float64)
tensor([-1.9767, -2.8233, -2.8900, -3.2815, -3.3375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4127, device='cuda:0', dtype=torch.float64)
tensor([-1.9718, -2.8095, -2.8816, -3.2758, -3.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3892, device='cuda:0', dtype=torch.float64)
tensor([-1.9670, -2.7995, -2.8706, -3.2683, -3.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3799, device='cuda:0', dtype=torch.float64)
tensor([-1.9711, -2.7942, -2.8574, -3.2594, -3.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3058, device='cuda:0', dtype=torch.float64)
tensor([-1.9804, -2.7975, -2.8443, -3.2541, -3.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2727, device='cuda:0', dtype=torch.float64)
tensor([-1.9865, -2.8007, -2.8364, -3.2550, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2890, device='cuda:0', dtype=torch.float64)
tensor([-1.9893, -2.8075, -2.8328, -3.2580, -3.3661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-1.9932, -2.8205, -2.8335, -3.2622, -3.3647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5530, device='cuda:0', dtype=torch.float64)
tensor([-1.9942, -2.8329, -2.8419, -3.2771, -3.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6875, device='cuda:0', dtype=torch.float64)
tensor([-1.9815, -2.8296, -2.8577, -3.2950, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6339, device='cuda:0', dtype=torch.float64)
tensor([-1.9626, -2.8145, -2.8829, -3.3152, -3.3258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3584, device='cuda:0', dtype=torch.float64)
tensor([-1.9506, -2.8000, -2.9011, -3.3331, -3.3110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4146, device='cuda:0', dtype=torch.float64)
tensor([-1.9491, -2.7931, -2.9008, -3.3196, -3.2985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4034, device='cuda:0', dtype=torch.float64)
tensor([-1.9532, -2.7910, -2.8993, -3.3105, -3.2944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1863, device='cuda:0', dtype=torch.float64)
tensor([-1.9537, -2.7828, -2.8976, -3.2971, -3.2942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4050, device='cuda:0', dtype=torch.float64)
tensor([-1.9549, -2.7733, -2.8960, -3.2824, -3.2970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2527, device='cuda:0', dtype=torch.float64)
tensor([-1.9547, -2.7626, -2.8987, -3.2828, -3.3009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5882, device='cuda:0', dtype=torch.float64)
tensor([-1.9605, -2.7642, -2.8953, -3.2834, -3.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3138, device='cuda:0', dtype=torch.float64)
tensor([-1.9615, -2.7681, -2.8949, -3.2871, -3.3191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3805, device='cuda:0', dtype=torch.float64)
tensor([-1.9633, -2.7792, -2.8925, -3.2901, -3.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5229, device='cuda:0', dtype=torch.float64)
tensor([-1.9598, -2.7880, -2.8974, -3.2990, -3.3271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3669, device='cuda:0', dtype=torch.float64)
tensor([-1.9556, -2.7950, -2.8987, -3.3195, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5052, device='cuda:0', dtype=torch.float64)
tensor([-1.9539, -2.8012, -2.9007, -3.3382, -3.3228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3561, device='cuda:0', dtype=torch.float64)
tensor([-1.9570, -2.8083, -2.9032, -3.3379, -3.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4245, device='cuda:0', dtype=torch.float64)
tensor([-1.9666, -2.8216, -2.9012, -3.3261, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1809, device='cuda:0', dtype=torch.float64)
tensor([-1.9748, -2.8341, -2.9005, -3.3115, -3.3417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2768, device='cuda:0', dtype=torch.float64)
tensor([-1.9821, -2.8531, -2.9004, -3.3087, -3.3566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6044, device='cuda:0', dtype=torch.float64)
tensor([-1.9835, -2.8630, -2.9049, -3.3255, -3.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2349, device='cuda:0', dtype=torch.float64)
tensor([-1.9723, -2.8587, -2.9158, -3.3520, -3.3313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2132, device='cuda:0', dtype=torch.float64)
tensor([-1.9589, -2.8532, -2.9253, -3.3836, -3.3141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5670, device='cuda:0', dtype=torch.float64)
tensor([-1.9580, -2.8596, -2.9302, -3.4144, -3.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5429, device='cuda:0', dtype=torch.float64)
tensor([-1.9647, -2.8643, -2.9166, -3.3978, -3.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2924, device='cuda:0', dtype=torch.float64)
tensor([-1.9811, -2.8752, -2.8994, -3.3849, -3.3210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3707, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -2.8695, -2.8903, -3.3708, -3.3314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5090, device='cuda:0', dtype=torch.float64)
tensor([-1.9938, -2.8589, -2.8843, -3.3490, -3.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5694, device='cuda:0', dtype=torch.float64)
tensor([-1.9932, -2.8417, -2.8838, -3.3330, -3.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4283, device='cuda:0', dtype=torch.float64)
tensor([-1.9870, -2.8282, -2.8893, -3.3319, -3.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6862, device='cuda:0', dtype=torch.float64)
tensor([-1.9828, -2.8146, -2.8825, -3.3047, -3.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4539, device='cuda:0', dtype=torch.float64)
tensor([-1.9828, -2.8085, -2.8724, -3.2768, -3.3809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3038, device='cuda:0', dtype=torch.float64)
tensor([-1.9746, -2.8018, -2.8724, -3.2572, -3.3918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5354, device='cuda:0', dtype=torch.float64)
tensor([-1.9630, -2.8009, -2.8745, -3.2410, -3.3903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4101, device='cuda:0', dtype=torch.float64)
tensor([-1.9465, -2.8092, -2.8807, -3.2693, -3.3829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3723, device='cuda:0', dtype=torch.float64)
tensor([-1.9347, -2.8281, -2.8808, -3.2990, -3.3789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4993, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.8453, -2.8786, -3.2950, -3.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5394, device='cuda:0', dtype=torch.float64)
tensor([-1.9309, -2.8503, -2.8860, -3.3019, -3.3732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7194, device='cuda:0', dtype=torch.float64)
tensor([-1.9251, -2.8414, -2.8991, -3.3209, -3.3590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3697, device='cuda:0', dtype=torch.float64)
tensor([-1.9183, -2.8215, -2.9139, -3.3424, -3.3490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0811, device='cuda:0', dtype=torch.float64)
tensor([-1.9207, -2.8067, -2.9282, -3.3632, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7321, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.8052, -2.9225, -3.3564, -3.3669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2733, device='cuda:0', dtype=torch.float64)
tensor([-1.9505, -2.8096, -2.9068, -3.3438, -3.3734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4449, device='cuda:0', dtype=torch.float64)
tensor([-1.9741, -2.8180, -2.8924, -3.3379, -3.3880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7915, device='cuda:0', dtype=torch.float64)
tensor([-1.9882, -2.8206, -2.8824, -3.3200, -3.3974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6415, device='cuda:0', dtype=torch.float64)
tensor([-2.0052, -2.8268, -2.8841, -3.3308, -3.4075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3838, device='cuda:0', dtype=torch.float64)
tensor([-2.0257, -2.8333, -2.8800, -3.3276, -3.4195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5814, device='cuda:0', dtype=torch.float64)
tensor([-2.0442, -2.8361, -2.8687, -3.2936, -3.4228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2914, device='cuda:0', dtype=torch.float64)
tensor([-2.0617, -2.8420, -2.8628, -3.2947, -3.4278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4214, device='cuda:0', dtype=torch.float64)
tensor([-2.0658, -2.8423, -2.8609, -3.2995, -3.4222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3863, device='cuda:0', dtype=torch.float64)
tensor([-2.0520, -2.8284, -2.8634, -3.2768, -3.3980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6349, device='cuda:0', dtype=torch.float64)
tensor([-2.0306, -2.8233, -2.8710, -3.2886, -3.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4038, device='cuda:0', dtype=torch.float64)
tensor([-2.0092, -2.8229, -2.8838, -3.3038, -3.3473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0425, device='cuda:0', dtype=torch.float64)
tensor([-1.9891, -2.8179, -2.8984, -3.3127, -3.3199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3386, device='cuda:0', dtype=torch.float64)
tensor([-1.9673, -2.8123, -2.9131, -3.3286, -3.2981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4237, device='cuda:0', dtype=torch.float64)
tensor([-1.9475, -2.8109, -2.9279, -3.3533, -3.2839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3785, device='cuda:0', dtype=torch.float64)
tensor([-1.9369, -2.8118, -2.9380, -3.3574, -3.2780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3957, device='cuda:0', dtype=torch.float64)
tensor([-1.9312, -2.8146, -2.9446, -3.3420, -3.2749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4858, device='cuda:0', dtype=torch.float64)
tensor([-1.9313, -2.8229, -2.9462, -3.3359, -3.2766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2186, device='cuda:0', dtype=torch.float64)
tensor([-1.9460, -2.8342, -2.9413, -3.3288, -3.2893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-1.9664, -2.8401, -2.9279, -3.3072, -3.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6212, device='cuda:0', dtype=torch.float64)
tensor([-1.9814, -2.8464, -2.9156, -3.2844, -3.3310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2851, device='cuda:0', dtype=torch.float64)
tensor([-1.9940, -2.8548, -2.9104, -3.2771, -3.3509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6832, device='cuda:0', dtype=torch.float64)
tensor([-1.9955, -2.8508, -2.9152, -3.2769, -3.3575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4300, device='cuda:0', dtype=torch.float64)
tensor([-1.9800, -2.8348, -2.9313, -3.2959, -3.3496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2431, device='cuda:0', dtype=torch.float64)
tensor([-1.9676, -2.8291, -2.9413, -3.3123, -3.3470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3620, device='cuda:0', dtype=torch.float64)
tensor([-1.9617, -2.8314, -2.9419, -3.3124, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4389, device='cuda:0', dtype=torch.float64)
tensor([-1.9658, -2.8363, -2.9333, -3.3136, -3.3380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7329, device='cuda:0', dtype=torch.float64)
tensor([-1.9755, -2.8460, -2.9246, -3.3296, -3.3377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4364, device='cuda:0', dtype=torch.float64)
tensor([-1.9860, -2.8565, -2.9152, -3.3253, -3.3316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6042, device='cuda:0', dtype=torch.float64)
tensor([-1.9986, -2.8714, -2.9082, -3.3233, -3.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7037, device='cuda:0', dtype=torch.float64)
tensor([-2.0082, -2.8839, -2.9011, -3.3384, -3.3152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4147, device='cuda:0', dtype=torch.float64)
tensor([-2.0081, -2.8871, -2.8973, -3.3586, -3.3038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6295, device='cuda:0', dtype=torch.float64)
tensor([-2.0054, -2.8875, -2.8902, -3.3611, -3.3008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1612, device='cuda:0', dtype=torch.float64)
tensor([-2.0049, -2.8819, -2.8815, -3.3684, -3.3034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2030, device='cuda:0', dtype=torch.float64)
tensor([-1.9978, -2.8701, -2.8771, -3.3687, -3.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4692, device='cuda:0', dtype=torch.float64)
tensor([-1.9926, -2.8586, -2.8699, -3.3658, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2294, device='cuda:0', dtype=torch.float64)
tensor([-1.9920, -2.8469, -2.8614, -3.3526, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4401, device='cuda:0', dtype=torch.float64)
tensor([-1.9931, -2.8423, -2.8563, -3.3333, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4284, device='cuda:0', dtype=torch.float64)
tensor([-1.9898, -2.8366, -2.8575, -3.3255, -3.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4084, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.8251, -2.8692, -3.3273, -3.3946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4145, device='cuda:0', dtype=torch.float64)
tensor([-1.9793, -2.8162, -2.8815, -3.3316, -3.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5383, device='cuda:0', dtype=torch.float64)
tensor([-1.9832, -2.8171, -2.8943, -3.3381, -3.4058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4956, device='cuda:0', dtype=torch.float64)
tensor([-1.9917, -2.8295, -2.9014, -3.3250, -3.4221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4212, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.8478, -2.9070, -3.3171, -3.4437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([-2.0022, -2.8604, -2.9105, -3.3136, -3.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4368, device='cuda:0', dtype=torch.float64)
tensor([-1.9959, -2.8586, -2.9137, -3.3200, -3.4372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3381, device='cuda:0', dtype=torch.float64)
tensor([-1.9900, -2.8569, -2.9169, -3.3307, -3.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4739, device='cuda:0', dtype=torch.float64)
tensor([-1.9872, -2.8518, -2.9175, -3.3359, -3.4103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2790, device='cuda:0', dtype=torch.float64)
tensor([-1.9907, -2.8396, -2.9081, -3.3255, -3.3984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2120, device='cuda:0', dtype=torch.float64)
tensor([-1.9958, -2.8333, -2.9018, -3.3455, -3.3974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3207, device='cuda:0', dtype=torch.float64)
tensor([-1.9994, -2.8218, -2.8999, -3.3651, -3.3910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5167, device='cuda:0', dtype=torch.float64)
tensor([-2.0027, -2.8082, -2.9016, -3.3090, -3.3806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3854, device='cuda:0', dtype=torch.float64)
tensor([-2.0087, -2.8049, -2.9048, -3.3080, -3.3823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3438, device='cuda:0', dtype=torch.float64)
tensor([-2.0119, -2.8048, -2.9045, -3.3123, -3.3855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4402, device='cuda:0', dtype=torch.float64)
tensor([-2.0182, -2.8092, -2.8987, -3.2979, -3.3868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2239, device='cuda:0', dtype=torch.float64)
tensor([-2.0267, -2.8212, -2.8921, -3.2898, -3.3896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2488, device='cuda:0', dtype=torch.float64)
tensor([-2.0323, -2.8324, -2.8897, -3.2906, -3.3925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4388, device='cuda:0', dtype=torch.float64)
tensor([-2.0300, -2.8391, -2.8950, -3.2961, -3.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4238, device='cuda:0', dtype=torch.float64)
tensor([-2.0323, -2.8571, -2.8925, -3.2972, -3.3921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6097, device='cuda:0', dtype=torch.float64)
tensor([-2.0346, -2.8758, -2.8946, -3.2880, -3.3933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4004, device='cuda:0', dtype=torch.float64)
tensor([-2.0332, -2.8894, -2.9021, -3.2760, -3.3949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3718, device='cuda:0', dtype=torch.float64)
tensor([-2.0222, -2.8998, -2.9152, -3.2676, -3.3935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4057, device='cuda:0', dtype=torch.float64)
tensor([-2.0086, -2.9055, -2.9260, -3.2760, -3.3855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1832, device='cuda:0', dtype=torch.float64)
tensor([-1.9878, -2.8968, -2.9374, -3.2911, -3.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2792, device='cuda:0', dtype=torch.float64)
tensor([-1.9750, -2.8851, -2.9443, -3.3055, -3.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1178, device='cuda:0', dtype=torch.float64)
tensor([-1.9704, -2.8770, -2.9434, -3.3115, -3.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7183, device='cuda:0', dtype=torch.float64)
tensor([-1.9812, -2.8818, -2.9296, -3.3019, -3.3399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2225, device='cuda:0', dtype=torch.float64)
tensor([-1.9941, -2.8876, -2.9176, -3.3034, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3436, device='cuda:0', dtype=torch.float64)
tensor([-2.0006, -2.8919, -2.9086, -3.3111, -3.3471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7244, device='cuda:0', dtype=torch.float64)
tensor([-1.9955, -2.8734, -2.9060, -3.3181, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3130, device='cuda:0', dtype=torch.float64)
tensor([-1.9939, -2.8636, -2.9074, -3.3492, -3.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5515, device='cuda:0', dtype=torch.float64)
tensor([-2.0054, -2.8585, -2.8971, -3.3347, -3.3543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3713, device='cuda:0', dtype=torch.float64)
tensor([-2.0158, -2.8511, -2.8879, -3.3140, -3.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5109, device='cuda:0', dtype=torch.float64)
tensor([-2.0223, -2.8520, -2.8804, -3.3083, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2589, device='cuda:0', dtype=torch.float64)
tensor([-2.0255, -2.8503, -2.8787, -3.3176, -3.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5138, device='cuda:0', dtype=torch.float64)
tensor([-2.0229, -2.8521, -2.8816, -3.3234, -3.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3052, device='cuda:0', dtype=torch.float64)
tensor([-2.0171, -2.8538, -2.8883, -3.3285, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2583, device='cuda:0', dtype=torch.float64)
tensor([-2.0203, -2.8592, -2.8853, -3.3357, -3.3534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5794, device='cuda:0', dtype=torch.float64)
tensor([-2.0305, -2.8677, -2.8805, -3.3496, -3.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5709, device='cuda:0', dtype=torch.float64)
tensor([-2.0431, -2.8871, -2.8829, -3.3878, -3.3718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5729, device='cuda:0', dtype=torch.float64)
tensor([-2.0457, -2.8847, -2.8905, -3.3812, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4684, device='cuda:0', dtype=torch.float64)
tensor([-2.0476, -2.8720, -2.9002, -3.3861, -3.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5473, device='cuda:0', dtype=torch.float64)
tensor([-2.0484, -2.8589, -2.9099, -3.3863, -3.3778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3442, device='cuda:0', dtype=torch.float64)
tensor([-2.0556, -2.8513, -2.9213, -3.3755, -3.3899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3998, device='cuda:0', dtype=torch.float64)
tensor([-2.0648, -2.8491, -2.9245, -3.3436, -3.3971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3142, device='cuda:0', dtype=torch.float64)
tensor([-2.0672, -2.8480, -2.9311, -3.3235, -3.4039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3877, device='cuda:0', dtype=torch.float64)
tensor([-2.0599, -2.8455, -2.9334, -3.3133, -3.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4579, device='cuda:0', dtype=torch.float64)
tensor([-2.0529, -2.8450, -2.9317, -3.3070, -3.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2667, device='cuda:0', dtype=torch.float64)
tensor([-2.0485, -2.8596, -2.9255, -3.3077, -3.4137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3028, device='cuda:0', dtype=torch.float64)
tensor([-2.0399, -2.8636, -2.9272, -3.3167, -3.4153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2501, device='cuda:0', dtype=torch.float64)
tensor([-2.0313, -2.8633, -2.9239, -3.3324, -3.4118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3879, device='cuda:0', dtype=torch.float64)
tensor([-2.0228, -2.8593, -2.9215, -3.3541, -3.4062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3072, device='cuda:0', dtype=torch.float64)
tensor([-2.0137, -2.8504, -2.9189, -3.3739, -3.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4825, device='cuda:0', dtype=torch.float64)
tensor([-2.0039, -2.8340, -2.9249, -3.3822, -3.3988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2728, device='cuda:0', dtype=torch.float64)
tensor([-1.9980, -2.8233, -2.9332, -3.3871, -3.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2919, device='cuda:0', dtype=torch.float64)
tensor([-1.9925, -2.8075, -2.9400, -3.3908, -3.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5073, device='cuda:0', dtype=torch.float64)
tensor([-1.9961, -2.7996, -2.9415, -3.3831, -3.4064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4347, device='cuda:0', dtype=torch.float64)
tensor([-2.0041, -2.8017, -2.9391, -3.3663, -3.4157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8255, device='cuda:0', dtype=torch.float64)
tensor([-2.0270, -2.8176, -2.9231, -3.3675, -3.4316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3800, device='cuda:0', dtype=torch.float64)
tensor([-2.0426, -2.8355, -2.9144, -3.3614, -3.4411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4709, device='cuda:0', dtype=torch.float64)
tensor([-2.0510, -2.8495, -2.9157, -3.3456, -3.4426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5800, device='cuda:0', dtype=torch.float64)
tensor([-2.0611, -2.8526, -2.9198, -3.3365, -3.4499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4096, device='cuda:0', dtype=torch.float64)
tensor([-2.0730, -2.8580, -2.9196, -3.3363, -3.4541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5794, device='cuda:0', dtype=torch.float64)
tensor([-2.0812, -2.8710, -2.9197, -3.3325, -3.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4405, device='cuda:0', dtype=torch.float64)
tensor([-2.0940, -2.8880, -2.9146, -3.3518, -3.4682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2711, device='cuda:0', dtype=torch.float64)
tensor([-2.1033, -2.9090, -2.9096, -3.3648, -3.4685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5377, device='cuda:0', dtype=torch.float64)
tensor([-2.0969, -2.9258, -2.9112, -3.3506, -3.4549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2806, device='cuda:0', dtype=torch.float64)
tensor([-2.0858, -2.9370, -2.9160, -3.3508, -3.4407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3990, device='cuda:0', dtype=torch.float64)
tensor([-2.0749, -2.9390, -2.9187, -3.3514, -3.4332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3736, device='cuda:0', dtype=torch.float64)
tensor([-2.0645, -2.9397, -2.9183, -3.3448, -3.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3430, device='cuda:0', dtype=torch.float64)
tensor([-2.0508, -2.9361, -2.9201, -3.3493, -3.4392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4528, device='cuda:0', dtype=torch.float64)
tensor([-2.0294, -2.9164, -2.9282, -3.3427, -3.4248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3651, device='cuda:0', dtype=torch.float64)
tensor([-2.0082, -2.8874, -2.9401, -3.3364, -3.4006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7593, device='cuda:0', dtype=torch.float64)
tensor([-1.9849, -2.8573, -2.9655, -3.3501, -3.3805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5325, device='cuda:0', dtype=torch.float64)
tensor([-1.9708, -2.8393, -2.9900, -3.3688, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4430, device='cuda:0', dtype=torch.float64)
tensor([-1.9751, -2.8209, -2.9916, -3.3446, -3.3771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5738, device='cuda:0', dtype=torch.float64)
tensor([-1.9890, -2.8151, -2.9790, -3.3065, -3.3915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5708, device='cuda:0', dtype=torch.float64)
tensor([-2.0097, -2.8290, -2.9663, -3.2956, -3.4151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4467, device='cuda:0', dtype=torch.float64)
tensor([-2.0337, -2.8455, -2.9563, -3.2927, -3.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5127, device='cuda:0', dtype=torch.float64)
tensor([-2.0509, -2.8598, -2.9506, -3.2899, -3.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7535, device='cuda:0', dtype=torch.float64)
tensor([-2.0564, -2.8737, -2.9489, -3.2915, -3.4256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1559, device='cuda:0', dtype=torch.float64)
tensor([-2.0655, -2.9013, -2.9568, -3.3239, -3.4321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6414, device='cuda:0', dtype=torch.float64)
tensor([-2.0827, -2.9185, -2.9539, -3.3216, -3.4405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6058, device='cuda:0', dtype=torch.float64)
tensor([-2.1008, -2.9258, -2.9454, -3.3109, -3.4372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2961, device='cuda:0', dtype=torch.float64)
tensor([-2.1068, -2.9429, -2.9456, -3.3473, -3.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5332, device='cuda:0', dtype=torch.float64)
tensor([-2.1064, -2.9627, -2.9485, -3.3842, -3.4310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2800, device='cuda:0', dtype=torch.float64)
tensor([-2.0998, -2.9640, -2.9601, -3.3368, -3.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([-2.0873, -2.9566, -2.9807, -3.3219, -3.4069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4147, device='cuda:0', dtype=torch.float64)
tensor([-2.0761, -2.9528, -2.9957, -3.3220, -3.3922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4727, device='cuda:0', dtype=torch.float64)
tensor([-2.0697, -2.9530, -3.0044, -3.3129, -3.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2813, device='cuda:0', dtype=torch.float64)
tensor([-2.0671, -2.9506, -3.0094, -3.3087, -3.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4773, device='cuda:0', dtype=torch.float64)
tensor([-2.0650, -2.9453, -3.0110, -3.3251, -3.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([-2.0548, -2.9173, -3.0151, -3.3470, -3.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3806, device='cuda:0', dtype=torch.float64)
tensor([-2.0346, -2.8717, -3.0281, -3.3693, -3.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7054, device='cuda:0', dtype=torch.float64)
tensor([-2.0242, -2.8372, -3.0406, -3.4176, -3.3083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6487, device='cuda:0', dtype=torch.float64)
tensor([-2.0279, -2.8203, -3.0418, -3.4340, -3.2998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5118, device='cuda:0', dtype=torch.float64)
tensor([-2.0402, -2.8084, -3.0285, -3.4272, -3.3015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3168, device='cuda:0', dtype=torch.float64)
tensor([-2.0606, -2.8100, -3.0041, -3.4164, -3.3089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4940, device='cuda:0', dtype=torch.float64)
tensor([-2.0864, -2.8166, -2.9707, -3.4127, -3.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6484, device='cuda:0', dtype=torch.float64)
tensor([-2.1105, -2.8179, -2.9451, -3.3919, -3.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7566, device='cuda:0', dtype=torch.float64)
tensor([-2.1324, -2.8200, -2.9283, -3.3724, -3.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3709, device='cuda:0', dtype=torch.float64)
tensor([-2.1410, -2.8270, -2.9289, -3.3943, -3.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5102, device='cuda:0', dtype=torch.float64)
tensor([-2.1463, -2.8363, -2.9235, -3.4033, -3.3843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5755, device='cuda:0', dtype=torch.float64)
tensor([-2.1440, -2.8382, -2.9144, -3.3884, -3.3827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5025, device='cuda:0', dtype=torch.float64)
tensor([-2.1354, -2.8375, -2.9088, -3.3839, -3.3864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2300, device='cuda:0', dtype=torch.float64)
tensor([-2.1265, -2.8392, -2.9118, -3.3909, -3.4008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5084, device='cuda:0', dtype=torch.float64)
tensor([-2.1196, -2.8422, -2.9217, -3.4060, -3.4195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2676, device='cuda:0', dtype=torch.float64)
tensor([-2.1082, -2.8453, -2.9393, -3.4216, -3.4320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4376, device='cuda:0', dtype=torch.float64)
tensor([-2.1037, -2.8521, -2.9558, -3.4405, -3.4423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5056, device='cuda:0', dtype=torch.float64)
tensor([-2.1035, -2.8634, -2.9715, -3.4673, -3.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7742, device='cuda:0', dtype=torch.float64)
tensor([-2.1149, -2.8798, -2.9743, -3.4147, -3.4460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3526, device='cuda:0', dtype=torch.float64)
tensor([-2.1242, -2.9033, -2.9735, -3.3785, -3.4539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3450, device='cuda:0', dtype=torch.float64)
tensor([-2.1240, -2.9169, -2.9777, -3.3604, -3.4536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4704, device='cuda:0', dtype=torch.float64)
tensor([-2.1161, -2.9312, -2.9786, -3.3605, -3.4418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4078, device='cuda:0', dtype=torch.float64)
tensor([-2.1054, -2.9421, -2.9787, -3.3557, -3.4346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3787, device='cuda:0', dtype=torch.float64)
tensor([-2.0938, -2.9522, -2.9860, -3.3703, -3.4245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3342, device='cuda:0', dtype=torch.float64)
tensor([-2.0813, -2.9664, -2.9950, -3.3831, -3.4219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6348, device='cuda:0', dtype=torch.float64)
tensor([-2.0739, -2.9860, -3.0036, -3.4078, -3.4218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5266, device='cuda:0', dtype=torch.float64)
tensor([-2.0714, -3.0065, -3.0049, -3.4149, -3.4231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5977, device='cuda:0', dtype=torch.float64)
tensor([-2.0767, -3.0383, -3.0002, -3.4353, -3.4304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4048, device='cuda:0', dtype=torch.float64)
tensor([-2.0788, -3.0682, -2.9955, -3.4639, -3.4364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6256, device='cuda:0', dtype=torch.float64)
tensor([-2.0803, -3.0814, -2.9806, -3.4927, -3.4353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6131, device='cuda:0', dtype=torch.float64)
tensor([-2.0766, -3.0860, -2.9719, -3.5249, -3.4380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-2.0697, -3.0953, -2.9708, -3.5679, -3.4521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4766, device='cuda:0', dtype=torch.float64)
tensor([-2.0612, -3.0890, -2.9843, -3.5672, -3.4714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3963, device='cuda:0', dtype=torch.float64)
tensor([-2.0521, -3.0605, -2.9890, -3.5095, -3.4780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2634, device='cuda:0', dtype=torch.float64)
tensor([-2.0493, -3.0365, -2.9945, -3.4520, -3.4842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3415, device='cuda:0', dtype=torch.float64)
tensor([-2.0585, -3.0306, -2.9950, -3.4204, -3.5044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1796, device='cuda:0', dtype=torch.float64)
tensor([-2.0693, -3.0303, -2.9975, -3.4098, -3.5180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3431, device='cuda:0', dtype=torch.float64)
tensor([-2.0805, -3.0316, -3.0084, -3.4038, -3.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2718, device='cuda:0', dtype=torch.float64)
tensor([-2.0880, -3.0367, -3.0187, -3.3906, -3.5161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2313, device='cuda:0', dtype=torch.float64)
tensor([-2.0949, -3.0344, -3.0291, -3.3782, -3.5068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4525, device='cuda:0', dtype=torch.float64)
tensor([-2.1128, -3.0400, -3.0318, -3.3660, -3.5004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5413, device='cuda:0', dtype=torch.float64)
tensor([-2.1269, -3.0388, -3.0295, -3.3546, -3.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3988, device='cuda:0', dtype=torch.float64)
tensor([-2.1484, -3.0429, -3.0172, -3.3478, -3.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4775, device='cuda:0', dtype=torch.float64)
tensor([-2.1706, -3.0399, -3.0039, -3.3468, -3.5034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4636, device='cuda:0', dtype=torch.float64)
tensor([-2.1813, -3.0337, -3.0010, -3.3614, -3.5126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4280, device='cuda:0', dtype=torch.float64)
tensor([-2.1812, -3.0164, -3.0056, -3.3871, -3.5106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2199, device='cuda:0', dtype=torch.float64)
tensor([-2.1756, -2.9928, -3.0176, -3.4150, -3.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3776, device='cuda:0', dtype=torch.float64)
tensor([-2.1651, -2.9666, -3.0241, -3.4332, -3.4858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([-2.1569, -2.9505, -3.0404, -3.4872, -3.4741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4394, device='cuda:0', dtype=torch.float64)
tensor([-2.1528, -2.9440, -3.0599, -3.5439, -3.4793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5428, device='cuda:0', dtype=torch.float64)
tensor([-2.1489, -2.9209, -3.0692, -3.5227, -3.4853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6263, device='cuda:0', dtype=torch.float64)
tensor([-2.1499, -2.9026, -3.0729, -3.5190, -3.4921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3009, device='cuda:0', dtype=torch.float64)
tensor([-2.1571, -2.8964, -3.0751, -3.5295, -3.5023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5376, device='cuda:0', dtype=torch.float64)
tensor([-2.1609, -2.8975, -3.0763, -3.5242, -3.5091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4170, device='cuda:0', dtype=torch.float64)
tensor([-2.1623, -2.9013, -3.0842, -3.5219, -3.5095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5271, device='cuda:0', dtype=torch.float64)
tensor([-2.1713, -2.9181, -3.0953, -3.5250, -3.5153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1570, device='cuda:0', dtype=torch.float64)
tensor([-2.1729, -2.9318, -3.1059, -3.5259, -3.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-2.1754, -2.9347, -3.1154, -3.5150, -3.5190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4685, device='cuda:0', dtype=torch.float64)
tensor([-2.1787, -2.9377, -3.1167, -3.4962, -3.5151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5500, device='cuda:0', dtype=torch.float64)
tensor([-2.1723, -2.9265, -3.1078, -3.4911, -3.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5035, device='cuda:0', dtype=torch.float64)
tensor([-2.1683, -2.9093, -3.0981, -3.4731, -3.5243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2491, device='cuda:0', dtype=torch.float64)
tensor([-2.1642, -2.8959, -3.0994, -3.4664, -3.5275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3339, device='cuda:0', dtype=torch.float64)
tensor([-2.1704, -2.8938, -3.0969, -3.4538, -3.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5822, device='cuda:0', dtype=torch.float64)
tensor([-2.1859, -2.9051, -3.0901, -3.4008, -3.5289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5194, device='cuda:0', dtype=torch.float64)
tensor([-2.2064, -2.9364, -3.0784, -3.3607, -3.5333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4093, device='cuda:0', dtype=torch.float64)
tensor([-2.2153, -2.9628, -3.0682, -3.3514, -3.5344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3467, device='cuda:0', dtype=torch.float64)
tensor([-2.2077, -2.9718, -3.0672, -3.3574, -3.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4963, device='cuda:0', dtype=torch.float64)
tensor([-2.1971, -2.9793, -3.0655, -3.3557, -3.5162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4336, device='cuda:0', dtype=torch.float64)
tensor([-2.1889, -2.9804, -3.0702, -3.3416, -3.5093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([-2.1860, -2.9987, -3.0707, -3.3379, -3.5096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3408, device='cuda:0', dtype=torch.float64)
tensor([-2.1894, -3.0154, -3.0681, -3.3439, -3.5104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5647, device='cuda:0', dtype=torch.float64)
tensor([-2.1904, -3.0476, -3.0712, -3.3666, -3.5194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0931, device='cuda:0', dtype=torch.float64)
tensor([-2.1825, -3.0650, -3.0733, -3.3845, -3.5221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3983, device='cuda:0', dtype=torch.float64)
tensor([-2.1761, -3.0826, -3.0777, -3.3982, -3.5258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3183, device='cuda:0', dtype=torch.float64)
tensor([-2.1690, -3.0965, -3.0772, -3.4073, -3.5275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2586, device='cuda:0', dtype=torch.float64)
tensor([-2.1584, -3.0938, -3.0832, -3.4310, -3.5290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4609, device='cuda:0', dtype=torch.float64)
tensor([-2.1614, -3.1040, -3.0793, -3.4517, -3.5336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4837, device='cuda:0', dtype=torch.float64)
tensor([-2.1624, -3.1111, -3.0764, -3.4752, -3.5362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3859, device='cuda:0', dtype=torch.float64)
tensor([-2.1702, -3.1134, -3.0725, -3.4873, -3.5422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3568, device='cuda:0', dtype=torch.float64)
tensor([-2.1805, -3.1110, -3.0687, -3.4853, -3.5469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2268, device='cuda:0', dtype=torch.float64)
tensor([-2.1846, -3.0994, -3.0667, -3.4876, -3.5523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5073, device='cuda:0', dtype=torch.float64)
tensor([-2.1907, -3.0848, -3.0604, -3.4831, -3.5568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-2.1942, -3.0694, -3.0528, -3.4851, -3.5567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6423, device='cuda:0', dtype=torch.float64)
tensor([-2.1906, -3.0387, -3.0534, -3.5082, -3.5511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4497, device='cuda:0', dtype=torch.float64)
tensor([-2.1942, -3.0169, -3.0459, -3.5092, -3.5423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3106, device='cuda:0', dtype=torch.float64)
tensor([-2.2029, -2.9980, -3.0329, -3.4956, -3.5339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6551, device='cuda:0', dtype=torch.float64)
tensor([-2.2082, -2.9898, -3.0286, -3.4834, -3.5290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2525, device='cuda:0', dtype=torch.float64)
tensor([-2.2160, -2.9891, -3.0224, -3.4736, -3.5216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4704, device='cuda:0', dtype=torch.float64)
tensor([-2.2099, -2.9760, -3.0294, -3.4651, -3.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4282, device='cuda:0', dtype=torch.float64)
tensor([-2.2014, -2.9659, -3.0374, -3.4586, -3.4923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-2.1907, -2.9572, -3.0454, -3.4616, -3.4823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5903, device='cuda:0', dtype=torch.float64)
tensor([-2.1876, -2.9588, -3.0517, -3.4560, -3.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1773, device='cuda:0', dtype=torch.float64)
tensor([-2.1937, -2.9681, -3.0598, -3.4521, -3.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1985, device='cuda:0', dtype=torch.float64)
tensor([-2.1931, -2.9790, -3.0652, -3.4432, -3.4759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3219, device='cuda:0', dtype=torch.float64)
tensor([-2.1913, -2.9917, -3.0643, -3.4510, -3.4819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2724, device='cuda:0', dtype=torch.float64)
tensor([-2.1903, -3.0045, -3.0618, -3.4741, -3.4913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3925, device='cuda:0', dtype=torch.float64)
tensor([-2.1959, -3.0185, -3.0498, -3.5210, -3.5066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2731, device='cuda:0', dtype=torch.float64)
tensor([-2.2018, -3.0302, -3.0368, -3.5661, -3.5147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6428, device='cuda:0', dtype=torch.float64)
tensor([-2.2092, -3.0298, -3.0360, -3.5742, -3.5203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5102, device='cuda:0', dtype=torch.float64)
tensor([-2.2168, -3.0296, -3.0455, -3.5820, -3.5291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-2.2274, -3.0331, -3.0571, -3.5970, -3.5448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7627, device='cuda:0', dtype=torch.float64)
tensor([-2.2424, -3.0276, -3.0480, -3.5534, -3.5576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4011, device='cuda:0', dtype=torch.float64)
tensor([-2.2664, -3.0313, -3.0385, -3.5345, -3.5889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3276, device='cuda:0', dtype=torch.float64)
tensor([-2.2896, -3.0460, -3.0375, -3.5648, -3.6477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5117, device='cuda:0', dtype=torch.float64)
tensor([-2.3045, -3.0574, -3.0447, -3.5939, -3.6677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3509, device='cuda:0', dtype=torch.float64)
tensor([-2.3091, -3.0516, -3.0461, -3.5780, -3.6342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3353, device='cuda:0', dtype=torch.float64)
tensor([-2.2998, -3.0454, -3.0587, -3.5703, -3.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2862, device='cuda:0', dtype=torch.float64)
tensor([-2.2837, -3.0396, -3.0727, -3.5836, -3.5783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3245, device='cuda:0', dtype=torch.float64)
tensor([-2.2698, -3.0275, -3.0880, -3.6052, -3.5623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2173, device='cuda:0', dtype=torch.float64)
tensor([-2.2623, -3.0246, -3.0962, -3.6275, -3.5586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6457, device='cuda:0', dtype=torch.float64)
tensor([-2.2693, -3.0419, -3.0987, -3.6327, -3.5576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3770, device='cuda:0', dtype=torch.float64)
tensor([-2.2833, -3.0639, -3.1016, -3.6368, -3.5632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4680, device='cuda:0', dtype=torch.float64)
tensor([-2.2939, -3.0730, -3.1078, -3.6114, -3.5502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3789, device='cuda:0', dtype=torch.float64)
tensor([-2.3085, -3.0739, -3.1166, -3.5702, -3.5370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3280, device='cuda:0', dtype=torch.float64)
tensor([-2.3181, -3.0611, -3.1284, -3.5612, -3.5144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2942, device='cuda:0', dtype=torch.float64)
tensor([-2.3299, -3.0519, -3.1395, -3.5626, -3.4929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4241, device='cuda:0', dtype=torch.float64)
tensor([-2.3406, -3.0450, -3.1414, -3.5464, -3.4866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6186, device='cuda:0', dtype=torch.float64)
tensor([-2.3483, -3.0455, -3.1423, -3.5199, -3.4770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3043, device='cuda:0', dtype=torch.float64)
tensor([-2.3553, -3.0454, -3.1390, -3.4843, -3.4770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3952, device='cuda:0', dtype=torch.float64)
tensor([-2.3677, -3.0558, -3.1284, -3.4605, -3.4885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4181, device='cuda:0', dtype=torch.float64)
tensor([-2.3837, -3.0704, -3.1206, -3.4628, -3.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1743, device='cuda:0', dtype=torch.float64)
tensor([-2.3903, -3.0803, -3.1149, -3.4704, -3.5025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2755, device='cuda:0', dtype=torch.float64)
tensor([-2.3884, -3.0870, -3.1141, -3.4468, -3.4962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5246, device='cuda:0', dtype=torch.float64)
tensor([-2.3791, -3.0967, -3.1185, -3.4364, -3.5047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1290, device='cuda:0', dtype=torch.float64)
tensor([-2.3779, -3.1138, -3.1164, -3.4432, -3.5253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6050, device='cuda:0', dtype=torch.float64)
tensor([-2.3841, -3.1238, -3.1059, -3.4584, -3.5377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3568, device='cuda:0', dtype=torch.float64)
tensor([-2.3873, -3.1226, -3.0953, -3.4710, -3.5437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3261, device='cuda:0', dtype=torch.float64)
tensor([-2.3948, -3.1222, -3.0847, -3.4744, -3.5530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-2.4055, -3.1284, -3.0807, -3.4727, -3.5741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1980, device='cuda:0', dtype=torch.float64)
tensor([-2.4216, -3.1430, -3.0838, -3.4759, -3.6016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4537, device='cuda:0', dtype=torch.float64)
tensor([-2.4302, -3.1565, -3.0865, -3.4707, -3.6118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3765, device='cuda:0', dtype=torch.float64)
tensor([-2.4224, -3.1553, -3.0951, -3.4499, -3.6025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3379, device='cuda:0', dtype=torch.float64)
tensor([-2.4134, -3.1539, -3.1063, -3.4694, -3.6105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1881, device='cuda:0', dtype=torch.float64)
tensor([-2.4006, -3.1593, -3.1173, -3.5033, -3.6228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1808, device='cuda:0', dtype=torch.float64)
tensor([-2.3811, -3.1571, -3.1348, -3.5449, -3.6299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0878, device='cuda:0', dtype=torch.float64)
tensor([-2.3612, -3.1557, -3.1562, -3.6080, -3.6371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2809, device='cuda:0', dtype=torch.float64)
tensor([-2.3409, -3.1497, -3.1735, -3.6487, -3.6420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2858, device='cuda:0', dtype=torch.float64)
tensor([-2.3225, -3.1400, -3.1896, -3.6591, -3.6419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2530, device='cuda:0', dtype=torch.float64)
tensor([-2.3143, -3.1448, -3.2011, -3.6405, -3.6401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6089, device='cuda:0', dtype=torch.float64)
tensor([-2.3057, -3.1555, -3.2148, -3.6304, -3.6389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4777, device='cuda:0', dtype=torch.float64)
tensor([-2.2934, -3.1565, -3.2303, -3.6433, -3.6343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1683, device='cuda:0', dtype=torch.float64)
tensor([-2.2763, -3.1445, -3.2423, -3.6499, -3.6236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1940, device='cuda:0', dtype=torch.float64)
tensor([-2.2693, -3.1460, -3.2503, -3.6630, -3.6147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2030, device='cuda:0', dtype=torch.float64)
tensor([-2.2647, -3.1543, -3.2597, -3.6810, -3.6051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7432, device='cuda:0', dtype=torch.float64)
tensor([-2.2648, -3.1561, -3.2564, -3.6848, -3.5906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1331, device='cuda:0', dtype=torch.float64)
tensor([-2.2696, -3.1465, -3.2575, -3.6781, -3.5769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2441, device='cuda:0', dtype=torch.float64)
tensor([-2.2874, -3.1349, -3.2657, -3.6697, -3.5694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3134, device='cuda:0', dtype=torch.float64)
tensor([-2.3151, -3.1321, -3.2733, -3.6755, -3.5647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2375, device='cuda:0', dtype=torch.float64)
tensor([-2.3593, -3.1456, -3.2722, -3.6401, -3.5655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1674, device='cuda:0', dtype=torch.float64)
tensor([-2.3996, -3.1542, -3.2725, -3.6012, -3.5683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1642, device='cuda:0', dtype=torch.float64)
tensor([-2.4376, -3.1662, -3.2648, -3.5788, -3.5754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3031, device='cuda:0', dtype=torch.float64)
tensor([-2.4752, -3.1827, -3.2482, -3.5619, -3.5903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4360, device='cuda:0', dtype=torch.float64)
tensor([-2.5184, -3.2068, -3.2286, -3.7739, -3.6149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1993, device='cuda:0', dtype=torch.float64)
tensor([-2.5466, -3.2227, -3.2130, -4.1729, -3.6360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3577, device='cuda:0', dtype=torch.float64)
tensor([-2.5528, -3.2217, -3.1935, -3.5967, -3.6449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2329, device='cuda:0', dtype=torch.float64)
tensor([-2.5511, -3.2234, -3.1816, -3.5293, -3.6451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-2.5609, -3.2501, -3.1747, -3.5566, -3.6515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2899, device='cuda:0', dtype=torch.float64)
tensor([-2.5676, -3.2816, -3.1704, -3.5754, -3.6652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4881, device='cuda:0', dtype=torch.float64)
tensor([-2.5785, -3.2968, -3.1627, -3.5520, -3.6856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1891, device='cuda:0', dtype=torch.float64)
tensor([-2.5912, -3.2989, -3.1556, -3.5165, -3.7084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6365, device='cuda:0', dtype=torch.float64)
tensor([-2.5904, -3.2934, -3.1558, -3.5047, -3.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5012, device='cuda:0', dtype=torch.float64)
tensor([-2.5911, -3.2957, -3.1675, -3.5000, -3.7511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6273, device='cuda:0', dtype=torch.float64)
tensor([-2.5909, -3.2933, -3.1801, -3.4981, -3.7644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4785, device='cuda:0', dtype=torch.float64)
tensor([-2.5885, -3.2933, -3.1933, -3.5013, -3.7729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2699, device='cuda:0', dtype=torch.float64)
tensor([-2.5802, -3.2874, -3.2139, -3.4928, -3.7605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0319, device='cuda:0', dtype=torch.float64)
tensor([-2.5743, -3.2779, -3.2322, -3.4951, -3.7593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2150, device='cuda:0', dtype=torch.float64)
tensor([-2.5745, -3.2836, -3.2549, -3.5104, -3.7646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2562, device='cuda:0', dtype=torch.float64)
tensor([-2.5787, -3.2611, -3.2667, -3.5225, -3.7769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3729, device='cuda:0', dtype=torch.float64)
tensor([-2.5851, -3.2286, -3.2714, -3.5252, -3.7947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-2.6013, -3.2006, -3.2777, -3.5307, -3.8169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2318, device='cuda:0', dtype=torch.float64)
tensor([-2.6243, -3.2078, -3.2881, -3.5520, -3.8508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3836, device='cuda:0', dtype=torch.float64)
tensor([-2.6355, -3.2191, -3.3001, -3.5801, -3.8560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2054, device='cuda:0', dtype=torch.float64)
tensor([-2.6269, -3.2225, -3.3145, -3.6017, -3.8433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3805, device='cuda:0', dtype=torch.float64)
tensor([-2.6145, -3.2351, -3.3289, -3.6366, -3.8371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2899, device='cuda:0', dtype=torch.float64)
tensor([-2.5936, -3.2509, -3.3546, -3.6956, -3.8364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4794, device='cuda:0', dtype=torch.float64)
tensor([-2.5839, -3.2870, -3.3718, -3.7593, -3.8585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3120, device='cuda:0', dtype=torch.float64)
tensor([-2.5867, -3.3226, -3.3794, -3.8164, -3.8846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3745, device='cuda:0', dtype=torch.float64)
tensor([-2.5904, -3.3506, -3.3892, -3.8320, -3.9005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2858, device='cuda:0', dtype=torch.float64)
tensor([-2.5939, -3.3456, -3.3786, -3.7509, -3.8943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5496, device='cuda:0', dtype=torch.float64)
tensor([-2.6155, -3.3371, -3.3531, -3.6418, -3.8828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2111, device='cuda:0', dtype=torch.float64)
tensor([-2.6504, -3.3603, -3.3313, -3.6171, -3.9078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2872, device='cuda:0', dtype=torch.float64)
tensor([-2.6932, -3.4086, -3.3262, -3.7451, -4.0015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4215, device='cuda:0', dtype=torch.float64)
tensor([-2.7062, -3.4320, -3.3378, -3.8926, -4.0626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1678, device='cuda:0', dtype=torch.float64)
tensor([-2.7070, -3.4287, -3.3437, -3.7577, -4.0246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3186, device='cuda:0', dtype=torch.float64)
tensor([-2.6863, -3.3844, -3.3571, -3.6214, -3.9532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6720, device='cuda:0', dtype=torch.float64)
tensor([-2.6704, -3.3386, -3.3933, -3.5964, -3.9419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2902, device='cuda:0', dtype=torch.float64)
tensor([-2.6553, -3.3058, -3.4475, -3.6180, -3.9662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2973, device='cuda:0', dtype=torch.float64)
tensor([-2.6682, -3.2843, -3.4946, -3.6429, -4.0218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3447, device='cuda:0', dtype=torch.float64)
tensor([-2.7005, -3.2714, -3.5285, -3.7008, -4.0836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3958, device='cuda:0', dtype=torch.float64)
tensor([-2.7586, -3.2637, -3.5374, -3.7817, -4.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5083, device='cuda:0', dtype=torch.float64)
tensor([-2.7990, -3.2657, -3.5136, -3.8302, -4.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2750, device='cuda:0', dtype=torch.float64)
tensor([-2.8182, -3.2811, -3.4775, -3.8097, -4.0945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2453, device='cuda:0', dtype=torch.float64)
tensor([-2.8400, -3.3084, -3.4513, -3.7854, -4.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4027, device='cuda:0', dtype=torch.float64)
tensor([-2.8652, -3.3738, -3.4243, -3.8497, -4.1050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3581, device='cuda:0', dtype=torch.float64)
tensor([-2.9000, -3.4076, -3.4132, -3.8462, -4.1330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-2.9283, -3.4336, -3.4075, -3.7938, -4.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2889, device='cuda:0', dtype=torch.float64)
tensor([-2.9579, -3.4622, -3.4163, -3.8182, -4.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0941, device='cuda:0', dtype=torch.float64)
tensor([-2.9724, -3.4774, -3.4339, -3.8567, -4.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1723, device='cuda:0', dtype=torch.float64)
tensor([-2.9773, -3.4783, -3.4598, -3.7974, -4.1598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2587, device='cuda:0', dtype=torch.float64)
tensor([-2.9826, -3.4978, -3.4908, -3.8119, -4.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2008, device='cuda:0', dtype=torch.float64)
tensor([-2.9957, -3.5275, -3.5028, -3.8176, -4.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4697, device='cuda:0', dtype=torch.float64)
tensor([-3.0062, -3.5642, -3.5035, -3.8503, -4.1057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4609, device='cuda:0', dtype=torch.float64)
tensor([-3.0179, -3.6108, -3.5113, -3.8848, -4.1092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1913, device='cuda:0', dtype=torch.float64)
tensor([-3.0313, -3.6551, -3.5154, -3.8682, -4.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-3.0390, -3.6857, -3.5213, -3.8123, -4.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1869, device='cuda:0', dtype=torch.float64)
tensor([-3.0560, -3.7382, -3.5226, -3.7753, -4.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1909, device='cuda:0', dtype=torch.float64)
tensor([-3.0649, -3.7800, -3.5207, -3.7383, -4.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0298, device='cuda:0', dtype=torch.float64)
tensor([-3.0751, -3.8134, -3.5169, -3.7500, -4.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4010, device='cuda:0', dtype=torch.float64)
tensor([-3.0891, -3.8602, -3.5168, -3.7409, -4.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3216, device='cuda:0', dtype=torch.float64)
tensor([-3.0854, -3.8648, -3.5229, -3.7384, -4.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9832, device='cuda:0', dtype=torch.float64)
tensor([-3.0803, -3.8630, -3.5344, -3.7701, -4.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0176, device='cuda:0', dtype=torch.float64)
tensor([-3.0854, -3.8710, -3.5449, -3.7597, -4.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-3.1050, -3.8879, -3.5520, -3.7916, -4.2724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3920, device='cuda:0', dtype=torch.float64)
tensor([-3.1304, -3.9088, -3.5604, -3.7930, -4.2994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1628, device='cuda:0', dtype=torch.float64)
tensor([-3.1543, -3.9278, -3.5628, -3.8081, -4.3133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0817, device='cuda:0', dtype=torch.float64)
tensor([-3.1790, -3.9363, -3.5658, -3.8204, -4.3229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9870, device='cuda:0', dtype=torch.float64)
tensor([-3.1982, -3.9431, -3.5667, -3.8474, -4.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2730, device='cuda:0', dtype=torch.float64)
tensor([-3.2249, -3.9555, -3.5671, -3.8859, -4.3394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3493, device='cuda:0', dtype=torch.float64)
tensor([-3.2447, -3.9665, -3.5716, -3.9248, -4.3398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3456, device='cuda:0', dtype=torch.float64)
tensor([-3.2848, -3.9808, -3.5846, -3.9663, -4.3662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3647, device='cuda:0', dtype=torch.float64)
tensor([-3.3367, -3.9963, -3.6077, -4.0141, -4.4146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4606, device='cuda:0', dtype=torch.float64)
tensor([-3.3916, -4.0166, -3.6321, -4.0703, -4.4961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2750, device='cuda:0', dtype=torch.float64)
tensor([-3.4585, -4.0539, -3.6646, -4.1290, -4.6057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2791, device='cuda:0', dtype=torch.float64)
tensor([-3.5179, -4.0962, -3.6902, -4.1940, -4.7363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0683, device='cuda:0', dtype=torch.float64)
tensor([-3.5562, -4.1392, -3.7133, -4.2624, -4.8768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2509, device='cuda:0', dtype=torch.float64)
tensor([-3.5866, -4.1681, -3.7164, -4.3010, -4.8917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2382, device='cuda:0', dtype=torch.float64)
tensor([-3.6063, -4.1847, -3.7108, -4.3320, -4.8408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5314, device='cuda:0', dtype=torch.float64)
tensor([-3.6333, -4.2032, -3.7075, -4.4186, -4.8001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1890, device='cuda:0', dtype=torch.float64)
tensor([-3.6725, -4.2317, -3.7131, -4.5287, -4.8307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8958, device='cuda:0', dtype=torch.float64)
tensor([-3.7087, -4.2634, -3.7207, -4.6632, -4.8553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2576, device='cuda:0', dtype=torch.float64)
tensor([-3.7453, -4.3083, -3.7183, -4.7823, -4.8604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1315, device='cuda:0', dtype=torch.float64)
tensor([-3.7695, -4.3452, -3.7126, -4.8699, -4.8386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2914, device='cuda:0', dtype=torch.float64)
tensor([-3.8006, -4.3932, -3.7121, -5.0437, -4.8403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3145, device='cuda:0', dtype=torch.float64)
tensor([-3.8301, -4.4324, -3.7171, -5.1046, -4.8803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4598, device='cuda:0', dtype=torch.float64)
tensor([-3.8787, -4.4693, -3.7126, -5.2607, -4.9021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3699, device='cuda:0', dtype=torch.float64)
tensor([-3.9305, -4.5254, -3.7177, -5.5283, -4.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-3.9984, -4.5886, -3.7374, -5.6416, -4.9416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0694, device='cuda:0', dtype=torch.float64)
tensor([-4.0789, -4.6398, -3.7532, -5.5716, -5.0050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0353, device='cuda:0', dtype=torch.float64)
tensor([-4.1748, -4.6999, -3.7677, -5.5149, -5.0913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4457, device='cuda:0', dtype=torch.float64)
tensor([-4.2585, -4.7415, -3.7960, -5.4561, -5.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1491, device='cuda:0', dtype=torch.float64)
tensor([-4.3329, -4.7874, -3.8234, -5.4261, -5.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2152, device='cuda:0', dtype=torch.float64)
tensor([-4.3891, -4.8318, -3.8580, -5.6304, -5.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9825, device='cuda:0', dtype=torch.float64)
tensor([-4.4512, -4.9031, -3.9046, -5.8096, -5.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1211, device='cuda:0', dtype=torch.float64)
tensor([-4.5324, -4.9734, -3.9509, -5.9680, -5.4595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3795, device='cuda:0', dtype=torch.float64)
tensor([-4.6142, -5.0457, -4.0082, -5.9633, -5.5993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1859, device='cuda:0', dtype=torch.float64)
tensor([-4.6963, -5.1415, -4.0556, -5.8265, -5.8795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9989, device='cuda:0', dtype=torch.float64)
tensor([-4.7720, -5.3268, -4.1017, -5.8270, -6.4530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0044, device='cuda:0', dtype=torch.float64)
tensor([-4.8650, -5.5045, -4.1662, -5.9794, -7.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3609, device='cuda:0', dtype=torch.float64)
tensor([-4.9463, -5.7905, -4.2309, -6.2593, -8.6313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-5.0419, -6.1218, -4.3252, -6.7213, -9.9628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0875, device='cuda:0', dtype=torch.float64)
tensor([ -5.1303,  -6.5302,  -4.4192,  -7.5034, -11.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1530, device='cuda:0', dtype=torch.float64)
tensor([ -5.2644,  -7.3142,  -4.5648,  -9.9327, -12.8360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9574, device='cuda:0', dtype=torch.float64)
tensor([ -5.4477,  -8.1931,  -4.7600, -13.3404, -14.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2845, device='cuda:0', dtype=torch.float64)
tensor([ -5.7336,  -8.8395,  -4.9705, -15.7405, -16.1009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9890, device='cuda:0', dtype=torch.float64)
tensor([ -6.1075,  -9.5186,  -5.1733, -17.7822, -17.4722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0834, device='cuda:0', dtype=torch.float64)
tensor([ -6.4226, -10.0116,  -5.3801, -19.1021, -18.5453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2361, device='cuda:0', dtype=torch.float64)
tensor([ -6.7191, -10.4598,  -5.5776, -20.2682, -19.3750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0818, device='cuda:0', dtype=torch.float64)
tensor([ -6.9545, -11.0870,  -5.7911, -21.6738, -20.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1963, device='cuda:0', dtype=torch.float64)
tensor([ -6.9136, -10.9567,  -5.8179, -21.0077, -20.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([ -6.9788, -11.4550,  -5.8665, -21.8331, -20.7592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1520, device='cuda:0', dtype=torch.float64)
tensor([ -7.0967, -12.0252,  -5.9552, -22.8850, -21.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([ -7.2622, -12.7400,  -6.0757, -24.2923, -21.9767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2022, device='cuda:0', dtype=torch.float64)
tensor([ -7.6025, -14.0053,  -6.3061, -26.6486, -23.0879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0983, device='cuda:0', dtype=torch.float64)
tensor([ -8.0092, -15.4832,  -6.5851, -29.0820, -24.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2281, device='cuda:0', dtype=torch.float64)
tensor([ -8.1194, -15.8474,  -6.8154, -29.7285, -24.6794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0369, device='cuda:0', dtype=torch.float64)
tensor([ -7.9400, -16.1018,  -6.8834, -29.9822, -25.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9285, device='cuda:0', dtype=torch.float64)
tensor([ -7.6730, -16.0212,  -6.8621, -29.5540, -25.7188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3308, device='cuda:0', dtype=torch.float64)
tensor([ -7.6988, -16.4743,  -6.9136, -30.1200, -26.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([ -7.7999, -16.5633,  -7.0280, -30.3265, -26.4149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0424, device='cuda:0', dtype=torch.float64)
tensor([ -7.8350, -16.1169,  -7.0699, -29.5848, -26.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2046, device='cuda:0', dtype=torch.float64)
tensor([ -8.2783, -16.5138,  -7.1510, -30.0315, -26.8401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9408, device='cuda:0', dtype=torch.float64)
tensor([ -8.6935, -16.1861,  -7.2144, -29.5707, -26.8096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1886, device='cuda:0', dtype=torch.float64)
tensor([ -9.1904, -15.6770,  -7.1990, -28.6183, -26.9125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0312, device='cuda:0', dtype=torch.float64)
tensor([ -9.6491, -14.5759,  -7.0572, -26.7382, -26.9572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9959, device='cuda:0', dtype=torch.float64)
tensor([-10.3985, -13.9364,  -6.9183, -25.3539, -27.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1408, device='cuda:0', dtype=torch.float64)
tensor([-11.3727, -13.4609,  -6.7913, -24.8661, -27.3940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2012, device='cuda:0', dtype=torch.float64)
tensor([-12.2497, -13.4337,  -6.6940, -25.2503, -27.6538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1587, device='cuda:0', dtype=torch.float64)
tensor([-12.8865, -13.3425,  -6.6835, -25.4602, -27.5617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2168, device='cuda:0', dtype=torch.float64)
tensor([-13.3352, -13.4976,  -6.7830, -26.3675, -27.7207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2093, device='cuda:0', dtype=torch.float64)
tensor([-13.8923, -14.4819,  -6.9528, -28.3522, -28.4975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1501, device='cuda:0', dtype=torch.float64)
tensor([-14.4134, -15.1574,  -7.0905, -29.7210, -29.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-15.0308, -16.1186,  -7.1709, -31.1255, -29.4536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0126, device='cuda:0', dtype=torch.float64)
tensor([-15.7042, -17.0429,  -7.2376, -32.5063, -30.0478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0628, device='cuda:0', dtype=torch.float64)
tensor([-16.2404, -17.2374,  -7.3417, -32.8760, -30.4856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2721, device='cuda:0', dtype=torch.float64)
tensor([-16.6442, -17.1211,  -7.4606, -32.6726, -30.9667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1533, device='cuda:0', dtype=torch.float64)
tensor([-17.0793, -17.5325,  -7.6529, -33.3871, -31.7998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-17.4776, -17.3384,  -7.8974, -33.4065, -32.2397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9913, device='cuda:0', dtype=torch.float64)
tensor([-17.8850, -17.3730,  -8.1194, -34.0132, -32.4251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-18.3702, -17.2734,  -8.3714, -34.3997, -32.4751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2279, device='cuda:0', dtype=torch.float64)
tensor([-18.9849, -16.6443,  -8.6994, -34.1112, -32.1776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1191, device='cuda:0', dtype=torch.float64)
tensor([-19.7282, -16.2272,  -9.0671, -34.1315, -31.6661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([-20.1466, -15.8494,  -9.3227, -34.1443, -31.3925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9793, device='cuda:0', dtype=torch.float64)
tensor([-20.2328, -14.7962,  -9.6353, -33.0759, -30.9651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0058, device='cuda:0', dtype=torch.float64)
tensor([-20.3783, -14.5854,  -9.9423, -33.4864, -31.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-20.5666, -14.3686, -10.2970, -33.7439, -31.3877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-20.5410, -13.6603, -10.7799, -32.9263, -31.6573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9722, device='cuda:0', dtype=torch.float64)
tensor([-20.1660, -12.4188, -11.4888, -30.7256, -31.9096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2319, device='cuda:0', dtype=torch.float64)
tensor([-19.7289, -11.4295, -12.2138, -28.4909, -32.0873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9185, device='cuda:0', dtype=torch.float64)
tensor([-19.2403, -11.1037, -12.9726, -27.3685, -32.4922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9984, device='cuda:0', dtype=torch.float64)
tensor([-18.7513, -11.0184, -13.6290, -26.9490, -32.7293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-18.1876, -11.0896, -14.1387, -26.3050, -32.9048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0996, device='cuda:0', dtype=torch.float64)
tensor([-17.9754, -11.3112, -14.5611, -26.7931, -33.1493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8025, device='cuda:0', dtype=torch.float64)
tensor([-17.9392, -11.6072, -15.0571, -27.5551, -33.5639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2394, device='cuda:0', dtype=torch.float64)
tensor([-17.3991, -11.8315, -15.6990, -27.9581, -34.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7847, device='cuda:0', dtype=torch.float64)
tensor([-17.0280, -12.0367, -16.0862, -29.2675, -34.8542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0796, device='cuda:0', dtype=torch.float64)
tensor([-16.6718, -12.1272, -16.4227, -30.8721, -35.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1330, device='cuda:0', dtype=torch.float64)
tensor([-16.1411, -12.2223, -16.5342, -31.8165, -35.2688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0232, device='cuda:0', dtype=torch.float64)
tensor([-15.6792, -12.4560, -16.6349, -33.4133, -35.7259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0041, device='cuda:0', dtype=torch.float64)
tensor([-15.1638, -12.8037, -16.5872, -34.7268, -36.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([-14.6154, -13.1566, -16.3668, -35.3320, -36.5355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0848, device='cuda:0', dtype=torch.float64)
tensor([-14.2714, -13.2627, -16.1584, -36.0892, -36.4978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0347, device='cuda:0', dtype=torch.float64)
tensor([-14.0973, -13.1621, -15.9809, -36.0276, -36.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-13.8167, -12.9193, -16.0870, -35.1494, -35.8792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0586, device='cuda:0', dtype=torch.float64)
tensor([-13.5534, -12.6238, -16.3615, -33.6990, -35.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2405, device='cuda:0', dtype=torch.float64)
tensor([-13.2880, -12.6240, -16.5497, -32.7980, -35.0514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1508, device='cuda:0', dtype=torch.float64)
tensor([-13.2788, -12.4806, -16.4975, -31.4264, -34.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9260, device='cuda:0', dtype=torch.float64)
tensor([-13.3321, -12.4447, -16.5918, -29.9290, -33.6224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9052, device='cuda:0', dtype=torch.float64)
tensor([-13.6077, -12.2278, -16.7126, -28.4058, -32.7981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0775, device='cuda:0', dtype=torch.float64)
tensor([-13.9607, -12.0853, -16.8663, -27.6203, -32.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0401, device='cuda:0', dtype=torch.float64)
tensor([-14.4547, -11.7964, -16.9718, -27.5595, -31.4163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1348, device='cuda:0', dtype=torch.float64)
tensor([-14.7313, -11.7019, -17.1514, -28.0760, -30.9478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1072, device='cuda:0', dtype=torch.float64)
tensor([-14.9292, -11.9884, -17.5442, -28.9838, -31.0580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0570, device='cuda:0', dtype=torch.float64)
tensor([-15.3005, -12.2966, -17.9189, -30.0523, -30.8438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9824, device='cuda:0', dtype=torch.float64)
tensor([-15.8474, -12.5579, -18.3179, -30.8719, -30.5856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-16.3260, -12.8082, -18.5927, -31.4010, -30.5583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([-16.7207, -13.0818, -18.8744, -31.2617, -30.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0435, device='cuda:0', dtype=torch.float64)
tensor([-17.2711, -13.2680, -19.0115, -30.5136, -30.6210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0124, device='cuda:0', dtype=torch.float64)
tensor([-17.8458, -13.4445, -19.2783, -30.4692, -30.7569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1493, device='cuda:0', dtype=torch.float64)
tensor([-18.3988, -13.7447, -19.8394, -31.1515, -30.4762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-18.9732, -14.0178, -20.1401, -31.2852, -30.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2070, device='cuda:0', dtype=torch.float64)
tensor([-19.9257, -14.1934, -20.3355, -31.6312, -29.6378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9262, device='cuda:0', dtype=torch.float64)
tensor([-20.6831, -14.2230, -20.4488, -32.3974, -29.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3179, device='cuda:0', dtype=torch.float64)
tensor([-21.1343, -14.3510, -20.5967, -32.8539, -29.3130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1834, device='cuda:0', dtype=torch.float64)
tensor([-21.0816, -14.5795, -20.5269, -32.7380, -29.5187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2873, device='cuda:0', dtype=torch.float64)
tensor([-21.0601, -14.7155, -20.3673, -31.5229, -29.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2377, device='cuda:0', dtype=torch.float64)
tensor([-21.2822, -14.7923, -20.3028, -30.2211, -29.3303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0524, device='cuda:0', dtype=torch.float64)
tensor([-21.5293, -14.8555, -20.2494, -28.7260, -28.6585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2959, device='cuda:0', dtype=torch.float64)
tensor([-21.8128, -14.9039, -20.2984, -27.2995, -27.8821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9482, device='cuda:0', dtype=torch.float64)
tensor([-21.9249, -14.8759, -20.2605, -25.8522, -27.3573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2960, device='cuda:0', dtype=torch.float64)
tensor([-21.9803, -14.6956, -20.0139, -24.5236, -27.0806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9999, device='cuda:0', dtype=torch.float64)
tensor([-22.0292, -14.6347, -19.9259, -24.1152, -26.9146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8676, device='cuda:0', dtype=torch.float64)
tensor([-22.1524, -14.5321, -19.7444, -23.9901, -26.4530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0528, device='cuda:0', dtype=torch.float64)
tensor([-22.0919, -14.4550, -19.7710, -24.0915, -26.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0569, device='cuda:0', dtype=torch.float64)
tensor([-22.0976, -14.4913, -20.0895, -24.1740, -25.8952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([-22.0848, -14.4156, -20.1048, -24.6113, -25.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9285, device='cuda:0', dtype=torch.float64)
tensor([-22.0511, -14.3905, -20.2900, -24.9255, -25.4416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-21.6766, -14.4491, -20.5536, -25.2130, -25.5246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9694, device='cuda:0', dtype=torch.float64)
tensor([-21.3904, -14.5536, -20.8432, -25.2003, -25.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8604, device='cuda:0', dtype=torch.float64)
tensor([-21.1779, -14.7267, -21.0057, -25.2354, -25.1806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9106, device='cuda:0', dtype=torch.float64)
tensor([-21.0567, -14.8431, -21.1361, -25.2336, -24.9884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1743, device='cuda:0', dtype=torch.float64)
tensor([-21.1910, -15.0929, -21.1918, -25.5776, -24.7840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0360, device='cuda:0', dtype=torch.float64)
tensor([-21.0867, -15.2677, -21.3686, -25.8796, -24.8137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0603, device='cuda:0', dtype=torch.float64)
tensor([-20.9212, -15.4013, -21.5029, -25.9261, -24.7987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-20.8627, -15.6280, -21.5563, -25.9191, -24.8940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0019, device='cuda:0', dtype=torch.float64)
tensor([-20.9127, -15.9308, -21.3549, -26.1472, -25.0263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-21.1117, -16.2621, -21.1905, -26.6732, -25.0484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0500, device='cuda:0', dtype=torch.float64)
tensor([-21.1868, -16.5960, -21.1041, -27.2751, -25.6430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0383, device='cuda:0', dtype=torch.float64)
tensor([-21.0537, -17.0173, -20.9130, -28.3242, -26.4682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8588, device='cuda:0', dtype=torch.float64)
tensor([-20.8599, -17.5240, -20.8593, -29.3848, -27.1788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9740, device='cuda:0', dtype=torch.float64)
tensor([-20.7446, -17.9507, -20.6606, -30.7275, -27.6747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9557, device='cuda:0', dtype=torch.float64)
tensor([-20.7777, -18.5569, -20.1139, -32.9870, -28.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8298, device='cuda:0', dtype=torch.float64)
tensor([-21.0107, -19.6024, -19.5795, -35.6929, -28.9460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2579, device='cuda:0', dtype=torch.float64)
tensor([-21.3576, -20.8496, -19.0793, -38.2981, -29.4605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0954, device='cuda:0', dtype=torch.float64)
tensor([-21.6126, -21.7512, -18.7503, -40.1934, -30.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9393, device='cuda:0', dtype=torch.float64)
tensor([-21.7940, -22.4835, -18.5097, -41.7405, -30.7102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0150, device='cuda:0', dtype=torch.float64)
tensor([-21.9318, -23.0160, -18.3243, -42.6520, -31.4022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8606, device='cuda:0', dtype=torch.float64)
tensor([-22.0182, -23.6070, -18.0480, -43.6861, -32.0707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9502, device='cuda:0', dtype=torch.float64)
tensor([-22.1357, -24.6060, -17.6649, -44.9354, -32.8777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-22.4318, -25.5870, -17.3396, -45.8554, -33.4945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3248, device='cuda:0', dtype=torch.float64)
tensor([-23.0129, -26.0676, -16.9894, -46.2858, -33.6571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9162, device='cuda:0', dtype=torch.float64)
tensor([-23.3633, -26.3271, -16.7489, -46.1191, -33.7673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8764, device='cuda:0', dtype=torch.float64)
tensor([-23.6825, -26.3864, -16.5498, -45.5627, -33.7388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([-24.2528, -26.6199, -16.3003, -45.6677, -33.8162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8707, device='cuda:0', dtype=torch.float64)
tensor([-24.7955, -26.9631, -16.0566, -45.4829, -34.0144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0795, device='cuda:0', dtype=torch.float64)
tensor([-25.3692, -27.6290, -15.8232, -46.0522, -34.3811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0208, device='cuda:0', dtype=torch.float64)
tensor([-25.9631, -28.2913, -15.6146, -46.8137, -34.6527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8486, device='cuda:0', dtype=torch.float64)
tensor([-26.4746, -29.1481, -15.4562, -47.8323, -34.9446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0511, device='cuda:0', dtype=torch.float64)
tensor([-27.1830, -30.4021, -15.3218, -49.0385, -35.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2510, device='cuda:0', dtype=torch.float64)
tensor([-27.8313, -31.3772, -14.9420, -49.7120, -35.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2457, device='cuda:0', dtype=torch.float64)
tensor([-28.5562, -32.3329, -14.6812, -50.2315, -34.9351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0275, device='cuda:0', dtype=torch.float64)
tensor([-29.4465, -33.2554, -14.3468, -50.6511, -34.4588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-30.4548, -33.8321, -14.2047, -50.2268, -34.0719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0025, device='cuda:0', dtype=torch.float64)
tensor([-31.1819, -33.8696, -14.1062, -49.3922, -33.5331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8573, device='cuda:0', dtype=torch.float64)
tensor([-31.7127, -33.8201, -14.0402, -48.4552, -33.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0036, device='cuda:0', dtype=torch.float64)
tensor([-32.5547, -34.6905, -13.7640, -48.2139, -32.8650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1635, device='cuda:0', dtype=torch.float64)
tensor([-33.7495, -35.6343, -13.4864, -47.9981, -32.6889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([-34.5196, -36.1401, -13.4349, -47.7625, -32.6556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0873, device='cuda:0', dtype=torch.float64)
tensor([-35.4622, -36.4653, -13.4186, -47.4990, -32.4301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0491, device='cuda:0', dtype=torch.float64)
tensor([-36.3814, -37.3146, -13.4882, -47.9178, -32.5564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0049, device='cuda:0', dtype=torch.float64)
tensor([-37.2606, -38.0449, -13.5428, -48.0232, -32.4218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([-37.6900, -37.9283, -13.6487, -47.4199, -31.8993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9669, device='cuda:0', dtype=torch.float64)
tensor([-37.4818, -37.0974, -13.8469, -46.2832, -31.4042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0050, device='cuda:0', dtype=torch.float64)
tensor([-37.2102, -36.2027, -14.0102, -45.1271, -30.9123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9051, device='cuda:0', dtype=torch.float64)
tensor([-36.9812, -35.5184, -14.1753, -44.1608, -30.5625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8954, device='cuda:0', dtype=torch.float64)
tensor([-36.3894, -34.8035, -14.3617, -43.3563, -30.5334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0273, device='cuda:0', dtype=torch.float64)
tensor([-35.7179, -33.7846, -14.6757, -41.5921, -30.3586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9319, device='cuda:0', dtype=torch.float64)
tensor([-35.4100, -33.2095, -14.8618, -40.0671, -30.1671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-34.7534, -32.2550, -15.0644, -37.7713, -29.9066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9321, device='cuda:0', dtype=torch.float64)
tensor([-33.9654, -31.3811, -15.4415, -35.6129, -29.8251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8007, device='cuda:0', dtype=torch.float64)
tensor([-33.5378, -30.9146, -15.7549, -34.2971, -29.8397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0552, device='cuda:0', dtype=torch.float64)
tensor([-33.2339, -30.5607, -15.9387, -33.3247, -29.6845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9350, device='cuda:0', dtype=torch.float64)
tensor([-32.8511, -30.1829, -16.0921, -31.8179, -29.5607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9021, device='cuda:0', dtype=torch.float64)
tensor([-32.7097, -30.4101, -16.1740, -30.9448, -29.4866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9986, device='cuda:0', dtype=torch.float64)
tensor([-32.6321, -30.7141, -16.2209, -30.1619, -29.3304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2268, device='cuda:0', dtype=torch.float64)
tensor([-32.4364, -30.7770, -16.3034, -29.7588, -29.3274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0559, device='cuda:0', dtype=torch.float64)
tensor([-32.3433, -31.2217, -16.3192, -30.2489, -29.4843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0200, device='cuda:0', dtype=torch.float64)
tensor([-32.1280, -31.6267, -16.4971, -30.5859, -30.0671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8468, device='cuda:0', dtype=torch.float64)
tensor([-31.6506, -31.8008, -16.6509, -30.8831, -30.9164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8556, device='cuda:0', dtype=torch.float64)
tensor([-31.0234, -31.7708, -16.7762, -31.0288, -31.7771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1319, device='cuda:0', dtype=torch.float64)
tensor([-30.7669, -31.8253, -16.7746, -31.1598, -31.9601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0697, device='cuda:0', dtype=torch.float64)
tensor([-30.7271, -31.8726, -16.6898, -31.3942, -31.8592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0636, device='cuda:0', dtype=torch.float64)
tensor([-30.6833, -31.7679, -16.5816, -31.9284, -31.6845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9296, device='cuda:0', dtype=torch.float64)
tensor([-30.6758, -31.6660, -16.5198, -32.8062, -31.5991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-30.6504, -31.4833, -16.5054, -33.3114, -31.5913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9310, device='cuda:0', dtype=torch.float64)
tensor([-30.7680, -31.2840, -16.5642, -33.7959, -31.9704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7403, device='cuda:0', dtype=torch.float64)
tensor([-30.7911, -31.1505, -16.6481, -34.2487, -32.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0562, device='cuda:0', dtype=torch.float64)
tensor([-30.5801, -30.9772, -16.8255, -34.2178, -32.4766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0311, device='cuda:0', dtype=torch.float64)
tensor([-30.2071, -30.8054, -17.0434, -34.5717, -32.7156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0023, device='cuda:0', dtype=torch.float64)
tensor([-30.1565, -30.7591, -17.2849, -35.5431, -32.7222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0701, device='cuda:0', dtype=torch.float64)
tensor([-30.5422, -30.9385, -17.5874, -37.0213, -32.6096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-30.9667, -31.3476, -17.9088, -38.4122, -32.4638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8758, device='cuda:0', dtype=torch.float64)
tensor([-31.4421, -31.7504, -18.2255, -39.8109, -32.5769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9379, device='cuda:0', dtype=torch.float64)
tensor([-31.6353, -32.0967, -18.4948, -40.9240, -33.0422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8107, device='cuda:0', dtype=torch.float64)
tensor([-31.9602, -32.6318, -18.9127, -42.2220, -33.1000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0127, device='cuda:0', dtype=torch.float64)
tensor([-32.2497, -33.3654, -19.5191, -43.6052, -33.0481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8193, device='cuda:0', dtype=torch.float64)
tensor([-32.7881, -34.4169, -20.0848, -45.1400, -32.9990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0214, device='cuda:0', dtype=torch.float64)
tensor([-33.9284, -35.9318, -20.9990, -46.9017, -32.9205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0700, device='cuda:0', dtype=torch.float64)
tensor([-35.6009, -37.5708, -22.1350, -48.8916, -32.8960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-37.6147, -39.3067, -23.3433, -50.8010, -33.0354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8523, device='cuda:0', dtype=torch.float64)
tensor([-39.9309, -41.0769, -24.7068, -52.3418, -33.1026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9385, device='cuda:0', dtype=torch.float64)
tensor([-43.3720, -43.7183, -26.4674, -54.5070, -33.5128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([-44.6104, -44.7373, -27.5111, -54.9142, -33.8728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9083, device='cuda:0', dtype=torch.float64)
tensor([-44.4276, -44.9440, -27.9038, -54.3581, -33.8983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-43.9261, -44.9294, -28.1871, -53.5861, -34.0431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-44.9198, -45.8206, -28.9394, -53.5102, -34.4438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-47.7598, -48.1688, -30.7337, -54.8410, -35.3869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9365, device='cuda:0', dtype=torch.float64)
tensor([-48.8200, -49.3878, -31.7738, -55.2044, -36.0281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-47.2406, -48.5537, -31.8041, -53.7131, -36.0999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9006, device='cuda:0', dtype=torch.float64)
tensor([-45.7161, -47.6249, -31.4874, -52.1667, -36.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([-45.0099, -47.5822, -31.4780, -51.1859, -36.4314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8255, device='cuda:0', dtype=torch.float64)
tensor([-43.0282, -46.6116, -30.6060, -49.6005, -36.4557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-38.7249, -43.9425, -28.3085, -46.4815, -35.7598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9264, device='cuda:0', dtype=torch.float64)
tensor([-36.8560, -42.3474, -26.8461, -44.5585, -35.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8855, device='cuda:0', dtype=torch.float64)
tensor([-35.4812, -41.1918, -25.6081, -43.1857, -35.2297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0610, device='cuda:0', dtype=torch.float64)
tensor([-34.7007, -40.8318, -24.9244, -42.7789, -35.7238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9240, device='cuda:0', dtype=torch.float64)
tensor([-34.9336, -41.6153, -24.8707, -43.5556, -36.3898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9845, device='cuda:0', dtype=torch.float64)
tensor([-35.3196, -42.4577, -25.0226, -44.4825, -37.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8131, device='cuda:0', dtype=torch.float64)
tensor([-35.1907, -42.4531, -24.9571, -44.4384, -37.7682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8148, device='cuda:0', dtype=torch.float64)
tensor([-34.4900, -41.4277, -24.6320, -43.3783, -38.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8130, device='cuda:0', dtype=torch.float64)
tensor([-34.2476, -41.0277, -24.6909, -42.8105, -38.4456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7964, device='cuda:0', dtype=torch.float64)
tensor([-33.9442, -40.5501, -24.7633, -42.1074, -38.5772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7454, device='cuda:0', dtype=torch.float64)
tensor([-33.9033, -40.2276, -24.9514, -41.8240, -38.9095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8911, device='cuda:0', dtype=torch.float64)
tensor([-34.6256, -40.3536, -25.7016, -42.2580, -39.1225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9328, device='cuda:0', dtype=torch.float64)
tensor([-35.4551, -40.6806, -26.4311, -42.9562, -39.5532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9349, device='cuda:0', dtype=torch.float64)
tensor([-36.1783, -41.2099, -27.1929, -43.7483, -40.0687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0436, device='cuda:0', dtype=torch.float64)
tensor([-36.9809, -42.0015, -28.2382, -44.9516, -40.7588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7851, device='cuda:0', dtype=torch.float64)
tensor([-37.3627, -42.0725, -29.0482, -45.4270, -41.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0516, device='cuda:0', dtype=torch.float64)
tensor([-37.5799, -41.5865, -29.7600, -44.8650, -41.5913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8080, device='cuda:0', dtype=torch.float64)
tensor([-37.7453, -40.8193, -30.6493, -44.3263, -41.7666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9041, device='cuda:0', dtype=torch.float64)
tensor([-38.3385, -40.6912, -31.8250, -44.3510, -42.0008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7714, device='cuda:0', dtype=torch.float64)
tensor([-38.6576, -40.3908, -32.6829, -44.1112, -42.1100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8200, device='cuda:0', dtype=torch.float64)
tensor([-39.5957, -40.4817, -33.7400, -44.5383, -42.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8648, device='cuda:0', dtype=torch.float64)
tensor([-40.4170, -40.5527, -34.7415, -45.2300, -42.3421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5816, device='cuda:0', dtype=torch.float64)
tensor([-41.0437, -40.4106, -35.5409, -45.5304, -42.4663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-41.5879, -40.2766, -36.2595, -45.5635, -42.8589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8890, device='cuda:0', dtype=torch.float64)
tensor([-42.4033, -40.4931, -37.1433, -46.0308, -43.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9601, device='cuda:0', dtype=torch.float64)
tensor([-43.6338, -41.2542, -38.0210, -46.6948, -43.6155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9402, device='cuda:0', dtype=torch.float64)
tensor([-44.6746, -41.6752, -39.0650, -46.8910, -43.7191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7978, device='cuda:0', dtype=torch.float64)
tensor([-45.5889, -41.8850, -39.9360, -46.8437, -43.6768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8576, device='cuda:0', dtype=torch.float64)
tensor([-46.6432, -42.4077, -40.8955, -46.8463, -43.8073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9612, device='cuda:0', dtype=torch.float64)
tensor([-48.4202, -43.3591, -42.5732, -47.3264, -43.8804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8757, device='cuda:0', dtype=torch.float64)
tensor([-50.2483, -44.2387, -43.8376, -47.4045, -44.0338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8293, device='cuda:0', dtype=torch.float64)
tensor([-52.7461, -45.6518, -45.4832, -47.6574, -44.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([-56.4755, -47.8938, -47.5611, -48.1537, -44.8984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-61.0236, -50.5143, -49.8286, -49.2417, -45.5841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8617, device='cuda:0', dtype=torch.float64)
tensor([-64.9962, -52.5656, -51.4320, -49.8024, -46.0574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-67.0161, -53.5874, -51.9240, -49.9696, -45.9979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([-69.2545, -54.7212, -52.0906, -50.3960, -45.9417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8526, device='cuda:0', dtype=torch.float64)
tensor([-69.9151, -55.2811, -51.5861, -50.4121, -45.8383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7403, device='cuda:0', dtype=torch.float64)
tensor([-68.8910, -54.7623, -50.7317, -49.6073, -44.9729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8461, device='cuda:0', dtype=torch.float64)
tensor([-68.4962, -54.4171, -49.6380, -49.3002, -44.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-68.3186, -53.9545, -48.1253, -49.3392, -43.4571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8151, device='cuda:0', dtype=torch.float64)
tensor([-66.3730, -52.8367, -46.1470, -48.6578, -42.2835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9144, device='cuda:0', dtype=torch.float64)
tensor([-65.1340, -52.2431, -44.5476, -48.2230, -41.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8941, device='cuda:0', dtype=torch.float64)
tensor([-64.0741, -51.9964, -43.2057, -47.8071, -41.1191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([-63.5356, -52.0108, -41.8629, -48.0676, -40.8797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9510, device='cuda:0', dtype=torch.float64)
tensor([-63.4490, -52.1650, -40.6066, -48.7177, -41.0158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8446, device='cuda:0', dtype=torch.float64)
tensor([-65.7333, -53.6823, -39.9708, -50.6543, -41.7029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8158, device='cuda:0', dtype=torch.float64)
tensor([-67.3808, -55.0811, -39.4299, -52.3813, -42.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7252, device='cuda:0', dtype=torch.float64)
tensor([-69.4039, -57.0099, -39.0161, -54.1572, -42.9040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8691, device='cuda:0', dtype=torch.float64)
tensor([-69.6972, -57.7595, -38.2239, -54.7100, -42.8068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8133, device='cuda:0', dtype=torch.float64)
tensor([-71.2112, -59.2341, -37.7459, -55.8950, -43.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7818, device='cuda:0', dtype=torch.float64)
tensor([-71.5310, -59.8066, -37.1697, -56.1718, -42.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9028, device='cuda:0', dtype=torch.float64)
tensor([-71.1746, -59.9501, -36.1982, -56.2856, -42.5294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8007, device='cuda:0', dtype=torch.float64)
tensor([-71.1476, -60.3185, -35.6145, -56.6047, -42.1767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7929, device='cuda:0', dtype=torch.float64)
tensor([-71.0480, -60.2829, -35.1072, -56.5696, -41.8338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8611, device='cuda:0', dtype=torch.float64)
tensor([-71.7661, -60.9915, -34.3927, -57.1983, -42.0640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9246, device='cuda:0', dtype=torch.float64)
tensor([-71.8854, -60.9988, -33.9908, -57.2631, -41.9376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6403, device='cuda:0', dtype=torch.float64)
tensor([-72.1323, -60.8101, -33.8355, -57.3026, -41.8032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7696, device='cuda:0', dtype=torch.float64)
tensor([-71.4171, -59.9061, -33.3078, -57.0057, -41.4142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7157, device='cuda:0', dtype=torch.float64)
tensor([-70.5809, -58.9823, -32.8726, -56.8412, -41.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8808, device='cuda:0', dtype=torch.float64)
tensor([-68.4640, -57.1749, -32.0596, -56.0431, -40.7955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8261, device='cuda:0', dtype=torch.float64)
tensor([-67.0428, -55.6759, -31.5812, -55.3284, -40.4674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9196, device='cuda:0', dtype=torch.float64)
tensor([-66.1856, -54.4425, -31.3124, -54.8455, -40.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9910, device='cuda:0', dtype=torch.float64)
tensor([-66.1005, -53.7702, -31.0729, -54.7150, -40.5270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6379, device='cuda:0', dtype=torch.float64)
tensor([-66.0082, -53.2073, -31.1478, -54.7441, -40.7104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8561, device='cuda:0', dtype=torch.float64)
tensor([-66.6425, -52.9801, -31.2835, -55.5371, -41.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9307, device='cuda:0', dtype=torch.float64)
tensor([-67.4955, -52.9716, -31.3344, -56.2877, -41.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8449, device='cuda:0', dtype=torch.float64)
tensor([-67.3275, -52.3267, -31.0969, -56.4628, -41.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8050, device='cuda:0', dtype=torch.float64)
tensor([-68.0341, -52.1908, -31.0988, -57.2498, -41.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9183, device='cuda:0', dtype=torch.float64)
tensor([-69.7944, -52.7909, -31.2943, -58.5862, -41.7365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8844, device='cuda:0', dtype=torch.float64)
tensor([-69.7193, -52.6919, -31.1250, -59.0071, -41.8739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-69.7667, -52.5328, -31.0535, -59.4454, -41.9119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7833, device='cuda:0', dtype=torch.float64)
tensor([-68.8877, -51.9354, -30.9457, -59.4595, -41.7474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8278, device='cuda:0', dtype=torch.float64)
tensor([-69.1413, -51.8426, -30.8332, -59.9421, -41.6708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8558, device='cuda:0', dtype=torch.float64)
tensor([-69.0098, -51.3620, -30.7236, -59.7262, -41.3888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6713, device='cuda:0', dtype=torch.float64)
tensor([-69.0301, -50.9613, -30.6157, -59.5166, -40.9935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8895, device='cuda:0', dtype=torch.float64)
tensor([-69.8561, -51.4483, -30.7192, -60.1000, -41.0094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7725, device='cuda:0', dtype=torch.float64)
tensor([-70.4980, -51.7726, -30.8979, -60.6810, -40.8817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7359, device='cuda:0', dtype=torch.float64)
tensor([-70.3238, -51.9300, -30.5522, -61.0567, -40.8285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8735, device='cuda:0', dtype=torch.float64)
tensor([-70.2678, -52.0168, -30.3614, -61.2302, -40.7950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8123, device='cuda:0', dtype=torch.float64)
tensor([-68.6895, -51.4311, -30.1062, -60.7727, -40.5037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8873, device='cuda:0', dtype=torch.float64)
tensor([-67.0460, -50.6831, -30.1091, -60.3203, -40.0373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6620, device='cuda:0', dtype=torch.float64)
tensor([-65.7129, -50.0538, -30.1254, -59.8843, -39.6492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6477, device='cuda:0', dtype=torch.float64)
tensor([-63.9012, -49.2359, -30.2910, -59.1530, -39.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7165, device='cuda:0', dtype=torch.float64)
tensor([-62.5616, -48.7243, -30.3288, -58.6424, -38.8159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8256, device='cuda:0', dtype=torch.float64)
tensor([-61.6942, -48.7311, -30.5356, -58.5923, -38.6391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8226, device='cuda:0', dtype=torch.float64)
tensor([-59.6105, -47.8508, -31.0217, -57.8168, -38.3910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9697, device='cuda:0', dtype=torch.float64)
tensor([-57.8507, -46.9859, -31.1980, -57.1465, -38.2591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9635, device='cuda:0', dtype=torch.float64)
tensor([-56.8715, -46.6090, -30.9815, -56.6276, -37.9538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7329, device='cuda:0', dtype=torch.float64)
tensor([-55.9561, -46.3622, -30.9775, -56.1607, -37.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8338, device='cuda:0', dtype=torch.float64)
tensor([-55.3968, -45.9392, -30.9344, -55.8736, -36.8507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8026, device='cuda:0', dtype=torch.float64)
tensor([-54.3962, -45.6722, -31.1251, -55.5436, -36.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7633, device='cuda:0', dtype=torch.float64)
tensor([-53.2134, -45.4500, -31.2404, -54.9586, -35.5244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7885, device='cuda:0', dtype=torch.float64)
tensor([-52.0049, -45.1658, -31.2587, -54.1665, -34.8312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1406, device='cuda:0', dtype=torch.float64)
tensor([-50.7545, -44.7052, -31.5097, -53.2905, -34.2898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8366, device='cuda:0', dtype=torch.float64)
tensor([-49.6152, -44.1904, -31.7616, -52.4623, -33.9320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8871, device='cuda:0', dtype=torch.float64)
tensor([-49.6361, -44.4247, -32.0027, -52.1489, -33.5406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8541, device='cuda:0', dtype=torch.float64)
tensor([-48.7665, -44.2171, -32.2003, -51.5797, -33.3829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8629, device='cuda:0', dtype=torch.float64)
tensor([-47.5491, -43.7686, -32.5385, -50.9037, -33.3574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7828, device='cuda:0', dtype=torch.float64)
tensor([-45.8512, -43.2971, -32.9488, -50.2971, -33.6762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8389, device='cuda:0', dtype=torch.float64)
tensor([-43.5136, -42.7464, -33.5100, -49.3925, -34.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8185, device='cuda:0', dtype=torch.float64)
tensor([-42.0022, -42.5078, -33.9574, -48.5852, -34.7390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7587, device='cuda:0', dtype=torch.float64)
tensor([-41.4952, -42.8325, -34.3768, -48.0323, -34.6876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-41.1133, -43.2535, -34.6107, -47.7309, -34.7123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7345, device='cuda:0', dtype=torch.float64)
tensor([-41.0539, -43.9828, -34.5581, -47.7288, -34.5417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7951, device='cuda:0', dtype=torch.float64)
tensor([-41.0420, -44.5527, -34.3565, -47.6618, -34.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-40.7392, -44.9784, -34.1827, -47.3837, -34.7936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7264, device='cuda:0', dtype=torch.float64)
tensor([-40.1746, -45.3430, -34.0236, -47.3259, -35.5269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7796, device='cuda:0', dtype=torch.float64)
tensor([-39.4481, -45.5021, -33.8804, -47.0380, -36.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8061, device='cuda:0', dtype=torch.float64)
tensor([-38.6653, -45.5245, -33.6065, -46.7318, -37.2165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8430, device='cuda:0', dtype=torch.float64)
tensor([-38.0988, -45.5133, -33.2018, -46.4394, -38.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8221, device='cuda:0', dtype=torch.float64)
tensor([-38.2285, -45.6952, -32.7174, -46.5206, -38.6846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7012, device='cuda:0', dtype=torch.float64)
tensor([-38.1161, -45.9082, -32.2048, -46.4678, -39.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7279, device='cuda:0', dtype=torch.float64)
tensor([-38.2406, -46.3042, -31.6997, -46.8089, -39.2972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8775, device='cuda:0', dtype=torch.float64)
tensor([-38.8369, -46.9961, -31.3976, -47.4274, -39.3826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-39.5040, -47.7553, -31.1184, -48.2333, -39.6432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9201, device='cuda:0', dtype=torch.float64)
tensor([-40.5132, -49.0891, -30.8635, -49.2987, -39.9664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8437, device='cuda:0', dtype=torch.float64)
tensor([-40.6973, -49.9248, -30.4748, -49.8547, -40.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8635, device='cuda:0', dtype=torch.float64)
tensor([-41.1953, -50.3455, -30.2258, -50.2166, -41.0097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8146, device='cuda:0', dtype=torch.float64)
tensor([-42.0638, -50.8905, -29.9317, -50.3131, -41.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9193, device='cuda:0', dtype=torch.float64)
tensor([-42.6548, -51.6044, -29.4689, -50.4849, -41.8110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7007, device='cuda:0', dtype=torch.float64)
tensor([-42.0207, -51.5806, -28.8995, -50.0281, -42.8957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7615, device='cuda:0', dtype=torch.float64)
tensor([-41.6020, -51.9309, -28.5250, -49.9923, -43.9943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8514, device='cuda:0', dtype=torch.float64)
tensor([-40.8881, -51.9540, -28.3501, -49.7204, -45.0078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7624, device='cuda:0', dtype=torch.float64)
tensor([-40.8145, -52.3673, -28.6327, -49.7671, -45.8228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9227, device='cuda:0', dtype=torch.float64)
tensor([-41.8310, -53.4940, -29.1065, -50.1767, -46.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7262, device='cuda:0', dtype=torch.float64)
tensor([-43.1295, -54.5834, -29.7824, -50.5682, -46.5250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7690, device='cuda:0', dtype=torch.float64)
tensor([-43.9816, -55.3079, -30.5378, -50.6198, -46.8422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8253, device='cuda:0', dtype=torch.float64)
tensor([-45.6263, -56.1666, -31.6348, -51.0564, -46.7501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7364, device='cuda:0', dtype=torch.float64)
tensor([-46.8965, -56.9903, -32.5261, -51.6836, -46.9600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9236, device='cuda:0', dtype=torch.float64)
tensor([-46.8539, -57.1433, -33.0446, -51.4895, -47.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6928, device='cuda:0', dtype=torch.float64)
tensor([-46.5997, -57.3173, -33.3290, -51.1632, -47.6045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7146, device='cuda:0', dtype=torch.float64)
tensor([-46.7797, -57.4416, -33.5763, -51.1029, -47.8426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8105, device='cuda:0', dtype=torch.float64)
tensor([-47.2490, -57.6630, -34.1273, -50.8617, -47.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8467, device='cuda:0', dtype=torch.float64)
tensor([-47.7199, -57.8731, -34.6245, -50.3644, -47.9728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9802, device='cuda:0', dtype=torch.float64)
tensor([-49.6790, -58.5755, -35.5964, -50.4864, -47.7690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7686, device='cuda:0', dtype=torch.float64)
tensor([-52.6159, -59.7830, -37.1201, -51.0569, -47.5518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6913, device='cuda:0', dtype=torch.float64)
tensor([-55.8029, -61.2163, -38.9937, -51.9018, -47.5286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7071, device='cuda:0', dtype=torch.float64)
tensor([-59.2827, -62.6404, -41.2062, -52.8068, -47.5606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7575, device='cuda:0', dtype=torch.float64)
tensor([-61.7499, -63.6345, -42.9475, -53.2319, -47.8076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8266, device='cuda:0', dtype=torch.float64)
tensor([-63.9177, -64.5829, -44.6659, -53.7015, -48.3757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7511, device='cuda:0', dtype=torch.float64)
tensor([-66.1040, -65.7683, -46.3085, -54.2567, -48.9357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-68.4777, -67.1291, -47.9791, -55.1415, -49.5388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7552, device='cuda:0', dtype=torch.float64)
tensor([-69.0518, -67.5270, -49.0381, -55.4214, -49.9669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8262, device='cuda:0', dtype=torch.float64)
tensor([-68.5652, -67.5148, -49.3767, -55.2954, -50.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7138, device='cuda:0', dtype=torch.float64)
tensor([-68.0478, -67.6073, -49.5754, -55.1086, -50.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7628, device='cuda:0', dtype=torch.float64)
tensor([-67.2426, -67.7695, -49.4456, -54.8987, -50.1089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7697, device='cuda:0', dtype=torch.float64)
tensor([-66.3874, -67.5614, -49.2004, -54.3927, -49.8969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7665, device='cuda:0', dtype=torch.float64)
tensor([-64.5674, -66.5743, -48.8372, -53.5424, -49.7417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7486, device='cuda:0', dtype=torch.float64)
tensor([-61.8893, -65.1455, -47.9478, -52.2813, -49.5630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6473, device='cuda:0', dtype=torch.float64)
tensor([-58.9258, -63.5759, -46.9055, -50.9584, -49.5475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6241, device='cuda:0', dtype=torch.float64)
tensor([-55.8917, -62.1374, -45.8109, -49.4831, -49.7772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7745, device='cuda:0', dtype=torch.float64)
tensor([-53.1827, -60.7411, -44.4505, -48.2985, -50.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0551, device='cuda:0', dtype=torch.float64)
tensor([-51.0071, -59.4672, -43.7583, -47.1572, -51.0128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8151, device='cuda:0', dtype=torch.float64)
tensor([-49.4055, -58.8836, -42.9915, -46.5545, -51.7980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9092, device='cuda:0', dtype=torch.float64)
tensor([-48.1581, -58.1102, -42.0380, -45.8407, -52.7243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7396, device='cuda:0', dtype=torch.float64)
tensor([-46.9445, -57.4749, -40.8006, -45.2033, -53.9556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8169, device='cuda:0', dtype=torch.float64)
tensor([-45.5178, -56.6881, -39.5931, -44.4894, -55.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8235, device='cuda:0', dtype=torch.float64)
tensor([-44.6549, -56.5988, -38.2267, -44.2957, -56.3582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0882, device='cuda:0', dtype=torch.float64)
tensor([-45.5742, -57.4947, -38.1330, -44.8415, -56.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8028, device='cuda:0', dtype=torch.float64)
tensor([-46.1303, -58.2790, -37.5387, -45.1661, -56.3575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8078, device='cuda:0', dtype=torch.float64)
tensor([-46.4410, -58.5600, -36.9393, -45.0598, -56.5027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7901, device='cuda:0', dtype=torch.float64)
tensor([-46.8112, -58.9322, -36.7880, -45.0686, -56.6537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7823, device='cuda:0', dtype=torch.float64)
tensor([-47.7462, -59.4628, -37.0823, -45.4170, -56.3337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7515, device='cuda:0', dtype=torch.float64)
tensor([-48.1853, -59.4534, -36.9162, -45.3829, -56.2889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8623, device='cuda:0', dtype=torch.float64)
tensor([-47.7261, -59.0359, -36.0550, -44.9039, -56.2972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6462, device='cuda:0', dtype=torch.float64)
tensor([-47.6484, -58.9258, -35.4188, -44.8098, -56.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9316, device='cuda:0', dtype=torch.float64)
tensor([-47.9831, -59.3856, -35.2609, -45.1217, -56.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7146, device='cuda:0', dtype=torch.float64)
tensor([-48.2999, -60.0803, -35.2520, -45.4105, -56.0744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7300, device='cuda:0', dtype=torch.float64)
tensor([-49.1704, -60.8618, -35.5719, -45.7353, -55.6912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6864, device='cuda:0', dtype=torch.float64)
tensor([-50.0476, -61.8547, -35.9520, -46.0016, -55.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7774, device='cuda:0', dtype=torch.float64)
tensor([-51.4449, -62.7032, -36.7623, -46.3868, -55.0741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7376, device='cuda:0', dtype=torch.float64)
tensor([-52.3717, -63.4654, -37.2769, -46.9134, -54.8887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7504, device='cuda:0', dtype=torch.float64)
tensor([-52.7518, -63.8739, -37.4051, -47.1398, -55.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6919, device='cuda:0', dtype=torch.float64)
tensor([-53.8456, -64.6504, -37.9396, -47.8701, -55.6279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7166, device='cuda:0', dtype=torch.float64)
tensor([-54.6782, -65.3590, -37.9868, -48.4120, -56.0074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8360, device='cuda:0', dtype=torch.float64)
tensor([-55.9067, -66.3245, -38.4873, -48.8327, -56.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7241, device='cuda:0', dtype=torch.float64)
tensor([-57.4059, -67.4185, -39.2271, -49.3663, -56.6717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8406, device='cuda:0', dtype=torch.float64)
tensor([-58.9797, -68.4478, -39.9339, -50.0381, -56.9088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7260, device='cuda:0', dtype=torch.float64)
tensor([-60.2491, -69.1600, -40.4653, -50.4695, -56.9787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7713, device='cuda:0', dtype=torch.float64)
tensor([-61.0297, -69.8906, -41.1170, -50.4192, -57.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5884, device='cuda:0', dtype=torch.float64)
tensor([-61.8125, -70.5234, -41.7831, -50.1697, -57.6322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5561, device='cuda:0', dtype=torch.float64)
tensor([-61.8307, -70.5988, -41.8852, -49.6371, -57.7132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6711, device='cuda:0', dtype=torch.float64)
tensor([-62.1941, -70.6974, -42.1638, -49.0625, -57.6141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6756, device='cuda:0', dtype=torch.float64)
tensor([-62.2038, -70.7596, -42.2541, -48.5527, -57.4595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8888, device='cuda:0', dtype=torch.float64)
tensor([-62.6118, -71.4427, -42.6557, -48.5818, -57.5953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8011, device='cuda:0', dtype=torch.float64)
tensor([-63.4257, -72.5291, -43.1448, -48.9924, -57.9057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7381, device='cuda:0', dtype=torch.float64)
tensor([-64.0587, -73.2822, -43.2924, -49.4851, -58.0959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8289, device='cuda:0', dtype=torch.float64)
tensor([-64.4417, -73.9139, -42.8648, -49.8682, -58.2994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7015, device='cuda:0', dtype=torch.float64)
tensor([-64.4427, -73.8891, -42.3173, -49.8152, -58.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7660, device='cuda:0', dtype=torch.float64)
tensor([-64.2104, -73.4661, -41.5261, -49.5405, -57.9629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7922, device='cuda:0', dtype=torch.float64)
tensor([-63.4706, -72.8802, -41.0663, -48.7090, -57.8992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7959, device='cuda:0', dtype=torch.float64)
tensor([-62.8862, -72.6356, -40.4127, -48.1447, -58.0075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7602, device='cuda:0', dtype=torch.float64)
tensor([-61.8757, -72.1718, -39.7792, -47.0763, -58.1581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6832, device='cuda:0', dtype=torch.float64)
tensor([-60.5528, -71.3378, -39.0255, -46.0823, -58.2292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8415, device='cuda:0', dtype=torch.float64)
tensor([-58.2472, -70.0275, -37.9923, -44.4008, -58.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7679, device='cuda:0', dtype=torch.float64)
tensor([-56.2363, -68.7388, -37.1086, -43.1596, -58.5202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9141, device='cuda:0', dtype=torch.float64)
tensor([-54.5249, -67.2968, -36.7099, -42.1916, -58.9784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7602, device='cuda:0', dtype=torch.float64)
tensor([-53.1956, -66.1797, -36.1758, -41.5219, -59.4021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6873, device='cuda:0', dtype=torch.float64)
tensor([-51.4581, -65.1317, -35.4169, -40.9209, -60.3051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6993, device='cuda:0', dtype=torch.float64)
tensor([-50.1174, -64.1562, -34.8206, -40.3265, -61.0268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7475, device='cuda:0', dtype=torch.float64)
tensor([-49.3602, -63.6586, -34.6859, -39.7090, -61.2803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6901, device='cuda:0', dtype=torch.float64)
tensor([-48.6356, -63.0453, -34.5067, -39.0883, -61.0841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7889, device='cuda:0', dtype=torch.float64)
tensor([-48.8051, -62.8546, -34.8145, -38.8017, -60.8494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6548, device='cuda:0', dtype=torch.float64)
tensor([-48.6697, -62.4425, -34.9880, -38.5750, -60.8285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6844, device='cuda:0', dtype=torch.float64)
tensor([-48.8284, -62.3329, -35.3052, -38.4423, -60.4045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7178, device='cuda:0', dtype=torch.float64)
tensor([-48.9363, -62.1577, -35.6833, -38.2319, -59.9060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7397, device='cuda:0', dtype=torch.float64)
tensor([-48.7498, -61.8415, -35.5760, -37.9422, -59.0205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7607, device='cuda:0', dtype=torch.float64)
tensor([-48.5150, -61.6852, -35.1827, -37.7216, -58.6550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6773, device='cuda:0', dtype=torch.float64)
tensor([-48.6865, -61.3170, -34.9921, -37.4529, -58.0067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7627, device='cuda:0', dtype=torch.float64)
tensor([-49.1582, -60.9377, -34.9661, -37.1484, -57.0274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-49.8676, -60.4728, -35.4429, -36.9263, -55.9984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7501, device='cuda:0', dtype=torch.float64)
tensor([-50.9904, -60.2134, -36.1370, -36.9142, -54.8453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9191, device='cuda:0', dtype=torch.float64)
tensor([-51.7939, -59.8911, -36.4554, -36.9214, -53.5978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7396, device='cuda:0', dtype=torch.float64)
tensor([-52.8448, -59.7712, -36.7850, -37.1971, -52.3200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8419, device='cuda:0', dtype=torch.float64)
tensor([-54.4004, -59.7439, -37.4359, -37.5811, -50.9759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7306, device='cuda:0', dtype=torch.float64)
tensor([-55.5355, -59.8772, -38.2960, -38.1036, -50.2603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7807, device='cuda:0', dtype=torch.float64)
tensor([-56.8923, -60.1259, -39.0597, -38.5830, -49.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7296, device='cuda:0', dtype=torch.float64)
tensor([-57.8539, -60.3458, -39.6272, -38.8134, -48.0426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6764, device='cuda:0', dtype=torch.float64)
tensor([-58.4813, -60.4910, -39.8211, -38.9888, -47.3755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7970, device='cuda:0', dtype=torch.float64)
tensor([-58.9232, -60.6707, -39.9431, -39.2650, -46.8236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7782, device='cuda:0', dtype=torch.float64)
tensor([-59.8815, -61.2176, -40.0326, -39.4611, -46.2439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7342, device='cuda:0', dtype=torch.float64)
tensor([-61.2728, -61.6813, -40.3501, -39.6468, -45.8445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6116, device='cuda:0', dtype=torch.float64)
tensor([-62.2264, -62.1323, -40.6755, -39.8302, -45.6269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([-63.6460, -62.7087, -41.2267, -40.0593, -45.4061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7556, device='cuda:0', dtype=torch.float64)
tensor([-65.3455, -63.2374, -42.0721, -40.2856, -45.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7472, device='cuda:0', dtype=torch.float64)
tensor([-66.4382, -63.5158, -42.5436, -40.3937, -45.1635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6936, device='cuda:0', dtype=torch.float64)
tensor([-66.6595, -63.6171, -42.4591, -40.3672, -45.3004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8820, device='cuda:0', dtype=torch.float64)
tensor([-66.5901, -63.9184, -42.2168, -39.8953, -45.6615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6832, device='cuda:0', dtype=torch.float64)
tensor([-66.7962, -64.2299, -41.9883, -39.5647, -46.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7231, device='cuda:0', dtype=torch.float64)
tensor([-66.9093, -64.4855, -41.8407, -39.1316, -46.7750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6356, device='cuda:0', dtype=torch.float64)
tensor([-65.6214, -63.9737, -40.9279, -38.3399, -47.5498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6536, device='cuda:0', dtype=torch.float64)
tensor([-64.1878, -63.5147, -39.7329, -37.4675, -47.8986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7308, device='cuda:0', dtype=torch.float64)
tensor([-63.5327, -63.3719, -39.2971, -36.8827, -47.9827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8291, device='cuda:0', dtype=torch.float64)
tensor([-62.7010, -63.2989, -38.7100, -36.3297, -48.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6892, device='cuda:0', dtype=torch.float64)
tensor([-61.4439, -63.1359, -38.1464, -35.7738, -48.4200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6602, device='cuda:0', dtype=torch.float64)
tensor([-59.5866, -62.9186, -37.1235, -35.1238, -48.9867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7023, device='cuda:0', dtype=torch.float64)
tensor([-58.2426, -62.8503, -36.5365, -34.6143, -49.5989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6656, device='cuda:0', dtype=torch.float64)
tensor([-57.9543, -63.1119, -36.3676, -34.4914, -49.8809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7147, device='cuda:0', dtype=torch.float64)
tensor([-57.2716, -63.2554, -36.0092, -34.3215, -50.0952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8525, device='cuda:0', dtype=torch.float64)
tensor([-57.5847, -63.8799, -36.0621, -34.4510, -50.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6718, device='cuda:0', dtype=torch.float64)
tensor([-57.8980, -64.3257, -35.8345, -34.6113, -49.8057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7825, device='cuda:0', dtype=torch.float64)
tensor([-58.3346, -64.8896, -35.5653, -34.9064, -49.5931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7196, device='cuda:0', dtype=torch.float64)
tensor([-59.0002, -65.3590, -34.9620, -35.4222, -48.9606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7800, device='cuda:0', dtype=torch.float64)
tensor([-59.4092, -65.5912, -34.5433, -36.0598, -48.3989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-59.9322, -65.8459, -34.3594, -36.8015, -48.0741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6722, device='cuda:0', dtype=torch.float64)
tensor([-60.8578, -66.2414, -34.5054, -37.7307, -47.9486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5938, device='cuda:0', dtype=torch.float64)
tensor([-61.6551, -66.6656, -34.5980, -38.8073, -48.1782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8281, device='cuda:0', dtype=torch.float64)
tensor([-61.9174, -66.7807, -34.2724, -40.0070, -48.4494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6053, device='cuda:0', dtype=torch.float64)
tensor([-61.9156, -67.1631, -33.8896, -41.2016, -48.7327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6933, device='cuda:0', dtype=torch.float64)
tensor([-61.8226, -67.4417, -33.6402, -42.3207, -49.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6264, device='cuda:0', dtype=torch.float64)
tensor([-61.5264, -67.9637, -33.3253, -43.5650, -49.6274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5986, device='cuda:0', dtype=torch.float64)
tensor([-61.3151, -68.0182, -33.2499, -44.4211, -49.8220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7368, device='cuda:0', dtype=torch.float64)
tensor([-60.9715, -67.9218, -33.0581, -44.8890, -50.0314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8033, device='cuda:0', dtype=torch.float64)
tensor([-60.6132, -67.5881, -32.9194, -44.8389, -49.8390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7525, device='cuda:0', dtype=torch.float64)
tensor([-59.1492, -66.8875, -32.5596, -43.7258, -49.9587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6780, device='cuda:0', dtype=torch.float64)
tensor([-57.7355, -66.2446, -32.3393, -42.6925, -50.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6138, device='cuda:0', dtype=torch.float64)
tensor([-56.5086, -65.8679, -32.3930, -41.7790, -50.4147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7120, device='cuda:0', dtype=torch.float64)
tensor([-55.9068, -65.6343, -32.4953, -41.2752, -50.8131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7641, device='cuda:0', dtype=torch.float64)
tensor([-55.2265, -65.0395, -32.6472, -40.6255, -51.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6335, device='cuda:0', dtype=torch.float64)
tensor([-53.8816, -64.2813, -32.5155, -39.4780, -51.2725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5897, device='cuda:0', dtype=torch.float64)
tensor([-53.3041, -63.7734, -32.5692, -38.6796, -51.3599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5984, device='cuda:0', dtype=torch.float64)
tensor([-52.8521, -63.4069, -32.6439, -38.0703, -51.7310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7282, device='cuda:0', dtype=torch.float64)
tensor([-52.8131, -63.1257, -32.8697, -37.7269, -52.1515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7731, device='cuda:0', dtype=torch.float64)
tensor([-52.4412, -62.8637, -32.8561, -37.5417, -52.6419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6853, device='cuda:0', dtype=torch.float64)
tensor([-52.7128, -62.9538, -32.9434, -37.8226, -52.8298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8262, device='cuda:0', dtype=torch.float64)
tensor([-53.6973, -63.2482, -33.3083, -38.1965, -52.9645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6823, device='cuda:0', dtype=torch.float64)
tensor([-54.8477, -63.6630, -33.7739, -38.7496, -53.0849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6480, device='cuda:0', dtype=torch.float64)
tensor([-55.8097, -64.1172, -34.2632, -39.2571, -53.5668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8153, device='cuda:0', dtype=torch.float64)
tensor([-56.5005, -64.6930, -34.7300, -39.8246, -54.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6198, device='cuda:0', dtype=torch.float64)
tensor([-57.7574, -65.4682, -35.2072, -40.6060, -54.8344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6005, device='cuda:0', dtype=torch.float64)
tensor([-58.2239, -65.9449, -35.5054, -40.9686, -55.3962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6513, device='cuda:0', dtype=torch.float64)
tensor([-58.6102, -66.4724, -35.6822, -41.2340, -55.8991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7243, device='cuda:0', dtype=torch.float64)
tensor([-59.0267, -66.9121, -35.7768, -41.7130, -56.1609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7384, device='cuda:0', dtype=torch.float64)
tensor([-59.6550, -67.3585, -35.8727, -42.1706, -56.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6198, device='cuda:0', dtype=torch.float64)
tensor([-60.2138, -67.8051, -36.0668, -42.5374, -56.3601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6894, device='cuda:0', dtype=torch.float64)
tensor([-61.1807, -68.5116, -36.2786, -43.1140, -56.4956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7593, device='cuda:0', dtype=torch.float64)
tensor([-62.4592, -69.5610, -36.7002, -43.8773, -56.4692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6729, device='cuda:0', dtype=torch.float64)
tensor([-63.5540, -70.5222, -36.9911, -44.8349, -56.3500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7488, device='cuda:0', dtype=torch.float64)
tensor([-64.2407, -71.2297, -37.2399, -45.7132, -56.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7175, device='cuda:0', dtype=torch.float64)
tensor([-64.9647, -71.6796, -37.4791, -46.0759, -56.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6432, device='cuda:0', dtype=torch.float64)
tensor([-65.2940, -71.9999, -37.5781, -46.1875, -56.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7584, device='cuda:0', dtype=torch.float64)
tensor([-65.7123, -72.2966, -37.7757, -46.3869, -55.8662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6956, device='cuda:0', dtype=torch.float64)
tensor([-65.2440, -72.3584, -37.6831, -46.0103, -55.6698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7212, device='cuda:0', dtype=torch.float64)
tensor([-64.3905, -72.1282, -37.5235, -45.4506, -55.3564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7096, device='cuda:0', dtype=torch.float64)
tensor([-63.3489, -71.6109, -37.3252, -44.9913, -54.9582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6127, device='cuda:0', dtype=torch.float64)
tensor([-63.1384, -71.5347, -37.3070, -44.8124, -54.6779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7526, device='cuda:0', dtype=torch.float64)
tensor([-63.2753, -71.6610, -37.4923, -44.6471, -54.3417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5619, device='cuda:0', dtype=torch.float64)
tensor([-63.6546, -71.7915, -37.4699, -44.8315, -53.8967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6108, device='cuda:0', dtype=torch.float64)
tensor([-64.5990, -72.0770, -37.6945, -45.1200, -53.4790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7107, device='cuda:0', dtype=torch.float64)
tensor([-65.5816, -72.1399, -37.8581, -45.4358, -52.9200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6842, device='cuda:0', dtype=torch.float64)
tensor([-67.3452, -72.4323, -38.1787, -45.9657, -52.3923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6331, device='cuda:0', dtype=torch.float64)
tensor([-69.8013, -73.2205, -38.6622, -46.6898, -52.0610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5013, device='cuda:0', dtype=torch.float64)
tensor([-71.5400, -73.6253, -39.2078, -46.9659, -51.6928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6699, device='cuda:0', dtype=torch.float64)
tensor([-73.8139, -74.2577, -39.9026, -47.5715, -51.6705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5721, device='cuda:0', dtype=torch.float64)
tensor([-76.5380, -75.0711, -40.6549, -48.1467, -51.6617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7473, device='cuda:0', dtype=torch.float64)
tensor([-80.5316, -76.3411, -41.8489, -49.1614, -51.8056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5739, device='cuda:0', dtype=torch.float64)
tensor([-84.4367, -77.2137, -42.9186, -50.0655, -51.7755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6277, device='cuda:0', dtype=torch.float64)
tensor([-88.0121, -78.0390, -43.7810, -50.8568, -51.7784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5845, device='cuda:0', dtype=torch.float64)
tensor([-91.6562, -79.0138, -44.5025, -51.6968, -51.7683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6821, device='cuda:0', dtype=torch.float64)
tensor([-94.6567, -80.0147, -44.9703, -52.5262, -51.7344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7100, device='cuda:0', dtype=torch.float64)
tensor([-96.6965, -80.6321, -45.5123, -52.9997, -51.7049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6102, device='cuda:0', dtype=torch.float64)
tensor([-97.8774, -81.3122, -45.9440, -53.2395, -52.0165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5391, device='cuda:0', dtype=torch.float64)
tensor([-99.0670, -81.9514, -46.3919, -53.4457, -52.2472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6871, device='cuda:0', dtype=torch.float64)
tensor([-101.0664,  -82.7421,  -46.8876,  -53.7549,  -52.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6017, device='cuda:0', dtype=torch.float64)
tensor([-102.0990,  -83.2272,  -47.3625,  -53.7742,  -52.9417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6103, device='cuda:0', dtype=torch.float64)
tensor([-102.1655,  -83.5030,  -47.5913,  -53.6057,  -53.1754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6875, device='cuda:0', dtype=torch.float64)
tensor([-99.5822, -82.7662, -47.2742, -52.6524, -53.0145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6589, device='cuda:0', dtype=torch.float64)
tensor([-94.8709, -81.4941, -46.5020, -51.3603, -52.5700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6573, device='cuda:0', dtype=torch.float64)
tensor([-90.5052, -80.1306, -45.6795, -50.3330, -52.0487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7020, device='cuda:0', dtype=torch.float64)
tensor([-86.0295, -78.8021, -44.7703, -49.5464, -51.8845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6029, device='cuda:0', dtype=torch.float64)
tensor([-82.4046, -77.6656, -43.9237, -49.1642, -52.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6555, device='cuda:0', dtype=torch.float64)
tensor([-79.7184, -76.6911, -43.3348, -48.8489, -52.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7083, device='cuda:0', dtype=torch.float64)
tensor([-78.1373, -76.0993, -43.0702, -48.8955, -52.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6376, device='cuda:0', dtype=torch.float64)
tensor([-76.3742, -75.4888, -42.6198, -49.1260, -52.3846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6943, device='cuda:0', dtype=torch.float64)
tensor([-75.4297, -75.1244, -42.3515, -49.4237, -52.2805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5811, device='cuda:0', dtype=torch.float64)
tensor([-75.0583, -75.0529, -42.4389, -50.1513, -52.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6378, device='cuda:0', dtype=torch.float64)
tensor([-74.2867, -74.8094, -42.3385, -51.0031, -52.3527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6065, device='cuda:0', dtype=torch.float64)
tensor([-74.4733, -74.9439, -42.5264, -52.1832, -52.6479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5924, device='cuda:0', dtype=torch.float64)
tensor([-74.4764, -74.8921, -42.7387, -53.3146, -52.3851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7289, device='cuda:0', dtype=torch.float64)
tensor([-74.8742, -74.9050, -42.8348, -54.1917, -51.7890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6563, device='cuda:0', dtype=torch.float64)
tensor([-75.4661, -74.9125, -42.8320, -55.1648, -51.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4751, device='cuda:0', dtype=torch.float64)
tensor([-75.8218, -74.8614, -42.7846, -56.0615, -51.1692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5825, device='cuda:0', dtype=torch.float64)
tensor([-76.2099, -74.5910, -42.7120, -56.4541, -50.9183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8119, device='cuda:0', dtype=torch.float64)
tensor([-75.1881, -74.1123, -42.0241, -56.9844, -51.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5816, device='cuda:0', dtype=torch.float64)
tensor([-74.5464, -73.7175, -41.3623, -57.3395, -51.8410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6418, device='cuda:0', dtype=torch.float64)
tensor([-74.0827, -73.5893, -40.8538, -57.9517, -52.3951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5693, device='cuda:0', dtype=torch.float64)
tensor([-74.1176, -73.2883, -40.6102, -58.3015, -52.6794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7129, device='cuda:0', dtype=torch.float64)
tensor([-74.0404, -73.0011, -40.2817, -58.4140, -52.9815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5112, device='cuda:0', dtype=torch.float64)
tensor([-73.8314, -72.7979, -39.9066, -58.6853, -53.6300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6163, device='cuda:0', dtype=torch.float64)
tensor([-73.7840, -72.6412, -39.6792, -58.9335, -53.8285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6783, device='cuda:0', dtype=torch.float64)
tensor([-73.6893, -72.4769, -39.5474, -58.8634, -53.8698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6311, device='cuda:0', dtype=torch.float64)
tensor([-73.7242, -72.3087, -39.1594, -58.5893, -53.7068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7428, device='cuda:0', dtype=torch.float64)
tensor([-73.3285, -72.2983, -38.5679, -58.2228, -53.8207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6441, device='cuda:0', dtype=torch.float64)
tensor([-73.0642, -72.3682, -37.8311, -57.8737, -53.9518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7309, device='cuda:0', dtype=torch.float64)
tensor([-73.0385, -72.4632, -37.2604, -57.9557, -54.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5370, device='cuda:0', dtype=torch.float64)
tensor([-72.6510, -72.4248, -36.6039, -57.1117, -54.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6263, device='cuda:0', dtype=torch.float64)
tensor([-72.6257, -72.3881, -36.1365, -56.2532, -53.9695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6381, device='cuda:0', dtype=torch.float64)
tensor([-72.2496, -72.3411, -35.5326, -55.5002, -53.8785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6097, device='cuda:0', dtype=torch.float64)
tensor([-71.7228, -72.4638, -34.9379, -55.4148, -54.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5222, device='cuda:0', dtype=torch.float64)
tensor([-71.3133, -72.6867, -34.3103, -55.2610, -54.2219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4976, device='cuda:0', dtype=torch.float64)
tensor([-70.5821, -72.8286, -33.6304, -54.9083, -54.6862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5553, device='cuda:0', dtype=torch.float64)
tensor([-69.9704, -73.0490, -32.9858, -54.8666, -55.2861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6246, device='cuda:0', dtype=torch.float64)
tensor([-70.0217, -73.4128, -32.5376, -55.1980, -55.6549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5482, device='cuda:0', dtype=torch.float64)
tensor([-69.8071, -73.7952, -32.0545, -55.5489, -56.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5546, device='cuda:0', dtype=torch.float64)
tensor([-69.7513, -74.2373, -31.7028, -55.7240, -56.9383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8475, device='cuda:0', dtype=torch.float64)
tensor([-70.4884, -74.7402, -31.5748, -55.7637, -57.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-70.9268, -75.1949, -31.4505, -55.8088, -57.8116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5294, device='cuda:0', dtype=torch.float64)
tensor([-71.0570, -75.8371, -31.3803, -55.7129, -58.3832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6486, device='cuda:0', dtype=torch.float64)
tensor([-71.1566, -76.5317, -31.4525, -55.9668, -59.0139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5450, device='cuda:0', dtype=torch.float64)
tensor([-70.7995, -77.0368, -31.5179, -56.4379, -59.7037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5278, device='cuda:0', dtype=torch.float64)
tensor([-70.6128, -77.4531, -31.5747, -56.6983, -60.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7049, device='cuda:0', dtype=torch.float64)
tensor([-70.4786, -77.8885, -31.6106, -56.5584, -60.0167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5976, device='cuda:0', dtype=torch.float64)
tensor([-70.3737, -78.2323, -31.7058, -56.2687, -59.9780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5690, device='cuda:0', dtype=torch.float64)
tensor([-70.8539, -79.0257, -31.8457, -56.4318, -59.6130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5195, device='cuda:0', dtype=torch.float64)
tensor([-71.4521, -79.7450, -32.0938, -56.7463, -59.4522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5553, device='cuda:0', dtype=torch.float64)
tensor([-72.4995, -80.8201, -32.4153, -57.1149, -59.2729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6525, device='cuda:0', dtype=torch.float64)
tensor([-74.0518, -82.0856, -32.8134, -57.6778, -58.7356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5226, device='cuda:0', dtype=torch.float64)
tensor([-75.6005, -83.3795, -33.2137, -58.1908, -58.4832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6013, device='cuda:0', dtype=torch.float64)
tensor([-76.5583, -84.3217, -33.5944, -58.7138, -58.4634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6079, device='cuda:0', dtype=torch.float64)
tensor([-78.1648, -85.2094, -33.8964, -59.5339, -58.0263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5790, device='cuda:0', dtype=torch.float64)
tensor([-79.8337, -85.8790, -34.0531, -60.3661, -57.6075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4776, device='cuda:0', dtype=torch.float64)
tensor([-81.3730, -86.4270, -34.1072, -61.1410, -57.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5584, device='cuda:0', dtype=torch.float64)
tensor([-82.0801, -86.6306, -34.1523, -61.4331, -56.8599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5512, device='cuda:0', dtype=torch.float64)
tensor([-83.1260, -87.2723, -34.2272, -61.9470, -56.5784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5550, device='cuda:0', dtype=torch.float64)
tensor([-83.3569, -87.5859, -34.3140, -62.1735, -56.7441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5622, device='cuda:0', dtype=torch.float64)
tensor([-83.2582, -87.7988, -34.5397, -62.2895, -57.0945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5664, device='cuda:0', dtype=torch.float64)
tensor([-82.7362, -88.0194, -34.6333, -62.5307, -57.7512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5887, device='cuda:0', dtype=torch.float64)
tensor([-82.6663, -88.4041, -34.8348, -62.8590, -58.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6261, device='cuda:0', dtype=torch.float64)
tensor([-83.0037, -89.0903, -35.1145, -63.7968, -58.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6769, device='cuda:0', dtype=torch.float64)
tensor([-83.3780, -89.9692, -35.2989, -65.0631, -59.0349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5788, device='cuda:0', dtype=torch.float64)
tensor([-84.1132, -91.0869, -35.4568, -66.4552, -59.6179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5656, device='cuda:0', dtype=torch.float64)
tensor([-84.8190, -92.1718, -35.5682, -67.9804, -59.9887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5732, device='cuda:0', dtype=torch.float64)
tensor([-85.0377, -92.9395, -35.6322, -69.1337, -60.1692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7139, device='cuda:0', dtype=torch.float64)
tensor([-86.2730, -93.7822, -35.9624, -70.5803, -60.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5442, device='cuda:0', dtype=torch.float64)
tensor([-87.9223, -94.7711, -36.4909, -72.3769, -60.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4719, device='cuda:0', dtype=torch.float64)
tensor([-88.9488, -95.6545, -37.1882, -74.1907, -60.9533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4496, device='cuda:0', dtype=torch.float64)
tensor([-89.9291, -96.5530, -37.8478, -76.0216, -61.6674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5331, device='cuda:0', dtype=torch.float64)
tensor([-90.8489, -97.5308, -38.4431, -78.3332, -62.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5206, device='cuda:0', dtype=torch.float64)
tensor([-91.9328, -98.2286, -39.0227, -80.3299, -62.8876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5252, device='cuda:0', dtype=torch.float64)
tensor([-92.9623, -99.0051, -39.6902, -82.3520, -63.4224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3963, device='cuda:0', dtype=torch.float64)
tensor([-93.9061, -99.9430, -40.2960, -84.3514, -63.9682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([ -95.0905, -100.9584,  -41.0643,  -86.3884,  -64.4979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4987, device='cuda:0', dtype=torch.float64)
tensor([ -96.1910, -101.9993,  -41.7709,  -88.2598,  -65.1023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4727, device='cuda:0', dtype=torch.float64)
tensor([ -97.0259, -102.9470,  -42.3770,  -89.7369,  -65.3326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5495, device='cuda:0', dtype=torch.float64)
tensor([ -97.9228, -103.9229,  -42.8640,  -90.7718,  -65.6654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5509, device='cuda:0', dtype=torch.float64)
tensor([ -98.6530, -104.5528,  -43.4404,  -91.4029,  -65.5902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6530, device='cuda:0', dtype=torch.float64)
tensor([ -99.5710, -105.4156,  -43.7477,  -91.6319,  -65.6464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4512, device='cuda:0', dtype=torch.float64)
tensor([ -99.5330, -105.7922,  -43.6734,  -91.3879,  -65.7169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5658, device='cuda:0', dtype=torch.float64)
tensor([-100.0756, -106.4031,  -43.8095,  -90.3601,  -65.6652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5000, device='cuda:0', dtype=torch.float64)
tensor([-100.8005, -106.8201,  -44.0678,  -89.5411,  -65.5443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5034, device='cuda:0', dtype=torch.float64)
tensor([-101.7132, -107.1087,  -44.4479,  -88.8387,  -65.3630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5941, device='cuda:0', dtype=torch.float64)
tensor([-102.2766, -106.8149,  -44.6260,  -88.0010,  -64.8395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6179, device='cuda:0', dtype=torch.float64)
tensor([-103.0351, -106.7920,  -44.9366,  -87.3860,  -64.5689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5679, device='cuda:0', dtype=torch.float64)
tensor([-103.6055, -106.6535,  -45.1700,  -86.5591,  -64.1453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5874, device='cuda:0', dtype=torch.float64)
tensor([-103.8781, -106.6405,  -45.1847,  -85.8889,  -63.9599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5716, device='cuda:0', dtype=torch.float64)
tensor([-102.9224, -106.2364,  -44.7878,  -84.7696,  -63.8161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4965, device='cuda:0', dtype=torch.float64)
tensor([-101.3076, -105.5018,  -44.1189,  -83.5953,  -63.6562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5909, device='cuda:0', dtype=torch.float64)
tensor([-100.1640, -104.7515,  -43.5881,  -82.2658,  -63.4832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5101, device='cuda:0', dtype=torch.float64)
tensor([ -99.1902, -104.2142,  -42.9774,  -81.3291,  -63.2593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5870, device='cuda:0', dtype=torch.float64)
tensor([ -98.5748, -104.0657,  -42.4674,  -80.7958,  -63.3343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5672, device='cuda:0', dtype=torch.float64)
tensor([ -97.9569, -103.7013,  -41.8928,  -80.3161,  -63.4540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5413, device='cuda:0', dtype=torch.float64)
tensor([ -97.4312, -103.3195,  -41.3204,  -80.0150,  -63.2334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5184, device='cuda:0', dtype=torch.float64)
tensor([ -96.5081, -102.6105,  -40.7218,  -79.4111,  -63.0352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6555, device='cuda:0', dtype=torch.float64)
tensor([ -95.5612, -101.8760,  -40.0531,  -78.8609,  -62.6400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5951, device='cuda:0', dtype=torch.float64)
tensor([ -94.6343, -101.0159,  -39.3535,  -77.7256,  -61.5656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3923, device='cuda:0', dtype=torch.float64)
tensor([ -93.4657, -100.2147,  -38.6851,  -76.3764,  -60.9000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5747, device='cuda:0', dtype=torch.float64)
tensor([-93.3244, -99.9891, -38.4529, -75.3437, -60.3728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5110, device='cuda:0', dtype=torch.float64)
tensor([-92.9881, -99.5882, -38.1154, -74.3774, -59.7372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4605, device='cuda:0', dtype=torch.float64)
tensor([-92.5595, -99.2395, -37.8191, -73.5598, -59.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5833, device='cuda:0', dtype=torch.float64)
tensor([-92.0084, -99.0468, -37.6212, -73.1738, -58.8535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5937, device='cuda:0', dtype=torch.float64)
tensor([-91.8914, -98.8903, -37.6492, -72.8332, -58.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4402, device='cuda:0', dtype=torch.float64)
tensor([-92.3423, -98.9591, -37.7131, -72.6487, -57.7367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5735, device='cuda:0', dtype=torch.float64)
tensor([-92.7875, -98.8253, -37.7129, -72.3473, -56.9293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6154, device='cuda:0', dtype=torch.float64)
tensor([-93.9595, -99.1894, -37.8407, -72.3965, -56.1308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5516, device='cuda:0', dtype=torch.float64)
tensor([-95.3873, -99.6894, -38.0279, -72.4379, -55.7916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4057, device='cuda:0', dtype=torch.float64)
tensor([ -96.9726, -100.0600,  -38.2707,  -72.6504,  -55.4013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4825, device='cuda:0', dtype=torch.float64)
tensor([ -98.8836, -100.4759,  -38.4931,  -73.2726,  -55.1161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5312, device='cuda:0', dtype=torch.float64)
tensor([-100.4446, -100.8202,  -38.5816,  -73.9624,  -54.9937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4619, device='cuda:0', dtype=torch.float64)
tensor([-102.5013, -101.2789,  -38.7922,  -74.8153,  -54.9912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4862, device='cuda:0', dtype=torch.float64)
tensor([-103.7817, -101.2763,  -38.8821,  -75.2341,  -54.7717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4759, device='cuda:0', dtype=torch.float64)
tensor([-104.9224, -101.3739,  -39.0111,  -75.7145,  -54.4982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4518, device='cuda:0', dtype=torch.float64)
tensor([-104.3893, -101.1784,  -38.7507,  -75.7041,  -54.2136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4781, device='cuda:0', dtype=torch.float64)
tensor([-103.4815, -101.3073,  -38.4443,  -75.6417,  -54.0897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([-102.6070, -101.2698,  -38.2064,  -75.4740,  -53.7124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4059, device='cuda:0', dtype=torch.float64)
tensor([-101.3758, -101.1662,  -37.9505,  -75.0740,  -53.3736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4639, device='cuda:0', dtype=torch.float64)
tensor([-100.3910, -100.9636,  -37.8556,  -74.8640,  -53.2196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5557, device='cuda:0', dtype=torch.float64)
tensor([ -98.4957, -100.2120,  -37.5418,  -74.0847,  -53.0045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4405, device='cuda:0', dtype=torch.float64)
tensor([-96.4154, -99.4346, -37.2318, -73.2626, -52.9282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4168, device='cuda:0', dtype=torch.float64)
tensor([-94.0876, -98.7725, -36.7678, -72.5346, -52.9856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4732, device='cuda:0', dtype=torch.float64)
tensor([-91.6489, -98.1217, -36.2145, -71.7490, -53.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4482, device='cuda:0', dtype=torch.float64)
tensor([-89.0815, -97.4780, -35.6273, -70.8220, -53.4860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4111, device='cuda:0', dtype=torch.float64)
tensor([-86.8531, -97.0188, -35.0067, -70.0012, -53.8200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3730, device='cuda:0', dtype=torch.float64)
tensor([-84.9964, -96.6537, -34.5169, -69.3917, -54.0129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4332, device='cuda:0', dtype=torch.float64)
tensor([-83.2018, -96.3561, -34.1327, -68.8175, -54.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4292, device='cuda:0', dtype=torch.float64)
tensor([-81.7518, -96.0023, -33.8326, -68.4375, -54.6402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4538, device='cuda:0', dtype=torch.float64)
tensor([-80.6569, -95.9283, -33.6465, -68.2145, -55.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4571, device='cuda:0', dtype=torch.float64)
tensor([-80.2577, -95.7510, -33.7369, -68.0788, -55.1806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4485, device='cuda:0', dtype=torch.float64)
tensor([-79.7704, -95.4703, -33.8761, -68.0601, -55.0217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4778, device='cuda:0', dtype=torch.float64)
tensor([-79.6238, -95.2307, -34.0765, -68.2659, -54.6210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4557, device='cuda:0', dtype=torch.float64)
tensor([-79.4983, -94.9236, -34.2327, -68.2873, -54.0280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4792, device='cuda:0', dtype=torch.float64)
tensor([-78.8761, -94.7176, -34.2308, -68.0225, -53.6826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4873, device='cuda:0', dtype=torch.float64)
tensor([-78.3620, -94.5077, -34.3177, -67.7094, -53.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4757, device='cuda:0', dtype=torch.float64)
tensor([-77.8165, -94.2773, -34.2984, -67.2726, -53.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5211, device='cuda:0', dtype=torch.float64)
tensor([-76.7648, -94.0153, -34.0672, -66.7149, -53.3735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4231, device='cuda:0', dtype=torch.float64)
tensor([-75.8663, -93.8116, -33.7524, -66.2957, -53.6295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4339, device='cuda:0', dtype=torch.float64)
tensor([-75.3525, -93.7938, -33.5836, -66.2509, -53.9169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4814, device='cuda:0', dtype=torch.float64)
tensor([-74.8074, -93.9058, -33.4849, -66.0541, -54.4383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4164, device='cuda:0', dtype=torch.float64)
tensor([-74.1185, -93.7341, -33.3369, -65.6733, -54.9534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4155, device='cuda:0', dtype=torch.float64)
tensor([-73.0218, -93.3799, -33.0442, -65.0307, -55.6996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4613, device='cuda:0', dtype=torch.float64)
tensor([-71.8818, -92.9125, -32.6154, -64.3375, -56.4285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4156, device='cuda:0', dtype=torch.float64)
tensor([-70.9669, -92.6136, -32.2489, -63.8628, -57.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4518, device='cuda:0', dtype=torch.float64)
tensor([-70.1377, -92.3168, -31.9713, -63.3011, -57.9244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5183, device='cuda:0', dtype=torch.float64)
tensor([-69.5266, -92.1748, -31.7602, -62.9802, -58.7471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4344, device='cuda:0', dtype=torch.float64)
tensor([-69.1430, -92.1338, -31.6613, -62.7469, -59.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5569, device='cuda:0', dtype=torch.float64)
tensor([-68.4710, -92.0859, -31.3590, -62.6250, -60.0847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4366, device='cuda:0', dtype=torch.float64)
tensor([-67.9140, -92.0055, -31.0862, -62.2663, -60.6304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4211, device='cuda:0', dtype=torch.float64)
tensor([-67.3357, -92.0292, -30.9387, -62.1025, -61.1818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4953, device='cuda:0', dtype=torch.float64)
tensor([-66.7596, -92.0605, -30.7861, -61.8075, -61.5871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5408, device='cuda:0', dtype=torch.float64)
tensor([-66.5365, -92.0374, -30.7539, -61.6201, -61.6385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5025, device='cuda:0', dtype=torch.float64)
tensor([-66.5709, -92.0018, -30.6933, -61.6391, -61.6615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4703, device='cuda:0', dtype=torch.float64)
tensor([-66.8690, -91.8468, -30.7169, -61.8631, -61.5666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4578, device='cuda:0', dtype=torch.float64)
tensor([-67.3422, -91.7005, -30.8639, -62.2340, -61.4228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4632, device='cuda:0', dtype=torch.float64)
tensor([-68.2757, -91.9128, -31.1585, -63.0409, -61.3085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4214, device='cuda:0', dtype=torch.float64)
tensor([-69.1883, -92.0282, -31.4949, -63.8204, -61.1186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4935, device='cuda:0', dtype=torch.float64)
tensor([-69.9320, -92.0990, -31.7296, -64.4677, -60.7912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5078, device='cuda:0', dtype=torch.float64)
tensor([-70.9855, -92.3143, -32.1283, -65.2172, -60.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4871, device='cuda:0', dtype=torch.float64)
tensor([-72.4097, -92.5616, -32.4670, -65.9842, -60.0090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5410, device='cuda:0', dtype=torch.float64)
tensor([-72.7358, -92.4818, -32.5305, -66.1768, -59.8708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4561, device='cuda:0', dtype=torch.float64)
tensor([-72.8763, -92.6034, -32.4530, -66.3511, -60.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3649, device='cuda:0', dtype=torch.float64)
tensor([-72.5659, -92.6225, -32.2174, -66.2786, -60.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4660, device='cuda:0', dtype=torch.float64)
tensor([-72.4148, -92.7334, -31.9716, -66.3098, -60.8980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4764, device='cuda:0', dtype=torch.float64)
tensor([-71.9942, -92.8161, -31.6740, -66.2419, -61.3627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5189, device='cuda:0', dtype=torch.float64)
tensor([-71.9680, -93.0121, -31.5624, -66.4811, -61.6011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4953, device='cuda:0', dtype=torch.float64)
tensor([-71.5047, -92.8815, -31.2819, -66.4824, -61.7251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4688, device='cuda:0', dtype=torch.float64)
tensor([-71.3143, -92.8589, -31.2658, -66.6057, -61.8533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4820, device='cuda:0', dtype=torch.float64)
tensor([-71.2151, -92.7253, -31.2299, -66.7859, -61.8577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5622, device='cuda:0', dtype=torch.float64)
tensor([-71.4954, -92.7708, -31.2212, -67.0855, -61.9662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5021, device='cuda:0', dtype=torch.float64)
tensor([-71.8623, -92.6864, -31.1703, -67.3849, -61.9846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4396, device='cuda:0', dtype=torch.float64)
tensor([-72.2279, -92.5965, -31.2855, -67.6906, -61.9792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3963, device='cuda:0', dtype=torch.float64)
tensor([-72.2761, -92.3912, -31.3728, -67.6281, -61.9076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3850, device='cuda:0', dtype=torch.float64)
tensor([-72.0035, -92.2396, -31.4347, -67.4471, -61.8690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4632, device='cuda:0', dtype=torch.float64)
tensor([-72.6394, -92.0577, -31.6641, -67.8090, -61.4561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4666, device='cuda:0', dtype=torch.float64)
tensor([-73.4746, -91.6794, -31.9705, -68.1475, -60.7904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4150, device='cuda:0', dtype=torch.float64)
tensor([-73.4710, -91.2704, -32.1734, -68.0545, -60.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4463, device='cuda:0', dtype=torch.float64)
tensor([-73.5213, -90.9500, -32.3375, -68.1435, -59.9089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4479, device='cuda:0', dtype=torch.float64)
tensor([-73.6736, -90.6898, -32.5553, -68.4357, -59.8027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4458, device='cuda:0', dtype=torch.float64)
tensor([-73.9463, -90.3819, -32.7853, -68.6522, -59.5614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3452, device='cuda:0', dtype=torch.float64)
tensor([-73.9263, -90.1821, -32.9760, -68.9228, -59.4261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4121, device='cuda:0', dtype=torch.float64)
tensor([-73.9691, -89.9819, -33.2026, -69.0982, -59.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4126, device='cuda:0', dtype=torch.float64)
tensor([-74.5180, -89.8797, -33.6343, -69.4225, -58.6350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4757, device='cuda:0', dtype=torch.float64)
tensor([-73.7666, -89.6493, -33.8337, -68.9271, -58.5960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4528, device='cuda:0', dtype=torch.float64)
tensor([-73.0349, -89.4679, -34.0919, -68.5455, -58.7737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4916, device='cuda:0', dtype=torch.float64)
tensor([-73.2893, -89.4990, -34.4289, -68.6168, -58.8689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4945, device='cuda:0', dtype=torch.float64)
tensor([-73.7041, -89.5893, -34.6845, -68.6752, -58.8224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4449, device='cuda:0', dtype=torch.float64)
tensor([-73.9026, -89.7302, -34.8005, -68.6251, -58.8541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4659, device='cuda:0', dtype=torch.float64)
tensor([-73.7339, -89.9052, -34.8365, -68.3455, -59.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4722, device='cuda:0', dtype=torch.float64)
tensor([-73.4406, -90.2216, -34.9641, -68.0571, -59.6961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4527, device='cuda:0', dtype=torch.float64)
tensor([-73.3871, -90.4741, -35.1483, -67.7935, -60.0360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4388, device='cuda:0', dtype=torch.float64)
tensor([-73.7286, -90.7803, -35.3360, -67.9922, -60.4304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4035, device='cuda:0', dtype=torch.float64)
tensor([-74.3079, -91.1014, -35.6783, -68.2912, -60.8477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4425, device='cuda:0', dtype=torch.float64)
tensor([-74.6301, -91.4369, -35.8930, -68.5509, -61.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3861, device='cuda:0', dtype=torch.float64)
tensor([-75.6032, -91.6706, -36.2668, -69.1332, -61.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3987, device='cuda:0', dtype=torch.float64)
tensor([-76.6655, -91.9595, -36.6985, -69.7683, -60.8358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4828, device='cuda:0', dtype=torch.float64)
tensor([-77.5286, -92.3500, -37.2295, -70.1740, -60.6160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4172, device='cuda:0', dtype=torch.float64)
tensor([-78.1294, -92.5750, -37.7242, -70.4406, -60.5039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3857, device='cuda:0', dtype=torch.float64)
tensor([-78.7826, -92.8067, -38.1530, -70.7902, -60.2774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3905, device='cuda:0', dtype=torch.float64)
tensor([-79.0838, -93.1369, -38.4594, -71.1155, -60.4171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4323, device='cuda:0', dtype=torch.float64)
tensor([-79.9886, -93.3223, -38.8357, -71.5197, -60.3936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4147, device='cuda:0', dtype=torch.float64)
tensor([-80.8163, -93.3917, -39.1781, -71.9216, -60.3462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4541, device='cuda:0', dtype=torch.float64)
tensor([-80.5633, -93.5569, -39.1421, -71.9343, -61.1164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4321, device='cuda:0', dtype=torch.float64)
tensor([-80.4029, -93.8997, -38.9557, -72.0796, -62.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4600, device='cuda:0', dtype=torch.float64)
tensor([-80.2372, -94.3918, -38.6890, -72.4362, -63.2768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3870, device='cuda:0', dtype=torch.float64)
tensor([-79.9054, -95.1019, -38.2867, -72.9135, -64.7808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3959, device='cuda:0', dtype=torch.float64)
tensor([-80.0817, -95.7805, -38.0001, -73.7092, -65.9243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4088, device='cuda:0', dtype=torch.float64)
tensor([-80.0887, -96.4005, -37.6089, -74.3429, -67.0568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3130, device='cuda:0', dtype=torch.float64)
tensor([-79.8797, -97.0444, -37.1720, -74.7956, -68.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3656, device='cuda:0', dtype=torch.float64)
tensor([-79.2401, -97.8455, -36.6197, -75.1105, -69.6188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4339, device='cuda:0', dtype=torch.float64)
tensor([-79.3117, -98.4746, -36.2873, -75.6543, -70.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3981, device='cuda:0', dtype=torch.float64)
tensor([-79.7698, -98.8810, -36.1428, -76.2494, -70.4024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4233, device='cuda:0', dtype=torch.float64)
tensor([-80.0672, -99.1194, -35.9379, -76.6119, -70.3776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4577, device='cuda:0', dtype=torch.float64)
tensor([-80.9546, -99.2104, -35.8548, -77.1102, -69.7965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3922, device='cuda:0', dtype=torch.float64)
tensor([-81.6484, -99.2112, -35.8342, -77.5544, -68.9803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3462, device='cuda:0', dtype=torch.float64)
tensor([-81.7235, -99.0716, -35.7099, -77.7242, -68.6566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4376, device='cuda:0', dtype=torch.float64)
tensor([-81.2922, -99.3367, -35.4214, -78.0280, -68.7182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3830, device='cuda:0', dtype=torch.float64)
tensor([-80.8359, -99.4036, -35.1547, -78.1335, -68.6406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3591, device='cuda:0', dtype=torch.float64)
tensor([-80.4462, -99.5336, -34.9202, -78.3182, -68.5161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([-80.3864, -99.4223, -34.8720, -78.2283, -68.0773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4300, device='cuda:0', dtype=torch.float64)
tensor([-80.3533, -98.9733, -34.8816, -78.0166, -67.3286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4152, device='cuda:0', dtype=torch.float64)
tensor([-81.7800, -98.4347, -35.2072, -78.0837, -65.9293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4229, device='cuda:0', dtype=torch.float64)
tensor([-82.6518, -97.9674, -35.4450, -78.0215, -64.7785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3215, device='cuda:0', dtype=torch.float64)
tensor([-83.3367, -97.5812, -35.5933, -77.8437, -63.8159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4161, device='cuda:0', dtype=torch.float64)
tensor([-83.5622, -97.3974, -35.5156, -77.7233, -63.1868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3717, device='cuda:0', dtype=torch.float64)
tensor([-84.1623, -97.4731, -35.4966, -77.9413, -62.6186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4384, device='cuda:0', dtype=torch.float64)
tensor([-84.6622, -97.5946, -35.4769, -78.1920, -61.9594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4524, device='cuda:0', dtype=torch.float64)
tensor([-85.0824, -97.9047, -35.5740, -78.6584, -61.2897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4288, device='cuda:0', dtype=torch.float64)
tensor([-85.7854, -98.1289, -35.7679, -79.0865, -60.5126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4334, device='cuda:0', dtype=torch.float64)
tensor([-85.8195, -98.2857, -35.9584, -79.1929, -60.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3442, device='cuda:0', dtype=torch.float64)
tensor([-86.0676, -98.4411, -36.1311, -79.3287, -59.8774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4522, device='cuda:0', dtype=torch.float64)
tensor([-85.9792, -98.5396, -36.2444, -79.2764, -59.8389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3823, device='cuda:0', dtype=torch.float64)
tensor([-85.9457, -98.5610, -36.4646, -79.0888, -59.7473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3689, device='cuda:0', dtype=torch.float64)
tensor([-86.2428, -98.8156, -36.6924, -79.1140, -59.6417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4198, device='cuda:0', dtype=torch.float64)
tensor([-86.6418, -98.8425, -37.0375, -78.8569, -59.3561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3912, device='cuda:0', dtype=torch.float64)
tensor([-87.6085, -98.9609, -37.5285, -78.8037, -58.9713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3613, device='cuda:0', dtype=torch.float64)
tensor([-88.2389, -99.0142, -37.8663, -78.6740, -58.7501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3497, device='cuda:0', dtype=torch.float64)
tensor([-88.9362, -99.1909, -38.2498, -78.6225, -58.6690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4583, device='cuda:0', dtype=torch.float64)
tensor([-89.0547, -99.5596, -38.3668, -78.6886, -58.9640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3309, device='cuda:0', dtype=torch.float64)
tensor([-89.0227, -99.9313, -38.4314, -78.8805, -59.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4577, device='cuda:0', dtype=torch.float64)
tensor([ -88.8998, -100.2391,  -38.5125,  -78.7540,  -59.5692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3914, device='cuda:0', dtype=torch.float64)
tensor([ -88.4660, -100.4600,  -38.6806,  -78.4323,  -59.8172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3822, device='cuda:0', dtype=torch.float64)
tensor([ -87.4687, -100.5318,  -38.8612,  -77.7825,  -60.1343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3860, device='cuda:0', dtype=torch.float64)
tensor([ -86.5856, -100.5005,  -39.0613,  -77.1702,  -60.2840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4516, device='cuda:0', dtype=torch.float64)
tensor([ -85.6802, -100.3556,  -39.2358,  -76.3848,  -60.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3904, device='cuda:0', dtype=torch.float64)
tensor([ -84.2745, -100.0125,  -39.3252,  -75.3720,  -60.5405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3805, device='cuda:0', dtype=torch.float64)
tensor([-83.5216, -99.7201, -39.5320, -74.5469, -60.5650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4236, device='cuda:0', dtype=torch.float64)
tensor([-82.1965, -99.5038, -39.4966, -73.7459, -60.8621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4263, device='cuda:0', dtype=torch.float64)
tensor([-81.2950, -99.3865, -39.5150, -73.2841, -61.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3408, device='cuda:0', dtype=torch.float64)
tensor([-80.2242, -99.1565, -39.4887, -72.6212, -61.6131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4045, device='cuda:0', dtype=torch.float64)
tensor([-78.6713, -99.0277, -39.3115, -71.8468, -62.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3318, device='cuda:0', dtype=torch.float64)
tensor([-77.5643, -98.9912, -39.2184, -71.2141, -62.4812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3220, device='cuda:0', dtype=torch.float64)
tensor([-76.5419, -98.8642, -39.2239, -70.4869, -62.6894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3412, device='cuda:0', dtype=torch.float64)
tensor([-75.9102, -98.7765, -39.2613, -69.8946, -62.9526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3509, device='cuda:0', dtype=torch.float64)
tensor([-75.2150, -98.8530, -39.1423, -69.4270, -63.4028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4034, device='cuda:0', dtype=torch.float64)
tensor([-75.2429, -98.7492, -39.1356, -69.2258, -63.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3678, device='cuda:0', dtype=torch.float64)
tensor([-75.8844, -98.7597, -39.2632, -69.4022, -63.6472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3462, device='cuda:0', dtype=torch.float64)
tensor([-76.9200, -98.7223, -39.4259, -69.7301, -63.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3529, device='cuda:0', dtype=torch.float64)
tensor([-77.8018, -98.7586, -39.5080, -70.0961, -63.0318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3415, device='cuda:0', dtype=torch.float64)
tensor([-79.0511, -98.9971, -39.6877, -70.7675, -62.5962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3424, device='cuda:0', dtype=torch.float64)
tensor([-80.4699, -99.1963, -39.9063, -71.5136, -61.9541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3856, device='cuda:0', dtype=torch.float64)
tensor([-82.4767, -99.2506, -40.3344, -72.2257, -60.9933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4037, device='cuda:0', dtype=torch.float64)
tensor([-85.0469, -99.2595, -40.9000, -73.1827, -59.7668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3192, device='cuda:0', dtype=torch.float64)
tensor([-88.1265, -99.2619, -41.6441, -74.2094, -58.4719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3780, device='cuda:0', dtype=torch.float64)
tensor([-90.9241, -99.2571, -42.3889, -75.1845, -57.3534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3808, device='cuda:0', dtype=torch.float64)
tensor([-93.9135, -99.4066, -43.1300, -76.3450, -56.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3321, device='cuda:0', dtype=torch.float64)
tensor([-96.7270, -99.3846, -43.8293, -77.3493, -55.4610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3479, device='cuda:0', dtype=torch.float64)
tensor([-98.9988, -99.5091, -44.3922, -78.3731, -54.7440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3655, device='cuda:0', dtype=torch.float64)
tensor([-100.8958,  -99.5038,  -44.9439,  -79.2008,  -54.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3378, device='cuda:0', dtype=torch.float64)
tensor([-102.2084,  -99.5785,  -45.2933,  -79.8826,  -53.8705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4188, device='cuda:0', dtype=torch.float64)
tensor([-103.1539,  -99.4025,  -45.6013,  -80.2227,  -53.6598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2734, device='cuda:0', dtype=torch.float64)
tensor([-104.0907,  -99.2460,  -45.9437,  -80.4760,  -53.5260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3561, device='cuda:0', dtype=torch.float64)
tensor([-105.1480,  -99.3379,  -46.2990,  -80.8668,  -53.6456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3332, device='cuda:0', dtype=torch.float64)
tensor([-106.2451,  -99.4839,  -46.7038,  -81.4018,  -53.7963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2930, device='cuda:0', dtype=torch.float64)
tensor([-106.5901,  -99.5935,  -46.9156,  -81.5521,  -53.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3221, device='cuda:0', dtype=torch.float64)
tensor([-106.3783,  -99.4916,  -47.0707,  -81.4160,  -54.2162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3537, device='cuda:0', dtype=torch.float64)
tensor([-104.9466,  -99.2816,  -46.8558,  -80.8836,  -54.5490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3182, device='cuda:0', dtype=torch.float64)
tensor([-103.5697,  -99.1233,  -46.6278,  -80.4254,  -54.8133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3539, device='cuda:0', dtype=torch.float64)
tensor([-101.5475,  -98.8100,  -46.2074,  -79.8376,  -55.1440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3673, device='cuda:0', dtype=torch.float64)
tensor([-99.2615, -98.2282, -45.7469, -79.1014, -55.4771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4038, device='cuda:0', dtype=torch.float64)
tensor([-97.6413, -97.8633, -45.4670, -78.7825, -55.7626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2836, device='cuda:0', dtype=torch.float64)
tensor([-95.5215, -97.4468, -45.1078, -78.5113, -56.1209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3600, device='cuda:0', dtype=torch.float64)
tensor([-93.2449, -97.0679, -44.6838, -78.3311, -56.7014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3103, device='cuda:0', dtype=torch.float64)
tensor([-91.6175, -96.8264, -44.4368, -78.2091, -57.0267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3490, device='cuda:0', dtype=torch.float64)
tensor([-90.6173, -96.6218, -44.3179, -78.2946, -57.2182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3415, device='cuda:0', dtype=torch.float64)
tensor([-89.5079, -96.2750, -44.1238, -78.2008, -57.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2882, device='cuda:0', dtype=torch.float64)
tensor([-88.2433, -95.8837, -43.9054, -78.1736, -57.4127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3627, device='cuda:0', dtype=torch.float64)
tensor([-86.9777, -95.6542, -43.6517, -78.2313, -57.6692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3298, device='cuda:0', dtype=torch.float64)
tensor([-85.6523, -95.3537, -43.3471, -78.1608, -58.0209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3214, device='cuda:0', dtype=torch.float64)
tensor([-84.3424, -95.0727, -43.0827, -78.2779, -58.4591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2914, device='cuda:0', dtype=torch.float64)
tensor([-83.5823, -94.8357, -42.9225, -78.3521, -58.7527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3267, device='cuda:0', dtype=torch.float64)
tensor([-83.0592, -94.5608, -42.8496, -78.4345, -58.8383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4238, device='cuda:0', dtype=torch.float64)
tensor([-82.4532, -94.5595, -42.7469, -78.8794, -59.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3291, device='cuda:0', dtype=torch.float64)
tensor([-81.8710, -94.4136, -42.6323, -79.1873, -59.4877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3498, device='cuda:0', dtype=torch.float64)
tensor([-81.1900, -94.2424, -42.4225, -79.5738, -59.9312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3340, device='cuda:0', dtype=torch.float64)
tensor([-80.8731, -94.1618, -42.3621, -80.0032, -60.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3842, device='cuda:0', dtype=torch.float64)
tensor([-81.3002, -94.1355, -42.6209, -80.5790, -60.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3009, device='cuda:0', dtype=torch.float64)
tensor([-81.3908, -94.0110, -42.8271, -80.9980, -60.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3088, device='cuda:0', dtype=torch.float64)
tensor([-81.5016, -93.8438, -43.0272, -81.4491, -60.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3156, device='cuda:0', dtype=torch.float64)
tensor([-81.6869, -93.6919, -43.2576, -82.1046, -60.6157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3310, device='cuda:0', dtype=torch.float64)
tensor([-82.2537, -93.6331, -43.5766, -82.9589, -60.6896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3278, device='cuda:0', dtype=torch.float64)
tensor([-82.7170, -93.5250, -43.9164, -83.6604, -60.8434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3518, device='cuda:0', dtype=torch.float64)
tensor([-82.9585, -93.1710, -44.1348, -84.0425, -61.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3481, device='cuda:0', dtype=torch.float64)
tensor([-83.2452, -92.8198, -44.3776, -84.3282, -61.6070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3381, device='cuda:0', dtype=torch.float64)
tensor([-83.2263, -92.5327, -44.5562, -84.6509, -62.0344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3132, device='cuda:0', dtype=torch.float64)
tensor([-83.3766, -92.0279, -44.7485, -84.6533, -61.9994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3214, device='cuda:0', dtype=torch.float64)
tensor([-83.8654, -91.3710, -44.9459, -84.6693, -61.5699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3248, device='cuda:0', dtype=torch.float64)
tensor([-83.9245, -90.8169, -44.9711, -84.6569, -61.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3343, device='cuda:0', dtype=torch.float64)
tensor([-83.7251, -90.4400, -44.9576, -84.5958, -61.5416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3028, device='cuda:0', dtype=torch.float64)
tensor([-83.2423, -89.9726, -44.9222, -84.2171, -61.7707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3344, device='cuda:0', dtype=torch.float64)
tensor([-82.7482, -89.5709, -44.8411, -83.7653, -61.9682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2890, device='cuda:0', dtype=torch.float64)
tensor([-82.0083, -89.2251, -44.7729, -83.3182, -62.4253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3427, device='cuda:0', dtype=torch.float64)
tensor([-81.2181, -88.9690, -44.6586, -82.8260, -62.9496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3400, device='cuda:0', dtype=torch.float64)
tensor([-80.8143, -88.6633, -44.5538, -82.2953, -63.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3282, device='cuda:0', dtype=torch.float64)
tensor([-79.9900, -88.3371, -44.3682, -81.4080, -63.6231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3336, device='cuda:0', dtype=torch.float64)
tensor([-79.2661, -88.0646, -44.2320, -80.5675, -64.0219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3116, device='cuda:0', dtype=torch.float64)
tensor([-78.7103, -87.8692, -44.1024, -79.7064, -64.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3358, device='cuda:0', dtype=torch.float64)
tensor([-78.0369, -87.5744, -44.0237, -78.9001, -64.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3199, device='cuda:0', dtype=torch.float64)
tensor([-78.4283, -87.0416, -44.1903, -78.2685, -63.7553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2757, device='cuda:0', dtype=torch.float64)
tensor([-78.8830, -86.4063, -44.4633, -77.3721, -63.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2710, device='cuda:0', dtype=torch.float64)
tensor([-79.1389, -85.8449, -44.6329, -76.5909, -62.7008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2997, device='cuda:0', dtype=torch.float64)
tensor([-79.8576, -85.3848, -44.8249, -76.1834, -62.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3530, device='cuda:0', dtype=torch.float64)
tensor([-81.0724, -84.9443, -45.1475, -76.1105, -61.7195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2797, device='cuda:0', dtype=torch.float64)
tensor([-81.7569, -84.6510, -45.3418, -76.1217, -61.5423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3194, device='cuda:0', dtype=torch.float64)
tensor([-82.5612, -84.3485, -45.5160, -76.1550, -61.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4011, device='cuda:0', dtype=torch.float64)
tensor([-83.0700, -84.2025, -45.8105, -75.9818, -61.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4033, device='cuda:0', dtype=torch.float64)
tensor([-84.8144, -84.0228, -46.3040, -76.0191, -60.5163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2928, device='cuda:0', dtype=torch.float64)
tensor([-86.6953, -83.8657, -46.8183, -76.2145, -59.8689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2998, device='cuda:0', dtype=torch.float64)
tensor([-88.6820, -83.7246, -47.4656, -76.3323, -59.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2933, device='cuda:0', dtype=torch.float64)
tensor([-90.6585, -83.6991, -48.0739, -76.6329, -58.3237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2911, device='cuda:0', dtype=torch.float64)
tensor([-91.8313, -83.6892, -48.4778, -76.8231, -57.8839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3004, device='cuda:0', dtype=torch.float64)
tensor([-93.2100, -83.8271, -48.9295, -77.1579, -57.4106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3083, device='cuda:0', dtype=torch.float64)
tensor([-93.7185, -84.0562, -49.1916, -77.4593, -57.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3131, device='cuda:0', dtype=torch.float64)
tensor([-94.1530, -84.2748, -49.3971, -77.7345, -57.4217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3434, device='cuda:0', dtype=torch.float64)
tensor([-95.2852, -84.6174, -49.7861, -78.3508, -57.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2835, device='cuda:0', dtype=torch.float64)
tensor([-95.9035, -84.8318, -50.0303, -78.7350, -57.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2807, device='cuda:0', dtype=torch.float64)
tensor([-96.1216, -84.9775, -50.3269, -78.8635, -57.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3358, device='cuda:0', dtype=torch.float64)
tensor([-96.0233, -85.1195, -50.5313, -78.8085, -57.3396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2864, device='cuda:0', dtype=torch.float64)
tensor([-95.7944, -85.2882, -50.7927, -78.8102, -57.6962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2888, device='cuda:0', dtype=torch.float64)
tensor([-95.6807, -85.3922, -51.0463, -78.8625, -57.8509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2930, device='cuda:0', dtype=torch.float64)
tensor([-95.4857, -85.5497, -51.2893, -78.7599, -58.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3228, device='cuda:0', dtype=torch.float64)
tensor([-94.8714, -85.7431, -51.4954, -78.6192, -58.7160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3185, device='cuda:0', dtype=torch.float64)
tensor([-94.3076, -86.0481, -51.6838, -78.6967, -59.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3100, device='cuda:0', dtype=torch.float64)
tensor([-93.2419, -86.4205, -51.7436, -79.0080, -60.0133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2961, device='cuda:0', dtype=torch.float64)
tensor([-92.4288, -86.6641, -51.9246, -79.1886, -60.7016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2913, device='cuda:0', dtype=torch.float64)
tensor([-91.9692, -86.8626, -52.1825, -79.5383, -61.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2746, device='cuda:0', dtype=torch.float64)
tensor([-91.7511, -87.2209, -52.3917, -80.0441, -61.8350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2567, device='cuda:0', dtype=torch.float64)
tensor([-91.1228, -87.6430, -52.4964, -80.2912, -62.8070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2817, device='cuda:0', dtype=torch.float64)
tensor([-90.7244, -88.0831, -52.6414, -80.5288, -63.6121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3037, device='cuda:0', dtype=torch.float64)
tensor([-90.7145, -88.4361, -52.8395, -80.8666, -64.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2538, device='cuda:0', dtype=torch.float64)
tensor([-90.9912, -88.7606, -53.1498, -81.3783, -64.7364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2853, device='cuda:0', dtype=torch.float64)
tensor([-92.1657, -88.9761, -53.6616, -81.9805, -64.7385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2917, device='cuda:0', dtype=torch.float64)
tensor([-93.4634, -89.2244, -54.1831, -82.7854, -64.7456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2591, device='cuda:0', dtype=torch.float64)
tensor([-94.4127, -89.3455, -54.6367, -83.3569, -64.7395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2992, device='cuda:0', dtype=torch.float64)
tensor([-95.4203, -89.3353, -55.1801, -83.7620, -64.6670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3129, device='cuda:0', dtype=torch.float64)
tensor([-95.4844, -89.4210, -55.4483, -84.0149, -64.9814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2437, device='cuda:0', dtype=torch.float64)
tensor([-95.5214, -89.4823, -55.7513, -84.1720, -65.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3122, device='cuda:0', dtype=torch.float64)
tensor([-94.8178, -89.5649, -55.7825, -84.3929, -66.0378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2851, device='cuda:0', dtype=torch.float64)
tensor([-94.2998, -89.7065, -55.7772, -84.8808, -66.6435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2710, device='cuda:0', dtype=torch.float64)
tensor([-93.8948, -89.8502, -55.7321, -85.5104, -67.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3141, device='cuda:0', dtype=torch.float64)
tensor([-93.4264, -89.8590, -55.5842, -85.8470, -67.7824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2611, device='cuda:0', dtype=torch.float64)
tensor([-93.2853, -89.8177, -55.5018, -86.1377, -67.7806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2274, device='cuda:0', dtype=torch.float64)
tensor([-93.7695, -89.6720, -55.6008, -86.5302, -67.3661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2569, device='cuda:0', dtype=torch.float64)
tensor([-94.1958, -89.5954, -55.6452, -86.7634, -67.1010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2305, device='cuda:0', dtype=torch.float64)
tensor([-94.4350, -89.4576, -55.6349, -86.9102, -66.8296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2563, device='cuda:0', dtype=torch.float64)
tensor([-94.9236, -89.4716, -55.6314, -87.2280, -66.4649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2800, device='cuda:0', dtype=torch.float64)
tensor([-95.8719, -89.5575, -55.7129, -87.6404, -65.7170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3067, device='cuda:0', dtype=torch.float64)
tensor([-96.6465, -89.7030, -55.7004, -88.0314, -65.0188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3411, device='cuda:0', dtype=torch.float64)
tensor([-97.4663, -89.7888, -55.8018, -88.4317, -64.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2955, device='cuda:0', dtype=torch.float64)
tensor([-98.6888, -89.8426, -56.0240, -88.9648, -63.9035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2526, device='cuda:0', dtype=torch.float64)
tensor([-100.1255,  -89.8822,  -56.3545,  -89.5497,  -63.2142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2648, device='cuda:0', dtype=torch.float64)
tensor([-101.9434,  -89.9310,  -56.8759,  -90.2072,  -62.4825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2699, device='cuda:0', dtype=torch.float64)
tensor([-103.6058,  -89.9561,  -57.4006,  -90.7417,  -62.0710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([-104.5437,  -89.9933,  -57.6948,  -91.2118,  -62.0423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2496, device='cuda:0', dtype=torch.float64)
tensor([-105.7437,  -90.0176,  -58.1272,  -91.6819,  -61.8374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2775, device='cuda:0', dtype=torch.float64)
tensor([-106.8985,  -90.1287,  -58.6259,  -92.0550,  -61.6880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2956, device='cuda:0', dtype=torch.float64)
tensor([-107.8849,  -90.2014,  -58.9672,  -92.3925,  -61.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3072, device='cuda:0', dtype=torch.float64)
tensor([-108.9681,  -90.3119,  -59.2886,  -92.7272,  -61.2875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2316, device='cuda:0', dtype=torch.float64)
tensor([-109.7007,  -90.4157,  -59.5846,  -93.1214,  -61.1987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3095, device='cuda:0', dtype=torch.float64)
tensor([-109.7516,  -90.5008,  -59.7320,  -93.3109,  -61.4279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2506, device='cuda:0', dtype=torch.float64)
tensor([-109.6768,  -90.5790,  -59.8160,  -93.5681,  -61.5795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2204, device='cuda:0', dtype=torch.float64)
tensor([-109.6767,  -90.6318,  -59.9125,  -93.6492,  -61.5752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2707, device='cuda:0', dtype=torch.float64)
tensor([-108.6189,  -90.5695,  -59.7267,  -93.5282,  -61.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2154, device='cuda:0', dtype=torch.float64)
tensor([-107.3021,  -90.4571,  -59.4866,  -93.2575,  -61.9206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2715, device='cuda:0', dtype=torch.float64)
tensor([-106.6624,  -90.3624,  -59.4577,  -93.0643,  -61.9765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2654, device='cuda:0', dtype=torch.float64)
tensor([-105.7253,  -90.3989,  -59.2607,  -92.9211,  -62.0765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2752, device='cuda:0', dtype=torch.float64)
tensor([-105.8340,  -90.4158,  -59.3821,  -93.0350,  -61.9801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2368, device='cuda:0', dtype=torch.float64)
tensor([-105.6579,  -90.4275,  -59.3898,  -93.2286,  -62.0125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2707, device='cuda:0', dtype=torch.float64)
tensor([-105.8273,  -90.3976,  -59.4899,  -93.4838,  -61.9229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2267, device='cuda:0', dtype=torch.float64)
tensor([-105.4718,  -90.3761,  -59.4475,  -93.6498,  -61.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2922, device='cuda:0', dtype=torch.float64)
tensor([-104.7088,  -90.4162,  -59.2166,  -94.0046,  -62.3590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2562, device='cuda:0', dtype=torch.float64)
tensor([-103.9239,  -90.5577,  -58.9928,  -94.3330,  -62.9377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2537, device='cuda:0', dtype=torch.float64)
tensor([-102.8985,  -90.7769,  -58.6842,  -94.7228,  -63.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2590, device='cuda:0', dtype=torch.float64)
tensor([-101.4591,  -91.0728,  -58.2765,  -95.0893,  -64.4959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2446, device='cuda:0', dtype=torch.float64)
tensor([-100.3408,  -91.3197,  -57.9097,  -95.5343,  -65.3680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2762, device='cuda:0', dtype=torch.float64)
tensor([-99.2987, -91.5528, -57.5523, -95.9886, -66.2655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2903, device='cuda:0', dtype=torch.float64)
tensor([-97.6869, -91.7514, -57.1261, -96.2995, -67.6914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2200, device='cuda:0', dtype=torch.float64)
tensor([-96.6743, -92.0234, -56.8713, -96.6621, -68.8318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2227, device='cuda:0', dtype=torch.float64)
tensor([-95.4879, -92.3549, -56.5662, -96.9270, -70.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2300, device='cuda:0', dtype=torch.float64)
tensor([-95.0606, -92.6074, -56.4551, -97.2509, -71.0005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1961, device='cuda:0', dtype=torch.float64)
tensor([-95.0755, -92.9842, -56.4365, -97.8458, -71.6481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2348, device='cuda:0', dtype=torch.float64)
tensor([-95.2724, -93.2986, -56.5610, -98.2258, -72.3005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2019, device='cuda:0', dtype=torch.float64)
tensor([-95.2751, -93.5860, -56.6537, -98.4505, -73.0538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2284, device='cuda:0', dtype=torch.float64)
tensor([-95.1185, -93.6959, -56.8216, -98.3465, -73.5418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2254, device='cuda:0', dtype=torch.float64)
tensor([-95.2950, -93.6970, -57.1972, -98.2970, -73.8196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2349, device='cuda:0', dtype=torch.float64)
tensor([-96.1069, -93.6149, -57.7613, -98.4897, -73.7193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2327, device='cuda:0', dtype=torch.float64)
tensor([-96.6438, -93.4647, -58.2714, -98.8309, -73.8260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2244, device='cuda:0', dtype=torch.float64)
tensor([-96.8562, -93.3925, -58.7148, -99.0259, -74.0789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2258, device='cuda:0', dtype=torch.float64)
tensor([-96.3753, -93.3111, -58.9795, -99.0195, -74.6868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2536, device='cuda:0', dtype=torch.float64)
tensor([-96.6316, -93.1860, -59.4632, -99.1869, -74.8900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2806, device='cuda:0', dtype=torch.float64)
tensor([-96.7820, -92.9390, -60.0470, -98.9655, -75.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1932, device='cuda:0', dtype=torch.float64)
tensor([-96.9155, -92.7507, -60.6029, -98.6156, -75.3360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2328, device='cuda:0', dtype=torch.float64)
tensor([-96.9108, -92.5889, -61.0865, -98.3949, -75.6657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2741, device='cuda:0', dtype=torch.float64)
tensor([-97.1926, -92.3168, -61.5391, -98.3182, -75.5809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1843, device='cuda:0', dtype=torch.float64)
tensor([-97.2937, -92.0636, -61.8644, -98.0973, -75.5639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2161, device='cuda:0', dtype=torch.float64)
tensor([-97.5805, -91.7958, -62.2516, -98.0422, -75.6098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2412, device='cuda:0', dtype=torch.float64)
tensor([-98.3860, -91.5634, -62.6825, -97.8678, -75.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2005, device='cuda:0', dtype=torch.float64)
tensor([-99.3199, -91.3834, -63.1089, -97.7464, -74.7290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2413, device='cuda:0', dtype=torch.float64)
tensor([-99.7103, -91.2169, -63.4858, -97.4340, -74.7033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.1918, device='cuda:0', dtype=torch.float64)
tensor([-100.2447,  -91.1544,  -63.9148,  -97.1538,  -74.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2675, device='cuda:0', dtype=torch.float64)
tensor([-100.7257,  -91.0623,  -64.2974,  -97.1027,  -74.5028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1987, device='cuda:0', dtype=torch.float64)
tensor([-101.0291,  -90.8895,  -64.6635,  -96.9272,  -74.5591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2359, device='cuda:0', dtype=torch.float64)
tensor([-101.6518,  -90.7231,  -65.0829,  -96.9773,  -74.5503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2370, device='cuda:0', dtype=torch.float64)
tensor([-102.2564,  -90.5523,  -65.4626,  -97.0586,  -74.6105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2266, device='cuda:0', dtype=torch.float64)
tensor([-102.7232,  -90.3855,  -65.7441,  -97.0671,  -74.6927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1975, device='cuda:0', dtype=torch.float64)
tensor([-103.1625,  -90.2847,  -65.9152,  -97.0272,  -74.7190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2449, device='cuda:0', dtype=torch.float64)
tensor([-103.5254,  -90.1496,  -66.0500,  -96.8674,  -74.8261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2274, device='cuda:0', dtype=torch.float64)
tensor([-104.0076,  -90.0226,  -66.1713,  -96.8911,  -74.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2009, device='cuda:0', dtype=torch.float64)
tensor([-104.3188,  -90.0287,  -66.1816,  -96.8437,  -74.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1962, device='cuda:0', dtype=torch.float64)
tensor([-104.4928,  -89.9783,  -66.1778,  -96.7381,  -75.0578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2371, device='cuda:0', dtype=torch.float64)
tensor([-104.6563,  -89.9764,  -66.1199,  -96.6630,  -75.3924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2221, device='cuda:0', dtype=torch.float64)
tensor([-105.1420,  -90.0454,  -66.1091,  -96.9541,  -75.4213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2394, device='cuda:0', dtype=torch.float64)
tensor([-105.6528,  -90.1633,  -66.0412,  -97.2484,  -75.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2426, device='cuda:0', dtype=torch.float64)
tensor([-105.8165,  -90.3924,  -65.8089,  -97.6692,  -75.4666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2282, device='cuda:0', dtype=torch.float64)
tensor([-105.8328,  -90.4852,  -65.5955,  -98.0283,  -75.4045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2182, device='cuda:0', dtype=torch.float64)
tensor([-106.2401,  -90.5333,  -65.4660,  -98.4502,  -75.1288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2095, device='cuda:0', dtype=torch.float64)
tensor([-106.6049,  -90.5964,  -65.3120,  -98.7625,  -74.7907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2192, device='cuda:0', dtype=torch.float64)
tensor([-106.7581,  -90.5755,  -65.1663,  -98.9258,  -74.4327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2098, device='cuda:0', dtype=torch.float64)
tensor([-106.8202,  -90.6238,  -65.0111,  -99.1920,  -74.1766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1831, device='cuda:0', dtype=torch.float64)
tensor([-106.8498,  -90.6694,  -64.9060,  -99.5223,  -73.8677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2427, device='cuda:0', dtype=torch.float64)
tensor([-107.3008,  -90.8060,  -64.8215,  -99.9581,  -73.5314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1966, device='cuda:0', dtype=torch.float64)
tensor([-107.8161,  -90.8838,  -64.8387, -100.3608,  -73.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2281, device='cuda:0', dtype=torch.float64)
tensor([-108.3378,  -90.9052,  -64.9343, -100.7943,  -72.8849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2281, device='cuda:0', dtype=torch.float64)
tensor([-108.4089,  -91.0614,  -64.8916, -101.1839,  -72.8608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2213, device='cuda:0', dtype=torch.float64)
tensor([-108.7542,  -91.1707,  -64.9106, -101.5120,  -72.9046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2085, device='cuda:0', dtype=torch.float64)
tensor([-108.8583,  -91.3298,  -64.8868, -101.8653,  -73.1381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1957, device='cuda:0', dtype=torch.float64)
tensor([-108.6443,  -91.5531,  -64.7222, -102.2121,  -73.4817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1996, device='cuda:0', dtype=torch.float64)
tensor([-108.4817,  -91.8811,  -64.5091, -102.8469,  -73.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1855, device='cuda:0', dtype=torch.float64)
tensor([-108.1597,  -92.1967,  -64.2791, -103.3965,  -74.5659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2025, device='cuda:0', dtype=torch.float64)
tensor([-108.0556,  -92.5212,  -64.1400, -104.0559,  -74.9465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1966, device='cuda:0', dtype=torch.float64)
tensor([-108.2200,  -92.7770,  -64.0686, -104.5652,  -75.0172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1869, device='cuda:0', dtype=torch.float64)
tensor([-108.5404,  -92.9780,  -64.0695, -105.1810,  -75.0174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2278, device='cuda:0', dtype=torch.float64)
tensor([-108.5730,  -93.1826,  -63.9032, -105.7623,  -75.1009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2181, device='cuda:0', dtype=torch.float64)
tensor([-108.5521,  -93.4074,  -63.7440, -106.3003,  -74.9925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2301, device='cuda:0', dtype=torch.float64)
tensor([-108.7478,  -93.6410,  -63.7270, -107.0263,  -74.8008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1967, device='cuda:0', dtype=torch.float64)
tensor([-109.0554,  -93.8657,  -63.7691, -107.6770,  -74.6347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2140, device='cuda:0', dtype=torch.float64)
tensor([-109.4705,  -94.0429,  -63.8157, -108.0737,  -74.3390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2109, device='cuda:0', dtype=torch.float64)
tensor([-109.8811,  -94.2347,  -63.8345, -108.5723,  -73.8996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2249, device='cuda:0', dtype=torch.float64)
tensor([-110.4878,  -94.3570,  -63.9521, -108.9254,  -73.5966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2087, device='cuda:0', dtype=torch.float64)
tensor([-111.2040,  -94.5475,  -64.1472, -109.2573,  -73.3745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2333, device='cuda:0', dtype=torch.float64)
tensor([-111.7757,  -94.7282,  -64.2958, -109.5968,  -73.3784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2376, device='cuda:0', dtype=torch.float64)
tensor([-112.3641,  -94.8600,  -64.4929, -109.8852,  -73.5765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2481, device='cuda:0', dtype=torch.float64)
tensor([-112.6659,  -94.9371,  -64.6519, -110.0921,  -73.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1768, device='cuda:0', dtype=torch.float64)
tensor([-112.9755,  -95.0312,  -64.7809, -110.3304,  -73.9936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1763, device='cuda:0', dtype=torch.float64)
tensor([-113.0938,  -95.0787,  -64.8627, -110.5454,  -74.3390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2230, device='cuda:0', dtype=torch.float64)
tensor([-113.0052,  -95.1300,  -64.8864, -110.8409,  -74.8553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2148, device='cuda:0', dtype=torch.float64)
tensor([-113.4742,  -95.1866,  -65.0855, -111.1273,  -74.9384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1779, device='cuda:0', dtype=torch.float64)
tensor([-114.0877,  -95.2147,  -65.2303, -111.4361,  -74.9192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2245, device='cuda:0', dtype=torch.float64)
tensor([-114.7452,  -95.2031,  -65.4060, -111.7278,  -74.7838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2083, device='cuda:0', dtype=torch.float64)
tensor([-115.4734,  -95.1608,  -65.7039, -112.1026,  -74.6082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1612, device='cuda:0', dtype=torch.float64)
tensor([-116.0294,  -95.0590,  -65.9559, -112.4944,  -74.3814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1999, device='cuda:0', dtype=torch.float64)
tensor([-116.4966,  -95.0512,  -66.1297, -112.7527,  -74.1274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2068, device='cuda:0', dtype=torch.float64)
tensor([-116.5277,  -95.1069,  -66.1935, -112.8628,  -74.1497],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1995, device='cuda:0', dtype=torch.float64)
tensor([-116.9680,  -95.2456,  -66.3288, -113.1021,  -74.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1956, device='cuda:0', dtype=torch.float64)
tensor([-117.3632,  -95.3905,  -66.3965, -113.5282,  -73.8897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1937, device='cuda:0', dtype=torch.float64)
tensor([-118.3606,  -95.4668,  -66.7659, -114.0775,  -73.2635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1849, device='cuda:0', dtype=torch.float64)
tensor([-119.3104,  -95.5067,  -67.1803, -114.6160,  -72.7046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2026, device='cuda:0', dtype=torch.float64)
tensor([-120.0535,  -95.6722,  -67.4678, -115.1708,  -72.2355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1971, device='cuda:0', dtype=torch.float64)
tensor([-120.6625,  -95.8407,  -67.7543, -115.6165,  -71.9853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2106, device='cuda:0', dtype=torch.float64)
tensor([-121.5462,  -95.9053,  -68.1176, -116.0707,  -71.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([-122.0887,  -96.0942,  -68.3631, -116.6386,  -71.0205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2185, device='cuda:0', dtype=torch.float64)
tensor([-122.4435,  -96.1988,  -68.5652, -116.9766,  -70.7266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1972, device='cuda:0', dtype=torch.float64)
tensor([-122.6067,  -96.2565,  -68.7410, -117.1574,  -70.5364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1781, device='cuda:0', dtype=torch.float64)
tensor([-122.5344,  -96.2237,  -68.8768, -117.1627,  -70.3874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1983, device='cuda:0', dtype=torch.float64)
tensor([-122.7506,  -96.1818,  -69.1106, -117.0204,  -70.0822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1665, device='cuda:0', dtype=torch.float64)
tensor([-122.9253,  -96.0402,  -69.3885, -116.7718,  -69.7290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1874, device='cuda:0', dtype=torch.float64)
tensor([-123.0414,  -96.0101,  -69.5870, -116.5929,  -69.5189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1811, device='cuda:0', dtype=torch.float64)
tensor([-122.6528,  -96.0352,  -69.6195, -116.4572,  -69.5231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1553, device='cuda:0', dtype=torch.float64)
tensor([-122.5129,  -96.0826,  -69.7547, -116.3547,  -69.4255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1693, device='cuda:0', dtype=torch.float64)
tensor([-122.0574,  -96.1150,  -69.7806, -116.3826,  -69.5198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1913, device='cuda:0', dtype=torch.float64)
tensor([-122.0481,  -96.0185,  -69.9999, -116.2061,  -69.3671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1710, device='cuda:0', dtype=torch.float64)
tensor([-121.8703,  -96.0534,  -70.0814, -116.2176,  -69.4283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1762, device='cuda:0', dtype=torch.float64)
tensor([-121.9704,  -96.1262,  -70.4105, -116.3154,  -69.4146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1532, device='cuda:0', dtype=torch.float64)
tensor([-122.2410,  -96.2000,  -70.7229, -116.4986,  -69.3648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1659, device='cuda:0', dtype=torch.float64)
tensor([-122.4629,  -96.2570,  -70.9885, -116.7356,  -69.2961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1616, device='cuda:0', dtype=torch.float64)
tensor([-122.5400,  -96.2839,  -71.0671, -116.8770,  -69.4352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1682, device='cuda:0', dtype=torch.float64)
tensor([-122.2914,  -96.3458,  -70.9986, -117.0008,  -69.7603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1911, device='cuda:0', dtype=torch.float64)
tensor([-122.3221,  -96.3854,  -71.0728, -117.1012,  -69.9120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1528, device='cuda:0', dtype=torch.float64)
tensor([-122.4480,  -96.4606,  -71.1979, -117.2223,  -70.0860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1669, device='cuda:0', dtype=torch.float64)
tensor([-122.6587,  -96.4083,  -71.3368, -117.1962,  -70.1171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1508, device='cuda:0', dtype=torch.float64)
tensor([-122.6911,  -96.3753,  -71.4558, -117.1797,  -70.2544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1359, device='cuda:0', dtype=torch.float64)
tensor([-122.9777,  -96.4159,  -71.6203, -117.2980,  -70.3014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2061, device='cuda:0', dtype=torch.float64)
tensor([-122.6841,  -96.4543,  -71.5833, -117.2093,  -70.7506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1577, device='cuda:0', dtype=torch.float64)
tensor([-122.4557,  -96.4559,  -71.5700, -117.1718,  -71.0861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1474, device='cuda:0', dtype=torch.float64)
tensor([-122.4383,  -96.5169,  -71.5479, -117.2240,  -71.4350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1753, device='cuda:0', dtype=torch.float64)
tensor([-122.4497,  -96.4783,  -71.6441, -117.0908,  -71.7044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1412, device='cuda:0', dtype=torch.float64)
tensor([-121.9917,  -96.5866,  -71.6182, -117.1229,  -72.2728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1772, device='cuda:0', dtype=torch.float64)
tensor([-121.1810,  -96.8131,  -71.4769, -117.1500,  -72.9153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1381, device='cuda:0', dtype=torch.float64)
tensor([-120.3039,  -96.8925,  -71.3235, -117.0095,  -73.3927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1705, device='cuda:0', dtype=torch.float64)
tensor([-118.9994,  -97.0531,  -71.0687, -116.9329,  -74.2716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1866, device='cuda:0', dtype=torch.float64)
tensor([-117.5426,  -97.1753,  -70.7628, -116.7454,  -75.1858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1993, device='cuda:0', dtype=torch.float64)
tensor([-115.5532,  -97.4381,  -70.2857, -116.4344,  -76.4482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1874, device='cuda:0', dtype=torch.float64)
tensor([-113.6646,  -97.5702,  -69.9463, -115.9817,  -77.7704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1583, device='cuda:0', dtype=torch.float64)
tensor([-112.2643,  -97.6911,  -69.7464, -115.6244,  -78.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1639, device='cuda:0', dtype=torch.float64)
tensor([-111.5512,  -97.7220,  -69.6615, -115.3883,  -79.3302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1407, device='cuda:0', dtype=torch.float64)
tensor([-110.7261,  -97.8099,  -69.4925, -115.1908,  -79.8781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1371, device='cuda:0', dtype=torch.float64)
tensor([-110.0611,  -97.9531,  -69.3700, -115.1160,  -80.3463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1700, device='cuda:0', dtype=torch.float64)
tensor([-109.7109,  -97.9628,  -69.4230, -115.1077,  -80.5824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1375, device='cuda:0', dtype=torch.float64)
tensor([-109.6674,  -97.9211,  -69.6042, -115.1042,  -80.6313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1345, device='cuda:0', dtype=torch.float64)
tensor([-109.6612,  -97.8078,  -69.8322, -115.1299,  -80.5314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1585, device='cuda:0', dtype=torch.float64)
tensor([-109.3890,  -97.7021,  -69.9247, -115.1927,  -80.6322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1472, device='cuda:0', dtype=torch.float64)
tensor([-109.1537,  -97.5636,  -70.0280, -115.2504,  -80.7126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1747, device='cuda:0', dtype=torch.float64)
tensor([-109.1147,  -97.4841,  -70.1481, -115.3857,  -80.7299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1572, device='cuda:0', dtype=torch.float64)
tensor([-109.2861,  -97.4578,  -70.2816, -115.4950,  -80.6446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1700, device='cuda:0', dtype=torch.float64)
tensor([-109.6223,  -97.2331,  -70.5648, -115.5437,  -80.3474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1607, device='cuda:0', dtype=torch.float64)
tensor([-110.0996,  -97.0526,  -70.8140, -115.7269,  -79.8642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1650, device='cuda:0', dtype=torch.float64)
tensor([-110.6000,  -96.9435,  -71.0530, -115.8729,  -79.1989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1618, device='cuda:0', dtype=torch.float64)
tensor([-111.1419,  -96.8480,  -71.2538, -115.9761,  -78.6403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1484, device='cuda:0', dtype=torch.float64)
tensor([-111.7210,  -96.7403,  -71.5547, -116.0283,  -78.1437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1464, device='cuda:0', dtype=torch.float64)
tensor([-112.2522,  -96.6589,  -71.7929, -116.0206,  -77.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1266, device='cuda:0', dtype=torch.float64)
tensor([-112.7346,  -96.5920,  -71.9881, -115.9782,  -76.9555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1333, device='cuda:0', dtype=torch.float64)
tensor([-113.0895,  -96.5652,  -72.1350, -115.9808,  -76.5283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1662, device='cuda:0', dtype=torch.float64)
tensor([-113.3051,  -96.4875,  -72.2637, -115.9914,  -76.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1596, device='cuda:0', dtype=torch.float64)
tensor([-113.3680,  -96.5278,  -72.3317, -116.1259,  -76.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1434, device='cuda:0', dtype=torch.float64)
tensor([-113.7430,  -96.5392,  -72.5128, -116.3232,  -76.1323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1636, device='cuda:0', dtype=torch.float64)
tensor([-114.4744,  -96.5504,  -72.7947, -116.7236,  -75.8110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1416, device='cuda:0', dtype=torch.float64)
tensor([-115.1437,  -96.5784,  -72.9522, -117.1005,  -75.5089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1607, device='cuda:0', dtype=torch.float64)
tensor([-115.6383,  -96.5333,  -73.0870, -117.3900,  -75.2257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1506, device='cuda:0', dtype=torch.float64)
tensor([-116.1025,  -96.5387,  -73.2286, -117.6135,  -75.0222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1226, device='cuda:0', dtype=torch.float64)
tensor([-116.7728,  -96.5334,  -73.3962, -117.9147,  -74.7127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1155, device='cuda:0', dtype=torch.float64)
tensor([-117.5887,  -96.4650,  -73.7131, -118.2242,  -74.3128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1660, device='cuda:0', dtype=torch.float64)
tensor([-118.1163,  -96.5153,  -73.9142, -118.6481,  -74.1255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1458, device='cuda:0', dtype=torch.float64)
tensor([-118.3938,  -96.6355,  -74.0301, -119.1085,  -74.2190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-118.8166,  -96.8412,  -74.1486, -119.5273,  -74.2675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1443, device='cuda:0', dtype=torch.float64)
tensor([-119.3503,  -97.0158,  -74.3537, -119.9254,  -74.2973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1708, device='cuda:0', dtype=torch.float64)
tensor([-120.4438,  -97.0266,  -74.8182, -120.4013,  -73.9121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1830, device='cuda:0', dtype=torch.float64)
tensor([-121.5152,  -96.9862,  -75.2886, -120.5713,  -73.3592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1381, device='cuda:0', dtype=torch.float64)
tensor([-122.3327,  -96.9778,  -75.6418, -120.8423,  -73.0135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1271, device='cuda:0', dtype=torch.float64)
tensor([-122.8755,  -96.9580,  -75.8615, -120.9485,  -72.8341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1515, device='cuda:0', dtype=torch.float64)
tensor([-122.9670,  -97.0454,  -75.8945, -121.0438,  -72.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1539, device='cuda:0', dtype=torch.float64)
tensor([-123.1564,  -97.0209,  -76.0470, -121.1344,  -72.8337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1302, device='cuda:0', dtype=torch.float64)
tensor([-123.4519,  -96.9662,  -76.2646, -121.1909,  -72.6075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1360, device='cuda:0', dtype=torch.float64)
tensor([-123.9856,  -96.9687,  -76.5984, -121.2850,  -72.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1355, device='cuda:0', dtype=torch.float64)
tensor([-124.1633,  -96.9500,  -76.7789, -121.3045,  -72.0483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1372, device='cuda:0', dtype=torch.float64)
tensor([-124.1708,  -96.9794,  -76.8853, -121.3122,  -71.8682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1412, device='cuda:0', dtype=torch.float64)
tensor([-123.9804,  -97.0012,  -76.9547, -121.3464,  -71.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1259, device='cuda:0', dtype=torch.float64)
tensor([-123.5804,  -96.9770,  -77.0376, -121.2847,  -71.8500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1463, device='cuda:0', dtype=torch.float64)
tensor([-123.2277,  -96.9773,  -77.0738, -121.2783,  -71.8526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1464, device='cuda:0', dtype=torch.float64)
tensor([-122.9053,  -96.8959,  -77.1327, -121.1945,  -71.7780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1207, device='cuda:0', dtype=torch.float64)
tensor([-122.5227,  -96.8089,  -77.1921, -121.0652,  -71.7706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1153, device='cuda:0', dtype=torch.float64)
tensor([-122.0446,  -96.7233,  -77.2440, -120.9205,  -71.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1220, device='cuda:0', dtype=torch.float64)
tensor([-121.2693,  -96.6903,  -77.1370, -120.7746,  -72.1986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1428, device='cuda:0', dtype=torch.float64)
tensor([-120.6429,  -96.6310,  -77.1212, -120.7394,  -72.5931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([-119.8727,  -96.6612,  -77.1218, -120.8033,  -73.2132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1169, device='cuda:0', dtype=torch.float64)
tensor([-119.3656,  -96.5937,  -77.2136, -120.8275,  -73.5826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1085, device='cuda:0', dtype=torch.float64)
tensor([-119.0883,  -96.4712,  -77.3512, -120.8345,  -73.7945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1362, device='cuda:0', dtype=torch.float64)
tensor([-118.6506,  -96.3497,  -77.4453, -120.8565,  -74.0176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0913, device='cuda:0', dtype=torch.float64)
tensor([-118.1947,  -96.2326,  -77.5365, -120.8749,  -74.3112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1235, device='cuda:0', dtype=torch.float64)
tensor([-117.7608,  -96.1797,  -77.5954, -120.8547,  -74.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1230, device='cuda:0', dtype=torch.float64)
tensor([-117.6384,  -96.0589,  -77.7561, -120.9009,  -74.5946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1244, device='cuda:0', dtype=torch.float64)
tensor([-117.2609,  -95.9460,  -77.9054, -120.9121,  -74.7537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1545, device='cuda:0', dtype=torch.float64)
tensor([-117.0722,  -95.8227,  -78.1039, -120.8880,  -74.8708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1105, device='cuda:0', dtype=torch.float64)
tensor([-117.1081,  -95.6568,  -78.3739, -120.8521,  -74.8151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-116.9614,  -95.5888,  -78.5551, -120.8044,  -74.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1142, device='cuda:0', dtype=torch.float64)
tensor([-116.9514,  -95.5355,  -78.7640, -120.8448,  -74.8485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1302, device='cuda:0', dtype=torch.float64)
tensor([-117.0654,  -95.5110,  -79.0237, -120.9093,  -74.8407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-117.0208,  -95.5397,  -79.1977, -120.9390,  -74.8685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1156, device='cuda:0', dtype=torch.float64)
tensor([-117.5143,  -95.5315,  -79.5634, -121.0449,  -74.6307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1164, device='cuda:0', dtype=torch.float64)
tensor([-118.0421,  -95.5355,  -79.9289, -121.1169,  -74.3182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1266, device='cuda:0', dtype=torch.float64)
tensor([-118.5688,  -95.4721,  -80.3144, -121.1608,  -73.9643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1630, device='cuda:0', dtype=torch.float64)
tensor([-118.9750,  -95.3027,  -80.6614, -121.1240,  -73.6974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1161, device='cuda:0', dtype=torch.float64)
tensor([-119.3565,  -95.1468,  -81.0116, -121.0677,  -73.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1063, device='cuda:0', dtype=torch.float64)
tensor([-119.7794,  -95.0929,  -81.3562, -121.1415,  -73.2502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1065, device='cuda:0', dtype=torch.float64)
tensor([-120.1243,  -95.0440,  -81.7241, -121.1641,  -73.1856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1192, device='cuda:0', dtype=torch.float64)
tensor([-120.0422,  -95.1178,  -81.9404, -121.1992,  -73.4587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1043, device='cuda:0', dtype=torch.float64)
tensor([-119.8189,  -95.2346,  -82.1107, -121.2713,  -73.7763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-119.6731,  -95.2873,  -82.3293, -121.3993,  -74.0746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1244, device='cuda:0', dtype=torch.float64)
tensor([-119.6491,  -95.3640,  -82.5670, -121.5617,  -74.2119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1170, device='cuda:0', dtype=torch.float64)
tensor([-119.7664,  -95.4050,  -82.8613, -121.7044,  -74.2343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1253, device='cuda:0', dtype=torch.float64)
tensor([-119.8701,  -95.4546,  -83.0476, -121.9038,  -74.2632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1011, device='cuda:0', dtype=torch.float64)
tensor([-120.1739,  -95.4667,  -83.2851, -122.1523,  -74.2877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1374, device='cuda:0', dtype=torch.float64)
tensor([-120.3604,  -95.5309,  -83.5046, -122.4941,  -74.4483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([-120.6036,  -95.6137,  -83.7436, -122.8249,  -74.5457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-120.9302,  -95.7134,  -83.9872, -123.3120,  -74.6940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1140, device='cuda:0', dtype=torch.float64)
tensor([-121.3559,  -95.7371,  -84.2994, -123.7080,  -74.7055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1122, device='cuda:0', dtype=torch.float64)
tensor([-121.6222,  -95.7369,  -84.5668, -123.9513,  -74.6477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1510, device='cuda:0', dtype=torch.float64)
tensor([-121.7364,  -95.6925,  -84.7980, -124.0324,  -74.6976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1274, device='cuda:0', dtype=torch.float64)
tensor([-122.1698,  -95.5329,  -85.1724, -124.2136,  -74.6442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0888, device='cuda:0', dtype=torch.float64)
tensor([-122.7543,  -95.3489,  -85.5884, -124.3960,  -74.5083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1136, device='cuda:0', dtype=torch.float64)
tensor([-123.2038,  -95.2066,  -85.9492, -124.5791,  -74.5305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1273, device='cuda:0', dtype=torch.float64)
tensor([-123.3786,  -95.1177,  -86.2875, -124.6726,  -74.7418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-123.4586,  -95.0062,  -86.5310, -124.7218,  -74.8584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0973, device='cuda:0', dtype=torch.float64)
tensor([-123.4015,  -94.9020,  -86.7467, -124.9063,  -75.0782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1387, device='cuda:0', dtype=torch.float64)
tensor([-123.3044,  -94.8639,  -86.8404, -125.1209,  -75.2848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1118, device='cuda:0', dtype=torch.float64)
tensor([-123.4061,  -94.8266,  -86.9552, -125.4043,  -75.3205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0893, device='cuda:0', dtype=torch.float64)
tensor([-123.6787,  -94.8106,  -87.1176, -125.7860,  -75.2591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0992, device='cuda:0', dtype=torch.float64)
tensor([-123.8646,  -94.7596,  -87.3075, -126.0122,  -75.1018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1150, device='cuda:0', dtype=torch.float64)
tensor([-123.6091,  -94.7808,  -87.3778, -126.0254,  -75.1726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0918, device='cuda:0', dtype=torch.float64)
tensor([-123.3172,  -94.8206,  -87.4115, -126.0223,  -75.3339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1018, device='cuda:0', dtype=torch.float64)
tensor([-123.1103,  -94.8909,  -87.4520, -126.0733,  -75.5156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-122.8931,  -94.9356,  -87.4718, -126.0805,  -75.6792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1040, device='cuda:0', dtype=torch.float64)
tensor([-122.9346,  -94.9731,  -87.5833, -126.1228,  -75.6215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1101, device='cuda:0', dtype=torch.float64)
tensor([-122.9439,  -94.9725,  -87.6699, -126.1590,  -75.4770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1147, device='cuda:0', dtype=torch.float64)
tensor([-122.7940,  -95.0977,  -87.6184, -126.4310,  -75.4184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1003, device='cuda:0', dtype=torch.float64)
tensor([-122.8255,  -95.2595,  -87.6351, -126.8064,  -75.3246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1228, device='cuda:0', dtype=torch.float64)
tensor([-122.7563,  -95.3945,  -87.6786, -127.1656,  -75.3367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1028, device='cuda:0', dtype=torch.float64)
tensor([-122.7163,  -95.5490,  -87.7306, -127.6329,  -75.2788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0903, device='cuda:0', dtype=torch.float64)
tensor([-122.5829,  -95.7449,  -87.6994, -128.0380,  -75.3076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1148, device='cuda:0', dtype=torch.float64)
tensor([-122.7097,  -95.8842,  -87.7166, -128.4117,  -75.1952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0953, device='cuda:0', dtype=torch.float64)
tensor([-122.8515,  -96.0278,  -87.6905, -128.8761,  -75.1683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0990, device='cuda:0', dtype=torch.float64)
tensor([-122.9500,  -96.1621,  -87.6997, -129.2711,  -75.1803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-122.8538,  -96.3003,  -87.6682, -129.6133,  -75.3315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-122.7551,  -96.3796,  -87.6913, -129.9108,  -75.3925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-122.6998,  -96.4872,  -87.7263, -130.2800,  -75.4741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0905, device='cuda:0', dtype=torch.float64)
tensor([-122.6137,  -96.5889,  -87.7528, -130.6796,  -75.6471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-122.6380,  -96.6572,  -87.7524, -131.0188,  -75.7979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0985, device='cuda:0', dtype=torch.float64)
tensor([-122.7683,  -96.6213,  -87.8360, -131.1700,  -75.7866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1213, device='cuda:0', dtype=torch.float64)
tensor([-122.6957,  -96.5542,  -87.8398, -131.2038,  -75.9559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0888, device='cuda:0', dtype=torch.float64)
tensor([-122.6659,  -96.5666,  -87.7874, -131.2649,  -76.1016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1001, device='cuda:0', dtype=torch.float64)
tensor([-122.5606,  -96.5914,  -87.7123, -131.3722,  -76.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1368, device='cuda:0', dtype=torch.float64)
tensor([-122.6950,  -96.5537,  -87.7736, -131.4138,  -76.2310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1424, device='cuda:0', dtype=torch.float64)
tensor([-123.0986,  -96.6052,  -87.8596, -131.6384,  -76.2013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0819, device='cuda:0', dtype=torch.float64)
tensor([-123.5585,  -96.6383,  -87.9891, -131.8541,  -76.1341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1313, device='cuda:0', dtype=torch.float64)
tensor([-123.9701,  -96.7364,  -88.1980, -132.0652,  -76.0505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1064, device='cuda:0', dtype=torch.float64)
tensor([-124.5574,  -96.7395,  -88.4675, -132.1593,  -75.8643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0781, device='cuda:0', dtype=torch.float64)
tensor([-125.0256,  -96.7508,  -88.6776, -132.2720,  -75.7708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1128, device='cuda:0', dtype=torch.float64)
tensor([-125.6249,  -96.6706,  -88.9210, -132.4981,  -75.5720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0952, device='cuda:0', dtype=torch.float64)
tensor([-126.3739,  -96.5184,  -89.3038, -132.5515,  -75.1549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0863, device='cuda:0', dtype=torch.float64)
tensor([-127.0482,  -96.3697,  -89.6579, -132.6191,  -74.7972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0975, device='cuda:0', dtype=torch.float64)
tensor([-127.5090,  -96.2999,  -89.9183, -132.7490,  -74.5988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1428, device='cuda:0', dtype=torch.float64)
tensor([-127.7376,  -96.3293,  -90.0769, -132.9775,  -74.4981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-127.8890,  -96.3834,  -90.1869, -133.2318,  -74.4926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1330, device='cuda:0', dtype=torch.float64)
tensor([-127.4824,  -96.4851,  -90.1143, -133.4676,  -74.7396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-127.0306,  -96.6343,  -90.0500, -133.7198,  -75.1119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0804, device='cuda:0', dtype=torch.float64)
tensor([-126.5822,  -96.7561,  -89.9870, -133.8877,  -75.3894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-126.2591,  -96.8630,  -89.9109, -134.0385,  -75.5669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0859, device='cuda:0', dtype=torch.float64)
tensor([-126.0383,  -96.9206,  -89.8594, -134.0928,  -75.6108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0720, device='cuda:0', dtype=torch.float64)
tensor([-125.8986,  -97.0193,  -89.8315, -134.2052,  -75.5701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0754, device='cuda:0', dtype=torch.float64)
tensor([-125.7989,  -97.0821,  -89.8201, -134.2287,  -75.4096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-125.6529,  -97.1931,  -89.8035, -134.4155,  -75.3600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-125.5464,  -97.2377,  -89.8043, -134.5250,  -75.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-125.3722,  -97.2873,  -89.7666, -134.6475,  -75.1364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0921, device='cuda:0', dtype=torch.float64)
tensor([-125.3181,  -97.2893,  -89.7388, -134.7455,  -75.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0941, device='cuda:0', dtype=torch.float64)
tensor([-125.2791,  -97.2957,  -89.7534, -134.7369,  -74.8265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1111, device='cuda:0', dtype=torch.float64)
tensor([-125.1504,  -97.2819,  -89.7503, -134.6019,  -74.6119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-125.0384,  -97.3020,  -89.7625, -134.5341,  -74.5090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1469, device='cuda:0', dtype=torch.float64)
tensor([-124.5671,  -97.3712,  -89.5962, -134.5031,  -74.6896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0995, device='cuda:0', dtype=torch.float64)
tensor([-124.4360,  -97.3388,  -89.5682, -134.3519,  -74.6478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1420, device='cuda:0', dtype=torch.float64)
tensor([-124.3848,  -97.3206,  -89.6201, -134.4568,  -74.5872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-124.4211,  -97.3658,  -89.7249, -134.6636,  -74.4473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-124.5489,  -97.4614,  -89.8297, -134.9751,  -74.2570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-124.6728,  -97.5609,  -89.9423, -135.2449,  -74.1199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1068, device='cuda:0', dtype=torch.float64)
tensor([-124.8483,  -97.7192,  -90.0779, -135.5639,  -74.0181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-125.1555,  -97.8795,  -90.2314, -135.9087,  -73.9004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0932, device='cuda:0', dtype=torch.float64)
tensor([-125.4199,  -98.1110,  -90.3954, -136.3219,  -73.8085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-125.6765,  -98.3394,  -90.5021, -136.7089,  -73.7319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0682, device='cuda:0', dtype=torch.float64)
tensor([-126.0219,  -98.5218,  -90.6406, -137.0343,  -73.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0817, device='cuda:0', dtype=torch.float64)
tensor([-126.3113,  -98.6974,  -90.7514, -137.3513,  -73.5380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0736, device='cuda:0', dtype=torch.float64)
tensor([-126.6571,  -98.7824,  -90.8985, -137.5945,  -73.4354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0730, device='cuda:0', dtype=torch.float64)
tensor([-127.0713,  -98.8403,  -91.1049, -137.7480,  -73.3006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-127.4886,  -98.9181,  -91.3291, -137.8782,  -73.1498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0937, device='cuda:0', dtype=torch.float64)
tensor([-127.8043,  -99.0005,  -91.4568, -137.9768,  -73.0597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0534, device='cuda:0', dtype=torch.float64)
tensor([-128.1026,  -99.1052,  -91.5806, -138.0576,  -72.9293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-128.4553,  -99.1857,  -91.6858, -138.1669,  -72.7891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0962, device='cuda:0', dtype=torch.float64)
tensor([-128.6636,  -99.3424,  -91.7472, -138.4496,  -72.8036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1088, device='cuda:0', dtype=torch.float64)
tensor([-128.7725,  -99.4955,  -91.8276, -138.8027,  -72.9034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0921, device='cuda:0', dtype=torch.float64)
tensor([-129.1284,  -99.6461,  -91.9732, -139.2034,  -72.8824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0871, device='cuda:0', dtype=torch.float64)
tensor([-129.3247,  -99.8462,  -92.0773, -139.7193,  -72.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-129.6940, -100.0668,  -92.2683, -140.3074,  -73.0168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0700, device='cuda:0', dtype=torch.float64)
tensor([-130.0683, -100.2537,  -92.5235, -140.8653,  -73.0354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-130.5413, -100.4145,  -92.8366, -141.5010,  -73.0905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0941, device='cuda:0', dtype=torch.float64)
tensor([-131.1687, -100.4726,  -93.2127, -142.0840,  -73.0205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1010, device='cuda:0', dtype=torch.float64)
tensor([-131.6949, -100.5450,  -93.5230, -142.4442,  -72.9628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0795, device='cuda:0', dtype=torch.float64)
tensor([-132.0761, -100.6641,  -93.7740, -142.8353,  -72.9030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0690, device='cuda:0', dtype=torch.float64)
tensor([-132.6528, -100.7689,  -94.0615, -143.2401,  -72.7473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1156, device='cuda:0', dtype=torch.float64)
tensor([-133.6369, -100.7804,  -94.5315, -143.5665,  -72.3135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-134.6746, -100.7794,  -95.0250, -143.8919,  -71.8498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-135.6232, -100.7399,  -95.4687, -144.0301,  -71.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0607, device='cuda:0', dtype=torch.float64)
tensor([-136.5462, -100.7473,  -95.8693, -144.1721,  -71.0241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0959, device='cuda:0', dtype=torch.float64)
tensor([-137.2883, -100.7201,  -96.2273, -144.3044,  -70.7058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1019, device='cuda:0', dtype=torch.float64)
tensor([-138.1344, -100.7200,  -96.5496, -144.3859,  -70.3528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-138.9192, -100.7183,  -96.8589, -144.5398,  -70.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0691, device='cuda:0', dtype=torch.float64)
tensor([-139.6220, -100.7474,  -97.1220, -144.7858,  -69.8591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0864, device='cuda:0', dtype=torch.float64)
tensor([-140.1902, -100.7521,  -97.4126, -144.9787,  -69.6150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-140.4810, -100.7126,  -97.6334, -145.0677,  -69.5079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0758, device='cuda:0', dtype=torch.float64)
tensor([-140.7006, -100.6398,  -97.8910, -145.1813,  -69.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0790, device='cuda:0', dtype=torch.float64)
tensor([-140.9821, -100.5686,  -98.1760, -145.3124,  -69.2227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0763, device='cuda:0', dtype=torch.float64)
tensor([-141.3158, -100.5062,  -98.4269, -145.3846,  -68.9600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0763, device='cuda:0', dtype=torch.float64)
tensor([-141.5049, -100.4915,  -98.6179, -145.6522,  -68.7784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-141.6117, -100.4601,  -98.7562, -145.8523,  -68.6615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-141.6864, -100.4420,  -98.8632, -146.0327,  -68.5735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0691, device='cuda:0', dtype=torch.float64)
tensor([-141.8812, -100.4568,  -98.9785, -146.2195,  -68.3957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-142.1762, -100.5267,  -99.0788, -146.4509,  -68.2326],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-142.5456, -100.6759,  -99.2202, -146.7729,  -68.0867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0794, device='cuda:0', dtype=torch.float64)
tensor([-142.8686, -100.8846,  -99.3403, -147.2150,  -67.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-142.8981, -101.1754,  -99.3409, -147.7166,  -68.0852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-142.9761, -101.4594,  -99.3859, -148.2237,  -68.1119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0730, device='cuda:0', dtype=torch.float64)
tensor([-142.9472, -101.7673,  -99.3915, -148.6844,  -68.1813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-143.0079, -101.9799,  -99.4262, -149.0795,  -68.1946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-143.0629, -102.2111,  -99.4512, -149.5300,  -68.2199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-142.9627, -102.4710,  -99.4143, -149.9676,  -68.3376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-142.7537, -102.7495,  -99.3319, -150.3996,  -68.5075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-142.4461, -103.0675,  -99.1838, -150.8406,  -68.7231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-142.1091, -103.3299,  -99.0012, -151.1868,  -68.9213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-141.7682, -103.6127,  -98.8245, -151.4869,  -69.1590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-141.4838, -103.8915,  -98.6717, -151.7887,  -69.3870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-141.3088, -104.1563,  -98.5787, -152.0190,  -69.5526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-141.0968, -104.3708,  -98.4674, -152.0885,  -69.6826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0861, device='cuda:0', dtype=torch.float64)
tensor([-141.2022, -104.5550,  -98.4653, -152.1373,  -69.6179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1014, device='cuda:0', dtype=torch.float64)
tensor([-141.2935, -104.6911,  -98.4939, -152.2334,  -69.5584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0814, device='cuda:0', dtype=torch.float64)
tensor([-141.3106, -104.7991,  -98.5447, -152.2309,  -69.4938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-141.3964, -104.8930,  -98.6136, -152.3062,  -69.4233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1067, device='cuda:0', dtype=torch.float64)
tensor([-141.3667, -104.9456,  -98.6432, -152.3946,  -69.3643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0635, device='cuda:0', dtype=torch.float64)
tensor([-141.3719, -105.0033,  -98.6923, -152.5210,  -69.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-141.3177, -105.0512,  -98.7403, -152.7357,  -69.2815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0764, device='cuda:0', dtype=torch.float64)
tensor([-141.2605, -105.1199,  -98.7660, -152.9215,  -69.2865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0931, device='cuda:0', dtype=torch.float64)
tensor([-141.1161, -105.2002,  -98.7552, -153.1754,  -69.3230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0740, device='cuda:0', dtype=torch.float64)
tensor([-141.1754, -105.2298,  -98.7849, -153.4304,  -69.3163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-141.1784, -105.3051,  -98.7780, -153.7130,  -69.3531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0748, device='cuda:0', dtype=torch.float64)
tensor([-141.1541, -105.4051,  -98.8076, -154.0594,  -69.3453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-141.1404, -105.4966,  -98.8618, -154.4161,  -69.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0633, device='cuda:0', dtype=torch.float64)
tensor([-141.3456, -105.5547,  -99.0130, -154.7447,  -69.2269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0791, device='cuda:0', dtype=torch.float64)
tensor([-141.7067, -105.5999,  -99.2184, -154.9801,  -69.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([-142.2132, -105.6181,  -99.4798, -155.3498,  -68.9425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-142.7137, -105.6556,  -99.7029, -155.6793,  -68.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0705, device='cuda:0', dtype=torch.float64)
tensor([-143.2449, -105.6562,  -99.8982, -155.9266,  -68.6771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-143.9581, -105.5756, -100.1270, -156.1027,  -68.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-144.4597, -105.5244, -100.3000, -156.3195,  -68.4806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0893, device='cuda:0', dtype=torch.float64)
tensor([-145.0964, -105.4201, -100.5137, -156.4563,  -68.3811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-145.8981, -105.3353, -100.7797, -156.7575,  -68.2834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-146.6454, -105.2588, -101.0295, -156.9590,  -68.1846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0667, device='cuda:0', dtype=torch.float64)
tensor([-147.3661, -105.1328, -101.2952, -157.0098,  -68.0674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-147.9908, -105.0765, -101.5273, -157.1179,  -67.9617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0730, device='cuda:0', dtype=torch.float64)
tensor([-148.7208, -105.0965, -101.8064, -157.3478,  -67.8259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-149.3843, -105.0939, -102.0892, -157.5329,  -67.6825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-149.9747, -105.1610, -102.3519, -157.8297,  -67.5740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-150.3851, -105.2705, -102.5390, -158.2475,  -67.5657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-150.9764, -105.3896, -102.7866, -158.6290,  -67.4926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-151.5300, -105.5464, -103.0001, -159.0338,  -67.4416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0973, device='cuda:0', dtype=torch.float64)
tensor([-152.0395, -105.6607, -103.2411, -159.3923,  -67.3486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0664, device='cuda:0', dtype=torch.float64)
tensor([-152.2879, -105.7730, -103.4058, -159.7312,  -67.3568],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-152.4733, -105.9258, -103.5783, -160.1127,  -67.3828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-152.5319, -106.0967, -103.6860, -160.5616,  -67.4801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-152.5521, -106.2477, -103.7932, -160.9422,  -67.5156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0742, device='cuda:0', dtype=torch.float64)
tensor([-152.5994, -106.3923, -103.8988, -161.4036,  -67.5695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-152.5723, -106.5478, -103.9817, -161.8391,  -67.6446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-152.6172, -106.6758, -104.0718, -162.2229,  -67.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-152.6584, -106.7938, -104.1515, -162.5736,  -67.7028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0697, device='cuda:0', dtype=torch.float64)
tensor([-152.5804, -106.9760, -104.2162, -162.8682,  -67.7721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0593, device='cuda:0', dtype=torch.float64)
tensor([-152.5312, -107.1793, -104.2895, -163.1720,  -67.8663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0927, device='cuda:0', dtype=torch.float64)
tensor([-152.4044, -107.3732, -104.3318, -163.6774,  -68.0408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-152.0571, -107.5006, -104.4114, -164.2126,  -68.2003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0617, device='cuda:0', dtype=torch.float64)
tensor([-151.6469, -107.6229, -104.4889, -164.9019,  -68.4231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-151.3723, -107.7455, -104.5995, -165.6375,  -68.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-151.0936, -107.8293, -104.6848, -166.2379,  -68.7702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-150.8337, -107.9236, -104.7575, -166.7840,  -68.9181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-150.4499, -108.0434, -104.7873, -167.4363,  -69.1561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-150.0912, -108.1586, -104.8271, -168.1174,  -69.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0815, device='cuda:0', dtype=torch.float64)
tensor([-149.3943, -108.2971, -104.7235, -168.8089,  -69.8541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0943, device='cuda:0', dtype=torch.float64)
tensor([-149.0977, -108.3922, -104.7737, -169.3782,  -70.1924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-148.7405, -108.5046, -104.8068, -169.9533,  -70.5131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-148.4063, -108.6122, -104.8490, -170.4511,  -70.7882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-148.1635, -108.7196, -104.9245, -171.0538,  -71.0639],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_113739.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(122.8557, device='cuda:0', dtype=torch.float64)
tensor([ -2.0507, -12.0036,  -6.3982, -10.6089,  -5.4568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.2376, device='cuda:0', dtype=torch.float64)
tensor([ -2.9067,  -9.7247,  -6.9723, -11.9066, -16.4379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(117.4470, device='cuda:0', dtype=torch.float64)
tensor([ -3.6157,  -6.6264,  -5.9616, -16.5023, -17.9203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(126.8353, device='cuda:0', dtype=torch.float64)
tensor([ -2.6391,  -5.1586,  -4.4902, -13.1426, -13.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.6530, device='cuda:0', dtype=torch.float64)
tensor([ -2.5876,  -4.7825,  -3.3256,  -9.7325, -10.4927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.4709, device='cuda:0', dtype=torch.float64)
tensor([-2.4933, -4.8977, -3.0038, -6.3187, -6.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(42.3681, device='cuda:0', dtype=torch.float64)
tensor([-2.5166, -5.0340, -2.9354, -6.4118, -4.7960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(50.8356, device='cuda:0', dtype=torch.float64)
tensor([-2.5332, -4.8261, -2.8944, -6.5727, -4.6294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.2290, device='cuda:0', dtype=torch.float64)
tensor([-2.5695, -5.5157, -2.9484, -8.1413, -4.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.4595, device='cuda:0', dtype=torch.float64)
tensor([ -2.5490,  -5.3619,  -3.2199, -12.6668,  -4.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.4379, device='cuda:0', dtype=torch.float64)
tensor([ -2.4165,  -4.3636,  -3.5448, -13.4941,  -4.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.7011, device='cuda:0', dtype=torch.float64)
tensor([ -2.2243,  -3.7376,  -3.7982, -10.5482,  -4.7989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.6641, device='cuda:0', dtype=torch.float64)
tensor([-2.0604, -3.3482, -4.3716, -7.0134, -4.7309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7609, device='cuda:0', dtype=torch.float64)
tensor([-1.9895, -3.1515, -4.4377, -4.3779, -4.0855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.2413, device='cuda:0', dtype=torch.float64)
tensor([-2.0116, -3.1448, -3.9303, -3.8085, -3.8418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.5841, device='cuda:0', dtype=torch.float64)
tensor([-2.0952, -3.1997, -3.4975, -3.5800, -3.8007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.8666, device='cuda:0', dtype=torch.float64)
tensor([-2.1765, -3.4317, -3.2873, -3.4615, -3.7667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.5505, device='cuda:0', dtype=torch.float64)
tensor([-2.1855, -3.6504, -3.1941, -3.4560, -3.7331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.0338, device='cuda:0', dtype=torch.float64)
tensor([-2.1053, -3.4084, -3.1411, -3.4694, -3.6781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0629, device='cuda:0', dtype=torch.float64)
tensor([-1.9983, -3.0253, -3.0927, -3.4956, -3.5901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8816, device='cuda:0', dtype=torch.float64)
tensor([-1.9235, -2.8936, -3.0351, -3.5627, -3.5056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7843, device='cuda:0', dtype=torch.float64)
tensor([-1.8895, -2.8945, -2.9734, -3.6110, -3.4568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.4212, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.9313, -2.9195, -3.6570, -3.4538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.5747, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.9896, -2.8811, -3.7557, -3.4752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.4904, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -3.0547, -2.8554, -3.8686, -3.4743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.2527, device='cuda:0', dtype=torch.float64)
tensor([-1.9003, -3.1014, -2.8365, -3.8929, -3.4387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.0739, device='cuda:0', dtype=torch.float64)
tensor([-1.8971, -3.1002, -2.8234, -3.8199, -3.4094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9310, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -3.0504, -2.8161, -3.7208, -3.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5167, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.9839, -2.8140, -3.6507, -3.4092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3504, device='cuda:0', dtype=torch.float64)
tensor([-1.7745, -2.9252, -2.8162, -3.6152, -3.4324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.4385, device='cuda:0', dtype=torch.float64)
tensor([-1.7559, -2.8836, -2.8219, -3.6015, -3.4649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.7614, device='cuda:0', dtype=torch.float64)
tensor([-1.7505, -2.8590, -2.8295, -3.6008, -3.4980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6742, device='cuda:0', dtype=torch.float64)
tensor([-1.7533, -2.8382, -2.8373, -3.6055, -3.5224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0427, device='cuda:0', dtype=torch.float64)
tensor([-1.7614, -2.8098, -2.8425, -3.6047, -3.5298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3155, device='cuda:0', dtype=torch.float64)
tensor([-1.7725, -2.7771, -2.8422, -3.5991, -3.5159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3131, device='cuda:0', dtype=torch.float64)
tensor([-1.7849, -2.7532, -2.8348, -3.5971, -3.4833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0940, device='cuda:0', dtype=torch.float64)
tensor([-1.7969, -2.7443, -2.8213, -3.5982, -3.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6385, device='cuda:0', dtype=torch.float64)
tensor([-1.8079, -2.7476, -2.8047, -3.5991, -3.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9949, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.7592, -2.7867, -3.5986, -3.3567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4065, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.7760, -2.7662, -3.5932, -3.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0473, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7957, -2.7416, -3.5777, -3.2851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8504, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.8159, -2.7164, -3.5533, -3.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7400, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.8349, -2.6968, -3.5269, -3.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7036, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.8515, -2.6857, -3.5021, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7017, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.8652, -2.6823, -3.4777, -3.2327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6031, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.8757, -2.6851, -3.4526, -3.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3964, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.8828, -2.6925, -3.4282, -3.2509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1315, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.8857, -2.7036, -3.4070, -3.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9247, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.8833, -2.7173, -3.3912, -3.2766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7937, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.8758, -2.7327, -3.3818, -3.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6884, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.8650, -2.7486, -3.3787, -3.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5932, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.8534, -2.7638, -3.3806, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5484, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.8427, -2.7771, -3.3855, -3.3269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5645, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.8340, -2.7876, -3.3915, -3.3382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5529, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.8272, -2.7947, -3.3970, -3.3481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4899, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.8219, -2.7984, -3.4008, -3.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3981, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.8175, -2.7986, -3.4021, -3.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3052, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.8132, -2.7959, -3.4005, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2183, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.8084, -2.7914, -3.3965, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0934, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.8030, -2.7866, -3.3913, -3.3580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9715, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.7968, -2.7827, -3.3858, -3.3565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8673, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.7899, -2.7806, -3.3807, -3.3557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7799, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.7825, -2.7809, -3.3765, -3.3557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7117, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.7748, -2.7837, -3.3733, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6430, device='cuda:0', dtype=torch.float64)
tensor([-1.8129, -2.7674, -2.7888, -3.3712, -3.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5886, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.7606, -2.7956, -3.3702, -3.3577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5641, device='cuda:0', dtype=torch.float64)
tensor([-1.8057, -2.7551, -2.8034, -3.3694, -3.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5452, device='cuda:0', dtype=torch.float64)
tensor([-1.8036, -2.7514, -2.8110, -3.3683, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5180, device='cuda:0', dtype=torch.float64)
tensor([-1.8031, -2.7501, -2.8179, -3.3661, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4639, device='cuda:0', dtype=torch.float64)
tensor([-1.8046, -2.7512, -2.8233, -3.3621, -3.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4027, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.7547, -2.8272, -3.3566, -3.3673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3245, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.7597, -2.8298, -3.3501, -3.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.7653, -2.8315, -3.3435, -3.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2565, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.7709, -2.8326, -3.3376, -3.3782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2704, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.7759, -2.8333, -3.3326, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2703, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7801, -2.8339, -3.3289, -3.3823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2408, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7833, -2.8342, -3.3262, -3.3828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2003, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7854, -2.8345, -3.3245, -3.3822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7865, -2.8347, -3.3237, -3.3808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0864, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.7869, -2.8346, -3.3236, -3.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0937, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.7866, -2.8345, -3.3239, -3.3756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.7857, -2.8345, -3.3243, -3.3725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0955, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.7846, -2.8346, -3.3246, -3.3695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7831, -2.8350, -3.3244, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7813, -2.8358, -3.3239, -3.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0243, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.7793, -2.8371, -3.3230, -3.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0004, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.7773, -2.8387, -3.3217, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7754, -2.8406, -3.3203, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9367, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7734, -2.8427, -3.3190, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9261, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.7717, -2.8450, -3.3178, -3.3627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9153, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.7704, -2.8471, -3.3164, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8980, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.7694, -2.8489, -3.3151, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8633, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.7688, -2.8504, -3.3142, -3.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8407, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.7684, -2.8514, -3.3135, -3.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8394, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.7684, -2.8519, -3.3129, -3.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7979, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.7687, -2.8518, -3.3126, -3.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8100, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.7693, -2.8510, -3.3121, -3.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7931, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.7699, -2.8498, -3.3118, -3.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7895, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.7703, -2.8485, -3.3118, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7769, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.7705, -2.8471, -3.3119, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7715, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.7705, -2.8459, -3.3119, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7538, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7705, -2.8447, -3.3119, -3.3634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7706, -2.8436, -3.3114, -3.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7568, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7705, -2.8428, -3.3109, -3.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7492, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.7703, -2.8424, -3.3102, -3.3631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7224, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7701, -2.8422, -3.3097, -3.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7122, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7699, -2.8422, -3.3092, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7020, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7696, -2.8422, -3.3088, -3.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6845, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.7692, -2.8422, -3.3087, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6814, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7687, -2.8424, -3.3089, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7681, -2.8426, -3.3092, -3.3665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6766, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.7676, -2.8425, -3.3093, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6609, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7672, -2.8422, -3.3095, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6787, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7668, -2.8419, -3.3098, -3.3663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6534, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7664, -2.8419, -3.3105, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6477, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7661, -2.8417, -3.3115, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6408, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7658, -2.8416, -3.3122, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6486, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7656, -2.8414, -3.3126, -3.3639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6277, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.7655, -2.8413, -3.3128, -3.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6367, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7655, -2.8412, -3.3128, -3.3638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6218, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7655, -2.8409, -3.3126, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6150, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7658, -2.8405, -3.3117, -3.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6136, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7661, -2.8400, -3.3112, -3.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7663, -2.8398, -3.3111, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5965, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7664, -2.8396, -3.3111, -3.3657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5979, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7665, -2.8394, -3.3114, -3.3658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5907, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.7666, -2.8392, -3.3115, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5947, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7668, -2.8389, -3.3114, -3.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5931, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7673, -2.8387, -3.3112, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5878, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7673, -2.8388, -3.3112, -3.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5885, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7669, -2.8390, -3.3109, -3.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5712, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7665, -2.8391, -3.3105, -3.3622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5663, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.7661, -2.8392, -3.3102, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5711, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7654, -2.8395, -3.3104, -3.3612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5714, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7645, -2.8399, -3.3110, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5729, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7636, -2.8404, -3.3119, -3.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5450, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7629, -2.8407, -3.3124, -3.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5644, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7626, -2.8408, -3.3124, -3.3591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5517, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7623, -2.8407, -3.3123, -3.3585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5784, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7620, -2.8405, -3.3123, -3.3579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5552, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.7618, -2.8400, -3.3120, -3.3574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5495, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7619, -2.8395, -3.3117, -3.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5574, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.7622, -2.8389, -3.3113, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5513, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7626, -2.8382, -3.3109, -3.3557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5332, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7632, -2.8376, -3.3099, -3.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5518, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7638, -2.8372, -3.3091, -3.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5306, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7644, -2.8368, -3.3085, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5333, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7648, -2.8366, -3.3081, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5132, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7649, -2.8367, -3.3079, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5216, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7647, -2.8372, -3.3080, -3.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5082, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7640, -2.8382, -3.3084, -3.3556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5239, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7634, -2.8391, -3.3087, -3.3560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5441, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7629, -2.8399, -3.3087, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5205, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.7622, -2.8405, -3.3089, -3.3559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5192, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.7618, -2.8406, -3.3089, -3.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5335, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.7614, -2.8405, -3.3095, -3.3547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5099, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7609, -2.8406, -3.3102, -3.3537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5195, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7608, -2.8404, -3.3104, -3.3527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5546, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.7610, -2.8397, -3.3097, -3.3516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5104, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7611, -2.8391, -3.3091, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5049, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7611, -2.8386, -3.3083, -3.3497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5368, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7610, -2.8382, -3.3071, -3.3491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5044, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7604, -2.8383, -3.3064, -3.3487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5127, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7593, -2.8386, -3.3063, -3.3485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5090, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.7583, -2.8392, -3.3068, -3.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5012, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7575, -2.8397, -3.3066, -3.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5044, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.7574, -2.8395, -3.3056, -3.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5120, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.7578, -2.8390, -3.3052, -3.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5121, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7585, -2.8382, -3.3049, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5227, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.7593, -2.8379, -3.3058, -3.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5054, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.7601, -2.8374, -3.3061, -3.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4906, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7614, -2.8367, -3.3054, -3.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4931, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7623, -2.8364, -3.3047, -3.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4898, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7632, -2.8362, -3.3038, -3.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5192, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.7633, -2.8368, -3.3036, -3.3498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4920, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7624, -2.8377, -3.3034, -3.3491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4705, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.7611, -2.8385, -3.3033, -3.3482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4944, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.7601, -2.8389, -3.3030, -3.3474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4756, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7598, -2.8389, -3.3027, -3.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4822, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7591, -2.8386, -3.3019, -3.3464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.7585, -2.8382, -3.3017, -3.3461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4801, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7573, -2.8382, -3.3019, -3.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4773, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.7564, -2.8380, -3.3021, -3.3458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4866, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7559, -2.8374, -3.3020, -3.3458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4810, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.7557, -2.8372, -3.3020, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5121, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7554, -2.8370, -3.3020, -3.3462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4889, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7552, -2.8369, -3.3014, -3.3462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4929, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7552, -2.8368, -3.3005, -3.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4713, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7552, -2.8369, -3.3000, -3.3464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4717, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7554, -2.8368, -3.2999, -3.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4860, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7548, -2.8374, -3.3007, -3.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4679, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.7546, -2.8376, -3.3013, -3.3450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4835, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.7549, -2.8373, -3.3013, -3.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4894, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7552, -2.8365, -3.3007, -3.3444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4901, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.7555, -2.8352, -3.2997, -3.3439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4737, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7562, -2.8338, -3.2987, -3.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4900, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7563, -2.8331, -3.2986, -3.3428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4708, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.7561, -2.8329, -3.2990, -3.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5007, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7559, -2.8331, -3.2984, -3.3421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4858, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7562, -2.8331, -3.2973, -3.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4891, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7567, -2.8331, -3.2965, -3.3421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4639, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7570, -2.8333, -3.2963, -3.3417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4870, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.7572, -2.8336, -3.2966, -3.3408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5211, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7566, -2.8346, -3.2984, -3.3398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4602, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7559, -2.8354, -3.3006, -3.3390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4785, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7559, -2.8354, -3.3012, -3.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4840, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7563, -2.8350, -3.3003, -3.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4994, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7567, -2.8345, -3.2990, -3.3389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4766, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7564, -2.8341, -3.2985, -3.3385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4780, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7557, -2.8339, -3.2985, -3.3381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4675, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7545, -2.8338, -3.2984, -3.3378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4854, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.7537, -2.8333, -3.2969, -3.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4494, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.7533, -2.8327, -3.2953, -3.3371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5003, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.7532, -2.8329, -3.2942, -3.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4815, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7528, -2.8337, -3.2939, -3.3366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4687, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7525, -2.8345, -3.2938, -3.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5033, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7524, -2.8355, -3.2940, -3.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4677, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7524, -2.8360, -3.2938, -3.3347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4760, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7526, -2.8360, -3.2937, -3.3345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5029, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7527, -2.8363, -3.2946, -3.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4996, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7520, -2.8370, -3.2959, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4703, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7514, -2.8376, -3.2961, -3.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4580, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.7508, -2.8374, -3.2956, -3.3336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4801, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.7504, -2.8369, -3.2944, -3.3344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5171, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7503, -2.8363, -3.2925, -3.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4825, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7502, -2.8355, -3.2909, -3.3357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4953, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7498, -2.8348, -3.2897, -3.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4748, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7493, -2.8345, -3.2897, -3.3356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5239, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7482, -2.8348, -3.2915, -3.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4714, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7468, -2.8347, -3.2932, -3.3340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4995, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.7469, -2.8339, -3.2929, -3.3328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4906, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7488, -2.8317, -3.2908, -3.3324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4945, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.7515, -2.8292, -3.2886, -3.3325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4923, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7531, -2.8279, -3.2877, -3.3323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4841, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.7538, -2.8280, -3.2884, -3.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5149, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7542, -2.8283, -3.2891, -3.3323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4948, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7551, -2.8284, -3.2887, -3.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5064, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7558, -2.8288, -3.2879, -3.3339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5117, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.7560, -2.8294, -3.2882, -3.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4670, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7558, -2.8298, -3.2883, -3.3361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5037, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7567, -2.8292, -3.2880, -3.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4636, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7572, -2.8287, -3.2875, -3.3369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4522, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.7572, -2.8280, -3.2878, -3.3364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4658, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.7567, -2.8280, -3.2888, -3.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4772, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.7553, -2.8287, -3.2895, -3.3345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4553, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.7527, -2.8301, -3.2910, -3.3327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4824, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7497, -2.8310, -3.2922, -3.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4869, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.7475, -2.8315, -3.2929, -3.3299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4711, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7456, -2.8316, -3.2934, -3.3289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4936, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7440, -2.8311, -3.2932, -3.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4637, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7432, -2.8299, -3.2931, -3.3263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5018, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7427, -2.8287, -3.2918, -3.3256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4904, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7421, -2.8282, -3.2922, -3.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5125, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.7419, -2.8285, -3.2931, -3.3245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4830, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7426, -2.8287, -3.2930, -3.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5203, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7435, -2.8293, -3.2919, -3.3264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5208, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7438, -2.8305, -3.2909, -3.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4901, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7443, -2.8314, -3.2894, -3.3283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4854, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7446, -2.8322, -3.2893, -3.3289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4631, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7447, -2.8321, -3.2887, -3.3293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4823, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7455, -2.8311, -3.2884, -3.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4567, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.7460, -2.8299, -3.2888, -3.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5446, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7467, -2.8293, -3.2903, -3.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4834, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7474, -2.8285, -3.2910, -3.3248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5678, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7495, -2.8265, -3.2886, -3.3248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4871, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7523, -2.8241, -3.2841, -3.3252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4594, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7541, -2.8232, -3.2807, -3.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5098, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7543, -2.8237, -3.2798, -3.3251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4818, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7534, -2.8254, -3.2816, -3.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4628, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7518, -2.8276, -3.2845, -3.3239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4724, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.7502, -2.8293, -3.2863, -3.3235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5616, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7492, -2.8302, -3.2856, -3.3234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5061, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.7487, -2.8304, -3.2836, -3.3236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5560, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7483, -2.8305, -3.2815, -3.3227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5255, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.7473, -2.8313, -3.2816, -3.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5096, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7462, -2.8320, -3.2830, -3.3198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5690, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7461, -2.8315, -3.2826, -3.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4990, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7469, -2.8298, -3.2816, -3.3198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4952, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.7475, -2.8288, -3.2819, -3.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5875, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7475, -2.8285, -3.2826, -3.3205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4819, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7482, -2.8286, -3.2837, -3.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5566, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7497, -2.8272, -3.2831, -3.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5508, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7514, -2.8251, -3.2818, -3.3245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4861, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.7507, -2.8247, -3.2829, -3.3254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5523, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7482, -2.8256, -3.2864, -3.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5115, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7457, -2.8273, -3.2890, -3.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6004, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7445, -2.8265, -3.2876, -3.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4925, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7436, -2.8256, -3.2865, -3.3250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5369, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7422, -2.8257, -3.2867, -3.3241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5243, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7403, -2.8267, -3.2882, -3.3220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4880, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7399, -2.8270, -3.2884, -3.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5612, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7406, -2.8259, -3.2861, -3.3200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4802, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7411, -2.8254, -3.2849, -3.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5550, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7412, -2.8255, -3.2859, -3.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5127, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.7415, -2.8254, -3.2855, -3.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5053, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7426, -2.8246, -3.2830, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5259, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7446, -2.8228, -3.2790, -3.3143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4934, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.7473, -2.8210, -3.2758, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5149, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.7485, -2.8209, -3.2761, -3.3132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5156, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.7484, -2.8220, -3.2784, -3.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5198, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7477, -2.8232, -3.2811, -3.3116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5388, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7476, -2.8231, -3.2814, -3.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4993, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.7471, -2.8227, -3.2809, -3.3110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5485, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7458, -2.8226, -3.2798, -3.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5577, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7448, -2.8223, -3.2775, -3.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5126, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7431, -2.8231, -3.2769, -3.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6059, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7431, -2.8216, -3.2740, -3.3106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5220, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.7440, -2.8195, -3.2710, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6243, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7432, -2.8198, -3.2725, -3.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5538, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7407, -2.8219, -3.2766, -3.3109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4727, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7387, -2.8235, -3.2792, -3.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5989, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7394, -2.8227, -3.2773, -3.3127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5085, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7408, -2.8210, -3.2743, -3.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6028, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7404, -2.8215, -3.2742, -3.3161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6115, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.7385, -2.8230, -3.2758, -3.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5472, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.7388, -2.8230, -3.2751, -3.3144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6678, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7407, -2.8212, -3.2713, -3.3151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5410, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7429, -2.8200, -3.2687, -3.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6923, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7424, -2.8210, -3.2698, -3.3164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5489, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7413, -2.8223, -3.2740, -3.3155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6431, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.7423, -2.8214, -3.2747, -3.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5774, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.7449, -2.8187, -3.2726, -3.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4701, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.7464, -2.8170, -3.2720, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5388, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7459, -2.8171, -3.2736, -3.3175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5031, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7439, -2.8188, -3.2771, -3.3166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6037, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.7432, -2.8194, -3.2783, -3.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5735, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7428, -2.8191, -3.2769, -3.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5234, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.7414, -2.8193, -3.2751, -3.3156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5591, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7399, -2.8202, -3.2752, -3.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5526, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7373, -2.8222, -3.2773, -3.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5452, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7367, -2.8225, -3.2779, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6545, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7394, -2.8205, -3.2744, -3.3118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5240, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.7420, -2.8187, -3.2717, -3.3109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6704, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7415, -2.8185, -3.2712, -3.3087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5532, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.7398, -2.8196, -3.2732, -3.3059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5599, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7388, -2.8199, -3.2731, -3.3038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6452, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7396, -2.8180, -3.2703, -3.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5770, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.7397, -2.8180, -3.2703, -3.3015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5678, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7386, -2.8195, -3.2725, -3.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5763, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7384, -2.8206, -3.2749, -3.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5614, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7401, -2.8196, -3.2748, -3.3003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5385, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7422, -2.8180, -3.2723, -3.3033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5623, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7439, -2.8176, -3.2705, -3.3049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5408, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.7436, -2.8185, -3.2705, -3.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5570, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7429, -2.8202, -3.2722, -3.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5364, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7438, -2.8202, -3.2713, -3.3073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5996, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7463, -2.8176, -3.2671, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5166, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7479, -2.8151, -3.2664, -3.3119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6103, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.7470, -2.8149, -3.2694, -3.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5759, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.7460, -2.8148, -3.2748, -3.3110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5584, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.7456, -2.8138, -3.2777, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5823, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.7443, -2.8135, -3.2767, -3.3099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5726, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7423, -2.8147, -3.2742, -3.3091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6471, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.7375, -2.8175, -3.2723, -3.3072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5642, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.7340, -2.8196, -3.2697, -3.3072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5430, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7320, -2.8211, -3.2655, -3.3083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5450, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7311, -2.8221, -3.2637, -3.3087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5968, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7293, -2.8236, -3.2665, -3.3072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5510, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7280, -2.8253, -3.2715, -3.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5597, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.7286, -2.8249, -3.2741, -3.3050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6694, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.7314, -2.8215, -3.2720, -3.3048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5608, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7343, -2.8188, -3.2695, -3.3045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5564, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7366, -2.8165, -3.2681, -3.3031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5805, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.7397, -2.8134, -3.2659, -3.3021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5885, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7426, -2.8106, -3.2634, -3.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5656, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7447, -2.8081, -3.2625, -3.3008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5171, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7459, -2.8087, -3.2654, -3.2992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5852, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.7449, -2.8116, -3.2686, -3.2976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5857, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7440, -2.8145, -3.2703, -3.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5722, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.7436, -2.8163, -3.2696, -3.2979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5880, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7435, -2.8169, -3.2679, -3.2983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5356, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7417, -2.8182, -3.2675, -3.2984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5701, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7389, -2.8196, -3.2700, -3.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5474, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7378, -2.8194, -3.2696, -3.2972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5515, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7372, -2.8176, -3.2676, -3.2972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5280, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7365, -2.8153, -3.2664, -3.2976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6807, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7342, -2.8136, -3.2654, -3.2964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5446, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.7328, -2.8114, -3.2635, -3.2961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6355, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7318, -2.8092, -3.2603, -3.2963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5953, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7306, -2.8079, -3.2592, -3.2986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6136, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7299, -2.8093, -3.2601, -3.3004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5389, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.7286, -2.8123, -3.2646, -3.3015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5656, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7300, -2.8146, -3.2662, -3.3036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6944, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7352, -2.8142, -3.2636, -3.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5806, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7401, -2.8145, -3.2602, -3.3080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5620, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7422, -2.8157, -3.2600, -3.3071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5380, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.7424, -2.8159, -3.2604, -3.3054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5868, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.7429, -2.8132, -3.2594, -3.3037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5884, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.7434, -2.8097, -3.2604, -3.3026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6720, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7406, -2.8085, -3.2644, -3.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6074, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.7365, -2.8077, -3.2680, -3.2993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6613, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.7340, -2.8069, -3.2680, -3.2985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5854, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7335, -2.8056, -3.2642, -3.2988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6267, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.7338, -2.8065, -3.2635, -3.2982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7441, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7306, -2.8112, -3.2692, -3.2947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6614, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7289, -2.8140, -3.2707, -3.2924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7040, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.7296, -2.8137, -3.2682, -3.2924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5699, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7322, -2.8123, -3.2656, -3.2937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7674, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.7336, -2.8123, -3.2674, -3.2935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5160, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7345, -2.8122, -3.2698, -3.2923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6584, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7380, -2.8092, -3.2668, -3.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5534, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7422, -2.8053, -3.2626, -3.2944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5595, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.7439, -2.8040, -3.2616, -3.2939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6467, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.7431, -2.8059, -3.2640, -3.2917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6876, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7415, -2.8084, -3.2599, -3.2908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7019, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7411, -2.8091, -3.2511, -3.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5302, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.7396, -2.8107, -3.2477, -3.2926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6390, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7372, -2.8135, -3.2496, -3.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5602, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7361, -2.8169, -3.2557, -3.2911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6871, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7367, -2.8168, -3.2557, -3.2925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5926, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7373, -2.8171, -3.2567, -3.2940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6438, device='cuda:0', dtype=torch.float64)
tensor([-1.8424, -2.7360, -2.8184, -3.2566, -3.2939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5513, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7340, -2.8197, -3.2545, -3.2939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5509, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7333, -2.8189, -3.2478, -3.2946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5685, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7334, -2.8169, -3.2407, -3.2957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6590, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.7330, -2.8156, -3.2408, -3.2957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7294, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.7317, -2.8147, -3.2467, -3.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5911, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.7309, -2.8133, -3.2512, -3.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6108, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.7322, -2.8105, -3.2506, -3.2930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5422, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7337, -2.8083, -3.2477, -3.2939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6591, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.7349, -2.8072, -3.2439, -3.2943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6028, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.7338, -2.8081, -3.2459, -3.2935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5650, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7318, -2.8108, -3.2496, -3.2921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5795, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7287, -2.8138, -3.2543, -3.2912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5898, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7263, -2.8149, -3.2577, -3.2912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5491, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.7254, -2.8145, -3.2603, -3.2911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6562, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.7250, -2.8141, -3.2616, -3.2919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6054, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.7285, -2.8103, -3.2612, -3.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6801, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.7350, -2.8038, -3.2588, -3.2926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7131, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7385, -2.8001, -3.2595, -3.2905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7773, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7395, -2.8001, -3.2632, -3.2866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6419, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.7413, -2.7992, -3.2624, -3.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.7451, -2.7961, -3.2539, -3.2866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6769, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7465, -2.7949, -3.2490, -3.2900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9661, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.7438, -2.7986, -3.2457, -3.2901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5345, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.7405, -2.8035, -3.2483, -3.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9764, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7407, -2.8018, -3.2424, -3.2912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6145, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.7401, -2.8006, -3.2442, -3.2912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8159, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7342, -2.8032, -3.2516, -3.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7020, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7292, -2.8060, -3.2592, -3.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7941, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7275, -2.8046, -3.2599, -3.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6794, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.7299, -2.8018, -3.2559, -3.2830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6570, device='cuda:0', dtype=torch.float64)
tensor([-1.8440, -2.7302, -2.8022, -3.2566, -3.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7695, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7279, -2.8063, -3.2631, -3.2792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6376, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7279, -2.8087, -3.2657, -3.2797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7797, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7315, -2.8066, -3.2615, -3.2822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6339, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.7337, -2.8056, -3.2585, -3.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6092, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.7354, -2.8045, -3.2546, -3.2868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5858, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.7372, -2.8035, -3.2514, -3.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6569, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7400, -2.7998, -3.2448, -3.2916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5633, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.7415, -2.7964, -3.2404, -3.2942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7243, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.7376, -2.7971, -3.2422, -3.2943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5468, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7330, -2.7995, -3.2452, -3.2941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7719, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7309, -2.8001, -3.2454, -3.2942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5545, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7289, -2.8012, -3.2493, -3.2928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6041, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.7258, -2.8040, -3.2551, -3.2907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5980, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.7242, -2.8054, -3.2595, -3.2892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6722, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.7237, -2.8064, -3.2590, -3.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6329, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.7249, -2.8050, -3.2546, -3.2875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6433, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.7253, -2.8042, -3.2509, -3.2867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6925, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7265, -2.8017, -3.2480, -3.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6915, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7280, -2.7975, -3.2435, -3.2854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6112, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7300, -2.7934, -3.2383, -3.2856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5813, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7308, -2.7922, -3.2377, -3.2850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6262, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7293, -2.7940, -3.2421, -3.2825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6258, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7278, -2.7994, -3.2512, -3.2772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5773, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7263, -2.8067, -3.2593, -3.2735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7622, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7269, -2.8110, -3.2602, -3.2717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6784, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.7283, -2.8148, -3.2594, -3.2716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6597, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.7285, -2.8181, -3.2586, -3.2713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6023, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7297, -2.8183, -3.2575, -3.2725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6621, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7317, -2.8168, -3.2564, -3.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6381, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7312, -2.8151, -3.2560, -3.2770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5858, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7304, -2.8124, -3.2572, -3.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5915, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.7312, -2.8069, -3.2552, -3.2819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6086, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.7328, -2.8016, -3.2527, -3.2847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7455, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7324, -2.7982, -3.2498, -3.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6695, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7303, -2.7991, -3.2484, -3.2849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6801, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.7286, -2.8001, -3.2447, -3.2854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6296, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.7254, -2.8035, -3.2430, -3.2853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7695, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7194, -2.8117, -3.2472, -3.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6896, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.7154, -2.8192, -3.2532, -3.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6864, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7161, -2.8217, -3.2528, -3.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7204, -2.8196, -3.2489, -3.2832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5639, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7263, -2.8154, -3.2451, -3.2851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5888, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.7329, -2.8096, -3.2432, -3.2882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6062, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.7378, -2.8056, -3.2431, -3.2899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7256, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.7385, -2.8050, -3.2460, -3.2907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6502, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7362, -2.8059, -3.2478, -3.2905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6592, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.7317, -2.8073, -3.2505, -3.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7288, -2.8063, -3.2479, -3.2879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6313, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7283, -2.8039, -3.2441, -3.2860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5947, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7312, -2.8015, -3.2395, -3.2844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6708, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.7321, -2.8027, -3.2405, -3.2807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7167, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7306, -2.8062, -3.2461, -3.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7469, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7288, -2.8079, -3.2513, -3.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7758, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7286, -2.8075, -3.2492, -3.2714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7164, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.7264, -2.8100, -3.2483, -3.2696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7316, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7205, -2.8142, -3.2472, -3.2671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7276, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7211, -2.8134, -3.2413, -3.2674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6414, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7249, -2.8085, -3.2320, -3.2704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5783, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.7275, -2.8036, -3.2281, -3.2725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9073, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.7274, -2.8012, -3.2326, -3.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6028, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.7264, -2.7997, -3.2405, -3.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7869, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.7261, -2.7971, -3.2445, -3.2740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6463, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7269, -2.7947, -3.2466, -3.2762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7356, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7275, -2.7930, -3.2446, -3.2769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7004, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.7277, -2.7917, -3.2389, -3.2775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5677, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.7297, -2.7923, -3.2355, -3.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7126, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.7308, -2.7946, -3.2360, -3.2782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6841, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7303, -2.7982, -3.2413, -3.2762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5864, device='cuda:0', dtype=torch.float64)
tensor([-1.8433, -2.7299, -2.7996, -3.2460, -3.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6734, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.7325, -2.7987, -3.2453, -3.2761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7151, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.7328, -2.7967, -3.2437, -3.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6989, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.7310, -2.7960, -3.2438, -3.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8276, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.7315, -2.7927, -3.2397, -3.2842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6834, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.7337, -2.7897, -3.2368, -3.2875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6862, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7352, -2.7908, -3.2378, -3.2885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8465, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.7335, -2.7984, -3.2452, -3.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8505, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7313, -2.8049, -3.2505, -3.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8718, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.7304, -2.8070, -3.2467, -3.2811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7396, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.7271, -2.8089, -3.2446, -3.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8717, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.7201, -2.8112, -3.2451, -3.2777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6016, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.7158, -2.8092, -3.2477, -3.2765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0361, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7155, -2.8017, -3.2413, -3.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6711, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.7165, -2.7965, -3.2417, -3.2803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8674, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.7125, -2.7972, -3.2487, -3.2768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6974, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7100, -2.8013, -3.2613, -3.2722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0981, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.7151, -2.7975, -3.2545, -3.2708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6539, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.7218, -2.7948, -3.2466, -3.2711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.7219, -2.7982, -3.2443, -3.2661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5971, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.7219, -2.8020, -3.2450, -3.2629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0226, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.7263, -2.7998, -3.2383, -3.2628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6428, device='cuda:0', dtype=torch.float64)
tensor([-1.8569, -2.7324, -2.7964, -3.2352, -3.2648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0396, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.7319, -2.7979, -3.2395, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6929, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.7299, -2.7994, -3.2475, -3.2606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7775, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.7285, -2.7976, -3.2479, -3.2608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6422, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.7284, -2.7947, -3.2450, -3.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7150, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7255, -2.7945, -3.2461, -3.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7213, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7233, -2.7965, -3.2464, -3.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6433, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.7256, -2.7970, -3.2442, -3.2621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7991, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.7305, -2.7960, -3.2403, -3.2631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7912, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7322, -2.7999, -3.2383, -3.2618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7792, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7300, -2.8054, -3.2391, -3.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7702, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.7300, -2.8064, -3.2388, -3.2557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6801, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7303, -2.8024, -3.2345, -3.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8439, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.7301, -2.7983, -3.2335, -3.2603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7315, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7305, -2.7940, -3.2344, -3.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7206, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.7288, -2.7925, -3.2394, -3.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7500, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.7279, -2.7917, -3.2403, -3.2659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6618, device='cuda:0', dtype=torch.float64)
tensor([-1.8539, -2.7275, -2.7913, -3.2375, -3.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6655, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.7272, -2.7930, -3.2345, -3.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7001, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7298, -2.7949, -3.2341, -3.2661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6970, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7332, -2.7947, -3.2307, -3.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7298, device='cuda:0', dtype=torch.float64)
tensor([-1.8386, -2.7382, -2.7941, -3.2307, -3.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6239, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7403, -2.7949, -3.2303, -3.2706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6515, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7388, -2.7957, -3.2301, -3.2723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7439, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7339, -2.7991, -3.2305, -3.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6422, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7263, -2.8033, -3.2316, -3.2733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7051, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7191, -2.8037, -3.2308, -3.2727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6372, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.7123, -2.8031, -3.2313, -3.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6789, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7082, -2.8010, -3.2347, -3.2706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8113, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.7063, -2.7999, -3.2348, -3.2682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7781, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.7095, -2.7984, -3.2330, -3.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8418, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7174, -2.7956, -3.2282, -3.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7841, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.7228, -2.7935, -3.2253, -3.2681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7959, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7234, -2.7932, -3.2280, -3.2686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7803, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7183, -2.7957, -3.2361, -3.2667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7270, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7165, -2.7938, -3.2368, -3.2685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7776, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.7152, -2.7902, -3.2346, -3.2721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8184, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7155, -2.7884, -3.2323, -3.2740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7277, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7142, -2.7894, -3.2332, -3.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7601, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.7124, -2.7947, -3.2404, -3.2724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8432, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7100, -2.8009, -3.2485, -3.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7513, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.7115, -2.8062, -3.2514, -3.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6794, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.7173, -2.8073, -3.2495, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8642, device='cuda:0', dtype=torch.float64)
tensor([-1.8399, -2.7244, -2.8040, -3.2434, -3.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6409, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.7322, -2.7966, -3.2346, -3.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7498, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.7375, -2.7880, -3.2255, -3.2717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7875, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7392, -2.7836, -3.2234, -3.2729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7870, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.7349, -2.7862, -3.2297, -3.2698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8407, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7320, -2.7862, -3.2316, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8574, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7331, -2.7837, -3.2285, -3.2682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8079, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7344, -2.7829, -3.2232, -3.2681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7349, -2.7849, -3.2189, -3.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7335, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7329, -2.7889, -3.2170, -3.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8254, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7291, -2.7908, -3.2160, -3.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7974, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.7252, -2.7918, -3.2204, -3.2592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9007, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7224, -2.7922, -3.2246, -3.2574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7588, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7183, -2.7924, -3.2257, -3.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7699, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.7119, -2.7942, -3.2274, -3.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7440, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.7073, -2.7951, -3.2240, -3.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8522, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.7047, -2.7982, -3.2210, -3.2619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8311, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6994, -2.8024, -3.2262, -3.2616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8525, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.6991, -2.8039, -3.2320, -3.2606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7886, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7053, -2.8026, -3.2361, -3.2602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8759, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.7124, -2.7989, -3.2397, -3.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8086, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7203, -2.7936, -3.2379, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5960, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.7267, -2.7907, -3.2360, -3.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8594, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7256, -2.7945, -3.2365, -3.2640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8717, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.7210, -2.8003, -3.2357, -3.2640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.7207, -2.8019, -3.2329, -3.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7954, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.7243, -2.8031, -3.2332, -3.2646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8189, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7301, -2.8028, -3.2328, -3.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7934, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.7372, -2.7986, -3.2345, -3.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7847, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7442, -2.7919, -3.2345, -3.2515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6904, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7448, -2.7904, -3.2360, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7814, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.7382, -2.7926, -3.2411, -3.2390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8579, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.7290, -2.7944, -3.2402, -3.2358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8779, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.7224, -2.7945, -3.2305, -3.2391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8888, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7156, -2.7980, -3.2239, -3.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7714, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.7108, -2.8016, -3.2255, -3.2442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8150, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.7123, -2.7981, -3.2256, -3.2497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7108, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.7207, -2.7906, -3.2289, -3.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9379, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.7270, -2.7851, -3.2364, -3.2591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8695, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.7327, -2.7820, -3.2435, -3.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0326, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7416, -2.7754, -3.2339, -3.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7818, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.7480, -2.7701, -3.2275, -3.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9016, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.7434, -2.7739, -3.2317, -3.2680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7430, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7312, -2.7807, -3.2401, -3.2612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8996, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7234, -2.7824, -3.2409, -3.2583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9365, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7211, -2.7786, -3.2381, -3.2590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9025, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.7157, -2.7806, -3.2387, -3.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7191, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7130, -2.7807, -3.2386, -3.2514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9255, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7159, -2.7800, -3.2335, -3.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8858, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7199, -2.7822, -3.2310, -3.2540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8375, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.7257, -2.7848, -3.2280, -3.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9427, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.7279, -2.7885, -3.2275, -3.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8993, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7325, -2.7878, -3.2258, -3.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7273, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7352, -2.7842, -3.2232, -3.2621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7166, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.7351, -2.7822, -3.2224, -3.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9685, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7293, -2.7826, -3.2206, -3.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7071, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.7244, -2.7845, -3.2180, -3.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8141, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7229, -2.7854, -3.2107, -3.2710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7439, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7196, -2.7898, -3.2065, -3.2729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8005, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7169, -2.7944, -3.2102, -3.2723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7226, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7124, -2.8008, -3.2159, -3.2684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8355, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.7130, -2.8037, -3.2155, -3.2655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7273, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.7140, -2.8063, -3.2111, -3.2625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6271, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7163, -2.8066, -3.2099, -3.2578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7349, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.7157, -2.8070, -3.2096, -3.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7528, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.7161, -2.8060, -3.2091, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7053, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.7175, -2.8022, -3.2085, -3.2413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7254, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7216, -2.7992, -3.2133, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8650, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7204, -2.7992, -3.2197, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7602, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7208, -2.7979, -3.2211, -3.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9100, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7271, -2.7927, -3.2154, -3.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7636, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7294, -2.7925, -3.2092, -3.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9095, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.7323, -2.7922, -3.2049, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8353, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7344, -2.7909, -3.2068, -3.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.7302, -2.7909, -3.2112, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7531, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7274, -2.7895, -3.2142, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8212, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.7230, -2.7898, -3.2186, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7982, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.7200, -2.7895, -3.2194, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7318, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7163, -2.7914, -3.2193, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7241, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7150, -2.7936, -3.2159, -3.2484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8396, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.7113, -2.7958, -3.2170, -3.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7881, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.7093, -2.7986, -3.2238, -3.2543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8048, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.7106, -2.8004, -3.2255, -3.2567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8688, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.7177, -2.7987, -3.2202, -3.2605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8472, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.7267, -2.7951, -3.2103, -3.2641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7917, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7301, -2.7926, -3.2062, -3.2650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8362, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7243, -2.7958, -3.2114, -3.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7106, device='cuda:0', dtype=torch.float64)
tensor([-1.8483, -2.7158, -2.7990, -3.2173, -3.2591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7061, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.7086, -2.7988, -3.2218, -3.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7817, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.7035, -2.7998, -3.2268, -3.2578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8402, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.7059, -2.7952, -3.2262, -3.2587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8560, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.7081, -2.7932, -3.2279, -3.2587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9303, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.7119, -2.7911, -3.2249, -3.2595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8337, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.7157, -2.7917, -3.2226, -3.2599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8113, device='cuda:0', dtype=torch.float64)
tensor([-1.8469, -2.7201, -2.7920, -3.2188, -3.2611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.7213, -2.7949, -3.2165, -3.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6971, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7230, -2.7955, -3.2161, -3.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7329, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7254, -2.7927, -3.2154, -3.2603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7475, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.7271, -2.7891, -3.2164, -3.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7366, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7250, -2.7858, -3.2175, -3.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7739, device='cuda:0', dtype=torch.float64)
tensor([-1.8534, -2.7238, -2.7817, -3.2154, -3.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7587, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.7215, -2.7826, -3.2137, -3.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9017, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7154, -2.7864, -3.2194, -3.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9376, device='cuda:0', dtype=torch.float64)
tensor([-1.8430, -2.7121, -2.7886, -3.2219, -3.2335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7282, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.7116, -2.7897, -3.2226, -3.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7974, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7139, -2.7913, -3.2212, -3.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8466, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.7196, -2.7902, -3.2162, -3.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7696, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.7267, -2.7878, -3.2137, -3.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9683, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.7282, -2.7911, -3.2187, -3.2424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8491, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.7258, -2.7963, -3.2245, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8133, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.7253, -2.7992, -3.2202, -3.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9048, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.7260, -2.7989, -3.2120, -3.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0239, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.7224, -2.8003, -3.2130, -3.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8128, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.7168, -2.7999, -3.2194, -3.2436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0510, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.7166, -2.7917, -3.2163, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6851, device='cuda:0', dtype=torch.float64)
tensor([-1.8481, -2.7201, -2.7826, -3.2183, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9146, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.7156, -2.7817, -3.2133, -3.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7567, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7101, -2.7847, -3.2160, -3.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1552, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.7058, -2.7835, -3.2099, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7970, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.7069, -2.7828, -3.2166, -3.2368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8632, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.7085, -2.7842, -3.2243, -3.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3110, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.7120, -2.7846, -3.2240, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0779, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.7207, -2.7781, -3.2159, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.7297, -2.7683, -3.2003, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9778, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.7299, -2.7675, -3.1992, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0586, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.7223, -2.7748, -3.2084, -3.2413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8765, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7222, -2.7770, -3.2117, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9344, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.7297, -2.7730, -3.2004, -3.2491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8867, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7372, -2.7722, -3.1954, -3.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1048, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7354, -2.7809, -3.1953, -3.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8445, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.7347, -2.7908, -3.1941, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3644, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.7371, -2.7934, -3.1799, -3.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9972, device='cuda:0', dtype=torch.float64)
tensor([-1.8480, -2.7318, -2.8002, -3.1836, -3.2463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2029, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7177, -2.8135, -3.2024, -3.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8074, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.7069, -2.8218, -3.2220, -3.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0251, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.7026, -2.8202, -3.2239, -3.2436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8420, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7003, -2.8158, -3.2256, -3.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9523, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6985, -2.8122, -3.2272, -3.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8163, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7010, -2.8104, -3.2256, -3.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1273, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7090, -2.8024, -3.2222, -3.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1204, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7144, -2.8014, -3.2224, -3.2594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7703, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.7226, -2.7989, -3.2246, -3.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1085, device='cuda:0', dtype=torch.float64)
tensor([-1.8679, -2.7342, -2.7904, -3.2127, -3.2628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8422, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.7405, -2.7826, -3.2031, -3.2658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1998, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.7277, -2.7836, -3.1980, -3.2571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0290, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.7104, -2.7900, -3.1994, -3.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1561, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6975, -2.7921, -3.2074, -3.2390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8031, device='cuda:0', dtype=torch.float64)
tensor([-1.8532, -2.6909, -2.7915, -3.2145, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0752, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6882, -2.7906, -3.2193, -3.2325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9912, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6926, -2.7864, -3.2211, -3.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9769, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7054, -2.7796, -3.2156, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8173, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7172, -2.7711, -3.2045, -3.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9798, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.7180, -2.7716, -3.2081, -3.2428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8040, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.7134, -2.7775, -3.2146, -3.2401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8069, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.7115, -2.7844, -3.2175, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9219, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7126, -2.7882, -3.2134, -3.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1867, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.7183, -2.7900, -3.2013, -3.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1385, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.7299, -2.7886, -3.1904, -3.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9196, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7412, -2.7861, -3.1907, -3.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9776, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.7458, -2.7824, -3.1907, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9446, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.7439, -2.7796, -3.1963, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8772, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.7348, -2.7790, -3.2112, -3.2447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8912, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7262, -2.7793, -3.2195, -3.2434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7128, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7178, -2.7780, -3.2189, -3.2434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9070, device='cuda:0', dtype=torch.float64)
tensor([-1.8559, -2.7151, -2.7717, -3.2069, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1801, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.7072, -2.7719, -3.2018, -3.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9943, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.6970, -2.7773, -3.2013, -3.2514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9594, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6886, -2.7805, -3.1992, -3.2535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8460, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6885, -2.7817, -3.2020, -3.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7525, device='cuda:0', dtype=torch.float64)
tensor([-1.8612, -2.6945, -2.7804, -3.2042, -3.2554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.6999, -2.7806, -3.2076, -3.2547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-1.8592, -2.7073, -2.7822, -3.2134, -3.2513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9359, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.7105, -2.7846, -3.2238, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8025, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7165, -2.7828, -3.2280, -3.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8200, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7235, -2.7778, -3.2297, -3.2340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0165, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.7247, -2.7758, -3.2297, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7187, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.7243, -2.7779, -3.2284, -3.2293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0369, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.7226, -2.7792, -3.2176, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9022, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7170, -2.7885, -3.2166, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.7055, -2.8024, -3.2184, -3.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9023, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7011, -2.8076, -3.2099, -3.2219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0161, device='cuda:0', dtype=torch.float64)
tensor([-1.8529, -2.7059, -2.8027, -3.1895, -3.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8640, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.7147, -2.7952, -3.1763, -3.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2155, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.7150, -2.7930, -3.1762, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8922, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.7178, -2.7904, -3.1869, -3.2505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9811, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.7244, -2.7834, -3.1900, -3.2542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7927, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.7287, -2.7812, -3.2075, -3.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0391, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.7199, -2.7870, -3.2107, -3.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0316, device='cuda:0', dtype=torch.float64)
tensor([-1.8498, -2.7143, -2.7926, -3.2189, -3.2559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4900, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.7143, -2.7856, -3.2024, -3.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0358, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7062, -2.7830, -3.1972, -3.2636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6918, -2.7878, -3.2032, -3.2536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7942, device='cuda:0', dtype=torch.float64)
tensor([-1.8502, -2.6888, -2.7889, -3.2128, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1716, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.6970, -2.7802, -3.2023, -3.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9062, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7070, -2.7727, -3.1986, -3.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0744, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.7105, -2.7724, -3.1894, -3.2444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-1.8576, -2.7150, -2.7727, -3.1910, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1623, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.7260, -2.7665, -3.1801, -3.2426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7318, -2.7685, -3.1811, -3.2439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1047, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7237, -2.7817, -3.1934, -3.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9448, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7192, -2.7920, -3.2056, -3.2276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7270, -2.7881, -3.2022, -3.2275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9054, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.7343, -2.7847, -3.2011, -3.2284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0883, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.7340, -2.7852, -3.2044, -3.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9808, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7357, -2.7815, -3.2006, -3.2239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9745, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.7355, -2.7793, -3.1949, -3.2260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9259, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.7263, -2.7780, -3.1963, -3.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8786, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.7118, -2.7852, -3.2081, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0156, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.7020, -2.7881, -3.2151, -3.2166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4161, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.7054, -2.7790, -3.2122, -3.2203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9945, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.7066, -2.7742, -3.1998, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9065, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.7080, -2.7734, -3.1976, -3.2202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.7054, -2.7739, -3.2023, -3.2193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6978, -2.7797, -3.2170, -3.2146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0770, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6919, -2.7880, -3.2321, -3.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6963, -2.7910, -3.2331, -3.2159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2073, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.7075, -2.7882, -3.2199, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1455, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.7143, -2.7851, -3.2052, -3.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9535, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.7196, -2.7808, -3.1996, -3.2396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2959, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.7248, -2.7744, -3.2036, -3.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2690, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7184, -2.7783, -3.2173, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0451, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7104, -2.7876, -3.2274, -3.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4208, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.7118, -2.7851, -3.2137, -3.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.7140, -2.7832, -3.2013, -3.2557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-1.8760, -2.7060, -2.7842, -3.2008, -3.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1157, device='cuda:0', dtype=torch.float64)
tensor([-1.8691, -2.6944, -2.7896, -3.2063, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9794, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6912, -2.7899, -3.2072, -3.2410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1391, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6978, -2.7843, -3.2074, -3.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2187, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6985, -2.7868, -3.2005, -3.2397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7244, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.7039, -2.7895, -3.2013, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9666, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.7098, -2.7872, -3.1929, -3.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9032, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.7131, -2.7858, -3.1885, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0717, device='cuda:0', dtype=torch.float64)
tensor([-1.8502, -2.7087, -2.7877, -3.1889, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8923, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.6995, -2.7917, -3.1892, -3.2224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1876, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.7017, -2.7875, -3.1820, -3.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9895, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7124, -2.7780, -3.1744, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0880, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7166, -2.7744, -3.1735, -3.2320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9788, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.7148, -2.7778, -3.1945, -3.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1046, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.7148, -2.7780, -3.2048, -3.2224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2228, device='cuda:0', dtype=torch.float64)
tensor([-1.8566, -2.7225, -2.7719, -3.1985, -3.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0271, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.7232, -2.7712, -3.1977, -3.2239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2393, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.7144, -2.7768, -3.1951, -3.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9571, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.7081, -2.7811, -3.1929, -3.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2112, device='cuda:0', dtype=torch.float64)
tensor([-1.8587, -2.7093, -2.7741, -3.1767, -3.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2348, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.7038, -2.7722, -3.1830, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1167, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6902, -2.7812, -3.2057, -3.2340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3766, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.6919, -2.7806, -3.2021, -3.2388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1042, device='cuda:0', dtype=torch.float64)
tensor([-1.8740, -2.7006, -2.7735, -3.1858, -3.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0994, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.7046, -2.7729, -3.1750, -3.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0821, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6962, -2.7815, -3.1849, -3.2578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1634, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6931, -2.7827, -3.1869, -3.2592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9231, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6925, -2.7886, -3.2039, -3.2593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0571, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6892, -2.7962, -3.2132, -3.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9819, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6901, -2.8017, -3.2234, -3.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2158, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6998, -2.7951, -3.2136, -3.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9761, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.7049, -2.7920, -3.2120, -3.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1529, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.7000, -2.7951, -3.2157, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9398, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.7025, -2.7951, -3.2191, -3.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0743, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.7094, -2.7878, -3.2075, -3.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9279, device='cuda:0', dtype=torch.float64)
tensor([-1.8802, -2.7110, -2.7833, -3.1872, -3.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8848, device='cuda:0', dtype=torch.float64)
tensor([-1.8844, -2.7139, -2.7810, -3.1765, -3.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9684, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.7151, -2.7786, -3.1694, -3.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0432, device='cuda:0', dtype=torch.float64)
tensor([-1.8764, -2.7160, -2.7755, -3.1663, -3.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0701, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7214, -2.7756, -3.1729, -3.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0597, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.7250, -2.7825, -3.1899, -3.2227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2362, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.7305, -2.7837, -3.1936, -3.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7271, -2.7913, -3.2018, -3.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9593, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7150, -2.8030, -3.2106, -3.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8990, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7025, -2.8115, -3.2159, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6928, -2.8094, -3.2141, -3.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6966, -2.8014, -3.2095, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1887, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6949, -2.7955, -3.2054, -3.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8860, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.6981, -2.7890, -3.2029, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1514, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.7061, -2.7765, -3.1849, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0771, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.7065, -2.7720, -3.1830, -3.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6975, -2.7766, -3.1920, -3.2371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0544, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.6966, -2.7801, -3.2033, -3.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2695, device='cuda:0', dtype=torch.float64)
tensor([-1.8585, -2.7060, -2.7711, -3.2068, -3.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4026, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.7120, -2.7727, -3.2017, -3.2390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7135, -2.7745, -3.2089, -3.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1242, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7180, -2.7701, -3.2165, -3.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1074, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.7247, -2.7613, -3.2171, -3.2376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0113, device='cuda:0', dtype=torch.float64)
tensor([-1.8713, -2.7251, -2.7629, -3.2170, -3.2326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0564, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.7197, -2.7701, -3.2112, -3.2257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9070, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.7188, -2.7752, -3.1978, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1126, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.7185, -2.7804, -3.1783, -3.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1319, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.7104, -2.7982, -3.1754, -3.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0163, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6945, -2.8189, -3.1931, -3.2053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1822, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6858, -2.8273, -3.1976, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2489, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6904, -2.8178, -3.1986, -3.1995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1230, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6923, -2.8092, -3.1952, -3.2000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6891, -2.8082, -3.2100, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4931, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.6980, -2.7954, -3.2016, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9598, device='cuda:0', dtype=torch.float64)
tensor([-1.8853, -2.7033, -2.7883, -3.2064, -3.2228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2578, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.6968, -2.7929, -3.2037, -3.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0505, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6947, -2.8077, -3.2111, -3.2285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5509, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.7075, -2.8072, -3.1948, -3.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0911, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.7326, -2.8019, -3.2057, -3.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1200, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7222, -2.8123, -3.2088, -3.2360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1980, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.7160, -2.8163, -3.2352, -3.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5231, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.7161, -2.8005, -3.2221, -3.2379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9202, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7165, -2.7863, -3.2176, -3.2487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3810, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.7028, -2.7805, -3.2075, -3.2498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6981, -2.7742, -3.2050, -3.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1295, device='cuda:0', dtype=torch.float64)
tensor([-1.8589, -2.6990, -2.7642, -3.1944, -3.2576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0929, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.6995, -2.7645, -3.2000, -3.2561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3703, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6920, -2.7828, -3.2147, -3.2445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2364, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.6996, -2.7892, -3.2196, -3.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1344, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.7144, -2.7830, -3.2054, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9955, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.7271, -2.7737, -3.1798, -3.2438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.7316, -2.7694, -3.1557, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2586, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.7364, -2.7652, -3.1358, -3.2464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2593, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.7353, -2.7702, -3.1327, -3.2424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3904, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7140, -2.7899, -3.1452, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1781, device='cuda:0', dtype=torch.float64)
tensor([-1.8454, -2.7011, -2.8030, -3.1554, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1994, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.7059, -2.7994, -3.1509, -3.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8996, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.7130, -2.7910, -3.1511, -3.2209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3461, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.7078, -2.7885, -3.1691, -3.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1241, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.7013, -2.7854, -3.1881, -3.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2574, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7011, -2.7727, -3.1873, -3.2157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0336, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7089, -2.7616, -3.1994, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5657, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.6971, -2.7689, -3.1897, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1521, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.6979, -2.7767, -3.1967, -3.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6023, device='cuda:0', dtype=torch.float64)
tensor([-1.8774, -2.7028, -2.7702, -3.1840, -3.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3932, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.6981, -2.7736, -3.1945, -3.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5448, device='cuda:0', dtype=torch.float64)
tensor([-1.8488, -2.6822, -2.7902, -3.2140, -3.2325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2432, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.6898, -2.7938, -3.2320, -3.2284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7597, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7136, -2.7782, -3.2124, -3.2440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.7321, -2.7721, -3.2063, -3.2540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5651, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7272, -2.7786, -3.2199, -3.2506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2511, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.7188, -2.7775, -3.2295, -3.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4657, device='cuda:0', dtype=torch.float64)
tensor([-1.8673, -2.7173, -2.7657, -3.2225, -3.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2253, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.7144, -2.7586, -3.2233, -3.2594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2854, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.7038, -2.7610, -3.2186, -3.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0691, device='cuda:0', dtype=torch.float64)
tensor([-1.8700, -2.6992, -2.7630, -3.2144, -3.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3547, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.6974, -2.7648, -3.2069, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1191, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6929, -2.7776, -3.2151, -3.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6809, -2.7946, -3.2229, -3.2424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9980, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6769, -2.8060, -3.2257, -3.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3879, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6885, -2.7969, -3.2058, -3.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0639, device='cuda:0', dtype=torch.float64)
tensor([-1.8438, -2.7100, -2.7804, -3.1864, -3.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1756, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.7258, -2.7741, -3.1805, -3.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2068, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.7292, -2.7770, -3.1953, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3189, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.7285, -2.7774, -3.2077, -3.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3689, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.7213, -2.7816, -3.2053, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1058, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.7096, -2.7893, -3.1912, -3.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0712, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.7047, -2.7936, -3.1670, -3.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1632, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.7109, -2.7837, -3.1359, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-1.8854, -2.7122, -2.7778, -3.1218, -3.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0568, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.7162, -2.7701, -3.1195, -3.2180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1782, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.7158, -2.7701, -3.1325, -3.2237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9665, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.7136, -2.7701, -3.1555, -3.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.7077, -2.7759, -3.1837, -3.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.6985, -2.7856, -3.2092, -3.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6950, -2.7905, -3.2124, -3.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0751, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6974, -2.7912, -3.2041, -3.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1086, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6943, -2.7977, -3.1959, -3.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1858, device='cuda:0', dtype=torch.float64)
tensor([-1.8246, -2.6894, -2.8058, -3.2019, -3.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0823, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6943, -2.8014, -3.2004, -3.2618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9459, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6990, -2.7978, -3.1977, -3.2699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8543, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6985, -2.7937, -3.1924, -3.2749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1117, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.6946, -2.7865, -3.1865, -3.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9257, device='cuda:0', dtype=torch.float64)
tensor([-1.8641, -2.6997, -2.7809, -3.1788, -3.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1752, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.7142, -2.7689, -3.1703, -3.2692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([-1.8889, -2.7208, -2.7646, -3.1670, -3.2608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-1.8859, -2.7179, -2.7682, -3.1672, -3.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8258, device='cuda:0', dtype=torch.float64)
tensor([-1.8803, -2.7153, -2.7720, -3.1729, -3.2289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9773, device='cuda:0', dtype=torch.float64)
tensor([-1.8731, -2.7144, -2.7743, -3.1715, -3.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8449, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.7121, -2.7770, -3.1734, -3.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0494, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7011, -2.7885, -3.1859, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0412, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6988, -2.7925, -3.1946, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9193, device='cuda:0', dtype=torch.float64)
tensor([-1.8403, -2.7020, -2.7883, -3.1914, -3.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9521, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.6965, -2.7931, -3.1921, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9878, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6845, -2.7977, -3.1984, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0349, device='cuda:0', dtype=torch.float64)
tensor([-1.8513, -2.6803, -2.7973, -3.1974, -3.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8283, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.6863, -2.7907, -3.1887, -3.2049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9150, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6965, -2.7836, -3.1858, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2428, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.7123, -2.7850, -3.1866, -3.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3220, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.7316, -2.7832, -3.1768, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1895, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7488, -2.7824, -3.1683, -3.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2529, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.7473, -2.7893, -3.1634, -3.2479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1351, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.7409, -2.7912, -3.1560, -3.2456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0702, device='cuda:0', dtype=torch.float64)
tensor([-1.8694, -2.7281, -2.7905, -3.1454, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0864, device='cuda:0', dtype=torch.float64)
tensor([-1.8633, -2.7120, -2.7903, -3.1418, -3.2388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.6979, -2.7906, -3.1505, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.6907, -2.7875, -3.1668, -3.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0756, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.6922, -2.7852, -3.1758, -3.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2379, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6939, -2.7847, -3.1902, -3.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0854, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6946, -2.7913, -3.2076, -3.2168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0949, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.7001, -2.7903, -3.2026, -3.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9845, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7114, -2.7839, -3.1783, -3.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1979, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.7254, -2.7745, -3.1560, -3.2226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0843, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.7292, -2.7730, -3.1488, -3.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.7239, -2.7761, -3.1583, -3.2133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2781, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.7203, -2.7719, -3.1713, -3.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1806, device='cuda:0', dtype=torch.float64)
tensor([-1.8791, -2.7160, -2.7676, -3.1926, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1288, device='cuda:0', dtype=torch.float64)
tensor([-1.8742, -2.7092, -2.7681, -3.2090, -3.2071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0223, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.7083, -2.7665, -3.2135, -3.2058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8300, device='cuda:0', dtype=torch.float64)
tensor([-1.8665, -2.7102, -2.7654, -3.2095, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0586, device='cuda:0', dtype=torch.float64)
tensor([-1.8591, -2.7070, -2.7688, -3.2057, -3.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1881, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7021, -2.7734, -3.2024, -3.1981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9944, device='cuda:0', dtype=torch.float64)
tensor([-1.8516, -2.7032, -2.7735, -3.1970, -3.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0844, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.7039, -2.7701, -3.1928, -3.2043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8598, device='cuda:0', dtype=torch.float64)
tensor([-1.8554, -2.7034, -2.7663, -3.1893, -3.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.7035, -2.7621, -3.1800, -3.2187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1143, device='cuda:0', dtype=torch.float64)
tensor([-1.8634, -2.7000, -2.7624, -3.1712, -3.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9821, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6953, -2.7627, -3.1631, -3.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6904, -2.7591, -3.1632, -3.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0000, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.6878, -2.7574, -3.1675, -3.2460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8810, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.6869, -2.7577, -3.1853, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0287, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.6877, -2.7570, -3.1923, -3.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9839, device='cuda:0', dtype=torch.float64)
tensor([-1.8754, -2.6907, -2.7575, -3.2017, -3.2431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1746, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.6880, -2.7627, -3.1978, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0194, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6931, -2.7650, -3.1879, -3.2372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6977, -2.7679, -3.1728, -3.2387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0216, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.6953, -2.7768, -3.1695, -3.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2054, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6829, -2.7924, -3.1842, -3.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0128, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6751, -2.8014, -3.2040, -3.2214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0291, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6816, -2.7981, -3.2188, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2272, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6960, -2.7941, -3.2095, -3.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1346, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7239, -2.7794, -3.1835, -3.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0957, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7522, -2.7645, -3.1501, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2485, device='cuda:0', dtype=torch.float64)
tensor([-1.8904, -2.7705, -2.7576, -3.1365, -3.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.7726, -2.7599, -3.1448, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9591, device='cuda:0', dtype=torch.float64)
tensor([-1.8823, -2.7691, -2.7674, -3.1644, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2036, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.7642, -2.7688, -3.1734, -3.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0437, device='cuda:0', dtype=torch.float64)
tensor([-1.8752, -2.7474, -2.7685, -3.1859, -3.2139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2847, device='cuda:0', dtype=torch.float64)
tensor([-1.8551, -2.7103, -2.7821, -3.1827, -3.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9226, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6746, -2.7933, -3.1872, -3.2142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3420, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6544, -2.7883, -3.1789, -3.2170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1771, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6421, -2.7865, -3.1729, -3.2189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2188, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.6430, -2.7876, -3.1750, -3.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3436, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6676, -2.7700, -3.1656, -3.2126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.6988, -2.7491, -3.1559, -3.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3416, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.7147, -2.7430, -3.1672, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1499, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.7119, -2.7514, -3.1942, -3.2232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0052, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.7065, -2.7593, -3.1987, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0539, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.7017, -2.7705, -3.1946, -3.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2874, device='cuda:0', dtype=torch.float64)
tensor([-1.8431, -2.6942, -2.7856, -3.1841, -3.2266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9621, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6937, -2.7947, -3.1748, -3.2293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2384, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7081, -2.7924, -3.1639, -3.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.7188, -2.7897, -3.1655, -3.2311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1831, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.7170, -2.7899, -3.1808, -3.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9649, device='cuda:0', dtype=torch.float64)
tensor([-1.8535, -2.7094, -2.7905, -3.1941, -3.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5197, device='cuda:0', dtype=torch.float64)
tensor([-1.8648, -2.7167, -2.7764, -3.1735, -3.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2848, device='cuda:0', dtype=torch.float64)
tensor([-1.8682, -2.7165, -2.7688, -3.1683, -3.1900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5452, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.7090, -2.7724, -3.1631, -3.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1376, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.7116, -2.7647, -3.1555, -3.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2278, device='cuda:0', dtype=torch.float64)
tensor([-1.8882, -2.7189, -2.7569, -3.1470, -3.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1811, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.7177, -2.7642, -3.1586, -3.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2119, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6962, -2.7849, -3.1702, -3.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2790, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.6877, -2.7902, -3.1789, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6950, -2.7810, -3.1802, -3.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1785, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.6980, -2.7729, -3.1930, -3.2126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1565, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.7054, -2.7613, -3.2070, -3.2122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0999, device='cuda:0', dtype=torch.float64)
tensor([-1.8709, -2.7069, -2.7563, -3.2202, -3.2107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0463, device='cuda:0', dtype=torch.float64)
tensor([-1.8699, -2.7014, -2.7601, -3.2317, -3.2069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2731, device='cuda:0', dtype=torch.float64)
tensor([-1.8600, -2.6824, -2.7736, -3.2356, -3.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3803, device='cuda:0', dtype=torch.float64)
tensor([-1.8598, -2.6778, -2.7734, -3.2160, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2152, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.6830, -2.7664, -3.1817, -3.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1596, device='cuda:0', dtype=torch.float64)
tensor([-1.8741, -2.6808, -2.7713, -3.1514, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3510, device='cuda:0', dtype=torch.float64)
tensor([-1.8642, -2.6716, -2.7844, -3.1581, -3.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4480, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6788, -2.7821, -3.1466, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9201, device='cuda:0', dtype=torch.float64)
tensor([-1.8580, -2.6935, -2.7784, -3.1621, -3.2444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6260, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.6989, -2.7803, -3.1729, -3.2327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5876, device='cuda:0', dtype=torch.float64)
tensor([-1.8568, -2.7228, -2.7669, -3.1714, -3.2322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1463, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.7465, -2.7492, -3.1646, -3.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3663, device='cuda:0', dtype=torch.float64)
tensor([-1.8645, -2.7486, -2.7504, -3.1761, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3850, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.7365, -2.7651, -3.2030, -3.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.7265, -2.7736, -3.2029, -3.2043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2406, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.7272, -2.7794, -3.2015, -3.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6512, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.7146, -2.7976, -3.1923, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2636, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7136, -2.8077, -3.1925, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4092, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7230, -2.7984, -3.1679, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2264, device='cuda:0', dtype=torch.float64)
tensor([-1.8760, -2.7273, -2.7949, -3.1696, -3.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5092, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.7155, -2.8021, -3.1721, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9770, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.7093, -2.7997, -3.1761, -3.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4639, device='cuda:0', dtype=torch.float64)
tensor([-1.8701, -2.7157, -2.7825, -3.1657, -3.2143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2855, device='cuda:0', dtype=torch.float64)
tensor([-1.8631, -2.7139, -2.7751, -3.1742, -3.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1643, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.7006, -2.7804, -3.1953, -3.2153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1271, device='cuda:0', dtype=torch.float64)
tensor([-1.8418, -2.7003, -2.7761, -3.2165, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4803, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.7146, -2.7639, -3.2027, -3.2376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2922, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.7175, -2.7562, -3.1909, -3.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0621, device='cuda:0', dtype=torch.float64)
tensor([-1.8506, -2.7162, -2.7537, -3.1864, -3.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.7205, -2.7494, -3.1709, -3.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0914, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.7248, -2.7471, -3.1581, -3.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9665, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.7240, -2.7446, -3.1534, -3.2404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1994, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.7148, -2.7518, -3.1521, -3.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1698, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.7059, -2.7642, -3.1598, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3308, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.7021, -2.7683, -3.1562, -3.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1139, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.7042, -2.7642, -3.1517, -3.2139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1814, device='cuda:0', dtype=torch.float64)
tensor([-1.8646, -2.6982, -2.7685, -3.1623, -3.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2475, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6855, -2.7776, -3.1871, -3.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2374, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.6773, -2.7882, -3.2031, -3.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-1.8570, -2.6838, -2.7892, -3.1969, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5999, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6915, -2.7985, -3.1902, -3.1915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1467, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.7045, -2.8010, -3.1786, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2111, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.7243, -2.7993, -3.1604, -3.2083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1132, device='cuda:0', dtype=torch.float64)
tensor([-1.8747, -2.7258, -2.8067, -3.1601, -3.2095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2841, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7111, -2.8180, -3.1685, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9778, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.6989, -2.8217, -3.1793, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1165, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6954, -2.8177, -3.1921, -3.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2402, device='cuda:0', dtype=torch.float64)
tensor([-1.8536, -2.6949, -2.8165, -3.1844, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2427, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.7025, -2.8166, -3.1586, -3.2043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-1.8738, -2.7136, -2.8116, -3.1344, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1337, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.7215, -2.8087, -3.1221, -3.2275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4437, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.7137, -2.8165, -3.1442, -3.2351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0319, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.7008, -2.8271, -3.1733, -3.2385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2752, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.7019, -2.8234, -3.1940, -3.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1051, device='cuda:0', dtype=torch.float64)
tensor([-1.8561, -2.7080, -2.8169, -3.2060, -3.2468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9920, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7111, -2.8086, -3.2098, -3.2436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0041, device='cuda:0', dtype=torch.float64)
tensor([-1.8607, -2.7079, -2.8023, -3.2067, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1243, device='cuda:0', dtype=torch.float64)
tensor([-1.8613, -2.6989, -2.7976, -3.1976, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0671, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.6799, -2.8036, -3.1968, -3.2200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0302, device='cuda:0', dtype=torch.float64)
tensor([-1.8486, -2.6590, -2.8115, -3.1913, -3.2112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2979, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.6543, -2.8057, -3.1729, -3.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1382, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.6606, -2.7983, -3.1555, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3955, device='cuda:0', dtype=torch.float64)
tensor([-1.8778, -2.6630, -2.7963, -3.1533, -3.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2367, device='cuda:0', dtype=torch.float64)
tensor([-1.8809, -2.6763, -2.7828, -3.1528, -3.2305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1678, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.6982, -2.7642, -3.1659, -3.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4079, device='cuda:0', dtype=torch.float64)
tensor([-1.8830, -2.7166, -2.7512, -3.1649, -3.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.7195, -2.7499, -3.1584, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0148, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.7254, -2.7495, -3.1564, -3.2169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1292, device='cuda:0', dtype=torch.float64)
tensor([-1.8681, -2.7276, -2.7538, -3.1591, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0086, device='cuda:0', dtype=torch.float64)
tensor([-1.8625, -2.7265, -2.7577, -3.1678, -3.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1507, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.7187, -2.7562, -3.1849, -3.2185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0607, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7181, -2.7507, -3.1950, -3.2150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7231, -2.7424, -3.1961, -3.2139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0499, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.7341, -2.7339, -3.1887, -3.2166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1278, device='cuda:0', dtype=torch.float64)
tensor([-1.8615, -2.7302, -2.7418, -3.1792, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2668, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.7239, -2.7619, -3.1728, -3.2084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4300, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.7259, -2.7719, -3.1634, -3.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1835, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.7204, -2.7838, -3.1501, -3.2155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4465, device='cuda:0', dtype=torch.float64)
tensor([-1.8477, -2.7121, -2.8007, -3.1427, -3.2212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3098, device='cuda:0', dtype=torch.float64)
tensor([-1.8595, -2.7090, -2.8005, -3.1363, -3.2258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0655, device='cuda:0', dtype=torch.float64)
tensor([-1.8714, -2.7070, -2.7949, -3.1394, -3.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5888, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.6803, -2.8009, -3.1523, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2598, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6557, -2.8118, -3.1742, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5674, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.6533, -2.8019, -3.1709, -3.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9581, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.6649, -2.7914, -3.1797, -3.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2841, device='cuda:0', dtype=torch.float64)
tensor([-1.8692, -2.6702, -2.7917, -3.1883, -3.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9381, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.6825, -2.7932, -3.1967, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4561, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.7030, -2.7832, -3.1865, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2193, device='cuda:0', dtype=torch.float64)
tensor([-1.8796, -2.7165, -2.7764, -3.1803, -3.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4312, device='cuda:0', dtype=torch.float64)
tensor([-1.8696, -2.7103, -2.7857, -3.1836, -3.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2264, device='cuda:0', dtype=torch.float64)
tensor([-1.8733, -2.7126, -2.7847, -3.1664, -3.2109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1500, device='cuda:0', dtype=torch.float64)
tensor([-1.8866, -2.7258, -2.7677, -3.1432, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2463, device='cuda:0', dtype=torch.float64)
tensor([-1.8848, -2.7285, -2.7645, -3.1446, -3.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3847, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.7170, -2.7694, -3.1494, -3.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3107, device='cuda:0', dtype=torch.float64)
tensor([-1.8650, -2.7143, -2.7595, -3.1503, -3.2388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1198, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.7128, -2.7455, -3.1610, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3092, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6950, -2.7495, -3.1786, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1853, device='cuda:0', dtype=torch.float64)
tensor([-1.8456, -2.6743, -2.7604, -3.1946, -3.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2960, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6616, -2.7619, -3.1890, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9300, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.6610, -2.7590, -3.1732, -3.2398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3314, device='cuda:0', dtype=torch.float64)
tensor([-1.8866, -2.6715, -2.7501, -3.1552, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5680, device='cuda:0', dtype=torch.float64)
tensor([-1.8978, -2.6904, -2.7399, -3.1427, -3.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1632, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7084, -2.7348, -3.1429, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1102, device='cuda:0', dtype=torch.float64)
tensor([-1.8854, -2.7332, -2.7334, -3.1551, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0392, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.7532, -2.7330, -3.1626, -3.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4541, device='cuda:0', dtype=torch.float64)
tensor([-1.8583, -2.7471, -2.7511, -3.1836, -3.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2308, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7308, -2.7814, -3.2205, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4238, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.7175, -2.7927, -3.2191, -3.1771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1687, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.7005, -2.8043, -3.2215, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3111, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6789, -2.8175, -3.2230, -3.1848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6615, -2.8264, -3.2342, -3.1858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2916, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.6614, -2.8136, -3.2278, -3.1957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3589, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.6853, -2.7950, -3.2327, -3.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5002, device='cuda:0', dtype=torch.float64)
tensor([-1.9127, -2.6967, -2.7866, -3.2145, -3.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0557, device='cuda:0', dtype=torch.float64)
tensor([-1.9225, -2.7038, -2.7889, -3.2101, -3.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4079, device='cuda:0', dtype=torch.float64)
tensor([-1.9362, -2.7210, -2.7776, -3.1800, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2875, device='cuda:0', dtype=torch.float64)
tensor([-1.9264, -2.7250, -2.7731, -3.1640, -3.1961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2214, device='cuda:0', dtype=torch.float64)
tensor([-1.8963, -2.7112, -2.7800, -3.1679, -3.1809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0438, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.7012, -2.7914, -3.1804, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2665, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.6988, -2.7844, -3.1728, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3003, device='cuda:0', dtype=torch.float64)
tensor([-1.8455, -2.6924, -2.7752, -3.1715, -3.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1996, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.6842, -2.7671, -3.1715, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2992, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6802, -2.7599, -3.1793, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4106, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.6836, -2.7477, -3.1532, -3.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-1.8728, -2.7015, -2.7396, -3.1387, -3.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3563, device='cuda:0', dtype=torch.float64)
tensor([-1.8815, -2.7088, -2.7471, -3.1309, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9841, device='cuda:0', dtype=torch.float64)
tensor([-1.8773, -2.7122, -2.7651, -3.1369, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5584, device='cuda:0', dtype=torch.float64)
tensor([-1.8750, -2.7089, -2.7770, -3.1366, -3.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9031, device='cuda:0', dtype=torch.float64)
tensor([-1.8685, -2.7051, -2.7889, -3.1504, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2787, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6855, -2.8063, -3.1627, -3.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2087, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6707, -2.8177, -3.1651, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([-1.8459, -2.6719, -2.8152, -3.1596, -3.1964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3458, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6848, -2.7965, -3.1433, -3.2102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4524, device='cuda:0', dtype=torch.float64)
tensor([-1.8710, -2.6891, -2.7852, -3.1430, -3.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4281, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.6838, -2.7818, -3.1622, -3.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2301, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6917, -2.7759, -3.1719, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4737, device='cuda:0', dtype=torch.float64)
tensor([-1.8684, -2.7147, -2.7658, -3.1671, -3.2326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3215, device='cuda:0', dtype=torch.float64)
tensor([-1.8719, -2.7204, -2.7648, -3.1283, -3.2442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0842, device='cuda:0', dtype=torch.float64)
tensor([-1.8669, -2.7224, -2.7683, -3.1267, -3.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5635, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.7242, -2.7640, -3.1099, -3.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4451, device='cuda:0', dtype=torch.float64)
tensor([-1.8609, -2.7185, -2.7629, -3.1204, -3.2430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5628, device='cuda:0', dtype=torch.float64)
tensor([-1.8577, -2.7073, -2.7666, -3.1525, -3.2262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4387, device='cuda:0', dtype=torch.float64)
tensor([-1.8636, -2.7111, -2.7651, -3.1771, -3.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1268, device='cuda:0', dtype=torch.float64)
tensor([-1.8841, -2.7245, -2.7545, -3.1814, -3.2014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1096, device='cuda:0', dtype=torch.float64)
tensor([-1.9053, -2.7396, -2.7483, -3.1829, -3.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4616, device='cuda:0', dtype=torch.float64)
tensor([-1.8955, -2.7283, -2.7682, -3.1831, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4079, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7013, -2.8030, -3.1935, -3.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.6720, -2.8340, -3.1996, -3.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4113, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6557, -2.8401, -3.1790, -3.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2179, device='cuda:0', dtype=torch.float64)
tensor([-1.8616, -2.6563, -2.8329, -3.1771, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7888, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.6520, -2.8298, -3.1823, -3.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3287, device='cuda:0', dtype=torch.float64)
tensor([-1.8822, -2.6634, -2.8107, -3.2094, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4923, device='cuda:0', dtype=torch.float64)
tensor([-1.9092, -2.6910, -2.7739, -3.2017, -3.2240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1348, device='cuda:0', dtype=torch.float64)
tensor([-1.9175, -2.7049, -2.7535, -3.1957, -3.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1879, device='cuda:0', dtype=torch.float64)
tensor([-1.9027, -2.7047, -2.7536, -3.1863, -3.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8804, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.7014, -2.7555, -3.1842, -3.2225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3277, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.7053, -2.7495, -3.1686, -3.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2848, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.7076, -2.7445, -3.1607, -3.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1748, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.7110, -2.7459, -3.1638, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2748, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.7182, -2.7459, -3.1723, -3.2099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1488, device='cuda:0', dtype=torch.float64)
tensor([-1.8545, -2.7135, -2.7545, -3.1713, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1647, device='cuda:0', dtype=torch.float64)
tensor([-1.8602, -2.7070, -2.7642, -3.1507, -3.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3600, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.6971, -2.7741, -3.1343, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3864, device='cuda:0', dtype=torch.float64)
tensor([-1.8698, -2.6924, -2.7785, -3.1201, -3.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1731, device='cuda:0', dtype=torch.float64)
tensor([-1.8769, -2.6902, -2.7793, -3.1191, -3.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3747, device='cuda:0', dtype=torch.float64)
tensor([-1.8876, -2.7023, -2.7764, -3.1242, -3.2071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0703, device='cuda:0', dtype=torch.float64)
tensor([-1.8961, -2.7171, -2.7708, -3.1366, -3.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3141, device='cuda:0', dtype=torch.float64)
tensor([-1.9002, -2.7306, -2.7614, -3.1444, -3.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3152, device='cuda:0', dtype=torch.float64)
tensor([-1.8979, -2.7305, -2.7567, -3.1489, -3.2471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2314, device='cuda:0', dtype=torch.float64)
tensor([-1.8736, -2.7051, -2.7712, -3.1509, -3.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5134, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.6763, -2.7888, -3.1545, -3.2392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1827, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6434, -2.8056, -3.1681, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0390, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6294, -2.8135, -3.1759, -3.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3087, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6428, -2.8004, -3.1793, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4070, device='cuda:0', dtype=torch.float64)
tensor([-1.8594, -2.6669, -2.7875, -3.1833, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1720, device='cuda:0', dtype=torch.float64)
tensor([-1.8909, -2.7015, -2.7660, -3.1748, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0958, device='cuda:0', dtype=torch.float64)
tensor([-1.9127, -2.7326, -2.7583, -3.1618, -3.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.7479, -2.7604, -3.1445, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1060, device='cuda:0', dtype=torch.float64)
tensor([-1.9093, -2.7470, -2.7732, -3.1232, -3.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3806, device='cuda:0', dtype=torch.float64)
tensor([-1.8970, -2.7466, -2.7816, -3.1106, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9602, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.7415, -2.7888, -3.1277, -3.2221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3859, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.7274, -2.7962, -3.1356, -3.2240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1254, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.7168, -2.8008, -3.1594, -3.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3380, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.7174, -2.7851, -3.1696, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3310, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.7034, -2.7913, -3.1758, -3.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0119, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6767, -2.7998, -3.1845, -3.2280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4635, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.6693, -2.7996, -3.1850, -3.2208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3480, device='cuda:0', dtype=torch.float64)
tensor([-1.8744, -2.6767, -2.7904, -3.1579, -3.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1647, device='cuda:0', dtype=torch.float64)
tensor([-1.9019, -2.6926, -2.7810, -3.1355, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2635, device='cuda:0', dtype=torch.float64)
tensor([-1.9184, -2.7048, -2.7801, -3.1289, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4837, device='cuda:0', dtype=torch.float64)
tensor([-1.9131, -2.7025, -2.7886, -3.1386, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3733, device='cuda:0', dtype=torch.float64)
tensor([-1.9079, -2.7116, -2.7878, -3.1416, -3.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2444, device='cuda:0', dtype=torch.float64)
tensor([-1.8972, -2.7288, -2.7979, -3.1925, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0566, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.7198, -2.8016, -3.1498, -3.2204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3403, device='cuda:0', dtype=torch.float64)
tensor([-1.8491, -2.7129, -2.7972, -3.1658, -3.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0614, device='cuda:0', dtype=torch.float64)
tensor([-1.8499, -2.7076, -2.7761, -3.1423, -3.2310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5271, device='cuda:0', dtype=torch.float64)
tensor([-1.8503, -2.7009, -2.7712, -3.1744, -3.2272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7915, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6753, -2.7969, -3.2006, -3.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8868, device='cuda:0', dtype=torch.float64)
tensor([-1.8562, -2.6801, -2.8008, -3.1805, -3.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2569, device='cuda:0', dtype=torch.float64)
tensor([-1.8794, -2.7028, -2.7980, -3.1532, -3.2202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3310, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.7176, -2.8033, -3.1353, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-1.8897, -2.7253, -2.8070, -3.1300, -3.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5719, device='cuda:0', dtype=torch.float64)
tensor([-1.8883, -2.7281, -2.8042, -3.1343, -3.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2564, device='cuda:0', dtype=torch.float64)
tensor([-1.8860, -2.7371, -2.7977, -3.1413, -3.2487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2564, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.7379, -2.7969, -3.1526, -3.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1454, device='cuda:0', dtype=torch.float64)
tensor([-1.8755, -2.7262, -2.8068, -3.1771, -3.2488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4035, device='cuda:0', dtype=torch.float64)
tensor([-1.8827, -2.7233, -2.8050, -3.1700, -3.2570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2781, device='cuda:0', dtype=torch.float64)
tensor([-1.8876, -2.7176, -2.8062, -3.1615, -3.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3755, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.7011, -2.8175, -3.1744, -3.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3712, device='cuda:0', dtype=torch.float64)
tensor([-1.8522, -2.6854, -2.8292, -3.2028, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4141, device='cuda:0', dtype=torch.float64)
tensor([-1.8510, -2.6876, -2.8186, -3.2157, -3.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2993, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.7107, -2.7975, -3.2125, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6432, device='cuda:0', dtype=torch.float64)
tensor([-1.8653, -2.7209, -2.7828, -3.2144, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2157, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.7334, -2.7738, -3.2334, -3.1753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4457, device='cuda:0', dtype=torch.float64)
tensor([-1.8801, -2.7475, -2.7537, -3.1838, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3882, device='cuda:0', dtype=torch.float64)
tensor([-1.8751, -2.7480, -2.7449, -3.1593, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3235, device='cuda:0', dtype=torch.float64)
tensor([-1.8540, -2.7272, -2.7622, -3.1529, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3025, device='cuda:0', dtype=torch.float64)
tensor([-1.8471, -2.7110, -2.7785, -3.1471, -3.1507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2988, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.7123, -2.7734, -3.1236, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3794, device='cuda:0', dtype=torch.float64)
tensor([-1.8945, -2.7125, -2.7630, -3.1050, -3.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2377, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.6976, -2.7681, -3.0941, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2607, device='cuda:0', dtype=torch.float64)
tensor([-1.8998, -2.6797, -2.7805, -3.1238, -3.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3974, device='cuda:0', dtype=torch.float64)
tensor([-1.8878, -2.6639, -2.7881, -3.1384, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2834, device='cuda:0', dtype=torch.float64)
tensor([-1.8805, -2.6610, -2.7772, -3.1383, -3.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2093, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6612, -2.7671, -3.1491, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4048, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6588, -2.7686, -3.1456, -3.1951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2836, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.6776, -2.7553, -3.1409, -3.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0218, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.6935, -2.7424, -3.1268, -3.2187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3751, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.7021, -2.7427, -3.1259, -3.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3678, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.6918, -2.7619, -3.1487, -3.2096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9380, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.6953, -2.7729, -3.1592, -3.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4094, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.7010, -2.7786, -3.1483, -3.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1653, device='cuda:0', dtype=torch.float64)
tensor([-1.8710, -2.7083, -2.7825, -3.1369, -3.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3011, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.7136, -2.7790, -3.1343, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5955, device='cuda:0', dtype=torch.float64)
tensor([-1.9030, -2.7216, -2.7755, -3.1425, -3.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2984, device='cuda:0', dtype=torch.float64)
tensor([-1.9139, -2.7305, -2.7660, -3.1425, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0303, device='cuda:0', dtype=torch.float64)
tensor([-1.9223, -2.7424, -2.7585, -3.1551, -3.2431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2588, device='cuda:0', dtype=torch.float64)
tensor([-1.9081, -2.7371, -2.7713, -3.1783, -3.2406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1176, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.7337, -2.7839, -3.1923, -3.2361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2184, device='cuda:0', dtype=torch.float64)
tensor([-1.8786, -2.7263, -2.7899, -3.2238, -3.2343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6640, device='cuda:0', dtype=torch.float64)
tensor([-1.8531, -2.6903, -2.8054, -3.2108, -3.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1206, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6666, -2.8199, -3.2149, -3.1780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5427, device='cuda:0', dtype=torch.float64)
tensor([-1.8574, -2.6608, -2.8095, -3.1829, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2919, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.6617, -2.8087, -3.1654, -3.1759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3999, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.6612, -2.8073, -3.1665, -3.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3715, device='cuda:0', dtype=torch.float64)
tensor([-1.8891, -2.6733, -2.8097, -3.1734, -3.1790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3194, device='cuda:0', dtype=torch.float64)
tensor([-1.9018, -2.6887, -2.8017, -3.1817, -3.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1990, device='cuda:0', dtype=torch.float64)
tensor([-1.9036, -2.6997, -2.7967, -3.1818, -3.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3958, device='cuda:0', dtype=torch.float64)
tensor([-1.9005, -2.7095, -2.7961, -3.1784, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3534, device='cuda:0', dtype=torch.float64)
tensor([-1.9042, -2.7197, -2.7863, -3.1606, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1272, device='cuda:0', dtype=torch.float64)
tensor([-1.9049, -2.7327, -2.7799, -3.1513, -3.1955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1820, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.7210, -2.7931, -3.1433, -3.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2426, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.7012, -2.8157, -3.1557, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3338, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.6904, -2.8175, -3.1658, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1694, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6745, -2.8195, -3.1838, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0685, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6616, -2.8136, -3.1840, -3.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3824, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.6697, -2.7894, -3.1603, -3.1896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2641, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.6933, -2.7598, -3.1208, -3.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3617, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7089, -2.7470, -3.1088, -3.2276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7019, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.6912, -2.7622, -3.0986, -3.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2070, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.6845, -2.7739, -3.1226, -3.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4184, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.6928, -2.7692, -3.1309, -3.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3059, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.7102, -2.7680, -3.1527, -3.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4541, device='cuda:0', dtype=torch.float64)
tensor([-1.8880, -2.7149, -2.7728, -3.1673, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2538, device='cuda:0', dtype=torch.float64)
tensor([-1.8851, -2.7221, -2.7720, -3.1934, -3.2022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3801, device='cuda:0', dtype=torch.float64)
tensor([-1.8865, -2.7295, -2.7549, -3.1796, -3.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1353, device='cuda:0', dtype=torch.float64)
tensor([-1.8793, -2.7356, -2.7455, -3.1969, -3.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4906, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.7158, -2.7588, -3.2141, -3.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.7078, -2.7631, -3.2208, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4172, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7103, -2.7562, -3.2085, -3.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3658, device='cuda:0', dtype=torch.float64)
tensor([-1.8881, -2.7043, -2.7582, -3.2088, -3.2079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4600, device='cuda:0', dtype=torch.float64)
tensor([-1.8902, -2.6895, -2.7665, -3.1963, -3.1850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1924, device='cuda:0', dtype=torch.float64)
tensor([-1.9060, -2.6864, -2.7656, -3.1767, -3.1812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1713, device='cuda:0', dtype=torch.float64)
tensor([-1.9214, -2.6926, -2.7581, -3.1428, -3.1998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2763, device='cuda:0', dtype=torch.float64)
tensor([-1.9133, -2.6880, -2.7607, -3.1347, -3.2068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2198, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.6713, -2.7783, -3.1533, -3.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6629, -2.8021, -3.1713, -3.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4718, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.6815, -2.8006, -3.1525, -3.1934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1380, device='cuda:0', dtype=torch.float64)
tensor([-1.8632, -2.6968, -2.8019, -3.1431, -3.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0286, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.7062, -2.8009, -3.1402, -3.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1183, device='cuda:0', dtype=torch.float64)
tensor([-1.8766, -2.7160, -2.7981, -3.1402, -3.1958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2039, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.7139, -2.7993, -3.1408, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8658, device='cuda:0', dtype=torch.float64)
tensor([-1.8873, -2.7083, -2.8054, -3.1474, -3.1998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0966, device='cuda:0', dtype=torch.float64)
tensor([-1.8843, -2.6952, -2.8114, -3.1535, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1973, device='cuda:0', dtype=torch.float64)
tensor([-1.8889, -2.6847, -2.8115, -3.1474, -3.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-1.8954, -2.6828, -2.8034, -3.1308, -3.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1245, device='cuda:0', dtype=torch.float64)
tensor([-1.8885, -2.6780, -2.7956, -3.1142, -3.2099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1532, device='cuda:0', dtype=torch.float64)
tensor([-1.8775, -2.6747, -2.7932, -3.1105, -3.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1429, device='cuda:0', dtype=torch.float64)
tensor([-1.8827, -2.6827, -2.7812, -3.1063, -3.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2268, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7017, -2.7708, -3.1090, -3.2164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2613, device='cuda:0', dtype=torch.float64)
tensor([-1.9004, -2.7170, -2.7624, -3.1277, -3.2172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1334, device='cuda:0', dtype=torch.float64)
tensor([-1.9007, -2.7256, -2.7635, -3.1503, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4583, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.7189, -2.7840, -3.1703, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4374, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.7106, -2.7945, -3.1613, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3758, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.7000, -2.7936, -3.1399, -3.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8529, device='cuda:0', dtype=torch.float64)
tensor([-1.8763, -2.6894, -2.7937, -3.1458, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3481, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6678, -2.7930, -3.1556, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3789, device='cuda:0', dtype=torch.float64)
tensor([-1.8660, -2.6624, -2.7913, -3.1750, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3655, device='cuda:0', dtype=torch.float64)
tensor([-1.8718, -2.6721, -2.7764, -3.1826, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1382, device='cuda:0', dtype=torch.float64)
tensor([-1.8870, -2.6949, -2.7512, -3.1848, -3.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3044, device='cuda:0', dtype=torch.float64)
tensor([-1.8896, -2.7124, -2.7404, -3.1906, -3.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1681, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.7222, -2.7425, -3.2043, -3.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.7394, -2.7440, -3.1988, -3.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3440, device='cuda:0', dtype=torch.float64)
tensor([-1.8933, -2.7586, -2.7487, -3.1689, -3.2236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3179, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.7401, -2.7726, -3.1564, -3.2219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1812, device='cuda:0', dtype=torch.float64)
tensor([-1.8649, -2.7061, -2.8002, -3.1624, -3.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1865, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6822, -2.8091, -3.1611, -3.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5418, device='cuda:0', dtype=torch.float64)
tensor([-1.8800, -2.6722, -2.7936, -3.1338, -3.2270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([-1.8834, -2.6552, -2.7824, -3.1246, -3.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4949, device='cuda:0', dtype=torch.float64)
tensor([-1.8721, -2.6316, -2.7861, -3.1470, -3.2266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4043, device='cuda:0', dtype=torch.float64)
tensor([-1.8564, -2.6259, -2.7973, -3.1928, -3.2212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8141, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.6613, -2.7785, -3.1839, -3.2313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5588, device='cuda:0', dtype=torch.float64)
tensor([-1.8819, -2.6917, -2.7866, -3.1712, -3.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3041, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.7160, -2.8110, -3.1743, -3.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3499, device='cuda:0', dtype=torch.float64)
tensor([-1.8896, -2.7320, -2.8303, -3.1824, -3.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7787, device='cuda:0', dtype=torch.float64)
tensor([-1.8943, -2.7484, -2.8214, -3.1540, -3.2119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4997, device='cuda:0', dtype=torch.float64)
tensor([-1.8759, -2.7421, -2.8127, -3.1728, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2021, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.7237, -2.7985, -3.1851, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2446, device='cuda:0', dtype=torch.float64)
tensor([-1.8476, -2.7094, -2.7814, -3.1710, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1986, device='cuda:0', dtype=torch.float64)
tensor([-1.8621, -2.7130, -2.7523, -3.1441, -3.1662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2053, device='cuda:0', dtype=torch.float64)
tensor([-1.8814, -2.7262, -2.7283, -3.1160, -3.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4586, device='cuda:0', dtype=torch.float64)
tensor([-1.8756, -2.7205, -2.7308, -3.1048, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5092, device='cuda:0', dtype=torch.float64)
tensor([-1.8579, -2.7076, -2.7566, -3.1193, -3.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2292, device='cuda:0', dtype=torch.float64)
tensor([-1.8573, -2.7045, -2.7693, -3.1250, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4892, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.7206, -2.7586, -3.1261, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1258, device='cuda:0', dtype=torch.float64)
tensor([-1.8950, -2.7226, -2.7541, -3.1332, -3.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4356, device='cuda:0', dtype=torch.float64)
tensor([-1.8931, -2.7084, -2.7588, -3.1590, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3722, device='cuda:0', dtype=torch.float64)
tensor([-1.8938, -2.7007, -2.7661, -3.1908, -3.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4702, device='cuda:0', dtype=torch.float64)
tensor([-1.9046, -2.7105, -2.7477, -3.1814, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5330, device='cuda:0', dtype=torch.float64)
tensor([-1.8997, -2.6997, -2.7502, -3.1940, -3.2211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5010, device='cuda:0', dtype=torch.float64)
tensor([-1.8729, -2.6709, -2.7759, -3.2115, -3.2177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5311, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6623, -2.7916, -3.2013, -3.2327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2775, device='cuda:0', dtype=torch.float64)
tensor([-1.8687, -2.6716, -2.7956, -3.1524, -3.2555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1346, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6789, -2.8069, -3.1272, -3.2648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3993, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.6877, -2.8191, -3.1355, -3.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0929, device='cuda:0', dtype=torch.float64)
tensor([-1.8550, -2.6952, -2.8219, -3.1457, -3.2387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1217, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.7087, -2.8050, -3.1333, -3.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1693, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.7189, -2.7932, -3.1232, -3.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2147, device='cuda:0', dtype=torch.float64)
tensor([-1.8784, -2.7234, -2.7985, -3.1259, -3.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1870, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.7303, -2.8049, -3.1331, -3.2079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1805, device='cuda:0', dtype=torch.float64)
tensor([-1.8614, -2.7348, -2.8163, -3.1372, -3.2068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2294, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.7347, -2.8278, -3.1460, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4004, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.7333, -2.8309, -3.1666, -3.1877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3282, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.7304, -2.8266, -3.1814, -3.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2689, device='cuda:0', dtype=torch.float64)
tensor([-1.8749, -2.7304, -2.8104, -3.1860, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1417, device='cuda:0', dtype=torch.float64)
tensor([-1.9133, -2.7312, -2.7870, -3.1903, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4818, device='cuda:0', dtype=torch.float64)
tensor([-1.9256, -2.7118, -2.7797, -3.1963, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1856, device='cuda:0', dtype=torch.float64)
tensor([-1.9160, -2.6887, -2.7822, -3.2165, -3.1531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6634, device='cuda:0', dtype=torch.float64)
tensor([-1.9136, -2.6709, -2.7777, -3.2009, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([-1.9075, -2.6700, -2.7830, -3.2153, -3.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2959, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.6761, -2.7955, -3.1919, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4367, device='cuda:0', dtype=torch.float64)
tensor([-1.8816, -2.6863, -2.8121, -3.1590, -3.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1808, device='cuda:0', dtype=torch.float64)
tensor([-1.8818, -2.7129, -2.8144, -3.1280, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3845, device='cuda:0', dtype=torch.float64)
tensor([-1.8812, -2.7282, -2.8031, -3.1017, -3.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6515, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.7102, -2.8014, -3.1207, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3132, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6779, -2.8043, -3.1647, -3.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4852, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.6667, -2.7868, -3.1729, -3.1930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6395, device='cuda:0', dtype=torch.float64)
tensor([-1.8761, -2.6789, -2.7477, -3.1509, -3.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1418, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.6893, -2.7278, -3.1458, -3.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4352, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.6854, -2.7327, -3.1654, -3.2391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1450, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.6920, -2.7380, -3.1852, -3.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7786, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.7203, -2.7427, -3.1752, -3.2443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3525, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.7304, -2.7608, -3.1427, -3.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3436, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.7230, -2.7879, -3.1114, -3.2334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2447, device='cuda:0', dtype=torch.float64)
tensor([-1.8876, -2.7146, -2.8110, -3.0982, -3.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2903, device='cuda:0', dtype=torch.float64)
tensor([-1.8992, -2.7130, -2.8180, -3.0634, -3.2170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5287, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.6925, -2.8272, -3.0865, -3.2004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4359, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.6774, -2.8385, -3.1356, -3.1807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7504, device='cuda:0', dtype=torch.float64)
tensor([-1.8819, -2.6901, -2.8291, -3.1687, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3539, device='cuda:0', dtype=torch.float64)
tensor([-1.8922, -2.7144, -2.8079, -3.2003, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5788, device='cuda:0', dtype=torch.float64)
tensor([-1.8863, -2.7219, -2.8052, -3.2277, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3277, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7140, -2.8170, -3.2484, -3.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4947, device='cuda:0', dtype=torch.float64)
tensor([-1.8686, -2.7016, -2.8123, -3.2280, -3.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2816, device='cuda:0', dtype=torch.float64)
tensor([-1.8916, -2.7063, -2.7973, -3.1826, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3431, device='cuda:0', dtype=torch.float64)
tensor([-1.9166, -2.7152, -2.7778, -3.1201, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-1.9254, -2.7276, -2.7687, -3.1207, -3.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3057, device='cuda:0', dtype=torch.float64)
tensor([-1.9368, -2.7497, -2.7493, -3.1061, -3.1996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0982, device='cuda:0', dtype=torch.float64)
tensor([-1.9283, -2.7645, -2.7413, -3.1205, -3.1998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([-1.8968, -2.7511, -2.7501, -3.1249, -3.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2894, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.7356, -2.7630, -3.1689, -3.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4610, device='cuda:0', dtype=torch.float64)
tensor([-1.8581, -2.7277, -2.7562, -3.1382, -3.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3888, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.7133, -2.7584, -3.1194, -3.2103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6050, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6773, -2.7830, -3.1376, -3.2044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2743, device='cuda:0', dtype=torch.float64)
tensor([-1.8407, -2.6472, -2.8143, -3.1688, -3.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6280, device='cuda:0', dtype=torch.float64)
tensor([-1.8797, -2.6608, -2.8014, -3.1563, -3.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4729, device='cuda:0', dtype=torch.float64)
tensor([-1.9172, -2.6808, -2.7925, -3.1533, -3.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5250, device='cuda:0', dtype=torch.float64)
tensor([-1.9407, -2.6965, -2.7863, -3.1418, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2357, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.7111, -2.7869, -3.1268, -3.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2675, device='cuda:0', dtype=torch.float64)
tensor([-1.9365, -2.7184, -2.7887, -3.1017, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5291, device='cuda:0', dtype=torch.float64)
tensor([-1.9073, -2.7083, -2.8000, -3.1059, -3.2056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6279, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6803, -2.8253, -3.1269, -3.1965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9650, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6699, -2.8394, -3.1498, -3.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2052, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6625, -2.8472, -3.1523, -3.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4645, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6828, -2.8315, -3.1404, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4091, device='cuda:0', dtype=torch.float64)
tensor([-1.8679, -2.6942, -2.8207, -3.1291, -3.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3893, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6984, -2.8076, -3.1501, -3.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3786, device='cuda:0', dtype=torch.float64)
tensor([-1.8772, -2.7106, -2.7917, -3.1703, -3.2381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7811, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.7342, -2.7677, -3.1630, -3.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5314, device='cuda:0', dtype=torch.float64)
tensor([-1.9079, -2.7387, -2.7669, -3.1932, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6317, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.7094, -2.7796, -3.2218, -3.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4400, device='cuda:0', dtype=torch.float64)
tensor([-1.8867, -2.6936, -2.7827, -3.2131, -3.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5311, device='cuda:0', dtype=torch.float64)
tensor([-1.9039, -2.7018, -2.7658, -3.1963, -3.1929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4313, device='cuda:0', dtype=torch.float64)
tensor([-1.9133, -2.7077, -2.7594, -3.1646, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8853, device='cuda:0', dtype=torch.float64)
tensor([-1.9100, -2.7235, -2.7621, -3.1430, -3.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5946, device='cuda:0', dtype=torch.float64)
tensor([-1.9145, -2.7489, -2.7549, -3.1362, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3702, device='cuda:0', dtype=torch.float64)
tensor([-1.9148, -2.7662, -2.7454, -3.1208, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4629, device='cuda:0', dtype=torch.float64)
tensor([-1.9013, -2.7600, -2.7585, -3.1372, -3.1740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6136, device='cuda:0', dtype=torch.float64)
tensor([-1.8671, -2.7285, -2.7901, -3.1864, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3566, device='cuda:0', dtype=torch.float64)
tensor([-1.8635, -2.7155, -2.8166, -3.2128, -3.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6888, device='cuda:0', dtype=torch.float64)
tensor([-1.8826, -2.7131, -2.8103, -3.1845, -3.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3490, device='cuda:0', dtype=torch.float64)
tensor([-1.8959, -2.7109, -2.8063, -3.1779, -3.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6642, device='cuda:0', dtype=torch.float64)
tensor([-1.8753, -2.6952, -2.8216, -3.1782, -3.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1501, device='cuda:0', dtype=torch.float64)
tensor([-1.8620, -2.7035, -2.8310, -3.1934, -3.2595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4970, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.7219, -2.8151, -3.1493, -3.2798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3558, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.7473, -2.7967, -3.1277, -3.3105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5596, device='cuda:0', dtype=torch.float64)
tensor([-1.8866, -2.7376, -2.7987, -3.1016, -3.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0783, device='cuda:0', dtype=torch.float64)
tensor([-1.8743, -2.7239, -2.8079, -3.1191, -3.3160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3978, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.7023, -2.8021, -3.1154, -3.3003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0961, device='cuda:0', dtype=torch.float64)
tensor([-1.8842, -2.6872, -2.7866, -3.1186, -3.2828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2819, device='cuda:0', dtype=torch.float64)
tensor([-1.8847, -2.6723, -2.7800, -3.1464, -3.2524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2123, device='cuda:0', dtype=torch.float64)
tensor([-1.8864, -2.6582, -2.7750, -3.1739, -3.2182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2047, device='cuda:0', dtype=torch.float64)
tensor([-1.8928, -2.6518, -2.7626, -3.1825, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4547, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.6683, -2.7485, -3.1690, -3.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2815, device='cuda:0', dtype=torch.float64)
tensor([-1.9277, -2.6908, -2.7465, -3.1531, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2295, device='cuda:0', dtype=torch.float64)
tensor([-1.9228, -2.7017, -2.7590, -3.1401, -3.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5544, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.6978, -2.7739, -3.1142, -3.1387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2485, device='cuda:0', dtype=torch.float64)
tensor([-1.8835, -2.6862, -2.7988, -3.1152, -3.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2002, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6845, -2.8187, -3.1200, -3.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1894, device='cuda:0', dtype=torch.float64)
tensor([-1.8690, -2.7086, -2.8142, -3.1213, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4678, device='cuda:0', dtype=torch.float64)
tensor([-1.8965, -2.7444, -2.7891, -3.1013, -3.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-1.9151, -2.7724, -2.7723, -3.0989, -3.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2409, device='cuda:0', dtype=torch.float64)
tensor([-1.9149, -2.7816, -2.7654, -3.1063, -3.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2515, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.7805, -2.7673, -3.1317, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3006, device='cuda:0', dtype=torch.float64)
tensor([-1.9055, -2.7741, -2.7680, -3.1592, -3.1887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3025, device='cuda:0', dtype=torch.float64)
tensor([-1.8979, -2.7702, -2.7760, -3.2056, -3.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7038, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.7288, -2.8023, -3.2429, -3.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1499, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6904, -2.8329, -3.2850, -3.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5295, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6774, -2.8297, -3.2361, -3.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3502, device='cuda:0', dtype=torch.float64)
tensor([-1.8667, -2.6805, -2.8210, -3.2142, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9475, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6507, -2.8399, -3.2049, -3.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1213, device='cuda:0', dtype=torch.float64)
tensor([-1.8604, -2.6556, -2.8350, -3.1722, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4529, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.6837, -2.8181, -3.1117, -3.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4871, device='cuda:0', dtype=torch.float64)
tensor([-1.9184, -2.7089, -2.8067, -3.0603, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2435, device='cuda:0', dtype=torch.float64)
tensor([-1.9242, -2.7231, -2.8046, -3.0512, -3.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4179, device='cuda:0', dtype=torch.float64)
tensor([-1.9266, -2.7301, -2.8040, -3.0569, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4249, device='cuda:0', dtype=torch.float64)
tensor([-1.9241, -2.7317, -2.7921, -3.0613, -3.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4320, device='cuda:0', dtype=torch.float64)
tensor([-1.9026, -2.7202, -2.7941, -3.1206, -3.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6043, device='cuda:0', dtype=torch.float64)
tensor([-1.8502, -2.6689, -2.8093, -3.1585, -3.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1738, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6459, -2.8199, -3.2125, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5480, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6445, -2.7850, -3.1928, -3.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3837, device='cuda:0', dtype=torch.float64)
tensor([-1.8536, -2.6519, -2.7671, -3.1724, -3.2214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-1.8663, -2.6729, -2.7475, -3.1437, -3.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-1.8705, -2.6934, -2.7472, -3.1269, -3.2014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3034, device='cuda:0', dtype=torch.float64)
tensor([-1.8804, -2.7183, -2.7507, -3.1215, -3.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3069, device='cuda:0', dtype=torch.float64)
tensor([-1.9097, -2.7455, -2.7445, -3.1047, -3.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2108, device='cuda:0', dtype=torch.float64)
tensor([-1.9269, -2.7599, -2.7548, -3.0979, -3.2068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0709, device='cuda:0', dtype=torch.float64)
tensor([-1.9379, -2.7637, -2.7652, -3.0945, -3.2130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1972, device='cuda:0', dtype=torch.float64)
tensor([-1.9265, -2.7529, -2.7797, -3.1064, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2799, device='cuda:0', dtype=torch.float64)
tensor([-1.9148, -2.7403, -2.7875, -3.1131, -3.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2026, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.7260, -2.7806, -3.1221, -3.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2803, device='cuda:0', dtype=torch.float64)
tensor([-1.9045, -2.7108, -2.7654, -3.1442, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1509, device='cuda:0', dtype=torch.float64)
tensor([-1.8903, -2.6923, -2.7502, -3.1861, -3.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3962, device='cuda:0', dtype=torch.float64)
tensor([-1.8838, -2.6871, -2.7336, -3.2214, -3.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2702, device='cuda:0', dtype=torch.float64)
tensor([-1.8920, -2.6956, -2.7184, -3.2164, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2241, device='cuda:0', dtype=torch.float64)
tensor([-1.8951, -2.7020, -2.7268, -3.2224, -3.1967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6048, device='cuda:0', dtype=torch.float64)
tensor([-1.8890, -2.6927, -2.7603, -3.2009, -3.2060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1233, device='cuda:0', dtype=torch.float64)
tensor([-1.8832, -2.6794, -2.7989, -3.1828, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3727, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6736, -2.8328, -3.1573, -3.2219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8152, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.6955, -2.8311, -3.1046, -3.2461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5700, device='cuda:0', dtype=torch.float64)
tensor([-1.9001, -2.7026, -2.8359, -3.0884, -3.2601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3209, device='cuda:0', dtype=torch.float64)
tensor([-1.8840, -2.6955, -2.8449, -3.1216, -3.2552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.6937, -2.8392, -3.1604, -3.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6028, device='cuda:0', dtype=torch.float64)
tensor([-1.8893, -2.7038, -2.8035, -3.1608, -3.2757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3841, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.7118, -2.7849, -3.2123, -3.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8084, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6949, -2.7961, -3.2196, -3.2397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-1.8571, -2.7043, -2.8003, -3.2496, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4800, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.7336, -2.7759, -3.1917, -3.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0013, device='cuda:0', dtype=torch.float64)
tensor([-1.9088, -2.7623, -2.7692, -3.1622, -3.2049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8967, device='cuda:0', dtype=torch.float64)
tensor([-1.9051, -2.7449, -2.7908, -3.1697, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9990, device='cuda:0', dtype=torch.float64)
tensor([-1.8958, -2.7261, -2.8143, -3.2050, -3.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7278, device='cuda:0', dtype=torch.float64)
tensor([-1.9075, -2.7379, -2.8066, -3.1568, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2708, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.7356, -2.8086, -3.1389, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7522, device='cuda:0', dtype=torch.float64)
tensor([-1.8732, -2.7134, -2.8291, -3.1464, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1128, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.7080, -2.8289, -3.1680, -3.1766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2550, device='cuda:0', dtype=torch.float64)
tensor([-1.8662, -2.7145, -2.8028, -3.1403, -3.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1468, device='cuda:0', dtype=torch.float64)
tensor([-1.8658, -2.7204, -2.7854, -3.1504, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4689, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.7121, -2.7797, -3.1461, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1219, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.7126, -2.7740, -3.1446, -3.2290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5435, device='cuda:0', dtype=torch.float64)
tensor([-1.8925, -2.7399, -2.7401, -3.1082, -3.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3842, device='cuda:0', dtype=torch.float64)
tensor([-1.9218, -2.7617, -2.7193, -3.0946, -3.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6433, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.7471, -2.7220, -3.0969, -3.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2483, device='cuda:0', dtype=torch.float64)
tensor([-1.8990, -2.7276, -2.7312, -3.1109, -3.2150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2026, device='cuda:0', dtype=torch.float64)
tensor([-1.8912, -2.7151, -2.7443, -3.1157, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4684, device='cuda:0', dtype=torch.float64)
tensor([-1.8879, -2.7062, -2.7581, -3.1304, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3364, device='cuda:0', dtype=torch.float64)
tensor([-1.8900, -2.7133, -2.7707, -3.1455, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1003, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.7109, -2.7895, -3.1654, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2127, device='cuda:0', dtype=torch.float64)
tensor([-1.8652, -2.6906, -2.8103, -3.1832, -3.1308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1868, device='cuda:0', dtype=torch.float64)
tensor([-1.8572, -2.6768, -2.8232, -3.1847, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3254, device='cuda:0', dtype=torch.float64)
tensor([-1.8560, -2.6679, -2.8325, -3.1848, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3809, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6438, -2.8472, -3.1870, -3.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2410, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.6372, -2.8464, -3.1818, -3.1101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2776, device='cuda:0', dtype=torch.float64)
tensor([-1.9071, -2.6484, -2.8222, -3.1392, -3.1345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-1.9390, -2.6661, -2.7981, -3.1141, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8639, device='cuda:0', dtype=torch.float64)
tensor([-1.9205, -2.6521, -2.7973, -3.1230, -3.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2392, device='cuda:0', dtype=torch.float64)
tensor([-1.9085, -2.6711, -2.8057, -3.1749, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1642, device='cuda:0', dtype=torch.float64)
tensor([-1.9121, -2.6728, -2.7878, -3.0926, -3.2071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0986, device='cuda:0', dtype=torch.float64)
tensor([-1.9122, -2.7083, -2.7873, -3.1588, -3.2608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4282, device='cuda:0', dtype=torch.float64)
tensor([-1.8666, -2.6823, -2.8201, -3.1472, -3.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5622, device='cuda:0', dtype=torch.float64)
tensor([-1.8603, -2.7149, -2.8274, -3.2123, -3.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0050, device='cuda:0', dtype=torch.float64)
tensor([-1.9151, -2.8083, -2.7732, -3.1710, -3.2885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8604, device='cuda:0', dtype=torch.float64)
tensor([-1.9084, -2.8260, -2.7578, -3.1856, -3.2713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0891, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.7978, -2.7840, -3.2852, -3.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1060, device='cuda:0', dtype=torch.float64)
tensor([-1.8543, -2.7679, -2.7786, -3.2507, -3.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7592, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.7646, -2.7690, -3.2214, -3.2194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7665, device='cuda:0', dtype=torch.float64)
tensor([-1.8723, -2.7380, -2.7923, -3.2015, -3.2110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8809, device='cuda:0', dtype=torch.float64)
tensor([-1.8547, -2.6810, -2.8252, -3.1806, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-1.8628, -2.6545, -2.8418, -3.1895, -3.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7992, device='cuda:0', dtype=torch.float64)
tensor([-1.8989, -2.6495, -2.8187, -3.1321, -3.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1941, device='cuda:0', dtype=torch.float64)
tensor([-1.9340, -2.6621, -2.7975, -3.1310, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7440, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.6579, -2.7737, -3.1363, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1214, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.6623, -2.7669, -3.1762, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4782, device='cuda:0', dtype=torch.float64)
tensor([-1.9445, -2.6827, -2.7550, -3.1871, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3989, device='cuda:0', dtype=torch.float64)
tensor([-1.9450, -2.6977, -2.7439, -3.1729, -3.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3295, device='cuda:0', dtype=torch.float64)
tensor([-1.9236, -2.7016, -2.7594, -3.1929, -3.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3768, device='cuda:0', dtype=torch.float64)
tensor([-1.8845, -2.6742, -2.8011, -3.1994, -3.1895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2462, device='cuda:0', dtype=torch.float64)
tensor([-1.8599, -2.6531, -2.8443, -3.2063, -3.1967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6508, device='cuda:0', dtype=torch.float64)
tensor([-1.8932, -2.6762, -2.8366, -3.1574, -3.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3788, device='cuda:0', dtype=torch.float64)
tensor([-1.9510, -2.7143, -2.8100, -3.1021, -3.2328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0021, device='cuda:0', dtype=torch.float64)
tensor([-1.9758, -2.7162, -2.7961, -3.0881, -3.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6150, device='cuda:0', dtype=torch.float64)
tensor([-1.9600, -2.7096, -2.8036, -3.1213, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3277, device='cuda:0', dtype=torch.float64)
tensor([-1.9320, -2.7108, -2.7970, -3.1044, -3.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4215, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.7258, -2.7905, -3.0855, -3.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1680, device='cuda:0', dtype=torch.float64)
tensor([-1.8798, -2.7521, -2.7915, -3.0953, -3.2036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4174, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.7471, -2.8155, -3.0855, -3.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2174, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.7402, -2.8264, -3.0773, -3.2053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3122, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.7267, -2.8311, -3.0856, -3.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4272, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.7225, -2.8211, -3.0662, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1863, device='cuda:0', dtype=torch.float64)
tensor([-1.8812, -2.7159, -2.8098, -3.0515, -3.2217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4156, device='cuda:0', dtype=torch.float64)
tensor([-1.8958, -2.6783, -2.8064, -3.0653, -3.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3217, device='cuda:0', dtype=torch.float64)
tensor([-1.9131, -2.6638, -2.8023, -3.0862, -3.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4260, device='cuda:0', dtype=torch.float64)
tensor([-1.9194, -2.6577, -2.7845, -3.0970, -3.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3530, device='cuda:0', dtype=torch.float64)
tensor([-1.9174, -2.6551, -2.7761, -3.1204, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3365, device='cuda:0', dtype=torch.float64)
tensor([-1.9055, -2.6573, -2.7793, -3.1579, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2869, device='cuda:0', dtype=torch.float64)
tensor([-1.8976, -2.6817, -2.7855, -3.2102, -3.2059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8603, device='cuda:0', dtype=torch.float64)
tensor([-1.9182, -2.7224, -2.7535, -3.2463, -3.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4179, device='cuda:0', dtype=torch.float64)
tensor([-1.9249, -2.7482, -2.7429, -3.2329, -3.2345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4907, device='cuda:0', dtype=torch.float64)
tensor([-1.9133, -2.7511, -2.7452, -3.2178, -3.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2899, device='cuda:0', dtype=torch.float64)
tensor([-1.8984, -2.7530, -2.7510, -3.2076, -3.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4806, device='cuda:0', dtype=torch.float64)
tensor([-1.8956, -2.7653, -2.7464, -3.1793, -3.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3578, device='cuda:0', dtype=torch.float64)
tensor([-1.9050, -2.7856, -2.7469, -3.1564, -3.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6819, device='cuda:0', dtype=torch.float64)
tensor([-1.8850, -2.7726, -2.7744, -3.1552, -3.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4071, device='cuda:0', dtype=torch.float64)
tensor([-1.8743, -2.7610, -2.8028, -3.1683, -3.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4196, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.7611, -2.8171, -3.1785, -3.2053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2331, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.7595, -2.8150, -3.1830, -3.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2526, device='cuda:0', dtype=torch.float64)
tensor([-1.8929, -2.7581, -2.8069, -3.1712, -3.2154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5359, device='cuda:0', dtype=torch.float64)
tensor([-1.8928, -2.7305, -2.8106, -3.1815, -3.2156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2290, device='cuda:0', dtype=torch.float64)
tensor([-1.9006, -2.7044, -2.8030, -3.1826, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3571, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.6943, -2.7845, -3.1701, -3.2642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4771, device='cuda:0', dtype=torch.float64)
tensor([-1.9342, -2.6775, -2.7760, -3.1562, -3.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3165, device='cuda:0', dtype=torch.float64)
tensor([-1.9508, -2.6785, -2.7695, -3.1398, -3.2543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3624, device='cuda:0', dtype=torch.float64)
tensor([-1.9533, -2.6948, -2.7728, -3.1329, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3052, device='cuda:0', dtype=torch.float64)
tensor([-1.9458, -2.7072, -2.7773, -3.1436, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([-1.9244, -2.7090, -2.7841, -3.1621, -3.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5244, device='cuda:0', dtype=torch.float64)
tensor([-1.8739, -2.6855, -2.8115, -3.1778, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3598, device='cuda:0', dtype=torch.float64)
tensor([-1.8487, -2.6796, -2.8280, -3.1876, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4583, device='cuda:0', dtype=torch.float64)
tensor([-1.8521, -2.6865, -2.8249, -3.1590, -3.1918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1626, device='cuda:0', dtype=torch.float64)
tensor([-1.8727, -2.7102, -2.8116, -3.1510, -3.2182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9049, device='cuda:0', dtype=torch.float64)
tensor([-1.8839, -2.7047, -2.8078, -3.1358, -3.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3025, device='cuda:0', dtype=torch.float64)
tensor([-1.8939, -2.7057, -2.8168, -3.1953, -3.1914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6685, device='cuda:0', dtype=torch.float64)
tensor([-1.9145, -2.7014, -2.8005, -3.1862, -3.1935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4721, device='cuda:0', dtype=torch.float64)
tensor([-1.9494, -2.7295, -2.7707, -3.1406, -3.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4318, device='cuda:0', dtype=torch.float64)
tensor([-1.9541, -2.7416, -2.7700, -3.1548, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5590, device='cuda:0', dtype=torch.float64)
tensor([-1.9280, -2.7251, -2.7893, -3.1610, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2844, device='cuda:0', dtype=torch.float64)
tensor([-1.9071, -2.7233, -2.8093, -3.1726, -3.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6967, device='cuda:0', dtype=torch.float64)
tensor([-1.9048, -2.7318, -2.7995, -3.1564, -3.1884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3499, device='cuda:0', dtype=torch.float64)
tensor([-1.8966, -2.7349, -2.8081, -3.1873, -3.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5359, device='cuda:0', dtype=torch.float64)
tensor([-1.8688, -2.7150, -2.8380, -3.1829, -3.1873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1075, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.7040, -2.8697, -3.2475, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0447, device='cuda:0', dtype=torch.float64)
tensor([-1.8624, -2.7064, -2.8629, -3.1701, -3.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3580, device='cuda:0', dtype=torch.float64)
tensor([-1.8854, -2.7158, -2.8525, -3.1534, -3.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6992, device='cuda:0', dtype=torch.float64)
tensor([-1.8715, -2.6936, -2.8565, -3.1491, -3.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2225, device='cuda:0', dtype=torch.float64)
tensor([-1.8656, -2.6886, -2.8646, -3.1891, -3.2510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6630, device='cuda:0', dtype=torch.float64)
tensor([-1.8831, -2.6937, -2.8492, -3.1835, -3.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2572, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.7115, -2.8199, -3.1909, -3.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6513, device='cuda:0', dtype=torch.float64)
tensor([-1.9344, -2.7262, -2.7900, -3.1670, -3.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5215, device='cuda:0', dtype=torch.float64)
tensor([-1.9401, -2.7249, -2.7779, -3.1610, -3.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3192, device='cuda:0', dtype=torch.float64)
tensor([-1.9306, -2.7085, -2.7872, -3.1845, -3.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4517, device='cuda:0', dtype=torch.float64)
tensor([-1.9333, -2.7006, -2.7912, -3.1760, -3.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3467, device='cuda:0', dtype=torch.float64)
tensor([-1.9358, -2.6879, -2.7991, -3.1683, -3.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2567, device='cuda:0', dtype=torch.float64)
tensor([-1.9270, -2.6718, -2.8078, -3.1696, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5995, device='cuda:0', dtype=torch.float64)
tensor([-1.9191, -2.6470, -2.8199, -3.1724, -3.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5087, device='cuda:0', dtype=torch.float64)
tensor([-1.9203, -2.6497, -2.8215, -3.1722, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5012, device='cuda:0', dtype=torch.float64)
tensor([-1.9409, -2.6888, -2.8074, -3.1427, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3794, device='cuda:0', dtype=torch.float64)
tensor([-1.9560, -2.7215, -2.8049, -3.1301, -3.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6033, device='cuda:0', dtype=torch.float64)
tensor([-1.9350, -2.7257, -2.8181, -3.1479, -3.1914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3126, device='cuda:0', dtype=torch.float64)
tensor([-1.9044, -2.7207, -2.8295, -3.1704, -3.1763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1654, device='cuda:0', dtype=torch.float64)
tensor([-1.8861, -2.7249, -2.8278, -3.1679, -3.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9572, device='cuda:0', dtype=torch.float64)
tensor([-1.8828, -2.7342, -2.8107, -3.1741, -3.1918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3172, device='cuda:0', dtype=torch.float64)
tensor([-1.8781, -2.7296, -2.7988, -3.1862, -3.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2295, device='cuda:0', dtype=torch.float64)
tensor([-1.8765, -2.7332, -2.7834, -3.2018, -3.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2181, device='cuda:0', dtype=torch.float64)
tensor([-1.8810, -2.7386, -2.7642, -3.2077, -3.2035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6983, device='cuda:0', dtype=torch.float64)
tensor([-1.8795, -2.7346, -2.7616, -3.1998, -3.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8813, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.7212, -2.7773, -3.2043, -3.1875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5288, device='cuda:0', dtype=torch.float64)
tensor([-1.8770, -2.7137, -2.7722, -3.1870, -3.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2970, device='cuda:0', dtype=torch.float64)
tensor([-1.8885, -2.7191, -2.7667, -3.1730, -3.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4445, device='cuda:0', dtype=torch.float64)
tensor([-1.8937, -2.7122, -2.7684, -3.1674, -3.1949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3202, device='cuda:0', dtype=torch.float64)
tensor([-1.9033, -2.7052, -2.7716, -3.1613, -3.2014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1952, device='cuda:0', dtype=torch.float64)
tensor([-1.9216, -2.6984, -2.7767, -3.1635, -3.2053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3367, device='cuda:0', dtype=torch.float64)
tensor([-1.9424, -2.7048, -2.7732, -3.1683, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3820, device='cuda:0', dtype=torch.float64)
tensor([-1.9629, -2.7277, -2.7695, -3.1785, -3.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([-1.9621, -2.7321, -2.7801, -3.2057, -3.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4968, device='cuda:0', dtype=torch.float64)
tensor([-1.9376, -2.7022, -2.8051, -3.2678, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5667, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.6985, -2.8180, -3.2572, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2982, device='cuda:0', dtype=torch.float64)
tensor([-1.8973, -2.7092, -2.8264, -3.2305, -3.1808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4610, device='cuda:0', dtype=torch.float64)
tensor([-1.8941, -2.7396, -2.8177, -3.1866, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6879, device='cuda:0', dtype=torch.float64)
tensor([-1.8863, -2.7636, -2.8139, -3.1234, -3.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6129, device='cuda:0', dtype=torch.float64)
tensor([-1.8639, -2.7561, -2.8185, -3.0987, -3.2011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2023, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.7444, -2.8207, -3.1144, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4312, device='cuda:0', dtype=torch.float64)
tensor([-1.8492, -2.7490, -2.8019, -3.1101, -3.2078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5059, device='cuda:0', dtype=torch.float64)
tensor([-1.8693, -2.7601, -2.7829, -3.2656, -3.2329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4728, device='cuda:0', dtype=torch.float64)
tensor([-1.8619, -2.7252, -2.7897, -3.0960, -3.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7875, device='cuda:0', dtype=torch.float64)
tensor([-1.8905, -2.7304, -2.7751, -3.0918, -3.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5793, device='cuda:0', dtype=torch.float64)
tensor([-1.9263, -2.7451, -2.7469, -3.0807, -3.2609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6801, device='cuda:0', dtype=torch.float64)
tensor([-1.9334, -2.7465, -2.7503, -3.1278, -3.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1058, device='cuda:0', dtype=torch.float64)
tensor([-1.9098, -2.7072, -2.7816, -3.1901, -3.2198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3685, device='cuda:0', dtype=torch.float64)
tensor([-1.8967, -2.6833, -2.8244, -3.2513, -3.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5821, device='cuda:0', dtype=torch.float64)
tensor([-1.9258, -2.7041, -2.8202, -3.2110, -3.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2351, device='cuda:0', dtype=torch.float64)
tensor([-1.9361, -2.7104, -2.8308, -3.1971, -3.2648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1519, device='cuda:0', dtype=torch.float64)
tensor([-1.9162, -2.6632, -2.8530, -3.2327, -3.2284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5368, device='cuda:0', dtype=torch.float64)
tensor([-1.9078, -2.6439, -2.8666, -3.2189, -3.2328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8047, device='cuda:0', dtype=torch.float64)
tensor([-1.9197, -2.6426, -2.8455, -3.1478, -3.2451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3384, device='cuda:0', dtype=torch.float64)
tensor([-1.9428, -2.6739, -2.8283, -3.1578, -3.2585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7500, device='cuda:0', dtype=torch.float64)
tensor([-1.9428, -2.6862, -2.8224, -3.1776, -3.2348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5452, device='cuda:0', dtype=torch.float64)
tensor([-1.9210, -2.7082, -2.8211, -3.2135, -3.2215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5163, device='cuda:0', dtype=torch.float64)
tensor([-1.9102, -2.7460, -2.8136, -3.2108, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4799, device='cuda:0', dtype=torch.float64)
tensor([-1.8872, -2.7612, -2.8213, -3.1927, -3.2053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6129, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.7490, -2.8475, -3.1740, -3.1677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2425, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7588, -2.8600, -3.1521, -3.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5685, device='cuda:0', dtype=torch.float64)
tensor([-1.8720, -2.7917, -2.8361, -3.0908, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7376, device='cuda:0', dtype=torch.float64)
tensor([-1.9211, -2.8239, -2.8035, -3.0452, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4136, device='cuda:0', dtype=torch.float64)
tensor([-1.9492, -2.8281, -2.7836, -3.0188, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3513, device='cuda:0', dtype=torch.float64)
tensor([-1.9572, -2.8073, -2.7845, -3.0491, -3.1374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5650, device='cuda:0', dtype=torch.float64)
tensor([-1.9746, -2.7749, -2.7714, -3.0672, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4312, device='cuda:0', dtype=torch.float64)
tensor([-1.9823, -2.7424, -2.7685, -3.1093, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2263, device='cuda:0', dtype=torch.float64)
tensor([-1.9767, -2.7001, -2.7807, -3.1692, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4806, device='cuda:0', dtype=torch.float64)
tensor([-1.9517, -2.6443, -2.8156, -3.1985, -3.1523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1588, device='cuda:0', dtype=torch.float64)
tensor([-1.9257, -2.6033, -2.8490, -3.2039, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3290, device='cuda:0', dtype=torch.float64)
tensor([-1.8931, -2.5763, -2.8693, -3.2188, -3.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2958, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.5757, -2.8716, -3.2283, -3.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0764, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.5914, -2.8623, -3.2418, -3.2112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1953, device='cuda:0', dtype=torch.float64)
tensor([-1.8497, -2.6244, -2.8380, -3.2417, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5085, device='cuda:0', dtype=torch.float64)
tensor([-1.8806, -2.6884, -2.7925, -3.2242, -3.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2657, device='cuda:0', dtype=torch.float64)
tensor([-1.9079, -2.7426, -2.7614, -3.1958, -3.2687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5347, device='cuda:0', dtype=torch.float64)
tensor([-1.9289, -2.7720, -2.7334, -3.1707, -3.2727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2044, device='cuda:0', dtype=torch.float64)
tensor([-1.9419, -2.7849, -2.7189, -3.1467, -3.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1334, device='cuda:0', dtype=torch.float64)
tensor([-1.9501, -2.7850, -2.7223, -3.1367, -3.2673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0645, device='cuda:0', dtype=torch.float64)
tensor([-1.9502, -2.7742, -2.7354, -3.1373, -3.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6374, device='cuda:0', dtype=torch.float64)
tensor([-1.9244, -2.7529, -2.7650, -3.1532, -3.2336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1778, device='cuda:0', dtype=torch.float64)
tensor([-1.9063, -2.7319, -2.8025, -3.1728, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2871, device='cuda:0', dtype=torch.float64)
tensor([-1.9047, -2.7243, -2.8229, -3.1631, -3.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5150, device='cuda:0', dtype=torch.float64)
tensor([-1.9114, -2.7191, -2.8286, -3.1358, -3.2177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4294, device='cuda:0', dtype=torch.float64)
tensor([-1.9087, -2.7024, -2.8399, -3.1145, -3.2187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-1.9153, -2.7027, -2.8363, -3.0917, -3.2166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3168, device='cuda:0', dtype=torch.float64)
tensor([-1.9215, -2.7189, -2.8254, -3.0667, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3882, device='cuda:0', dtype=torch.float64)
tensor([-1.9244, -2.7505, -2.8148, -3.0516, -3.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3583, device='cuda:0', dtype=torch.float64)
tensor([-1.9024, -2.7543, -2.8211, -3.0823, -3.1944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5200, device='cuda:0', dtype=torch.float64)
tensor([-1.8643, -2.7293, -2.8411, -3.1377, -3.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6175, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.7110, -2.8492, -3.2134, -3.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6173, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.7016, -2.8239, -3.2315, -3.1461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1450, device='cuda:0', dtype=torch.float64)
tensor([-1.8935, -2.6995, -2.7953, -3.2404, -3.1683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7088, device='cuda:0', dtype=torch.float64)
tensor([-1.9091, -2.6846, -2.7868, -3.2244, -3.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7574, device='cuda:0', dtype=torch.float64)
tensor([-1.8964, -2.6622, -2.8335, -3.2458, -3.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7314, device='cuda:0', dtype=torch.float64)
tensor([-1.9074, -2.6570, -2.8488, -3.2073, -3.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4394, device='cuda:0', dtype=torch.float64)
tensor([-1.9330, -2.6735, -2.8391, -3.1774, -3.2069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4943, device='cuda:0', dtype=torch.float64)
tensor([-1.9584, -2.7076, -2.8370, -3.1956, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3056, device='cuda:0', dtype=torch.float64)
tensor([-1.9399, -2.6949, -2.8512, -3.2304, -3.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6214, device='cuda:0', dtype=torch.float64)
tensor([-1.9443, -2.7255, -2.8454, -3.3016, -3.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3693, device='cuda:0', dtype=torch.float64)
tensor([-1.9695, -2.7358, -2.7981, -3.2430, -3.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5667, device='cuda:0', dtype=torch.float64)
tensor([-1.9799, -2.7666, -2.7902, -3.2668, -3.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5004, device='cuda:0', dtype=torch.float64)
tensor([-1.9227, -2.7186, -2.7982, -3.2452, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5318, device='cuda:0', dtype=torch.float64)
tensor([-1.9082, -2.7693, -2.8301, -3.3188, -3.1806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1408, device='cuda:0', dtype=torch.float64)
tensor([-1.9271, -2.7265, -2.7817, -3.1510, -3.2255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6669, device='cuda:0', dtype=torch.float64)
tensor([-1.9380, -2.7475, -2.7892, -3.2518, -3.2878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1905, device='cuda:0', dtype=torch.float64)
tensor([-1.8829, -2.9416, -2.8960, -3.3963, -3.2890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3713, device='cuda:0', dtype=torch.float64)
tensor([-1.9180, -2.7040, -2.8106, -3.0439, -3.3230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0299, device='cuda:0', dtype=torch.float64)
tensor([-1.9558, -2.8645, -2.8993, -3.6396, -3.4991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.0568, device='cuda:0', dtype=torch.float64)
tensor([-16.9464, -11.6330,  -4.7495, -21.2028, -15.4964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(72.2117, device='cuda:0', dtype=torch.float64)
tensor([ -454.7953,  -931.7401,  -717.0229, -1890.9128,  -618.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(470.4105, device='cuda:0', dtype=torch.float64)
tensor([-604.2701, -749.5217, -397.3251, -511.4051, -709.3834],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(395.7928, device='cuda:0', dtype=torch.float64)
tensor([-479.0139, -599.2255, -392.3776, -343.9732, -447.1633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(288.3950, device='cuda:0', dtype=torch.float64)
tensor([-113.5788, -110.2785, -130.9210,  -88.9763, -174.4459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(72.1328, device='cuda:0', dtype=torch.float64)
tensor([-128.5904, -111.1030,  -94.4960, -133.1228, -277.6881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(78.3511, device='cuda:0', dtype=torch.float64)
tensor([-106.7219, -160.2342, -108.8157, -164.9364, -337.7496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(93.6013, device='cuda:0', dtype=torch.float64)
tensor([ -84.3397, -166.4030, -107.8688, -174.1358, -315.1718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(83.4814, device='cuda:0', dtype=torch.float64)
tensor([ -77.7260, -153.1173,  -91.4638, -161.8716, -245.9338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(67.2430, device='cuda:0', dtype=torch.float64)
tensor([ -72.7923, -131.3024,  -69.5935, -139.9314, -175.2593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(52.8332, device='cuda:0', dtype=torch.float64)
tensor([ -55.7740,  -97.5526,  -54.7167, -115.1182, -129.7391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(40.5470, device='cuda:0', dtype=torch.float64)
tensor([ -38.9656,  -66.1553,  -42.0809,  -90.7479, -104.0106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(31.6422, device='cuda:0', dtype=torch.float64)
tensor([-35.1679, -51.8059, -35.3850, -68.8912, -85.8334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.6505, device='cuda:0', dtype=torch.float64)
tensor([-36.1178, -45.3768, -32.8722, -53.7206, -74.3749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.1320, device='cuda:0', dtype=torch.float64)
tensor([-35.0819, -41.3663, -34.2068, -47.3601, -69.2586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.8598, device='cuda:0', dtype=torch.float64)
tensor([-29.9840, -35.4172, -37.0257, -44.5729, -66.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.0566, device='cuda:0', dtype=torch.float64)
tensor([-23.7544, -30.8137, -39.8472, -44.3878, -63.4955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.6600, device='cuda:0', dtype=torch.float64)
tensor([-18.7504, -29.5246, -41.5111, -44.9420, -58.8643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.5869, device='cuda:0', dtype=torch.float64)
tensor([-15.0070, -30.5988, -41.9863, -45.2284, -54.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.7890, device='cuda:0', dtype=torch.float64)
tensor([-12.0843, -32.5535, -41.4727, -44.9000, -51.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.2407, device='cuda:0', dtype=torch.float64)
tensor([ -9.9620, -33.6030, -39.3609, -43.8903, -48.0891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.5475, device='cuda:0', dtype=torch.float64)
tensor([ -8.4555, -32.9775, -36.0632, -41.9925, -44.5021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.7434, device='cuda:0', dtype=torch.float64)
tensor([ -7.3338, -30.8709, -32.0091, -39.4163, -41.0113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.2033, device='cuda:0', dtype=torch.float64)
tensor([ -6.5836, -27.9836, -27.6078, -36.3969, -37.9726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.9907, device='cuda:0', dtype=torch.float64)
tensor([ -6.2404, -25.2583, -23.2677, -33.0885, -35.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.6161, device='cuda:0', dtype=torch.float64)
tensor([ -6.3794, -23.5381, -19.2671, -29.7778, -32.4544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.2029, device='cuda:0', dtype=torch.float64)
tensor([ -6.7861, -22.7434, -15.7704, -26.7636, -29.6651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.4409, device='cuda:0', dtype=torch.float64)
tensor([ -7.1171, -22.3221, -12.8678, -24.3481, -26.9805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.7021, device='cuda:0', dtype=torch.float64)
tensor([ -7.3515, -21.8162, -10.7622, -22.7166, -24.6135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.5443, device='cuda:0', dtype=torch.float64)
tensor([ -7.4342, -21.0646,  -9.5242, -21.8245, -22.6251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.3325, device='cuda:0', dtype=torch.float64)
tensor([ -7.2950, -19.9761,  -8.8846, -21.3046, -21.0038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.9909, device='cuda:0', dtype=torch.float64)
tensor([ -6.8885, -18.5409,  -8.4733, -20.8322, -19.6805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5093, device='cuda:0', dtype=torch.float64)
tensor([ -6.3161, -16.8330,  -8.1203, -20.2389, -18.5568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.0565, device='cuda:0', dtype=torch.float64)
tensor([ -5.7479, -15.0234,  -7.7891, -19.5682, -17.5452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.4526, device='cuda:0', dtype=torch.float64)
tensor([ -5.3047, -13.3220,  -7.4975, -18.9067, -16.5864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.8060, device='cuda:0', dtype=torch.float64)
tensor([ -5.0018, -11.9490,  -7.2893, -18.3522, -15.6983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.4590, device='cuda:0', dtype=torch.float64)
tensor([ -4.8245, -11.0321,  -7.1984, -17.8839, -14.9041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0308, device='cuda:0', dtype=torch.float64)
tensor([ -4.7402, -10.5415,  -7.2260, -17.4562, -14.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8362, device='cuda:0', dtype=torch.float64)
tensor([ -4.7310, -10.3269,  -7.3531, -17.0173, -13.5466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5776, device='cuda:0', dtype=torch.float64)
tensor([ -4.7594, -10.2790,  -7.5465, -16.5441, -13.0240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3769, device='cuda:0', dtype=torch.float64)
tensor([ -4.8118, -10.3185,  -7.7529, -15.9933, -12.6054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1183, device='cuda:0', dtype=torch.float64)
tensor([ -4.8726, -10.4142,  -7.9440, -15.3446, -12.2741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9037, device='cuda:0', dtype=torch.float64)
tensor([ -4.9203, -10.5480,  -8.0831, -14.6436, -12.0080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6575, device='cuda:0', dtype=torch.float64)
tensor([ -4.9505, -10.7032,  -8.1501, -13.9259, -11.7795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4270, device='cuda:0', dtype=torch.float64)
tensor([ -4.9716, -10.8639,  -8.1417, -13.2326, -11.5725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1834, device='cuda:0', dtype=torch.float64)
tensor([ -4.9807, -11.0329,  -8.0756, -12.5579, -11.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1624, device='cuda:0', dtype=torch.float64)
tensor([ -4.9795, -11.1621,  -7.9632, -11.9361, -11.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9788, device='cuda:0', dtype=torch.float64)
tensor([ -4.9659, -11.2492,  -7.8238, -11.3660, -10.8929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9273, device='cuda:0', dtype=torch.float64)
tensor([ -4.9421, -11.2935,  -7.6543, -10.8739, -10.6330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7654, device='cuda:0', dtype=torch.float64)
tensor([ -4.9080, -11.2662,  -7.4774, -10.4580, -10.3675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7103, device='cuda:0', dtype=torch.float64)
tensor([ -4.8614, -11.1739,  -7.2965, -10.1085, -10.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6228, device='cuda:0', dtype=torch.float64)
tensor([ -4.8003, -11.0166,  -7.1320,  -9.8332,  -9.8720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4846, device='cuda:0', dtype=torch.float64)
tensor([ -4.7273, -10.8164,  -6.9935,  -9.6271,  -9.6698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2959, device='cuda:0', dtype=torch.float64)
tensor([ -4.6507, -10.5866,  -6.8659,  -9.4807,  -9.5034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2555, device='cuda:0', dtype=torch.float64)
tensor([ -4.5712, -10.3376,  -6.7476,  -9.3834,  -9.3751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1417, device='cuda:0', dtype=torch.float64)
tensor([ -4.4934, -10.0956,  -6.6374,  -9.3272,  -9.2783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0729, device='cuda:0', dtype=torch.float64)
tensor([-4.4239, -9.8690, -6.5346, -9.2901, -9.2124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0690, device='cuda:0', dtype=torch.float64)
tensor([-4.3623, -9.6505, -6.4406, -9.2714, -9.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7353, device='cuda:0', dtype=torch.float64)
tensor([-4.3083, -9.4570, -6.3493, -9.2637, -9.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7527, device='cuda:0', dtype=torch.float64)
tensor([-4.2548, -9.2836, -6.2644, -9.2578, -9.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6386, device='cuda:0', dtype=torch.float64)
tensor([-4.2018, -9.1332, -6.1847, -9.2423, -9.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7011, device='cuda:0', dtype=torch.float64)
tensor([-4.1547, -9.0003, -6.1161, -9.2201, -9.2394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6355, device='cuda:0', dtype=torch.float64)
tensor([-4.1143, -8.8837, -6.0588, -9.1845, -9.2782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5902, device='cuda:0', dtype=torch.float64)
tensor([-4.0777, -8.7908, -6.0149, -9.1347, -9.3168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3748, device='cuda:0', dtype=torch.float64)
tensor([-4.0475, -8.7046, -5.9885, -9.0786, -9.3452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3472, device='cuda:0', dtype=torch.float64)
tensor([-4.0214, -8.6255, -5.9728, -9.0186, -9.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2601, device='cuda:0', dtype=torch.float64)
tensor([-4.0011, -8.5546, -5.9728, -8.9522, -9.3512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3372, device='cuda:0', dtype=torch.float64)
tensor([-3.9860, -8.4920, -5.9820, -8.8848, -9.3262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2862, device='cuda:0', dtype=torch.float64)
tensor([-3.9737, -8.4297, -6.0008, -8.8205, -9.2785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2752, device='cuda:0', dtype=torch.float64)
tensor([-3.9667, -8.3660, -6.0178, -8.7527, -9.2146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2502, device='cuda:0', dtype=torch.float64)
tensor([-3.9619, -8.2907, -6.0408, -8.6896, -9.1348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2247, device='cuda:0', dtype=torch.float64)
tensor([-3.9553, -8.2042, -6.0762, -8.6303, -9.0491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2588, device='cuda:0', dtype=torch.float64)
tensor([-3.9450, -8.1142, -6.1064, -8.5690, -8.9621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2367, device='cuda:0', dtype=torch.float64)
tensor([-3.9345, -8.0265, -6.1279, -8.5160, -8.8774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0560, device='cuda:0', dtype=torch.float64)
tensor([-3.9239, -7.9423, -6.1316, -8.4619, -8.8028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1620, device='cuda:0', dtype=torch.float64)
tensor([-3.9052, -7.8630, -6.1242, -8.4051, -8.7348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0606, device='cuda:0', dtype=torch.float64)
tensor([-3.8852, -7.7918, -6.1088, -8.3473, -8.6735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0638, device='cuda:0', dtype=torch.float64)
tensor([-3.8665, -7.7286, -6.0835, -8.2874, -8.6212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9276, device='cuda:0', dtype=torch.float64)
tensor([-3.8494, -7.6760, -6.0384, -8.2270, -8.5732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9303, device='cuda:0', dtype=torch.float64)
tensor([-3.8321, -7.6376, -5.9861, -8.1654, -8.5347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9407, device='cuda:0', dtype=torch.float64)
tensor([-3.8144, -7.6110, -5.9313, -8.1104, -8.4965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8416, device='cuda:0', dtype=torch.float64)
tensor([-3.7912, -7.5884, -5.8810, -8.0686, -8.4596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8882, device='cuda:0', dtype=torch.float64)
tensor([-3.7680, -7.5632, -5.8325, -8.0354, -8.4286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8226, device='cuda:0', dtype=torch.float64)
tensor([-3.7479, -7.5380, -5.7891, -8.0100, -8.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7816, device='cuda:0', dtype=torch.float64)
tensor([-3.7329, -7.5123, -5.7489, -7.9923, -8.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8434, device='cuda:0', dtype=torch.float64)
tensor([-3.7199, -7.4833, -5.7168, -7.9844, -8.3329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7766, device='cuda:0', dtype=torch.float64)
tensor([-3.7076, -7.4510, -5.6841, -7.9804, -8.3077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7610, device='cuda:0', dtype=torch.float64)
tensor([-3.6937, -7.4091, -5.6582, -7.9790, -8.2816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6978, device='cuda:0', dtype=torch.float64)
tensor([-3.6784, -7.3713, -5.6354, -7.9807, -8.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6961, device='cuda:0', dtype=torch.float64)
tensor([-3.6638, -7.3419, -5.6142, -7.9731, -8.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7601, device='cuda:0', dtype=torch.float64)
tensor([-3.6521, -7.3153, -5.6013, -7.9648, -8.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8742, device='cuda:0', dtype=torch.float64)
tensor([-3.6417, -7.2849, -5.5876, -7.9543, -8.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6723, device='cuda:0', dtype=torch.float64)
tensor([-3.6348, -7.2540, -5.5769, -7.9357, -8.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6809, device='cuda:0', dtype=torch.float64)
tensor([-3.6326, -7.2259, -5.5672, -7.9035, -8.0718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6631, device='cuda:0', dtype=torch.float64)
tensor([-3.6287, -7.1968, -5.5577, -7.8593, -8.0306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5967, device='cuda:0', dtype=torch.float64)
tensor([-3.6231, -7.1702, -5.5502, -7.8097, -7.9826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7473, device='cuda:0', dtype=torch.float64)
tensor([-3.6166, -7.1495, -5.5394, -7.7525, -7.9365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6597, device='cuda:0', dtype=torch.float64)
tensor([-3.6072, -7.1219, -5.5300, -7.7011, -7.8943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6457, device='cuda:0', dtype=torch.float64)
tensor([-3.5947, -7.0840, -5.5262, -7.6539, -7.8507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7178, device='cuda:0', dtype=torch.float64)
tensor([-3.5796, -7.0355, -5.5229, -7.6070, -7.8055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6045, device='cuda:0', dtype=torch.float64)
tensor([-3.5655, -6.9862, -5.5139, -7.5627, -7.7618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5898, device='cuda:0', dtype=torch.float64)
tensor([-3.5498, -6.9367, -5.5065, -7.5240, -7.7186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6291, device='cuda:0', dtype=torch.float64)
tensor([-3.5365, -6.8920, -5.4997, -7.4838, -7.6735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6429, device='cuda:0', dtype=torch.float64)
tensor([-3.5263, -6.8525, -5.4972, -7.4468, -7.6297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5799, device='cuda:0', dtype=torch.float64)
tensor([-3.5167, -6.8107, -5.4987, -7.4145, -7.5924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5869, device='cuda:0', dtype=torch.float64)
tensor([-3.5059, -6.7760, -5.4975, -7.3783, -7.5605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5508, device='cuda:0', dtype=torch.float64)
tensor([-3.4980, -6.7423, -5.4962, -7.3429, -7.5283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6097, device='cuda:0', dtype=torch.float64)
tensor([-3.4907, -6.7152, -5.4895, -7.3044, -7.4974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6121, device='cuda:0', dtype=torch.float64)
tensor([-3.4844, -6.6926, -5.4776, -7.2606, -7.4717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5946, device='cuda:0', dtype=torch.float64)
tensor([-3.4774, -6.6713, -5.4719, -7.2216, -7.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6263, device='cuda:0', dtype=torch.float64)
tensor([-3.4698, -6.6462, -5.4761, -7.1991, -7.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4976, device='cuda:0', dtype=torch.float64)
tensor([-3.4586, -6.6253, -5.4827, -7.1768, -7.4111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5062, device='cuda:0', dtype=torch.float64)
tensor([-3.4445, -6.6103, -5.4909, -7.1659, -7.3947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4824, device='cuda:0', dtype=torch.float64)
tensor([-3.4311, -6.5948, -5.4929, -7.1505, -7.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5594, device='cuda:0', dtype=torch.float64)
tensor([-3.4182, -6.5808, -5.4929, -7.1397, -7.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4849, device='cuda:0', dtype=torch.float64)
tensor([-3.4046, -6.5729, -5.4898, -7.1284, -7.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4789, device='cuda:0', dtype=torch.float64)
tensor([-3.3931, -6.5629, -5.4911, -7.1172, -7.3247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5215, device='cuda:0', dtype=torch.float64)
tensor([-3.3812, -6.5502, -5.4875, -7.1108, -7.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4521, device='cuda:0', dtype=torch.float64)
tensor([-3.3691, -6.5387, -5.4752, -7.0932, -7.2875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4684, device='cuda:0', dtype=torch.float64)
tensor([-3.3589, -6.5220, -5.4599, -7.0689, -7.2715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3834, device='cuda:0', dtype=torch.float64)
tensor([-3.3489, -6.5039, -5.4438, -7.0435, -7.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4235, device='cuda:0', dtype=torch.float64)
tensor([-3.3440, -6.4817, -5.4226, -7.0138, -7.2381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4305, device='cuda:0', dtype=torch.float64)
tensor([-3.3365, -6.4593, -5.4043, -6.9897, -7.2183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5539, device='cuda:0', dtype=torch.float64)
tensor([-3.3314, -6.4267, -5.3894, -6.9691, -7.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4657, device='cuda:0', dtype=torch.float64)
tensor([-3.3254, -6.3984, -5.3735, -6.9440, -7.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4225, device='cuda:0', dtype=torch.float64)
tensor([-3.3194, -6.3681, -5.3583, -6.9185, -7.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4235, device='cuda:0', dtype=torch.float64)
tensor([-3.3154, -6.3384, -5.3418, -6.8948, -7.1424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4246, device='cuda:0', dtype=torch.float64)
tensor([-3.3129, -6.3084, -5.3252, -6.8703, -7.1234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4976, device='cuda:0', dtype=torch.float64)
tensor([-3.3107, -6.2819, -5.3112, -6.8478, -7.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4988, device='cuda:0', dtype=torch.float64)
tensor([-3.3064, -6.2518, -5.3023, -6.8307, -7.0737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3171, device='cuda:0', dtype=torch.float64)
tensor([-3.3012, -6.2227, -5.2931, -6.8147, -7.0490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5075, device='cuda:0', dtype=torch.float64)
tensor([-3.2955, -6.1953, -5.2842, -6.7964, -7.0249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5117, device='cuda:0', dtype=torch.float64)
tensor([-3.2910, -6.1679, -5.2724, -6.7803, -7.0002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6003, device='cuda:0', dtype=torch.float64)
tensor([-3.2914, -6.1408, -5.2664, -6.7640, -6.9806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4572, device='cuda:0', dtype=torch.float64)
tensor([-3.2942, -6.1180, -5.2575, -6.7373, -6.9622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4852, device='cuda:0', dtype=torch.float64)
tensor([-3.2926, -6.1001, -5.2492, -6.7087, -6.9471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4237, device='cuda:0', dtype=torch.float64)
tensor([-3.2933, -6.0787, -5.2418, -6.6828, -6.9335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4219, device='cuda:0', dtype=torch.float64)
tensor([-3.2959, -6.0574, -5.2313, -6.6578, -6.9225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2586, device='cuda:0', dtype=torch.float64)
tensor([-3.2968, -6.0460, -5.2149, -6.6280, -6.9141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4756, device='cuda:0', dtype=torch.float64)
tensor([-3.2998, -6.0414, -5.2011, -6.5964, -6.9065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3676, device='cuda:0', dtype=torch.float64)
tensor([-3.3017, -6.0382, -5.1876, -6.5657, -6.8955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2788, device='cuda:0', dtype=torch.float64)
tensor([-3.2989, -6.0284, -5.1779, -6.5446, -6.8813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2883, device='cuda:0', dtype=torch.float64)
tensor([-3.2958, -6.0192, -5.1690, -6.5246, -6.8652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3170, device='cuda:0', dtype=torch.float64)
tensor([-3.2915, -6.0081, -5.1604, -6.5089, -6.8490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3270, device='cuda:0', dtype=torch.float64)
tensor([-3.2880, -5.9906, -5.1533, -6.5016, -6.8326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4094, device='cuda:0', dtype=torch.float64)
tensor([-3.2797, -5.9809, -5.1483, -6.4988, -6.8150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([-3.2737, -5.9677, -5.1427, -6.4960, -6.7963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3734, device='cuda:0', dtype=torch.float64)
tensor([-3.2666, -5.9465, -5.1361, -6.5003, -6.7747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2222, device='cuda:0', dtype=torch.float64)
tensor([-3.2567, -5.9226, -5.1281, -6.5034, -6.7500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4842, device='cuda:0', dtype=torch.float64)
tensor([-3.2485, -5.9006, -5.1215, -6.5039, -6.7306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3500, device='cuda:0', dtype=torch.float64)
tensor([-3.2463, -5.8813, -5.1147, -6.4957, -6.7118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-3.2479, -5.8621, -5.1068, -6.4889, -6.6938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3893, device='cuda:0', dtype=torch.float64)
tensor([-3.2512, -5.8437, -5.0989, -6.4849, -6.6798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3801, device='cuda:0', dtype=torch.float64)
tensor([-3.2543, -5.8317, -5.0920, -6.4704, -6.6690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3027, device='cuda:0', dtype=torch.float64)
tensor([-3.2569, -5.8153, -5.0900, -6.4552, -6.6576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2734, device='cuda:0', dtype=torch.float64)
tensor([-3.2600, -5.7996, -5.0860, -6.4425, -6.6461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3420, device='cuda:0', dtype=torch.float64)
tensor([-3.2601, -5.7937, -5.0849, -6.4299, -6.6340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3299, device='cuda:0', dtype=torch.float64)
tensor([-3.2537, -5.7933, -5.0821, -6.4139, -6.6209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-3.2463, -5.7887, -5.0804, -6.4006, -6.6041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3088, device='cuda:0', dtype=torch.float64)
tensor([-3.2343, -5.7790, -5.0780, -6.3930, -6.5873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2056, device='cuda:0', dtype=torch.float64)
tensor([-3.2182, -5.7757, -5.0783, -6.3845, -6.5687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4380, device='cuda:0', dtype=torch.float64)
tensor([-3.2021, -5.7687, -5.0743, -6.3715, -6.5507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3441, device='cuda:0', dtype=torch.float64)
tensor([-3.1918, -5.7620, -5.0660, -6.3520, -6.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1996, device='cuda:0', dtype=torch.float64)
tensor([-3.1841, -5.7573, -5.0563, -6.3253, -6.5112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3213, device='cuda:0', dtype=torch.float64)
tensor([-3.1755, -5.7487, -5.0494, -6.3066, -6.4917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2693, device='cuda:0', dtype=torch.float64)
tensor([-3.1676, -5.7357, -5.0468, -6.2934, -6.4712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2386, device='cuda:0', dtype=torch.float64)
tensor([-3.1637, -5.7219, -5.0470, -6.2753, -6.4555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3111, device='cuda:0', dtype=torch.float64)
tensor([-3.1613, -5.7080, -5.0440, -6.2581, -6.4415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2359, device='cuda:0', dtype=torch.float64)
tensor([-3.1593, -5.6936, -5.0419, -6.2455, -6.4287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2541, device='cuda:0', dtype=torch.float64)
tensor([-3.1548, -5.6837, -5.0331, -6.2290, -6.4192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3220, device='cuda:0', dtype=torch.float64)
tensor([-3.1505, -5.6732, -5.0263, -6.2192, -6.4148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3810, device='cuda:0', dtype=torch.float64)
tensor([-3.1467, -5.6617, -5.0241, -6.2150, -6.4132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3285, device='cuda:0', dtype=torch.float64)
tensor([-3.1425, -5.6508, -5.0192, -6.2145, -6.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1973, device='cuda:0', dtype=torch.float64)
tensor([-3.1410, -5.6397, -5.0111, -6.2184, -6.4130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3040, device='cuda:0', dtype=torch.float64)
tensor([-3.1395, -5.6279, -5.0030, -6.2159, -6.4153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2490, device='cuda:0', dtype=torch.float64)
tensor([-3.1379, -5.6132, -4.9965, -6.2112, -6.4193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1860, device='cuda:0', dtype=torch.float64)
tensor([-3.1393, -5.5990, -4.9899, -6.2084, -6.4223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2094, device='cuda:0', dtype=torch.float64)
tensor([-3.1401, -5.5866, -4.9799, -6.2030, -6.4198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1791, device='cuda:0', dtype=torch.float64)
tensor([-3.1389, -5.5817, -4.9700, -6.1957, -6.4181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2782, device='cuda:0', dtype=torch.float64)
tensor([-3.1340, -5.5768, -4.9627, -6.1849, -6.4125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2897, device='cuda:0', dtype=torch.float64)
tensor([-3.1258, -5.5795, -4.9549, -6.1663, -6.3998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([-3.1167, -5.5820, -4.9441, -6.1465, -6.3882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2708, device='cuda:0', dtype=torch.float64)
tensor([-3.1067, -5.5758, -4.9353, -6.1327, -6.3727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1960, device='cuda:0', dtype=torch.float64)
tensor([-3.0973, -5.5745, -4.9270, -6.1170, -6.3572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-3.0874, -5.5679, -4.9199, -6.1095, -6.3434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1837, device='cuda:0', dtype=torch.float64)
tensor([-3.0797, -5.5551, -4.9124, -6.1032, -6.3249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3653, device='cuda:0', dtype=torch.float64)
tensor([-3.0717, -5.5449, -4.9089, -6.0976, -6.3071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1636, device='cuda:0', dtype=torch.float64)
tensor([-3.0654, -5.5276, -4.9103, -6.1021, -6.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([-3.0618, -5.5129, -4.9109, -6.1069, -6.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3308, device='cuda:0', dtype=torch.float64)
tensor([-3.0596, -5.4983, -4.9162, -6.1122, -6.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2712, device='cuda:0', dtype=torch.float64)
tensor([-3.0592, -5.4821, -4.9195, -6.1127, -6.2197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1218, device='cuda:0', dtype=torch.float64)
tensor([-3.0570, -5.4640, -4.9229, -6.1135, -6.2022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2416, device='cuda:0', dtype=torch.float64)
tensor([-3.0545, -5.4467, -4.9223, -6.1118, -6.1894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3248, device='cuda:0', dtype=torch.float64)
tensor([-3.0520, -5.4322, -4.9162, -6.0989, -6.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2731, device='cuda:0', dtype=torch.float64)
tensor([-3.0555, -5.4230, -4.9018, -6.0775, -6.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2174, device='cuda:0', dtype=torch.float64)
tensor([-3.0605, -5.4126, -4.8836, -6.0533, -6.1826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3425, device='cuda:0', dtype=torch.float64)
tensor([-3.0660, -5.4126, -4.8653, -6.0266, -6.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1560, device='cuda:0', dtype=torch.float64)
tensor([-3.0743, -5.4130, -4.8489, -5.9994, -6.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2448, device='cuda:0', dtype=torch.float64)
tensor([-3.0758, -5.4106, -4.8417, -5.9773, -6.1906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0483, device='cuda:0', dtype=torch.float64)
tensor([-3.0762, -5.4063, -4.8381, -5.9612, -6.1962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1436, device='cuda:0', dtype=torch.float64)
tensor([-3.0765, -5.3998, -4.8341, -5.9487, -6.1996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1846, device='cuda:0', dtype=torch.float64)
tensor([-3.0745, -5.3934, -4.8344, -5.9383, -6.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4491, device='cuda:0', dtype=torch.float64)
tensor([-3.0702, -5.3858, -4.8402, -5.9332, -6.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3268, device='cuda:0', dtype=torch.float64)
tensor([-3.0650, -5.3712, -4.8473, -5.9313, -6.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2151, device='cuda:0', dtype=torch.float64)
tensor([-3.0567, -5.3545, -4.8534, -5.9361, -6.1912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2964, device='cuda:0', dtype=torch.float64)
tensor([-3.0461, -5.3337, -4.8597, -5.9444, -6.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3318, device='cuda:0', dtype=torch.float64)
tensor([-3.0352, -5.3154, -4.8635, -5.9534, -6.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1522, device='cuda:0', dtype=torch.float64)
tensor([-3.0218, -5.2957, -4.8624, -5.9626, -6.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2653, device='cuda:0', dtype=torch.float64)
tensor([-3.0123, -5.2755, -4.8568, -5.9708, -6.1334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2197, device='cuda:0', dtype=torch.float64)
tensor([-3.0053, -5.2613, -4.8478, -5.9790, -6.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-3.0000, -5.2529, -4.8351, -5.9806, -6.0921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3583, device='cuda:0', dtype=torch.float64)
tensor([-2.9974, -5.2525, -4.8216, -5.9743, -6.0687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2903, device='cuda:0', dtype=torch.float64)
tensor([-3.0010, -5.2577, -4.8077, -5.9627, -6.0451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2092, device='cuda:0', dtype=torch.float64)
tensor([-3.0061, -5.2655, -4.7930, -5.9548, -6.0289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2808, device='cuda:0', dtype=torch.float64)
tensor([-3.0148, -5.2701, -4.7811, -5.9409, -6.0146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0909, device='cuda:0', dtype=torch.float64)
tensor([-3.0228, -5.2799, -4.7732, -5.9224, -6.0028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2381, device='cuda:0', dtype=torch.float64)
tensor([-3.0313, -5.2870, -4.7654, -5.9045, -5.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1491, device='cuda:0', dtype=torch.float64)
tensor([-3.0385, -5.2895, -4.7594, -5.8879, -5.9884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2161, device='cuda:0', dtype=torch.float64)
tensor([-3.0454, -5.2906, -4.7547, -5.8714, -5.9854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1764, device='cuda:0', dtype=torch.float64)
tensor([-3.0504, -5.2949, -4.7502, -5.8582, -5.9827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3499, device='cuda:0', dtype=torch.float64)
tensor([-3.0523, -5.2999, -4.7486, -5.8466, -5.9817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-3.0524, -5.2990, -4.7463, -5.8343, -5.9821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1612, device='cuda:0', dtype=torch.float64)
tensor([-3.0488, -5.2931, -4.7432, -5.8215, -5.9800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3096, device='cuda:0', dtype=torch.float64)
tensor([-3.0416, -5.2881, -4.7377, -5.8100, -5.9795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1283, device='cuda:0', dtype=torch.float64)
tensor([-3.0306, -5.2783, -4.7311, -5.8019, -5.9748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1599, device='cuda:0', dtype=torch.float64)
tensor([-3.0171, -5.2683, -4.7263, -5.7976, -5.9680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1441, device='cuda:0', dtype=torch.float64)
tensor([-3.0058, -5.2611, -4.7193, -5.7939, -5.9670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0950, device='cuda:0', dtype=torch.float64)
tensor([-2.9977, -5.2523, -4.7108, -5.7927, -5.9611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1743, device='cuda:0', dtype=torch.float64)
tensor([-2.9913, -5.2419, -4.7078, -5.7961, -5.9569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1905, device='cuda:0', dtype=torch.float64)
tensor([-2.9887, -5.2277, -4.7042, -5.7994, -5.9437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1100, device='cuda:0', dtype=torch.float64)
tensor([-2.9900, -5.2119, -4.6991, -5.8001, -5.9317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2930, device='cuda:0', dtype=torch.float64)
tensor([-2.9935, -5.1924, -4.6985, -5.8025, -5.9172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1093, device='cuda:0', dtype=torch.float64)
tensor([-2.9963, -5.1694, -4.6953, -5.8052, -5.9003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([-3.0020, -5.1488, -4.6955, -5.8112, -5.8866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2229, device='cuda:0', dtype=torch.float64)
tensor([-3.0067, -5.1273, -4.6958, -5.8160, -5.8752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1338, device='cuda:0', dtype=torch.float64)
tensor([-3.0088, -5.1096, -4.7015, -5.8207, -5.8705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-3.0119, -5.0955, -4.7091, -5.8210, -5.8698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1535, device='cuda:0', dtype=torch.float64)
tensor([-3.0140, -5.0901, -4.7168, -5.8122, -5.8665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-3.0155, -5.0857, -4.7256, -5.8033, -5.8685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3050, device='cuda:0', dtype=torch.float64)
tensor([-3.0140, -5.0862, -4.7340, -5.7884, -5.8709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2492, device='cuda:0', dtype=torch.float64)
tensor([-3.0116, -5.0847, -4.7446, -5.7749, -5.8747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2380, device='cuda:0', dtype=torch.float64)
tensor([-3.0076, -5.0833, -4.7539, -5.7618, -5.8795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1149, device='cuda:0', dtype=torch.float64)
tensor([-3.0003, -5.0797, -4.7611, -5.7507, -5.8835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([-2.9926, -5.0751, -4.7647, -5.7402, -5.8861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-2.9831, -5.0682, -4.7668, -5.7278, -5.8889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1160, device='cuda:0', dtype=torch.float64)
tensor([-2.9760, -5.0641, -4.7662, -5.7115, -5.8900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.9723, -5.0533, -4.7605, -5.7008, -5.8936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2770, device='cuda:0', dtype=torch.float64)
tensor([-2.9709, -5.0403, -4.7541, -5.6947, -5.8980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2041, device='cuda:0', dtype=torch.float64)
tensor([-2.9680, -5.0309, -4.7441, -5.6885, -5.8942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1626, device='cuda:0', dtype=torch.float64)
tensor([-2.9617, -5.0188, -4.7328, -5.6896, -5.8866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0498, device='cuda:0', dtype=torch.float64)
tensor([-2.9556, -4.9987, -4.7233, -5.6950, -5.8776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1016, device='cuda:0', dtype=torch.float64)
tensor([-2.9507, -4.9862, -4.7155, -5.7000, -5.8641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2130, device='cuda:0', dtype=torch.float64)
tensor([-2.9487, -4.9774, -4.7070, -5.6982, -5.8483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0130, device='cuda:0', dtype=torch.float64)
tensor([-2.9475, -4.9709, -4.6952, -5.6899, -5.8310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0712, device='cuda:0', dtype=torch.float64)
tensor([-2.9485, -4.9641, -4.6856, -5.6802, -5.8170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2243, device='cuda:0', dtype=torch.float64)
tensor([-2.9478, -4.9609, -4.6802, -5.6671, -5.8061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1508, device='cuda:0', dtype=torch.float64)
tensor([-2.9463, -4.9598, -4.6725, -5.6565, -5.7989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1806, device='cuda:0', dtype=torch.float64)
tensor([-2.9424, -4.9628, -4.6676, -5.6486, -5.7935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([-2.9387, -4.9668, -4.6634, -5.6383, -5.7870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1140, device='cuda:0', dtype=torch.float64)
tensor([-2.9363, -4.9737, -4.6568, -5.6272, -5.7808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2798, device='cuda:0', dtype=torch.float64)
tensor([-2.9325, -4.9871, -4.6497, -5.6214, -5.7763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2020, device='cuda:0', dtype=torch.float64)
tensor([-2.9303, -5.0009, -4.6425, -5.6136, -5.7727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3508, device='cuda:0', dtype=torch.float64)
tensor([-2.9290, -5.0101, -4.6388, -5.6099, -5.7724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([-2.9244, -5.0194, -4.6375, -5.6110, -5.7692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1853, device='cuda:0', dtype=torch.float64)
tensor([-2.9207, -5.0266, -4.6370, -5.6095, -5.7600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3448, device='cuda:0', dtype=torch.float64)
tensor([-2.9186, -5.0329, -4.6386, -5.6047, -5.7458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3292, device='cuda:0', dtype=torch.float64)
tensor([-2.9194, -5.0392, -4.6436, -5.5979, -5.7325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1406, device='cuda:0', dtype=torch.float64)
tensor([-2.9236, -5.0509, -4.6490, -5.5887, -5.7174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2219, device='cuda:0', dtype=torch.float64)
tensor([-2.9298, -5.0552, -4.6558, -5.5780, -5.7113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-2.9359, -5.0558, -4.6618, -5.5733, -5.7066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1563, device='cuda:0', dtype=torch.float64)
tensor([-2.9409, -5.0567, -4.6639, -5.5621, -5.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1161, device='cuda:0', dtype=torch.float64)
tensor([-2.9448, -5.0551, -4.6619, -5.5527, -5.7049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1700, device='cuda:0', dtype=torch.float64)
tensor([-2.9479, -5.0438, -4.6602, -5.5477, -5.7052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1611, device='cuda:0', dtype=torch.float64)
tensor([-2.9521, -5.0300, -4.6581, -5.5484, -5.7106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2198, device='cuda:0', dtype=torch.float64)
tensor([-2.9547, -5.0143, -4.6531, -5.5491, -5.7150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2275, device='cuda:0', dtype=torch.float64)
tensor([-2.9601, -5.0015, -4.6399, -5.5390, -5.7227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.9642, -4.9921, -4.6285, -5.5342, -5.7301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0594, device='cuda:0', dtype=torch.float64)
tensor([-2.9670, -4.9868, -4.6181, -5.5355, -5.7341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2273, device='cuda:0', dtype=torch.float64)
tensor([-2.9656, -4.9822, -4.6049, -5.5364, -5.7293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3286, device='cuda:0', dtype=torch.float64)
tensor([-2.9700, -4.9772, -4.5960, -5.5406, -5.7283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2501, device='cuda:0', dtype=torch.float64)
tensor([-2.9723, -4.9706, -4.5874, -5.5448, -5.7260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3068, device='cuda:0', dtype=torch.float64)
tensor([-2.9759, -4.9649, -4.5830, -5.5508, -5.7257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1267, device='cuda:0', dtype=torch.float64)
tensor([-2.9768, -4.9579, -4.5797, -5.5535, -5.7239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9916, device='cuda:0', dtype=torch.float64)
tensor([-2.9778, -4.9586, -4.5765, -5.5460, -5.7195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2127, device='cuda:0', dtype=torch.float64)
tensor([-2.9793, -4.9547, -4.5755, -5.5473, -5.7168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2378, device='cuda:0', dtype=torch.float64)
tensor([-2.9774, -4.9512, -4.5756, -5.5412, -5.7147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1861, device='cuda:0', dtype=torch.float64)
tensor([-2.9749, -4.9417, -4.5771, -5.5373, -5.7061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1449, device='cuda:0', dtype=torch.float64)
tensor([-2.9716, -4.9312, -4.5748, -5.5270, -5.6995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0089, device='cuda:0', dtype=torch.float64)
tensor([-2.9661, -4.9220, -4.5744, -5.5206, -5.6916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2618, device='cuda:0', dtype=torch.float64)
tensor([-2.9636, -4.9075, -4.5755, -5.5185, -5.6870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2179, device='cuda:0', dtype=torch.float64)
tensor([-2.9594, -4.8963, -4.5776, -5.5158, -5.6782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0239, device='cuda:0', dtype=torch.float64)
tensor([-2.9550, -4.8877, -4.5784, -5.5098, -5.6741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1240, device='cuda:0', dtype=torch.float64)
tensor([-2.9515, -4.8737, -4.5757, -5.5052, -5.6701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1173, device='cuda:0', dtype=torch.float64)
tensor([-2.9523, -4.8678, -4.5698, -5.4986, -5.6635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0662, device='cuda:0', dtype=torch.float64)
tensor([-2.9512, -4.8560, -4.5639, -5.5004, -5.6605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1120, device='cuda:0', dtype=torch.float64)
tensor([-2.9513, -4.8397, -4.5589, -5.5033, -5.6556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2641, device='cuda:0', dtype=torch.float64)
tensor([-2.9511, -4.8263, -4.5583, -5.4998, -5.6516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0796, device='cuda:0', dtype=torch.float64)
tensor([-2.9531, -4.8125, -4.5536, -5.4950, -5.6486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1247, device='cuda:0', dtype=torch.float64)
tensor([-2.9545, -4.8006, -4.5459, -5.4896, -5.6471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([-2.9556, -4.7932, -4.5414, -5.4886, -5.6414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1463, device='cuda:0', dtype=torch.float64)
tensor([-2.9594, -4.7864, -4.5377, -5.4868, -5.6353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2181, device='cuda:0', dtype=torch.float64)
tensor([-2.9590, -4.7902, -4.5373, -5.4837, -5.6265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1637, device='cuda:0', dtype=torch.float64)
tensor([-2.9553, -4.8004, -4.5378, -5.4803, -5.6160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1415, device='cuda:0', dtype=torch.float64)
tensor([-2.9527, -4.8051, -4.5394, -5.4763, -5.6057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([-2.9540, -4.8090, -4.5396, -5.4811, -5.5962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4086, device='cuda:0', dtype=torch.float64)
tensor([-2.9525, -4.8134, -4.5410, -5.4871, -5.5877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1344, device='cuda:0', dtype=torch.float64)
tensor([-2.9549, -4.8153, -4.5387, -5.4828, -5.5786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9670, device='cuda:0', dtype=torch.float64)
tensor([-2.9553, -4.8120, -4.5437, -5.4795, -5.5674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1357, device='cuda:0', dtype=torch.float64)
tensor([-2.9576, -4.8069, -4.5453, -5.4785, -5.5574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0971, device='cuda:0', dtype=torch.float64)
tensor([-2.9645, -4.8036, -4.5445, -5.4724, -5.5472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0744, device='cuda:0', dtype=torch.float64)
tensor([-2.9745, -4.8051, -4.5436, -5.4619, -5.5379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1082, device='cuda:0', dtype=torch.float64)
tensor([-2.9855, -4.8070, -4.5417, -5.4459, -5.5302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1999, device='cuda:0', dtype=torch.float64)
tensor([-2.9949, -4.8083, -4.5378, -5.4221, -5.5177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0845, device='cuda:0', dtype=torch.float64)
tensor([-3.0040, -4.8128, -4.5332, -5.4024, -5.5035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0749, device='cuda:0', dtype=torch.float64)
tensor([-3.0067, -4.8129, -4.5316, -5.3839, -5.4895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([-3.0069, -4.8178, -4.5299, -5.3679, -5.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0090, device='cuda:0', dtype=torch.float64)
tensor([-3.0054, -4.8222, -4.5250, -5.3517, -5.4762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1684, device='cuda:0', dtype=torch.float64)
tensor([-3.0056, -4.8275, -4.5173, -5.3336, -5.4694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1422, device='cuda:0', dtype=torch.float64)
tensor([-3.0017, -4.8236, -4.5115, -5.3212, -5.4637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1969, device='cuda:0', dtype=torch.float64)
tensor([-2.9929, -4.8165, -4.5059, -5.3092, -5.4570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-2.9832, -4.8072, -4.5043, -5.2981, -5.4470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1006, device='cuda:0', dtype=torch.float64)
tensor([-2.9762, -4.7989, -4.5056, -5.2873, -5.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0657, device='cuda:0', dtype=torch.float64)
tensor([-2.9696, -4.7950, -4.5072, -5.2760, -5.4323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1197, device='cuda:0', dtype=torch.float64)
tensor([-2.9666, -4.7911, -4.5106, -5.2697, -5.4274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0735, device='cuda:0', dtype=torch.float64)
tensor([-2.9605, -4.7843, -4.5182, -5.2706, -5.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0245, device='cuda:0', dtype=torch.float64)
tensor([-2.9540, -4.7730, -4.5257, -5.2723, -5.4238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2345, device='cuda:0', dtype=torch.float64)
tensor([-2.9455, -4.7666, -4.5346, -5.2746, -5.4216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1885, device='cuda:0', dtype=torch.float64)
tensor([-2.9358, -4.7637, -4.5448, -5.2786, -5.4201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1187, device='cuda:0', dtype=torch.float64)
tensor([-2.9271, -4.7597, -4.5503, -5.2883, -5.4184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2703, device='cuda:0', dtype=torch.float64)
tensor([-2.9234, -4.7539, -4.5534, -5.2964, -5.4215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0684, device='cuda:0', dtype=torch.float64)
tensor([-2.9198, -4.7509, -4.5573, -5.3032, -5.4257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1335, device='cuda:0', dtype=torch.float64)
tensor([-2.9170, -4.7406, -4.5584, -5.3077, -5.4295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1361, device='cuda:0', dtype=torch.float64)
tensor([-2.9124, -4.7252, -4.5585, -5.3124, -5.4364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2791, device='cuda:0', dtype=torch.float64)
tensor([-2.9138, -4.7069, -4.5564, -5.3210, -5.4475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1432, device='cuda:0', dtype=torch.float64)
tensor([-2.9144, -4.6883, -4.5564, -5.3361, -5.4606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-2.9149, -4.6715, -4.5536, -5.3449, -5.4725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0310, device='cuda:0', dtype=torch.float64)
tensor([-2.9159, -4.6619, -4.5462, -5.3477, -5.4840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-2.9141, -4.6595, -4.5408, -5.3530, -5.4904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0063, device='cuda:0', dtype=torch.float64)
tensor([-2.9116, -4.6591, -4.5341, -5.3584, -5.4871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1074, device='cuda:0', dtype=torch.float64)
tensor([-2.9079, -4.6634, -4.5233, -5.3607, -5.4785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1459, device='cuda:0', dtype=torch.float64)
tensor([-2.9032, -4.6703, -4.5113, -5.3674, -5.4604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([-2.8985, -4.6695, -4.4964, -5.3754, -5.4427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1289, device='cuda:0', dtype=torch.float64)
tensor([-2.8941, -4.6637, -4.4844, -5.3875, -5.4274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0649, device='cuda:0', dtype=torch.float64)
tensor([-2.8901, -4.6619, -4.4754, -5.3942, -5.4113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8696, device='cuda:0', dtype=torch.float64)
tensor([-2.8903, -4.6607, -4.4704, -5.3965, -5.3961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9992, device='cuda:0', dtype=torch.float64)
tensor([-2.8907, -4.6617, -4.4674, -5.4018, -5.3809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9743, device='cuda:0', dtype=torch.float64)
tensor([-2.8915, -4.6581, -4.4622, -5.4044, -5.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0934, device='cuda:0', dtype=torch.float64)
tensor([-2.8956, -4.6459, -4.4534, -5.4009, -5.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1390, device='cuda:0', dtype=torch.float64)
tensor([-2.8992, -4.6285, -4.4471, -5.3956, -5.3497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1238, device='cuda:0', dtype=torch.float64)
tensor([-2.9018, -4.6104, -4.4404, -5.3852, -5.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2311, device='cuda:0', dtype=torch.float64)
tensor([-2.9045, -4.5930, -4.4329, -5.3662, -5.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2719, device='cuda:0', dtype=torch.float64)
tensor([-2.9055, -4.5790, -4.4263, -5.3505, -5.3459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-2.9038, -4.5706, -4.4232, -5.3358, -5.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1505, device='cuda:0', dtype=torch.float64)
tensor([-2.9018, -4.5659, -4.4218, -5.3227, -5.3575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0918, device='cuda:0', dtype=torch.float64)
tensor([-2.9021, -4.5579, -4.4232, -5.3131, -5.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0718, device='cuda:0', dtype=torch.float64)
tensor([-2.9041, -4.5541, -4.4223, -5.3026, -5.3771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1911, device='cuda:0', dtype=torch.float64)
tensor([-2.9039, -4.5485, -4.4231, -5.2955, -5.3923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2490, device='cuda:0', dtype=torch.float64)
tensor([-2.9060, -4.5431, -4.4265, -5.2928, -5.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([-2.9086, -4.5427, -4.4285, -5.2876, -5.4217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0160, device='cuda:0', dtype=torch.float64)
tensor([-2.9130, -4.5435, -4.4328, -5.2796, -5.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0521, device='cuda:0', dtype=torch.float64)
tensor([-2.9148, -4.5441, -4.4388, -5.2804, -5.4314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2611, device='cuda:0', dtype=torch.float64)
tensor([-2.9159, -4.5466, -4.4512, -5.2826, -5.4277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.9152, -4.5478, -4.4684, -5.2815, -5.4223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0954, device='cuda:0', dtype=torch.float64)
tensor([-2.9116, -4.5479, -4.4843, -5.2785, -5.4150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1045, device='cuda:0', dtype=torch.float64)
tensor([-2.9065, -4.5467, -4.4989, -5.2708, -5.4089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0953, device='cuda:0', dtype=torch.float64)
tensor([-2.9058, -4.5526, -4.5102, -5.2645, -5.4024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3092, device='cuda:0', dtype=torch.float64)
tensor([-2.9020, -4.5618, -4.5228, -5.2573, -5.3945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0725, device='cuda:0', dtype=torch.float64)
tensor([-2.9007, -4.5678, -4.5322, -5.2515, -5.3888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-2.9028, -4.5762, -4.5380, -5.2457, -5.3840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1793, device='cuda:0', dtype=torch.float64)
tensor([-2.9046, -4.5831, -4.5404, -5.2423, -5.3792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-2.9051, -4.5875, -4.5339, -5.2406, -5.3730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0997, device='cuda:0', dtype=torch.float64)
tensor([-2.9047, -4.5881, -4.5239, -5.2375, -5.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0931, device='cuda:0', dtype=torch.float64)
tensor([-2.9067, -4.5836, -4.5132, -5.2419, -5.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0383, device='cuda:0', dtype=torch.float64)
tensor([-2.9083, -4.5784, -4.5020, -5.2445, -5.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9863, device='cuda:0', dtype=torch.float64)
tensor([-2.9058, -4.5720, -4.4902, -5.2476, -5.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0942, device='cuda:0', dtype=torch.float64)
tensor([-2.9002, -4.5663, -4.4799, -5.2502, -5.3192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2466, device='cuda:0', dtype=torch.float64)
tensor([-2.8951, -4.5634, -4.4697, -5.2550, -5.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3139, device='cuda:0', dtype=torch.float64)
tensor([-2.8965, -4.5616, -4.4588, -5.2573, -5.2932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1087, device='cuda:0', dtype=torch.float64)
tensor([-2.8958, -4.5628, -4.4474, -5.2587, -5.2833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0633, device='cuda:0', dtype=torch.float64)
tensor([-2.8939, -4.5554, -4.4336, -5.2566, -5.2743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0825, device='cuda:0', dtype=torch.float64)
tensor([-2.8934, -4.5476, -4.4192, -5.2579, -5.2642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-2.8954, -4.5428, -4.4056, -5.2558, -5.2574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0598, device='cuda:0', dtype=torch.float64)
tensor([-2.9000, -4.5381, -4.3912, -5.2512, -5.2559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([-2.9064, -4.5347, -4.3811, -5.2440, -5.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2045, device='cuda:0', dtype=torch.float64)
tensor([-2.9172, -4.5341, -4.3717, -5.2362, -5.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2041, device='cuda:0', dtype=torch.float64)
tensor([-2.9235, -4.5425, -4.3618, -5.2314, -5.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0869, device='cuda:0', dtype=torch.float64)
tensor([-2.9324, -4.5471, -4.3577, -5.2289, -5.2803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2680, device='cuda:0', dtype=torch.float64)
tensor([-2.9420, -4.5500, -4.3571, -5.2277, -5.2907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1833, device='cuda:0', dtype=torch.float64)
tensor([-2.9514, -4.5569, -4.3542, -5.2228, -5.3001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0024, device='cuda:0', dtype=torch.float64)
tensor([-2.9584, -4.5590, -4.3572, -5.2315, -5.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2043, device='cuda:0', dtype=torch.float64)
tensor([-2.9654, -4.5657, -4.3560, -5.2330, -5.3230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2390, device='cuda:0', dtype=torch.float64)
tensor([-2.9714, -4.5686, -4.3567, -5.2369, -5.3280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9466, device='cuda:0', dtype=torch.float64)
tensor([-2.9771, -4.5681, -4.3616, -5.2439, -5.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-2.9844, -4.5633, -4.3670, -5.2498, -5.3345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-2.9924, -4.5571, -4.3750, -5.2505, -5.3350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1411, device='cuda:0', dtype=torch.float64)
tensor([-2.9955, -4.5478, -4.3862, -5.2541, -5.3366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9852, device='cuda:0', dtype=torch.float64)
tensor([-2.9955, -4.5414, -4.3963, -5.2528, -5.3377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0474, device='cuda:0', dtype=torch.float64)
tensor([-2.9949, -4.5372, -4.4069, -5.2517, -5.3408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0946, device='cuda:0', dtype=torch.float64)
tensor([-2.9875, -4.5287, -4.4171, -5.2491, -5.3406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2764, device='cuda:0', dtype=torch.float64)
tensor([-2.9832, -4.5197, -4.4260, -5.2483, -5.3412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2068, device='cuda:0', dtype=torch.float64)
tensor([-2.9774, -4.5074, -4.4312, -5.2480, -5.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9810, device='cuda:0', dtype=torch.float64)
tensor([-2.9702, -4.4955, -4.4374, -5.2503, -5.3483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([-2.9667, -4.4874, -4.4371, -5.2391, -5.3521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0394, device='cuda:0', dtype=torch.float64)
tensor([-2.9630, -4.4781, -4.4377, -5.2281, -5.3530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1752, device='cuda:0', dtype=torch.float64)
tensor([-2.9623, -4.4711, -4.4352, -5.2184, -5.3520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0183, device='cuda:0', dtype=torch.float64)
tensor([-2.9629, -4.4666, -4.4311, -5.2100, -5.3519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0628, device='cuda:0', dtype=torch.float64)
tensor([-2.9643, -4.4627, -4.4253, -5.2030, -5.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9156, device='cuda:0', dtype=torch.float64)
tensor([-2.9694, -4.4597, -4.4117, -5.1894, -5.3408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0481, device='cuda:0', dtype=torch.float64)
tensor([-2.9761, -4.4588, -4.4030, -5.1762, -5.3320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0619, device='cuda:0', dtype=torch.float64)
tensor([-2.9819, -4.4609, -4.3947, -5.1628, -5.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0139, device='cuda:0', dtype=torch.float64)
tensor([-2.9886, -4.4660, -4.3893, -5.1506, -5.3120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1740, device='cuda:0', dtype=torch.float64)
tensor([-2.9957, -4.4723, -4.3874, -5.1408, -5.3030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0392, device='cuda:0', dtype=torch.float64)
tensor([-2.9996, -4.4793, -4.3865, -5.1343, -5.2988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1100, device='cuda:0', dtype=torch.float64)
tensor([-3.0025, -4.4867, -4.3795, -5.1295, -5.2960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0937, device='cuda:0', dtype=torch.float64)
tensor([-3.0029, -4.4997, -4.3723, -5.1222, -5.2901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0288, device='cuda:0', dtype=torch.float64)
tensor([-3.0019, -4.5133, -4.3633, -5.1195, -5.2865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1185, device='cuda:0', dtype=torch.float64)
tensor([-3.0021, -4.5241, -4.3524, -5.1207, -5.2837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0689, device='cuda:0', dtype=torch.float64)
tensor([-3.0017, -4.5343, -4.3417, -5.1252, -5.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3379, device='cuda:0', dtype=torch.float64)
tensor([-3.0017, -4.5471, -4.3276, -5.1333, -5.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0243, device='cuda:0', dtype=torch.float64)
tensor([-3.0010, -4.5576, -4.3151, -5.1464, -5.2832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0706, device='cuda:0', dtype=torch.float64)
tensor([-2.9975, -4.5613, -4.3046, -5.1578, -5.2844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1162, device='cuda:0', dtype=torch.float64)
tensor([-2.9933, -4.5660, -4.2956, -5.1726, -5.2861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0352, device='cuda:0', dtype=torch.float64)
tensor([-2.9897, -4.5676, -4.2909, -5.1859, -5.2837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-2.9840, -4.5695, -4.2892, -5.1959, -5.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1111, device='cuda:0', dtype=torch.float64)
tensor([-2.9773, -4.5668, -4.2895, -5.2024, -5.2757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2174, device='cuda:0', dtype=torch.float64)
tensor([-2.9705, -4.5568, -4.2865, -5.2150, -5.2649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1677, device='cuda:0', dtype=torch.float64)
tensor([-2.9615, -4.5469, -4.2860, -5.2221, -5.2583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0914, device='cuda:0', dtype=torch.float64)
tensor([-2.9497, -4.5331, -4.2896, -5.2322, -5.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1564, device='cuda:0', dtype=torch.float64)
tensor([-2.9359, -4.5202, -4.2929, -5.2470, -5.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0658, device='cuda:0', dtype=torch.float64)
tensor([-2.9257, -4.5040, -4.2935, -5.2521, -5.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([-2.9196, -4.4862, -4.2930, -5.2520, -5.2466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9703, device='cuda:0', dtype=torch.float64)
tensor([-2.9199, -4.4709, -4.2877, -5.2405, -5.2480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([-2.9212, -4.4591, -4.2846, -5.2323, -5.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0680, device='cuda:0', dtype=torch.float64)
tensor([-2.9228, -4.4496, -4.2850, -5.2236, -5.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0581, device='cuda:0', dtype=torch.float64)
tensor([-2.9227, -4.4471, -4.2870, -5.2105, -5.2531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0910, device='cuda:0', dtype=torch.float64)
tensor([-2.9205, -4.4507, -4.2945, -5.1960, -5.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1373, device='cuda:0', dtype=torch.float64)
tensor([-2.9158, -4.4528, -4.3039, -5.1845, -5.2589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0624, device='cuda:0', dtype=torch.float64)
tensor([-2.9128, -4.4541, -4.3129, -5.1718, -5.2592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2154, device='cuda:0', dtype=torch.float64)
tensor([-2.9143, -4.4673, -4.3189, -5.1577, -5.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0044, device='cuda:0', dtype=torch.float64)
tensor([-2.9157, -4.4806, -4.3235, -5.1450, -5.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1126, device='cuda:0', dtype=torch.float64)
tensor([-2.9154, -4.4908, -4.3311, -5.1382, -5.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0726, device='cuda:0', dtype=torch.float64)
tensor([-2.9200, -4.4935, -4.3357, -5.1328, -5.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2459, device='cuda:0', dtype=torch.float64)
tensor([-2.9282, -4.4873, -4.3392, -5.1233, -5.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0927, device='cuda:0', dtype=torch.float64)
tensor([-2.9382, -4.4838, -4.3406, -5.1124, -5.2577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-2.9456, -4.4838, -4.3433, -5.1028, -5.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0997, device='cuda:0', dtype=torch.float64)
tensor([-2.9521, -4.4876, -4.3424, -5.0907, -5.2529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9928, device='cuda:0', dtype=torch.float64)
tensor([-2.9588, -4.4913, -4.3416, -5.0796, -5.2468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0380, device='cuda:0', dtype=torch.float64)
tensor([-2.9634, -4.4859, -4.3384, -5.0766, -5.2426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-2.9712, -4.4748, -4.3332, -5.0787, -5.2370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-2.9797, -4.4666, -4.3303, -5.0838, -5.2286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1577, device='cuda:0', dtype=torch.float64)
tensor([-2.9839, -4.4546, -4.3312, -5.0896, -5.2247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9551, device='cuda:0', dtype=torch.float64)
tensor([-2.9838, -4.4390, -4.3327, -5.0983, -5.2190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1856, device='cuda:0', dtype=torch.float64)
tensor([-2.9812, -4.4268, -4.3377, -5.1130, -5.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1020, device='cuda:0', dtype=torch.float64)
tensor([-2.9773, -4.4119, -4.3356, -5.1268, -5.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1980, device='cuda:0', dtype=torch.float64)
tensor([-2.9747, -4.4020, -4.3377, -5.1421, -5.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9842, device='cuda:0', dtype=torch.float64)
tensor([-2.9716, -4.3941, -4.3378, -5.1515, -5.1944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-2.9694, -4.3881, -4.3392, -5.1554, -5.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1191, device='cuda:0', dtype=torch.float64)
tensor([-2.9630, -4.3831, -4.3415, -5.1594, -5.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0447, device='cuda:0', dtype=torch.float64)
tensor([-2.9564, -4.3836, -4.3424, -5.1617, -5.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9914, device='cuda:0', dtype=torch.float64)
tensor([-2.9477, -4.3850, -4.3410, -5.1635, -5.1952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0333, device='cuda:0', dtype=torch.float64)
tensor([-2.9406, -4.3867, -4.3436, -5.1634, -5.2018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0205, device='cuda:0', dtype=torch.float64)
tensor([-2.9325, -4.3898, -4.3437, -5.1620, -5.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1340, device='cuda:0', dtype=torch.float64)
tensor([-2.9259, -4.3969, -4.3455, -5.1562, -5.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2170, device='cuda:0', dtype=torch.float64)
tensor([-2.9166, -4.4064, -4.3492, -5.1527, -5.2215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1186, device='cuda:0', dtype=torch.float64)
tensor([-2.9073, -4.4191, -4.3504, -5.1546, -5.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0405, device='cuda:0', dtype=torch.float64)
tensor([-2.9054, -4.4278, -4.3502, -5.1508, -5.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([-2.9045, -4.4378, -4.3494, -5.1481, -5.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1098, device='cuda:0', dtype=torch.float64)
tensor([-2.9057, -4.4470, -4.3469, -5.1494, -5.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9606, device='cuda:0', dtype=torch.float64)
tensor([-2.9069, -4.4551, -4.3467, -5.1529, -5.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1560, device='cuda:0', dtype=torch.float64)
tensor([-2.9064, -4.4598, -4.3462, -5.1628, -5.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0427, device='cuda:0', dtype=torch.float64)
tensor([-2.9058, -4.4600, -4.3449, -5.1743, -5.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9790, device='cuda:0', dtype=torch.float64)
tensor([-2.9058, -4.4555, -4.3418, -5.1900, -5.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9212, device='cuda:0', dtype=torch.float64)
tensor([-2.9063, -4.4491, -4.3358, -5.2029, -5.1987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9329, device='cuda:0', dtype=torch.float64)
tensor([-2.9056, -4.4449, -4.3315, -5.2256, -5.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2255, device='cuda:0', dtype=torch.float64)
tensor([-2.9022, -4.4436, -4.3275, -5.2440, -5.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1784, device='cuda:0', dtype=torch.float64)
tensor([-2.9012, -4.4397, -4.3276, -5.2574, -5.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9254, device='cuda:0', dtype=torch.float64)
tensor([-2.8987, -4.4326, -4.3268, -5.2707, -5.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1328, device='cuda:0', dtype=torch.float64)
tensor([-2.8982, -4.4272, -4.3280, -5.2732, -5.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2695, device='cuda:0', dtype=torch.float64)
tensor([-2.8994, -4.4180, -4.3310, -5.2716, -5.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-2.9016, -4.4105, -4.3327, -5.2684, -5.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2518, device='cuda:0', dtype=torch.float64)
tensor([-2.9039, -4.4030, -4.3379, -5.2650, -5.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0636, device='cuda:0', dtype=torch.float64)
tensor([-2.9074, -4.3932, -4.3417, -5.2559, -5.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1287, device='cuda:0', dtype=torch.float64)
tensor([-2.9107, -4.3848, -4.3459, -5.2465, -5.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0088, device='cuda:0', dtype=torch.float64)
tensor([-2.9157, -4.3770, -4.3515, -5.2391, -5.1824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2968, device='cuda:0', dtype=torch.float64)
tensor([-2.9269, -4.3716, -4.3559, -5.2382, -5.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9884, device='cuda:0', dtype=torch.float64)
tensor([-2.9388, -4.3681, -4.3589, -5.2321, -5.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.9503, -4.3684, -4.3572, -5.2203, -5.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-2.9633, -4.3708, -4.3538, -5.2074, -5.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0563, device='cuda:0', dtype=torch.float64)
tensor([-2.9777, -4.3830, -4.3496, -5.1950, -5.2404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1465, device='cuda:0', dtype=torch.float64)
tensor([-2.9892, -4.3948, -4.3465, -5.1867, -5.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1034, device='cuda:0', dtype=torch.float64)
tensor([-3.0022, -4.4078, -4.3434, -5.1838, -5.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-3.0154, -4.4161, -4.3420, -5.1823, -5.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0933, device='cuda:0', dtype=torch.float64)
tensor([-3.0228, -4.4143, -4.3423, -5.1868, -5.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1338, device='cuda:0', dtype=torch.float64)
tensor([-3.0305, -4.4104, -4.3370, -5.1853, -5.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1158, device='cuda:0', dtype=torch.float64)
tensor([-3.0395, -4.4036, -4.3298, -5.1788, -5.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2063, device='cuda:0', dtype=torch.float64)
tensor([-3.0506, -4.3994, -4.3241, -5.1731, -5.2543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-3.0552, -4.3911, -4.3189, -5.1659, -5.2563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2315, device='cuda:0', dtype=torch.float64)
tensor([-3.0572, -4.3829, -4.3160, -5.1609, -5.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0826, device='cuda:0', dtype=torch.float64)
tensor([-3.0588, -4.3695, -4.3078, -5.1545, -5.2563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0318, device='cuda:0', dtype=torch.float64)
tensor([-3.0576, -4.3605, -4.3001, -5.1492, -5.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0617, device='cuda:0', dtype=torch.float64)
tensor([-3.0584, -4.3496, -4.2881, -5.1406, -5.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-3.0558, -4.3409, -4.2773, -5.1371, -5.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0710, device='cuda:0', dtype=torch.float64)
tensor([-3.0527, -4.3346, -4.2651, -5.1371, -5.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0576, device='cuda:0', dtype=torch.float64)
tensor([-3.0466, -4.3348, -4.2565, -5.1338, -5.2341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9317, device='cuda:0', dtype=torch.float64)
tensor([-3.0383, -4.3308, -4.2504, -5.1309, -5.2290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-3.0310, -4.3275, -4.2472, -5.1268, -5.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9552, device='cuda:0', dtype=torch.float64)
tensor([-3.0225, -4.3252, -4.2447, -5.1242, -5.2225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3364, device='cuda:0', dtype=torch.float64)
tensor([-3.0142, -4.3205, -4.2460, -5.1258, -5.2293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([-3.0081, -4.3166, -4.2548, -5.1276, -5.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-3.0025, -4.3109, -4.2671, -5.1279, -5.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1137, device='cuda:0', dtype=torch.float64)
tensor([-3.0025, -4.3076, -4.2765, -5.1255, -5.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0468, device='cuda:0', dtype=torch.float64)
tensor([-3.0040, -4.3062, -4.2860, -5.1239, -5.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2522, device='cuda:0', dtype=torch.float64)
tensor([-3.0050, -4.3048, -4.2986, -5.1164, -5.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0112, device='cuda:0', dtype=torch.float64)
tensor([-3.0084, -4.3019, -4.3094, -5.1046, -5.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1707, device='cuda:0', dtype=torch.float64)
tensor([-3.0132, -4.3006, -4.3205, -5.0930, -5.2510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1041, device='cuda:0', dtype=torch.float64)
tensor([-3.0228, -4.3007, -4.3313, -5.0831, -5.2603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1494, device='cuda:0', dtype=torch.float64)
tensor([-3.0261, -4.2968, -4.3413, -5.0797, -5.2687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0667, device='cuda:0', dtype=torch.float64)
tensor([-3.0282, -4.2985, -4.3485, -5.0763, -5.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2431, device='cuda:0', dtype=torch.float64)
tensor([-3.0319, -4.3034, -4.3589, -5.0663, -5.2849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1009, device='cuda:0', dtype=torch.float64)
tensor([-3.0363, -4.3066, -4.3722, -5.0649, -5.2934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0045, device='cuda:0', dtype=torch.float64)
tensor([-3.0396, -4.3099, -4.3810, -5.0700, -5.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9040, device='cuda:0', dtype=torch.float64)
tensor([-3.0424, -4.3147, -4.3852, -5.0779, -5.3110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2779, device='cuda:0', dtype=torch.float64)
tensor([-3.0464, -4.3226, -4.3879, -5.0904, -5.3189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0658, device='cuda:0', dtype=torch.float64)
tensor([-3.0487, -4.3316, -4.3881, -5.0979, -5.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0545, device='cuda:0', dtype=torch.float64)
tensor([-3.0534, -4.3484, -4.3886, -5.1037, -5.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([-3.0555, -4.3637, -4.3855, -5.1123, -5.3099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-3.0563, -4.3736, -4.3835, -5.1237, -5.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0062, device='cuda:0', dtype=torch.float64)
tensor([-3.0583, -4.3875, -4.3787, -5.1311, -5.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1695, device='cuda:0', dtype=torch.float64)
tensor([-3.0534, -4.4008, -4.3747, -5.1301, -5.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7972, device='cuda:0', dtype=torch.float64)
tensor([-3.0465, -4.4102, -4.3671, -5.1223, -5.2547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1619, device='cuda:0', dtype=torch.float64)
tensor([-3.0406, -4.4146, -4.3593, -5.1073, -5.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1047, device='cuda:0', dtype=torch.float64)
tensor([-3.0355, -4.4148, -4.3497, -5.0971, -5.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0430, device='cuda:0', dtype=torch.float64)
tensor([-3.0336, -4.4182, -4.3391, -5.0786, -5.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3745, device='cuda:0', dtype=torch.float64)
tensor([-3.0361, -4.4285, -4.3234, -5.0586, -5.1767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0828, device='cuda:0', dtype=torch.float64)
tensor([-3.0385, -4.4412, -4.3115, -5.0416, -5.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9277, device='cuda:0', dtype=torch.float64)
tensor([-3.0359, -4.4462, -4.3027, -5.0313, -5.1506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9712, device='cuda:0', dtype=torch.float64)
tensor([-3.0324, -4.4521, -4.2910, -5.0211, -5.1400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1496, device='cuda:0', dtype=torch.float64)
tensor([-3.0282, -4.4544, -4.2859, -5.0141, -5.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1545, device='cuda:0', dtype=torch.float64)
tensor([-3.0238, -4.4571, -4.2838, -5.0095, -5.1330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9916, device='cuda:0', dtype=torch.float64)
tensor([-3.0233, -4.4551, -4.2814, -5.0084, -5.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2078, device='cuda:0', dtype=torch.float64)
tensor([-3.0234, -4.4555, -4.2824, -5.0160, -5.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1204, device='cuda:0', dtype=torch.float64)
tensor([-3.0279, -4.4534, -4.2863, -5.0251, -5.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0031, device='cuda:0', dtype=torch.float64)
tensor([-3.0288, -4.4500, -4.2908, -5.0335, -5.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3358, device='cuda:0', dtype=torch.float64)
tensor([-3.0288, -4.4519, -4.3006, -5.0408, -5.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1179, device='cuda:0', dtype=torch.float64)
tensor([-3.0295, -4.4523, -4.3136, -5.0416, -5.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1256, device='cuda:0', dtype=torch.float64)
tensor([-3.0289, -4.4563, -4.3228, -5.0415, -5.1470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2514, device='cuda:0', dtype=torch.float64)
tensor([-3.0289, -4.4566, -4.3358, -5.0348, -5.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0813, device='cuda:0', dtype=torch.float64)
tensor([-3.0232, -4.4567, -4.3470, -5.0275, -5.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9537, device='cuda:0', dtype=torch.float64)
tensor([-3.0206, -4.4522, -4.3549, -5.0219, -5.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1045, device='cuda:0', dtype=torch.float64)
tensor([-3.0141, -4.4415, -4.3602, -5.0178, -5.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-3.0072, -4.4282, -4.3599, -5.0184, -5.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0772, device='cuda:0', dtype=torch.float64)
tensor([-3.0017, -4.4170, -4.3592, -5.0211, -5.1707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1660, device='cuda:0', dtype=torch.float64)
tensor([-2.9994, -4.4107, -4.3546, -5.0229, -5.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-2.9978, -4.4062, -4.3471, -5.0245, -5.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-2.9994, -4.4014, -4.3331, -5.0268, -5.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0422, device='cuda:0', dtype=torch.float64)
tensor([-3.0013, -4.4005, -4.3238, -5.0280, -5.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0101, device='cuda:0', dtype=torch.float64)
tensor([-3.0050, -4.4032, -4.3171, -5.0249, -5.1964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9143, device='cuda:0', dtype=torch.float64)
tensor([-3.0075, -4.4072, -4.3102, -5.0169, -5.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1272, device='cuda:0', dtype=torch.float64)
tensor([-3.0077, -4.4157, -4.3049, -5.0087, -5.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2803, device='cuda:0', dtype=torch.float64)
tensor([-3.0076, -4.4209, -4.2969, -5.0012, -5.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-3.0081, -4.4295, -4.2905, -5.0023, -5.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2404, device='cuda:0', dtype=torch.float64)
tensor([-3.0102, -4.4411, -4.2848, -4.9967, -5.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2581, device='cuda:0', dtype=torch.float64)
tensor([-3.0123, -4.4512, -4.2806, -4.9874, -5.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1430, device='cuda:0', dtype=torch.float64)
tensor([-3.0104, -4.4555, -4.2805, -4.9855, -5.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9643, device='cuda:0', dtype=torch.float64)
tensor([-3.0098, -4.4623, -4.2821, -4.9908, -5.2162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2600, device='cuda:0', dtype=torch.float64)
tensor([-3.0102, -4.4705, -4.2901, -4.9926, -5.2201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1510, device='cuda:0', dtype=torch.float64)
tensor([-3.0162, -4.4806, -4.2962, -4.9958, -5.2226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0098, device='cuda:0', dtype=torch.float64)
tensor([-3.0236, -4.4872, -4.3019, -4.9981, -5.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-3.0283, -4.4915, -4.3068, -5.0012, -5.2240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2223, device='cuda:0', dtype=torch.float64)
tensor([-3.0310, -4.4910, -4.3113, -5.0062, -5.2251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1217, device='cuda:0', dtype=torch.float64)
tensor([-3.0370, -4.4956, -4.3153, -5.0133, -5.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-3.0435, -4.5005, -4.3169, -5.0233, -5.2188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9571, device='cuda:0', dtype=torch.float64)
tensor([-3.0484, -4.4993, -4.3220, -5.0337, -5.2211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0613, device='cuda:0', dtype=torch.float64)
tensor([-3.0537, -4.4994, -4.3261, -5.0475, -5.2185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1939, device='cuda:0', dtype=torch.float64)
tensor([-3.0593, -4.4929, -4.3338, -5.0716, -5.2137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1295, device='cuda:0', dtype=torch.float64)
tensor([-3.0647, -4.4888, -4.3386, -5.0964, -5.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5172, device='cuda:0', dtype=torch.float64)
tensor([-3.0685, -4.4794, -4.3441, -5.1241, -5.2118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9845, device='cuda:0', dtype=torch.float64)
tensor([-3.0704, -4.4699, -4.3472, -5.1519, -5.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1124, device='cuda:0', dtype=torch.float64)
tensor([-3.0717, -4.4632, -4.3484, -5.1648, -5.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0164, device='cuda:0', dtype=torch.float64)
tensor([-3.0713, -4.4582, -4.3497, -5.1750, -5.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9273, device='cuda:0', dtype=torch.float64)
tensor([-3.0692, -4.4553, -4.3511, -5.1833, -5.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9864, device='cuda:0', dtype=torch.float64)
tensor([-3.0676, -4.4541, -4.3520, -5.1832, -5.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1773, device='cuda:0', dtype=torch.float64)
tensor([-3.0723, -4.4628, -4.3495, -5.1835, -5.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0876, device='cuda:0', dtype=torch.float64)
tensor([-3.0771, -4.4662, -4.3469, -5.1811, -5.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0182, device='cuda:0', dtype=torch.float64)
tensor([-3.0841, -4.4699, -4.3408, -5.1816, -5.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2162, device='cuda:0', dtype=torch.float64)
tensor([-3.0920, -4.4750, -4.3408, -5.1810, -5.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0806, device='cuda:0', dtype=torch.float64)
tensor([-3.0976, -4.4828, -4.3398, -5.1771, -5.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0471, device='cuda:0', dtype=torch.float64)
tensor([-3.1037, -4.4944, -4.3408, -5.1709, -5.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9949, device='cuda:0', dtype=torch.float64)
tensor([-3.1148, -4.5071, -4.3372, -5.1630, -5.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1636, device='cuda:0', dtype=torch.float64)
tensor([-3.1252, -4.5181, -4.3343, -5.1495, -5.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1154, device='cuda:0', dtype=torch.float64)
tensor([-3.1344, -4.5331, -4.3341, -5.1389, -5.1911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0778, device='cuda:0', dtype=torch.float64)
tensor([-3.1410, -4.5410, -4.3396, -5.1335, -5.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2324, device='cuda:0', dtype=torch.float64)
tensor([-3.1471, -4.5399, -4.3445, -5.1304, -5.2050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0692, device='cuda:0', dtype=torch.float64)
tensor([-3.1538, -4.5386, -4.3536, -5.1306, -5.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1943, device='cuda:0', dtype=torch.float64)
tensor([-3.1552, -4.5385, -4.3637, -5.1246, -5.2191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1045, device='cuda:0', dtype=torch.float64)
tensor([-3.1634, -4.5438, -4.3690, -5.1141, -5.2231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([-3.1674, -4.5479, -4.3799, -5.1081, -5.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0713, device='cuda:0', dtype=torch.float64)
tensor([-3.1693, -4.5484, -4.3895, -5.1096, -5.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0749, device='cuda:0', dtype=torch.float64)
tensor([-3.1678, -4.5470, -4.4013, -5.1138, -5.2265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9911, device='cuda:0', dtype=torch.float64)
tensor([-3.1633, -4.5476, -4.4109, -5.1183, -5.2291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2107, device='cuda:0', dtype=torch.float64)
tensor([-3.1606, -4.5492, -4.4203, -5.1225, -5.2343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9988, device='cuda:0', dtype=torch.float64)
tensor([-3.1570, -4.5501, -4.4281, -5.1281, -5.2358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0668, device='cuda:0', dtype=torch.float64)
tensor([-3.1536, -4.5480, -4.4330, -5.1368, -5.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9968, device='cuda:0', dtype=torch.float64)
tensor([-3.1538, -4.5467, -4.4332, -5.1401, -5.2336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2811, device='cuda:0', dtype=torch.float64)
tensor([-3.1571, -4.5510, -4.4304, -5.1485, -5.2341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0717, device='cuda:0', dtype=torch.float64)
tensor([-3.1619, -4.5575, -4.4233, -5.1628, -5.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0311, device='cuda:0', dtype=torch.float64)
tensor([-3.1682, -4.5661, -4.4193, -5.1749, -5.2269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0063, device='cuda:0', dtype=torch.float64)
tensor([-3.1724, -4.5759, -4.4180, -5.1888, -5.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0807, device='cuda:0', dtype=torch.float64)
tensor([-3.1766, -4.5868, -4.4149, -5.1898, -5.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0180, device='cuda:0', dtype=torch.float64)
tensor([-3.1810, -4.5933, -4.4094, -5.1927, -5.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9622, device='cuda:0', dtype=torch.float64)
tensor([-3.1882, -4.5954, -4.4032, -5.1924, -5.1989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1047, device='cuda:0', dtype=torch.float64)
tensor([-3.1954, -4.5957, -4.3971, -5.1925, -5.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9856, device='cuda:0', dtype=torch.float64)
tensor([-3.2092, -4.5995, -4.3886, -5.1920, -5.1959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9890, device='cuda:0', dtype=torch.float64)
tensor([-3.2259, -4.6005, -4.3760, -5.1871, -5.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1168, device='cuda:0', dtype=torch.float64)
tensor([-3.2394, -4.5918, -4.3638, -5.1853, -5.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([-3.2523, -4.5896, -4.3525, -5.1770, -5.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0037, device='cuda:0', dtype=torch.float64)
tensor([-3.2626, -4.5910, -4.3443, -5.1747, -5.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0062, device='cuda:0', dtype=torch.float64)
tensor([-3.2706, -4.5909, -4.3334, -5.1708, -5.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1280, device='cuda:0', dtype=torch.float64)
tensor([-3.2725, -4.5935, -4.3263, -5.1785, -5.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0516, device='cuda:0', dtype=torch.float64)
tensor([-3.2742, -4.5976, -4.3278, -5.1827, -5.2262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([-3.2675, -4.5966, -4.3327, -5.1841, -5.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2025, device='cuda:0', dtype=torch.float64)
tensor([-3.2661, -4.5906, -4.3349, -5.1856, -5.2420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2119, device='cuda:0', dtype=torch.float64)
tensor([-3.2639, -4.5864, -4.3405, -5.1930, -5.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0903, device='cuda:0', dtype=torch.float64)
tensor([-3.2627, -4.5883, -4.3457, -5.1962, -5.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0935, device='cuda:0', dtype=torch.float64)
tensor([-3.2629, -4.5948, -4.3448, -5.1977, -5.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0699, device='cuda:0', dtype=torch.float64)
tensor([-3.2603, -4.6064, -4.3447, -5.1928, -5.2752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0571, device='cuda:0', dtype=torch.float64)
tensor([-3.2585, -4.6201, -4.3410, -5.1860, -5.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9503, device='cuda:0', dtype=torch.float64)
tensor([-3.2563, -4.6297, -4.3371, -5.1798, -5.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9538, device='cuda:0', dtype=torch.float64)
tensor([-3.2521, -4.6386, -4.3315, -5.1775, -5.2983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0500, device='cuda:0', dtype=torch.float64)
tensor([-3.2481, -4.6469, -4.3265, -5.1729, -5.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9275, device='cuda:0', dtype=torch.float64)
tensor([-3.2426, -4.6581, -4.3228, -5.1663, -5.3134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0419, device='cuda:0', dtype=torch.float64)
tensor([-3.2378, -4.6641, -4.3210, -5.1610, -5.3195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9147, device='cuda:0', dtype=torch.float64)
tensor([-3.2350, -4.6684, -4.3190, -5.1560, -5.3233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-3.2300, -4.6659, -4.3211, -5.1503, -5.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-3.2249, -4.6641, -4.3241, -5.1503, -5.3257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2012, device='cuda:0', dtype=torch.float64)
tensor([-3.2192, -4.6597, -4.3262, -5.1550, -5.3247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0492, device='cuda:0', dtype=torch.float64)
tensor([-3.2122, -4.6575, -4.3315, -5.1575, -5.3261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1583, device='cuda:0', dtype=torch.float64)
tensor([-3.2041, -4.6458, -4.3365, -5.1656, -5.3219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0901, device='cuda:0', dtype=torch.float64)
tensor([-3.1986, -4.6339, -4.3413, -5.1674, -5.3158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-3.1968, -4.6224, -4.3465, -5.1724, -5.3133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0541, device='cuda:0', dtype=torch.float64)
tensor([-3.1965, -4.6081, -4.3490, -5.1776, -5.3094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9970, device='cuda:0', dtype=torch.float64)
tensor([-3.2021, -4.5923, -4.3504, -5.1839, -5.3055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9050, device='cuda:0', dtype=torch.float64)
tensor([-3.2056, -4.5744, -4.3521, -5.1949, -5.3040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-3.2102, -4.5632, -4.3496, -5.1992, -5.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9832, device='cuda:0', dtype=torch.float64)
tensor([-3.2174, -4.5546, -4.3460, -5.2030, -5.2931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1674, device='cuda:0', dtype=torch.float64)
tensor([-3.2227, -4.5451, -4.3424, -5.2129, -5.2884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1187, device='cuda:0', dtype=torch.float64)
tensor([-3.2336, -4.5397, -4.3397, -5.2196, -5.2860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9967, device='cuda:0', dtype=torch.float64)
tensor([-3.2449, -4.5345, -4.3412, -5.2300, -5.2836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0396, device='cuda:0', dtype=torch.float64)
tensor([-3.2492, -4.5244, -4.3443, -5.2383, -5.2841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9848, device='cuda:0', dtype=torch.float64)
tensor([-3.2544, -4.5203, -4.3511, -5.2426, -5.2863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0800, device='cuda:0', dtype=torch.float64)
tensor([-3.2574, -4.5149, -4.3574, -5.2417, -5.2852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2049, device='cuda:0', dtype=torch.float64)
tensor([-3.2581, -4.5103, -4.3661, -5.2483, -5.2854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0147, device='cuda:0', dtype=torch.float64)
tensor([-3.2607, -4.5073, -4.3721, -5.2530, -5.2900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1717, device='cuda:0', dtype=torch.float64)
tensor([-3.2664, -4.5105, -4.3763, -5.2586, -5.2970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8356, device='cuda:0', dtype=torch.float64)
tensor([-3.2682, -4.5074, -4.3802, -5.2617, -5.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9856, device='cuda:0', dtype=torch.float64)
tensor([-3.2711, -4.5082, -4.3867, -5.2651, -5.3068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9966, device='cuda:0', dtype=torch.float64)
tensor([-3.2760, -4.5060, -4.3936, -5.2687, -5.3108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-3.2795, -4.5049, -4.3965, -5.2737, -5.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1812, device='cuda:0', dtype=torch.float64)
tensor([-3.2861, -4.5058, -4.3998, -5.2761, -5.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1108, device='cuda:0', dtype=torch.float64)
tensor([-3.2917, -4.5084, -4.4062, -5.2787, -5.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1795, device='cuda:0', dtype=torch.float64)
tensor([-3.2947, -4.5120, -4.4118, -5.2834, -5.3397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0643, device='cuda:0', dtype=torch.float64)
tensor([-3.2972, -4.5155, -4.4143, -5.2818, -5.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9716, device='cuda:0', dtype=torch.float64)
tensor([-3.3021, -4.5200, -4.4123, -5.2736, -5.3540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0191, device='cuda:0', dtype=torch.float64)
tensor([-3.3087, -4.5306, -4.4072, -5.2636, -5.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8657, device='cuda:0', dtype=torch.float64)
tensor([-3.3182, -4.5394, -4.3970, -5.2479, -5.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1157, device='cuda:0', dtype=torch.float64)
tensor([-3.3242, -4.5444, -4.3869, -5.2347, -5.3907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-3.3374, -4.5579, -4.3791, -5.2237, -5.3985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1301, device='cuda:0', dtype=torch.float64)
tensor([-3.3530, -4.5722, -4.3777, -5.2083, -5.4132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0292, device='cuda:0', dtype=torch.float64)
tensor([-3.3716, -4.5896, -4.3797, -5.1905, -5.4237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8578, device='cuda:0', dtype=torch.float64)
tensor([-3.3918, -4.6009, -4.3770, -5.1770, -5.4311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-3.4090, -4.6088, -4.3766, -5.1698, -5.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1615, device='cuda:0', dtype=torch.float64)
tensor([-3.4232, -4.6161, -4.3785, -5.1673, -5.4438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0452, device='cuda:0', dtype=torch.float64)
tensor([-3.4363, -4.6205, -4.3817, -5.1726, -5.4536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9986, device='cuda:0', dtype=torch.float64)
tensor([-3.4496, -4.6350, -4.3829, -5.1793, -5.4650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2665, device='cuda:0', dtype=torch.float64)
tensor([-3.4582, -4.6443, -4.3838, -5.1842, -5.4730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0370, device='cuda:0', dtype=torch.float64)
tensor([-3.4615, -4.6507, -4.3865, -5.1914, -5.4791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0227, device='cuda:0', dtype=torch.float64)
tensor([-3.4616, -4.6565, -4.3913, -5.2010, -5.4870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9258, device='cuda:0', dtype=torch.float64)
tensor([-3.4582, -4.6627, -4.3981, -5.2169, -5.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0252, device='cuda:0', dtype=torch.float64)
tensor([-3.4572, -4.6706, -4.4054, -5.2278, -5.5019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0623, device='cuda:0', dtype=torch.float64)
tensor([-3.4550, -4.6811, -4.4098, -5.2354, -5.5029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-3.4493, -4.6893, -4.4191, -5.2471, -5.5049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9977, device='cuda:0', dtype=torch.float64)
tensor([-3.4443, -4.6984, -4.4261, -5.2511, -5.5039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3296, device='cuda:0', dtype=torch.float64)
tensor([-3.4404, -4.7124, -4.4350, -5.2674, -5.5026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3096, device='cuda:0', dtype=torch.float64)
tensor([-3.4385, -4.7278, -4.4413, -5.2882, -5.4957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0041, device='cuda:0', dtype=torch.float64)
tensor([-3.4354, -4.7380, -4.4462, -5.3105, -5.4884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([-3.4300, -4.7469, -4.4548, -5.3324, -5.4802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1140, device='cuda:0', dtype=torch.float64)
tensor([-3.4331, -4.7541, -4.4626, -5.3512, -5.4696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9170, device='cuda:0', dtype=torch.float64)
tensor([-3.4409, -4.7592, -4.4699, -5.3675, -5.4607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1119, device='cuda:0', dtype=torch.float64)
tensor([-3.4493, -4.7635, -4.4782, -5.3855, -5.4543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0445, device='cuda:0', dtype=torch.float64)
tensor([-3.4606, -4.7612, -4.4851, -5.4002, -5.4490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9768, device='cuda:0', dtype=torch.float64)
tensor([-3.4758, -4.7586, -4.4924, -5.4107, -5.4425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0237, device='cuda:0', dtype=torch.float64)
tensor([-3.4936, -4.7586, -4.4952, -5.4169, -5.4380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0971, device='cuda:0', dtype=torch.float64)
tensor([-3.5140, -4.7601, -4.4954, -5.4190, -5.4344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0466, device='cuda:0', dtype=torch.float64)
tensor([-3.5306, -4.7595, -4.4982, -5.4150, -5.4338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0911, device='cuda:0', dtype=torch.float64)
tensor([-3.5491, -4.7642, -4.4992, -5.4080, -5.4351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1210, device='cuda:0', dtype=torch.float64)
tensor([-3.5584, -4.7649, -4.5044, -5.4056, -5.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-3.5642, -4.7606, -4.5032, -5.3997, -5.4475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1128, device='cuda:0', dtype=torch.float64)
tensor([-3.5662, -4.7612, -4.5031, -5.3967, -5.4586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-3.5674, -4.7592, -4.5037, -5.3997, -5.4701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0412, device='cuda:0', dtype=torch.float64)
tensor([-3.5654, -4.7566, -4.5022, -5.4053, -5.4801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2168, device='cuda:0', dtype=torch.float64)
tensor([-3.5569, -4.7550, -4.4990, -5.4050, -5.4850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1153, device='cuda:0', dtype=torch.float64)
tensor([-3.5519, -4.7537, -4.4948, -5.4079, -5.4924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9780, device='cuda:0', dtype=torch.float64)
tensor([-3.5465, -4.7512, -4.4936, -5.4163, -5.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9446, device='cuda:0', dtype=torch.float64)
tensor([-3.5377, -4.7471, -4.4934, -5.4233, -5.5087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0089, device='cuda:0', dtype=torch.float64)
tensor([-3.5391, -4.7460, -4.4905, -5.4264, -5.5186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1060, device='cuda:0', dtype=torch.float64)
tensor([-3.5450, -4.7510, -4.4871, -5.4272, -5.5251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9800, device='cuda:0', dtype=torch.float64)
tensor([-3.5485, -4.7584, -4.4815, -5.4419, -5.5306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7999, device='cuda:0', dtype=torch.float64)
tensor([-3.5507, -4.7624, -4.4773, -5.4559, -5.5363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0879, device='cuda:0', dtype=torch.float64)
tensor([-3.5515, -4.7654, -4.4749, -5.4679, -5.5396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9639, device='cuda:0', dtype=torch.float64)
tensor([-3.5503, -4.7646, -4.4734, -5.4767, -5.5383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-3.5509, -4.7658, -4.4681, -5.4821, -5.5399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1138, device='cuda:0', dtype=torch.float64)
tensor([-3.5545, -4.7692, -4.4621, -5.4947, -5.5449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0153, device='cuda:0', dtype=torch.float64)
tensor([-3.5551, -4.7740, -4.4605, -5.5048, -5.5489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0767, device='cuda:0', dtype=torch.float64)
tensor([-3.5575, -4.7735, -4.4687, -5.5220, -5.5532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9909, device='cuda:0', dtype=torch.float64)
tensor([-3.5580, -4.7734, -4.4796, -5.5387, -5.5568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1161, device='cuda:0', dtype=torch.float64)
tensor([-3.5533, -4.7723, -4.4910, -5.5559, -5.5624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9259, device='cuda:0', dtype=torch.float64)
tensor([-3.5480, -4.7707, -4.4997, -5.5699, -5.5662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9665, device='cuda:0', dtype=torch.float64)
tensor([-3.5413, -4.7749, -4.5065, -5.5888, -5.5654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9783, device='cuda:0', dtype=torch.float64)
tensor([-3.5333, -4.7794, -4.5145, -5.6144, -5.5658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-3.5314, -4.7873, -4.5175, -5.6395, -5.5597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0752, device='cuda:0', dtype=torch.float64)
tensor([-3.5289, -4.7910, -4.5205, -5.6559, -5.5593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1167, device='cuda:0', dtype=torch.float64)
tensor([-3.5295, -4.8037, -4.5196, -5.6670, -5.5604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8544, device='cuda:0', dtype=torch.float64)
tensor([-3.5308, -4.8196, -4.5180, -5.6743, -5.5625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0247, device='cuda:0', dtype=torch.float64)
tensor([-3.5332, -4.8383, -4.5254, -5.6837, -5.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1586, device='cuda:0', dtype=torch.float64)
tensor([-3.5332, -4.8572, -4.5308, -5.6869, -5.5741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-3.5361, -4.8731, -4.5367, -5.6860, -5.5801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9799, device='cuda:0', dtype=torch.float64)
tensor([-3.5427, -4.8868, -4.5441, -5.6933, -5.5913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0250, device='cuda:0', dtype=torch.float64)
tensor([-3.5470, -4.9015, -4.5510, -5.6976, -5.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9902, device='cuda:0', dtype=torch.float64)
tensor([-3.5550, -4.9157, -4.5577, -5.6904, -5.6160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8068, device='cuda:0', dtype=torch.float64)
tensor([-3.5609, -4.9302, -4.5653, -5.6830, -5.6263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-3.5684, -4.9520, -4.5674, -5.6756, -5.6313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0509, device='cuda:0', dtype=torch.float64)
tensor([-3.5770, -4.9717, -4.5657, -5.6704, -5.6326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-3.5875, -4.9915, -4.5668, -5.6696, -5.6423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1136, device='cuda:0', dtype=torch.float64)
tensor([-3.6002, -5.0073, -4.5705, -5.6609, -5.6536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9021, device='cuda:0', dtype=torch.float64)
tensor([-3.6118, -5.0173, -4.5735, -5.6486, -5.6628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9656, device='cuda:0', dtype=torch.float64)
tensor([-3.6260, -5.0267, -4.5686, -5.6349, -5.6728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1845, device='cuda:0', dtype=torch.float64)
tensor([-3.6456, -5.0333, -4.5609, -5.6188, -5.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1400, device='cuda:0', dtype=torch.float64)
tensor([-3.6619, -5.0273, -4.5541, -5.6098, -5.6847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2235, device='cuda:0', dtype=torch.float64)
tensor([-3.6752, -5.0242, -4.5516, -5.5951, -5.6895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9412, device='cuda:0', dtype=torch.float64)
tensor([-3.6838, -5.0215, -4.5486, -5.5780, -5.6887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9622, device='cuda:0', dtype=torch.float64)
tensor([-3.6965, -5.0127, -4.5459, -5.5584, -5.6855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-3.7140, -5.0035, -4.5450, -5.5469, -5.6894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1222, device='cuda:0', dtype=torch.float64)
tensor([-3.7307, -5.0001, -4.5455, -5.5402, -5.6929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0426, device='cuda:0', dtype=torch.float64)
tensor([-3.7508, -4.9977, -4.5500, -5.5391, -5.6997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9589, device='cuda:0', dtype=torch.float64)
tensor([-3.7735, -5.0020, -4.5563, -5.5402, -5.7118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3804, device='cuda:0', dtype=torch.float64)
tensor([-3.7931, -5.0059, -4.5639, -5.5443, -5.7254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8978, device='cuda:0', dtype=torch.float64)
tensor([-3.8076, -5.0097, -4.5686, -5.5453, -5.7337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1181, device='cuda:0', dtype=torch.float64)
tensor([-3.8198, -5.0097, -4.5786, -5.5380, -5.7468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9844, device='cuda:0', dtype=torch.float64)
tensor([-3.8300, -5.0094, -4.5947, -5.5329, -5.7630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8681, device='cuda:0', dtype=torch.float64)
tensor([-3.8407, -5.0132, -4.6125, -5.5338, -5.7793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1253, device='cuda:0', dtype=torch.float64)
tensor([-3.8519, -5.0119, -4.6300, -5.5306, -5.7969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2535, device='cuda:0', dtype=torch.float64)
tensor([-3.8598, -5.0118, -4.6497, -5.5276, -5.8100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1993, device='cuda:0', dtype=torch.float64)
tensor([-3.8648, -5.0118, -4.6704, -5.5195, -5.8207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1080, device='cuda:0', dtype=torch.float64)
tensor([-3.8737, -5.0094, -4.6950, -5.5281, -5.8353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9128, device='cuda:0', dtype=torch.float64)
tensor([-3.8827, -5.0055, -4.7224, -5.5398, -5.8494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-3.8933, -5.0007, -4.7473, -5.5489, -5.8619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0013, device='cuda:0', dtype=torch.float64)
tensor([-3.9018, -4.9969, -4.7659, -5.5458, -5.8716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9127, device='cuda:0', dtype=torch.float64)
tensor([-3.9107, -4.9982, -4.7838, -5.5447, -5.8768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0052, device='cuda:0', dtype=torch.float64)
tensor([-3.9234, -5.0040, -4.7964, -5.5363, -5.8836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1073, device='cuda:0', dtype=torch.float64)
tensor([-3.9316, -5.0074, -4.8125, -5.5241, -5.8870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0039, device='cuda:0', dtype=torch.float64)
tensor([-3.9436, -5.0151, -4.8249, -5.5028, -5.8951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0182, device='cuda:0', dtype=torch.float64)
tensor([-3.9580, -5.0223, -4.8369, -5.4819, -5.8992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0424, device='cuda:0', dtype=torch.float64)
tensor([-3.9778, -5.0337, -4.8510, -5.4701, -5.9124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9956, device='cuda:0', dtype=torch.float64)
tensor([-3.9904, -5.0437, -4.8706, -5.4646, -5.9315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8465, device='cuda:0', dtype=torch.float64)
tensor([-3.9994, -5.0531, -4.8922, -5.4663, -5.9500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9311, device='cuda:0', dtype=torch.float64)
tensor([-4.0067, -5.0639, -4.9040, -5.4678, -5.9674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9704, device='cuda:0', dtype=torch.float64)
tensor([-4.0095, -5.0769, -4.9173, -5.4710, -5.9883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-4.0122, -5.0849, -4.9359, -5.4723, -6.0093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0552, device='cuda:0', dtype=torch.float64)
tensor([-4.0198, -5.0919, -4.9536, -5.4816, -6.0257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0196, device='cuda:0', dtype=torch.float64)
tensor([-4.0324, -5.1008, -4.9672, -5.4866, -6.0429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0364, device='cuda:0', dtype=torch.float64)
tensor([-4.0421, -5.1117, -4.9816, -5.4990, -6.0576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0568, device='cuda:0', dtype=torch.float64)
tensor([-4.0563, -5.1230, -4.9931, -5.5133, -6.0699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2097, device='cuda:0', dtype=torch.float64)
tensor([-4.0712, -5.1379, -5.0068, -5.5296, -6.0897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1151, device='cuda:0', dtype=torch.float64)
tensor([-4.0840, -5.1555, -5.0116, -5.5470, -6.1106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1731, device='cuda:0', dtype=torch.float64)
tensor([-4.0979, -5.1717, -5.0174, -5.5779, -6.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0509, device='cuda:0', dtype=torch.float64)
tensor([-4.1113, -5.1900, -5.0212, -5.6020, -6.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2595, device='cuda:0', dtype=torch.float64)
tensor([-4.1228, -5.2060, -5.0243, -5.6281, -6.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9108, device='cuda:0', dtype=torch.float64)
tensor([-4.1390, -5.2200, -5.0250, -5.6535, -6.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0157, device='cuda:0', dtype=torch.float64)
tensor([-4.1493, -5.2347, -5.0221, -5.6747, -6.1851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9796, device='cuda:0', dtype=torch.float64)
tensor([-4.1570, -5.2469, -5.0232, -5.6917, -6.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1306, device='cuda:0', dtype=torch.float64)
tensor([-4.1614, -5.2643, -5.0302, -5.7062, -6.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([-4.1634, -5.2779, -5.0403, -5.7200, -6.2168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9371, device='cuda:0', dtype=torch.float64)
tensor([-4.1652, -5.2904, -5.0542, -5.7371, -6.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-4.1714, -5.3054, -5.0716, -5.7653, -6.2358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-4.1792, -5.3236, -5.0987, -5.7905, -6.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-4.1781, -5.3459, -5.1331, -5.8164, -6.2455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1199, device='cuda:0', dtype=torch.float64)
tensor([-4.1780, -5.3671, -5.1641, -5.8397, -6.2524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0157, device='cuda:0', dtype=torch.float64)
tensor([-4.1785, -5.3890, -5.1986, -5.8635, -6.2540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0644, device='cuda:0', dtype=torch.float64)
tensor([-4.1774, -5.4116, -5.2340, -5.8950, -6.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0000, device='cuda:0', dtype=torch.float64)
tensor([-4.1809, -5.4311, -5.2634, -5.9261, -6.2599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0946, device='cuda:0', dtype=torch.float64)
tensor([-4.1881, -5.4552, -5.2951, -5.9632, -6.2649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9536, device='cuda:0', dtype=torch.float64)
tensor([-4.1947, -5.4812, -5.3247, -6.0018, -6.2712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9532, device='cuda:0', dtype=torch.float64)
tensor([-4.2048, -5.5034, -5.3530, -6.0398, -6.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2494, device='cuda:0', dtype=torch.float64)
tensor([-4.2143, -5.5231, -5.3776, -6.0805, -6.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2044, device='cuda:0', dtype=torch.float64)
tensor([-4.2241, -5.5453, -5.3958, -6.1209, -6.2938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9812, device='cuda:0', dtype=torch.float64)
tensor([-4.2365, -5.5692, -5.4134, -6.1609, -6.3083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-4.2478, -5.5930, -5.4301, -6.2007, -6.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8553, device='cuda:0', dtype=torch.float64)
tensor([-4.2604, -5.6100, -5.4480, -6.2377, -6.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1369, device='cuda:0', dtype=torch.float64)
tensor([-4.2745, -5.6278, -5.4587, -6.2583, -6.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2091, device='cuda:0', dtype=torch.float64)
tensor([-4.2896, -5.6482, -5.4689, -6.2768, -6.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1086, device='cuda:0', dtype=torch.float64)
tensor([-4.3085, -5.6690, -5.4815, -6.2937, -6.3509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9545, device='cuda:0', dtype=torch.float64)
tensor([-4.3255, -5.6866, -5.4901, -6.3153, -6.3599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0630, device='cuda:0', dtype=torch.float64)
tensor([-4.3425, -5.6912, -5.4911, -6.3363, -6.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9918, device='cuda:0', dtype=torch.float64)
tensor([-4.3648, -5.6918, -5.4961, -6.3505, -6.3879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8312, device='cuda:0', dtype=torch.float64)
tensor([-4.3848, -5.6972, -5.5011, -6.3568, -6.4049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-4.4044, -5.7023, -5.5114, -6.3613, -6.4245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([-4.4298, -5.7174, -5.5172, -6.3656, -6.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9962, device='cuda:0', dtype=torch.float64)
tensor([-4.4544, -5.7309, -5.5266, -6.3736, -6.4672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0784, device='cuda:0', dtype=torch.float64)
tensor([-4.4843, -5.7388, -5.5365, -6.3731, -6.4890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0174, device='cuda:0', dtype=torch.float64)
tensor([-4.5133, -5.7506, -5.5392, -6.3757, -6.5011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0479, device='cuda:0', dtype=torch.float64)
tensor([-4.5449, -5.7639, -5.5481, -6.3885, -6.5179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0696, device='cuda:0', dtype=torch.float64)
tensor([-4.5745, -5.7836, -5.5549, -6.4152, -6.5424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9142, device='cuda:0', dtype=torch.float64)
tensor([-4.6041, -5.8095, -5.5637, -6.4411, -6.5691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9779, device='cuda:0', dtype=torch.float64)
tensor([-4.6297, -5.8318, -5.5739, -6.4716, -6.5944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8017, device='cuda:0', dtype=torch.float64)
tensor([-4.6537, -5.8538, -5.5763, -6.5019, -6.6161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([-4.6772, -5.8832, -5.5887, -6.5400, -6.6424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8327, device='cuda:0', dtype=torch.float64)
tensor([-4.6986, -5.9130, -5.5946, -6.5696, -6.6702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1386, device='cuda:0', dtype=torch.float64)
tensor([-4.7212, -5.9376, -5.6127, -6.6035, -6.7001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0620, device='cuda:0', dtype=torch.float64)
tensor([-4.7470, -5.9706, -5.6348, -6.6315, -6.7422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0494, device='cuda:0', dtype=torch.float64)
tensor([-4.7649, -5.9971, -5.6651, -6.6478, -6.7866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9046, device='cuda:0', dtype=torch.float64)
tensor([-4.7837, -6.0253, -5.6977, -6.6725, -6.8348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1689, device='cuda:0', dtype=torch.float64)
tensor([-4.8068, -6.0594, -5.7367, -6.7030, -6.8853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9581, device='cuda:0', dtype=torch.float64)
tensor([-4.8364, -6.0927, -5.7607, -6.7197, -6.9294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9894, device='cuda:0', dtype=torch.float64)
tensor([-4.8648, -6.1201, -5.7833, -6.7336, -6.9737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9685, device='cuda:0', dtype=torch.float64)
tensor([-4.8921, -6.1470, -5.8101, -6.7467, -7.0160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([-4.9301, -6.1783, -5.8378, -6.7618, -7.0597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9823, device='cuda:0', dtype=torch.float64)
tensor([-4.9710, -6.2137, -5.8658, -6.7872, -7.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0449, device='cuda:0', dtype=torch.float64)
tensor([-5.0136, -6.2569, -5.8885, -6.8090, -7.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1191, device='cuda:0', dtype=torch.float64)
tensor([-5.0621, -6.3009, -5.9087, -6.8396, -7.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([-5.1115, -6.3468, -5.9351, -6.8900, -7.2594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9473, device='cuda:0', dtype=torch.float64)
tensor([-5.1545, -6.3872, -5.9638, -6.9392, -7.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9116, device='cuda:0', dtype=torch.float64)
tensor([-5.1936, -6.4261, -5.9952, -6.9858, -7.3729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0986, device='cuda:0', dtype=torch.float64)
tensor([-5.2328, -6.4572, -6.0271, -7.0291, -7.4366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9399, device='cuda:0', dtype=torch.float64)
tensor([-5.2732, -6.4876, -6.0520, -7.0677, -7.4981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9227, device='cuda:0', dtype=torch.float64)
tensor([-5.3156, -6.5141, -6.0742, -7.1015, -7.5598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-5.3598, -6.5379, -6.1007, -7.1348, -7.6245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9604, device='cuda:0', dtype=torch.float64)
tensor([-5.4015, -6.5687, -6.1319, -7.1775, -7.6899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0037, device='cuda:0', dtype=torch.float64)
tensor([-5.4380, -6.5952, -6.1643, -7.2161, -7.7580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8429, device='cuda:0', dtype=torch.float64)
tensor([-5.4804, -6.6247, -6.1985, -7.2551, -7.8223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([-5.5356, -6.6663, -6.2388, -7.2933, -7.8916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8657, device='cuda:0', dtype=torch.float64)
tensor([-5.5992, -6.7193, -6.2819, -7.3365, -7.9586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8260, device='cuda:0', dtype=torch.float64)
tensor([-5.6634, -6.7745, -6.3323, -7.3828, -8.0296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9026, device='cuda:0', dtype=torch.float64)
tensor([-5.7358, -6.8292, -6.3841, -7.4386, -8.1081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8786, device='cuda:0', dtype=torch.float64)
tensor([-5.8103, -6.8832, -6.4351, -7.4921, -8.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-5.8884, -6.9392, -6.4890, -7.5484, -8.2800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9733, device='cuda:0', dtype=torch.float64)
tensor([-5.9631, -6.9941, -6.5439, -7.5950, -8.3731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9340, device='cuda:0', dtype=torch.float64)
tensor([-6.0350, -7.0372, -6.5891, -7.6261, -8.4608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-6.1121, -7.0827, -6.6284, -7.6719, -8.5513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0193, device='cuda:0', dtype=torch.float64)
tensor([-6.1869, -7.1263, -6.6847, -7.7168, -8.6313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-6.2698, -7.1654, -6.7316, -7.7446, -8.7215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-6.3463, -7.2018, -6.7805, -7.7789, -8.8094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9315, device='cuda:0', dtype=torch.float64)
tensor([-6.4238, -7.2361, -6.8445, -7.8171, -8.9021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9278, device='cuda:0', dtype=torch.float64)
tensor([-6.5033, -7.2681, -6.9019, -7.8462, -8.9871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9410, device='cuda:0', dtype=torch.float64)
tensor([-6.5747, -7.3142, -6.9487, -7.8833, -9.0654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9541, device='cuda:0', dtype=torch.float64)
tensor([-6.6443, -7.3716, -7.0121, -7.9269, -9.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1339, device='cuda:0', dtype=torch.float64)
tensor([-6.6887, -7.4125, -7.0787, -7.9569, -9.2127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9117, device='cuda:0', dtype=torch.float64)
tensor([-6.7557, -7.4569, -7.1559, -8.0041, -9.2802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8270, device='cuda:0', dtype=torch.float64)
tensor([-6.8244, -7.5003, -7.2401, -8.0624, -9.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9274, device='cuda:0', dtype=torch.float64)
tensor([-6.9196, -7.5331, -7.3126, -8.1277, -9.4274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8935, device='cuda:0', dtype=torch.float64)
tensor([-7.0049, -7.5558, -7.3791, -8.1979, -9.4970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9802, device='cuda:0', dtype=torch.float64)
tensor([-7.1189, -7.5932, -7.4432, -8.2733, -9.5609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([-7.2230, -7.6360, -7.4834, -8.3477, -9.6321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9599, device='cuda:0', dtype=torch.float64)
tensor([-7.3178, -7.6892, -7.5289, -8.4194, -9.6909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9005, device='cuda:0', dtype=torch.float64)
tensor([-7.4232, -7.7472, -7.5658, -8.5004, -9.7573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8848, device='cuda:0', dtype=torch.float64)
tensor([-7.5233, -7.7994, -7.6016, -8.5846, -9.8222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8088, device='cuda:0', dtype=torch.float64)
tensor([-7.6263, -7.8530, -7.6396, -8.6486, -9.8718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9535, device='cuda:0', dtype=torch.float64)
tensor([-7.7184, -7.9099, -7.6778, -8.7172, -9.9264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0117, device='cuda:0', dtype=torch.float64)
tensor([-7.8152, -7.9603, -7.7266, -8.7761, -9.9701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0089, device='cuda:0', dtype=torch.float64)
tensor([ -7.8937,  -8.0220,  -7.7876,  -8.8522, -10.0361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9972, device='cuda:0', dtype=torch.float64)
tensor([ -7.9570,  -8.0875,  -7.8398,  -8.9278, -10.1070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8638, device='cuda:0', dtype=torch.float64)
tensor([ -8.0241,  -8.1553,  -7.9018,  -9.0206, -10.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([ -8.0870,  -8.2164,  -7.9747,  -9.1058, -10.2624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9345, device='cuda:0', dtype=torch.float64)
tensor([ -8.1224,  -8.2888,  -8.0705,  -9.1818, -10.3288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9656, device='cuda:0', dtype=torch.float64)
tensor([ -8.1649,  -8.3596,  -8.1626,  -9.2579, -10.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1849, device='cuda:0', dtype=torch.float64)
tensor([ -8.2184,  -8.4371,  -8.2454,  -9.3285, -10.4612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0097, device='cuda:0', dtype=torch.float64)
tensor([ -8.2727,  -8.5113,  -8.3424,  -9.4024, -10.5260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0221, device='cuda:0', dtype=torch.float64)
tensor([ -8.3079,  -8.5772,  -8.4355,  -9.4823, -10.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9478, device='cuda:0', dtype=torch.float64)
tensor([ -8.3470,  -8.6350,  -8.5274,  -9.5604, -10.6286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9349, device='cuda:0', dtype=torch.float64)
tensor([ -8.3630,  -8.6819,  -8.6150,  -9.6289, -10.6752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9373, device='cuda:0', dtype=torch.float64)
tensor([ -8.3817,  -8.7215,  -8.6870,  -9.6993, -10.7223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([ -8.3976,  -8.7481,  -8.7588,  -9.7576, -10.7531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9847, device='cuda:0', dtype=torch.float64)
tensor([ -8.4141,  -8.7884,  -8.8397,  -9.8202, -10.7977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8792, device='cuda:0', dtype=torch.float64)
tensor([ -8.4302,  -8.8247,  -8.9221,  -9.8864, -10.8520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0596, device='cuda:0', dtype=torch.float64)
tensor([ -8.4180,  -8.8669,  -9.0154,  -9.9573, -10.9118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8180, device='cuda:0', dtype=torch.float64)
tensor([ -8.3983,  -8.9157,  -9.1111, -10.0307, -10.9688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8481, device='cuda:0', dtype=torch.float64)
tensor([ -8.4040,  -8.9525,  -9.2036, -10.0974, -11.0138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9485, device='cuda:0', dtype=torch.float64)
tensor([ -8.4109,  -8.9875,  -9.3017, -10.1794, -11.0587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1551, device='cuda:0', dtype=torch.float64)
tensor([ -8.4341,  -9.0285,  -9.3925, -10.2558, -11.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7977, device='cuda:0', dtype=torch.float64)
tensor([ -8.4340,  -9.0763,  -9.4895, -10.3327, -11.1536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0327, device='cuda:0', dtype=torch.float64)
tensor([ -8.4422,  -9.1245,  -9.6080, -10.4242, -11.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([ -8.4319,  -9.1687,  -9.6945, -10.4994, -11.2985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9105, device='cuda:0', dtype=torch.float64)
tensor([ -8.4444,  -9.2036,  -9.7910, -10.5544, -11.3648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0170, device='cuda:0', dtype=torch.float64)
tensor([ -8.4672,  -9.2451,  -9.8952, -10.6094, -11.4616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([ -8.4730,  -9.2817, -10.0059, -10.6692, -11.5500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9413, device='cuda:0', dtype=torch.float64)
tensor([ -8.4782,  -9.3106, -10.0839, -10.7151, -11.6447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8620, device='cuda:0', dtype=torch.float64)
tensor([ -8.4918,  -9.3453, -10.1405, -10.7588, -11.7370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9111, device='cuda:0', dtype=torch.float64)
tensor([ -8.5079,  -9.3615, -10.1834, -10.7700, -11.8086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9309, device='cuda:0', dtype=torch.float64)
tensor([ -8.5046,  -9.3912, -10.2167, -10.7883, -11.8672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8843, device='cuda:0', dtype=torch.float64)
tensor([ -8.4910,  -9.4335, -10.2538, -10.8201, -11.9295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0345, device='cuda:0', dtype=torch.float64)
tensor([ -8.4659,  -9.4660, -10.2931, -10.8346, -11.9647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8933, device='cuda:0', dtype=torch.float64)
tensor([ -8.4307,  -9.4864, -10.3424, -10.8496, -11.9902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1986, device='cuda:0', dtype=torch.float64)
tensor([ -8.3822,  -9.5001, -10.3846, -10.8269, -12.0291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1178, device='cuda:0', dtype=torch.float64)
tensor([ -8.3188,  -9.4713, -10.4221, -10.7839, -12.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0793, device='cuda:0', dtype=torch.float64)
tensor([ -8.2634,  -9.4288, -10.4567, -10.7278, -12.0725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9427, device='cuda:0', dtype=torch.float64)
tensor([ -8.2189,  -9.3958, -10.4661, -10.6903, -12.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8144, device='cuda:0', dtype=torch.float64)
tensor([ -8.1680,  -9.3789, -10.4800, -10.6556, -12.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8691, device='cuda:0', dtype=torch.float64)
tensor([ -8.1334,  -9.3747, -10.5322, -10.6372, -12.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9503, device='cuda:0', dtype=torch.float64)
tensor([ -8.1091,  -9.3561, -10.5751, -10.6088, -12.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([ -8.1079,  -9.3343, -10.6127, -10.5797, -12.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9449, device='cuda:0', dtype=torch.float64)
tensor([ -8.1139,  -9.3228, -10.6560, -10.5548, -12.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0220, device='cuda:0', dtype=torch.float64)
tensor([ -8.1076,  -9.3193, -10.7276, -10.5270, -12.3032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0522, device='cuda:0', dtype=torch.float64)
tensor([ -8.1286,  -9.3101, -10.7894, -10.4784, -12.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0071, device='cuda:0', dtype=torch.float64)
tensor([ -8.1632,  -9.3113, -10.8525, -10.4576, -12.4222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0432, device='cuda:0', dtype=torch.float64)
tensor([ -8.2109,  -9.3160, -10.9309, -10.4375, -12.4468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0279, device='cuda:0', dtype=torch.float64)
tensor([ -8.2595,  -9.3429, -11.0082, -10.4265, -12.4835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9475, device='cuda:0', dtype=torch.float64)
tensor([ -8.2935,  -9.3735, -11.0457, -10.4077, -12.4934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0756, device='cuda:0', dtype=torch.float64)
tensor([ -8.3253,  -9.3832, -11.0849, -10.3897, -12.4774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([ -8.3434,  -9.3837, -11.1229, -10.3757, -12.4548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0381, device='cuda:0', dtype=torch.float64)
tensor([ -8.3924,  -9.3836, -11.1973, -10.3770, -12.4284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9379, device='cuda:0', dtype=torch.float64)
tensor([ -8.4505,  -9.3906, -11.2703, -10.3880, -12.4143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9155, device='cuda:0', dtype=torch.float64)
tensor([ -8.4983,  -9.3975, -11.3328, -10.3916, -12.3992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8617, device='cuda:0', dtype=torch.float64)
tensor([ -8.5485,  -9.4003, -11.4047, -10.4205, -12.3905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([ -8.6057,  -9.4277, -11.4495, -10.4482, -12.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9814, device='cuda:0', dtype=torch.float64)
tensor([ -8.6456,  -9.4572, -11.5118, -10.4793, -12.3847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8793, device='cuda:0', dtype=torch.float64)
tensor([ -8.6803,  -9.4986, -11.6131, -10.5224, -12.3920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8960, device='cuda:0', dtype=torch.float64)
tensor([ -8.7002,  -9.5444, -11.7080, -10.5796, -12.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([ -8.7493,  -9.6009, -11.7934, -10.6310, -12.3892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8845, device='cuda:0', dtype=torch.float64)
tensor([ -8.8080,  -9.6555, -11.8730, -10.6871, -12.3957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0261, device='cuda:0', dtype=torch.float64)
tensor([ -8.8691,  -9.7158, -11.9281, -10.7261, -12.4042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9125, device='cuda:0', dtype=torch.float64)
tensor([ -8.9261,  -9.7734, -11.9914, -10.7520, -12.4182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9036, device='cuda:0', dtype=torch.float64)
tensor([ -9.0016,  -9.8354, -12.0629, -10.7859, -12.4426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9922, device='cuda:0', dtype=torch.float64)
tensor([ -9.0834,  -9.9016, -12.1279, -10.8231, -12.4755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9425, device='cuda:0', dtype=torch.float64)
tensor([ -9.1575,  -9.9705, -12.1660, -10.8576, -12.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8478, device='cuda:0', dtype=torch.float64)
tensor([ -9.2273, -10.0447, -12.2255, -10.9055, -12.5784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0637, device='cuda:0', dtype=torch.float64)
tensor([ -9.2811, -10.1154, -12.3164, -10.9386, -12.6310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([ -9.3282, -10.1780, -12.3874, -10.9808, -12.6734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0311, device='cuda:0', dtype=torch.float64)
tensor([ -9.3843, -10.2066, -12.4431, -10.9941, -12.6860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7615, device='cuda:0', dtype=torch.float64)
tensor([ -9.4358, -10.2332, -12.4952, -11.0157, -12.7153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([ -9.5028, -10.2663, -12.5270, -11.0377, -12.7696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0594, device='cuda:0', dtype=torch.float64)
tensor([ -9.5759, -10.2920, -12.5384, -11.0617, -12.8209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8872, device='cuda:0', dtype=torch.float64)
tensor([ -9.6093, -10.3165, -12.5463, -11.0720, -12.8613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([ -9.6403, -10.3169, -12.5215, -11.0845, -12.9294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0718, device='cuda:0', dtype=torch.float64)
tensor([ -9.6536, -10.3448, -12.4840, -11.0990, -13.0041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([ -9.6807, -10.3919, -12.4384, -11.1217, -13.0652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0983, device='cuda:0', dtype=torch.float64)
tensor([ -9.7265, -10.4405, -12.3936, -11.1319, -13.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9668, device='cuda:0', dtype=torch.float64)
tensor([ -9.7432, -10.4788, -12.3580, -11.1407, -13.1450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9253, device='cuda:0', dtype=torch.float64)
tensor([ -9.7512, -10.5182, -12.3086, -11.1468, -13.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9286, device='cuda:0', dtype=torch.float64)
tensor([ -9.7545, -10.5804, -12.2877, -11.1513, -13.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8066, device='cuda:0', dtype=torch.float64)
tensor([ -9.7714, -10.6256, -12.2855, -11.1433, -13.2277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0247, device='cuda:0', dtype=torch.float64)
tensor([ -9.7594, -10.6874, -12.2572, -11.1517, -13.2642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9196, device='cuda:0', dtype=torch.float64)
tensor([ -9.7604, -10.7558, -12.2473, -11.1653, -13.2880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0472, device='cuda:0', dtype=torch.float64)
tensor([ -9.7759, -10.8156, -12.2355, -11.1701, -13.3398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9033, device='cuda:0', dtype=torch.float64)
tensor([ -9.7965, -10.8817, -12.2300, -11.1813, -13.4062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8359, device='cuda:0', dtype=torch.float64)
tensor([ -9.8339, -10.9180, -12.2437, -11.1823, -13.4581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9863, device='cuda:0', dtype=torch.float64)
tensor([ -9.8768, -10.9631, -12.2660, -11.1741, -13.5065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2111, device='cuda:0', dtype=torch.float64)
tensor([ -9.9118, -11.0052, -12.2807, -11.1740, -13.5139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1125, device='cuda:0', dtype=torch.float64)
tensor([ -9.9671, -11.0613, -12.3305, -11.1781, -13.5366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8652, device='cuda:0', dtype=torch.float64)
tensor([-10.0253, -11.1170, -12.3907, -11.1956, -13.5933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0924, device='cuda:0', dtype=torch.float64)
tensor([-10.1114, -11.1648, -12.4955, -11.2075, -13.6269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8987, device='cuda:0', dtype=torch.float64)
tensor([-10.1848, -11.2099, -12.5894, -11.2133, -13.6558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9997, device='cuda:0', dtype=torch.float64)
tensor([-10.2663, -11.2631, -12.6573, -11.2050, -13.6754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8917, device='cuda:0', dtype=torch.float64)
tensor([-10.3200, -11.3038, -12.7319, -11.1977, -13.6884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7866, device='cuda:0', dtype=torch.float64)
tensor([-10.3572, -11.3467, -12.8042, -11.1941, -13.7050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9871, device='cuda:0', dtype=torch.float64)
tensor([-10.4164, -11.3900, -12.8940, -11.1979, -13.7367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8646, device='cuda:0', dtype=torch.float64)
tensor([-10.4534, -11.4405, -12.9592, -11.2025, -13.7791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0537, device='cuda:0', dtype=torch.float64)
tensor([-10.4709, -11.5128, -13.0417, -11.2255, -13.8187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1060, device='cuda:0', dtype=torch.float64)
tensor([-10.5185, -11.5854, -13.1635, -11.2506, -13.8586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9572, device='cuda:0', dtype=torch.float64)
tensor([-10.5508, -11.6837, -13.2621, -11.2679, -13.9129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7832, device='cuda:0', dtype=torch.float64)
tensor([-10.5935, -11.7692, -13.3622, -11.2782, -13.9702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0800, device='cuda:0', dtype=torch.float64)
tensor([-10.6316, -11.8442, -13.4718, -11.2727, -14.0358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([-10.6817, -11.9394, -13.5875, -11.2794, -14.1020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9912, device='cuda:0', dtype=torch.float64)
tensor([-10.7081, -12.0206, -13.7024, -11.2874, -14.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8566, device='cuda:0', dtype=torch.float64)
tensor([-10.7324, -12.1030, -13.7947, -11.3101, -14.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1581, device='cuda:0', dtype=torch.float64)
tensor([-10.7507, -12.1592, -13.8882, -11.3261, -14.2531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8896, device='cuda:0', dtype=torch.float64)
tensor([-10.7482, -12.1985, -13.9575, -11.3267, -14.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9623, device='cuda:0', dtype=torch.float64)
tensor([-10.7289, -12.2181, -14.0455, -11.3258, -14.2862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0346, device='cuda:0', dtype=torch.float64)
tensor([-10.7022, -12.2347, -14.1440, -11.3309, -14.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9519, device='cuda:0', dtype=torch.float64)
tensor([-10.6742, -12.2766, -14.2467, -11.3263, -14.2344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-10.6464, -12.3144, -14.3459, -11.3251, -14.2175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9743, device='cuda:0', dtype=torch.float64)
tensor([-10.6270, -12.3672, -14.4313, -11.3302, -14.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7991, device='cuda:0', dtype=torch.float64)
tensor([-10.6000, -12.4246, -14.5142, -11.3429, -14.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8562, device='cuda:0', dtype=torch.float64)
tensor([-10.5978, -12.4829, -14.5924, -11.3477, -14.1254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([-10.6028, -12.5341, -14.6399, -11.3468, -14.0845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9491, device='cuda:0', dtype=torch.float64)
tensor([-10.6090, -12.5745, -14.6810, -11.3522, -14.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0971, device='cuda:0', dtype=torch.float64)
tensor([-10.6291, -12.6225, -14.7705, -11.3663, -14.0918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8996, device='cuda:0', dtype=torch.float64)
tensor([-10.6749, -12.6739, -14.8737, -11.3833, -14.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0030, device='cuda:0', dtype=torch.float64)
tensor([-10.7177, -12.7177, -14.9684, -11.3965, -14.2099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8934, device='cuda:0', dtype=torch.float64)
tensor([-10.7463, -12.7494, -15.0716, -11.4016, -14.2664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9448, device='cuda:0', dtype=torch.float64)
tensor([-10.7786, -12.7742, -15.1812, -11.4124, -14.3485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9207, device='cuda:0', dtype=torch.float64)
tensor([-10.8253, -12.8246, -15.3282, -11.4277, -14.4623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8045, device='cuda:0', dtype=torch.float64)
tensor([-10.8647, -12.8587, -15.4822, -11.4444, -14.5388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0271, device='cuda:0', dtype=torch.float64)
tensor([-10.9276, -12.9023, -15.6225, -11.4796, -14.6058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9443, device='cuda:0', dtype=torch.float64)
tensor([-11.0047, -12.9557, -15.7778, -11.5236, -14.6700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9520, device='cuda:0', dtype=torch.float64)
tensor([-11.1047, -13.0059, -15.9421, -11.5575, -14.6787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9236, device='cuda:0', dtype=torch.float64)
tensor([-11.1763, -13.0477, -16.0570, -11.5993, -14.6813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1282, device='cuda:0', dtype=torch.float64)
tensor([-11.2301, -13.1028, -16.1285, -11.6244, -14.6618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9282, device='cuda:0', dtype=torch.float64)
tensor([-11.2722, -13.1303, -16.1894, -11.6428, -14.6344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9120, device='cuda:0', dtype=torch.float64)
tensor([-11.3238, -13.1526, -16.2515, -11.6560, -14.6179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9280, device='cuda:0', dtype=torch.float64)
tensor([-11.3807, -13.1912, -16.3404, -11.6599, -14.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9003, device='cuda:0', dtype=torch.float64)
tensor([-11.4381, -13.2185, -16.4451, -11.6780, -14.6037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9704, device='cuda:0', dtype=torch.float64)
tensor([-11.5086, -13.2113, -16.5526, -11.6923, -14.6025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9481, device='cuda:0', dtype=torch.float64)
tensor([-11.5527, -13.2016, -16.6476, -11.7118, -14.6039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9253, device='cuda:0', dtype=torch.float64)
tensor([-11.5688, -13.1814, -16.7138, -11.7265, -14.6066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9392, device='cuda:0', dtype=torch.float64)
tensor([-11.6361, -13.1844, -16.8205, -11.7710, -14.6332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0611, device='cuda:0', dtype=torch.float64)
tensor([-11.7408, -13.1936, -16.9660, -11.8226, -14.6842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8557, device='cuda:0', dtype=torch.float64)
tensor([-11.8828, -13.2137, -17.1282, -11.8714, -14.7511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0050, device='cuda:0', dtype=torch.float64)
tensor([-12.0417, -13.2233, -17.3098, -11.9260, -14.8316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8119, device='cuda:0', dtype=torch.float64)
tensor([-12.1977, -13.2379, -17.4711, -11.9795, -14.9002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9470, device='cuda:0', dtype=torch.float64)
tensor([-12.3841, -13.2896, -17.6677, -12.0410, -14.9535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0359, device='cuda:0', dtype=torch.float64)
tensor([-12.5776, -13.3691, -17.8571, -12.1033, -15.0245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8469, device='cuda:0', dtype=torch.float64)
tensor([-12.7591, -13.4592, -18.0339, -12.1758, -15.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9394, device='cuda:0', dtype=torch.float64)
tensor([-12.9222, -13.5296, -18.1674, -12.2591, -15.1964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9406, device='cuda:0', dtype=torch.float64)
tensor([-13.0515, -13.5804, -18.2590, -12.3264, -15.2735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9067, device='cuda:0', dtype=torch.float64)
tensor([-13.1782, -13.6390, -18.3215, -12.3973, -15.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9716, device='cuda:0', dtype=torch.float64)
tensor([-13.2852, -13.6875, -18.3901, -12.4632, -15.5002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7684, device='cuda:0', dtype=torch.float64)
tensor([-13.3904, -13.7531, -18.4573, -12.5336, -15.6092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9021, device='cuda:0', dtype=torch.float64)
tensor([-13.4805, -13.8041, -18.5177, -12.5889, -15.7004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9806, device='cuda:0', dtype=torch.float64)
tensor([-13.5846, -13.8466, -18.6212, -12.6406, -15.7802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9049, device='cuda:0', dtype=torch.float64)
tensor([-13.6770, -13.8791, -18.7236, -12.6953, -15.8576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8478, device='cuda:0', dtype=torch.float64)
tensor([-13.7811, -13.8853, -18.8426, -12.7394, -15.9466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-13.9003, -13.9234, -19.0081, -12.7945, -16.0526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9611, device='cuda:0', dtype=torch.float64)
tensor([-14.0101, -13.9631, -19.1756, -12.8486, -16.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9304, device='cuda:0', dtype=torch.float64)
tensor([-14.0943, -13.9832, -19.3168, -12.8789, -16.2864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9577, device='cuda:0', dtype=torch.float64)
tensor([-14.2018, -14.0266, -19.4675, -12.9182, -16.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-14.2781, -14.0518, -19.6200, -12.9769, -16.4927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8923, device='cuda:0', dtype=torch.float64)
tensor([-14.3334, -14.0888, -19.7489, -13.0359, -16.5949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9927, device='cuda:0', dtype=torch.float64)
tensor([-14.3599, -14.1420, -19.8549, -13.0962, -16.7030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0185, device='cuda:0', dtype=torch.float64)
tensor([-14.4335, -14.2131, -19.9686, -13.1605, -16.8275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8854, device='cuda:0', dtype=torch.float64)
tensor([-14.4854, -14.2745, -20.0855, -13.2316, -16.9785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9732, device='cuda:0', dtype=torch.float64)
tensor([-14.5279, -14.3140, -20.1998, -13.2745, -17.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7879, device='cuda:0', dtype=torch.float64)
tensor([-14.5594, -14.3444, -20.2871, -13.3181, -17.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9412, device='cuda:0', dtype=torch.float64)
tensor([-14.6452, -14.3956, -20.4020, -13.3740, -17.3310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7851, device='cuda:0', dtype=torch.float64)
tensor([-14.6988, -14.4532, -20.4842, -13.4288, -17.4213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8921, device='cuda:0', dtype=torch.float64)
tensor([-14.7565, -14.5003, -20.5378, -13.4788, -17.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([-14.7714, -14.5514, -20.5569, -13.5182, -17.5758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8130, device='cuda:0', dtype=torch.float64)
tensor([-14.7995, -14.5791, -20.5961, -13.5372, -17.6501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8987, device='cuda:0', dtype=torch.float64)
tensor([-14.8534, -14.6109, -20.6328, -13.5622, -17.7174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0217, device='cuda:0', dtype=torch.float64)
tensor([-14.8745, -14.6569, -20.6877, -13.6001, -17.8314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9690, device='cuda:0', dtype=torch.float64)
tensor([-14.8669, -14.6732, -20.7056, -13.6107, -17.9231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0103, device='cuda:0', dtype=torch.float64)
tensor([-14.8625, -14.6779, -20.7341, -13.6273, -18.0389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9149, device='cuda:0', dtype=torch.float64)
tensor([-14.8568, -14.7196, -20.7857, -13.6529, -18.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9567, device='cuda:0', dtype=torch.float64)
tensor([-14.7976, -14.7461, -20.7971, -13.6686, -18.3347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-14.7129, -14.7501, -20.7499, -13.6860, -18.4316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9318, device='cuda:0', dtype=torch.float64)
tensor([-14.6400, -14.7508, -20.7043, -13.7145, -18.5092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8903, device='cuda:0', dtype=torch.float64)
tensor([-14.5586, -14.7485, -20.6246, -13.7545, -18.5826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0220, device='cuda:0', dtype=torch.float64)
tensor([-14.5071, -14.7350, -20.5432, -13.8135, -18.6566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([-14.4681, -14.7140, -20.4627, -13.8636, -18.7572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9340, device='cuda:0', dtype=torch.float64)
tensor([-14.4646, -14.6907, -20.3614, -13.9195, -18.8934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0294, device='cuda:0', dtype=torch.float64)
tensor([-14.4870, -14.6563, -20.2945, -13.9433, -18.9699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0135, device='cuda:0', dtype=torch.float64)
tensor([-14.5237, -14.6423, -20.2419, -13.9748, -19.0545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8282, device='cuda:0', dtype=torch.float64)
tensor([-14.5946, -14.6294, -20.2262, -14.0142, -19.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9766, device='cuda:0', dtype=torch.float64)
tensor([-14.6652, -14.6223, -20.2199, -14.0491, -19.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9071, device='cuda:0', dtype=torch.float64)
tensor([-14.7141, -14.6316, -20.1865, -14.0881, -19.2688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8919, device='cuda:0', dtype=torch.float64)
tensor([-14.8108, -14.6555, -20.1897, -14.1173, -19.3106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-14.8896, -14.6775, -20.1878, -14.1489, -19.3490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8734, device='cuda:0', dtype=torch.float64)
tensor([-14.9359, -14.6932, -20.1586, -14.1776, -19.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1042, device='cuda:0', dtype=torch.float64)
tensor([-15.0217, -14.7745, -20.1645, -14.2186, -19.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0270, device='cuda:0', dtype=torch.float64)
tensor([-15.1290, -14.8725, -20.1780, -14.2898, -19.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0845, device='cuda:0', dtype=torch.float64)
tensor([-15.2025, -14.9821, -20.1738, -14.3605, -19.3306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8975, device='cuda:0', dtype=torch.float64)
tensor([-15.2851, -15.0868, -20.1782, -14.4411, -19.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([-15.3332, -15.1851, -20.1643, -14.5160, -19.3487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8391, device='cuda:0', dtype=torch.float64)
tensor([-15.3480, -15.2696, -20.1544, -14.5694, -19.3432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0184, device='cuda:0', dtype=torch.float64)
tensor([-15.3193, -15.3217, -20.0999, -14.6341, -19.3370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9111, device='cuda:0', dtype=torch.float64)
tensor([-15.3287, -15.3929, -20.0805, -14.6849, -19.3238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8931, device='cuda:0', dtype=torch.float64)
tensor([-15.3579, -15.4560, -20.1285, -14.7422, -19.3225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9240, device='cuda:0', dtype=torch.float64)
tensor([-15.4460, -15.5494, -20.1895, -14.8033, -19.3380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0128, device='cuda:0', dtype=torch.float64)
tensor([-15.5023, -15.6408, -20.2501, -14.8681, -19.3382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0188, device='cuda:0', dtype=torch.float64)
tensor([-15.5397, -15.7385, -20.3227, -14.9289, -19.3653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9169, device='cuda:0', dtype=torch.float64)
tensor([-15.5384, -15.8032, -20.3835, -14.9855, -19.3793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9269, device='cuda:0', dtype=torch.float64)
tensor([-15.5451, -15.8841, -20.4448, -15.0304, -19.3908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9531, device='cuda:0', dtype=torch.float64)
tensor([-15.5294, -15.9692, -20.5068, -15.0650, -19.4208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([-15.4930, -16.0905, -20.5534, -15.1085, -19.4877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9713, device='cuda:0', dtype=torch.float64)
tensor([-15.5186, -16.2312, -20.6568, -15.1411, -19.4945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8435, device='cuda:0', dtype=torch.float64)
tensor([-15.5626, -16.3786, -20.7938, -15.1973, -19.5444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8032, device='cuda:0', dtype=torch.float64)
tensor([-15.5894, -16.5224, -20.9411, -15.2708, -19.5884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9975, device='cuda:0', dtype=torch.float64)
tensor([-15.5964, -16.6522, -21.0592, -15.3471, -19.6250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1669, device='cuda:0', dtype=torch.float64)
tensor([-15.6055, -16.7796, -21.1886, -15.4269, -19.6938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8335, device='cuda:0', dtype=torch.float64)
tensor([-15.5699, -16.8897, -21.2599, -15.5044, -19.7653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0011, device='cuda:0', dtype=torch.float64)
tensor([-15.5656, -17.0427, -21.3534, -15.6069, -19.8509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9481, device='cuda:0', dtype=torch.float64)
tensor([-15.5812, -17.1692, -21.4517, -15.6779, -19.9409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9436, device='cuda:0', dtype=torch.float64)
tensor([-15.6186, -17.2635, -21.5374, -15.7199, -20.0008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9169, device='cuda:0', dtype=torch.float64)
tensor([-15.6271, -17.3890, -21.6216, -15.7607, -20.0394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7446, device='cuda:0', dtype=torch.float64)
tensor([-15.6345, -17.4829, -21.6864, -15.7830, -20.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0557, device='cuda:0', dtype=torch.float64)
tensor([-15.6638, -17.5948, -21.7644, -15.8212, -20.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9381, device='cuda:0', dtype=torch.float64)
tensor([-15.6687, -17.6723, -21.8391, -15.8840, -20.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8159, device='cuda:0', dtype=torch.float64)
tensor([-15.6589, -17.6911, -21.8661, -15.9222, -20.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9581, device='cuda:0', dtype=torch.float64)
tensor([-15.6696, -17.7063, -21.9007, -15.9812, -20.3285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0354, device='cuda:0', dtype=torch.float64)
tensor([-15.6878, -17.7476, -21.9055, -16.0126, -20.4123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8290, device='cuda:0', dtype=torch.float64)
tensor([-15.7046, -17.8000, -21.8986, -16.0417, -20.5109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8928, device='cuda:0', dtype=torch.float64)
tensor([-15.7176, -17.8542, -21.8445, -16.0664, -20.5921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9398, device='cuda:0', dtype=torch.float64)
tensor([-15.6610, -17.8767, -21.7580, -16.0573, -20.6325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9669, device='cuda:0', dtype=torch.float64)
tensor([-15.6203, -17.8837, -21.6177, -16.0510, -20.6631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8246, device='cuda:0', dtype=torch.float64)
tensor([-15.6057, -17.8972, -21.5135, -16.0582, -20.6911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9151, device='cuda:0', dtype=torch.float64)
tensor([-15.6049, -17.8946, -21.4482, -16.0421, -20.7063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-15.5966, -17.8450, -21.3704, -16.0149, -20.7185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8652, device='cuda:0', dtype=torch.float64)
tensor([-15.5913, -17.7955, -21.3028, -15.9974, -20.7255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8703, device='cuda:0', dtype=torch.float64)
tensor([-15.5715, -17.7822, -21.2262, -16.0107, -20.7392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-15.5507, -17.8130, -21.1428, -16.0459, -20.7836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7657, device='cuda:0', dtype=torch.float64)
tensor([-15.5621, -17.8484, -21.0733, -16.0848, -20.8376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8203, device='cuda:0', dtype=torch.float64)
tensor([-15.5873, -17.8981, -21.0401, -16.1190, -20.8499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8545, device='cuda:0', dtype=torch.float64)
tensor([-15.6058, -17.9538, -21.0072, -16.1698, -20.8694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9954, device='cuda:0', dtype=torch.float64)
tensor([-15.6255, -18.0059, -20.9827, -16.2302, -20.9265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9202, device='cuda:0', dtype=torch.float64)
tensor([-15.6481, -18.0534, -20.9671, -16.2578, -20.9422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8744, device='cuda:0', dtype=torch.float64)
tensor([-15.7079, -18.0889, -20.9714, -16.2906, -20.9796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9117, device='cuda:0', dtype=torch.float64)
tensor([-15.7555, -18.0999, -20.9533, -16.3283, -21.0065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9176, device='cuda:0', dtype=torch.float64)
tensor([-15.7896, -18.1002, -20.9056, -16.3527, -20.9805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9515, device='cuda:0', dtype=torch.float64)
tensor([-15.7787, -18.0829, -20.8201, -16.3734, -20.9448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6858, device='cuda:0', dtype=torch.float64)
tensor([-15.7690, -18.0952, -20.7263, -16.4069, -20.9025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7739, device='cuda:0', dtype=torch.float64)
tensor([-15.7783, -18.0966, -20.6514, -16.4481, -20.8723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8509, device='cuda:0', dtype=torch.float64)
tensor([-15.7684, -18.0929, -20.5508, -16.4800, -20.8446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9224, device='cuda:0', dtype=torch.float64)
tensor([-15.7355, -18.1004, -20.4124, -16.5178, -20.7910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0965, device='cuda:0', dtype=torch.float64)
tensor([-15.6880, -18.0627, -20.2765, -16.5564, -20.7255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9571, device='cuda:0', dtype=torch.float64)
tensor([-15.5964, -18.0223, -20.1604, -16.5948, -20.6739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8702, device='cuda:0', dtype=torch.float64)
tensor([-15.5123, -17.9672, -20.0327, -16.6228, -20.6628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8969, device='cuda:0', dtype=torch.float64)
tensor([-15.4069, -17.9322, -19.8985, -16.6421, -20.6664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0595, device='cuda:0', dtype=torch.float64)
tensor([-15.3431, -17.9600, -19.8300, -16.6885, -20.6702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9047, device='cuda:0', dtype=torch.float64)
tensor([-15.2733, -17.9590, -19.7259, -16.7377, -20.6883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9114, device='cuda:0', dtype=torch.float64)
tensor([-15.2180, -17.9316, -19.6271, -16.7775, -20.7081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8520, device='cuda:0', dtype=torch.float64)
tensor([-15.1522, -17.9175, -19.5405, -16.8141, -20.7102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9841, device='cuda:0', dtype=torch.float64)
tensor([-15.0848, -17.8946, -19.4671, -16.8609, -20.7409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8160, device='cuda:0', dtype=torch.float64)
tensor([-15.0311, -17.8700, -19.4154, -16.8991, -20.7531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8062, device='cuda:0', dtype=torch.float64)
tensor([-14.9749, -17.8392, -19.3225, -16.9462, -20.7705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9424, device='cuda:0', dtype=torch.float64)
tensor([-14.9238, -17.7778, -19.2312, -16.9611, -20.7621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8952, device='cuda:0', dtype=torch.float64)
tensor([-14.9200, -17.7441, -19.1827, -16.9931, -20.7491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8705, device='cuda:0', dtype=torch.float64)
tensor([-14.9134, -17.7224, -19.1813, -17.0279, -20.7284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0058, device='cuda:0', dtype=torch.float64)
tensor([-14.9131, -17.6688, -19.1637, -17.0377, -20.6962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8698, device='cuda:0', dtype=torch.float64)
tensor([-14.8718, -17.6089, -19.1180, -17.0237, -20.6526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9774, device='cuda:0', dtype=torch.float64)
tensor([-14.8458, -17.5536, -19.0809, -16.9867, -20.6144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0549, device='cuda:0', dtype=torch.float64)
tensor([-14.8550, -17.5214, -19.0758, -16.9692, -20.5804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9566, device='cuda:0', dtype=torch.float64)
tensor([-14.8596, -17.5042, -19.0532, -16.9560, -20.5686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9282, device='cuda:0', dtype=torch.float64)
tensor([-14.8885, -17.4772, -19.0219, -16.9354, -20.5391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9065, device='cuda:0', dtype=torch.float64)
tensor([-14.9165, -17.4880, -18.9977, -16.9406, -20.5027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8304, device='cuda:0', dtype=torch.float64)
tensor([-14.9648, -17.5202, -18.9482, -16.9361, -20.4516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8909, device='cuda:0', dtype=torch.float64)
tensor([-15.0277, -17.5644, -18.9156, -16.9468, -20.4096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0997, device='cuda:0', dtype=torch.float64)
tensor([-15.0807, -17.6346, -18.9384, -16.9709, -20.4096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9496, device='cuda:0', dtype=torch.float64)
tensor([-15.1180, -17.7245, -18.9491, -17.0131, -20.4193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0008, device='cuda:0', dtype=torch.float64)
tensor([-15.1564, -17.8428, -18.9779, -17.0776, -20.4332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0080, device='cuda:0', dtype=torch.float64)
tensor([-15.2007, -17.9854, -19.0250, -17.1418, -20.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9766, device='cuda:0', dtype=torch.float64)
tensor([-15.2950, -18.1745, -19.0639, -17.2277, -20.4907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9460, device='cuda:0', dtype=torch.float64)
tensor([-15.3615, -18.2981, -19.1214, -17.3015, -20.5154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0590, device='cuda:0', dtype=torch.float64)
tensor([-15.4490, -18.4303, -19.1732, -17.3830, -20.5238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9803, device='cuda:0', dtype=torch.float64)
tensor([-15.5297, -18.5469, -19.1977, -17.4647, -20.5322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8163, device='cuda:0', dtype=torch.float64)
tensor([-15.5929, -18.6433, -19.2499, -17.5411, -20.5329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([-15.6579, -18.7422, -19.2877, -17.6316, -20.5379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9811, device='cuda:0', dtype=torch.float64)
tensor([-15.6966, -18.8734, -19.3503, -17.7394, -20.5646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9192, device='cuda:0', dtype=torch.float64)
tensor([-15.7201, -19.0051, -19.4025, -17.8525, -20.5888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8943, device='cuda:0', dtype=torch.float64)
tensor([-15.7248, -19.0768, -19.4359, -17.9325, -20.5816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8788, device='cuda:0', dtype=torch.float64)
tensor([-15.7330, -19.1058, -19.4777, -17.9943, -20.5695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9005, device='cuda:0', dtype=torch.float64)
tensor([-15.7789, -19.1593, -19.5464, -18.0573, -20.5228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7967, device='cuda:0', dtype=torch.float64)
tensor([-15.8484, -19.1663, -19.6138, -18.0911, -20.4862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9058, device='cuda:0', dtype=torch.float64)
tensor([-15.9483, -19.1788, -19.6811, -18.1258, -20.4696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8997, device='cuda:0', dtype=torch.float64)
tensor([-16.0348, -19.1979, -19.7572, -18.1933, -20.4718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8686, device='cuda:0', dtype=torch.float64)
tensor([-16.1177, -19.2246, -19.8326, -18.2598, -20.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7829, device='cuda:0', dtype=torch.float64)
tensor([-16.1923, -19.2808, -19.8722, -18.3065, -20.5094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9298, device='cuda:0', dtype=torch.float64)
tensor([-16.2352, -19.3430, -19.8872, -18.3620, -20.5600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9395, device='cuda:0', dtype=torch.float64)
tensor([-16.2779, -19.4004, -19.9116, -18.4114, -20.5815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8060, device='cuda:0', dtype=torch.float64)
tensor([-16.3219, -19.4426, -19.9308, -18.4511, -20.5981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0487, device='cuda:0', dtype=torch.float64)
tensor([-16.4235, -19.5103, -19.9849, -18.5184, -20.6436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9318, device='cuda:0', dtype=torch.float64)
tensor([-16.5046, -19.5614, -20.0378, -18.5301, -20.6869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9613, device='cuda:0', dtype=torch.float64)
tensor([-16.5270, -19.6208, -19.9929, -18.5547, -20.7314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9035, device='cuda:0', dtype=torch.float64)
tensor([-16.5365, -19.6624, -19.9585, -18.6101, -20.7766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8720, device='cuda:0', dtype=torch.float64)
tensor([-16.5587, -19.6985, -19.9120, -18.6684, -20.8210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8492, device='cuda:0', dtype=torch.float64)
tensor([-16.5964, -19.7371, -19.8746, -18.7192, -20.8616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7820, device='cuda:0', dtype=torch.float64)
tensor([-16.6475, -19.7712, -19.8167, -18.7575, -20.8823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9752, device='cuda:0', dtype=torch.float64)
tensor([-16.7319, -19.8924, -19.7729, -18.8407, -20.9455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8765, device='cuda:0', dtype=torch.float64)
tensor([-16.7997, -20.0125, -19.7269, -18.9158, -21.0238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7862, device='cuda:0', dtype=torch.float64)
tensor([-16.8630, -20.1528, -19.6566, -18.9994, -21.0929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8917, device='cuda:0', dtype=torch.float64)
tensor([-16.9370, -20.3251, -19.6258, -19.1186, -21.1816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9454, device='cuda:0', dtype=torch.float64)
tensor([-17.0023, -20.4509, -19.5800, -19.1883, -21.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8601, device='cuda:0', dtype=torch.float64)
tensor([-17.0421, -20.5506, -19.5495, -19.2568, -21.3340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8593, device='cuda:0', dtype=torch.float64)
tensor([-17.1061, -20.6462, -19.5307, -19.3016, -21.4091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7535, device='cuda:0', dtype=torch.float64)
tensor([-17.1748, -20.7716, -19.5375, -19.3367, -21.4762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9340, device='cuda:0', dtype=torch.float64)
tensor([-17.2483, -20.9006, -19.5665, -19.3650, -21.5426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9421, device='cuda:0', dtype=torch.float64)
tensor([-17.3351, -21.0082, -19.6170, -19.3697, -21.5978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8849, device='cuda:0', dtype=torch.float64)
tensor([-17.4485, -21.1475, -19.6707, -19.3947, -21.6361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([-17.5461, -21.2385, -19.6985, -19.4107, -21.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8582, device='cuda:0', dtype=torch.float64)
tensor([-17.6061, -21.3399, -19.7018, -19.4462, -21.7378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8809, device='cuda:0', dtype=torch.float64)
tensor([-17.6231, -21.4183, -19.7078, -19.4429, -21.7845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7991, device='cuda:0', dtype=torch.float64)
tensor([-17.6061, -21.4987, -19.7000, -19.4405, -21.7995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9165, device='cuda:0', dtype=torch.float64)
tensor([-17.5998, -21.5667, -19.6820, -19.4737, -21.8259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-17.5587, -21.6140, -19.6605, -19.5217, -21.8549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9871, device='cuda:0', dtype=torch.float64)
tensor([-17.5552, -21.7061, -19.6914, -19.5991, -21.9280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7806, device='cuda:0', dtype=torch.float64)
tensor([-17.5654, -21.7667, -19.7184, -19.6616, -22.0101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8511, device='cuda:0', dtype=torch.float64)
tensor([-17.5686, -21.8374, -19.7524, -19.7136, -22.0562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8014, device='cuda:0', dtype=torch.float64)
tensor([-17.5881, -21.9148, -19.7767, -19.7658, -22.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9881, device='cuda:0', dtype=torch.float64)
tensor([-17.6390, -22.0108, -19.8405, -19.8298, -22.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7696, device='cuda:0', dtype=torch.float64)
tensor([-17.7248, -22.1106, -19.9116, -19.8837, -22.2035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8222, device='cuda:0', dtype=torch.float64)
tensor([-17.8040, -22.1809, -19.9679, -19.9267, -22.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7434, device='cuda:0', dtype=torch.float64)
tensor([-17.8734, -22.2051, -20.0261, -19.9541, -22.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8159, device='cuda:0', dtype=torch.float64)
tensor([-17.9288, -22.2228, -20.0541, -19.9925, -22.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9392, device='cuda:0', dtype=torch.float64)
tensor([-17.9969, -22.2551, -20.1009, -20.0427, -22.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9723, device='cuda:0', dtype=torch.float64)
tensor([-18.0818, -22.2493, -20.1567, -20.0854, -22.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8080, device='cuda:0', dtype=torch.float64)
tensor([-18.1775, -22.3063, -20.2551, -20.1695, -22.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8798, device='cuda:0', dtype=torch.float64)
tensor([-18.2663, -22.3368, -20.3117, -20.2547, -22.4859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7624, device='cuda:0', dtype=torch.float64)
tensor([-18.3567, -22.3362, -20.3650, -20.2901, -22.5283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8771, device='cuda:0', dtype=torch.float64)
tensor([-18.4681, -22.3664, -20.4583, -20.3496, -22.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8540, device='cuda:0', dtype=torch.float64)
tensor([-18.5793, -22.4121, -20.5544, -20.4226, -22.6958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9146, device='cuda:0', dtype=torch.float64)
tensor([-18.7119, -22.4945, -20.6915, -20.5204, -22.8067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8342, device='cuda:0', dtype=torch.float64)
tensor([-18.8151, -22.5450, -20.7985, -20.6027, -22.9005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9667, device='cuda:0', dtype=torch.float64)
tensor([-18.9263, -22.6366, -20.9289, -20.7243, -23.0039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-19.0187, -22.6732, -21.0096, -20.8231, -23.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8341, device='cuda:0', dtype=torch.float64)
tensor([-19.1362, -22.7216, -21.0956, -20.9203, -23.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9298, device='cuda:0', dtype=torch.float64)
tensor([-19.1969, -22.7818, -21.1668, -21.0162, -23.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([-19.3085, -22.8631, -21.2521, -21.1216, -23.5022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1030, device='cuda:0', dtype=torch.float64)
tensor([-19.4346, -22.9481, -21.3267, -21.2286, -23.6101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9618, device='cuda:0', dtype=torch.float64)
tensor([-19.5048, -23.0418, -21.3919, -21.3085, -23.6934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9930, device='cuda:0', dtype=torch.float64)
tensor([-19.5758, -23.0957, -21.4622, -21.3907, -23.7717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9363, device='cuda:0', dtype=torch.float64)
tensor([-19.6235, -23.1617, -21.5343, -21.4824, -23.8472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9864, device='cuda:0', dtype=torch.float64)
tensor([-19.6264, -23.1860, -21.5848, -21.5421, -23.9392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8965, device='cuda:0', dtype=torch.float64)
tensor([-19.6412, -23.2264, -21.6500, -21.5922, -24.0200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9534, device='cuda:0', dtype=torch.float64)
tensor([-19.6174, -23.2430, -21.7148, -21.6875, -24.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8382, device='cuda:0', dtype=torch.float64)
tensor([-19.5573, -23.2430, -21.7682, -21.7738, -24.2176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8364, device='cuda:0', dtype=torch.float64)
tensor([-19.4583, -23.2165, -21.8019, -21.8755, -24.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8484, device='cuda:0', dtype=torch.float64)
tensor([-19.3456, -23.2047, -21.8262, -21.9984, -24.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8726, device='cuda:0', dtype=torch.float64)
tensor([-19.2661, -23.1797, -21.8651, -22.0882, -24.5352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9718, device='cuda:0', dtype=torch.float64)
tensor([-19.1924, -23.1215, -21.9080, -22.1821, -24.5988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8416, device='cuda:0', dtype=torch.float64)
tensor([-19.1488, -23.0617, -21.9557, -22.2603, -24.6409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9299, device='cuda:0', dtype=torch.float64)
tensor([-19.1496, -23.0585, -22.0060, -22.3656, -24.6906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8234, device='cuda:0', dtype=torch.float64)
tensor([-19.1442, -23.0245, -22.0588, -22.4208, -24.7193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([-19.1579, -23.0185, -22.1173, -22.4962, -24.7998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8014, device='cuda:0', dtype=torch.float64)
tensor([-19.1706, -23.0342, -22.1571, -22.5741, -24.8681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8897, device='cuda:0', dtype=torch.float64)
tensor([-19.1196, -23.0111, -22.1816, -22.6268, -24.9341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9814, device='cuda:0', dtype=torch.float64)
tensor([-19.0211, -22.9268, -22.1623, -22.6634, -24.9672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7773, device='cuda:0', dtype=torch.float64)
tensor([-18.9298, -22.8479, -22.1475, -22.7133, -25.0018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8349, device='cuda:0', dtype=torch.float64)
tensor([-18.8272, -22.8059, -22.1521, -22.7942, -25.0769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8919, device='cuda:0', dtype=torch.float64)
tensor([-18.7496, -22.7572, -22.1548, -22.8974, -25.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8915, device='cuda:0', dtype=torch.float64)
tensor([-18.6443, -22.6917, -22.1594, -22.9375, -25.2142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8983, device='cuda:0', dtype=torch.float64)
tensor([-18.5363, -22.6317, -22.1162, -22.9636, -25.2798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0010, device='cuda:0', dtype=torch.float64)
tensor([-18.4317, -22.5871, -22.0871, -23.0198, -25.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8489, device='cuda:0', dtype=torch.float64)
tensor([-18.3486, -22.5689, -22.0549, -23.1008, -25.3544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9444, device='cuda:0', dtype=torch.float64)
tensor([-18.3050, -22.5297, -22.0172, -23.1689, -25.4319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9883, device='cuda:0', dtype=torch.float64)
tensor([-18.3429, -22.5556, -21.9801, -23.2244, -25.4968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8415, device='cuda:0', dtype=torch.float64)
tensor([-18.3751, -22.5955, -21.9522, -23.2925, -25.5734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8315, device='cuda:0', dtype=torch.float64)
tensor([-18.3955, -22.6414, -21.9225, -23.3281, -25.6617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8853, device='cuda:0', dtype=torch.float64)
tensor([-18.4226, -22.6673, -21.8821, -23.3494, -25.6779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9388, device='cuda:0', dtype=torch.float64)
tensor([-18.4416, -22.7555, -21.8703, -23.4151, -25.7081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8302, device='cuda:0', dtype=torch.float64)
tensor([-18.4315, -22.7910, -21.8568, -23.4464, -25.7702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7582, device='cuda:0', dtype=torch.float64)
tensor([-18.4204, -22.7871, -21.8490, -23.4721, -25.8244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9894, device='cuda:0', dtype=torch.float64)
tensor([-18.4364, -22.8307, -21.8352, -23.5579, -25.9103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8355, device='cuda:0', dtype=torch.float64)
tensor([-18.4460, -22.8942, -21.8329, -23.6771, -26.0300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7999, device='cuda:0', dtype=torch.float64)
tensor([-18.4961, -22.9958, -21.8253, -23.7915, -26.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-18.5285, -23.0720, -21.8115, -23.8795, -26.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8488, device='cuda:0', dtype=torch.float64)
tensor([-18.5748, -23.1018, -21.8061, -23.9671, -26.2754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9478, device='cuda:0', dtype=torch.float64)
tensor([-18.6635, -23.1798, -21.8831, -24.0717, -26.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8065, device='cuda:0', dtype=torch.float64)
tensor([-18.7523, -23.2867, -21.9611, -24.1713, -26.4748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8013, device='cuda:0', dtype=torch.float64)
tensor([-18.8427, -23.3661, -22.0088, -24.2615, -26.5723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8311, device='cuda:0', dtype=torch.float64)
tensor([-18.8845, -23.4139, -22.0237, -24.3106, -26.6155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7153, device='cuda:0', dtype=torch.float64)
tensor([-18.9573, -23.4507, -22.0832, -24.3639, -26.6475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8537, device='cuda:0', dtype=torch.float64)
tensor([-19.0232, -23.5008, -22.1708, -24.4038, -26.6802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8655, device='cuda:0', dtype=torch.float64)
tensor([-19.0726, -23.5623, -22.2894, -24.4626, -26.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8235, device='cuda:0', dtype=torch.float64)
tensor([-19.1193, -23.5883, -22.3807, -24.4780, -26.7153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9048, device='cuda:0', dtype=torch.float64)
tensor([-19.1640, -23.6375, -22.4762, -24.5298, -26.7784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9182, device='cuda:0', dtype=torch.float64)
tensor([-19.1866, -23.6641, -22.5664, -24.5589, -26.8123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8556, device='cuda:0', dtype=torch.float64)
tensor([-19.1814, -23.6659, -22.6462, -24.5330, -26.7940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0649, device='cuda:0', dtype=torch.float64)
tensor([-19.1871, -23.6876, -22.7378, -24.5543, -26.8171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9055, device='cuda:0', dtype=torch.float64)
tensor([-19.1371, -23.6610, -22.8302, -24.5766, -26.8456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8647, device='cuda:0', dtype=torch.float64)
tensor([-19.1384, -23.7124, -22.9613, -24.6552, -26.9155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8818, device='cuda:0', dtype=torch.float64)
tensor([-19.1588, -23.7707, -23.0779, -24.7549, -26.9769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-19.2237, -23.8263, -23.2322, -24.8518, -27.0163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8740, device='cuda:0', dtype=torch.float64)
tensor([-19.3168, -23.8889, -23.4041, -24.9367, -27.0220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8862, device='cuda:0', dtype=torch.float64)
tensor([-19.4707, -23.9964, -23.5840, -25.0413, -27.0171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7859, device='cuda:0', dtype=torch.float64)
tensor([-19.6246, -24.1348, -23.8003, -25.1935, -27.0578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7952, device='cuda:0', dtype=torch.float64)
tensor([-19.7802, -24.2392, -24.0019, -25.3160, -27.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7365, device='cuda:0', dtype=torch.float64)
tensor([-19.9065, -24.3112, -24.1921, -25.4046, -27.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8263, device='cuda:0', dtype=torch.float64)
tensor([-20.0828, -24.3944, -24.3704, -25.5027, -27.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9899, device='cuda:0', dtype=torch.float64)
tensor([-20.2558, -24.5080, -24.5679, -25.6134, -27.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9245, device='cuda:0', dtype=torch.float64)
tensor([-20.4874, -24.6192, -24.7545, -25.7175, -27.2330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0141, device='cuda:0', dtype=torch.float64)
tensor([-20.6996, -24.7637, -24.9391, -25.8281, -27.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8310, device='cuda:0', dtype=torch.float64)
tensor([-20.8697, -24.9111, -25.0826, -25.9365, -27.3051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8591, device='cuda:0', dtype=torch.float64)
tensor([-21.0001, -24.9823, -25.1663, -25.9942, -27.3421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8778, device='cuda:0', dtype=torch.float64)
tensor([-21.0706, -25.0134, -25.2715, -25.9733, -27.3322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8927, device='cuda:0', dtype=torch.float64)
tensor([-21.1806, -24.9984, -25.3854, -25.9398, -27.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([-21.2582, -24.9285, -25.4329, -25.8672, -27.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9919, device='cuda:0', dtype=torch.float64)
tensor([-21.3240, -24.8589, -25.4795, -25.8348, -27.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8294, device='cuda:0', dtype=torch.float64)
tensor([-21.3820, -24.8029, -25.5099, -25.8395, -27.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9490, device='cuda:0', dtype=torch.float64)
tensor([-21.4302, -24.7409, -25.4924, -25.8577, -27.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9015, device='cuda:0', dtype=torch.float64)
tensor([-21.4151, -24.6893, -25.4733, -25.8916, -27.2807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7506, device='cuda:0', dtype=torch.float64)
tensor([-21.4031, -24.6506, -25.4690, -25.9107, -27.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8013, device='cuda:0', dtype=torch.float64)
tensor([-21.3433, -24.6245, -25.4769, -25.9385, -27.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9063, device='cuda:0', dtype=torch.float64)
tensor([-21.2702, -24.5917, -25.4936, -25.9553, -27.4414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8658, device='cuda:0', dtype=torch.float64)
tensor([-21.1622, -24.5520, -25.5282, -25.9691, -27.5085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9197, device='cuda:0', dtype=torch.float64)
tensor([-21.0421, -24.5442, -25.5590, -25.9737, -27.5955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8383, device='cuda:0', dtype=torch.float64)
tensor([-20.9245, -24.5403, -25.6076, -25.9582, -27.6669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8926, device='cuda:0', dtype=torch.float64)
tensor([-20.8699, -24.5329, -25.6585, -25.9513, -27.6985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8060, device='cuda:0', dtype=torch.float64)
tensor([-20.7617, -24.5143, -25.6375, -25.9585, -27.7190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8811, device='cuda:0', dtype=torch.float64)
tensor([-20.6838, -24.4885, -25.6615, -25.9707, -27.7472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7710, device='cuda:0', dtype=torch.float64)
tensor([-20.6278, -24.4682, -25.6842, -26.0023, -27.7742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8651, device='cuda:0', dtype=torch.float64)
tensor([-20.5552, -24.4612, -25.6955, -26.0390, -27.8227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8173, device='cuda:0', dtype=torch.float64)
tensor([-20.5342, -24.4727, -25.7536, -26.0749, -27.9233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8955, device='cuda:0', dtype=torch.float64)
tensor([-20.5117, -24.4759, -25.8140, -26.0986, -28.0330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9375, device='cuda:0', dtype=torch.float64)
tensor([-20.5499, -24.5315, -25.9070, -26.1806, -28.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8264, device='cuda:0', dtype=torch.float64)
tensor([-20.5881, -24.6165, -25.9900, -26.2755, -28.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9169, device='cuda:0', dtype=torch.float64)
tensor([-20.6129, -24.6894, -26.0610, -26.3669, -28.5559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9261, device='cuda:0', dtype=torch.float64)
tensor([-20.6078, -24.7488, -26.1048, -26.4843, -28.7337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8676, device='cuda:0', dtype=torch.float64)
tensor([-20.6113, -24.8140, -26.1661, -26.5929, -28.9167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7785, device='cuda:0', dtype=torch.float64)
tensor([-20.6304, -24.9234, -26.2263, -26.7501, -29.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9575, device='cuda:0', dtype=torch.float64)
tensor([-20.6200, -24.9895, -26.2442, -26.8326, -29.3017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7872, device='cuda:0', dtype=torch.float64)
tensor([-20.5545, -25.0196, -26.2403, -26.8944, -29.4693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7736, device='cuda:0', dtype=torch.float64)
tensor([-20.4886, -25.0079, -26.2516, -26.9463, -29.6170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8063, device='cuda:0', dtype=torch.float64)
tensor([-20.4298, -25.0049, -26.2556, -26.9880, -29.7513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8144, device='cuda:0', dtype=torch.float64)
tensor([-20.3144, -24.9406, -26.2329, -26.9816, -29.8507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7404, device='cuda:0', dtype=torch.float64)
tensor([-20.2246, -24.8900, -26.2080, -26.9791, -29.9285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8340, device='cuda:0', dtype=torch.float64)
tensor([-20.1241, -24.8622, -26.1577, -27.0132, -30.0159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8684, device='cuda:0', dtype=torch.float64)
tensor([-20.0245, -24.8052, -26.1045, -27.0233, -30.0641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8398, device='cuda:0', dtype=torch.float64)
tensor([-19.9418, -24.8122, -26.0498, -27.0293, -30.1405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8069, device='cuda:0', dtype=torch.float64)
tensor([-19.8131, -24.7561, -25.9511, -27.0042, -30.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7934, device='cuda:0', dtype=torch.float64)
tensor([-19.6761, -24.6990, -25.8577, -26.9792, -30.1571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8817, device='cuda:0', dtype=torch.float64)
tensor([-19.5400, -24.6380, -25.8033, -26.9657, -30.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8738, device='cuda:0', dtype=torch.float64)
tensor([-19.4405, -24.5884, -25.7539, -26.9647, -30.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9862, device='cuda:0', dtype=torch.float64)
tensor([-19.3931, -24.6112, -25.7415, -27.0071, -30.2079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6786, device='cuda:0', dtype=torch.float64)
tensor([-19.3002, -24.6181, -25.7240, -27.0568, -30.2324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8575, device='cuda:0', dtype=torch.float64)
tensor([-19.2335, -24.6594, -25.7463, -27.1039, -30.2684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([-19.1715, -24.7088, -25.7625, -27.1650, -30.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8624, device='cuda:0', dtype=torch.float64)
tensor([-19.1474, -24.7766, -25.7753, -27.2212, -30.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7159, device='cuda:0', dtype=torch.float64)
tensor([-19.1458, -24.8521, -25.8208, -27.3029, -30.3764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9290, device='cuda:0', dtype=torch.float64)
tensor([-19.1243, -24.8786, -25.8582, -27.3385, -30.3488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8357, device='cuda:0', dtype=torch.float64)
tensor([-19.0976, -24.8619, -25.9010, -27.3140, -30.2935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0025, device='cuda:0', dtype=torch.float64)
tensor([-19.0674, -24.8996, -25.9841, -27.3378, -30.2886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8746, device='cuda:0', dtype=torch.float64)
tensor([-19.0598, -24.9196, -26.0513, -27.3676, -30.2653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7998, device='cuda:0', dtype=torch.float64)
tensor([-19.0694, -24.9426, -26.1312, -27.3851, -30.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7957, device='cuda:0', dtype=torch.float64)
tensor([-19.1021, -24.9888, -26.1874, -27.4099, -30.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7423, device='cuda:0', dtype=torch.float64)
tensor([-19.1153, -25.0170, -26.2346, -27.4189, -30.3736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8128, device='cuda:0', dtype=torch.float64)
tensor([-19.1440, -25.0077, -26.2437, -27.3943, -30.3441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9010, device='cuda:0', dtype=torch.float64)
tensor([-19.1809, -25.0113, -26.2781, -27.3759, -30.3002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9200, device='cuda:0', dtype=torch.float64)
tensor([-19.2402, -25.0606, -26.3189, -27.3586, -30.2771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8420, device='cuda:0', dtype=torch.float64)
tensor([-19.2799, -25.1443, -26.3285, -27.3432, -30.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7635, device='cuda:0', dtype=torch.float64)
tensor([-19.3206, -25.2279, -26.3494, -27.3563, -30.2949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8210, device='cuda:0', dtype=torch.float64)
tensor([-19.3819, -25.3184, -26.3505, -27.3431, -30.3117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7459, device='cuda:0', dtype=torch.float64)
tensor([-19.4718, -25.4345, -26.3823, -27.3276, -30.3247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8090, device='cuda:0', dtype=torch.float64)
tensor([-19.5368, -25.5422, -26.4243, -27.3207, -30.3371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8434, device='cuda:0', dtype=torch.float64)
tensor([-19.6350, -25.6514, -26.4635, -27.3025, -30.3549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8055, device='cuda:0', dtype=torch.float64)
tensor([-19.7488, -25.7527, -26.4868, -27.2796, -30.3565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8056, device='cuda:0', dtype=torch.float64)
tensor([-19.9075, -25.8560, -26.4934, -27.2458, -30.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7627, device='cuda:0', dtype=torch.float64)
tensor([-20.0037, -25.9385, -26.4804, -27.2016, -30.3197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8249, device='cuda:0', dtype=torch.float64)
tensor([-20.0540, -26.0255, -26.4845, -27.1747, -30.3495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8021, device='cuda:0', dtype=torch.float64)
tensor([-20.1225, -26.1069, -26.5012, -27.1556, -30.3662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8433, device='cuda:0', dtype=torch.float64)
tensor([-20.1693, -26.1708, -26.4835, -27.0942, -30.4053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6947, device='cuda:0', dtype=torch.float64)
tensor([-20.1927, -26.2247, -26.4901, -27.0427, -30.4559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7435, device='cuda:0', dtype=torch.float64)
tensor([-20.2006, -26.2701, -26.5101, -27.0288, -30.4966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7732, device='cuda:0', dtype=torch.float64)
tensor([-20.1426, -26.3317, -26.5064, -27.0586, -30.5632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7794, device='cuda:0', dtype=torch.float64)
tensor([-20.0995, -26.4494, -26.5121, -27.1124, -30.6745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7253, device='cuda:0', dtype=torch.float64)
tensor([-20.0767, -26.5537, -26.5281, -27.1708, -30.8253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7565, device='cuda:0', dtype=torch.float64)
tensor([-20.0507, -26.6804, -26.5407, -27.2456, -30.9976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0094, device='cuda:0', dtype=torch.float64)
tensor([-20.0293, -26.7954, -26.6233, -27.3384, -31.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8572, device='cuda:0', dtype=torch.float64)
tensor([-19.9976, -26.9380, -26.7061, -27.4502, -31.3631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7637, device='cuda:0', dtype=torch.float64)
tensor([-20.0198, -27.0414, -26.8419, -27.5558, -31.5284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0132, device='cuda:0', dtype=torch.float64)
tensor([-20.1178, -27.2190, -27.0244, -27.6895, -31.6937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8262, device='cuda:0', dtype=torch.float64)
tensor([-20.2405, -27.4246, -27.2320, -27.8692, -31.8760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7464, device='cuda:0', dtype=torch.float64)
tensor([-20.3072, -27.5949, -27.3927, -28.0087, -31.9997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7600, device='cuda:0', dtype=torch.float64)
tensor([-20.3300, -27.7289, -27.5327, -28.1493, -32.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8308, device='cuda:0', dtype=torch.float64)
tensor([-20.3667, -27.8326, -27.6731, -28.2548, -32.1964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8645, device='cuda:0', dtype=torch.float64)
tensor([-20.3683, -27.9101, -27.7940, -28.3086, -32.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7827, device='cuda:0', dtype=torch.float64)
tensor([-20.3511, -27.9356, -27.9013, -28.3358, -32.2930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8178, device='cuda:0', dtype=torch.float64)
tensor([-20.3742, -27.9916, -28.0266, -28.3564, -32.2952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8779, device='cuda:0', dtype=torch.float64)
tensor([-20.4215, -28.0307, -28.1240, -28.3860, -32.2947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6530, device='cuda:0', dtype=torch.float64)
tensor([-20.4841, -28.0629, -28.2139, -28.3968, -32.2738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7362, device='cuda:0', dtype=torch.float64)
tensor([-20.5450, -28.0994, -28.3180, -28.4167, -32.2821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8748, device='cuda:0', dtype=torch.float64)
tensor([-20.5942, -28.1599, -28.4215, -28.4443, -32.2871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8048, device='cuda:0', dtype=torch.float64)
tensor([-20.6083, -28.1940, -28.4815, -28.4919, -32.3130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8348, device='cuda:0', dtype=torch.float64)
tensor([-20.6282, -28.2615, -28.5384, -28.5775, -32.3580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7709, device='cuda:0', dtype=torch.float64)
tensor([-20.6389, -28.3078, -28.5611, -28.6416, -32.3731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9038, device='cuda:0', dtype=torch.float64)
tensor([-20.6605, -28.3667, -28.5798, -28.6717, -32.4026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7485, device='cuda:0', dtype=torch.float64)
tensor([-20.6672, -28.4341, -28.6087, -28.7140, -32.4148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6882, device='cuda:0', dtype=torch.float64)
tensor([-20.6401, -28.5117, -28.6359, -28.7282, -32.4234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7697, device='cuda:0', dtype=torch.float64)
tensor([-20.6151, -28.5518, -28.6550, -28.6977, -32.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7561, device='cuda:0', dtype=torch.float64)
tensor([-20.6202, -28.6147, -28.6554, -28.6510, -32.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-20.6449, -28.6491, -28.6542, -28.6116, -32.2807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7395, device='cuda:0', dtype=torch.float64)
tensor([-20.6591, -28.7348, -28.6508, -28.6046, -32.2934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8819, device='cuda:0', dtype=torch.float64)
tensor([-20.6363, -28.7853, -28.5971, -28.5749, -32.2626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7426, device='cuda:0', dtype=torch.float64)
tensor([-20.6624, -28.8311, -28.5280, -28.5196, -32.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-20.7209, -28.8344, -28.4670, -28.4725, -32.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7761, device='cuda:0', dtype=torch.float64)
tensor([-20.7942, -28.8379, -28.3745, -28.4125, -32.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7954, device='cuda:0', dtype=torch.float64)
tensor([-20.8592, -28.8642, -28.3379, -28.3662, -32.1247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6964, device='cuda:0', dtype=torch.float64)
tensor([-20.8994, -28.8919, -28.2536, -28.3052, -32.1035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8255, device='cuda:0', dtype=torch.float64)
tensor([-20.9685, -28.9634, -28.2184, -28.2423, -32.0551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8928, device='cuda:0', dtype=torch.float64)
tensor([-21.0424, -28.9848, -28.1700, -28.1536, -31.9747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7815, device='cuda:0', dtype=torch.float64)
tensor([-21.1013, -29.0098, -28.1365, -28.0549, -31.8866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8229, device='cuda:0', dtype=torch.float64)
tensor([-21.1429, -29.0668, -28.0744, -27.9698, -31.8023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9069, device='cuda:0', dtype=torch.float64)
tensor([-21.1688, -29.0993, -27.9895, -27.8835, -31.7181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9038, device='cuda:0', dtype=torch.float64)
tensor([-21.1950, -29.1676, -27.9366, -27.8164, -31.6568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8796, device='cuda:0', dtype=torch.float64)
tensor([-21.2034, -29.2408, -27.8995, -27.7584, -31.5811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8924, device='cuda:0', dtype=torch.float64)
tensor([-21.2351, -29.2997, -27.8816, -27.6764, -31.5081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7634, device='cuda:0', dtype=torch.float64)
tensor([-21.2760, -29.3799, -27.8719, -27.6160, -31.4550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8647, device='cuda:0', dtype=torch.float64)
tensor([-21.3417, -29.4514, -27.8946, -27.5432, -31.4047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8045, device='cuda:0', dtype=torch.float64)
tensor([-21.3917, -29.5587, -27.9073, -27.5295, -31.3892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8275, device='cuda:0', dtype=torch.float64)
tensor([-21.4311, -29.6252, -27.9075, -27.4911, -31.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9320, device='cuda:0', dtype=torch.float64)
tensor([-21.4942, -29.6914, -27.8878, -27.4207, -31.2989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6881, device='cuda:0', dtype=torch.float64)
tensor([-21.5739, -29.7862, -27.8970, -27.3597, -31.2487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9648, device='cuda:0', dtype=torch.float64)
tensor([-21.6794, -29.8732, -27.8359, -27.2967, -31.1623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8061, device='cuda:0', dtype=torch.float64)
tensor([-21.7567, -29.9398, -27.8017, -27.2335, -31.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7485, device='cuda:0', dtype=torch.float64)
tensor([-21.8280, -30.0089, -27.7394, -27.1596, -31.0120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8129, device='cuda:0', dtype=torch.float64)
tensor([-21.9183, -30.0601, -27.6863, -27.0968, -30.9413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7212, device='cuda:0', dtype=torch.float64)
tensor([-21.9661, -30.1067, -27.6360, -27.0362, -30.8435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([-22.0286, -30.1977, -27.6338, -27.0016, -30.7945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-22.0562, -30.2715, -27.6688, -26.9537, -30.7139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7982, device='cuda:0', dtype=torch.float64)
tensor([-22.0760, -30.3999, -27.7347, -26.9252, -30.6481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6527, device='cuda:0', dtype=torch.float64)
tensor([-22.0783, -30.5096, -27.8054, -26.8825, -30.5818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([-22.0249, -30.5682, -27.8478, -26.8151, -30.4691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8457, device='cuda:0', dtype=torch.float64)
tensor([-22.0053, -30.6930, -27.9195, -26.7693, -30.4015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6696, device='cuda:0', dtype=torch.float64)
tensor([-22.0182, -30.8485, -28.0196, -26.7649, -30.3345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7121, device='cuda:0', dtype=torch.float64)
tensor([-22.0058, -30.9405, -28.0885, -26.7565, -30.2869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8759, device='cuda:0', dtype=torch.float64)
tensor([-22.0257, -31.0794, -28.1752, -26.8039, -30.3094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7766, device='cuda:0', dtype=torch.float64)
tensor([-22.0451, -31.2146, -28.2587, -26.8684, -30.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6732, device='cuda:0', dtype=torch.float64)
tensor([-22.0431, -31.3154, -28.3429, -26.9298, -30.3942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8518, device='cuda:0', dtype=torch.float64)
tensor([-22.0570, -31.4175, -28.4413, -26.9666, -30.4155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8545, device='cuda:0', dtype=torch.float64)
tensor([-22.0426, -31.4443, -28.4818, -26.9431, -30.3773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7309, device='cuda:0', dtype=torch.float64)
tensor([-22.0073, -31.4419, -28.5357, -26.9456, -30.3364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8188, device='cuda:0', dtype=torch.float64)
tensor([-21.9526, -31.4698, -28.5666, -26.9447, -30.3342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7947, device='cuda:0', dtype=torch.float64)
tensor([-21.9388, -31.4940, -28.5876, -26.9519, -30.3390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7652, device='cuda:0', dtype=torch.float64)
tensor([-21.9715, -31.5112, -28.6017, -26.9705, -30.3267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7902, device='cuda:0', dtype=torch.float64)
tensor([-22.0280, -31.5431, -28.6830, -26.9728, -30.3491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7007, device='cuda:0', dtype=torch.float64)
tensor([-22.0903, -31.5829, -28.7424, -26.9669, -30.3714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7424, device='cuda:0', dtype=torch.float64)
tensor([-22.1764, -31.6193, -28.7941, -26.9432, -30.4117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8480, device='cuda:0', dtype=torch.float64)
tensor([-22.2490, -31.6548, -28.8345, -26.9301, -30.4405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9621, device='cuda:0', dtype=torch.float64)
tensor([-22.3278, -31.7899, -28.9056, -26.9982, -30.5407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8847, device='cuda:0', dtype=torch.float64)
tensor([-22.4537, -31.9334, -28.9822, -27.0536, -30.6568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([-22.5973, -32.1311, -29.1021, -27.0719, -30.7868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7352, device='cuda:0', dtype=torch.float64)
tensor([-22.7063, -32.2748, -29.1565, -27.0453, -30.8696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8870, device='cuda:0', dtype=torch.float64)
tensor([-22.7734, -32.3942, -29.1807, -26.9869, -30.9113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8202, device='cuda:0', dtype=torch.float64)
tensor([-22.7783, -32.5278, -29.2121, -26.9640, -30.9615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-22.7944, -32.6185, -29.2604, -26.9330, -31.0276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8999, device='cuda:0', dtype=torch.float64)
tensor([-22.8280, -32.7825, -29.3438, -26.9055, -31.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8272, device='cuda:0', dtype=torch.float64)
tensor([-22.8341, -32.8312, -29.3761, -26.8125, -31.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8319, device='cuda:0', dtype=torch.float64)
tensor([-22.8695, -32.8552, -29.3756, -26.7352, -31.2663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7951, device='cuda:0', dtype=torch.float64)
tensor([-22.9655, -32.9229, -29.4369, -26.6725, -31.3640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8690, device='cuda:0', dtype=torch.float64)
tensor([-23.0301, -32.9917, -29.5001, -26.6482, -31.4677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7784, device='cuda:0', dtype=torch.float64)
tensor([-23.0564, -33.0309, -29.5244, -26.6239, -31.5037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7697, device='cuda:0', dtype=torch.float64)
tensor([-23.0918, -33.0353, -29.5167, -26.6283, -31.5211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7605, device='cuda:0', dtype=torch.float64)
tensor([-23.1361, -33.0248, -29.5206, -26.6489, -31.5439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-23.2003, -32.9719, -29.5349, -26.6650, -31.5468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7382, device='cuda:0', dtype=torch.float64)
tensor([-23.3092, -32.9396, -29.5827, -26.6876, -31.5744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7411, device='cuda:0', dtype=torch.float64)
tensor([-23.4382, -32.9102, -29.6441, -26.7109, -31.6350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6554, device='cuda:0', dtype=torch.float64)
tensor([-23.5178, -32.8672, -29.6695, -26.7578, -31.6886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7663, device='cuda:0', dtype=torch.float64)
tensor([-23.5849, -32.8441, -29.7036, -26.7945, -31.7650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6400, device='cuda:0', dtype=torch.float64)
tensor([-23.6539, -32.7997, -29.7497, -26.8174, -31.8266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8824, device='cuda:0', dtype=torch.float64)
tensor([-23.6917, -32.7682, -29.7405, -26.8703, -31.9520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8249, device='cuda:0', dtype=torch.float64)
tensor([-23.7491, -32.8367, -29.7704, -26.9892, -32.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-23.8420, -32.8845, -29.7888, -27.0769, -32.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8748, device='cuda:0', dtype=torch.float64)
tensor([-23.8946, -32.9035, -29.8148, -27.1271, -32.3220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7404, device='cuda:0', dtype=torch.float64)
tensor([-24.0046, -32.9881, -29.9213, -27.2296, -32.4703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7113, device='cuda:0', dtype=torch.float64)
tensor([-24.0805, -33.0523, -30.0100, -27.3328, -32.5921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8284, device='cuda:0', dtype=torch.float64)
tensor([-24.1779, -33.0279, -30.0726, -27.3739, -32.6542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8759, device='cuda:0', dtype=torch.float64)
tensor([-24.3024, -33.0290, -30.1986, -27.4466, -32.7137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7065, device='cuda:0', dtype=torch.float64)
tensor([-24.3887, -33.0462, -30.3220, -27.5092, -32.7799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8696, device='cuda:0', dtype=torch.float64)
tensor([-24.4902, -33.1473, -30.4734, -27.6212, -32.8793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7748, device='cuda:0', dtype=torch.float64)
tensor([-24.6422, -33.2095, -30.6081, -27.7402, -32.9775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6903, device='cuda:0', dtype=torch.float64)
tensor([-24.7732, -33.2416, -30.7102, -27.8329, -33.0577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7614, device='cuda:0', dtype=torch.float64)
tensor([-24.9114, -33.2689, -30.8142, -27.9442, -33.1058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6420, device='cuda:0', dtype=torch.float64)
tensor([-25.0027, -33.2816, -30.8976, -28.0403, -33.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7063, device='cuda:0', dtype=torch.float64)
tensor([-25.1039, -33.2803, -30.9578, -28.1293, -33.1559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7786, device='cuda:0', dtype=torch.float64)
tensor([-25.1923, -33.3073, -31.0370, -28.2428, -33.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7586, device='cuda:0', dtype=torch.float64)
tensor([-25.2404, -33.2794, -31.0561, -28.3103, -33.1591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9022, device='cuda:0', dtype=torch.float64)
tensor([-25.2383, -33.2460, -31.0490, -28.3943, -33.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7332, device='cuda:0', dtype=torch.float64)
tensor([-25.2079, -33.2419, -31.0658, -28.5344, -33.2024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7697, device='cuda:0', dtype=torch.float64)
tensor([-25.1378, -33.1910, -31.0036, -28.6239, -33.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6816, device='cuda:0', dtype=torch.float64)
tensor([-25.0473, -33.1305, -30.9288, -28.7229, -33.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7836, device='cuda:0', dtype=torch.float64)
tensor([-24.9768, -33.0659, -30.8719, -28.7874, -33.3541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7801, device='cuda:0', dtype=torch.float64)
tensor([-24.9003, -33.0590, -30.8296, -28.9014, -33.4310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7768, device='cuda:0', dtype=torch.float64)
tensor([-24.8728, -33.0758, -30.7929, -29.0175, -33.4871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7912, device='cuda:0', dtype=torch.float64)
tensor([-24.8493, -33.0609, -30.7630, -29.1216, -33.5318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7968, device='cuda:0', dtype=torch.float64)
tensor([-24.8050, -33.1046, -30.7340, -29.2503, -33.5990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9009, device='cuda:0', dtype=torch.float64)
tensor([-24.8173, -33.1382, -30.7092, -29.3159, -33.6208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8043, device='cuda:0', dtype=torch.float64)
tensor([-24.8540, -33.2113, -30.6870, -29.4070, -33.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7569, device='cuda:0', dtype=torch.float64)
tensor([-24.8983, -33.2888, -30.6682, -29.4725, -33.7051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6412, device='cuda:0', dtype=torch.float64)
tensor([-24.9521, -33.4019, -30.6925, -29.5921, -33.7997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7152, device='cuda:0', dtype=torch.float64)
tensor([-25.0082, -33.4863, -30.7404, -29.6917, -33.8442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8008, device='cuda:0', dtype=torch.float64)
tensor([-25.0281, -33.5478, -30.8018, -29.7586, -33.8603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8182, device='cuda:0', dtype=torch.float64)
tensor([-25.1092, -33.7079, -30.8956, -29.8784, -33.9402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7151, device='cuda:0', dtype=torch.float64)
tensor([-25.1702, -33.8612, -30.9837, -29.9740, -34.0047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7160, device='cuda:0', dtype=torch.float64)
tensor([-25.2342, -34.0417, -31.1076, -30.0722, -34.0696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7287, device='cuda:0', dtype=torch.float64)
tensor([-25.3335, -34.1925, -31.1902, -30.1419, -34.1195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7399, device='cuda:0', dtype=torch.float64)
tensor([-25.4529, -34.3461, -31.3203, -30.2266, -34.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6829, device='cuda:0', dtype=torch.float64)
tensor([-25.5408, -34.4881, -31.4345, -30.3054, -34.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8383, device='cuda:0', dtype=torch.float64)
tensor([-25.5966, -34.6015, -31.5063, -30.3840, -34.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7584, device='cuda:0', dtype=torch.float64)
tensor([-25.6428, -34.7255, -31.5858, -30.5008, -34.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6608, device='cuda:0', dtype=torch.float64)
tensor([-25.6687, -34.7930, -31.6389, -30.5927, -34.4731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8540, device='cuda:0', dtype=torch.float64)
tensor([-25.6845, -34.8307, -31.7006, -30.6702, -34.5377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7184, device='cuda:0', dtype=torch.float64)
tensor([-25.6792, -34.8449, -31.7394, -30.7247, -34.6155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7062, device='cuda:0', dtype=torch.float64)
tensor([-25.6380, -34.8527, -31.7696, -30.8066, -34.6884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7868, device='cuda:0', dtype=torch.float64)
tensor([-25.5499, -34.7933, -31.7526, -30.8211, -34.7120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7805, device='cuda:0', dtype=torch.float64)
tensor([-25.4431, -34.7406, -31.7549, -30.8644, -34.7822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7509, device='cuda:0', dtype=torch.float64)
tensor([-25.2912, -34.7167, -31.7237, -30.9311, -34.8674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8367, device='cuda:0', dtype=torch.float64)
tensor([-25.1452, -34.7896, -31.7089, -31.0163, -35.0046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8159, device='cuda:0', dtype=torch.float64)
tensor([-25.0348, -34.9260, -31.7026, -31.0882, -35.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7107, device='cuda:0', dtype=torch.float64)
tensor([-24.9455, -35.0226, -31.7261, -31.1635, -35.2860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7511, device='cuda:0', dtype=torch.float64)
tensor([-24.8287, -35.1101, -31.7348, -31.2286, -35.4375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8224, device='cuda:0', dtype=torch.float64)
tensor([-24.7664, -35.2102, -31.7401, -31.3059, -35.5731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6708, device='cuda:0', dtype=torch.float64)
tensor([-24.7580, -35.3506, -31.7558, -31.3885, -35.6772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6788, device='cuda:0', dtype=torch.float64)
tensor([-24.7297, -35.4775, -31.7593, -31.4649, -35.7696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7444, device='cuda:0', dtype=torch.float64)
tensor([-24.7118, -35.6417, -31.7735, -31.5801, -35.8794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7152, device='cuda:0', dtype=torch.float64)
tensor([-24.6799, -35.7169, -31.7666, -31.6474, -35.9391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8141, device='cuda:0', dtype=torch.float64)
tensor([-24.6723, -35.7984, -31.7519, -31.6472, -35.9422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9585, device='cuda:0', dtype=torch.float64)
tensor([-24.7094, -35.9230, -31.7622, -31.6988, -35.9638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8771, device='cuda:0', dtype=torch.float64)
tensor([-24.7254, -36.0981, -31.7792, -31.7562, -36.0430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8445, device='cuda:0', dtype=torch.float64)
tensor([-24.7981, -36.2370, -31.8003, -31.7658, -36.1070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8003, device='cuda:0', dtype=torch.float64)
tensor([-24.8874, -36.4385, -31.8561, -31.7986, -36.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7955, device='cuda:0', dtype=torch.float64)
tensor([-24.9332, -36.6207, -31.9099, -31.8427, -36.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6862, device='cuda:0', dtype=torch.float64)
tensor([-24.9732, -36.8203, -31.9802, -31.9206, -36.3882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7799, device='cuda:0', dtype=torch.float64)
tensor([-25.0508, -37.0258, -32.0476, -31.9977, -36.4883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6811, device='cuda:0', dtype=torch.float64)
tensor([-25.1542, -37.2514, -32.1241, -32.0958, -36.5854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8385, device='cuda:0', dtype=torch.float64)
tensor([-25.2311, -37.4798, -32.2494, -32.2285, -36.7027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7530, device='cuda:0', dtype=torch.float64)
tensor([-25.3392, -37.6808, -32.3388, -32.3306, -36.7978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8315, device='cuda:0', dtype=torch.float64)
tensor([-25.4452, -37.8975, -32.4165, -32.4261, -36.8556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6864, device='cuda:0', dtype=torch.float64)
tensor([-25.5716, -38.0596, -32.5074, -32.5048, -36.8834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6848, device='cuda:0', dtype=torch.float64)
tensor([-25.6933, -38.2062, -32.6042, -32.6178, -36.9215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7651, device='cuda:0', dtype=torch.float64)
tensor([-25.8824, -38.4096, -32.7087, -32.7435, -36.9608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6528, device='cuda:0', dtype=torch.float64)
tensor([-26.0231, -38.5406, -32.7872, -32.8089, -36.9827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6921, device='cuda:0', dtype=torch.float64)
tensor([-26.1683, -38.6992, -32.8859, -32.8810, -37.0084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7146, device='cuda:0', dtype=torch.float64)
tensor([-26.3192, -38.8765, -33.0176, -33.0008, -37.0539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8007, device='cuda:0', dtype=torch.float64)
tensor([-26.4632, -39.0495, -33.1746, -33.1394, -37.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7535, device='cuda:0', dtype=torch.float64)
tensor([-26.6063, -39.2044, -33.3015, -33.2737, -37.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6471, device='cuda:0', dtype=torch.float64)
tensor([-26.7269, -39.3570, -33.4599, -33.3830, -37.2905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7933, device='cuda:0', dtype=torch.float64)
tensor([-26.8262, -39.4838, -33.6544, -33.5008, -37.3879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7446, device='cuda:0', dtype=torch.float64)
tensor([-26.9048, -39.5517, -33.8384, -33.5708, -37.4590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7474, device='cuda:0', dtype=torch.float64)
tensor([-27.0466, -39.5937, -34.0248, -33.6272, -37.5226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6680, device='cuda:0', dtype=torch.float64)
tensor([-27.2338, -39.6898, -34.2126, -33.7183, -37.5966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7568, device='cuda:0', dtype=torch.float64)
tensor([-27.3949, -39.7721, -34.3825, -33.8067, -37.6526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7214, device='cuda:0', dtype=torch.float64)
tensor([-27.5519, -39.7786, -34.5049, -33.8696, -37.7258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6689, device='cuda:0', dtype=torch.float64)
tensor([-27.6918, -39.8194, -34.6262, -33.9374, -37.7886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6895, device='cuda:0', dtype=torch.float64)
tensor([-27.8101, -39.9139, -34.7267, -34.0424, -37.8713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7207, device='cuda:0', dtype=torch.float64)
tensor([-27.9163, -40.0388, -34.8184, -34.1946, -38.0024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8038, device='cuda:0', dtype=torch.float64)
tensor([-28.0163, -40.2500, -34.9462, -34.4136, -38.2065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7403, device='cuda:0', dtype=torch.float64)
tensor([-28.1153, -40.4240, -35.0484, -34.6088, -38.4054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7295, device='cuda:0', dtype=torch.float64)
tensor([-28.2242, -40.5861, -35.1498, -34.7975, -38.6034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6714, device='cuda:0', dtype=torch.float64)
tensor([-28.3637, -40.7457, -35.2343, -34.9071, -38.7682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7835, device='cuda:0', dtype=torch.float64)
tensor([-28.5023, -40.8999, -35.3575, -34.9901, -38.8896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8321, device='cuda:0', dtype=torch.float64)
tensor([-28.6191, -41.0302, -35.4764, -35.0619, -39.0357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7301, device='cuda:0', dtype=torch.float64)
tensor([-28.7692, -41.1419, -35.6000, -35.1057, -39.1632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6671, device='cuda:0', dtype=torch.float64)
tensor([-28.8954, -41.2382, -35.7112, -35.1259, -39.2814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7506, device='cuda:0', dtype=torch.float64)
tensor([-29.0353, -41.3634, -35.8091, -35.1635, -39.3775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6581, device='cuda:0', dtype=torch.float64)
tensor([-29.1699, -41.4653, -35.9054, -35.2054, -39.4434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7636, device='cuda:0', dtype=torch.float64)
tensor([-29.2645, -41.4898, -35.9356, -35.1659, -39.4418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7502, device='cuda:0', dtype=torch.float64)
tensor([-29.2804, -41.4651, -35.9399, -35.0978, -39.3991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7924, device='cuda:0', dtype=torch.float64)
tensor([-29.2932, -41.4688, -35.9282, -35.0426, -39.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7188, device='cuda:0', dtype=torch.float64)
tensor([-29.2777, -41.4137, -35.9074, -34.9678, -39.3017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8084, device='cuda:0', dtype=torch.float64)
tensor([-29.2132, -41.3325, -35.8883, -34.8957, -39.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6664, device='cuda:0', dtype=torch.float64)
tensor([-29.1650, -41.2916, -35.8926, -34.8549, -39.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7302, device='cuda:0', dtype=torch.float64)
tensor([-29.1366, -41.2293, -35.8975, -34.7933, -39.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6429, device='cuda:0', dtype=torch.float64)
tensor([-29.1129, -41.1866, -35.8923, -34.7343, -39.0697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7222, device='cuda:0', dtype=torch.float64)
tensor([-29.1181, -41.1652, -35.9397, -34.7129, -39.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7009, device='cuda:0', dtype=torch.float64)
tensor([-29.1313, -41.1816, -35.9703, -34.7114, -39.1096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7346, device='cuda:0', dtype=torch.float64)
tensor([-29.1549, -41.2369, -36.0143, -34.7023, -39.1351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6796, device='cuda:0', dtype=torch.float64)
tensor([-29.1786, -41.2865, -36.0922, -34.7029, -39.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7598, device='cuda:0', dtype=torch.float64)
tensor([-29.1797, -41.3427, -36.1589, -34.7013, -39.2918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7177, device='cuda:0', dtype=torch.float64)
tensor([-29.2128, -41.4982, -36.2645, -34.7467, -39.4553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7467, device='cuda:0', dtype=torch.float64)
tensor([-29.2421, -41.6366, -36.3533, -34.8042, -39.6018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6766, device='cuda:0', dtype=torch.float64)
tensor([-29.2891, -41.8035, -36.4477, -34.8700, -39.7701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7913, device='cuda:0', dtype=torch.float64)
tensor([-29.3209, -41.9771, -36.5219, -34.8997, -39.8877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6410, device='cuda:0', dtype=torch.float64)
tensor([-29.3796, -42.1025, -36.5561, -34.8817, -39.9332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7141, device='cuda:0', dtype=torch.float64)
tensor([-29.5172, -42.2618, -36.6169, -34.8453, -39.9811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7770, device='cuda:0', dtype=torch.float64)
tensor([-29.6383, -42.3618, -36.6605, -34.7868, -40.0384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7893, device='cuda:0', dtype=torch.float64)
tensor([-29.7885, -42.5226, -36.7102, -34.7530, -40.1016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7684, device='cuda:0', dtype=torch.float64)
tensor([-29.9182, -42.6467, -36.7818, -34.7216, -40.1508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8175, device='cuda:0', dtype=torch.float64)
tensor([-30.0688, -42.7271, -36.8759, -34.6974, -40.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7024, device='cuda:0', dtype=torch.float64)
tensor([-30.1888, -42.8113, -36.9866, -34.6698, -40.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6414, device='cuda:0', dtype=torch.float64)
tensor([-30.3188, -42.8413, -37.1146, -34.6463, -40.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7844, device='cuda:0', dtype=torch.float64)
tensor([-30.4848, -42.9299, -37.2654, -34.6580, -40.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6971, device='cuda:0', dtype=torch.float64)
tensor([-30.6548, -43.0293, -37.4180, -34.6720, -40.1263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6768, device='cuda:0', dtype=torch.float64)
tensor([-30.8274, -43.0975, -37.5498, -34.6899, -40.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8126, device='cuda:0', dtype=torch.float64)
tensor([-31.0142, -43.2290, -37.6726, -34.7585, -40.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8146, device='cuda:0', dtype=torch.float64)
tensor([-31.2065, -43.3181, -37.7862, -34.8373, -40.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7526, device='cuda:0', dtype=torch.float64)
tensor([-31.4176, -43.4433, -37.9184, -34.9235, -40.1133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6606, device='cuda:0', dtype=torch.float64)
tensor([-31.6501, -43.5825, -38.0788, -35.0471, -40.1222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6926, device='cuda:0', dtype=torch.float64)
tensor([-31.8595, -43.7252, -38.2132, -35.1798, -40.1325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6953, device='cuda:0', dtype=torch.float64)
tensor([-32.0177, -43.8224, -38.3091, -35.3249, -40.1139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8034, device='cuda:0', dtype=torch.float64)
tensor([-32.1227, -43.8792, -38.4499, -35.4899, -40.0797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7112, device='cuda:0', dtype=torch.float64)
tensor([-32.2001, -43.8825, -38.5506, -35.6337, -40.0394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7367, device='cuda:0', dtype=torch.float64)
tensor([-32.2157, -43.8927, -38.6573, -35.8074, -40.0073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7071, device='cuda:0', dtype=torch.float64)
tensor([-32.2364, -43.9130, -38.7503, -35.9997, -40.0023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7819, device='cuda:0', dtype=torch.float64)
tensor([-32.2458, -43.9089, -38.8170, -36.1571, -39.9743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7084, device='cuda:0', dtype=torch.float64)
tensor([-32.2823, -43.9099, -38.9207, -36.2921, -39.9626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6728, device='cuda:0', dtype=torch.float64)
tensor([-32.2932, -43.8626, -39.0012, -36.3907, -39.8950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7491, device='cuda:0', dtype=torch.float64)
tensor([-32.3334, -43.8602, -39.0865, -36.5095, -39.8455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6230, device='cuda:0', dtype=torch.float64)
tensor([-32.3457, -43.7908, -39.1109, -36.5843, -39.8208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8046, device='cuda:0', dtype=torch.float64)
tensor([-32.3108, -43.6861, -39.0954, -36.6132, -39.7949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6347, device='cuda:0', dtype=torch.float64)
tensor([-32.2244, -43.5446, -39.0750, -36.5974, -39.7634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6870, device='cuda:0', dtype=torch.float64)
tensor([-32.1604, -43.4157, -39.0093, -36.5604, -39.7279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6754, device='cuda:0', dtype=torch.float64)
tensor([-32.1305, -43.3167, -38.9460, -36.5082, -39.6755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7217, device='cuda:0', dtype=torch.float64)
tensor([-32.1138, -43.1793, -38.8800, -36.4197, -39.5711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6521, device='cuda:0', dtype=torch.float64)
tensor([-32.1359, -43.0094, -38.7946, -36.3370, -39.4798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8050, device='cuda:0', dtype=torch.float64)
tensor([-32.1341, -42.8172, -38.6864, -36.2198, -39.3784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6941, device='cuda:0', dtype=torch.float64)
tensor([-32.1122, -42.6205, -38.5933, -36.1283, -39.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5630, device='cuda:0', dtype=torch.float64)
tensor([-32.1494, -42.4885, -38.5236, -36.0512, -39.2959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7028, device='cuda:0', dtype=torch.float64)
tensor([-32.1749, -42.3829, -38.4676, -36.0269, -39.3194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7999, device='cuda:0', dtype=torch.float64)
tensor([-32.1727, -42.2177, -38.4044, -35.9365, -39.2964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6605, device='cuda:0', dtype=torch.float64)
tensor([-32.1524, -42.0597, -38.3344, -35.8281, -39.2740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7307, device='cuda:0', dtype=torch.float64)
tensor([-32.1541, -41.8926, -38.2862, -35.7349, -39.2409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7359, device='cuda:0', dtype=torch.float64)
tensor([-32.1864, -41.7639, -38.2612, -35.6334, -39.2377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7261, device='cuda:0', dtype=torch.float64)
tensor([-32.2429, -41.7280, -38.2797, -35.5633, -39.2594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6960, device='cuda:0', dtype=torch.float64)
tensor([-32.2779, -41.7244, -38.3306, -35.5251, -39.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6860, device='cuda:0', dtype=torch.float64)
tensor([-32.3621, -41.7845, -38.3857, -35.5425, -39.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8359, device='cuda:0', dtype=torch.float64)
tensor([-32.4849, -41.7677, -38.4488, -35.5157, -39.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7629, device='cuda:0', dtype=torch.float64)
tensor([-32.5202, -41.7245, -38.4557, -35.4509, -39.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6710, device='cuda:0', dtype=torch.float64)
tensor([-32.5143, -41.6799, -38.4584, -35.3773, -39.3010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6020, device='cuda:0', dtype=torch.float64)
tensor([-32.5486, -41.6722, -38.4710, -35.3167, -39.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6583, device='cuda:0', dtype=torch.float64)
tensor([-32.5643, -41.7216, -38.4776, -35.2864, -39.3023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6286, device='cuda:0', dtype=torch.float64)
tensor([-32.5980, -41.7557, -38.4778, -35.2669, -39.3392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7608, device='cuda:0', dtype=torch.float64)
tensor([-32.6464, -41.7806, -38.4883, -35.2946, -39.3816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6544, device='cuda:0', dtype=torch.float64)
tensor([-32.7195, -41.8060, -38.5074, -35.2792, -39.3954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6607, device='cuda:0', dtype=torch.float64)
tensor([-32.7594, -41.7730, -38.5197, -35.2361, -39.3626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5896, device='cuda:0', dtype=torch.float64)
tensor([-32.8111, -41.7565, -38.5229, -35.2115, -39.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6509, device='cuda:0', dtype=torch.float64)
tensor([-32.8742, -41.7112, -38.5554, -35.1909, -39.3287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6145, device='cuda:0', dtype=torch.float64)
tensor([-32.9142, -41.7146, -38.6133, -35.1988, -39.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5238, device='cuda:0', dtype=torch.float64)
tensor([-32.9918, -41.7322, -38.6934, -35.2001, -39.3242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6628, device='cuda:0', dtype=torch.float64)
tensor([-33.0398, -41.7592, -38.8041, -35.2267, -39.3229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6689, device='cuda:0', dtype=torch.float64)
tensor([-33.0931, -41.8327, -38.9497, -35.3200, -39.3583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6908, device='cuda:0', dtype=torch.float64)
tensor([-33.0806, -41.8716, -39.0626, -35.3916, -39.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7041, device='cuda:0', dtype=torch.float64)
tensor([-33.1038, -41.9188, -39.1566, -35.4475, -39.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6881, device='cuda:0', dtype=torch.float64)
tensor([-33.0914, -41.9780, -39.2587, -35.4981, -39.4012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6654, device='cuda:0', dtype=torch.float64)
tensor([-33.0749, -42.0101, -39.3213, -35.5367, -39.4351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7048, device='cuda:0', dtype=torch.float64)
tensor([-33.0562, -42.0054, -39.3061, -35.5527, -39.4317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6749, device='cuda:0', dtype=torch.float64)
tensor([-33.0343, -41.9846, -39.2987, -35.5374, -39.4460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6645, device='cuda:0', dtype=torch.float64)
tensor([-33.0316, -41.9849, -39.2926, -35.5445, -39.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7730, device='cuda:0', dtype=torch.float64)
tensor([-33.0860, -42.0449, -39.3383, -35.6104, -39.5460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6822, device='cuda:0', dtype=torch.float64)
tensor([-33.1525, -42.0791, -39.3392, -35.6190, -39.6060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7180, device='cuda:0', dtype=torch.float64)
tensor([-33.2031, -42.1345, -39.3914, -35.6737, -39.7003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7965, device='cuda:0', dtype=torch.float64)
tensor([-33.2900, -42.1804, -39.4242, -35.6999, -39.7810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6792, device='cuda:0', dtype=torch.float64)
tensor([-33.3536, -42.2972, -39.4537, -35.7575, -39.9013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6281, device='cuda:0', dtype=torch.float64)
tensor([-33.4183, -42.4066, -39.4960, -35.7725, -40.0272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6783, device='cuda:0', dtype=torch.float64)
tensor([-33.5258, -42.5959, -39.5712, -35.8486, -40.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6728, device='cuda:0', dtype=torch.float64)
tensor([-33.6404, -42.8413, -39.6715, -35.9665, -40.4453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7843, device='cuda:0', dtype=torch.float64)
tensor([-33.7441, -43.0731, -39.7810, -36.0846, -40.6496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6584, device='cuda:0', dtype=torch.float64)
tensor([-33.8844, -43.2966, -39.8682, -36.1972, -40.7847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7543, device='cuda:0', dtype=torch.float64)
tensor([-34.0036, -43.5247, -39.9675, -36.3184, -40.9278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7049, device='cuda:0', dtype=torch.float64)
tensor([-34.1340, -43.6891, -40.0285, -36.3942, -41.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6872, device='cuda:0', dtype=torch.float64)
tensor([-34.2834, -43.8605, -40.0816, -36.5038, -41.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6238, device='cuda:0', dtype=torch.float64)
tensor([-34.4244, -43.9897, -40.1504, -36.6166, -41.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6979, device='cuda:0', dtype=torch.float64)
tensor([-34.5350, -44.0709, -40.2100, -36.6999, -41.2618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5635, device='cuda:0', dtype=torch.float64)
tensor([-34.6676, -44.1813, -40.2864, -36.7626, -41.3142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6314, device='cuda:0', dtype=torch.float64)
tensor([-34.7676, -44.3091, -40.3499, -36.8307, -41.3514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6849, device='cuda:0', dtype=torch.float64)
tensor([-34.8063, -44.3912, -40.3680, -36.8556, -41.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6906, device='cuda:0', dtype=torch.float64)
tensor([-34.8554, -44.4735, -40.3926, -36.9090, -41.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6149, device='cuda:0', dtype=torch.float64)
tensor([-34.9076, -44.5482, -40.4324, -36.9446, -41.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6437, device='cuda:0', dtype=torch.float64)
tensor([-34.9884, -44.5866, -40.4592, -36.9511, -41.4627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6507, device='cuda:0', dtype=torch.float64)
tensor([-35.0080, -44.5617, -40.4266, -36.9695, -41.4058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6304, device='cuda:0', dtype=torch.float64)
tensor([-34.9841, -44.5055, -40.3811, -37.0032, -41.3565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7455, device='cuda:0', dtype=torch.float64)
tensor([-35.0281, -44.4901, -40.4096, -37.0909, -41.3238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6236, device='cuda:0', dtype=torch.float64)
tensor([-35.0656, -44.4604, -40.4441, -37.1930, -41.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6246, device='cuda:0', dtype=torch.float64)
tensor([-35.1670, -44.4640, -40.5110, -37.2663, -41.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5376, device='cuda:0', dtype=torch.float64)
tensor([-35.2491, -44.4855, -40.5915, -37.3557, -41.2899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6163, device='cuda:0', dtype=torch.float64)
tensor([-35.3518, -44.4419, -40.6763, -37.4350, -41.2670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7083, device='cuda:0', dtype=torch.float64)
tensor([-35.4515, -44.3182, -40.7059, -37.4714, -41.1961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6088, device='cuda:0', dtype=torch.float64)
tensor([-35.5625, -44.2200, -40.7141, -37.5325, -41.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7233, device='cuda:0', dtype=torch.float64)
tensor([-35.6621, -44.1441, -40.7140, -37.5889, -41.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6897, device='cuda:0', dtype=torch.float64)
tensor([-35.7164, -44.0880, -40.6990, -37.6249, -41.0686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6681, device='cuda:0', dtype=torch.float64)
tensor([-35.7042, -44.0307, -40.6788, -37.6611, -41.0433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6462, device='cuda:0', dtype=torch.float64)
tensor([-35.6315, -43.9738, -40.6266, -37.6793, -41.0467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6920, device='cuda:0', dtype=torch.float64)
tensor([-35.5419, -43.9071, -40.5918, -37.7065, -41.0632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6042, device='cuda:0', dtype=torch.float64)
tensor([-35.4533, -43.8473, -40.5558, -37.7460, -41.0685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5322, device='cuda:0', dtype=torch.float64)
tensor([-35.3981, -43.8117, -40.5382, -37.8174, -41.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5840, device='cuda:0', dtype=torch.float64)
tensor([-35.3578, -43.7602, -40.5263, -37.8622, -41.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5813, device='cuda:0', dtype=torch.float64)
tensor([-35.3088, -43.6522, -40.4935, -37.8907, -41.0578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-35.2873, -43.5994, -40.4588, -37.9472, -41.1181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6295, device='cuda:0', dtype=torch.float64)
tensor([-35.2846, -43.5765, -40.4506, -38.0030, -41.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6880, device='cuda:0', dtype=torch.float64)
tensor([-35.2747, -43.5830, -40.4537, -38.0710, -41.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6790, device='cuda:0', dtype=torch.float64)
tensor([-35.3058, -43.5874, -40.5057, -38.1524, -41.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6272, device='cuda:0', dtype=torch.float64)
tensor([-35.3461, -43.6232, -40.6007, -38.2631, -41.3137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6435, device='cuda:0', dtype=torch.float64)
tensor([-35.4057, -43.7264, -40.7033, -38.3794, -41.3810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6851, device='cuda:0', dtype=torch.float64)
tensor([-35.4398, -43.8009, -40.7992, -38.4767, -41.4400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6076, device='cuda:0', dtype=torch.float64)
tensor([-35.4851, -43.9300, -40.9032, -38.6025, -41.5468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6106, device='cuda:0', dtype=torch.float64)
tensor([-35.5403, -44.0787, -41.0157, -38.7405, -41.6799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6369, device='cuda:0', dtype=torch.float64)
tensor([-35.5972, -44.2599, -41.1602, -38.8730, -41.8015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6291, device='cuda:0', dtype=torch.float64)
tensor([-35.6548, -44.4571, -41.3139, -39.0260, -41.9585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7521, device='cuda:0', dtype=torch.float64)
tensor([-35.6552, -44.6156, -41.4924, -39.1613, -42.0731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6175, device='cuda:0', dtype=torch.float64)
tensor([-35.6483, -44.8012, -41.6272, -39.2916, -42.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5790, device='cuda:0', dtype=torch.float64)
tensor([-35.6454, -44.9839, -41.7626, -39.4010, -42.3113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6579, device='cuda:0', dtype=torch.float64)
tensor([-35.6307, -45.1695, -41.9099, -39.5491, -42.4890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6319, device='cuda:0', dtype=torch.float64)
tensor([-35.6088, -45.3355, -42.0197, -39.6831, -42.6021], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6690, device='cuda:0', dtype=torch.float64)
tensor([-35.6395, -45.5631, -42.1230, -39.8199, -42.7294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7049, device='cuda:0', dtype=torch.float64)
tensor([-35.6590, -45.7526, -42.2040, -39.9132, -42.8015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6266, device='cuda:0', dtype=torch.float64)
tensor([-35.7135, -45.9099, -42.2974, -39.9847, -42.8276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6510, device='cuda:0', dtype=torch.float64)
tensor([-35.7901, -46.0735, -42.4274, -40.0869, -42.8810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6796, device='cuda:0', dtype=torch.float64)
tensor([-35.8871, -46.1954, -42.5357, -40.1424, -42.9226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6223, device='cuda:0', dtype=torch.float64)
tensor([-35.9874, -46.3129, -42.6346, -40.2368, -42.9898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6633, device='cuda:0', dtype=torch.float64)
tensor([-36.1311, -46.4383, -42.7318, -40.3099, -43.0360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6634, device='cuda:0', dtype=torch.float64)
tensor([-36.2308, -46.4770, -42.7698, -40.2961, -43.0494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6137, device='cuda:0', dtype=torch.float64)
tensor([-36.3555, -46.5223, -42.8133, -40.2851, -43.0877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6167, device='cuda:0', dtype=torch.float64)
tensor([-36.4553, -46.5685, -42.8851, -40.3338, -43.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6468, device='cuda:0', dtype=torch.float64)
tensor([-36.5157, -46.6352, -42.9441, -40.3738, -43.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7173, device='cuda:0', dtype=torch.float64)
tensor([-36.6660, -46.7484, -43.0635, -40.4306, -43.2423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6506, device='cuda:0', dtype=torch.float64)
tensor([-36.8181, -46.9239, -43.1926, -40.4951, -43.3131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6311, device='cuda:0', dtype=torch.float64)
tensor([-36.9700, -47.1249, -43.3085, -40.5556, -43.3722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5349, device='cuda:0', dtype=torch.float64)
tensor([-37.1481, -47.2727, -43.4471, -40.5723, -43.4157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5634, device='cuda:0', dtype=torch.float64)
tensor([-37.3439, -47.3976, -43.5852, -40.5990, -43.4409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6586, device='cuda:0', dtype=torch.float64)
tensor([-37.4955, -47.4423, -43.7167, -40.6218, -43.4898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5506, device='cuda:0', dtype=torch.float64)
tensor([-37.6623, -47.4859, -43.8285, -40.6551, -43.5343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6105, device='cuda:0', dtype=torch.float64)
tensor([-37.8441, -47.5195, -43.9315, -40.6648, -43.5743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6114, device='cuda:0', dtype=torch.float64)
tensor([-38.0004, -47.5536, -44.0572, -40.6832, -43.6485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6279, device='cuda:0', dtype=torch.float64)
tensor([-38.1248, -47.5801, -44.1474, -40.6805, -43.6891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7369, device='cuda:0', dtype=torch.float64)
tensor([-38.2908, -47.6199, -44.2018, -40.6868, -43.7315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6631, device='cuda:0', dtype=torch.float64)
tensor([-38.4780, -47.7003, -44.2762, -40.7229, -43.7895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6300, device='cuda:0', dtype=torch.float64)
tensor([-38.6904, -47.8438, -44.3674, -40.7720, -43.8559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5618, device='cuda:0', dtype=torch.float64)
tensor([-38.8827, -47.9686, -44.4559, -40.8286, -43.9025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5896, device='cuda:0', dtype=torch.float64)
tensor([-39.1245, -48.1060, -44.5633, -40.8547, -43.9025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6047, device='cuda:0', dtype=torch.float64)
tensor([-39.3156, -48.2317, -44.6389, -40.8551, -43.8899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6380, device='cuda:0', dtype=torch.float64)
tensor([-39.5222, -48.3934, -44.7351, -40.8602, -43.8800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6070, device='cuda:0', dtype=torch.float64)
tensor([-39.7355, -48.5371, -44.8263, -40.8625, -43.8734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6622, device='cuda:0', dtype=torch.float64)
tensor([-39.9164, -48.6748, -44.8762, -40.8680, -43.9212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6648, device='cuda:0', dtype=torch.float64)
tensor([-40.0953, -48.8347, -44.9627, -40.9283, -43.9588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5871, device='cuda:0', dtype=torch.float64)
tensor([-40.2762, -48.9560, -45.0330, -40.9489, -43.9780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6317, device='cuda:0', dtype=torch.float64)
tensor([-40.4217, -49.0557, -45.0990, -40.9636, -43.9778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5928, device='cuda:0', dtype=torch.float64)
tensor([-40.5782, -49.2139, -45.1621, -40.9706, -43.9897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5749, device='cuda:0', dtype=torch.float64)
tensor([-40.7380, -49.4099, -45.2337, -41.0201, -44.0344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5601, device='cuda:0', dtype=torch.float64)
tensor([-40.8895, -49.5683, -45.3182, -41.0491, -44.0486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5668, device='cuda:0', dtype=torch.float64)
tensor([-41.0683, -49.7297, -45.4260, -41.0946, -44.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6224, device='cuda:0', dtype=torch.float64)
tensor([-41.2580, -49.8870, -45.5510, -41.1636, -44.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6222, device='cuda:0', dtype=torch.float64)
tensor([-41.4164, -50.0415, -45.6947, -41.2579, -44.2260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6211, device='cuda:0', dtype=torch.float64)
tensor([-41.5312, -50.1430, -45.8061, -41.3584, -44.3003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6300, device='cuda:0', dtype=torch.float64)
tensor([-41.5508, -50.2471, -45.9025, -41.4689, -44.4142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5715, device='cuda:0', dtype=torch.float64)
tensor([-41.5996, -50.4489, -45.9969, -41.6090, -44.5699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6472, device='cuda:0', dtype=torch.float64)
tensor([-41.6352, -50.5865, -46.0411, -41.7367, -44.7360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5912, device='cuda:0', dtype=torch.float64)
tensor([-41.6725, -50.6841, -46.0549, -41.8452, -44.8837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6747, device='cuda:0', dtype=torch.float64)
tensor([-41.7743, -50.8054, -46.1273, -41.9712, -45.0213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5864, device='cuda:0', dtype=torch.float64)
tensor([-41.8719, -50.8847, -46.1967, -42.0492, -45.1279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6462, device='cuda:0', dtype=torch.float64)
tensor([-41.9834, -50.9666, -46.2802, -42.0942, -45.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6092, device='cuda:0', dtype=torch.float64)
tensor([-42.0878, -51.0033, -46.3747, -42.1446, -45.3386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5647, device='cuda:0', dtype=torch.float64)
tensor([-42.1707, -51.0426, -46.4752, -42.1839, -45.4682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6532, device='cuda:0', dtype=torch.float64)
tensor([-42.2676, -51.1144, -46.5539, -42.2424, -45.6102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5764, device='cuda:0', dtype=torch.float64)
tensor([-42.3657, -51.1702, -46.5987, -42.2917, -45.7258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6859, device='cuda:0', dtype=torch.float64)
tensor([-42.4727, -51.1789, -46.6116, -42.2513, -45.8238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6950, device='cuda:0', dtype=torch.float64)
tensor([-42.5876, -51.1704, -46.6207, -42.2121, -45.8625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5140, device='cuda:0', dtype=torch.float64)
tensor([-42.7281, -51.1649, -46.6662, -42.1570, -45.8750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7054, device='cuda:0', dtype=torch.float64)
tensor([-42.8829, -51.1717, -46.7531, -42.0987, -45.9128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5802, device='cuda:0', dtype=torch.float64)
tensor([-43.0123, -51.2148, -46.8474, -42.1047, -45.9568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6424, device='cuda:0', dtype=torch.float64)
tensor([-43.1719, -51.2912, -46.9398, -42.1272, -46.0012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6317, device='cuda:0', dtype=torch.float64)
tensor([-43.2689, -51.3396, -46.9899, -42.1267, -46.0222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5744, device='cuda:0', dtype=torch.float64)
tensor([-43.4210, -51.4165, -47.0851, -42.1777, -46.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6491, device='cuda:0', dtype=torch.float64)
tensor([-43.5777, -51.4600, -47.1844, -42.2387, -46.0894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5551, device='cuda:0', dtype=torch.float64)
tensor([-43.7159, -51.4882, -47.2461, -42.2912, -46.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5442, device='cuda:0', dtype=torch.float64)
tensor([-43.8431, -51.4949, -47.3382, -42.3566, -46.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6273, device='cuda:0', dtype=torch.float64)
tensor([-43.9121, -51.4945, -47.4055, -42.4085, -46.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6347, device='cuda:0', dtype=torch.float64)
tensor([-43.9327, -51.4351, -47.4615, -42.4594, -46.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6215, device='cuda:0', dtype=torch.float64)
tensor([-43.9740, -51.4228, -47.5572, -42.5405, -46.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5267, device='cuda:0', dtype=torch.float64)
tensor([-43.9923, -51.3541, -47.6094, -42.5662, -46.1104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6328, device='cuda:0', dtype=torch.float64)
tensor([-44.0165, -51.3049, -47.6814, -42.6248, -46.0577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5958, device='cuda:0', dtype=torch.float64)
tensor([-44.0636, -51.2740, -47.7557, -42.6991, -46.0387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6048, device='cuda:0', dtype=torch.float64)
tensor([-44.0873, -51.2240, -47.7926, -42.7598, -45.9951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5710, device='cuda:0', dtype=torch.float64)
tensor([-44.0930, -51.1751, -47.7984, -42.7968, -45.9285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5111, device='cuda:0', dtype=torch.float64)
tensor([-44.0823, -51.1555, -47.8245, -42.8513, -45.8862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6085, device='cuda:0', dtype=torch.float64)
tensor([-44.0534, -51.1200, -47.8211, -42.8842, -45.8374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5833, device='cuda:0', dtype=torch.float64)
tensor([-44.0336, -51.1171, -47.7905, -42.9239, -45.8017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6002, device='cuda:0', dtype=torch.float64)
tensor([-44.0356, -51.1250, -47.7171, -42.9642, -45.7660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5493, device='cuda:0', dtype=torch.float64)
tensor([-44.0139, -51.1420, -47.6321, -43.0052, -45.7238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6567, device='cuda:0', dtype=torch.float64)
tensor([-44.0211, -51.1841, -47.5617, -43.0783, -45.6861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5952, device='cuda:0', dtype=torch.float64)
tensor([-43.9902, -51.2482, -47.5121, -43.1819, -45.6818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5997, device='cuda:0', dtype=torch.float64)
tensor([-44.0622, -51.3430, -47.4945, -43.3095, -45.6894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5769, device='cuda:0', dtype=torch.float64)
tensor([-44.1009, -51.4296, -47.4564, -43.4272, -45.7174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5503, device='cuda:0', dtype=torch.float64)
tensor([-44.1815, -51.5363, -47.4211, -43.5227, -45.7753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5522, device='cuda:0', dtype=torch.float64)
tensor([-44.2512, -51.6414, -47.3929, -43.6109, -45.8317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5953, device='cuda:0', dtype=torch.float64)
tensor([-44.2425, -51.6994, -47.2994, -43.6649, -45.8745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6298, device='cuda:0', dtype=torch.float64)
tensor([-44.2275, -51.7253, -47.1847, -43.7036, -45.9064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6345, device='cuda:0', dtype=torch.float64)
tensor([-44.2071, -51.7585, -47.1039, -43.6979, -45.8895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5425, device='cuda:0', dtype=torch.float64)
tensor([-44.2028, -51.8366, -47.0770, -43.7861, -45.9582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5513, device='cuda:0', dtype=torch.float64)
tensor([-44.2540, -51.9613, -47.0584, -43.8735, -46.0368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6437, device='cuda:0', dtype=torch.float64)
tensor([-44.3348, -52.1388, -47.0728, -43.9709, -46.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4670, device='cuda:0', dtype=torch.float64)
tensor([-44.3909, -52.2880, -47.0706, -44.0178, -46.2416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7021, device='cuda:0', dtype=torch.float64)
tensor([-44.4909, -52.4621, -47.1118, -44.0592, -46.3505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6036, device='cuda:0', dtype=torch.float64)
tensor([-44.5505, -52.5781, -47.1162, -44.0793, -46.4000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5914, device='cuda:0', dtype=torch.float64)
tensor([-44.5635, -52.6765, -47.1198, -44.1061, -46.4353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5971, device='cuda:0', dtype=torch.float64)
tensor([-44.5268, -52.7417, -47.0951, -44.1184, -46.4406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5306, device='cuda:0', dtype=torch.float64)
tensor([-44.4187, -52.7592, -47.0506, -44.0937, -46.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5534, device='cuda:0', dtype=torch.float64)
tensor([-44.2883, -52.7610, -46.9895, -44.0670, -46.3943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5342, device='cuda:0', dtype=torch.float64)
tensor([-44.1671, -52.7210, -46.9050, -44.0195, -46.3950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5205, device='cuda:0', dtype=torch.float64)
tensor([-44.0652, -52.6985, -46.8444, -44.0054, -46.3794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5533, device='cuda:0', dtype=torch.float64)
tensor([-44.0020, -52.6483, -46.7481, -43.9344, -46.3367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6404, device='cuda:0', dtype=torch.float64)
tensor([-43.9712, -52.6519, -46.6393, -43.8894, -46.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5123, device='cuda:0', dtype=torch.float64)
tensor([-43.9685, -52.6586, -46.5380, -43.8567, -46.3206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6367, device='cuda:0', dtype=torch.float64)
tensor([-43.8882, -52.6797, -46.3755, -43.7776, -46.3102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5458, device='cuda:0', dtype=torch.float64)
tensor([-43.7963, -52.7064, -46.2252, -43.7318, -46.2901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5509, device='cuda:0', dtype=torch.float64)
tensor([-43.7426, -52.7211, -46.0794, -43.6891, -46.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5673, device='cuda:0', dtype=torch.float64)
tensor([-43.7270, -52.7432, -45.9639, -43.6630, -46.2103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5533, device='cuda:0', dtype=torch.float64)
tensor([-43.7355, -52.7344, -45.8435, -43.5918, -46.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5093, device='cuda:0', dtype=torch.float64)
tensor([-43.7430, -52.6849, -45.6948, -43.4931, -45.9903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5339, device='cuda:0', dtype=torch.float64)
tensor([-43.7150, -52.5827, -45.5322, -43.3414, -45.8359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6010, device='cuda:0', dtype=torch.float64)
tensor([-43.6871, -52.5267, -45.3894, -43.1920, -45.7151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5598, device='cuda:0', dtype=torch.float64)
tensor([-43.7032, -52.5233, -45.2835, -43.0820, -45.6336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5715, device='cuda:0', dtype=torch.float64)
tensor([-43.7442, -52.5792, -45.1958, -43.0215, -45.5891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([-43.7790, -52.6567, -45.1248, -42.9519, -45.5515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5875, device='cuda:0', dtype=torch.float64)
tensor([-43.8075, -52.7664, -45.0813, -42.9105, -45.5255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6319, device='cuda:0', dtype=torch.float64)
tensor([-43.8252, -52.8370, -45.0271, -42.8634, -45.4708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5774, device='cuda:0', dtype=torch.float64)
tensor([-43.8924, -52.9289, -44.9955, -42.8478, -45.4255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5632, device='cuda:0', dtype=torch.float64)
tensor([-43.9604, -53.0697, -44.9775, -42.8338, -45.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6665, device='cuda:0', dtype=torch.float64)
tensor([-44.0501, -53.1941, -45.0227, -42.8453, -45.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5688, device='cuda:0', dtype=torch.float64)
tensor([-44.1511, -53.3377, -45.0925, -42.8768, -45.3053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5499, device='cuda:0', dtype=torch.float64)
tensor([-44.2771, -53.4498, -45.1534, -42.8883, -45.2602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4960, device='cuda:0', dtype=torch.float64)
tensor([-44.4237, -53.5606, -45.2080, -42.8757, -45.2081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5088, device='cuda:0', dtype=torch.float64)
tensor([-44.5343, -53.6612, -45.2247, -42.8513, -45.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4963, device='cuda:0', dtype=torch.float64)
tensor([-44.6500, -53.7165, -45.2111, -42.8097, -45.0713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6744, device='cuda:0', dtype=torch.float64)
tensor([-44.7403, -53.7391, -45.1673, -42.8022, -44.9931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5518, device='cuda:0', dtype=torch.float64)
tensor([-44.8298, -53.7919, -45.1591, -42.8295, -44.9432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6299, device='cuda:0', dtype=torch.float64)
tensor([-44.9559, -53.8879, -45.2034, -42.9043, -44.9334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6356, device='cuda:0', dtype=torch.float64)
tensor([-45.0181, -53.9407, -45.1874, -42.9093, -44.9224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6717, device='cuda:0', dtype=torch.float64)
tensor([-45.0307, -53.9686, -45.1266, -42.8467, -44.9030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5959, device='cuda:0', dtype=torch.float64)
tensor([-45.0459, -53.9545, -45.0407, -42.7498, -44.8446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4857, device='cuda:0', dtype=torch.float64)
tensor([-45.0289, -53.9287, -44.9620, -42.6991, -44.8088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6036, device='cuda:0', dtype=torch.float64)
tensor([-45.0399, -53.8946, -44.8899, -42.6343, -44.7794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5489, device='cuda:0', dtype=torch.float64)
tensor([-45.0573, -53.8810, -44.8301, -42.5988, -44.7775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5304, device='cuda:0', dtype=torch.float64)
tensor([-45.0251, -53.8806, -44.7712, -42.5652, -44.8082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5114, device='cuda:0', dtype=torch.float64)
tensor([-44.9240, -53.8723, -44.6838, -42.5345, -44.8636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4914, device='cuda:0', dtype=torch.float64)
tensor([-44.8139, -53.8694, -44.6141, -42.5144, -44.9205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5329, device='cuda:0', dtype=torch.float64)
tensor([-44.7546, -53.8471, -44.5480, -42.4952, -44.9540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5973, device='cuda:0', dtype=torch.float64)
tensor([-44.6937, -53.7834, -44.4607, -42.4309, -44.9533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5801, device='cuda:0', dtype=torch.float64)
tensor([-44.5594, -53.6933, -44.3988, -42.3540, -44.9443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5221, device='cuda:0', dtype=torch.float64)
tensor([-44.5090, -53.6219, -44.3716, -42.2784, -44.9299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4776, device='cuda:0', dtype=torch.float64)
tensor([-44.4585, -53.5678, -44.3294, -42.2147, -44.9170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5722, device='cuda:0', dtype=torch.float64)
tensor([-44.4053, -53.5493, -44.2801, -42.1621, -44.9312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5556, device='cuda:0', dtype=torch.float64)
tensor([-44.3377, -53.5062, -44.2202, -42.1009, -44.9253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5648, device='cuda:0', dtype=torch.float64)
tensor([-44.3126, -53.5020, -44.1624, -42.0398, -44.9802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6674, device='cuda:0', dtype=torch.float64)
tensor([-44.2676, -53.5770, -44.1218, -42.0423, -45.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6049, device='cuda:0', dtype=torch.float64)
tensor([-44.2394, -53.6276, -44.0716, -42.0101, -45.2467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5197, device='cuda:0', dtype=torch.float64)
tensor([-44.2006, -53.6627, -44.0167, -41.9821, -45.3897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5443, device='cuda:0', dtype=torch.float64)
tensor([-44.1548, -53.7148, -43.9707, -41.9704, -45.5246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4888, device='cuda:0', dtype=torch.float64)
tensor([-44.1075, -53.7658, -43.9339, -41.9819, -45.6732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4664, device='cuda:0', dtype=torch.float64)
tensor([-44.0670, -53.7981, -43.9079, -42.0003, -45.8139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5403, device='cuda:0', dtype=torch.float64)
tensor([-44.0368, -53.9165, -43.9192, -42.0887, -46.0039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5778, device='cuda:0', dtype=torch.float64)
tensor([-44.0252, -54.0305, -43.9260, -42.1923, -46.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6031, device='cuda:0', dtype=torch.float64)
tensor([-44.0498, -54.1459, -43.9353, -42.2977, -46.4066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5856, device='cuda:0', dtype=torch.float64)
tensor([-44.0875, -54.2639, -43.9542, -42.3939, -46.5954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5239, device='cuda:0', dtype=torch.float64)
tensor([-44.1326, -54.3574, -43.9747, -42.4756, -46.7714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5875, device='cuda:0', dtype=torch.float64)
tensor([-44.1881, -54.4277, -43.9653, -42.5261, -46.9035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5069, device='cuda:0', dtype=torch.float64)
tensor([-44.2738, -54.4971, -43.9818, -42.5702, -47.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7173, device='cuda:0', dtype=torch.float64)
tensor([-44.3134, -54.4774, -43.9451, -42.5387, -47.0521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6100, device='cuda:0', dtype=torch.float64)
tensor([-44.3328, -54.4703, -43.9256, -42.5224, -47.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5108, device='cuda:0', dtype=torch.float64)
tensor([-44.3674, -54.5246, -43.9109, -42.5388, -47.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5277, device='cuda:0', dtype=torch.float64)
tensor([-44.3966, -54.5747, -43.9078, -42.5400, -47.3135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4668, device='cuda:0', dtype=torch.float64)
tensor([-44.4784, -54.6248, -43.9348, -42.5462, -47.3887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5937, device='cuda:0', dtype=torch.float64)
tensor([-44.5229, -54.6783, -43.9393, -42.6131, -47.5038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5433, device='cuda:0', dtype=torch.float64)
tensor([-44.5771, -54.7632, -43.9878, -42.7159, -47.5989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5081, device='cuda:0', dtype=torch.float64)
tensor([-44.6431, -54.8623, -44.0153, -42.7929, -47.6783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5128, device='cuda:0', dtype=torch.float64)
tensor([-44.6893, -54.9562, -44.0210, -42.8239, -47.7365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5920, device='cuda:0', dtype=torch.float64)
tensor([-44.7646, -55.0744, -44.0272, -42.8375, -47.8081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4884, device='cuda:0', dtype=torch.float64)
tensor([-44.8452, -55.2038, -44.0847, -42.8682, -47.8768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6043, device='cuda:0', dtype=torch.float64)
tensor([-44.9704, -55.4148, -44.1422, -42.8800, -47.9483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5464, device='cuda:0', dtype=torch.float64)
tensor([-45.0957, -55.5944, -44.1798, -42.9300, -47.9743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5316, device='cuda:0', dtype=torch.float64)
tensor([-45.2333, -55.7470, -44.1792, -42.9427, -47.9927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5163, device='cuda:0', dtype=torch.float64)
tensor([-45.4110, -55.9282, -44.2298, -42.9826, -48.0345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5126, device='cuda:0', dtype=torch.float64)
tensor([-45.5610, -56.0475, -44.2300, -42.9710, -48.0325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5666, device='cuda:0', dtype=torch.float64)
tensor([-45.6754, -56.1181, -44.1939, -42.9009, -48.0067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5210, device='cuda:0', dtype=torch.float64)
tensor([-45.7376, -56.1721, -44.1470, -42.8241, -47.9908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5502, device='cuda:0', dtype=torch.float64)
tensor([-45.8199, -56.2704, -44.1000, -42.7746, -47.9803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6682, device='cuda:0', dtype=torch.float64)
tensor([-45.8522, -56.3338, -44.0783, -42.7236, -47.9763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6036, device='cuda:0', dtype=torch.float64)
tensor([-45.9089, -56.3964, -44.0114, -42.6631, -47.9811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5303, device='cuda:0', dtype=torch.float64)
tensor([-45.9897, -56.4592, -43.9579, -42.5882, -47.9795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5420, device='cuda:0', dtype=torch.float64)
tensor([-46.0713, -56.5325, -43.9156, -42.5484, -47.9766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5655, device='cuda:0', dtype=torch.float64)
tensor([-46.1251, -56.5911, -43.8883, -42.5461, -48.0002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5632, device='cuda:0', dtype=torch.float64)
tensor([-46.1212, -56.6717, -43.8805, -42.6013, -48.0574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5339, device='cuda:0', dtype=torch.float64)
tensor([-46.0867, -56.6890, -43.8724, -42.6691, -48.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5583, device='cuda:0', dtype=torch.float64)
tensor([-46.0613, -56.6188, -43.8375, -42.7186, -48.0662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5767, device='cuda:0', dtype=torch.float64)
tensor([-46.1022, -56.5938, -43.8127, -42.7911, -48.0392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4878, device='cuda:0', dtype=torch.float64)
tensor([-46.1343, -56.5536, -43.7981, -42.8473, -48.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5540, device='cuda:0', dtype=torch.float64)
tensor([-46.1912, -56.4773, -43.7734, -42.8693, -48.0055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5769, device='cuda:0', dtype=torch.float64)
tensor([-46.2413, -56.3862, -43.7971, -42.8683, -47.9568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5552, device='cuda:0', dtype=torch.float64)
tensor([-46.2674, -56.3137, -43.8149, -42.8697, -47.9377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5578, device='cuda:0', dtype=torch.float64)
tensor([-46.3217, -56.2814, -43.8434, -42.8656, -47.9347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5311, device='cuda:0', dtype=torch.float64)
tensor([-46.4303, -56.2672, -43.9044, -42.8891, -47.9731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5831, device='cuda:0', dtype=torch.float64)
tensor([-46.5816, -56.2902, -43.9689, -42.9037, -48.0148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5302, device='cuda:0', dtype=torch.float64)
tensor([-46.7330, -56.3500, -44.0383, -42.9333, -48.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5441, device='cuda:0', dtype=torch.float64)
tensor([-46.8827, -56.4771, -44.1431, -43.0691, -48.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4996, device='cuda:0', dtype=torch.float64)
tensor([-46.9714, -56.5577, -44.2014, -43.1868, -48.2691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5179, device='cuda:0', dtype=torch.float64)
tensor([-47.1094, -56.6605, -44.2719, -43.2924, -48.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5199, device='cuda:0', dtype=torch.float64)
tensor([-47.2092, -56.7768, -44.3544, -43.4148, -48.3783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5006, device='cuda:0', dtype=torch.float64)
tensor([-47.2980, -56.8854, -44.4206, -43.5127, -48.4748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4457, device='cuda:0', dtype=torch.float64)
tensor([-47.3836, -56.9710, -44.5132, -43.6276, -48.5667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4229, device='cuda:0', dtype=torch.float64)
tensor([-47.4553, -57.0791, -44.6171, -43.7391, -48.6644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4477, device='cuda:0', dtype=torch.float64)
tensor([-47.5330, -57.2089, -44.7499, -43.8573, -48.7797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5569, device='cuda:0', dtype=torch.float64)
tensor([-47.6011, -57.3605, -44.8562, -43.9983, -48.9308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5581, device='cuda:0', dtype=torch.float64)
tensor([-47.6774, -57.4933, -44.9611, -44.1099, -49.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5384, device='cuda:0', dtype=torch.float64)
tensor([-47.7529, -57.5918, -45.0629, -44.1879, -49.1693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5126, device='cuda:0', dtype=torch.float64)
tensor([-47.8361, -57.6947, -45.1370, -44.2550, -49.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5015, device='cuda:0', dtype=torch.float64)
tensor([-47.8895, -57.7608, -45.1503, -44.2557, -49.3101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4690, device='cuda:0', dtype=torch.float64)
tensor([-47.9226, -57.8080, -45.1196, -44.2242, -49.3499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5786, device='cuda:0', dtype=torch.float64)
tensor([-47.9610, -57.8804, -45.1577, -44.2639, -49.4334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4590, device='cuda:0', dtype=torch.float64)
tensor([-48.0127, -57.9445, -45.1946, -44.2717, -49.5088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5185, device='cuda:0', dtype=torch.float64)
tensor([-48.0942, -58.0626, -45.2344, -44.3418, -49.6028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6229, device='cuda:0', dtype=torch.float64)
tensor([-48.1633, -58.2046, -45.2902, -44.4197, -49.7449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4555, device='cuda:0', dtype=torch.float64)
tensor([-48.2095, -58.3572, -45.3363, -44.5013, -49.8535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5475, device='cuda:0', dtype=torch.float64)
tensor([-48.2347, -58.4741, -45.3873, -44.5641, -49.9379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4806, device='cuda:0', dtype=torch.float64)
tensor([-48.2648, -58.5727, -45.4474, -44.6445, -50.0103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4566, device='cuda:0', dtype=torch.float64)
tensor([-48.2753, -58.6618, -45.4884, -44.7211, -50.0992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5284, device='cuda:0', dtype=torch.float64)
tensor([-48.2442, -58.6980, -45.5288, -44.8053, -50.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5550, device='cuda:0', dtype=torch.float64)
tensor([-48.1783, -58.7601, -45.5601, -44.8990, -50.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4367, device='cuda:0', dtype=torch.float64)
tensor([-48.1091, -58.8251, -45.5818, -44.9728, -50.3466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5408, device='cuda:0', dtype=torch.float64)
tensor([-48.0379, -58.9042, -45.5930, -45.0522, -50.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5095, device='cuda:0', dtype=torch.float64)
tensor([-47.9702, -58.9584, -45.6322, -45.1331, -50.5533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5134, device='cuda:0', dtype=torch.float64)
tensor([-47.8940, -59.0061, -45.6856, -45.1937, -50.6306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5492, device='cuda:0', dtype=torch.float64)
tensor([-47.8580, -59.0998, -45.7311, -45.3266, -50.7466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5037, device='cuda:0', dtype=torch.float64)
tensor([-47.7941, -59.1260, -45.7566, -45.3959, -50.7908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5513, device='cuda:0', dtype=torch.float64)
tensor([-47.7594, -59.1590, -45.7716, -45.4616, -50.8483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4817, device='cuda:0', dtype=torch.float64)
tensor([-47.7336, -59.1793, -45.8241, -45.5608, -50.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4157, device='cuda:0', dtype=torch.float64)
tensor([-47.7042, -59.2242, -45.8806, -45.6819, -50.9863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4884, device='cuda:0', dtype=torch.float64)
tensor([-47.7132, -59.2524, -45.9384, -45.7780, -51.0359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5313, device='cuda:0', dtype=torch.float64)
tensor([-47.7344, -59.3055, -45.9839, -45.8592, -51.0949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5756, device='cuda:0', dtype=torch.float64)
tensor([-47.7627, -59.3815, -46.0474, -45.9577, -51.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5060, device='cuda:0', dtype=torch.float64)
tensor([-47.8581, -59.4956, -46.1564, -46.0568, -51.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4911, device='cuda:0', dtype=torch.float64)
tensor([-47.9725, -59.5818, -46.2574, -46.1315, -51.3863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4815, device='cuda:0', dtype=torch.float64)
tensor([-48.0974, -59.6480, -46.3533, -46.2017, -51.4719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4666, device='cuda:0', dtype=torch.float64)
tensor([-48.2413, -59.7238, -46.4265, -46.2094, -51.5629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4945, device='cuda:0', dtype=torch.float64)
tensor([-48.3336, -59.8066, -46.4742, -46.2268, -51.6644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4781, device='cuda:0', dtype=torch.float64)
tensor([-48.4185, -59.9051, -46.5283, -46.2482, -51.7554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5007, device='cuda:0', dtype=torch.float64)
tensor([-48.4945, -60.0663, -46.6185, -46.3029, -51.8502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5073, device='cuda:0', dtype=torch.float64)
tensor([-48.5755, -60.2413, -46.6759, -46.3492, -51.9344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4786, device='cuda:0', dtype=torch.float64)
tensor([-48.6589, -60.3965, -46.7237, -46.3559, -52.0026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4698, device='cuda:0', dtype=torch.float64)
tensor([-48.7921, -60.5453, -46.7802, -46.3557, -52.0680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4854, device='cuda:0', dtype=torch.float64)
tensor([-48.8947, -60.6992, -46.8283, -46.3719, -52.1824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4620, device='cuda:0', dtype=torch.float64)
tensor([-49.0057, -60.8254, -46.8438, -46.3751, -52.2971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5958, device='cuda:0', dtype=torch.float64)
tensor([-49.0688, -60.9718, -46.8739, -46.3270, -52.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4402, device='cuda:0', dtype=torch.float64)
tensor([-49.1593, -61.1019, -46.8909, -46.2745, -52.5023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5440, device='cuda:0', dtype=torch.float64)
tensor([-49.2849, -61.1934, -46.9109, -46.2307, -52.6017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4509, device='cuda:0', dtype=torch.float64)
tensor([-49.3894, -61.2647, -46.9069, -46.1644, -52.6405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4525, device='cuda:0', dtype=torch.float64)
tensor([-49.4766, -61.2994, -46.8723, -46.0634, -52.6202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4003, device='cuda:0', dtype=torch.float64)
tensor([-49.5719, -61.2931, -46.8531, -45.9659, -52.5641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5040, device='cuda:0', dtype=torch.float64)
tensor([-49.6909, -61.3006, -46.8444, -45.9234, -52.5297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5320, device='cuda:0', dtype=torch.float64)
tensor([-49.7884, -61.2727, -46.8373, -45.8529, -52.5128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4083, device='cuda:0', dtype=torch.float64)
tensor([-49.8840, -61.3007, -46.8524, -45.8532, -52.5530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4491, device='cuda:0', dtype=torch.float64)
tensor([-49.9733, -61.3609, -46.9007, -45.8557, -52.6102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4040, device='cuda:0', dtype=torch.float64)
tensor([-50.0705, -61.3853, -46.9370, -45.8602, -52.6289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4648, device='cuda:0', dtype=torch.float64)
tensor([-50.1658, -61.4374, -46.9925, -45.8912, -52.6850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5468, device='cuda:0', dtype=torch.float64)
tensor([-50.3090, -61.5526, -47.0938, -45.9268, -52.7669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4387, device='cuda:0', dtype=torch.float64)
tensor([-50.4129, -61.6332, -47.1710, -45.9414, -52.8405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4587, device='cuda:0', dtype=torch.float64)
tensor([-50.5434, -61.7254, -47.2345, -45.9270, -52.9242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4770, device='cuda:0', dtype=torch.float64)
tensor([-50.7087, -61.8363, -47.2980, -45.9146, -53.0170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5205, device='cuda:0', dtype=torch.float64)
tensor([-50.8864, -61.9641, -47.3791, -45.9344, -53.1365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4138, device='cuda:0', dtype=torch.float64)
tensor([-51.0649, -62.1124, -47.4834, -45.9539, -53.3055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4320, device='cuda:0', dtype=torch.float64)
tensor([-51.2540, -62.2738, -47.5710, -45.9979, -53.4442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4719, device='cuda:0', dtype=torch.float64)
tensor([-51.3727, -62.4202, -47.6219, -45.9892, -53.5198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4745, device='cuda:0', dtype=torch.float64)
tensor([-51.4936, -62.5746, -47.6636, -45.9971, -53.6035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4744, device='cuda:0', dtype=torch.float64)
tensor([-51.5982, -62.7032, -47.6822, -45.9809, -53.6598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4367, device='cuda:0', dtype=torch.float64)
tensor([-51.6516, -62.7665, -47.6747, -45.9623, -53.6935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5313, device='cuda:0', dtype=torch.float64)
tensor([-51.6722, -62.8080, -47.6303, -45.8974, -53.6727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4773, device='cuda:0', dtype=torch.float64)
tensor([-51.7288, -62.9180, -47.6208, -45.9100, -53.6994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4442, device='cuda:0', dtype=torch.float64)
tensor([-51.7456, -63.0197, -47.5921, -45.9033, -53.7206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4562, device='cuda:0', dtype=torch.float64)
tensor([-51.7347, -63.0432, -47.5711, -45.9099, -53.6856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4393, device='cuda:0', dtype=torch.float64)
tensor([-51.7612, -63.1205, -47.5827, -45.9537, -53.7356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4488, device='cuda:0', dtype=torch.float64)
tensor([-51.7663, -63.1690, -47.5655, -45.9868, -53.7878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3853, device='cuda:0', dtype=torch.float64)
tensor([-51.7941, -63.2216, -47.5656, -46.0049, -53.8092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4118, device='cuda:0', dtype=torch.float64)
tensor([-51.8025, -63.2501, -47.5503, -45.9765, -53.7950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4774, device='cuda:0', dtype=torch.float64)
tensor([-51.8656, -63.3159, -47.5724, -45.9645, -53.8001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4572, device='cuda:0', dtype=torch.float64)
tensor([-51.9308, -63.3997, -47.5993, -46.0179, -53.8309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4147, device='cuda:0', dtype=torch.float64)
tensor([-52.0114, -63.5052, -47.6558, -46.1068, -53.8924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4202, device='cuda:0', dtype=torch.float64)
tensor([-52.0591, -63.6028, -47.7115, -46.1902, -53.9511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4429, device='cuda:0', dtype=torch.float64)
tensor([-52.1263, -63.7702, -47.7993, -46.3466, -54.0919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4108, device='cuda:0', dtype=torch.float64)
tensor([-52.2154, -63.9768, -47.8611, -46.4821, -54.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4850, device='cuda:0', dtype=torch.float64)
tensor([-52.2736, -64.1802, -47.9087, -46.5780, -54.3578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4292, device='cuda:0', dtype=torch.float64)
tensor([-52.3525, -64.3696, -47.9540, -46.6602, -54.4795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4488, device='cuda:0', dtype=torch.float64)
tensor([-52.4968, -64.5733, -48.0049, -46.7364, -54.6239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4500, device='cuda:0', dtype=torch.float64)
tensor([-52.6304, -64.7661, -48.0374, -46.7742, -54.7179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4862, device='cuda:0', dtype=torch.float64)
tensor([-52.7232, -64.8939, -48.0530, -46.7754, -54.7655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3933, device='cuda:0', dtype=torch.float64)
tensor([-52.7681, -65.0049, -48.0881, -46.8115, -54.8186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4806, device='cuda:0', dtype=torch.float64)
tensor([-52.7758, -65.1530, -48.1289, -46.8810, -54.8929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4402, device='cuda:0', dtype=torch.float64)
tensor([-52.8120, -65.3181, -48.1928, -46.9512, -54.9973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4521, device='cuda:0', dtype=torch.float64)
tensor([-52.8873, -65.4841, -48.2635, -47.0322, -55.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4322, device='cuda:0', dtype=torch.float64)
tensor([-52.9747, -65.6498, -48.3182, -47.1104, -55.2701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4493, device='cuda:0', dtype=torch.float64)
tensor([-53.0670, -65.8470, -48.3746, -47.1972, -55.4026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4695, device='cuda:0', dtype=torch.float64)
tensor([-53.1409, -66.0020, -48.4055, -47.2695, -55.5173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4262, device='cuda:0', dtype=torch.float64)
tensor([-53.2048, -66.1434, -48.4357, -47.3223, -55.6169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4109, device='cuda:0', dtype=torch.float64)
tensor([-53.3407, -66.3369, -48.4805, -47.3987, -55.7684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4009, device='cuda:0', dtype=torch.float64)
tensor([-53.4489, -66.5148, -48.5155, -47.4469, -55.9139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4505, device='cuda:0', dtype=torch.float64)
tensor([-53.6039, -66.7567, -48.5783, -47.5110, -56.0940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4365, device='cuda:0', dtype=torch.float64)
tensor([-53.7089, -66.9474, -48.6180, -47.5293, -56.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4836, device='cuda:0', dtype=torch.float64)
tensor([-53.7534, -67.0669, -48.6201, -47.5295, -56.4007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4717, device='cuda:0', dtype=torch.float64)
tensor([-53.7416, -67.1058, -48.5842, -47.4871, -56.5261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4193, device='cuda:0', dtype=torch.float64)
tensor([-53.7388, -67.1629, -48.5506, -47.4434, -56.6562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4029, device='cuda:0', dtype=torch.float64)
tensor([-53.7741, -67.2507, -48.5059, -47.4181, -56.7882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4272, device='cuda:0', dtype=torch.float64)
tensor([-53.7993, -67.3526, -48.4542, -47.4046, -56.9131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4778, device='cuda:0', dtype=torch.float64)
tensor([-53.8130, -67.4100, -48.4298, -47.3939, -56.9835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4324, device='cuda:0', dtype=torch.float64)
tensor([-53.8138, -67.4315, -48.4210, -47.4111, -57.0525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4898, device='cuda:0', dtype=torch.float64)
tensor([-53.8139, -67.4075, -48.3797, -47.4294, -57.0897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4816, device='cuda:0', dtype=torch.float64)
tensor([-53.8609, -67.3925, -48.3488, -47.4327, -57.1083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4790, device='cuda:0', dtype=torch.float64)
tensor([-53.9006, -67.3841, -48.3057, -47.4139, -57.0921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5320, device='cuda:0', dtype=torch.float64)
tensor([-53.9246, -67.3401, -48.2358, -47.3756, -57.0484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4808, device='cuda:0', dtype=torch.float64)
tensor([-53.9021, -67.2827, -48.1570, -47.3115, -56.9907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4483, device='cuda:0', dtype=torch.float64)
tensor([-53.8963, -67.2282, -48.0611, -47.2382, -56.8992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4405, device='cuda:0', dtype=torch.float64)
tensor([-53.8463, -67.1707, -47.9629, -47.1606, -56.8288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4715, device='cuda:0', dtype=torch.float64)
tensor([-53.8539, -67.1618, -47.8626, -47.0781, -56.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3972, device='cuda:0', dtype=torch.float64)
tensor([-53.8619, -67.1612, -47.7656, -46.9856, -56.6911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4727, device='cuda:0', dtype=torch.float64)
tensor([-53.8455, -67.1532, -47.6771, -46.9185, -56.6606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4418, device='cuda:0', dtype=torch.float64)
tensor([-53.7955, -67.1253, -47.5853, -46.8339, -56.6558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4259, device='cuda:0', dtype=torch.float64)
tensor([-53.7876, -67.0883, -47.5281, -46.7002, -56.6105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4519, device='cuda:0', dtype=torch.float64)
tensor([-53.7589, -67.0603, -47.4613, -46.5739, -56.5749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4192, device='cuda:0', dtype=torch.float64)
tensor([-53.7465, -67.0507, -47.4013, -46.4710, -56.5846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3867, device='cuda:0', dtype=torch.float64)
tensor([-53.7537, -67.0397, -47.3511, -46.3954, -56.5842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3919, device='cuda:0', dtype=torch.float64)
tensor([-53.7507, -66.9959, -47.3149, -46.3285, -56.5793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3822, device='cuda:0', dtype=torch.float64)
tensor([-53.7475, -66.9899, -47.2827, -46.3010, -56.6092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4539, device='cuda:0', dtype=torch.float64)
tensor([-53.7338, -66.9621, -47.2614, -46.2869, -56.6371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4404, device='cuda:0', dtype=torch.float64)
tensor([-53.7383, -66.9554, -47.2740, -46.3192, -56.7109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4396, device='cuda:0', dtype=torch.float64)
tensor([-53.7339, -66.9366, -47.2963, -46.3388, -56.7783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4321, device='cuda:0', dtype=torch.float64)
tensor([-53.7255, -66.9211, -47.2758, -46.3676, -56.8445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3854, device='cuda:0', dtype=torch.float64)
tensor([-53.7168, -66.8910, -47.2622, -46.3909, -56.8926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4100, device='cuda:0', dtype=torch.float64)
tensor([-53.6875, -66.8339, -47.2218, -46.3870, -56.8942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4296, device='cuda:0', dtype=torch.float64)
tensor([-53.6782, -66.8208, -47.1675, -46.4267, -56.9364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5201, device='cuda:0', dtype=torch.float64)
tensor([-53.6688, -66.8196, -47.0778, -46.5025, -56.9931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3886, device='cuda:0', dtype=torch.float64)
tensor([-53.6845, -66.8109, -47.0007, -46.5294, -57.0118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4471, device='cuda:0', dtype=torch.float64)
tensor([-53.6875, -66.8284, -46.9378, -46.5753, -57.0937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3845, device='cuda:0', dtype=torch.float64)
tensor([-53.7008, -66.8495, -46.8696, -46.6279, -57.1791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4269, device='cuda:0', dtype=torch.float64)
tensor([-53.7160, -66.8972, -46.7776, -46.6751, -57.2722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3680, device='cuda:0', dtype=torch.float64)
tensor([-53.7561, -66.9431, -46.6561, -46.6992, -57.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3593, device='cuda:0', dtype=torch.float64)
tensor([-53.8255, -66.9937, -46.5492, -46.7254, -57.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4014, device='cuda:0', dtype=torch.float64)
tensor([-53.8557, -67.0244, -46.4545, -46.7447, -57.5124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3850, device='cuda:0', dtype=torch.float64)
tensor([-53.9057, -67.1019, -46.4038, -46.7771, -57.5897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3565, device='cuda:0', dtype=torch.float64)
tensor([-53.9779, -67.1874, -46.3596, -46.8309, -57.6627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4528, device='cuda:0', dtype=torch.float64)
tensor([-54.0358, -67.2783, -46.3109, -46.8595, -57.7149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3723, device='cuda:0', dtype=torch.float64)
tensor([-54.1003, -67.3885, -46.2750, -46.8903, -57.7632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4538, device='cuda:0', dtype=torch.float64)
tensor([-54.1820, -67.5146, -46.2663, -46.9871, -57.8355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4027, device='cuda:0', dtype=torch.float64)
tensor([-54.2451, -67.6414, -46.2649, -47.1011, -57.9283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4507, device='cuda:0', dtype=torch.float64)
tensor([-54.3382, -67.7642, -46.2754, -47.2168, -58.0212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4104, device='cuda:0', dtype=torch.float64)
tensor([-54.4197, -67.8645, -46.2729, -47.2974, -58.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4850, device='cuda:0', dtype=torch.float64)
tensor([-54.5310, -67.9726, -46.2967, -47.4001, -58.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3527, device='cuda:0', dtype=torch.float64)
tensor([-54.5988, -68.0392, -46.2956, -47.4564, -58.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3897, device='cuda:0', dtype=torch.float64)
tensor([-54.6779, -68.0956, -46.3172, -47.4902, -58.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4161, device='cuda:0', dtype=torch.float64)
tensor([-54.7649, -68.1942, -46.3526, -47.5767, -58.2687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4353, device='cuda:0', dtype=torch.float64)
tensor([-54.8505, -68.3133, -46.3884, -47.6483, -58.3606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4133, device='cuda:0', dtype=torch.float64)
tensor([-54.9705, -68.4216, -46.4300, -47.7146, -58.4696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3891, device='cuda:0', dtype=torch.float64)
tensor([-55.0526, -68.5057, -46.4607, -47.7512, -58.5606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4070, device='cuda:0', dtype=torch.float64)
tensor([-55.1523, -68.5992, -46.5178, -47.8196, -58.6616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3845, device='cuda:0', dtype=torch.float64)
tensor([-55.2366, -68.7058, -46.5651, -47.8698, -58.7683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4404, device='cuda:0', dtype=torch.float64)
tensor([-55.3365, -68.8187, -46.6445, -47.9255, -58.8844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3850, device='cuda:0', dtype=torch.float64)
tensor([-55.4508, -68.9199, -46.7285, -47.9647, -58.9864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3866, device='cuda:0', dtype=torch.float64)
tensor([-55.5538, -69.0113, -46.7964, -47.9774, -59.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4203, device='cuda:0', dtype=torch.float64)
tensor([-55.6836, -69.1009, -46.8642, -47.9840, -59.0684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4690, device='cuda:0', dtype=torch.float64)
tensor([-55.8125, -69.1938, -46.9305, -47.9990, -59.0591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3358, device='cuda:0', dtype=torch.float64)
tensor([-55.9665, -69.2957, -47.0185, -48.0383, -59.0458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4195, device='cuda:0', dtype=torch.float64)
tensor([-56.1025, -69.3833, -47.1096, -48.0754, -59.0628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4308, device='cuda:0', dtype=torch.float64)
tensor([-56.2493, -69.5046, -47.1776, -48.1350, -59.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3738, device='cuda:0', dtype=torch.float64)
tensor([-56.3926, -69.6211, -47.2490, -48.2036, -59.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4381, device='cuda:0', dtype=torch.float64)
tensor([-56.4624, -69.7223, -47.3023, -48.2628, -59.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4283, device='cuda:0', dtype=torch.float64)
tensor([-56.5504, -69.8304, -47.3702, -48.3516, -59.2573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3892, device='cuda:0', dtype=torch.float64)
tensor([-56.6890, -70.0104, -47.4786, -48.4765, -59.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4386, device='cuda:0', dtype=torch.float64)
tensor([-56.7793, -70.1614, -47.5331, -48.6002, -59.4367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4123, device='cuda:0', dtype=torch.float64)
tensor([-56.8843, -70.3129, -47.5583, -48.7040, -59.4977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3528, device='cuda:0', dtype=torch.float64)
tensor([-56.9860, -70.4532, -47.5810, -48.8027, -59.5218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4124, device='cuda:0', dtype=torch.float64)
tensor([-57.1149, -70.6367, -47.6390, -48.9240, -59.5851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4221, device='cuda:0', dtype=torch.float64)
tensor([-57.2649, -70.8540, -47.6995, -49.0214, -59.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4152, device='cuda:0', dtype=torch.float64)
tensor([-57.3856, -71.0605, -47.7899, -49.1628, -59.8217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4084, device='cuda:0', dtype=torch.float64)
tensor([-57.4651, -71.2427, -47.8739, -49.2884, -59.9656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4437, device='cuda:0', dtype=torch.float64)
tensor([-57.5114, -71.3874, -47.9526, -49.3992, -60.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4159, device='cuda:0', dtype=torch.float64)
tensor([-57.5509, -71.5296, -48.0349, -49.5162, -60.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3883, device='cuda:0', dtype=torch.float64)
tensor([-57.5781, -71.6890, -48.1211, -49.6170, -60.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3771, device='cuda:0', dtype=torch.float64)
tensor([-57.6282, -71.8539, -48.2415, -49.7373, -60.5698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3640, device='cuda:0', dtype=torch.float64)
tensor([-57.6531, -72.0284, -48.3471, -49.8774, -60.7726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3671, device='cuda:0', dtype=torch.float64)
tensor([-57.7023, -72.2185, -48.4771, -50.0455, -60.9842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4060, device='cuda:0', dtype=torch.float64)
tensor([-57.7930, -72.4049, -48.6015, -50.1909, -61.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3938, device='cuda:0', dtype=torch.float64)
tensor([-57.8889, -72.5985, -48.7393, -50.3731, -61.3906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3944, device='cuda:0', dtype=torch.float64)
tensor([-57.9236, -72.7709, -48.8327, -50.4932, -61.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3971, device='cuda:0', dtype=torch.float64)
tensor([-57.9713, -72.9693, -48.9197, -50.5945, -61.7546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4010, device='cuda:0', dtype=torch.float64)
tensor([-58.0060, -73.1817, -48.9899, -50.6826, -61.9329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4667, device='cuda:0', dtype=torch.float64)
tensor([-57.9848, -73.4072, -49.0566, -50.8250, -62.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4207, device='cuda:0', dtype=torch.float64)
tensor([-57.9879, -73.6312, -49.1415, -51.0102, -62.3637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3962, device='cuda:0', dtype=torch.float64)
tensor([-58.0594, -73.8469, -49.2486, -51.2111, -62.5538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3971, device='cuda:0', dtype=torch.float64)
tensor([-58.0927, -74.0291, -49.3055, -51.3629, -62.6927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4460, device='cuda:0', dtype=torch.float64)
tensor([-58.1543, -74.1630, -49.3658, -51.4758, -62.8052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3355, device='cuda:0', dtype=torch.float64)
tensor([-58.1836, -74.2400, -49.3881, -51.5549, -62.9040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3865, device='cuda:0', dtype=torch.float64)
tensor([-58.1866, -74.2835, -49.4125, -51.6515, -63.0066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4023, device='cuda:0', dtype=torch.float64)
tensor([-58.2163, -74.3657, -49.4606, -51.8048, -63.1646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4075, device='cuda:0', dtype=torch.float64)
tensor([-58.2558, -74.4471, -49.5141, -51.9334, -63.3200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4112, device='cuda:0', dtype=torch.float64)
tensor([-58.3268, -74.5719, -49.5643, -52.0951, -63.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3578, device='cuda:0', dtype=torch.float64)
tensor([-58.4208, -74.6790, -49.6139, -52.2514, -63.6166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3777, device='cuda:0', dtype=torch.float64)
tensor([-58.5329, -74.7991, -49.6598, -52.4248, -63.7458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3636, device='cuda:0', dtype=torch.float64)
tensor([-58.6218, -74.8918, -49.7018, -52.5567, -63.8399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3597, device='cuda:0', dtype=torch.float64)
tensor([-58.7170, -74.9636, -49.7581, -52.6926, -63.9358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3076, device='cuda:0', dtype=torch.float64)
tensor([-58.8050, -75.0435, -49.7934, -52.8100, -64.0328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3871, device='cuda:0', dtype=torch.float64)
tensor([-58.9232, -75.1273, -49.8360, -52.9394, -64.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4176, device='cuda:0', dtype=torch.float64)
tensor([-59.0605, -75.2388, -49.8667, -53.0709, -64.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3527, device='cuda:0', dtype=torch.float64)
tensor([-59.1756, -75.3197, -49.8751, -53.1664, -64.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3958, device='cuda:0', dtype=torch.float64)
tensor([-59.2660, -75.3492, -49.8403, -53.2350, -64.2568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3397, device='cuda:0', dtype=torch.float64)
tensor([-59.3366, -75.4049, -49.8334, -53.3171, -64.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4411, device='cuda:0', dtype=torch.float64)
tensor([-59.4594, -75.4900, -49.8554, -53.4397, -64.2947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3692, device='cuda:0', dtype=torch.float64)
tensor([-59.6221, -75.6172, -49.8906, -53.6023, -64.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3873, device='cuda:0', dtype=torch.float64)
tensor([-59.7878, -75.7891, -49.9189, -53.7368, -64.4246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4228, device='cuda:0', dtype=torch.float64)
tensor([-59.9416, -75.9717, -49.9210, -53.8887, -64.4947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4132, device='cuda:0', dtype=torch.float64)
tensor([-60.1513, -76.1642, -49.9483, -54.0667, -64.5263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3795, device='cuda:0', dtype=torch.float64)
tensor([-60.3627, -76.3617, -49.9927, -54.2744, -64.5870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3666, device='cuda:0', dtype=torch.float64)
tensor([-60.5228, -76.5089, -50.0394, -54.4394, -64.6265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3996, device='cuda:0', dtype=torch.float64)
tensor([-60.6925, -76.6782, -50.0809, -54.5943, -64.6586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4752, device='cuda:0', dtype=torch.float64)
tensor([-60.8432, -76.8463, -50.1175, -54.7133, -64.6737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3950, device='cuda:0', dtype=torch.float64)
tensor([-61.0080, -77.0726, -50.1692, -54.8638, -64.7481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3830, device='cuda:0', dtype=torch.float64)
tensor([-61.1365, -77.2492, -50.2204, -55.0289, -64.8170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3734, device='cuda:0', dtype=torch.float64)
tensor([-61.2413, -77.4160, -50.2640, -55.1689, -64.8636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3630, device='cuda:0', dtype=torch.float64)
tensor([-61.3340, -77.5272, -50.2967, -55.2520, -64.8705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3802, device='cuda:0', dtype=torch.float64)
tensor([-61.4123, -77.6827, -50.3522, -55.3716, -64.9213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4069, device='cuda:0', dtype=torch.float64)
tensor([-61.5141, -77.8343, -50.4190, -55.4802, -64.9587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3829, device='cuda:0', dtype=torch.float64)
tensor([-61.6376, -78.0069, -50.4937, -55.5843, -64.9949], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4027, device='cuda:0', dtype=torch.float64)
tensor([-61.7462, -78.1640, -50.5726, -55.6762, -65.0055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3881, device='cuda:0', dtype=torch.float64)
tensor([-61.8771, -78.3345, -50.6712, -55.7919, -65.0443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3661, device='cuda:0', dtype=torch.float64)
tensor([-61.9844, -78.4956, -50.7808, -55.9352, -65.1403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3508, device='cuda:0', dtype=torch.float64)
tensor([-62.1019, -78.6990, -50.8901, -56.0936, -65.2710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3986, device='cuda:0', dtype=torch.float64)
tensor([-62.2104, -78.8720, -51.0019, -56.2546, -65.3767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4500, device='cuda:0', dtype=torch.float64)
tensor([-62.3586, -79.0370, -51.1496, -56.4533, -65.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4001, device='cuda:0', dtype=torch.float64)
tensor([-62.4592, -79.1579, -51.2779, -56.6595, -65.6621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3450, device='cuda:0', dtype=torch.float64)
tensor([-62.5469, -79.2998, -51.3946, -56.8466, -65.8258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3707, device='cuda:0', dtype=torch.float64)
tensor([-62.6143, -79.3907, -51.5256, -57.0306, -65.9498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4126, device='cuda:0', dtype=torch.float64)
tensor([-62.6568, -79.4589, -51.6249, -57.1878, -66.0593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3619, device='cuda:0', dtype=torch.float64)
tensor([-62.7229, -79.4804, -51.6887, -57.2986, -66.1110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4398, device='cuda:0', dtype=torch.float64)
tensor([-62.6812, -79.5013, -51.7039, -57.3966, -66.1843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3366, device='cuda:0', dtype=torch.float64)
tensor([-62.6381, -79.5373, -51.7185, -57.4964, -66.2801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3793, device='cuda:0', dtype=torch.float64)
tensor([-62.5636, -79.6277, -51.7198, -57.6450, -66.4327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3903, device='cuda:0', dtype=torch.float64)
tensor([-62.4419, -79.7030, -51.6987, -57.7478, -66.5958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3562, device='cuda:0', dtype=torch.float64)
tensor([-62.3494, -79.8051, -51.6958, -57.8785, -66.7666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3760, device='cuda:0', dtype=torch.float64)
tensor([-62.2924, -79.9501, -51.7129, -57.9912, -66.9618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3709, device='cuda:0', dtype=torch.float64)
tensor([-62.2222, -80.1307, -51.7264, -58.0860, -67.1694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3886, device='cuda:0', dtype=torch.float64)
tensor([-62.1368, -80.2609, -51.7289, -58.1747, -67.3732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3375, device='cuda:0', dtype=torch.float64)
tensor([-62.0986, -80.3716, -51.7248, -58.2080, -67.5245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3286, device='cuda:0', dtype=torch.float64)
tensor([-62.0833, -80.5181, -51.7341, -58.2736, -67.7071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3886, device='cuda:0', dtype=torch.float64)
tensor([-62.0530, -80.6365, -51.7202, -58.3324, -67.8752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3956, device='cuda:0', dtype=torch.float64)
tensor([-62.0636, -80.7830, -51.7145, -58.4036, -68.0848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4045, device='cuda:0', dtype=torch.float64)
tensor([-62.0559, -80.9368, -51.6958, -58.4794, -68.2838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4008, device='cuda:0', dtype=torch.float64)
tensor([-62.0648, -81.0740, -51.6761, -58.5193, -68.4750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3969, device='cuda:0', dtype=torch.float64)
tensor([-62.0800, -81.2289, -51.6597, -58.5288, -68.6401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3412, device='cuda:0', dtype=torch.float64)
tensor([-62.1644, -81.3734, -51.6730, -58.5450, -68.7856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4046, device='cuda:0', dtype=torch.float64)
tensor([-62.2625, -81.5107, -51.6915, -58.5904, -68.9603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3739, device='cuda:0', dtype=torch.float64)
tensor([-62.3668, -81.6281, -51.7214, -58.6603, -69.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3754, device='cuda:0', dtype=torch.float64)
tensor([-62.4764, -81.7881, -51.7840, -58.7549, -69.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4098, device='cuda:0', dtype=torch.float64)
tensor([-62.5760, -81.8849, -51.8459, -58.7938, -69.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3713, device='cuda:0', dtype=torch.float64)
tensor([-62.6889, -81.9707, -51.9127, -58.8132, -69.6670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3394, device='cuda:0', dtype=torch.float64)
tensor([-62.8392, -82.0937, -51.9881, -58.8577, -69.8603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4133, device='cuda:0', dtype=torch.float64)
tensor([-63.0174, -82.3296, -52.1064, -58.9476, -70.1005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3836, device='cuda:0', dtype=torch.float64)
tensor([-63.1566, -82.5337, -52.2040, -59.0332, -70.3313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3472, device='cuda:0', dtype=torch.float64)
tensor([-63.2713, -82.7008, -52.2903, -59.0762, -70.5433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3407, device='cuda:0', dtype=torch.float64)
tensor([-63.3852, -82.8557, -52.3717, -59.1055, -70.7223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2956, device='cuda:0', dtype=torch.float64)
tensor([-63.5043, -83.0169, -52.4525, -59.1535, -70.8955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4004, device='cuda:0', dtype=torch.float64)
tensor([-63.5988, -83.1292, -52.5291, -59.1851, -71.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3408, device='cuda:0', dtype=torch.float64)
tensor([-63.6946, -83.2763, -52.6073, -59.2113, -71.2372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3275, device='cuda:0', dtype=torch.float64)
tensor([-63.7993, -83.3712, -52.6843, -59.2431, -71.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3769, device='cuda:0', dtype=torch.float64)
tensor([-63.8920, -83.4528, -52.7357, -59.2518, -71.5950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3432, device='cuda:0', dtype=torch.float64)
tensor([-63.9753, -83.5930, -52.7981, -59.2948, -71.8142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3260, device='cuda:0', dtype=torch.float64)
tensor([-64.0595, -83.7871, -52.8917, -59.3734, -72.0505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3441, device='cuda:0', dtype=torch.float64)
tensor([-64.1777, -83.9841, -53.0059, -59.5193, -72.3163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4019, device='cuda:0', dtype=torch.float64)
tensor([-64.2641, -84.1883, -53.1200, -59.6410, -72.5708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3603, device='cuda:0', dtype=torch.float64)
tensor([-64.3695, -84.3522, -53.2263, -59.7208, -72.7683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3111, device='cuda:0', dtype=torch.float64)
tensor([-64.4644, -84.5155, -53.3258, -59.7890, -72.9490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3520, device='cuda:0', dtype=torch.float64)
tensor([-64.5419, -84.5817, -53.4137, -59.8254, -73.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3114, device='cuda:0', dtype=torch.float64)
tensor([-64.5991, -84.6226, -53.4983, -59.8575, -73.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3663, device='cuda:0', dtype=torch.float64)
tensor([-64.7005, -84.7199, -53.5870, -59.9442, -73.5291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3330, device='cuda:0', dtype=torch.float64)
tensor([-64.8172, -84.8321, -53.6640, -60.0056, -73.7327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3698, device='cuda:0', dtype=torch.float64)
tensor([-64.9724, -84.9783, -53.7573, -60.0810, -73.9625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3323, device='cuda:0', dtype=torch.float64)
tensor([-65.1531, -85.1953, -53.8374, -60.1297, -74.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3518, device='cuda:0', dtype=torch.float64)
tensor([-65.3683, -85.4586, -53.9713, -60.2167, -74.4316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3317, device='cuda:0', dtype=torch.float64)
tensor([-65.5897, -85.7092, -54.1069, -60.3098, -74.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3012, device='cuda:0', dtype=torch.float64)
tensor([-65.8095, -85.8978, -54.2480, -60.3817, -74.9082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2894, device='cuda:0', dtype=torch.float64)
tensor([-66.0242, -86.0960, -54.3653, -60.4284, -75.0819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3505, device='cuda:0', dtype=torch.float64)
tensor([-66.2550, -86.2858, -54.4659, -60.4805, -75.2209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3318, device='cuda:0', dtype=torch.float64)
tensor([-66.4749, -86.4323, -54.5653, -60.5477, -75.3483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3298, device='cuda:0', dtype=torch.float64)
tensor([-66.6722, -86.5132, -54.6587, -60.6139, -75.4392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3705, device='cuda:0', dtype=torch.float64)
tensor([-66.8565, -86.5565, -54.7292, -60.6636, -75.5091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3318, device='cuda:0', dtype=torch.float64)
tensor([-67.0088, -86.5813, -54.7814, -60.6934, -75.5433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3392, device='cuda:0', dtype=torch.float64)
tensor([-67.1408, -86.5815, -54.8105, -60.7058, -75.5295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2900, device='cuda:0', dtype=torch.float64)
tensor([-67.2805, -86.6105, -54.8443, -60.7382, -75.5241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3539, device='cuda:0', dtype=torch.float64)
tensor([-67.4804, -86.7014, -54.9054, -60.8084, -75.5503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3579, device='cuda:0', dtype=torch.float64)
tensor([-67.6720, -86.8505, -55.0003, -60.9190, -75.5823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3002, device='cuda:0', dtype=torch.float64)
tensor([-67.8544, -86.9960, -55.0890, -61.0228, -75.6099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3308, device='cuda:0', dtype=torch.float64)
tensor([-68.0180, -87.1358, -55.1632, -61.1689, -75.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3603, device='cuda:0', dtype=torch.float64)
tensor([-68.2080, -87.3291, -55.2577, -61.3665, -75.7611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3862, device='cuda:0', dtype=torch.float64)
tensor([-68.3914, -87.5210, -55.3724, -61.5514, -75.8655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3217, device='cuda:0', dtype=torch.float64)
tensor([-68.5754, -87.7103, -55.4625, -61.7186, -75.9912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3137, device='cuda:0', dtype=torch.float64)
tensor([-68.7457, -87.8393, -55.5513, -61.9029, -76.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3642, device='cuda:0', dtype=torch.float64)
tensor([-68.9318, -87.9628, -55.6308, -62.0723, -76.2615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3426, device='cuda:0', dtype=torch.float64)
tensor([-69.1205, -88.1336, -55.7006, -62.2582, -76.4433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3638, device='cuda:0', dtype=torch.float64)
tensor([-69.3106, -88.3582, -55.7794, -62.4161, -76.6367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3559, device='cuda:0', dtype=torch.float64)
tensor([-69.4736, -88.6113, -55.8538, -62.5595, -76.8396], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3293, device='cuda:0', dtype=torch.float64)
tensor([-69.6777, -88.8609, -55.9320, -62.6644, -76.9681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3195, device='cuda:0', dtype=torch.float64)
tensor([-69.8701, -89.0410, -56.0117, -62.7567, -77.0833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3124, device='cuda:0', dtype=torch.float64)
tensor([-70.0485, -89.2099, -56.0947, -62.8478, -77.2166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3095, device='cuda:0', dtype=torch.float64)
tensor([-70.2098, -89.3735, -56.1527, -62.9442, -77.3533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2981, device='cuda:0', dtype=torch.float64)
tensor([-70.3574, -89.5329, -56.1911, -63.0479, -77.5235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2900, device='cuda:0', dtype=torch.float64)
tensor([-70.4995, -89.6569, -56.2075, -63.1125, -77.7195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3267, device='cuda:0', dtype=torch.float64)
tensor([-70.6311, -89.7795, -56.2301, -63.1840, -77.9358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3936, device='cuda:0', dtype=torch.float64)
tensor([-70.6787, -89.7980, -56.1950, -63.1647, -78.0773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3204, device='cuda:0', dtype=torch.float64)
tensor([-70.7090, -89.7810, -56.1611, -63.0881, -78.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3188, device='cuda:0', dtype=torch.float64)
tensor([-70.7624, -89.7962, -56.1408, -63.0280, -78.3189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3070, device='cuda:0', dtype=torch.float64)
tensor([-70.8078, -89.8453, -56.1373, -62.9657, -78.4591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3356, device='cuda:0', dtype=torch.float64)
tensor([-70.8810, -90.0019, -56.1440, -62.9613, -78.6190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2986, device='cuda:0', dtype=torch.float64)
tensor([-70.9436, -90.1393, -56.1371, -62.9362, -78.7467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3111, device='cuda:0', dtype=torch.float64)
tensor([-71.0476, -90.3237, -56.1480, -62.9545, -78.8923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2829, device='cuda:0', dtype=torch.float64)
tensor([-71.1622, -90.5358, -56.1580, -62.9775, -79.0412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3058, device='cuda:0', dtype=torch.float64)
tensor([-71.2636, -90.8071, -56.1695, -62.9973, -79.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3334, device='cuda:0', dtype=torch.float64)
tensor([-71.3895, -91.1321, -56.2020, -63.0444, -79.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3392, device='cuda:0', dtype=torch.float64)
tensor([-71.5626, -91.4885, -56.2610, -63.1247, -79.5226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3349, device='cuda:0', dtype=torch.float64)
tensor([-71.7171, -91.8604, -56.3225, -63.2372, -79.7416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2952, device='cuda:0', dtype=torch.float64)
tensor([-71.9114, -92.2892, -56.3798, -63.3479, -79.9298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2960, device='cuda:0', dtype=torch.float64)
tensor([-72.1177, -92.6931, -56.4470, -63.4420, -80.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3078, device='cuda:0', dtype=torch.float64)
tensor([-72.2834, -93.0021, -56.4984, -63.4761, -80.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3100, device='cuda:0', dtype=torch.float64)
tensor([-72.4355, -93.2334, -56.5411, -63.4851, -80.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3231, device='cuda:0', dtype=torch.float64)
tensor([-72.6362, -93.4813, -56.6077, -63.4970, -80.2822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2991, device='cuda:0', dtype=torch.float64)
tensor([-72.8496, -93.7751, -56.6797, -63.5454, -80.3651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2940, device='cuda:0', dtype=torch.float64)
tensor([-73.0355, -93.9898, -56.7416, -63.5997, -80.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2889, device='cuda:0', dtype=torch.float64)
tensor([-73.2243, -94.1774, -56.7988, -63.6383, -80.4642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3280, device='cuda:0', dtype=torch.float64)
tensor([-73.4738, -94.4427, -56.8926, -63.7063, -80.5365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2980, device='cuda:0', dtype=torch.float64)
tensor([-73.6889, -94.6560, -56.9915, -63.7652, -80.5607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3295, device='cuda:0', dtype=torch.float64)
tensor([-73.8825, -94.8091, -57.0822, -63.8174, -80.5898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3087, device='cuda:0', dtype=torch.float64)
tensor([-74.0662, -94.9609, -57.1721, -63.8540, -80.6142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3592, device='cuda:0', dtype=torch.float64)
tensor([-74.2501, -95.1222, -57.2708, -63.9005, -80.6458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2837, device='cuda:0', dtype=torch.float64)
tensor([-74.4082, -95.2495, -57.3369, -63.8987, -80.6119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2977, device='cuda:0', dtype=torch.float64)
tensor([-74.5776, -95.3625, -57.3951, -63.8879, -80.5528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2543, device='cuda:0', dtype=torch.float64)
tensor([-74.7773, -95.5089, -57.4601, -63.9195, -80.5413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3169, device='cuda:0', dtype=torch.float64)
tensor([-74.9516, -95.6626, -57.5441, -63.9375, -80.4842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2720, device='cuda:0', dtype=torch.float64)
tensor([-75.1039, -95.7996, -57.5970, -63.9471, -80.4281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2885, device='cuda:0', dtype=torch.float64)
tensor([-75.2841, -95.9178, -57.6564, -63.9791, -80.4315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3453, device='cuda:0', dtype=torch.float64)
tensor([-75.4714, -96.0293, -57.7128, -64.0070, -80.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3361, device='cuda:0', dtype=torch.float64)
tensor([-75.6584, -96.1406, -57.7693, -64.0526, -80.4522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2983, device='cuda:0', dtype=torch.float64)
tensor([-75.8023, -96.1512, -57.8190, -64.0635, -80.4468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3086, device='cuda:0', dtype=torch.float64)
tensor([-75.8987, -96.1186, -57.8294, -64.0129, -80.4250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3627, device='cuda:0', dtype=torch.float64)
tensor([-75.9700, -96.0955, -57.8356, -63.9211, -80.3775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3130, device='cuda:0', dtype=torch.float64)
tensor([-76.0221, -96.0543, -57.8591, -63.8165, -80.3087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3244, device='cuda:0', dtype=torch.float64)
tensor([-76.0730, -96.0523, -57.8967, -63.7210, -80.2120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3027, device='cuda:0', dtype=torch.float64)
tensor([-76.1300, -96.0960, -57.9496, -63.6448, -80.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2724, device='cuda:0', dtype=torch.float64)
tensor([-76.2105, -96.2031, -58.0049, -63.6055, -80.0409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2988, device='cuda:0', dtype=torch.float64)
tensor([-76.3000, -96.3607, -58.0838, -63.5757, -79.9769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2902, device='cuda:0', dtype=torch.float64)
tensor([-76.3761, -96.5381, -58.1737, -63.5639, -79.9584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2957, device='cuda:0', dtype=torch.float64)
tensor([-76.4574, -96.6871, -58.2614, -63.5169, -79.9352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2939, device='cuda:0', dtype=torch.float64)
tensor([-76.5412, -96.8646, -58.3655, -63.5167, -79.9644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3419, device='cuda:0', dtype=torch.float64)
tensor([-76.5819, -97.0165, -58.4700, -63.5226, -79.9905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2835, device='cuda:0', dtype=torch.float64)
tensor([-76.6303, -97.2086, -58.5780, -63.5455, -80.0451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2923, device='cuda:0', dtype=torch.float64)
tensor([-76.6713, -97.4076, -58.6863, -63.6049, -80.1320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2830, device='cuda:0', dtype=torch.float64)
tensor([-76.7142, -97.6276, -58.7792, -63.6846, -80.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3454, device='cuda:0', dtype=torch.float64)
tensor([-76.8088, -97.8819, -58.8665, -63.7355, -80.3519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2755, device='cuda:0', dtype=torch.float64)
tensor([-76.9218, -98.1151, -58.9472, -63.7606, -80.4595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3341, device='cuda:0', dtype=torch.float64)
tensor([-77.0476, -98.3760, -59.0152, -63.7729, -80.5680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3264, device='cuda:0', dtype=torch.float64)
tensor([-77.2128, -98.6729, -59.0890, -63.7937, -80.6960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2912, device='cuda:0', dtype=torch.float64)
tensor([-77.3597, -99.0032, -59.1768, -63.8291, -80.8445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3107, device='cuda:0', dtype=torch.float64)
tensor([-77.4999, -99.3427, -59.2661, -63.8860, -81.0424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2815, device='cuda:0', dtype=torch.float64)
tensor([-77.7142, -99.7007, -59.3630, -63.9577, -81.2498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.2778, device='cuda:0', dtype=torch.float64)
tensor([ -77.8995, -100.0235,  -59.4223,  -63.9693,  -81.3790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2919, device='cuda:0', dtype=torch.float64)
tensor([ -78.0353, -100.3018,  -59.4454,  -64.0057,  -81.5557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2693, device='cuda:0', dtype=torch.float64)
tensor([ -78.1663, -100.5870,  -59.4685,  -64.0981,  -81.8070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2836, device='cuda:0', dtype=torch.float64)
tensor([ -78.2008, -100.7976,  -59.4777,  -64.1427,  -82.0059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2688, device='cuda:0', dtype=torch.float64)
tensor([ -78.2040, -100.9643,  -59.4793,  -64.1465,  -82.1260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3021, device='cuda:0', dtype=torch.float64)
tensor([ -78.2162, -101.1553,  -59.4764,  -64.1518,  -82.2764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2732, device='cuda:0', dtype=torch.float64)
tensor([ -78.2313, -101.3227,  -59.4904,  -64.1493,  -82.3683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3216, device='cuda:0', dtype=torch.float64)
tensor([ -78.2981, -101.5016,  -59.5265,  -64.1750,  -82.4893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2906, device='cuda:0', dtype=torch.float64)
tensor([ -78.3509, -101.6087,  -59.5600,  -64.1571,  -82.5862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3515, device='cuda:0', dtype=torch.float64)
tensor([ -78.3764, -101.6450,  -59.5717,  -64.1257,  -82.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2826, device='cuda:0', dtype=torch.float64)
tensor([ -78.4244, -101.6580,  -59.5920,  -64.0664,  -82.7148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2762, device='cuda:0', dtype=torch.float64)
tensor([ -78.4666, -101.6165,  -59.5946,  -63.9927,  -82.7262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3020, device='cuda:0', dtype=torch.float64)
tensor([ -78.5528, -101.6223,  -59.5945,  -63.9903,  -82.7711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3219, device='cuda:0', dtype=torch.float64)
tensor([ -78.6765, -101.7129,  -59.6078,  -64.0341,  -82.8363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2508, device='cuda:0', dtype=torch.float64)
tensor([ -78.8378, -101.8568,  -59.6633,  -64.0873,  -82.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2535, device='cuda:0', dtype=torch.float64)
tensor([ -78.9962, -102.0805,  -59.7179,  -64.1870,  -83.0348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2745, device='cuda:0', dtype=torch.float64)
tensor([ -79.1546, -102.3647,  -59.7592,  -64.2802,  -83.1971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2775, device='cuda:0', dtype=torch.float64)
tensor([ -79.2865, -102.6411,  -59.8266,  -64.3988,  -83.4089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2681, device='cuda:0', dtype=torch.float64)
tensor([ -79.4236, -102.9068,  -59.9083,  -64.5616,  -83.6859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2621, device='cuda:0', dtype=torch.float64)
tensor([ -79.6130, -103.2618,  -59.9989,  -64.7833,  -83.9907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3238, device='cuda:0', dtype=torch.float64)
tensor([ -79.8195, -103.6205,  -60.0932,  -65.0255,  -84.3294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2531, device='cuda:0', dtype=torch.float64)
tensor([ -80.0171, -103.9861,  -60.1923,  -65.2423,  -84.6545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3330, device='cuda:0', dtype=torch.float64)
tensor([ -80.2511, -104.4141,  -60.3134,  -65.5519,  -85.0973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2863, device='cuda:0', dtype=torch.float64)
tensor([ -80.4820, -104.7788,  -60.4192,  -65.8174,  -85.5068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2893, device='cuda:0', dtype=torch.float64)
tensor([ -80.6792, -105.1256,  -60.5243,  -66.0363,  -85.8419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2600, device='cuda:0', dtype=torch.float64)
tensor([ -80.8916, -105.4562,  -60.6375,  -66.2985,  -86.2218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3093, device='cuda:0', dtype=torch.float64)
tensor([ -81.0998, -105.8157,  -60.7565,  -66.5887,  -86.6213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2904, device='cuda:0', dtype=torch.float64)
tensor([ -81.3128, -106.2261,  -60.8650,  -66.8659,  -86.9944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3212, device='cuda:0', dtype=torch.float64)
tensor([ -81.5712, -106.6741,  -60.9977,  -67.1796,  -87.3919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3214, device='cuda:0', dtype=torch.float64)
tensor([ -81.8662, -107.1132,  -61.1272,  -67.4909,  -87.7943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2898, device='cuda:0', dtype=torch.float64)
tensor([ -82.1608, -107.5320,  -61.2587,  -67.7550,  -88.1504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2668, device='cuda:0', dtype=torch.float64)
tensor([ -82.4380, -107.9349,  -61.3806,  -68.0166,  -88.4971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2813, device='cuda:0', dtype=torch.float64)
tensor([ -82.7084, -108.3483,  -61.5006,  -68.2565,  -88.7839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2974, device='cuda:0', dtype=torch.float64)
tensor([ -82.9821, -108.7567,  -61.6157,  -68.4695,  -89.0512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2409, device='cuda:0', dtype=torch.float64)
tensor([ -83.2109, -109.0768,  -61.7156,  -68.6629,  -89.2966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2440, device='cuda:0', dtype=torch.float64)
tensor([ -83.3873, -109.3487,  -61.7912,  -68.8123,  -89.4894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2744, device='cuda:0', dtype=torch.float64)
tensor([ -83.5458, -109.5422,  -61.8374,  -68.9220,  -89.6516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2634, device='cuda:0', dtype=torch.float64)
tensor([ -83.7238, -109.7295,  -61.9015,  -69.0410,  -89.8150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3121, device='cuda:0', dtype=torch.float64)
tensor([ -83.8946, -109.8976,  -61.9758,  -69.1453,  -89.9868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2692, device='cuda:0', dtype=torch.float64)
tensor([ -84.0446, -109.9626,  -62.0445,  -69.2277,  -90.1335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2280, device='cuda:0', dtype=torch.float64)
tensor([ -84.1990, -110.0355,  -62.1290,  -69.3036,  -90.2386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2848, device='cuda:0', dtype=torch.float64)
tensor([ -84.3587, -110.1439,  -62.2186,  -69.3529,  -90.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2467, device='cuda:0', dtype=torch.float64)
tensor([ -84.5480, -110.3033,  -62.2934,  -69.4122,  -90.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2977, device='cuda:0', dtype=torch.float64)
tensor([ -84.7553, -110.5007,  -62.3966,  -69.4712,  -90.6329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2691, device='cuda:0', dtype=torch.float64)
tensor([ -84.9580, -110.6604,  -62.5047,  -69.5847,  -90.7879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2419, device='cuda:0', dtype=torch.float64)
tensor([ -85.1802, -110.8389,  -62.6139,  -69.6984,  -90.9303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2820, device='cuda:0', dtype=torch.float64)
tensor([ -85.4034, -111.0417,  -62.7294,  -69.8146,  -91.0786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2783, device='cuda:0', dtype=torch.float64)
tensor([ -85.6438, -111.3119,  -62.8553,  -69.9509,  -91.2430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2969, device='cuda:0', dtype=torch.float64)
tensor([ -85.8684, -111.5970,  -62.9989,  -70.0530,  -91.3836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2681, device='cuda:0', dtype=torch.float64)
tensor([ -86.0691, -111.8469,  -63.1488,  -70.1586,  -91.5024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2767, device='cuda:0', dtype=torch.float64)
tensor([ -86.3017, -112.1766,  -63.3238,  -70.3217,  -91.6756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2658, device='cuda:0', dtype=torch.float64)
tensor([ -86.4931, -112.4912,  -63.4778,  -70.4405,  -91.8335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2178, device='cuda:0', dtype=torch.float64)
tensor([ -86.6587, -112.7991,  -63.6161,  -70.5648,  -91.9873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2649, device='cuda:0', dtype=torch.float64)
tensor([ -86.8150, -113.1272,  -63.7591,  -70.7345,  -92.1542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2503, device='cuda:0', dtype=torch.float64)
tensor([ -86.9474, -113.4780,  -63.8706,  -70.9087,  -92.3291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2957, device='cuda:0', dtype=torch.float64)
tensor([ -87.0547, -113.8217,  -63.9819,  -71.0945,  -92.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2518, device='cuda:0', dtype=torch.float64)
tensor([ -87.1536, -114.0999,  -64.0772,  -71.2503,  -92.5862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2381, device='cuda:0', dtype=torch.float64)
tensor([ -87.2455, -114.3790,  -64.1715,  -71.3995,  -92.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2252, device='cuda:0', dtype=torch.float64)
tensor([ -87.3761, -114.6940,  -64.2896,  -71.5426,  -92.7648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2677, device='cuda:0', dtype=torch.float64)
tensor([ -87.4684, -114.9911,  -64.3882,  -71.6685,  -92.8302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2370, device='cuda:0', dtype=torch.float64)
tensor([ -87.5572, -115.2333,  -64.5027,  -71.8101,  -92.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2372, device='cuda:0', dtype=torch.float64)
tensor([ -87.6420, -115.4893,  -64.6100,  -71.9454,  -92.9587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2685, device='cuda:0', dtype=torch.float64)
tensor([ -87.7687, -115.7602,  -64.7294,  -72.1168,  -93.0926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2897, device='cuda:0', dtype=torch.float64)
tensor([ -87.9035, -116.0157,  -64.8542,  -72.3131,  -93.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2790, device='cuda:0', dtype=torch.float64)
tensor([ -88.0150, -116.2863,  -64.9675,  -72.5128,  -93.4207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2506, device='cuda:0', dtype=torch.float64)
tensor([ -88.1516, -116.6080,  -65.0976,  -72.7372,  -93.6248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2424, device='cuda:0', dtype=torch.float64)
tensor([ -88.2876, -116.9385,  -65.2161,  -72.9627,  -93.8427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2581, device='cuda:0', dtype=torch.float64)
tensor([ -88.4170, -117.2557,  -65.3228,  -73.1525,  -94.0301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3237, device='cuda:0', dtype=torch.float64)
tensor([ -88.5730, -117.6713,  -65.4382,  -73.3365,  -94.2275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2990, device='cuda:0', dtype=torch.float64)
tensor([ -88.6344, -117.9188,  -65.4933,  -73.4447,  -94.3600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2220, device='cuda:0', dtype=torch.float64)
tensor([ -88.7440, -118.2476,  -65.5544,  -73.5995,  -94.5297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2560, device='cuda:0', dtype=torch.float64)
tensor([ -88.8231, -118.4347,  -65.5947,  -73.7085,  -94.6558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2926, device='cuda:0', dtype=torch.float64)
tensor([ -88.9340, -118.7029,  -65.6195,  -73.8430,  -94.8301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2629, device='cuda:0', dtype=torch.float64)
tensor([ -89.0396, -118.9532,  -65.6412,  -74.0016,  -95.0239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3043, device='cuda:0', dtype=torch.float64)
tensor([ -89.1033, -119.2024,  -65.6656,  -74.1734,  -95.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2867, device='cuda:0', dtype=torch.float64)
tensor([ -89.1931, -119.4503,  -65.7190,  -74.3528,  -95.4503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2477, device='cuda:0', dtype=torch.float64)
tensor([ -89.2690, -119.6403,  -65.7587,  -74.5024,  -95.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2622, device='cuda:0', dtype=torch.float64)
tensor([ -89.3433, -119.8759,  -65.8240,  -74.6887,  -95.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2440, device='cuda:0', dtype=torch.float64)
tensor([ -89.4226, -120.0768,  -65.8879,  -74.8665,  -96.0582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2761, device='cuda:0', dtype=torch.float64)
tensor([ -89.5195, -120.3202,  -65.9773,  -75.0025,  -96.2593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2872, device='cuda:0', dtype=torch.float64)
tensor([ -89.6245, -120.5372,  -66.0631,  -75.2320,  -96.4962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2653, device='cuda:0', dtype=torch.float64)
tensor([ -89.7253, -120.7574,  -66.1498,  -75.4416,  -96.7011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2444, device='cuda:0', dtype=torch.float64)
tensor([ -89.8113, -121.0297,  -66.2327,  -75.6628,  -96.9249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2179, device='cuda:0', dtype=torch.float64)
tensor([ -89.9269, -121.3136,  -66.3250,  -75.9097,  -97.1575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2895, device='cuda:0', dtype=torch.float64)
tensor([ -90.0624, -121.6377,  -66.4337,  -76.1472,  -97.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2488, device='cuda:0', dtype=torch.float64)
tensor([ -90.1849, -121.9794,  -66.5379,  -76.3684,  -97.5680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2368, device='cuda:0', dtype=torch.float64)
tensor([ -90.3016, -122.3312,  -66.6658,  -76.6063,  -97.7562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2588, device='cuda:0', dtype=torch.float64)
tensor([ -90.3734, -122.6259,  -66.7941,  -76.8239,  -97.9550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2450, device='cuda:0', dtype=torch.float64)
tensor([ -90.5013, -122.9536,  -66.9271,  -77.0604,  -98.1625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2251, device='cuda:0', dtype=torch.float64)
tensor([ -90.6748, -123.3041,  -67.0665,  -77.3387,  -98.4051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2412, device='cuda:0', dtype=torch.float64)
tensor([ -90.8502, -123.6468,  -67.1950,  -77.5422,  -98.5911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2597, device='cuda:0', dtype=torch.float64)
tensor([ -91.0676, -124.0624,  -67.3509,  -77.7965,  -98.8286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2232, device='cuda:0', dtype=torch.float64)
tensor([ -91.2951, -124.4500,  -67.4956,  -78.0087,  -99.0113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2692, device='cuda:0', dtype=torch.float64)
tensor([ -91.5438, -124.8618,  -67.6601,  -78.2449,  -99.2328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2267, device='cuda:0', dtype=torch.float64)
tensor([ -91.7982, -125.3669,  -67.8299,  -78.5306,  -99.4972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2537, device='cuda:0', dtype=torch.float64)
tensor([ -92.0717, -125.8607,  -67.9883,  -78.7820,  -99.7183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2641, device='cuda:0', dtype=torch.float64)
tensor([ -92.3308, -126.3589,  -68.1316,  -79.0109,  -99.9255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2233, device='cuda:0', dtype=torch.float64)
tensor([ -92.5560, -126.7907,  -68.2360,  -79.1830, -100.0867],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2387, device='cuda:0', dtype=torch.float64)
tensor([ -92.7690, -127.2012,  -68.3422,  -79.3287, -100.2291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2128, device='cuda:0', dtype=torch.float64)
tensor([ -92.9594, -127.6279,  -68.4344,  -79.4418, -100.3275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2419, device='cuda:0', dtype=torch.float64)
tensor([ -93.1185, -128.0550,  -68.5420,  -79.5782, -100.4476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2269, device='cuda:0', dtype=torch.float64)
tensor([ -93.2920, -128.5205,  -68.6380,  -79.7304, -100.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2544, device='cuda:0', dtype=torch.float64)
tensor([ -93.4021, -128.9766,  -68.7110,  -79.8506, -100.6841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2410, device='cuda:0', dtype=torch.float64)
tensor([ -93.5361, -129.3952,  -68.7863,  -79.9663, -100.7660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2023, device='cuda:0', dtype=torch.float64)
tensor([ -93.6590, -129.7901,  -68.8633,  -80.0710, -100.8200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2498, device='cuda:0', dtype=torch.float64)
tensor([ -93.8218, -130.2702,  -68.9287,  -80.2987, -100.9452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2398, device='cuda:0', dtype=torch.float64)
tensor([ -93.9637, -130.7361,  -69.0099,  -80.5588, -101.0674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2200, device='cuda:0', dtype=torch.float64)
tensor([ -94.1196, -131.2524,  -69.1008,  -80.8523, -101.2303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2767, device='cuda:0', dtype=torch.float64)
tensor([ -94.2796, -131.7698,  -69.2177,  -81.1481, -101.3913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2063, device='cuda:0', dtype=torch.float64)
tensor([ -94.4184, -132.1933,  -69.3124,  -81.3752, -101.4930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2423, device='cuda:0', dtype=torch.float64)
tensor([ -94.5100, -132.4823,  -69.3785,  -81.5715, -101.5579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2755, device='cuda:0', dtype=torch.float64)
tensor([ -94.5530, -132.7335,  -69.4368,  -81.7126, -101.6017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2333, device='cuda:0', dtype=torch.float64)
tensor([ -94.6488, -133.0444,  -69.5262,  -81.8932, -101.6887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2461, device='cuda:0', dtype=torch.float64)
tensor([ -94.7613, -133.4584,  -69.6444,  -82.1157, -101.8041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2358, device='cuda:0', dtype=torch.float64)
tensor([ -94.8971, -133.8708,  -69.7862,  -82.2905, -101.9109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2162, device='cuda:0', dtype=torch.float64)
tensor([ -95.0899, -134.3372,  -69.9527,  -82.5000, -102.0829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2214, device='cuda:0', dtype=torch.float64)
tensor([ -95.2578, -134.7814,  -70.1046,  -82.7295, -102.2707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2456, device='cuda:0', dtype=torch.float64)
tensor([ -95.4015, -135.1551,  -70.2445,  -82.9806, -102.4766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2339, device='cuda:0', dtype=torch.float64)
tensor([ -95.5592, -135.5049,  -70.3799,  -83.2464, -102.7022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2210, device='cuda:0', dtype=torch.float64)
tensor([ -95.7286, -135.8585,  -70.5009,  -83.4862, -102.9187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2661, device='cuda:0', dtype=torch.float64)
tensor([ -95.8897, -136.1300,  -70.6275,  -83.7463, -103.1531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2064, device='cuda:0', dtype=torch.float64)
tensor([ -96.0640, -136.3822,  -70.7484,  -84.0377, -103.4172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2129, device='cuda:0', dtype=torch.float64)
tensor([ -96.2379, -136.6230,  -70.8609,  -84.3307, -103.7123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2058, device='cuda:0', dtype=torch.float64)
tensor([ -96.4089, -136.8844,  -70.9735,  -84.6441, -104.0159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2339, device='cuda:0', dtype=torch.float64)
tensor([ -96.6101, -137.2281,  -71.0845,  -85.0036, -104.3389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2160, device='cuda:0', dtype=torch.float64)
tensor([ -96.7812, -137.4803,  -71.1769,  -85.2552, -104.5749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2367, device='cuda:0', dtype=torch.float64)
tensor([ -96.9603, -137.8048,  -71.2878,  -85.5456, -104.8302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2208, device='cuda:0', dtype=torch.float64)
tensor([ -97.1560, -138.1531,  -71.4106,  -85.8560, -105.0813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2251, device='cuda:0', dtype=torch.float64)
tensor([ -97.3704, -138.6072,  -71.5487,  -86.2228, -105.4115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2383, device='cuda:0', dtype=torch.float64)
tensor([ -97.5281, -138.9252,  -71.6759,  -86.5645, -105.7301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2075, device='cuda:0', dtype=torch.float64)
tensor([ -97.6536, -139.1952,  -71.8030,  -86.9174, -106.0403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2523, device='cuda:0', dtype=torch.float64)
tensor([ -97.7845, -139.4413,  -71.9408,  -87.2623, -106.3403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2492, device='cuda:0', dtype=torch.float64)
tensor([ -97.9654, -139.7321,  -72.1025,  -87.6855, -106.6769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1845, device='cuda:0', dtype=torch.float64)
tensor([ -98.1083, -139.9673,  -72.2263,  -88.0752, -106.9851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2085, device='cuda:0', dtype=torch.float64)
tensor([ -98.2518, -140.1647,  -72.3395,  -88.4315, -107.2916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([ -98.3784, -140.3447,  -72.4487,  -88.7550, -107.5857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1991, device='cuda:0', dtype=torch.float64)
tensor([ -98.4820, -140.5230,  -72.5505,  -89.0485, -107.8482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2709, device='cuda:0', dtype=torch.float64)
tensor([ -98.6232, -140.7726,  -72.6825,  -89.4090, -108.1397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2080, device='cuda:0', dtype=torch.float64)
tensor([ -98.7142, -140.9465,  -72.8075,  -89.6954, -108.4053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2403, device='cuda:0', dtype=torch.float64)
tensor([ -98.7906, -141.0837,  -72.9070,  -89.8883, -108.5991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2278, device='cuda:0', dtype=torch.float64)
tensor([ -98.9028, -141.2556,  -72.9963,  -90.0838, -108.7891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2120, device='cuda:0', dtype=torch.float64)
tensor([ -99.0365, -141.4900,  -73.0940,  -90.3407, -109.0018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1942, device='cuda:0', dtype=torch.float64)
tensor([ -99.1960, -141.7795,  -73.2090,  -90.5809, -109.2250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2301, device='cuda:0', dtype=torch.float64)
tensor([ -99.3114, -142.0389,  -73.3153,  -90.7701, -109.4009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2385, device='cuda:0', dtype=torch.float64)
tensor([ -99.4239, -142.2936,  -73.4122,  -90.9731, -109.5733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2012, device='cuda:0', dtype=torch.float64)
tensor([ -99.5625, -142.5473,  -73.5175,  -91.1563, -109.7322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2101, device='cuda:0', dtype=torch.float64)
tensor([ -99.6999, -142.7514,  -73.6176,  -91.2716, -109.8788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1992, device='cuda:0', dtype=torch.float64)
tensor([ -99.8603, -142.9626,  -73.7227,  -91.4542, -110.0398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2414, device='cuda:0', dtype=torch.float64)
tensor([ -99.9772, -143.1599,  -73.7822,  -91.6573, -110.2082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2000, device='cuda:0', dtype=torch.float64)
tensor([-100.1023, -143.3963,  -73.8549,  -91.8821, -110.4150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2076, device='cuda:0', dtype=torch.float64)
tensor([-100.2079, -143.5529,  -73.9187,  -92.1010, -110.5900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2441, device='cuda:0', dtype=torch.float64)
tensor([-100.3835, -143.7428,  -74.0066,  -92.3734, -110.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1920, device='cuda:0', dtype=torch.float64)
tensor([-100.5660, -143.9861,  -74.0905,  -92.6080, -111.0129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2249, device='cuda:0', dtype=torch.float64)
tensor([-100.7579, -144.2964,  -74.2113,  -92.8917, -111.2521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1891, device='cuda:0', dtype=torch.float64)
tensor([-100.9583, -144.6566,  -74.3222,  -93.2185, -111.5268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2342, device='cuda:0', dtype=torch.float64)
tensor([-101.1432, -145.0702,  -74.4202,  -93.5157, -111.8044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2048, device='cuda:0', dtype=torch.float64)
tensor([-101.3338, -145.5049,  -74.5343,  -93.8215, -112.1006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1958, device='cuda:0', dtype=torch.float64)
tensor([-101.5088, -145.8614,  -74.6345,  -94.1010, -112.3766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1979, device='cuda:0', dtype=torch.float64)
tensor([-101.7368, -146.2062,  -74.7494,  -94.4012, -112.6648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2039, device='cuda:0', dtype=torch.float64)
tensor([-101.9488, -146.4784,  -74.8571,  -94.5971, -112.8718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2224, device='cuda:0', dtype=torch.float64)
tensor([-102.1139, -146.6050,  -74.9585,  -94.7331, -113.0270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2248, device='cuda:0', dtype=torch.float64)
tensor([-102.2616, -146.6709,  -75.0441,  -94.8665, -113.1706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2488, device='cuda:0', dtype=torch.float64)
tensor([-102.4518, -146.8334,  -75.1289,  -95.0617, -113.3582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2055, device='cuda:0', dtype=torch.float64)
tensor([-102.6682, -147.0759,  -75.2363,  -95.3034, -113.5967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2026, device='cuda:0', dtype=torch.float64)
tensor([-102.8543, -147.2396,  -75.3316,  -95.4912, -113.7967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1996, device='cuda:0', dtype=torch.float64)
tensor([-103.0100, -147.4562,  -75.4243,  -95.6864, -114.0110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2234, device='cuda:0', dtype=torch.float64)
tensor([-103.1769, -147.7285,  -75.5310,  -95.9166, -114.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2042, device='cuda:0', dtype=torch.float64)
tensor([-103.3472, -148.0225,  -75.6299,  -96.1359, -114.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2186, device='cuda:0', dtype=torch.float64)
tensor([-103.5323, -148.3324,  -75.7195,  -96.3890, -114.7045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2234, device='cuda:0', dtype=torch.float64)
tensor([-103.7384, -148.5428,  -75.8039,  -96.7068, -114.9964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2384, device='cuda:0', dtype=torch.float64)
tensor([-103.9664, -148.8540,  -75.8717,  -96.9949, -115.2758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1958, device='cuda:0', dtype=torch.float64)
tensor([-104.1812, -149.1916,  -75.9275,  -97.2467, -115.5272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1892, device='cuda:0', dtype=torch.float64)
tensor([-104.3598, -149.3975,  -75.9818,  -97.3763, -115.6880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2232, device='cuda:0', dtype=torch.float64)
tensor([-104.5172, -149.5393,  -76.0365,  -97.4998, -115.8518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1986, device='cuda:0', dtype=torch.float64)
tensor([-104.6763, -149.7645,  -76.1075,  -97.6665, -116.0220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2086, device='cuda:0', dtype=torch.float64)
tensor([-104.8133, -150.0054,  -76.1566,  -97.7989, -116.1462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2361, device='cuda:0', dtype=torch.float64)
tensor([-104.9435, -150.2399,  -76.2058,  -97.9880, -116.2842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2149, device='cuda:0', dtype=torch.float64)
tensor([-105.0779, -150.5710,  -76.2716,  -98.2244, -116.4701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2048, device='cuda:0', dtype=torch.float64)
tensor([-105.1559, -150.8017,  -76.3003,  -98.4074, -116.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2112, device='cuda:0', dtype=torch.float64)
tensor([-105.2766, -151.0835,  -76.3376,  -98.6323, -116.7839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1831, device='cuda:0', dtype=torch.float64)
tensor([-105.4007, -151.4871,  -76.3969,  -98.9006, -117.0168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2216, device='cuda:0', dtype=torch.float64)
tensor([-105.4980, -151.8166,  -76.4485,  -99.1119, -117.2209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2373, device='cuda:0', dtype=torch.float64)
tensor([-105.6211, -152.2257,  -76.5108,  -99.4030, -117.4940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2201, device='cuda:0', dtype=torch.float64)
tensor([-105.7905, -152.7746,  -76.5918,  -99.7342, -117.7978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1578, device='cuda:0', dtype=torch.float64)
tensor([-105.9673, -153.2708,  -76.6763, -100.0077, -118.0761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2186, device='cuda:0', dtype=torch.float64)
tensor([-106.1447, -153.7808,  -76.7471, -100.2815, -118.3601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1875, device='cuda:0', dtype=torch.float64)
tensor([-106.2875, -154.2722,  -76.8179, -100.5486, -118.6432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1977, device='cuda:0', dtype=torch.float64)
tensor([-106.4436, -154.8852,  -76.8994, -100.8446, -118.9514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2063, device='cuda:0', dtype=torch.float64)
tensor([-106.5461, -155.3222,  -76.9312, -101.0489, -119.1773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2068, device='cuda:0', dtype=torch.float64)
tensor([-106.6650, -155.7892,  -76.9545, -101.2741, -119.4152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1910, device='cuda:0', dtype=torch.float64)
tensor([-106.8384, -156.2320,  -76.9988, -101.5640, -119.6909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2225, device='cuda:0', dtype=torch.float64)
tensor([-107.0085, -156.6518,  -77.0781, -101.7882, -119.9281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1998, device='cuda:0', dtype=torch.float64)
tensor([-107.2119, -157.0751,  -77.1748, -102.0753, -120.2018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2109, device='cuda:0', dtype=torch.float64)
tensor([-107.4417, -157.5754,  -77.2930, -102.4000, -120.5132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2151, device='cuda:0', dtype=torch.float64)
tensor([-107.6271, -158.0324,  -77.4103, -102.6730, -120.8066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2071, device='cuda:0', dtype=torch.float64)
tensor([-107.7977, -158.5454,  -77.5557, -102.9985, -121.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1945, device='cuda:0', dtype=torch.float64)
tensor([-107.9666, -159.1186,  -77.7030, -103.3076, -121.4346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1763, device='cuda:0', dtype=torch.float64)
tensor([-108.1518, -159.7019,  -77.8787, -103.6088, -121.7558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1896, device='cuda:0', dtype=torch.float64)
tensor([-108.3466, -160.2556,  -78.0549, -103.9660, -122.1068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1981, device='cuda:0', dtype=torch.float64)
tensor([-108.5273, -160.7507,  -78.2086, -104.2107, -122.3963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1964, device='cuda:0', dtype=torch.float64)
tensor([-108.6829, -161.1824,  -78.3833, -104.4328, -122.6516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1587, device='cuda:0', dtype=torch.float64)
tensor([-108.8858, -161.6442,  -78.5571, -104.6784, -122.9035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2111, device='cuda:0', dtype=torch.float64)
tensor([-109.1151, -162.0870,  -78.7524, -105.0187, -123.2255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1897, device='cuda:0', dtype=torch.float64)
tensor([-109.3932, -162.6093,  -78.9700, -105.3560, -123.5639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2182, device='cuda:0', dtype=torch.float64)
tensor([-109.6985, -163.1117,  -79.1933, -105.7700, -123.9550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2312, device='cuda:0', dtype=torch.float64)
tensor([-109.9866, -163.6166,  -79.3888, -106.1739, -124.3143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1867, device='cuda:0', dtype=torch.float64)
tensor([-110.2567, -164.1484,  -79.5634, -106.5542, -124.6353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2025, device='cuda:0', dtype=torch.float64)
tensor([-110.4814, -164.5070,  -79.7000, -106.8253, -124.8762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1944, device='cuda:0', dtype=torch.float64)
tensor([-110.6794, -164.8938,  -79.8370, -107.0873, -125.1381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1751, device='cuda:0', dtype=torch.float64)
tensor([-110.9314, -165.3007,  -79.9987, -107.4440, -125.4644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1732, device='cuda:0', dtype=torch.float64)
tensor([-111.1300, -165.6234,  -80.1344, -107.7174, -125.7289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2024, device='cuda:0', dtype=torch.float64)
tensor([-111.3315, -166.0214,  -80.2647, -107.9677, -125.9819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1818, device='cuda:0', dtype=torch.float64)
tensor([-111.5120, -166.3771,  -80.3849, -108.2565, -126.2535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1734, device='cuda:0', dtype=torch.float64)
tensor([-111.6738, -166.7306,  -80.4866, -108.5182, -126.4902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1967, device='cuda:0', dtype=torch.float64)
tensor([-111.7626, -166.9965,  -80.5598, -108.6749, -126.6376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1646, device='cuda:0', dtype=torch.float64)
tensor([-111.8322, -167.2762,  -80.6352, -108.8772, -126.8108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2277, device='cuda:0', dtype=torch.float64)
tensor([-111.9459, -167.6469,  -80.7678, -109.2036, -127.0873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1838, device='cuda:0', dtype=torch.float64)
tensor([-112.0747, -168.0902,  -80.8919, -109.5087, -127.3455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1850, device='cuda:0', dtype=torch.float64)
tensor([-112.1932, -168.5422,  -81.0023, -109.7755, -127.5815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1793, device='cuda:0', dtype=torch.float64)
tensor([-112.2792, -168.9149,  -81.1027, -109.9517, -127.7612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1899, device='cuda:0', dtype=torch.float64)
tensor([-112.3986, -169.3223,  -81.2138, -110.1647, -127.9743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1640, device='cuda:0', dtype=torch.float64)
tensor([-112.4761, -169.6466,  -81.2914, -110.3090, -128.1404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1825, device='cuda:0', dtype=torch.float64)
tensor([-112.5276, -169.9013,  -81.3458, -110.4306, -128.2845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1917, device='cuda:0', dtype=torch.float64)
tensor([-112.5986, -170.1364,  -81.3870, -110.5264, -128.3771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1854, device='cuda:0', dtype=torch.float64)
tensor([-112.7176, -170.3377,  -81.4552, -110.6843, -128.5172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1763, device='cuda:0', dtype=torch.float64)
tensor([-112.8371, -170.4922,  -81.5166, -110.8620, -128.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1751, device='cuda:0', dtype=torch.float64)
tensor([-112.9774, -170.6402,  -81.5703, -111.0689, -128.8625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2057, device='cuda:0', dtype=torch.float64)
tensor([-113.1324, -170.8484,  -81.6490, -111.3405, -129.1161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1875, device='cuda:0', dtype=torch.float64)
tensor([-113.2954, -171.0714,  -81.7115, -111.6591, -129.3913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1875, device='cuda:0', dtype=torch.float64)
tensor([-113.4761, -171.2923,  -81.7822, -112.0238, -129.6774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2256, device='cuda:0', dtype=torch.float64)
tensor([-113.6368, -171.3732,  -81.8280, -112.3533, -129.9294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1714, device='cuda:0', dtype=torch.float64)
tensor([-113.8001, -171.5334,  -81.8765, -112.6484, -130.1533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1959, device='cuda:0', dtype=torch.float64)
tensor([-113.9922, -171.6838,  -81.9362, -112.9498, -130.4016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1968, device='cuda:0', dtype=torch.float64)
tensor([-114.2073, -171.8324,  -82.0173, -113.2292, -130.6524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1557, device='cuda:0', dtype=torch.float64)
tensor([-114.3859, -171.9441,  -82.0883, -113.4580, -130.8729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1680, device='cuda:0', dtype=torch.float64)
tensor([-114.5490, -172.0305,  -82.1561, -113.7468, -131.1391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1617, device='cuda:0', dtype=torch.float64)
tensor([-114.7450, -172.2085,  -82.2475, -114.1102, -131.4496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1629, device='cuda:0', dtype=torch.float64)
tensor([-114.9053, -172.3880,  -82.3177, -114.4330, -131.7303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1972, device='cuda:0', dtype=torch.float64)
tensor([-115.1062, -172.7328,  -82.4155, -114.8133, -132.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1857, device='cuda:0', dtype=torch.float64)
tensor([-115.3297, -173.1058,  -82.5187, -115.1897, -132.4170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1570, device='cuda:0', dtype=torch.float64)
tensor([-115.5375, -173.4579,  -82.6181, -115.5414, -132.7375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1734, device='cuda:0', dtype=torch.float64)
tensor([-115.7479, -173.8186,  -82.7191, -115.8783, -133.0561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1854, device='cuda:0', dtype=torch.float64)
tensor([-115.9775, -174.1237,  -82.8027, -116.2164, -133.3458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1495, device='cuda:0', dtype=torch.float64)
tensor([-116.1384, -174.3319,  -82.8525, -116.4453, -133.5197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1625, device='cuda:0', dtype=torch.float64)
tensor([-116.2378, -174.3496,  -82.8648, -116.5659, -133.6029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1751, device='cuda:0', dtype=torch.float64)
tensor([-116.3279, -174.4067,  -82.8970, -116.7018, -133.6953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1812, device='cuda:0', dtype=torch.float64)
tensor([-116.4266, -174.4213,  -82.9099, -116.8298, -133.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1842, device='cuda:0', dtype=torch.float64)
tensor([-116.5729, -174.6124,  -82.9569, -117.0414, -133.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2130, device='cuda:0', dtype=torch.float64)
tensor([-116.7105, -174.8041,  -83.0102, -117.2458, -134.0545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1726, device='cuda:0', dtype=torch.float64)
tensor([-116.8649, -174.9570,  -83.0636, -117.5096, -134.2219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1612, device='cuda:0', dtype=torch.float64)
tensor([-117.0403, -175.0942,  -83.1456, -117.8504, -134.4412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2046, device='cuda:0', dtype=torch.float64)
tensor([-117.1270, -175.1470,  -83.2102, -118.0788, -134.5734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1762, device='cuda:0', dtype=torch.float64)
tensor([-117.2729, -175.3067,  -83.3039, -118.3119, -134.7197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1670, device='cuda:0', dtype=torch.float64)
tensor([-117.4328, -175.5536,  -83.4106, -118.5064, -134.8375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1887, device='cuda:0', dtype=torch.float64)
tensor([-117.6328, -175.9068,  -83.5596, -118.8244, -135.0481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1745, device='cuda:0', dtype=torch.float64)
tensor([-117.8276, -176.2344,  -83.6985, -119.1107, -135.2486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1581, device='cuda:0', dtype=torch.float64)
tensor([-117.9637, -176.4464,  -83.8022, -119.3313, -135.3827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1833, device='cuda:0', dtype=torch.float64)
tensor([-118.1021, -176.7223,  -83.9292, -119.5461, -135.5141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1644, device='cuda:0', dtype=torch.float64)
tensor([-118.2502, -176.9633,  -84.0603, -119.7638, -135.6529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2024, device='cuda:0', dtype=torch.float64)
tensor([-118.4290, -177.3844,  -84.2273, -120.0891, -135.8677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1835, device='cuda:0', dtype=torch.float64)
tensor([-118.6218, -177.8407,  -84.3879, -120.4161, -136.1046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1605, device='cuda:0', dtype=torch.float64)
tensor([-118.7740, -178.2127,  -84.5317, -120.6473, -136.2929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1770, device='cuda:0', dtype=torch.float64)
tensor([-118.9327, -178.5330,  -84.6691, -120.8725, -136.4805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1543, device='cuda:0', dtype=torch.float64)
tensor([-119.0533, -178.8327,  -84.7721, -121.0880, -136.6516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1978, device='cuda:0', dtype=torch.float64)
tensor([-119.2237, -179.2014,  -84.9034, -121.3424, -136.8692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1887, device='cuda:0', dtype=torch.float64)
tensor([-119.4064, -179.5167,  -85.0366, -121.6056, -137.0874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1524, device='cuda:0', dtype=torch.float64)
tensor([-119.6125, -179.8894,  -85.1898, -121.8609, -137.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1938, device='cuda:0', dtype=torch.float64)
tensor([-119.8398, -180.2079,  -85.3410, -122.1997, -137.5992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1587, device='cuda:0', dtype=torch.float64)
tensor([-120.0507, -180.4772,  -85.4742, -122.4613, -137.8254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1945, device='cuda:0', dtype=torch.float64)
tensor([-120.2217, -180.6535,  -85.6043, -122.7212, -138.0523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1685, device='cuda:0', dtype=torch.float64)
tensor([-120.3482, -180.7421,  -85.6932, -122.9063, -138.2317],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1670, device='cuda:0', dtype=torch.float64)
tensor([-120.4440, -180.8380,  -85.7679, -123.0685, -138.3684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1629, device='cuda:0', dtype=torch.float64)
tensor([-120.5334, -180.8877,  -85.8312, -123.2489, -138.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1711, device='cuda:0', dtype=torch.float64)
tensor([-120.6239, -180.9305,  -85.8809, -123.3718, -138.6054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1576, device='cuda:0', dtype=torch.float64)
tensor([-120.6944, -181.0168,  -85.9460, -123.5334, -138.7340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1650, device='cuda:0', dtype=torch.float64)
tensor([-120.7205, -181.0537,  -86.0131, -123.6347, -138.8227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1607, device='cuda:0', dtype=torch.float64)
tensor([-120.7639, -181.0641,  -86.0791, -123.8023, -138.9711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1676, device='cuda:0', dtype=torch.float64)
tensor([-120.8063, -181.0686,  -86.1361, -123.9471, -139.0865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1897, device='cuda:0', dtype=torch.float64)
tensor([-120.9013, -181.2122,  -86.2414, -124.1954, -139.2806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1339, device='cuda:0', dtype=torch.float64)
tensor([-121.0319, -181.3533,  -86.3507, -124.4748, -139.5241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1553, device='cuda:0', dtype=torch.float64)
tensor([-121.2057, -181.5062,  -86.4772, -124.8148, -139.8224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1702, device='cuda:0', dtype=torch.float64)
tensor([-121.3755, -181.6271,  -86.5896, -125.0927, -140.0726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1556, device='cuda:0', dtype=torch.float64)
tensor([-121.4718, -181.6754,  -86.6837, -125.3069, -140.2816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1579, device='cuda:0', dtype=torch.float64)
tensor([-121.5632, -181.7378,  -86.7708, -125.4478, -140.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1491, device='cuda:0', dtype=torch.float64)
tensor([-121.6487, -181.8120,  -86.8417, -125.6092, -140.6125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1463, device='cuda:0', dtype=torch.float64)
tensor([-121.7352, -181.8848,  -86.9162, -125.8063, -140.7908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1451, device='cuda:0', dtype=torch.float64)
tensor([-121.8189, -181.9931,  -86.9866, -125.9564, -140.9432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1789, device='cuda:0', dtype=torch.float64)
tensor([-121.9434, -182.1387,  -87.0565, -126.1925, -141.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1451, device='cuda:0', dtype=torch.float64)
tensor([-122.0791, -182.2909,  -87.1368, -126.4410, -141.3552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1786, device='cuda:0', dtype=torch.float64)
tensor([-122.2271, -182.4886,  -87.2035, -126.6891, -141.5633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1816, device='cuda:0', dtype=torch.float64)
tensor([-122.4227, -182.7762,  -87.2913, -127.0262, -141.8380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1519, device='cuda:0', dtype=torch.float64)
tensor([-122.6489, -183.1188,  -87.4040, -127.4346, -142.2042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1519, device='cuda:0', dtype=torch.float64)
tensor([-122.8923, -183.5233,  -87.5347, -127.8476, -142.5743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1477, device='cuda:0', dtype=torch.float64)
tensor([-123.1558, -184.0050,  -87.6589, -128.2630, -142.9570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1485, device='cuda:0', dtype=torch.float64)
tensor([-123.4158, -184.4236,  -87.7702, -128.6249, -143.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1523, device='cuda:0', dtype=torch.float64)
tensor([-123.6553, -184.7898,  -87.8869, -128.9601, -143.6613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1594, device='cuda:0', dtype=torch.float64)
tensor([-123.8904, -185.1577,  -88.0160, -129.3337, -144.0274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1513, device='cuda:0', dtype=torch.float64)
tensor([-124.1258, -185.5533,  -88.1414, -129.6958, -144.3912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1715, device='cuda:0', dtype=torch.float64)
tensor([-124.4074, -185.9704,  -88.2936, -130.1065, -144.7796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1382, device='cuda:0', dtype=torch.float64)
tensor([-124.6589, -186.3449,  -88.4217, -130.4858, -145.1268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1634, device='cuda:0', dtype=torch.float64)
tensor([-124.9184, -186.7551,  -88.5607, -130.8741, -145.4904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1547, device='cuda:0', dtype=torch.float64)
tensor([-125.2109, -187.1436,  -88.6992, -131.2451, -145.8563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1657, device='cuda:0', dtype=torch.float64)
tensor([-125.4720, -187.4252,  -88.8339, -131.6180, -146.2235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1406, device='cuda:0', dtype=torch.float64)
tensor([-125.6682, -187.6310,  -88.9383, -131.9092, -146.5156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1503, device='cuda:0', dtype=torch.float64)
tensor([-125.9050, -187.9404,  -89.0709, -132.3120, -146.8876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1732, device='cuda:0', dtype=torch.float64)
tensor([-126.2501, -188.4452,  -89.2566, -132.8047, -147.3728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1751, device='cuda:0', dtype=torch.float64)
tensor([-126.5367, -188.8602,  -89.4375, -133.2413, -147.8072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1647, device='cuda:0', dtype=torch.float64)
tensor([-126.8209, -189.2223,  -89.6320, -133.6885, -148.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1589, device='cuda:0', dtype=torch.float64)
tensor([-127.1058, -189.5802,  -89.8299, -134.1251, -148.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1909, device='cuda:0', dtype=torch.float64)
tensor([-127.4212, -189.9959,  -90.0373, -134.6152, -149.1959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1407, device='cuda:0', dtype=torch.float64)
tensor([-127.7855, -190.3951,  -90.2481, -135.1312, -149.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1372, device='cuda:0', dtype=torch.float64)
tensor([-128.1419, -190.7916,  -90.4617, -135.6137, -150.1197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1552, device='cuda:0', dtype=torch.float64)
tensor([-128.4219, -191.0904,  -90.6387, -136.0486, -150.4992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1403, device='cuda:0', dtype=torch.float64)
tensor([-128.6769, -191.3786,  -90.8095, -136.4966, -150.8820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([-128.8965, -191.6492,  -90.9720, -136.9491, -151.2449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1699, device='cuda:0', dtype=torch.float64)
tensor([-129.1116, -192.0353,  -91.1531, -137.3440, -151.5950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1648, device='cuda:0', dtype=torch.float64)
tensor([-129.2796, -192.3682,  -91.3094, -137.6792, -151.8847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1425, device='cuda:0', dtype=torch.float64)
tensor([-129.4080, -192.5923,  -91.4288, -137.9237, -152.0902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1547, device='cuda:0', dtype=torch.float64)
tensor([-129.5179, -192.6428,  -91.5441, -138.2151, -152.3075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1654, device='cuda:0', dtype=torch.float64)
tensor([-129.6547, -192.7774,  -91.6722, -138.5033, -152.5346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1331, device='cuda:0', dtype=torch.float64)
tensor([-129.7722, -192.8972,  -91.7985, -138.6993, -152.6792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1567, device='cuda:0', dtype=torch.float64)
tensor([-129.8985, -192.9157,  -91.9146, -138.8846, -152.8012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-130.0470, -192.9912,  -92.0448, -139.1343, -152.9842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-130.1950, -193.0974,  -92.1735, -139.3690, -153.1599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1363, device='cuda:0', dtype=torch.float64)
tensor([-130.3458, -193.2197,  -92.3093, -139.6187, -153.3545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1405, device='cuda:0', dtype=torch.float64)
tensor([-130.4931, -193.3938,  -92.4467, -139.8471, -153.5393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1654, device='cuda:0', dtype=torch.float64)
tensor([-130.6903, -193.6476,  -92.6210, -140.1787, -153.8179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1318, device='cuda:0', dtype=torch.float64)
tensor([-130.9051, -194.0060,  -92.7976, -140.5318, -154.1221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1364, device='cuda:0', dtype=torch.float64)
tensor([-131.0734, -194.2377,  -92.9032, -140.7880, -154.3207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1475, device='cuda:0', dtype=torch.float64)
tensor([-131.2227, -194.4017,  -92.9967, -141.0553, -154.5127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1388, device='cuda:0', dtype=torch.float64)
tensor([-131.3613, -194.5716,  -93.1132, -141.2830, -154.6952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1492, device='cuda:0', dtype=torch.float64)
tensor([-131.4939, -194.7593,  -93.2458, -141.6122, -154.9444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1309, device='cuda:0', dtype=torch.float64)
tensor([-131.5898, -194.9144,  -93.3790, -141.9064, -155.1736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1392, device='cuda:0', dtype=torch.float64)
tensor([-131.6445, -194.9788,  -93.4907, -142.1276, -155.3494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1367, device='cuda:0', dtype=torch.float64)
tensor([-131.7116, -195.1339,  -93.6382, -142.3871, -155.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1219, device='cuda:0', dtype=torch.float64)
tensor([-131.7808, -195.3331,  -93.7785, -142.5903, -155.7139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1373, device='cuda:0', dtype=torch.float64)
tensor([-131.8066, -195.5041,  -93.8851, -142.6875, -155.7940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1520, device='cuda:0', dtype=torch.float64)
tensor([-131.8458, -195.7391,  -93.9813, -142.8498, -155.9255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1319, device='cuda:0', dtype=torch.float64)
tensor([-131.8697, -195.9417,  -94.0728, -142.9544, -156.0090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1195, device='cuda:0', dtype=torch.float64)
tensor([-131.8711, -196.1135,  -94.1486, -143.0427, -156.0784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1333, device='cuda:0', dtype=torch.float64)
tensor([-131.8598, -196.2364,  -94.2197, -143.0576, -156.1032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1593, device='cuda:0', dtype=torch.float64)
tensor([-131.8460, -196.3094,  -94.2662, -143.0514, -156.0970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1603, device='cuda:0', dtype=torch.float64)
tensor([-131.8453, -196.4171,  -94.3497, -143.0750, -156.1230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1579, device='cuda:0', dtype=torch.float64)
tensor([-131.8475, -196.6084,  -94.4512, -143.1097, -156.1815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1531, device='cuda:0', dtype=torch.float64)
tensor([-131.8682, -196.7777,  -94.5663, -143.1262, -156.2452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1479, device='cuda:0', dtype=torch.float64)
tensor([-131.9744, -197.0372,  -94.7496, -143.2995, -156.4184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1443, device='cuda:0', dtype=torch.float64)
tensor([-132.0932, -197.3103,  -94.9274, -143.4912, -156.6154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1272, device='cuda:0', dtype=torch.float64)
tensor([-132.2195, -197.5815,  -95.1031, -143.6783, -156.8130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1255, device='cuda:0', dtype=torch.float64)
tensor([-132.3420, -197.9012,  -95.2672, -143.8734, -157.0049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1503, device='cuda:0', dtype=torch.float64)
tensor([-132.4828, -198.2276,  -95.4289, -144.0936, -157.2241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1316, device='cuda:0', dtype=torch.float64)
tensor([-132.5876, -198.5524,  -95.5941, -144.2590, -157.4103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1393, device='cuda:0', dtype=torch.float64)
tensor([-132.6584, -198.8577,  -95.7439, -144.4249, -157.5908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1335, device='cuda:0', dtype=torch.float64)
tensor([-132.7072, -199.0607,  -95.8442, -144.5865, -157.7374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1555, device='cuda:0', dtype=torch.float64)
tensor([-132.7676, -199.1759,  -95.9486, -144.8060, -157.9586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1380, device='cuda:0', dtype=torch.float64)
tensor([-132.8730, -199.3660,  -96.0617, -145.1048, -158.2321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1301, device='cuda:0', dtype=torch.float64)
tensor([-132.9680, -199.5308,  -96.1735, -145.3893, -158.5119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1350, device='cuda:0', dtype=torch.float64)
tensor([-133.0945, -199.7349,  -96.3056, -145.7438, -158.8787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1216, device='cuda:0', dtype=torch.float64)
tensor([-133.2352, -199.9503,  -96.4384, -146.0898, -159.2276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1340, device='cuda:0', dtype=torch.float64)
tensor([-133.3990, -200.0691,  -96.5345, -146.4343, -159.5643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1313, device='cuda:0', dtype=torch.float64)
tensor([-133.5954, -200.3057,  -96.6504, -146.8039, -159.9174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1290, device='cuda:0', dtype=torch.float64)
tensor([-133.8510, -200.6437,  -96.8058, -147.1733, -160.2886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1348, device='cuda:0', dtype=torch.float64)
tensor([-134.0839, -200.9419,  -96.9295, -147.5019, -160.6159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1151, device='cuda:0', dtype=torch.float64)
tensor([-134.2951, -201.2544,  -97.0383, -147.8290, -160.9332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-134.4782, -201.5004,  -97.1367, -148.1130, -161.2054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1357, device='cuda:0', dtype=torch.float64)
tensor([-134.6405, -201.8382,  -97.2316, -148.3273, -161.4406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1262, device='cuda:0', dtype=torch.float64)
tensor([-134.7728, -202.1527,  -97.3204, -148.5104, -161.6432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1376, device='cuda:0', dtype=torch.float64)
tensor([-134.8796, -202.4372,  -97.3911, -148.6428, -161.8076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1320, device='cuda:0', dtype=torch.float64)
tensor([-134.9925, -202.6978,  -97.4720, -148.7955, -161.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1368, device='cuda:0', dtype=torch.float64)
tensor([-135.1121, -202.9651,  -97.5841, -148.9852, -162.1875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1186, device='cuda:0', dtype=torch.float64)
tensor([-135.2155, -203.2627,  -97.7079, -149.1908, -162.3923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1323, device='cuda:0', dtype=torch.float64)
tensor([-135.3725, -203.6359,  -97.8558, -149.4671, -162.6405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1339, device='cuda:0', dtype=torch.float64)
tensor([-135.5414, -204.0674,  -98.0189, -149.7960, -162.9157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1262, device='cuda:0', dtype=torch.float64)
tensor([-135.7769, -204.5799,  -98.2311, -150.2358, -163.2646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1175, device='cuda:0', dtype=torch.float64)
tensor([-135.9983, -205.0428,  -98.4431, -150.7186, -163.6329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1172, device='cuda:0', dtype=torch.float64)
tensor([-136.1642, -205.4182,  -98.6223, -151.1001, -163.9201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1157, device='cuda:0', dtype=torch.float64)
tensor([-136.3113, -205.7720,  -98.7830, -151.4527, -164.1936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([-136.4368, -206.0122,  -98.9128, -151.7677, -164.4426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1284, device='cuda:0', dtype=torch.float64)
tensor([-136.5559, -206.2508,  -99.0170, -152.0228, -164.6548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1527, device='cuda:0', dtype=torch.float64)
tensor([-136.7141, -206.5821,  -99.1591, -152.3546, -164.9313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1357, device='cuda:0', dtype=torch.float64)
tensor([-136.8894, -206.9092,  -99.3251, -152.7664, -165.2313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1405, device='cuda:0', dtype=torch.float64)
tensor([-137.1152, -207.2795,  -99.5210, -153.2677, -165.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1411, device='cuda:0', dtype=torch.float64)
tensor([-137.3558, -207.6892,  -99.7310, -153.7658, -165.9881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1248, device='cuda:0', dtype=torch.float64)
tensor([-137.6296, -208.1372,  -99.9538, -154.2150, -166.3472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1174, device='cuda:0', dtype=torch.float64)
tensor([-137.8885, -208.4987, -100.1699, -154.6274, -166.6840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1431, device='cuda:0', dtype=torch.float64)
tensor([-138.1533, -208.8997, -100.3854, -155.0209, -167.0044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-138.4054, -209.2990, -100.6053, -155.4133, -167.3115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1393, device='cuda:0', dtype=torch.float64)
tensor([-138.6350, -209.6620, -100.8165, -155.7984, -167.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1214, device='cuda:0', dtype=torch.float64)
tensor([-138.8268, -209.9230, -101.0161, -156.1604, -167.9162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1099, device='cuda:0', dtype=torch.float64)
tensor([-138.9748, -210.1954, -101.2019, -156.4993, -168.1857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1134, device='cuda:0', dtype=torch.float64)
tensor([-139.1010, -210.4999, -101.3999, -156.8437, -168.4696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1297, device='cuda:0', dtype=torch.float64)
tensor([-139.2195, -210.7671, -101.6138, -157.2473, -168.8125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1263, device='cuda:0', dtype=torch.float64)
tensor([-139.3134, -210.9365, -101.7908, -157.6232, -169.1306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1356, device='cuda:0', dtype=torch.float64)
tensor([-139.4009, -211.1604, -101.9737, -158.0290, -169.4671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1160, device='cuda:0', dtype=torch.float64)
tensor([-139.4650, -211.3193, -102.1152, -158.4135, -169.7824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1152, device='cuda:0', dtype=torch.float64)
tensor([-139.5072, -211.5063, -102.2602, -158.7524, -170.0519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-139.5387, -211.6482, -102.3771, -159.0489, -170.2995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1046, device='cuda:0', dtype=torch.float64)
tensor([-139.5871, -211.8128, -102.5200, -159.3720, -170.5651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1175, device='cuda:0', dtype=torch.float64)
tensor([-139.5898, -211.9073, -102.6172, -159.5977, -170.7539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1046, device='cuda:0', dtype=torch.float64)
tensor([-139.6014, -211.9426, -102.7136, -159.8112, -170.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1120, device='cuda:0', dtype=torch.float64)
tensor([-139.6011, -211.9518, -102.7977, -159.9651, -171.0833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1247, device='cuda:0', dtype=torch.float64)
tensor([-139.6121, -211.9270, -102.8901, -160.1304, -171.2286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1076, device='cuda:0', dtype=torch.float64)
tensor([-139.6102, -211.8767, -102.9719, -160.2363, -171.3353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1197, device='cuda:0', dtype=torch.float64)
tensor([-139.5989, -211.7497, -103.0230, -160.3430, -171.4368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1133, device='cuda:0', dtype=torch.float64)
tensor([-139.5409, -211.5537, -103.0012, -160.3766, -171.4680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1346, device='cuda:0', dtype=torch.float64)
tensor([-139.4628, -211.4424, -102.9664, -160.3124, -171.4467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1168, device='cuda:0', dtype=torch.float64)
tensor([-139.3941, -211.4096, -102.9498, -160.2810, -171.4204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1023, device='cuda:0', dtype=torch.float64)
tensor([-139.2998, -211.3939, -102.9078, -160.1688, -171.3244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1306, device='cuda:0', dtype=torch.float64)
tensor([-139.1687, -211.2950, -102.8275, -160.0373, -171.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1147, device='cuda:0', dtype=torch.float64)
tensor([-139.0830, -211.1880, -102.8061, -160.0254, -171.1695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1286, device='cuda:0', dtype=torch.float64)
tensor([-139.0187, -211.1503, -102.7889, -160.0455, -171.1319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-138.9511, -211.1036, -102.7876, -160.0742, -171.1149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1370, device='cuda:0', dtype=torch.float64)
tensor([-138.8553, -211.0320, -102.7668, -160.0843, -171.1011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1199, device='cuda:0', dtype=torch.float64)
tensor([-138.7833, -210.9834, -102.7422, -160.0357, -171.0548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1181, device='cuda:0', dtype=torch.float64)
tensor([-138.7434, -210.9570, -102.7226, -159.9630, -171.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1091, device='cuda:0', dtype=torch.float64)
tensor([-138.6797, -210.9102, -102.6871, -159.8788, -170.9533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1160, device='cuda:0', dtype=torch.float64)
tensor([-138.6235, -210.8435, -102.6389, -159.7957, -170.8981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-138.5580, -210.7902, -102.5730, -159.6742, -170.8293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1182, device='cuda:0', dtype=torch.float64)
tensor([-138.5097, -210.8573, -102.5783, -159.6510, -170.8460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1315, device='cuda:0', dtype=torch.float64)
tensor([-138.4631, -210.9937, -102.5876, -159.6264, -170.8400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([-138.4557, -211.1805, -102.6185, -159.6583, -170.8664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1135, device='cuda:0', dtype=torch.float64)
tensor([-138.4700, -211.4203, -102.6568, -159.6836, -170.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1269, device='cuda:0', dtype=torch.float64)
tensor([-138.5337, -211.6566, -102.7342, -159.7910, -171.0215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1032, device='cuda:0', dtype=torch.float64)
tensor([-138.5985, -211.8450, -102.8038, -159.9083, -171.1370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1182, device='cuda:0', dtype=torch.float64)
tensor([-138.6631, -212.0794, -102.8988, -160.0303, -171.2649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1048, device='cuda:0', dtype=torch.float64)
tensor([-138.7231, -212.2723, -102.9770, -160.1174, -171.3653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1252, device='cuda:0', dtype=torch.float64)
tensor([-138.7912, -212.5026, -103.0731, -160.2051, -171.4610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1236, device='cuda:0', dtype=torch.float64)
tensor([-138.8575, -212.7409, -103.1753, -160.3357, -171.5872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1308, device='cuda:0', dtype=torch.float64)
tensor([-138.9775, -213.0113, -103.3017, -160.5717, -171.7521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1173, device='cuda:0', dtype=torch.float64)
tensor([-139.1103, -213.2868, -103.4339, -160.7647, -171.9081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1132, device='cuda:0', dtype=torch.float64)
tensor([-139.2174, -213.5285, -103.5546, -160.9456, -172.0379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1162, device='cuda:0', dtype=torch.float64)
tensor([-139.3406, -213.7674, -103.6959, -161.1614, -172.1954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1165, device='cuda:0', dtype=torch.float64)
tensor([-139.4696, -213.9754, -103.8397, -161.3447, -172.3227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1085, device='cuda:0', dtype=torch.float64)
tensor([-139.5887, -214.1217, -103.9777, -161.5330, -172.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-139.6771, -214.2310, -104.1039, -161.6232, -172.5510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1462, device='cuda:0', dtype=torch.float64)
tensor([-139.7790, -214.3317, -104.2208, -161.6739, -172.6464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1403, device='cuda:0', dtype=torch.float64)
tensor([-139.8959, -214.4001, -104.3353, -161.7685, -172.7539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([-140.0230, -214.4464, -104.4549, -161.8533, -172.8703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1175, device='cuda:0', dtype=torch.float64)
tensor([-140.1165, -214.4198, -104.5267, -161.8760, -172.9503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1154, device='cuda:0', dtype=torch.float64)
tensor([-140.1871, -214.4025, -104.5865, -161.8435, -172.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1018, device='cuda:0', dtype=torch.float64)
tensor([-140.3020, -214.4504, -104.6870, -161.8653, -173.0927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1089, device='cuda:0', dtype=torch.float64)
tensor([-140.4153, -214.5485, -104.7787, -161.8632, -173.1774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-140.5211, -214.6454, -104.8713, -161.8345, -173.2454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1081, device='cuda:0', dtype=torch.float64)
tensor([-140.5948, -214.6766, -104.9339, -161.8405, -173.3284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1079, device='cuda:0', dtype=torch.float64)
tensor([-140.6957, -214.7508, -105.0199, -161.8823, -173.4268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0971, device='cuda:0', dtype=torch.float64)
tensor([-140.7539, -214.7413, -105.0781, -161.8395, -173.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1121, device='cuda:0', dtype=torch.float64)
tensor([-140.8491, -214.7174, -105.1631, -161.9266, -173.5976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1108, device='cuda:0', dtype=torch.float64)
tensor([-140.9767, -214.7154, -105.2775, -162.0598, -173.7562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-141.0738, -214.7194, -105.4022, -162.1814, -173.9126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-141.1456, -214.6532, -105.4859, -162.2863, -174.0416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1220, device='cuda:0', dtype=torch.float64)
tensor([-141.2069, -214.5465, -105.5974, -162.3978, -174.1716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1089, device='cuda:0', dtype=torch.float64)
tensor([-141.2695, -214.4240, -105.7052, -162.5112, -174.3109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1208, device='cuda:0', dtype=torch.float64)
tensor([-141.3061, -214.2436, -105.7848, -162.5462, -174.3893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1076, device='cuda:0', dtype=torch.float64)
tensor([-141.3362, -214.0865, -105.8829, -162.5556, -174.4529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1119, device='cuda:0', dtype=torch.float64)
tensor([-141.3824, -214.0204, -105.9783, -162.5237, -174.4787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1076, device='cuda:0', dtype=torch.float64)
tensor([-141.4149, -213.8819, -106.0567, -162.5086, -174.5035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1160, device='cuda:0', dtype=torch.float64)
tensor([-141.5117, -213.8089, -106.1953, -162.6388, -174.6038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1313, device='cuda:0', dtype=torch.float64)
tensor([-141.6400, -213.8517, -106.3444, -162.7349, -174.7074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1139, device='cuda:0', dtype=torch.float64)
tensor([-141.7974, -213.9286, -106.5179, -162.9071, -174.8601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1272, device='cuda:0', dtype=torch.float64)
tensor([-141.9789, -214.0208, -106.7091, -163.1228, -175.0461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1035, device='cuda:0', dtype=torch.float64)
tensor([-142.1322, -213.9602, -106.8829, -163.3078, -175.2108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0891, device='cuda:0', dtype=torch.float64)
tensor([-142.2864, -213.8509, -107.0491, -163.5131, -175.3842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1118, device='cuda:0', dtype=torch.float64)
tensor([-142.4570, -213.7634, -107.2308, -163.7525, -175.5735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1014, device='cuda:0', dtype=torch.float64)
tensor([-142.6157, -213.6644, -107.4113, -164.0260, -175.7896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-142.7466, -213.6194, -107.5736, -164.1874, -175.9368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1070, device='cuda:0', dtype=torch.float64)
tensor([-142.8871, -213.5566, -107.7203, -164.3236, -176.0692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1152, device='cuda:0', dtype=torch.float64)
tensor([-143.0314, -213.5110, -107.9151, -164.5046, -176.2179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-143.1766, -213.4476, -108.0969, -164.7116, -176.3762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0903, device='cuda:0', dtype=torch.float64)
tensor([-143.3020, -213.3566, -108.2450, -164.8357, -176.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1008, device='cuda:0', dtype=torch.float64)
tensor([-143.4075, -213.3467, -108.3941, -164.9729, -176.5816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-143.4961, -213.3868, -108.5346, -165.0606, -176.6832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1034, device='cuda:0', dtype=torch.float64)
tensor([-143.5537, -213.4321, -108.6447, -165.1163, -176.7399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1033, device='cuda:0', dtype=torch.float64)
tensor([-143.6125, -213.5053, -108.7432, -165.1947, -176.7940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0966, device='cuda:0', dtype=torch.float64)
tensor([-143.6702, -213.5959, -108.8428, -165.2792, -176.8629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-143.7598, -213.7889, -108.9733, -165.4243, -176.9794],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1046, device='cuda:0', dtype=torch.float64)
tensor([-143.8371, -213.9803, -109.0844, -165.4761, -177.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0910, device='cuda:0', dtype=torch.float64)
tensor([-143.8987, -214.1225, -109.1842, -165.5187, -177.1111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1107, device='cuda:0', dtype=torch.float64)
tensor([-143.9020, -214.2474, -109.2492, -165.4970, -177.1327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1228, device='cuda:0', dtype=torch.float64)
tensor([-143.8602, -214.3052, -109.2620, -165.3500, -177.0798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1002, device='cuda:0', dtype=torch.float64)
tensor([-143.8027, -214.4063, -109.2897, -165.1930, -177.0208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-143.7468, -214.5434, -109.3333, -165.0439, -176.9700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0892, device='cuda:0', dtype=torch.float64)
tensor([-143.7141, -214.6638, -109.3858, -164.9488, -176.9528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-143.6935, -214.8021, -109.4632, -164.8842, -176.9548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1054, device='cuda:0', dtype=torch.float64)
tensor([-143.7103, -214.9583, -109.5649, -164.8761, -176.9773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0833, device='cuda:0', dtype=torch.float64)
tensor([-143.7386, -215.1292, -109.6700, -164.9107, -177.0267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1052, device='cuda:0', dtype=torch.float64)
tensor([-143.7504, -215.2352, -109.7171, -164.8784, -177.0280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1073, device='cuda:0', dtype=torch.float64)
tensor([-143.7480, -215.2894, -109.7464, -164.7841, -176.9901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1123, device='cuda:0', dtype=torch.float64)
tensor([-143.8143, -215.3887, -109.8504, -164.9027, -177.0913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0907, device='cuda:0', dtype=torch.float64)
tensor([-143.8666, -215.5014, -109.9587, -165.0220, -177.1996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0948, device='cuda:0', dtype=torch.float64)
tensor([-143.9069, -215.6260, -110.0563, -165.1244, -177.2995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0984, device='cuda:0', dtype=torch.float64)
tensor([-143.9437, -215.7451, -110.1676, -165.2943, -177.4400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0951, device='cuda:0', dtype=torch.float64)
tensor([-144.0010, -215.8565, -110.2903, -165.4808, -177.5920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1011, device='cuda:0', dtype=torch.float64)
tensor([-144.0802, -215.9318, -110.4259, -165.6795, -177.7603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-144.1353, -215.9261, -110.5331, -165.8798, -177.9105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1042, device='cuda:0', dtype=torch.float64)
tensor([-144.2146, -216.0217, -110.7071, -166.1541, -178.1270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0924, device='cuda:0', dtype=torch.float64)
tensor([-144.2613, -216.0943, -110.8418, -166.3854, -178.3125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-144.3169, -216.2184, -110.9820, -166.6071, -178.5030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0967, device='cuda:0', dtype=torch.float64)
tensor([-144.3734, -216.2882, -111.0833, -166.7883, -178.6557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0868, device='cuda:0', dtype=torch.float64)
tensor([-144.4185, -216.3612, -111.1753, -166.9178, -178.7694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-144.4641, -216.4484, -111.2732, -167.0303, -178.8832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0990, device='cuda:0', dtype=torch.float64)
tensor([-144.4915, -216.5976, -111.3464, -167.0167, -178.9361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0833, device='cuda:0', dtype=torch.float64)
tensor([-144.5054, -216.7531, -111.3911, -166.9206, -178.9268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-144.5303, -216.9274, -111.4441, -166.8649, -178.9434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0948, device='cuda:0', dtype=torch.float64)
tensor([-144.5692, -217.1169, -111.5056, -166.8720, -178.9848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-144.6302, -217.3074, -111.5873, -166.9139, -179.0487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1301, device='cuda:0', dtype=torch.float64)
tensor([-144.6875, -217.4668, -111.6817, -166.9817, -179.1150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1105, device='cuda:0', dtype=torch.float64)
tensor([-144.7550, -217.6269, -111.7915, -167.0601, -179.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0949, device='cuda:0', dtype=torch.float64)
tensor([-144.8638, -217.7906, -111.9459, -167.2502, -179.3698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1030, device='cuda:0', dtype=torch.float64)
tensor([-144.9355, -217.9420, -112.0783, -167.3671, -179.4911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0923, device='cuda:0', dtype=torch.float64)
tensor([-144.9882, -218.0225, -112.1943, -167.4656, -179.5726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1023, device='cuda:0', dtype=torch.float64)
tensor([-145.0690, -218.1306, -112.3252, -167.6238, -179.6897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-145.1880, -218.2712, -112.4580, -167.8135, -179.8290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0893, device='cuda:0', dtype=torch.float64)
tensor([-145.2670, -218.3316, -112.5592, -167.9413, -179.9140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-145.3297, -218.3698, -112.6560, -168.0319, -179.9805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0921, device='cuda:0', dtype=torch.float64)
tensor([-145.4178, -218.4359, -112.7905, -168.1986, -180.1027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-145.5099, -218.4756, -112.8872, -168.3953, -180.2113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0941, device='cuda:0', dtype=torch.float64)
tensor([-145.6090, -218.5044, -113.0188, -168.6661, -180.3754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1022, device='cuda:0', dtype=torch.float64)
tensor([-145.6534, -218.4557, -113.0905, -168.8348, -180.4615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0926, device='cuda:0', dtype=torch.float64)
tensor([-145.6723, -218.3686, -113.1403, -168.9661, -180.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0965, device='cuda:0', dtype=torch.float64)
tensor([-145.6659, -218.2407, -113.1681, -169.0620, -180.5141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0904, device='cuda:0', dtype=torch.float64)
tensor([-145.6647, -218.1104, -113.2141, -169.1966, -180.5451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1160, device='cuda:0', dtype=torch.float64)
tensor([-145.7209, -218.0488, -113.3211, -169.4592, -180.6424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-145.7744, -218.0140, -113.4408, -169.6951, -180.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-145.8231, -217.9931, -113.5541, -169.9384, -180.8552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-145.8945, -218.0136, -113.6811, -170.1982, -180.9808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0977, device='cuda:0', dtype=torch.float64)
tensor([-145.9896, -217.9890, -113.8401, -170.4907, -181.1474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0806, device='cuda:0', dtype=torch.float64)
tensor([-146.1008, -217.9741, -114.0197, -170.7980, -181.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0777, device='cuda:0', dtype=torch.float64)
tensor([-146.2335, -218.0223, -114.2210, -171.1646, -181.5302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-146.3822, -218.1520, -114.4576, -171.5547, -181.7436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0791, device='cuda:0', dtype=torch.float64)
tensor([-146.5340, -218.3364, -114.7101, -171.9875, -181.9998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0890, device='cuda:0', dtype=torch.float64)
tensor([-146.6382, -218.5040, -114.9093, -172.3214, -182.2072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0802, device='cuda:0', dtype=torch.float64)
tensor([-146.7332, -218.6758, -115.0945, -172.6035, -182.3721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0848, device='cuda:0', dtype=torch.float64)
tensor([-146.8147, -218.8778, -115.2822, -172.8726, -182.5284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0964, device='cuda:0', dtype=torch.float64)
tensor([-146.8994, -219.0963, -115.4674, -173.1191, -182.6814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0815, device='cuda:0', dtype=torch.float64)
tensor([-147.0118, -219.3577, -115.6657, -173.4076, -182.8588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0894, device='cuda:0', dtype=torch.float64)
tensor([-147.0751, -219.5923, -115.8161, -173.6213, -182.9985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0830, device='cuda:0', dtype=torch.float64)
tensor([-147.1362, -219.8243, -115.9933, -173.8258, -183.1472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0868, device='cuda:0', dtype=torch.float64)
tensor([-147.2132, -220.0621, -116.1982, -174.0797, -183.3175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0770, device='cuda:0', dtype=torch.float64)
tensor([-147.2513, -220.2715, -116.3480, -174.2470, -183.4291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0879, device='cuda:0', dtype=torch.float64)
tensor([-147.3008, -220.4703, -116.5158, -174.4441, -183.5807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-147.3465, -220.7668, -116.6623, -174.5971, -183.6946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0822, device='cuda:0', dtype=torch.float64)
tensor([-147.4063, -221.0790, -116.8264, -174.7912, -183.8221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0870, device='cuda:0', dtype=torch.float64)
tensor([-147.4609, -221.4154, -116.9746, -174.9440, -183.9293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-147.5198, -221.6913, -117.1002, -175.0902, -184.0267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0846, device='cuda:0', dtype=torch.float64)
tensor([-147.5776, -221.9210, -117.2134, -175.2333, -184.1154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0708, device='cuda:0', dtype=torch.float64)
tensor([-147.6204, -222.0771, -117.2877, -175.3312, -184.1697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0851, device='cuda:0', dtype=torch.float64)
tensor([-147.6472, -222.1913, -117.3373, -175.4504, -184.2178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0871, device='cuda:0', dtype=torch.float64)
tensor([-147.7076, -222.3888, -117.4250, -175.6173, -184.3175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0805, device='cuda:0', dtype=torch.float64)
tensor([-147.7580, -222.5869, -117.5114, -175.7326, -184.3848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1011, device='cuda:0', dtype=torch.float64)
tensor([-147.8352, -222.8062, -117.6436, -175.9372, -184.5153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0833, device='cuda:0', dtype=torch.float64)
tensor([-147.9260, -222.9751, -117.7722, -176.1172, -184.6236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-147.9686, -223.0350, -117.8039, -176.1691, -184.6384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0962, device='cuda:0', dtype=torch.float64)
tensor([-148.0145, -223.0808, -117.8605, -176.1990, -184.6527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-148.0408, -223.1245, -117.8866, -176.2036, -184.6463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0915, device='cuda:0', dtype=torch.float64)
tensor([-148.0533, -223.0719, -117.8804, -176.1745, -184.6178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-148.0585, -223.0146, -117.8851, -176.1459, -184.5876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0808, device='cuda:0', dtype=torch.float64)
tensor([-148.0750, -222.9688, -117.9044, -176.1577, -184.5852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0916, device='cuda:0', dtype=torch.float64)
tensor([-148.1148, -223.0080, -117.9512, -176.2399, -184.6308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1024, device='cuda:0', dtype=torch.float64)
tensor([-148.1492, -222.9826, -118.0041, -176.3365, -184.6874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-148.1534, -222.8826, -118.0258, -176.3686, -184.6986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0782, device='cuda:0', dtype=torch.float64)
tensor([-148.1382, -222.7283, -118.0243, -176.3886, -184.7079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0918, device='cuda:0', dtype=torch.float64)
tensor([-148.1266, -222.6098, -118.0255, -176.3987, -184.7246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0793, device='cuda:0', dtype=torch.float64)
tensor([-148.0894, -222.4364, -118.0218, -176.4199, -184.7350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0770, device='cuda:0', dtype=torch.float64)
tensor([-148.0394, -222.2330, -117.9826, -176.3991, -184.6947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0895, device='cuda:0', dtype=torch.float64)
tensor([-148.0368, -222.1109, -117.9829, -176.4516, -184.7039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0867, device='cuda:0', dtype=torch.float64)
tensor([-148.0438, -222.0057, -117.9879, -176.5178, -184.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-148.0838, -221.9257, -118.0147, -176.6431, -184.7754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0789, device='cuda:0', dtype=torch.float64)
tensor([-148.1241, -221.8149, -118.0494, -176.7838, -184.8550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0905, device='cuda:0', dtype=torch.float64)
tensor([-148.1658, -221.6810, -118.0566, -176.8547, -184.8877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0837, device='cuda:0', dtype=torch.float64)
tensor([-148.2200, -221.5388, -118.0960, -176.8840, -184.9097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-148.2214, -221.3603, -118.0918, -176.8294, -184.8680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-148.2515, -221.2613, -118.1357, -176.8127, -184.8565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-148.2810, -221.1852, -118.1750, -176.8122, -184.8524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0970, device='cuda:0', dtype=torch.float64)
tensor([-148.2820, -221.0673, -118.2210, -176.7890, -184.8384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0814, device='cuda:0', dtype=torch.float64)
tensor([-148.3276, -221.0346, -118.3056, -176.8334, -184.8736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0844, device='cuda:0', dtype=torch.float64)
tensor([-148.3831, -221.0245, -118.3717, -176.8953, -184.8917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-148.4347, -221.0708, -118.4512, -176.9559, -184.9169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0779, device='cuda:0', dtype=torch.float64)
tensor([-148.4967, -221.1780, -118.5458, -177.0488, -184.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-148.5566, -221.3002, -118.6694, -177.1949, -185.0421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0948, device='cuda:0', dtype=torch.float64)
tensor([-148.6520, -221.3771, -118.8406, -177.4205, -185.1575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0667, device='cuda:0', dtype=torch.float64)
tensor([-148.7348, -221.4439, -118.9961, -177.6072, -185.2393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-148.8199, -221.4807, -119.1593, -177.8113, -185.3348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-148.8924, -221.5285, -119.2879, -177.9428, -185.3886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0765, device='cuda:0', dtype=torch.float64)
tensor([-148.9621, -221.5368, -119.4039, -178.0852, -185.4351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-149.0423, -221.5613, -119.5464, -178.2286, -185.5008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-149.0593, -221.5613, -119.6094, -178.2298, -185.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0733, device='cuda:0', dtype=torch.float64)
tensor([-149.0786, -221.6246, -119.6818, -178.2664, -185.4630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-149.0967, -221.7032, -119.7479, -178.2644, -185.4296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-149.1046, -221.7669, -119.8064, -178.2583, -185.3990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-149.1138, -221.8412, -119.8761, -178.2472, -185.3772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0801, device='cuda:0', dtype=torch.float64)
tensor([-149.1170, -221.9024, -119.9423, -178.2488, -185.3745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0700, device='cuda:0', dtype=torch.float64)
tensor([-149.1204, -221.9428, -120.0125, -178.2511, -185.3789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0886, device='cuda:0', dtype=torch.float64)
tensor([-149.1417, -222.0252, -120.0993, -178.2951, -185.4149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0700, device='cuda:0', dtype=torch.float64)
tensor([-149.1430, -222.0818, -120.1573, -178.3068, -185.4215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0906, device='cuda:0', dtype=torch.float64)
tensor([-149.1474, -222.1605, -120.2219, -178.3611, -185.4532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0792, device='cuda:0', dtype=torch.float64)
tensor([-149.1483, -222.2182, -120.2657, -178.3861, -185.4735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0790, device='cuda:0', dtype=torch.float64)
tensor([-149.1464, -222.3203, -120.3251, -178.3836, -185.4896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0803, device='cuda:0', dtype=torch.float64)
tensor([-149.1470, -222.2904, -120.3590, -178.3830, -185.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0702, device='cuda:0', dtype=torch.float64)
tensor([-149.1405, -222.2299, -120.3553, -178.3211, -185.4852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0728, device='cuda:0', dtype=torch.float64)
tensor([-149.1390, -222.2026, -120.3393, -178.2209, -185.4453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0797, device='cuda:0', dtype=torch.float64)
tensor([-149.1142, -222.1620, -120.2879, -178.0700, -185.3562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-149.1054, -222.1281, -120.2860, -177.9615, -185.3068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0749, device='cuda:0', dtype=torch.float64)
tensor([-149.1190, -222.1036, -120.3248, -177.9155, -185.3053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0790, device='cuda:0', dtype=torch.float64)
tensor([-149.1508, -222.1498, -120.4089, -177.9084, -185.3352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0709, device='cuda:0', dtype=torch.float64)
tensor([-149.1890, -222.1779, -120.5037, -177.9297, -185.3716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0777, device='cuda:0', dtype=torch.float64)
tensor([-149.2162, -222.1737, -120.5950, -177.9724, -185.4148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0671, device='cuda:0', dtype=torch.float64)
tensor([-149.2411, -222.2324, -120.6662, -177.9641, -185.4294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-149.2597, -222.2671, -120.6980, -177.9117, -185.4054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0713, device='cuda:0', dtype=torch.float64)
tensor([-149.3118, -222.3495, -120.7624, -177.9214, -185.4262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0854, device='cuda:0', dtype=torch.float64)
tensor([-149.3229, -222.4083, -120.8142, -177.9060, -185.4398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-149.3304, -222.5025, -120.8594, -177.8465, -185.4343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-149.3623, -222.6416, -120.9294, -177.8343, -185.4664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0698, device='cuda:0', dtype=torch.float64)
tensor([-149.3893, -222.7792, -120.9792, -177.8022, -185.4859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0773, device='cuda:0', dtype=torch.float64)
tensor([-149.4146, -222.8500, -121.0015, -177.7128, -185.4804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0746, device='cuda:0', dtype=torch.float64)
tensor([-149.4602, -222.9380, -121.0521, -177.6562, -185.4950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0720, device='cuda:0', dtype=torch.float64)
tensor([-149.4919, -223.0144, -121.1018, -177.5940, -185.5033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0875, device='cuda:0', dtype=torch.float64)
tensor([-149.5293, -223.0746, -121.1318, -177.5562, -185.5189],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0786, device='cuda:0', dtype=torch.float64)
tensor([-149.5670, -223.1290, -121.1642, -177.5348, -185.5338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0699, device='cuda:0', dtype=torch.float64)
tensor([-149.5909, -223.1855, -121.2200, -177.5299, -185.5709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-149.6144, -223.2359, -121.2734, -177.4914, -185.5799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0679, device='cuda:0', dtype=torch.float64)
tensor([-149.6277, -223.2762, -121.3072, -177.4034, -185.5641],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0917, device='cuda:0', dtype=torch.float64)
tensor([-149.6381, -223.2532, -121.3233, -177.3192, -185.5373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-149.6365, -223.2725, -121.3226, -177.2214, -185.4997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-149.6473, -223.3323, -121.3571, -177.1595, -185.4815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-149.6736, -223.4392, -121.4125, -177.1406, -185.5040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-149.6861, -223.5027, -121.4663, -177.0943, -185.5190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-149.6956, -223.5142, -121.4966, -176.9862, -185.4925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-149.6847, -223.5289, -121.4988, -176.8302, -185.4366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-149.6707, -223.4628, -121.4970, -176.6962, -185.3969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0861, device='cuda:0', dtype=torch.float64)
tensor([-149.6521, -223.3719, -121.4773, -176.5094, -185.3219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-149.6255, -223.2451, -121.4467, -176.3372, -185.2434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0761, device='cuda:0', dtype=torch.float64)
tensor([-149.6114, -223.1326, -121.4555, -176.1861, -185.1816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-149.5899, -223.0553, -121.4687, -176.0544, -185.1332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0788, device='cuda:0', dtype=torch.float64)
tensor([-149.5864, -222.9776, -121.5092, -175.9602, -185.1041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0658, device='cuda:0', dtype=torch.float64)
tensor([-149.5910, -222.9682, -121.5336, -175.8516, -185.0660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-149.6109, -222.9793, -121.5838, -175.7588, -185.0434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0719, device='cuda:0', dtype=torch.float64)
tensor([-149.5747, -222.9920, -121.5656, -175.5259, -184.9350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0678, device='cuda:0', dtype=torch.float64)
tensor([-149.5259, -223.0317, -121.5306, -175.2993, -184.8295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-149.4649, -223.0936, -121.4739, -175.0359, -184.6918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-149.3939, -223.2025, -121.4236, -174.7447, -184.5414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-149.3644, -223.3466, -121.4253, -174.5117, -184.4367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-149.3578, -223.4426, -121.4564, -174.3572, -184.3749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0803, device='cuda:0', dtype=torch.float64)
tensor([-149.3676, -223.5191, -121.5232, -174.2403, -184.3574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0940, device='cuda:0', dtype=torch.float64)
tensor([-149.3131, -223.5478, -121.5374, -174.0748, -184.2888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-149.2453, -223.5754, -121.5167, -173.8966, -184.2061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-149.2177, -223.6486, -121.5616, -173.7888, -184.1753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-149.1695, -223.6567, -121.5771, -173.6612, -184.1418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0663, device='cuda:0', dtype=torch.float64)
tensor([-149.1138, -223.6474, -121.5954, -173.5167, -184.1068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0737, device='cuda:0', dtype=torch.float64)
tensor([-149.0430, -223.5961, -121.5814, -173.3234, -184.0272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0594, device='cuda:0', dtype=torch.float64)
tensor([-148.9945, -223.5045, -121.5543, -173.1222, -183.9311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0663, device='cuda:0', dtype=torch.float64)
tensor([-148.9764, -223.4463, -121.5578, -172.9865, -183.8684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0792, device='cuda:0', dtype=torch.float64)
tensor([-148.9787, -223.4643, -121.5883, -172.8766, -183.8301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-148.9667, -223.4841, -121.6159, -172.7923, -183.7816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-148.9775, -223.5684, -121.6513, -172.7294, -183.7462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-149.0072, -223.6573, -121.6691, -172.6882, -183.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-149.0412, -223.7234, -121.6823, -172.6385, -183.6459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0780, device='cuda:0', dtype=torch.float64)
tensor([-149.0426, -223.7879, -121.6869, -172.5835, -183.6036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0649, device='cuda:0', dtype=torch.float64)
tensor([-149.0385, -223.8018, -121.6754, -172.5152, -183.5507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-149.0895, -223.8221, -121.7110, -172.5061, -183.5398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-149.1719, -223.9042, -121.7925, -172.5509, -183.5580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0673, device='cuda:0', dtype=torch.float64)
tensor([-149.2768, -224.0153, -121.9034, -172.6480, -183.6013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-149.3526, -224.1120, -121.9910, -172.7149, -183.6299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-149.4391, -224.2117, -122.0841, -172.7982, -183.6747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-149.5069, -224.3257, -122.1628, -172.8334, -183.6971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-149.5404, -224.3922, -122.2045, -172.8381, -183.7035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0644, device='cuda:0', dtype=torch.float64)
tensor([-149.5349, -224.3945, -122.2136, -172.7837, -183.6686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0728, device='cuda:0', dtype=torch.float64)
tensor([-149.5284, -224.4078, -122.2419, -172.7349, -183.6499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0686, device='cuda:0', dtype=torch.float64)
tensor([-149.5553, -224.4204, -122.2739, -172.6873, -183.6300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-149.5917, -224.4559, -122.3088, -172.6723, -183.6334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-149.6555, -224.5060, -122.3821, -172.6913, -183.6538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-149.7106, -224.5059, -122.4381, -172.7076, -183.6750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-149.7762, -224.4782, -122.5112, -172.7695, -183.7161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-149.8183, -224.4695, -122.5759, -172.8364, -183.7533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0724, device='cuda:0', dtype=torch.float64)
tensor([-149.8700, -224.4227, -122.6482, -172.9527, -183.8212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0641, device='cuda:0', dtype=torch.float64)
tensor([-149.9131, -224.3694, -122.7363, -173.0453, -183.8904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-149.9270, -224.3196, -122.8035, -173.0973, -183.9476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0668, device='cuda:0', dtype=torch.float64)
tensor([-149.9350, -224.2955, -122.8568, -173.1424, -183.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-149.9717, -224.3344, -122.9637, -173.1892, -184.0541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-149.9925, -224.3836, -123.0627, -173.2457, -184.1181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0765, device='cuda:0', dtype=torch.float64)
tensor([-149.9945, -224.4273, -123.1372, -173.2598, -184.1526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-150.0076, -224.4575, -123.2249, -173.3138, -184.2138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0642, device='cuda:0', dtype=torch.float64)
tensor([-150.0129, -224.4788, -123.3048, -173.3298, -184.2492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-150.0340, -224.5394, -123.3985, -173.3444, -184.2987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-150.0677, -224.6355, -123.4810, -173.3749, -184.3430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0746, device='cuda:0', dtype=torch.float64)
tensor([-150.1193, -224.7250, -123.5696, -173.4399, -184.4051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-150.1507, -224.7286, -123.6351, -173.5053, -184.4422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-150.1770, -224.6887, -123.6726, -173.5329, -184.4514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-150.1763, -224.6267, -123.6867, -173.5144, -184.4281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0692, device='cuda:0', dtype=torch.float64)
tensor([-150.1724, -224.5365, -123.6887, -173.5019, -184.4021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-150.1410, -224.4212, -123.6603, -173.4413, -184.3502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-150.1161, -224.2942, -123.6516, -173.4221, -184.3279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0677, device='cuda:0', dtype=torch.float64)
tensor([-150.1354, -224.1830, -123.6596, -173.4059, -184.3070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0645, device='cuda:0', dtype=torch.float64)
tensor([-150.1507, -224.1079, -123.6219, -173.3394, -184.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-150.1758, -224.0557, -123.6146, -173.2994, -184.1907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-150.2162, -224.0039, -123.6115, -173.3141, -184.1767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0589, device='cuda:0', dtype=torch.float64)
tensor([-150.2397, -223.8995, -123.5649, -173.2892, -184.1220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-150.2510, -223.7801, -123.5221, -173.2623, -184.0720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-150.2517, -223.6723, -123.4652, -173.1988, -183.9979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-150.2477, -223.5735, -123.4359, -173.1454, -183.9273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0567, device='cuda:0', dtype=torch.float64)
tensor([-150.2545, -223.4377, -123.3989, -173.0729, -183.8457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-150.2853, -223.2910, -123.3816, -173.0464, -183.8001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-150.2959, -223.1562, -123.3382, -172.9937, -183.7381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0645, device='cuda:0', dtype=torch.float64)
tensor([-150.3063, -223.0723, -123.2966, -172.9121, -183.6718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-150.3279, -222.9603, -123.2742, -172.8637, -183.6336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-150.3445, -222.8740, -123.2417, -172.7750, -183.5722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-150.3794, -222.8355, -123.2281, -172.6863, -183.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-150.3982, -222.7608, -123.2094, -172.5727, -183.4446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-150.4010, -222.6625, -123.1661, -172.4164, -183.3455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-150.4221, -222.5783, -123.1155, -172.2401, -183.2343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0587, device='cuda:0', dtype=torch.float64)
tensor([-150.4478, -222.5465, -123.0514, -172.0679, -183.1156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-150.4678, -222.4723, -122.9693, -171.8758, -182.9728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-150.5001, -222.4375, -122.9103, -171.7536, -182.8691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-150.5272, -222.3956, -122.8492, -171.6409, -182.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-150.5491, -222.3566, -122.8125, -171.5513, -182.6684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0618, device='cuda:0', dtype=torch.float64)
tensor([-150.5549, -222.3418, -122.7622, -171.4363, -182.5646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-150.5709, -222.3394, -122.7265, -171.3371, -182.4679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-150.5958, -222.3707, -122.6973, -171.2602, -182.3855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0632, device='cuda:0', dtype=torch.float64)
tensor([-150.6370, -222.3969, -122.7062, -171.2201, -182.3430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-150.7173, -222.4930, -122.7619, -171.2645, -182.3612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0609, device='cuda:0', dtype=torch.float64)
tensor([-150.7825, -222.5114, -122.7886, -171.2862, -182.3562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-150.8609, -222.5447, -122.8063, -171.2997, -182.3391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0635, device='cuda:0', dtype=torch.float64)
tensor([-150.9473, -222.5510, -122.8253, -171.3567, -182.3583],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0659, device='cuda:0', dtype=torch.float64)
tensor([-151.0174, -222.5626, -122.8306, -171.3773, -182.3732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-151.0556, -222.5511, -122.8387, -171.3942, -182.3946],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0557, device='cuda:0', dtype=torch.float64)
tensor([-151.0706, -222.4913, -122.8205, -171.3817, -182.3972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-151.0856, -222.4434, -122.8002, -171.3332, -182.3718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0603, device='cuda:0', dtype=torch.float64)
tensor([-151.0929, -222.3764, -122.7816, -171.3040, -182.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-151.1080, -222.3182, -122.7646, -171.2702, -182.3282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-151.1236, -222.2636, -122.7534, -171.2584, -182.3084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0687, device='cuda:0', dtype=torch.float64)
tensor([-151.1719, -222.2499, -122.7928, -171.3212, -182.3286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-151.2251, -222.2633, -122.8548, -171.4220, -182.3753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-151.2775, -222.2872, -122.9128, -171.5113, -182.4202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-151.3193, -222.3034, -122.9588, -171.5791, -182.4541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0658, device='cuda:0', dtype=torch.float64)
tensor([-151.3386, -222.3349, -122.9744, -171.5936, -182.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0617, device='cuda:0', dtype=torch.float64)
tensor([-151.3735, -222.3867, -123.0163, -171.6472, -182.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-151.4398, -222.4293, -123.0964, -171.7675, -182.5745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0602, device='cuda:0', dtype=torch.float64)
tensor([-151.4964, -222.4760, -123.1812, -171.8769, -182.6458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-151.5322, -222.5123, -123.2409, -171.9617, -182.7006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-151.5725, -222.5569, -123.2803, -172.0440, -182.7577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-151.6159, -222.6408, -123.3152, -172.1050, -182.7982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-151.6462, -222.6852, -123.3586, -172.1517, -182.8296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-151.6648, -222.7335, -123.3946, -172.1818, -182.8379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-151.6758, -222.7901, -123.4262, -172.1794, -182.8199],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-151.6815, -222.8523, -123.4432, -172.1445, -182.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-151.6693, -222.9010, -123.4722, -172.1022, -182.7339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-151.6759, -222.9517, -123.5252, -172.0773, -182.7166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-151.6866, -223.0886, -123.6034, -172.0369, -182.6885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0654, device='cuda:0', dtype=torch.float64)
tensor([-151.6758, -223.2209, -123.6630, -171.9312, -182.6200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-151.6443, -223.3287, -123.7073, -171.8192, -182.5532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-151.6205, -223.4060, -123.7298, -171.6825, -182.4761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-151.6070, -223.4739, -123.7510, -171.5424, -182.3911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-151.6085, -223.5894, -123.7731, -171.3830, -182.2928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-151.6115, -223.6966, -123.7904, -171.2405, -182.2018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-151.5987, -223.7725, -123.7827, -171.0821, -182.0981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-151.6106, -223.8778, -123.7957, -170.9563, -182.0098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-151.6241, -223.9741, -123.8225, -170.8419, -181.9318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-151.6048, -224.0432, -123.8219, -170.7107, -181.8318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0569, device='cuda:0', dtype=torch.float64)
tensor([-151.6013, -224.1479, -123.8132, -170.5717, -181.7268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0571, device='cuda:0', dtype=torch.float64)
tensor([-151.5669, -224.1943, -123.7900, -170.4277, -181.6153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-151.5624, -224.2767, -123.8227, -170.3592, -181.5587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-151.5542, -224.3194, -123.8479, -170.2847, -181.5090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-151.5523, -224.3178, -123.8754, -170.2119, -181.4631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-151.5475, -224.3685, -123.9034, -170.1047, -181.4076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-151.5544, -224.4163, -123.9476, -170.0412, -181.3885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-151.5713, -224.4232, -123.9760, -169.9581, -181.3444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-151.5909, -224.4632, -124.0171, -169.8566, -181.3026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-151.6094, -224.5207, -124.0558, -169.7767, -181.2761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0779, device='cuda:0', dtype=torch.float64)
tensor([-151.6075, -224.5271, -124.0594, -169.6384, -181.2113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-151.6045, -224.5076, -124.0407, -169.4913, -181.1180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-151.6123, -224.4786, -123.9989, -169.3246, -181.0057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-151.6240, -224.4433, -123.9619, -169.1964, -180.9065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-151.6378, -224.4537, -123.9349, -169.0793, -180.8180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-151.6219, -224.4227, -123.8974, -168.9553, -180.7288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-151.6308, -224.4496, -123.8956, -168.8830, -180.6769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-151.6300, -224.4484, -123.8832, -168.7720, -180.6043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0614, device='cuda:0', dtype=torch.float64)
tensor([-151.6239, -224.4521, -123.8803, -168.6618, -180.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-151.6391, -224.4990, -123.8976, -168.5778, -180.4880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0571, device='cuda:0', dtype=torch.float64)
tensor([-151.6364, -224.5067, -123.9115, -168.4719, -180.4278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-151.6563, -224.5254, -123.9460, -168.3928, -180.3856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-151.6739, -224.5495, -123.9857, -168.2583, -180.3205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-151.6730, -224.5910, -124.0227, -168.1184, -180.2491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-151.6755, -224.6086, -124.0548, -167.9969, -180.1782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-151.6918, -224.6450, -124.1057, -167.8927, -180.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-151.7415, -224.7318, -124.2139, -167.8966, -180.1581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-151.7894, -224.7790, -124.3043, -167.9113, -180.2028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0587, device='cuda:0', dtype=torch.float64)
tensor([-151.8361, -224.8144, -124.3906, -167.9427, -180.2570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-151.8552, -224.7949, -124.4401, -167.9129, -180.2526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-151.8861, -224.7426, -124.5005, -167.9048, -180.2701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-151.9088, -224.6986, -124.5750, -167.8884, -180.2754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-151.9216, -224.6319, -124.6125, -167.8544, -180.2694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0571, device='cuda:0', dtype=torch.float64)
tensor([-151.8971, -224.5896, -124.6337, -167.7681, -180.2292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-151.8754, -224.5679, -124.6268, -167.6791, -180.1711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-151.8517, -224.4761, -124.5783, -167.5728, -180.0869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-151.8518, -224.3932, -124.5523, -167.5061, -180.0342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-151.8313, -224.3090, -124.5252, -167.4482, -179.9815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-151.8374, -224.2568, -124.5294, -167.4409, -179.9477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-151.8499, -224.1937, -124.5438, -167.4201, -179.9058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-151.8722, -224.1714, -124.5737, -167.4042, -179.8747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-151.8887, -224.1290, -124.5967, -167.4089, -179.8548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-151.9062, -224.0866, -124.6168, -167.4127, -179.8280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-151.9293, -224.0619, -124.6242, -167.3856, -179.7850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-151.9547, -224.0429, -124.6465, -167.3970, -179.7699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-151.9618, -224.0015, -124.6257, -167.3516, -179.7165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-151.9721, -223.9909, -124.5954, -167.2994, -179.6541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-151.9863, -223.9406, -124.5707, -167.3018, -179.6277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-151.9974, -223.8764, -124.5541, -167.3072, -179.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-151.9978, -223.7504, -124.5150, -167.3163, -179.5890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0514, device='cuda:0', dtype=torch.float64)
tensor([-151.9703, -223.6305, -124.4493, -167.2686, -179.5294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-151.9324, -223.5427, -124.3697, -167.1838, -179.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-151.8953, -223.4940, -124.2975, -167.0869, -179.3776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-151.8714, -223.4728, -124.2618, -167.0410, -179.3419],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-151.8292, -223.4485, -124.2228, -166.9418, -179.2739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-151.7767, -223.4065, -124.1914, -166.8492, -179.2153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-151.7186, -223.3269, -124.1251, -166.7157, -179.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-151.6564, -223.1946, -124.0626, -166.5807, -179.0188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-151.6385, -223.0880, -124.0310, -166.5169, -178.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-151.5888, -222.9238, -123.9787, -166.4198, -178.9260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-151.5504, -222.7923, -123.9414, -166.3310, -178.8679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-151.5210, -222.6881, -123.8884, -166.2190, -178.7790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-151.5236, -222.5766, -123.8459, -166.1262, -178.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-151.5159, -222.4797, -123.8169, -166.0751, -178.6465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-151.4609, -222.3343, -123.7306, -165.9612, -178.5311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0576, device='cuda:0', dtype=torch.float64)
tensor([-151.3892, -222.2163, -123.6170, -165.8111, -178.3922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-151.3219, -222.0839, -123.5014, -165.6602, -178.2492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-151.2524, -221.9402, -123.3947, -165.5219, -178.1223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-151.1958, -221.8049, -123.2946, -165.3644, -177.9874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-151.1582, -221.6957, -123.2184, -165.2436, -177.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-151.1332, -221.6292, -123.1508, -165.1175, -177.7843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0572, device='cuda:0', dtype=torch.float64)
tensor([-151.1047, -221.5419, -123.0600, -164.9577, -177.6418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-151.1054, -221.5094, -122.9922, -164.8248, -177.5221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-151.1089, -221.4946, -122.9482, -164.7169, -177.4308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-151.1272, -221.4957, -122.9154, -164.6597, -177.3710],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-151.1401, -221.5097, -122.9014, -164.6453, -177.3403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-151.1685, -221.5355, -122.8886, -164.6523, -177.3311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-151.2105, -221.5701, -122.8835, -164.6672, -177.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-151.2488, -221.5997, -122.8677, -164.6677, -177.3113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-151.2805, -221.6064, -122.8443, -164.6770, -177.2840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-151.3103, -221.6507, -122.8269, -164.6655, -177.2515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0562, device='cuda:0', dtype=torch.float64)
tensor([-151.3461, -221.6884, -122.7931, -164.6254, -177.1912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-151.3920, -221.7165, -122.7726, -164.5931, -177.1352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-151.4325, -221.6949, -122.7513, -164.5505, -177.0837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0565, device='cuda:0', dtype=torch.float64)
tensor([-151.4714, -221.7198, -122.7436, -164.5430, -177.0353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0663, device='cuda:0', dtype=torch.float64)
tensor([-151.4950, -221.7352, -122.7419, -164.5205, -176.9868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-151.5187, -221.7343, -122.7416, -164.4750, -176.9252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-151.5079, -221.7472, -122.7148, -164.3670, -176.8160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-151.4865, -221.7670, -122.6803, -164.2519, -176.7044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-151.4478, -221.7657, -122.6372, -164.1197, -176.5755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-151.3979, -221.7791, -122.6072, -164.0016, -176.4629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-151.3651, -221.7640, -122.5832, -163.8997, -176.3642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-151.3427, -221.7349, -122.5685, -163.8210, -176.2883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-151.3115, -221.7556, -122.5372, -163.7151, -176.1804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0521, device='cuda:0', dtype=torch.float64)
tensor([-151.3133, -221.7890, -122.5540, -163.6784, -176.1250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-151.3321, -221.8289, -122.5807, -163.6458, -176.0822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-151.3492, -221.8445, -122.6109, -163.6281, -176.0541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-151.3831, -221.8492, -122.6482, -163.6291, -176.0370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-151.4171, -221.9215, -122.7004, -163.6434, -176.0237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-151.4391, -221.9819, -122.7415, -163.6142, -175.9765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-151.4475, -222.0386, -122.7632, -163.5668, -175.9147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-151.4774, -222.1451, -122.8114, -163.5407, -175.8654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-151.4895, -222.2485, -122.8205, -163.4752, -175.7846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-151.4950, -222.3358, -122.8386, -163.3987, -175.7010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-151.5039, -222.4416, -122.8656, -163.3474, -175.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-151.4969, -222.5477, -122.8950, -163.2731, -175.5442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-151.4883, -222.6494, -122.9282, -163.2009, -175.4549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0482, device='cuda:0', dtype=torch.float64)
tensor([-151.4548, -222.7057, -122.9200, -163.0724, -175.3194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-151.4024, -222.7191, -122.9077, -162.9587, -175.1975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-151.3706, -222.7689, -122.9191, -162.9011, -175.1242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-151.3086, -222.7650, -122.8969, -162.7895, -175.0109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-151.2282, -222.7400, -122.8370, -162.6308, -174.8651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-151.1880, -222.7461, -122.8154, -162.5179, -174.7656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-151.1430, -222.7040, -122.7889, -162.3777, -174.6600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-151.0940, -222.6808, -122.7465, -162.2090, -174.5408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-151.0455, -222.6664, -122.7035, -162.0674, -174.4313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-151.0017, -222.6320, -122.6607, -161.9378, -174.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-150.9582, -222.6024, -122.6144, -161.8157, -174.2267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-150.9330, -222.5212, -122.5702, -161.6997, -174.1231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-150.9002, -222.4231, -122.5166, -161.5765, -174.0123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-150.8522, -222.3264, -122.4302, -161.4326, -173.8742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-150.8318, -222.2672, -122.3823, -161.3761, -173.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-150.8242, -222.2740, -122.3698, -161.3424, -173.7491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-150.8135, -222.2360, -122.3613, -161.3141, -173.7061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-150.8105, -222.2144, -122.3625, -161.3021, -173.6667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-150.8324, -222.2283, -122.3858, -161.3360, -173.6571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-150.8269, -222.2031, -122.3640, -161.3026, -173.5974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-150.8174, -222.2079, -122.3494, -161.2831, -173.5509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-150.8316, -222.2285, -122.3628, -161.3123, -173.5312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-150.8181, -222.1760, -122.3533, -161.2714, -173.4642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0508, device='cuda:0', dtype=torch.float64)
tensor([-150.8088, -222.1319, -122.3604, -161.2589, -173.4236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-150.8037, -222.1146, -122.3814, -161.2574, -173.4059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0508, device='cuda:0', dtype=torch.float64)
tensor([-150.8065, -222.1066, -122.4096, -161.2820, -173.3958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-150.8076, -222.0773, -122.4140, -161.2644, -173.3534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-150.7723, -222.0340, -122.3809, -161.1783, -173.2528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-150.7413, -222.0235, -122.3736, -161.0917, -173.1596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-150.6980, -222.0151, -122.3552, -160.9774, -173.0474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-150.6770, -222.0558, -122.3647, -160.9039, -172.9696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-150.6663, -222.0557, -122.4019, -160.8674, -172.9247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0585, device='cuda:0', dtype=torch.float64)
tensor([-150.6173, -222.0626, -122.3678, -160.7267, -172.7998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-150.5663, -222.1074, -122.3247, -160.5640, -172.6602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-150.5204, -222.1261, -122.2561, -160.3578, -172.4878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-150.4617, -222.1192, -122.1730, -160.1422, -172.3050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-150.4130, -222.0697, -122.0778, -159.9621, -172.1362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-150.3754, -222.0239, -121.9813, -159.8167, -171.9890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-150.3598, -221.9861, -121.9119, -159.7049, -171.8706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-150.3693, -221.9325, -121.8620, -159.6213, -171.7832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-150.3880, -221.8711, -121.8317, -159.5650, -171.7207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-150.3785, -221.7895, -121.7999, -159.4893, -171.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-150.3365, -221.7130, -121.7394, -159.3819, -171.5524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-150.3111, -221.6330, -121.7044, -159.3076, -171.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-150.2662, -221.4602, -121.6434, -159.2098, -171.3753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-150.2153, -221.2770, -121.5812, -159.0651, -171.2548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-150.1728, -221.1234, -121.5276, -158.9218, -171.1386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-150.1401, -220.9928, -121.4753, -158.8059, -171.0392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-150.1313, -220.8847, -121.4505, -158.7311, -170.9778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-150.1204, -220.8104, -121.4351, -158.6652, -170.9284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-150.1298, -220.7479, -121.4267, -158.6164, -170.8936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-150.1620, -220.6920, -121.4536, -158.6288, -170.8977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-150.1713, -220.5935, -121.4501, -158.5941, -170.8719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-150.1739, -220.5016, -121.4442, -158.5714, -170.8502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-150.1786, -220.4255, -121.4461, -158.5725, -170.8303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-150.1633, -220.3083, -121.4126, -158.5106, -170.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-150.1322, -220.2142, -121.3482, -158.3964, -170.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-150.1293, -220.1265, -121.3076, -158.3446, -170.5517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-150.1196, -220.0297, -121.2734, -158.2963, -170.4666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-150.0893, -219.9460, -121.2135, -158.2128, -170.3571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-150.0933, -219.9213, -121.1927, -158.1527, -170.2722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-150.0852, -219.8592, -121.1551, -158.0660, -170.1686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-150.0564, -219.7898, -121.1040, -157.9757, -170.0577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-150.0333, -219.7169, -121.0637, -157.8768, -169.9512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-150.0056, -219.6334, -121.0089, -157.7448, -169.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-149.9672, -219.5823, -120.9583, -157.6007, -169.6788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-149.8921, -219.5378, -120.8529, -157.3881, -169.4754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-149.8384, -219.5357, -120.7814, -157.2080, -169.2993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-149.7966, -219.5760, -120.7392, -157.0746, -169.1610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-149.7516, -219.5809, -120.6997, -156.9382, -169.0254],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-149.6864, -219.5532, -120.6564, -156.7823, -168.8768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-149.6035, -219.5443, -120.6089, -156.6241, -168.7182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-149.5104, -219.4850, -120.5511, -156.4359, -168.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-149.3920, -219.3575, -120.4685, -156.2329, -168.3421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-149.2848, -219.2383, -120.4105, -156.0460, -168.1750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-149.1791, -219.0980, -120.3440, -155.8493, -167.9954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-149.0666, -218.9502, -120.2778, -155.6340, -167.8038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-148.9682, -218.8523, -120.2035, -155.4125, -167.6004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-148.8652, -218.7191, -120.0968, -155.1668, -167.3798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-148.7810, -218.6355, -120.0160, -154.9606, -167.1963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-148.7287, -218.5410, -119.9726, -154.7883, -167.0466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-148.6681, -218.4369, -119.9374, -154.6053, -166.9036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-148.6358, -218.3401, -119.9146, -154.4549, -166.7810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-148.5995, -218.2833, -119.8894, -154.2922, -166.6473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-148.5633, -218.2240, -119.8491, -154.1103, -166.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-148.5367, -218.1800, -119.8254, -153.9516, -166.3902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-148.5168, -218.1951, -119.8146, -153.8087, -166.2770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-148.4984, -218.1894, -119.8121, -153.6748, -166.1899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-148.4567, -218.1434, -119.8054, -153.4965, -166.0688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-148.4180, -218.0830, -119.7931, -153.3404, -165.9557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-148.3890, -217.9988, -119.7924, -153.2432, -165.8833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-148.3438, -217.9219, -119.7842, -153.1259, -165.7984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-148.2936, -217.8270, -119.7730, -153.0367, -165.7273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-148.2546, -217.7257, -119.7624, -152.9467, -165.6500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-148.2113, -217.6401, -119.7508, -152.8649, -165.5707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-148.1609, -217.5777, -119.7405, -152.8058, -165.4988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-148.1311, -217.5371, -119.7358, -152.7726, -165.4379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-148.1080, -217.5074, -119.7245, -152.7023, -165.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-148.0685, -217.4983, -119.7041, -152.6170, -165.2415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-148.0352, -217.4903, -119.6859, -152.5244, -165.1351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-148.0149, -217.5064, -119.6880, -152.4455, -165.0403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-147.9800, -217.5524, -119.6835, -152.3191, -164.9153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-147.9665, -217.6558, -119.7045, -152.2280, -164.8230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-147.9195, -217.7532, -119.7055, -152.0877, -164.6931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-147.8660, -217.8309, -119.6916, -151.9461, -164.5504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-147.8047, -217.8664, -119.6480, -151.7908, -164.3968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-147.7625, -217.9024, -119.6190, -151.6622, -164.2669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-147.7149, -217.9406, -119.5910, -151.5659, -164.1581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-147.6736, -217.9860, -119.5651, -151.4943, -164.0704],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-147.5953, -217.9741, -119.5012, -151.3544, -163.9288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-147.5283, -217.9671, -119.4422, -151.2188, -163.7977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-147.4550, -217.9596, -119.3555, -151.0373, -163.6267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-147.3835, -217.9736, -119.2717, -150.8421, -163.4508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-147.3190, -217.9555, -119.1872, -150.6878, -163.3069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-147.2590, -217.9504, -119.1210, -150.5578, -163.1744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-147.1823, -217.9568, -119.0313, -150.3819, -163.0160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-147.1236, -217.9643, -118.9493, -150.2251, -162.8862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-147.0669, -218.0121, -118.8807, -150.1092, -162.7805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-147.0228, -218.0795, -118.8260, -150.0023, -162.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-146.9789, -218.1658, -118.7717, -149.8905, -162.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-146.9161, -218.2247, -118.6835, -149.7410, -162.4628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-146.8800, -218.3104, -118.6337, -149.6488, -162.3868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-146.8645, -218.4036, -118.6082, -149.6067, -162.3369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-146.8639, -218.5043, -118.6000, -149.5531, -162.2806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-146.8807, -218.5887, -118.5875, -149.5176, -162.2405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-146.8819, -218.6360, -118.5639, -149.4349, -162.1701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-146.8798, -218.6899, -118.5438, -149.3686, -162.1112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-146.9064, -218.7877, -118.5569, -149.3405, -162.0938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-146.9333, -218.8933, -118.5806, -149.3306, -162.0858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-146.9790, -219.0122, -118.6086, -149.3586, -162.1010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-147.0498, -219.1632, -118.6544, -149.4237, -162.1472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-147.1069, -219.2589, -118.6844, -149.4606, -162.1717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-147.1353, -219.3193, -118.6871, -149.4473, -162.1535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-147.1566, -219.3818, -118.6783, -149.4054, -162.1162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-147.1837, -219.4622, -118.6772, -149.3610, -162.0845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-147.2060, -219.4995, -118.6639, -149.3091, -162.0477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-147.2249, -219.5517, -118.6533, -149.2539, -162.0058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-147.2708, -219.6173, -118.6537, -149.2673, -162.0105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-147.3216, -219.7020, -118.6732, -149.3004, -162.0338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-147.3567, -219.8235, -118.6829, -149.2998, -162.0463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-147.4082, -219.9485, -118.7195, -149.3200, -162.0768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-147.4371, -220.0780, -118.7535, -149.3280, -162.0954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-147.4783, -220.2305, -118.7955, -149.3628, -162.1451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-147.5036, -220.3529, -118.8322, -149.3951, -162.1875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-147.5248, -220.4572, -118.8583, -149.3974, -162.2082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-147.5516, -220.5578, -118.8858, -149.3916, -162.2175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-147.5820, -220.6522, -118.8887, -149.3653, -162.2095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-147.5867, -220.7809, -118.8813, -149.2939, -162.1661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-147.6131, -220.9374, -118.8868, -149.2376, -162.1436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-147.6363, -221.0655, -118.8807, -149.1673, -162.1080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-147.6497, -221.1470, -118.8730, -149.0576, -162.0427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-147.6376, -221.2144, -118.8564, -148.9167, -161.9449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-147.6162, -221.2514, -118.8165, -148.7282, -161.8122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-147.5636, -221.2251, -118.7567, -148.4985, -161.6426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-147.5259, -221.1946, -118.7027, -148.3070, -161.5049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-147.4861, -221.1817, -118.6345, -148.0918, -161.3516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-147.4348, -221.1491, -118.5450, -147.8649, -161.1810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0418, device='cuda:0', dtype=torch.float64)
tensor([-147.3790, -221.1216, -118.4826, -147.6585, -161.0247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-147.3292, -221.1358, -118.4382, -147.4880, -160.8883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-147.2753, -221.1359, -118.3924, -147.2892, -160.7345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-147.2286, -221.1435, -118.3569, -147.1187, -160.6000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-147.2208, -221.1681, -118.3418, -147.0241, -160.5203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-147.1936, -221.1058, -118.3026, -146.9298, -160.4431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-147.1781, -221.0811, -118.2713, -146.8852, -160.4007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-147.1693, -221.0075, -118.2463, -146.8465, -160.3693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-147.1939, -220.9316, -118.2350, -146.8319, -160.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-147.1902, -220.8541, -118.2191, -146.7715, -160.3122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-147.1835, -220.7828, -118.1993, -146.7030, -160.2671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-147.1617, -220.6835, -118.1532, -146.6422, -160.2093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-147.1409, -220.5586, -118.1207, -146.5845, -160.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-147.1209, -220.4486, -118.0857, -146.5209, -160.0939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-147.0995, -220.3635, -118.0504, -146.4392, -160.0040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-147.0900, -220.3202, -118.0414, -146.3868, -159.9335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-147.0678, -220.2858, -118.0325, -146.3443, -159.8690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-147.0371, -220.2579, -118.0165, -146.2740, -159.7811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-146.9666, -220.2442, -117.9690, -146.1311, -159.6304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-146.8787, -220.1703, -117.9072, -145.9648, -159.4570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-146.8083, -220.1329, -117.8645, -145.8286, -159.3072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-146.7513, -220.1526, -117.8422, -145.6980, -159.1702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-146.6967, -220.2060, -117.8135, -145.5723, -159.0365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-146.5990, -220.2150, -117.7315, -145.3591, -158.8334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0513, device='cuda:0', dtype=torch.float64)
tensor([-146.5253, -220.2555, -117.6654, -145.1598, -158.6446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0584, device='cuda:0', dtype=torch.float64)
tensor([-146.4301, -220.2653, -117.5802, -144.9493, -158.4400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-146.3167, -220.2485, -117.4626, -144.6628, -158.1759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-146.1947, -220.1998, -117.3474, -144.3568, -157.8958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-146.0598, -220.1682, -117.2397, -144.0287, -157.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-145.9717, -220.1705, -117.1564, -143.7478, -157.3351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-145.9237, -220.1948, -117.1042, -143.5243, -157.1202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-145.8816, -220.1949, -117.0546, -143.3230, -156.9202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-145.8699, -220.1964, -117.0284, -143.1819, -156.7734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-145.8619, -220.2077, -117.0083, -143.0378, -156.6320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-145.8679, -220.2448, -117.0070, -142.9126, -156.5080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-145.8846, -220.2830, -117.0102, -142.7923, -156.3966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-145.8638, -220.2517, -116.9949, -142.6060, -156.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-145.8462, -220.2369, -116.9864, -142.4398, -156.1023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-145.8072, -220.1776, -116.9599, -142.2495, -155.9370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-145.7820, -220.1444, -116.9486, -142.0686, -155.7824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-145.7643, -220.1231, -116.9226, -141.8693, -155.6112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-145.7452, -220.1094, -116.8914, -141.6753, -155.4388],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-145.7130, -220.0919, -116.8489, -141.4501, -155.2449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-145.6885, -220.0924, -116.8050, -141.2254, -155.0521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-145.6573, -220.1170, -116.7619, -140.9954, -154.8571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-145.6203, -220.1530, -116.7151, -140.7590, -154.6650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-145.5949, -220.2303, -116.6914, -140.5465, -154.4931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-145.5797, -220.2690, -116.6768, -140.3467, -154.3408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-145.5724, -220.3904, -116.6753, -140.1632, -154.2000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-145.5533, -220.4945, -116.6693, -139.9825, -154.0571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-145.5354, -220.5977, -116.6696, -139.8180, -153.9287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-145.5057, -220.6813, -116.6796, -139.6425, -153.7979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-145.4759, -220.7406, -116.6935, -139.4672, -153.6607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-145.4263, -220.7904, -116.6947, -139.2614, -153.5073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-145.3618, -220.8416, -116.6781, -139.0283, -153.3307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-145.3078, -220.9556, -116.6839, -138.8289, -153.1855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-145.2731, -221.0830, -116.7123, -138.6844, -153.0804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-145.2455, -221.1816, -116.7241, -138.5298, -152.9774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-145.2129, -221.2427, -116.7340, -138.4032, -152.8866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-145.1739, -221.2871, -116.7236, -138.2489, -152.7787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-145.1132, -221.2779, -116.6901, -138.0798, -152.6552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-145.0502, -221.2542, -116.6517, -137.9139, -152.5271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-144.9852, -221.2458, -116.6169, -137.7290, -152.3805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-144.9489, -221.1967, -116.5864, -137.5726, -152.2577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-144.9274, -221.1925, -116.5788, -137.4358, -152.1491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-144.8957, -221.1516, -116.5494, -137.2821, -152.0205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-144.8657, -221.1515, -116.5172, -137.1277, -151.8945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-144.8496, -221.1526, -116.4881, -136.9714, -151.7594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-144.8224, -221.1852, -116.4578, -136.7968, -151.6026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-144.7662, -221.1679, -116.4000, -136.5812, -151.4020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-144.7214, -221.1806, -116.3564, -136.3783, -151.2022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-144.6727, -221.1631, -116.3118, -136.1969, -151.0115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-144.6380, -221.1456, -116.2780, -136.0427, -150.8471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-144.6152, -221.1281, -116.2654, -135.8983, -150.6927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-144.6108, -221.1665, -116.2645, -135.7837, -150.5570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-144.6052, -221.1837, -116.2529, -135.6524, -150.4169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-144.5909, -221.1854, -116.2388, -135.4679, -150.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-144.5755, -221.1589, -116.2195, -135.2709, -150.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-144.5546, -221.1739, -116.2065, -135.0698, -149.8844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-144.5174, -221.1797, -116.1819, -134.8780, -149.7033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-144.4758, -221.1167, -116.1602, -134.6779, -149.5245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-144.4124, -221.0093, -116.1156, -134.4868, -149.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-144.3523, -220.9241, -116.0749, -134.2986, -149.1524],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-144.2904, -220.8871, -116.0512, -134.1194, -148.9718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-144.2233, -220.8396, -116.0325, -133.9471, -148.7973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-144.1874, -220.7881, -116.0221, -133.7961, -148.6404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-144.1754, -220.7516, -116.0337, -133.6968, -148.5280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-144.1713, -220.7331, -116.0401, -133.6043, -148.4219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0564, device='cuda:0', dtype=torch.float64)
tensor([-144.1700, -220.7872, -116.0901, -133.5342, -148.3430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-144.1672, -220.7974, -116.1277, -133.4310, -148.2467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-144.1532, -220.7945, -116.1535, -133.3134, -148.1501],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-144.1107, -220.7620, -116.1665, -133.1772, -148.0495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-144.0582, -220.7932, -116.1789, -133.0444, -147.9413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-143.9736, -220.7959, -116.1618, -132.8670, -147.7923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-143.8827, -220.7713, -116.1257, -132.6808, -147.6313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-143.7883, -220.7132, -116.0728, -132.4676, -147.4393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-143.6764, -220.6347, -116.0254, -132.2387, -147.2251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-143.5828, -220.5537, -115.9926, -132.0115, -147.0220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-143.5253, -220.5331, -115.9940, -131.8507, -146.8833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-143.4637, -220.5155, -115.9922, -131.7079, -146.7363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-143.3866, -220.4781, -115.9769, -131.5323, -146.5586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-143.3300, -220.4583, -115.9711, -131.3611, -146.3833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-143.2928, -220.4116, -115.9777, -131.2219, -146.2334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-143.2530, -220.3828, -115.9811, -131.0821, -146.0800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-143.2420, -220.4050, -116.0095, -130.9951, -145.9648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-143.2130, -220.4069, -116.0205, -130.8548, -145.8123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-143.1689, -220.4367, -116.0296, -130.6947, -145.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-143.1252, -220.4960, -116.0461, -130.5511, -145.4904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-143.0679, -220.5456, -116.0480, -130.4004, -145.3362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0495, device='cuda:0', dtype=torch.float64)
tensor([-143.0042, -220.6094, -116.0199, -130.2085, -145.1490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-142.9598, -220.6968, -116.0092, -130.0315, -144.9814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-142.9123, -220.7875, -115.9929, -129.9005, -144.8480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-142.8613, -220.8868, -115.9794, -129.7814, -144.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-142.8224, -221.0016, -115.9772, -129.6722, -144.6109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-142.7772, -221.1168, -115.9815, -129.5629, -144.4917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-142.7708, -221.2729, -116.0122, -129.5166, -144.4266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-142.7587, -221.3852, -116.0202, -129.4411, -144.3384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-142.7672, -221.5235, -116.0360, -129.3851, -144.2666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-142.7694, -221.6318, -116.0416, -129.2946, -144.1739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-142.7745, -221.7306, -116.0403, -129.2254, -144.0900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-142.7847, -221.8032, -116.0340, -129.1484, -143.9840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0462, device='cuda:0', dtype=torch.float64)
tensor([-142.7552, -221.8728, -116.0216, -129.0080, -143.8216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-142.7310, -221.9547, -116.0176, -128.8756, -143.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0552, device='cuda:0', dtype=torch.float64)
tensor([-142.7129, -222.0499, -116.0184, -128.7425, -143.4967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-142.7030, -222.1496, -115.9952, -128.6161, -143.3383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-142.6881, -222.2238, -115.9717, -128.5061, -143.1957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-142.6747, -222.2862, -115.9521, -128.4174, -143.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-142.6379, -222.2900, -115.9051, -128.2993, -142.8920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0431, device='cuda:0', dtype=torch.float64)
tensor([-142.5918, -222.2898, -115.8566, -128.1633, -142.7180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-142.5504, -222.3047, -115.8188, -128.0185, -142.5463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-142.5070, -222.3157, -115.7805, -127.8658, -142.3653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-142.5147, -222.4375, -115.7771, -127.7814, -142.2554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-142.4685, -222.5037, -115.7559, -127.6012, -142.0763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-142.4276, -222.5650, -115.7460, -127.4167, -141.9058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-142.3528, -222.5672, -115.7053, -127.1861, -141.7055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-142.2674, -222.5820, -115.6755, -126.9612, -141.5102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-142.1715, -222.6161, -115.6544, -126.7352, -141.3182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-142.0879, -222.6614, -115.6472, -126.5257, -141.1496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-142.0359, -222.7234, -115.6550, -126.3202, -140.9936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-141.9805, -222.7630, -115.6406, -126.0994, -140.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-141.9244, -222.7894, -115.6276, -125.8617, -140.6256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0459, device='cuda:0', dtype=torch.float64)
tensor([-141.8669, -222.7863, -115.6004, -125.6195, -140.4260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-141.8508, -222.7968, -115.5941, -125.4249, -140.2634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-141.8399, -222.7807, -115.5652, -125.2301, -140.1069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-141.8381, -222.8297, -115.5771, -125.0890, -139.9726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-141.8272, -222.8861, -115.5757, -124.9464, -139.8362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-141.8295, -222.9217, -115.5772, -124.8210, -139.7142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-141.8710, -223.0598, -115.6214, -124.7320, -139.6225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0484, device='cuda:0', dtype=torch.float64)
tensor([-141.8968, -223.1814, -115.6482, -124.6184, -139.5174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-141.9689, -223.3279, -115.6976, -124.5419, -139.4418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-142.0193, -223.3991, -115.7222, -124.4272, -139.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0360, device='cuda:0', dtype=torch.float64)
tensor([-142.0476, -223.4601, -115.7319, -124.2922, -139.2022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-142.0640, -223.4847, -115.7393, -124.1427, -139.0648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-142.0186, -223.4598, -115.7143, -123.9531, -138.8961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-141.9350, -223.3867, -115.6695, -123.7101, -138.6907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-141.8500, -223.2847, -115.6149, -123.4646, -138.4781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-141.7704, -223.2209, -115.5709, -123.2265, -138.2761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-141.6942, -223.1826, -115.5349, -123.0320, -138.1109],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_113739.csv
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.7817, -2.8408, -3.5112, -3.4057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1004, device='cuda:0', dtype=torch.float64)
tensor([ -72.7697,  -22.9232,  -18.5591, -104.5858,  -71.0503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(296.0983, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -4.6377, -4.3856, -4.0436, -6.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(74.8786, device='cuda:0', dtype=torch.float64)
tensor([-14.2664, -32.6468, -35.4824, -54.2790, -20.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(317.1916, device='cuda:0', dtype=torch.float64)
tensor([ -2.8870, -17.9221,  -9.8978, -42.7871, -14.5046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(122.9763, device='cuda:0', dtype=torch.float64)
tensor([ -2.0504, -11.9950,  -6.3959, -10.5962,  -5.4568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(65.2954, device='cuda:0', dtype=torch.float64)
tensor([ -2.9074,  -9.7170,  -6.9705, -11.9115, -16.4362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(117.5707, device='cuda:0', dtype=torch.float64)
tensor([ -3.6152,  -6.6220,  -5.9592, -16.5081, -17.9123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(126.9352, device='cuda:0', dtype=torch.float64)
tensor([ -2.6392,  -5.1554,  -4.4877, -13.1383, -13.3752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(86.6685, device='cuda:0', dtype=torch.float64)
tensor([ -2.5873,  -4.7820,  -3.3243,  -9.7274, -10.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.5373, device='cuda:0', dtype=torch.float64)
tensor([-2.4929, -4.8966, -3.0033, -6.3111, -6.2125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(42.4335, device='cuda:0', dtype=torch.float64)
tensor([-2.5161, -5.0320, -2.9349, -6.4129, -4.7934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(50.9377, device='cuda:0', dtype=torch.float64)
tensor([-2.5327, -4.8261, -2.8941, -6.5714, -4.6269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.3118, device='cuda:0', dtype=torch.float64)
tensor([-2.5691, -5.5205, -2.9490, -8.1669, -4.4105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(52.5531, device='cuda:0', dtype=torch.float64)
tensor([ -2.5480,  -5.3557,  -3.2221, -12.6939,  -4.2864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(46.5235, device='cuda:0', dtype=torch.float64)
tensor([ -2.4148,  -4.3568,  -3.5463, -13.4814,  -4.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(35.7265, device='cuda:0', dtype=torch.float64)
tensor([ -2.2222,  -3.7326,  -3.8013, -10.5104,  -4.8007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.6408, device='cuda:0', dtype=torch.float64)
tensor([-2.0588, -3.3445, -4.3761, -6.9698, -4.7238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.7950, device='cuda:0', dtype=torch.float64)
tensor([-1.9889, -3.1501, -4.4337, -4.3631, -4.0793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3035, device='cuda:0', dtype=torch.float64)
tensor([-2.0121, -3.1450, -3.9235, -3.8045, -3.8408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.6731, device='cuda:0', dtype=torch.float64)
tensor([-2.0961, -3.2004, -3.4931, -3.5777, -3.8000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.9609, device='cuda:0', dtype=torch.float64)
tensor([-2.1767, -3.4352, -3.2850, -3.4607, -3.7659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.6404, device='cuda:0', dtype=torch.float64)
tensor([-2.1842, -3.6493, -3.1929, -3.4564, -3.7321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.0849, device='cuda:0', dtype=torch.float64)
tensor([-2.1026, -3.4005, -3.1401, -3.4695, -3.6764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.0569, device='cuda:0', dtype=torch.float64)
tensor([-1.9959, -3.0202, -3.0916, -3.4968, -3.5880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8659, device='cuda:0', dtype=torch.float64)
tensor([-1.9219, -2.8929, -3.0337, -3.5642, -3.5038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.7838, device='cuda:0', dtype=torch.float64)
tensor([-1.8887, -2.8951, -2.9721, -3.6119, -3.4560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.4567, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.9325, -2.9183, -3.6587, -3.4540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.6421, device='cuda:0', dtype=torch.float64)
tensor([-1.8836, -2.9914, -2.8803, -3.7594, -3.4756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.5777, device='cuda:0', dtype=torch.float64)
tensor([-1.8899, -3.0564, -2.8548, -3.8715, -3.4735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.3385, device='cuda:0', dtype=torch.float64)
tensor([-1.9000, -3.1020, -2.8360, -3.8923, -3.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.1180, device='cuda:0', dtype=torch.float64)
tensor([-1.8959, -3.0989, -2.8231, -3.8167, -3.4086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9395, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -3.0476, -2.8160, -3.7175, -3.4012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5194, device='cuda:0', dtype=torch.float64)
tensor([-1.8091, -2.9809, -2.8140, -3.6487, -3.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3521, device='cuda:0', dtype=torch.float64)
tensor([-1.7727, -2.9227, -2.8164, -3.6142, -3.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.4485, device='cuda:0', dtype=torch.float64)
tensor([-1.7546, -2.8818, -2.8221, -3.6013, -3.4663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.7820, device='cuda:0', dtype=torch.float64)
tensor([-1.7496, -2.8577, -2.8299, -3.6010, -3.4993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.7302, device='cuda:0', dtype=torch.float64)
tensor([-1.7528, -2.8366, -2.8376, -3.6059, -3.5230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1117, device='cuda:0', dtype=torch.float64)
tensor([-1.7610, -2.8076, -2.8425, -3.6046, -3.5293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3714, device='cuda:0', dtype=torch.float64)
tensor([-1.7722, -2.7750, -2.8418, -3.5989, -3.5142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3595, device='cuda:0', dtype=torch.float64)
tensor([-1.7846, -2.7518, -2.8340, -3.5971, -3.4805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1243, device='cuda:0', dtype=torch.float64)
tensor([-1.7966, -2.7437, -2.8201, -3.5984, -3.4366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6505, device='cuda:0', dtype=torch.float64)
tensor([-1.8075, -2.7477, -2.8033, -3.5992, -3.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9922, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.7597, -2.7851, -3.5985, -3.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4101, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.7770, -2.7643, -3.5925, -3.3172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0676, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7968, -2.7393, -3.5762, -3.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8770, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.8171, -2.7143, -3.5513, -3.2532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7691, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.8361, -2.6952, -3.5249, -3.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7396, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.8526, -2.6847, -3.5002, -3.2301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7346, device='cuda:0', dtype=torch.float64)
tensor([-1.8493, -2.8660, -2.6819, -3.4757, -3.2326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6291, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.8762, -2.6852, -3.4505, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4097, device='cuda:0', dtype=torch.float64)
tensor([-1.8520, -2.8830, -2.6931, -3.4261, -3.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1369, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.8853, -2.7045, -3.4051, -3.2645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9409, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.8824, -2.7184, -3.3898, -3.2778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8131, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.8744, -2.7340, -3.3809, -3.2909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7064, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.8634, -2.7499, -3.3784, -3.3035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6164, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.8516, -2.7650, -3.3807, -3.3160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5825, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.8411, -2.7781, -3.3860, -3.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5931, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.8324, -2.7882, -3.3921, -3.3395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5766, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.8257, -2.7950, -3.3975, -3.3490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5132, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.8205, -2.7982, -3.4011, -3.3559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4143, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.8160, -2.7979, -3.4020, -3.3596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3247, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.8117, -2.7948, -3.4000, -3.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2272, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.8068, -2.7901, -3.3956, -3.3589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1005, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.8012, -2.7853, -3.3902, -3.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9761, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.7948, -2.7817, -3.3847, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8726, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.7877, -2.7799, -3.3798, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7879, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.7801, -2.7807, -3.3757, -3.3549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7184, device='cuda:0', dtype=torch.float64)
tensor([-1.8143, -2.7724, -2.7839, -3.3726, -3.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6508, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.7649, -2.7894, -3.3707, -3.3563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6025, device='cuda:0', dtype=torch.float64)
tensor([-1.8063, -2.7582, -2.7965, -3.3697, -3.3571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5869, device='cuda:0', dtype=torch.float64)
tensor([-1.8032, -2.7530, -2.8044, -3.3689, -3.3581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5601, device='cuda:0', dtype=torch.float64)
tensor([-1.8014, -2.7497, -2.8119, -3.3675, -3.3595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5231, device='cuda:0', dtype=torch.float64)
tensor([-1.8014, -2.7489, -2.8185, -3.3648, -3.3615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4715, device='cuda:0', dtype=torch.float64)
tensor([-1.8032, -2.7506, -2.8237, -3.3603, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4054, device='cuda:0', dtype=torch.float64)
tensor([-1.8068, -2.7544, -2.8273, -3.3544, -3.3677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3304, device='cuda:0', dtype=torch.float64)
tensor([-1.8115, -2.7595, -2.8297, -3.3478, -3.3715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2789, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.7651, -2.8313, -3.3412, -3.3753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2727, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.7706, -2.8323, -3.3354, -3.3784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2909, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.7754, -2.8329, -3.3307, -3.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2885, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.7793, -2.8333, -3.3270, -3.3819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2555, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.7823, -2.8336, -3.3244, -3.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2030, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7843, -2.8337, -3.3228, -3.3811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1411, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.7852, -2.8337, -3.3222, -3.3794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0989, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.7854, -2.8336, -3.3223, -3.3768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1117, device='cuda:0', dtype=torch.float64)
tensor([-1.8449, -2.7849, -2.8336, -3.3229, -3.3737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1159, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.7838, -2.8337, -3.3236, -3.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1145, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.7824, -2.8339, -3.3239, -3.3673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0972, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.7809, -2.8344, -3.3238, -3.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0703, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.7792, -2.8352, -3.3230, -3.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0300, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7773, -2.8364, -3.3217, -3.3607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0007, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.7754, -2.8380, -3.3202, -3.3599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9642, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7735, -2.8400, -3.3187, -3.3597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9462, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.7715, -2.8423, -3.3174, -3.3603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9370, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.7698, -2.8447, -3.3163, -3.3614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9220, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.7685, -2.8469, -3.3151, -3.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9004, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.7675, -2.8487, -3.3139, -3.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8684, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.7670, -2.8500, -3.3129, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8446, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.7667, -2.8508, -3.3121, -3.3666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8344, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.7667, -2.8510, -3.3116, -3.3671], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8061, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.7670, -2.8506, -3.3112, -3.3672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.7674, -2.8497, -3.3108, -3.3667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7936, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.7680, -2.8483, -3.3106, -3.3658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7903, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.7684, -2.8468, -3.3105, -3.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7803, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.7687, -2.8452, -3.3103, -3.3635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7741, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.7688, -2.8438, -3.3102, -3.3625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7615, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7688, -2.8426, -3.3100, -3.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7567, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7688, -2.8416, -3.3095, -3.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7535, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7685, -2.8410, -3.3092, -3.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7409, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7683, -2.8407, -3.3086, -3.3625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7228, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7679, -2.8406, -3.3082, -3.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7091, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7676, -2.8406, -3.3078, -3.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6986, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7673, -2.8406, -3.3076, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6848, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.7669, -2.8407, -3.3074, -3.3655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6814, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7664, -2.8408, -3.3075, -3.3659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6815, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7660, -2.8408, -3.3077, -3.3661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6714, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7657, -2.8406, -3.3078, -3.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6628, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7654, -2.8402, -3.3080, -3.3656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6634, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7652, -2.8399, -3.3083, -3.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6525, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7649, -2.8397, -3.3090, -3.3642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6475, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7645, -2.8395, -3.3097, -3.3633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6414, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7642, -2.8394, -3.3104, -3.3626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6412, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7639, -2.8392, -3.3109, -3.3621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6303, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7636, -2.8392, -3.3113, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6284, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7634, -2.8391, -3.3114, -3.3618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6166, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7633, -2.8389, -3.3113, -3.3620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6072, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7634, -2.8385, -3.3108, -3.3624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6067, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7635, -2.8381, -3.3104, -3.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6008, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7637, -2.8379, -3.3102, -3.3630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5949, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.7639, -2.8376, -3.3102, -3.3632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5911, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7640, -2.8373, -3.3103, -3.3631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5849, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7642, -2.8371, -3.3103, -3.3629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5838, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7644, -2.8369, -3.3103, -3.3623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5831, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.7645, -2.8369, -3.3102, -3.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5761, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7644, -2.8371, -3.3102, -3.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5772, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7640, -2.8372, -3.3100, -3.3602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5666, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7636, -2.8374, -3.3096, -3.3595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5637, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7632, -2.8375, -3.3093, -3.3589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5628, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7628, -2.8376, -3.3091, -3.3584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5582, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7622, -2.8378, -3.3092, -3.3579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5548, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7617, -2.8380, -3.3095, -3.3575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5418, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7613, -2.8381, -3.3096, -3.3570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5508, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7610, -2.8381, -3.3096, -3.3566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5435, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7609, -2.8380, -3.3096, -3.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5502, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7606, -2.8379, -3.3098, -3.3557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5359, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7604, -2.8376, -3.3098, -3.3553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5350, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.7602, -2.8374, -3.3097, -3.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5364, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.7602, -2.8371, -3.3094, -3.3543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5332, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7602, -2.8368, -3.3090, -3.3538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5262, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7603, -2.8364, -3.3082, -3.3535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5306, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.7604, -2.8362, -3.3075, -3.3534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5206, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7605, -2.8360, -3.3069, -3.3532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5173, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.7605, -2.8359, -3.3066, -3.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5088, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.7605, -2.8359, -3.3062, -3.3529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5109, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7602, -2.8361, -3.3062, -3.3527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5050, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7598, -2.8366, -3.3063, -3.3526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5092, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7595, -2.8370, -3.3065, -3.3526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5143, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7592, -2.8374, -3.3065, -3.3525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5057, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7588, -2.8377, -3.3064, -3.3522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5046, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7586, -2.8377, -3.3062, -3.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5065, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7583, -2.8376, -3.3063, -3.3513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4937, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.7580, -2.8376, -3.3064, -3.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5002, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7579, -2.8373, -3.3062, -3.3501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5116, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7579, -2.8369, -3.3057, -3.3494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4926, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7579, -2.8365, -3.3052, -3.3488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4876, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7577, -2.8361, -3.3048, -3.3483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4999, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7575, -2.8359, -3.3043, -3.3478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4887, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7570, -2.8359, -3.3041, -3.3473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4842, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7564, -2.8360, -3.3041, -3.3471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4822, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7559, -2.8362, -3.3041, -3.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4798, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7555, -2.8363, -3.3037, -3.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4759, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7554, -2.8361, -3.3030, -3.3470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4792, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7555, -2.8358, -3.3026, -3.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4788, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7556, -2.8354, -3.3022, -3.3472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4822, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7559, -2.8352, -3.3024, -3.3471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7562, -2.8350, -3.3022, -3.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4717, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7567, -2.8345, -3.3015, -3.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4708, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7570, -2.8344, -3.3010, -3.3465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4685, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7573, -2.8342, -3.3005, -3.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4802, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7571, -2.8345, -3.3005, -3.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4698, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.7566, -2.8348, -3.3004, -3.3452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4573, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7560, -2.8350, -3.3001, -3.3446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4631, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7554, -2.8350, -3.2999, -3.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4556, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7552, -2.8348, -3.2996, -3.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4572, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7548, -2.8346, -3.2992, -3.3431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4579, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7543, -2.8344, -3.2993, -3.3427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4552, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7536, -2.8344, -3.2994, -3.3425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4540, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7532, -2.8343, -3.2993, -3.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4559, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7529, -2.8339, -3.2989, -3.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4564, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7528, -2.8337, -3.2986, -3.3422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4707, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7527, -2.8336, -3.2985, -3.3421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4581, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7525, -2.8335, -3.2981, -3.3419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4582, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7524, -2.8333, -3.2975, -3.3418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4487, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.7524, -2.8332, -3.2970, -3.3415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4450, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7523, -2.8331, -3.2967, -3.3411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4558, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7519, -2.8334, -3.2970, -3.3406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4423, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7515, -2.8335, -3.2973, -3.3401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4439, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7514, -2.8335, -3.2974, -3.3398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4490, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7514, -2.8330, -3.2971, -3.3394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4451, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7515, -2.8323, -3.2964, -3.3391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4425, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7517, -2.8315, -3.2957, -3.3387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4501, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7516, -2.8311, -3.2954, -3.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4425, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.7514, -2.8308, -3.2953, -3.3380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4514, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7514, -2.8308, -3.2947, -3.3379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4422, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7516, -2.8306, -3.2939, -3.3378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4428, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7519, -2.8305, -3.2934, -3.3377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4318, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7521, -2.8306, -3.2933, -3.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4440, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.7520, -2.8309, -3.2934, -3.3368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4486, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7517, -2.8313, -3.2942, -3.3362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4299, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7513, -2.8317, -3.2950, -3.3357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4316, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7512, -2.8315, -3.2952, -3.3353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4338, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7513, -2.8312, -3.2947, -3.3351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4453, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7512, -2.8309, -3.2942, -3.3349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4366, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7508, -2.8305, -3.2941, -3.3344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4328, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7504, -2.8302, -3.2941, -3.3341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4323, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7497, -2.8300, -3.2937, -3.3338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4345, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7492, -2.8295, -3.2927, -3.3335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4199, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7488, -2.8292, -3.2917, -3.3332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4403, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7485, -2.8293, -3.2910, -3.3328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4353, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7480, -2.8298, -3.2908, -3.3325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4229, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7476, -2.8301, -3.2907, -3.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4383, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7475, -2.8305, -3.2906, -3.3317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4238, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.7474, -2.8306, -3.2903, -3.3314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4339, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.7473, -2.8305, -3.2904, -3.3310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4377, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7473, -2.8305, -3.2908, -3.3305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4314, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7471, -2.8304, -3.2911, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4306, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7471, -2.8302, -3.2908, -3.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4205, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7470, -2.8298, -3.2901, -3.3304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4326, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7468, -2.8295, -3.2896, -3.3307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4462, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7465, -2.8294, -3.2891, -3.3308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4324, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7461, -2.8295, -3.2887, -3.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4308, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7460, -2.8294, -3.2882, -3.3307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4215, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7459, -2.8292, -3.2880, -3.3303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4499, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7454, -2.8293, -3.2887, -3.3298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4289, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.7447, -2.8293, -3.2893, -3.3289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4370, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7447, -2.8287, -3.2887, -3.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4245, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7456, -2.8273, -3.2871, -3.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4267, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7468, -2.8258, -3.2856, -3.3276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4300, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.7473, -2.8250, -3.2851, -3.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4281, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.7473, -2.8250, -3.2857, -3.3270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4394, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.7472, -2.8250, -3.2861, -3.3269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4236, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.7476, -2.8248, -3.2860, -3.3270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4284, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7478, -2.8247, -3.2855, -3.3273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4328, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7480, -2.8247, -3.2852, -3.3277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4115, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7480, -2.8247, -3.2847, -3.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4241, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7485, -2.8243, -3.2840, -3.3285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4191, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7485, -2.8241, -3.2837, -3.3283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4101, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.7482, -2.8240, -3.2839, -3.3278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4166, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.7477, -2.8240, -3.2844, -3.3272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4186, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7469, -2.8244, -3.2846, -3.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4119, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.7455, -2.8250, -3.2854, -3.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4147, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.7438, -2.8254, -3.2862, -3.3246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4201, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.7426, -2.8256, -3.2867, -3.3237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4179, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.7417, -2.8255, -3.2866, -3.3232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4215, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.7410, -2.8248, -3.2858, -3.3226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4154, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7406, -2.8239, -3.2852, -3.3221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4260, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7403, -2.8231, -3.2843, -3.3217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4214, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.7398, -2.8229, -3.2844, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4258, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7398, -2.8230, -3.2847, -3.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4210, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.7403, -2.8230, -3.2845, -3.3215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4290, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.7408, -2.8234, -3.2840, -3.3221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4353, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7408, -2.8243, -3.2837, -3.3222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4192, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7409, -2.8249, -3.2832, -3.3224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4158, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7411, -2.8251, -3.2830, -3.3223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4135, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7412, -2.8248, -3.2824, -3.3220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4154, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7414, -2.8241, -3.2822, -3.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4057, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7413, -2.8235, -3.2826, -3.3204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4291, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7411, -2.8233, -3.2833, -3.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4164, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.7416, -2.8226, -3.2829, -3.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4485, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7430, -2.8212, -3.2810, -3.3190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4059, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7446, -2.8198, -3.2788, -3.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4237, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7453, -2.8196, -3.2778, -3.3192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4195, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7451, -2.8200, -3.2782, -3.3188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4075, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7448, -2.8206, -3.2789, -3.3183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4140, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.7442, -2.8212, -3.2796, -3.3181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4155, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.7432, -2.8218, -3.2797, -3.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4209, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.7421, -2.8223, -3.2795, -3.3172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4183, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.7410, -2.8226, -3.2786, -3.3168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4265, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.7404, -2.8226, -3.2773, -3.3161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4127, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7399, -2.8226, -3.2768, -3.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4240, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.7392, -2.8228, -3.2773, -3.3145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4106, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7392, -2.8225, -3.2778, -3.3140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4048, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.7395, -2.8217, -3.2781, -3.3139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4098, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7403, -2.8208, -3.2778, -3.3143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4169, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7411, -2.8199, -3.2770, -3.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4144, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7419, -2.8196, -3.2766, -3.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4256, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7424, -2.8191, -3.2761, -3.3156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4319, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7425, -2.8185, -3.2758, -3.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4077, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7415, -2.8187, -3.2765, -3.3162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4236, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.7397, -2.8193, -3.2782, -3.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4187, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.7381, -2.8202, -3.2791, -3.3154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4239, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.7370, -2.8198, -3.2786, -3.3153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4216, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.7364, -2.8193, -3.2782, -3.3149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4204, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7361, -2.8188, -3.2782, -3.3143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4124, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7360, -2.8186, -3.2785, -3.3132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4139, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7365, -2.8181, -3.2782, -3.3126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4299, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.7371, -2.8174, -3.2771, -3.3121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4186, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7372, -2.8174, -3.2768, -3.3112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4247, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7370, -2.8179, -3.2770, -3.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4190, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7374, -2.8179, -3.2758, -3.3097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4206, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7379, -2.8176, -3.2737, -3.3094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4056, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7387, -2.8170, -3.2715, -3.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4161, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7394, -2.8166, -3.2705, -3.3088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4156, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7395, -2.8168, -3.2715, -3.3082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4081, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7391, -2.8172, -3.2732, -3.3076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4124, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7388, -2.8172, -3.2743, -3.3074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4113, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7387, -2.8167, -3.2745, -3.3071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4239, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7383, -2.8164, -3.2743, -3.3067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4345, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7376, -2.8161, -3.2733, -3.3066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4236, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7371, -2.8157, -3.2712, -3.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4029, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.7365, -2.8156, -3.2696, -3.3064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4331, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7364, -2.8150, -3.2681, -3.3066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4258, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7361, -2.8144, -3.2679, -3.3066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4710, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7351, -2.8150, -3.2698, -3.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4099, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.7340, -2.8158, -3.2719, -3.3055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4095, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.7335, -2.8157, -3.2720, -3.3057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4420, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.7342, -2.8146, -3.2704, -3.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4219, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7344, -2.8139, -3.2691, -3.3078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4375, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.7338, -2.8143, -3.2694, -3.3078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4313, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.7333, -2.8147, -3.2692, -3.3074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4634, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7343, -2.8140, -3.2669, -3.3073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4467, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.7359, -2.8128, -3.2648, -3.3075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7369, -2.8125, -3.2645, -3.3073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4924, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7363, -2.8132, -3.2663, -3.3067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4025, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7362, -2.8132, -3.2680, -3.3061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5049, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.7371, -2.8117, -3.2670, -3.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4087, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.7381, -2.8102, -3.2664, -3.3069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4493, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7373, -2.8102, -3.2673, -3.3066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4154, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.7357, -2.8111, -3.2690, -3.3059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4131, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7344, -2.8117, -3.2701, -3.3056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4402, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7339, -2.8114, -3.2692, -3.3056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4385, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7330, -2.8116, -3.2685, -3.3052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4282, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7317, -2.8123, -3.2681, -3.3043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4066, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.7312, -2.8127, -3.2676, -3.3034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4089, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7309, -2.8128, -3.2674, -3.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4143, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7311, -2.8124, -3.2670, -3.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4178, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7324, -2.8117, -3.2658, -3.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4290, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7336, -2.8109, -3.2647, -3.3013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4431, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7336, -2.8108, -3.2646, -3.3004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4146, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.7337, -2.8108, -3.2648, -3.2995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4277, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7335, -2.8106, -3.2642, -3.2989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4313, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7337, -2.8100, -3.2633, -3.2983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4393, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.7331, -2.8103, -3.2636, -3.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4187, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7325, -2.8111, -3.2646, -3.2968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4103, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7326, -2.8114, -3.2651, -3.2967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4223, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7332, -2.8110, -3.2650, -3.2973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4058, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.7335, -2.8107, -3.2643, -3.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4225, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7339, -2.8106, -3.2635, -3.2992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3950, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7339, -2.8105, -3.2631, -3.2995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4148, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7337, -2.8105, -3.2637, -3.2993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.3999, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.7341, -2.8100, -3.2644, -3.2994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4254, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.7346, -2.8088, -3.2638, -3.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4184, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7350, -2.8076, -3.2640, -3.3002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4306, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.7343, -2.8074, -3.2654, -3.3001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4232, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.7339, -2.8070, -3.2667, -3.2999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4265, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7335, -2.8064, -3.2669, -3.2998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4330, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7327, -2.8062, -3.2653, -3.2997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4309, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7314, -2.8068, -3.2637, -3.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4593, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.7288, -2.8084, -3.2630, -3.2978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4387, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.7272, -2.8092, -3.2612, -3.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4277, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7265, -2.8096, -3.2584, -3.2979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4103, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7262, -2.8099, -3.2566, -3.2979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4562, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.7252, -2.8107, -3.2580, -3.2968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4255, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.7242, -2.8116, -3.2608, -3.2956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4468, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.7244, -2.8109, -3.2618, -3.2953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4583, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.7258, -2.8088, -3.2609, -3.2952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4778, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.7266, -2.8079, -3.2607, -3.2946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4337, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.7271, -2.8073, -3.2612, -3.2937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4604, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7288, -2.8056, -3.2595, -3.2936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4449, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.7310, -2.8034, -3.2568, -3.2939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4139, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.7325, -2.8020, -3.2560, -3.2935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4384, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.7327, -2.8027, -3.2581, -3.2922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4439, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.7319, -2.8045, -3.2598, -3.2909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4831, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7321, -2.8054, -3.2591, -3.2910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4294, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7324, -2.8058, -3.2568, -3.2915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4280, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.7322, -2.8058, -3.2550, -3.2916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4478, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7307, -2.8067, -3.2552, -3.2910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4258, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.7288, -2.8078, -3.2574, -3.2895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4453, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.7284, -2.8075, -3.2572, -3.2889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4164, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.7283, -2.8065, -3.2568, -3.2885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4244, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.7279, -2.8057, -3.2569, -3.2881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4732, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.7266, -2.8051, -3.2570, -3.2873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4307, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.7261, -2.8037, -3.2552, -3.2876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4669, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7258, -2.8024, -3.2526, -3.2885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4536, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7243, -2.8024, -3.2525, -3.2899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4572, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.7231, -2.8037, -3.2535, -3.2911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4092, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.7229, -2.8047, -3.2547, -3.2923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4474, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.7247, -2.8044, -3.2538, -3.2940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4720, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7277, -2.8033, -3.2524, -3.2950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4732, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7297, -2.8032, -3.2516, -3.2945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4064, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.7308, -2.8031, -3.2524, -3.2934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4361, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7310, -2.8025, -3.2529, -3.2918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4169, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7303, -2.8016, -3.2541, -3.2898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4350, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.7289, -2.8011, -3.2561, -3.2880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4502, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.7267, -2.8013, -3.2577, -3.2869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4394, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7251, -2.8007, -3.2572, -3.2864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4310, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7244, -2.8003, -3.2553, -3.2865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4072, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7237, -2.8005, -3.2537, -3.2868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4391, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7237, -2.8013, -3.2539, -3.2865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4332, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7234, -2.8024, -3.2557, -3.2856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4488, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7239, -2.8020, -3.2549, -3.2854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4514, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7249, -2.8010, -3.2540, -3.2859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4855, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7252, -2.8006, -3.2537, -3.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4301, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.7256, -2.8003, -3.2549, -3.2854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4354, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.7262, -2.7989, -3.2539, -3.2851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4261, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.7277, -2.7970, -3.2519, -3.2854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4365, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.7280, -2.7965, -3.2518, -3.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4165, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7271, -2.7974, -3.2533, -3.2834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4343, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.7267, -2.7985, -3.2541, -3.2823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4805, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7268, -2.7990, -3.2506, -3.2823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4316, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7270, -2.7997, -3.2468, -3.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4376, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7261, -2.8011, -3.2454, -3.2823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4312, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.7255, -2.8021, -3.2452, -3.2822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4366, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7258, -2.8025, -3.2453, -3.2823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4170, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7263, -2.8019, -3.2446, -3.2829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4661, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.7259, -2.8023, -3.2454, -3.2832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4458, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.7245, -2.8029, -3.2467, -3.2832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4204, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.7234, -2.8030, -3.2464, -3.2838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4048, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.7228, -2.8023, -3.2444, -3.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4043, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.7222, -2.8019, -3.2431, -3.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4506, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7218, -2.8016, -3.2440, -3.2835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4581, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.7218, -2.8008, -3.2454, -3.2825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4655, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7227, -2.7988, -3.2442, -3.2823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4276, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7240, -2.7969, -3.2413, -3.2827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4374, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.7240, -2.7967, -3.2398, -3.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4304, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7239, -2.7972, -3.2392, -3.2819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4113, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.7232, -2.7979, -3.2407, -3.2813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4034, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.7222, -2.7992, -3.2424, -3.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4117, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.7210, -2.8004, -3.2447, -3.2804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4179, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.7199, -2.8006, -3.2460, -3.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4024, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.7197, -2.7998, -3.2463, -3.2809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4459, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.7193, -2.7994, -3.2467, -3.2812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4374, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.7203, -2.7977, -3.2468, -3.2810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4579, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.7222, -2.7955, -3.2467, -3.2801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4763, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7228, -2.7945, -3.2478, -3.2776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4548, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.7233, -2.7950, -3.2491, -3.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5004, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7252, -2.7939, -3.2461, -3.2742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4784, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.7278, -2.7918, -3.2407, -3.2753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5044, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7281, -2.7915, -3.2377, -3.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5372, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7267, -2.7933, -3.2387, -3.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4290, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7249, -2.7947, -3.2403, -3.2763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5752, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7257, -2.7927, -3.2385, -3.2778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4643, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.7248, -2.7922, -3.2401, -3.2777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5224, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.7214, -2.7938, -3.2436, -3.2759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4648, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.7193, -2.7947, -3.2453, -3.2743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5386, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7193, -2.7934, -3.2435, -3.2748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4472, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7194, -2.7934, -3.2427, -3.2749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5492, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.7175, -2.7956, -3.2451, -3.2733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4216, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.7167, -2.7975, -3.2485, -3.2723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5474, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.7186, -2.7965, -3.2466, -3.2739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4117, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.7210, -2.7946, -3.2439, -3.2756], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5548, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.7212, -2.7944, -3.2431, -3.2759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4344, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.7224, -2.7929, -3.2408, -3.2768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4730, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.7245, -2.7902, -3.2364, -3.2786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4263, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7256, -2.7879, -3.2337, -3.2795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4893, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7245, -2.7878, -3.2344, -3.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4103, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7221, -2.7888, -3.2363, -3.2783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4673, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7210, -2.7889, -3.2357, -3.2782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4653, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.7202, -2.7893, -3.2359, -3.2775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5228, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7174, -2.7921, -3.2397, -3.2747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4211, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.7148, -2.7945, -3.2430, -3.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4995, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.7149, -2.7938, -3.2420, -3.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4637, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.7147, -2.7937, -3.2406, -3.2725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4802, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.7141, -2.7937, -3.2394, -3.2720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4423, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.7143, -2.7938, -3.2386, -3.2713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5471, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7170, -2.7912, -3.2355, -3.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4748, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.7199, -2.7880, -3.2321, -3.2726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4473, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.7211, -2.7866, -3.2305, -3.2721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4386, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.7208, -2.7870, -3.2321, -3.2707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4669, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.7204, -2.7873, -3.2339, -3.2696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4195, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.7198, -2.7893, -3.2377, -3.2676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4740, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.7175, -2.7939, -3.2429, -3.2654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4778, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.7157, -2.7971, -3.2449, -3.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4678, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.7152, -2.7989, -3.2443, -3.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4417, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.7153, -2.7999, -3.2421, -3.2668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4244, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.7153, -2.7997, -3.2405, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4354, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.7163, -2.7989, -3.2394, -3.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4527, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7169, -2.7971, -3.2381, -3.2688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4242, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.7179, -2.7945, -3.2371, -3.2692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4189, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.7192, -2.7913, -3.2348, -3.2697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4542, device='cuda:0', dtype=torch.float64)
tensor([-1.8381, -2.7197, -2.7897, -3.2339, -3.2699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4602, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.7190, -2.7889, -3.2339, -3.2699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4280, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.7177, -2.7895, -3.2338, -3.2694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4487, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.7164, -2.7903, -3.2331, -3.2699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4130, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7140, -2.7925, -3.2336, -3.2698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4277, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.7112, -2.7958, -3.2360, -3.2689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4871, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.7106, -2.7970, -3.2374, -3.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4595, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.7120, -2.7967, -3.2366, -3.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5352, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.7129, -2.7965, -3.2355, -3.2697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4075, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.7148, -2.7949, -3.2346, -3.2700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5234, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7185, -2.7907, -3.2310, -3.2719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4168, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.7217, -2.7877, -3.2288, -3.2732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5143, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7213, -2.7879, -3.2292, -3.2727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4375, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7196, -2.7893, -3.2310, -3.2715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5052, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7182, -2.7891, -3.2311, -3.2710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4502, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.7174, -2.7879, -3.2303, -3.2703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4870, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.7152, -2.7886, -3.2319, -3.2679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4060, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.7139, -2.7899, -3.2329, -3.2654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4651, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.7144, -2.7905, -3.2330, -3.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4371, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.7150, -2.7908, -3.2333, -3.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4719, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.7143, -2.7918, -3.2348, -3.2597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4430, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.7141, -2.7918, -3.2337, -3.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4676, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.7143, -2.7915, -3.2307, -3.2582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4176, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.7139, -2.7911, -3.2277, -3.2592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4976, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.7140, -2.7908, -3.2262, -3.2596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4149, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7148, -2.7897, -3.2260, -3.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4661, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.7153, -2.7876, -3.2261, -3.2620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4846, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.7159, -2.7856, -3.2286, -3.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4290, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.7150, -2.7852, -3.2317, -3.2629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4974, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.7139, -2.7850, -3.2322, -3.2635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4589, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.7139, -2.7846, -3.2305, -3.2649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4442, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.7137, -2.7851, -3.2283, -3.2656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4393, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.7132, -2.7860, -3.2268, -3.2653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4480, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.7125, -2.7873, -3.2275, -3.2646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4604, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.7127, -2.7882, -3.2290, -3.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4476, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.7141, -2.7879, -3.2294, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4625, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7165, -2.7851, -3.2269, -3.2643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4581, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.7185, -2.7829, -3.2244, -3.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4634, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7181, -2.7825, -3.2245, -3.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4666, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.7171, -2.7819, -3.2249, -3.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5211, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.7173, -2.7801, -3.2238, -3.2655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4862, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.7165, -2.7810, -3.2259, -3.2646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4829, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.7162, -2.7831, -3.2277, -3.2633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4939, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.7170, -2.7852, -3.2284, -3.2624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5480, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.7174, -2.7868, -3.2270, -3.2623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4986, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.7156, -2.7888, -3.2269, -3.2607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4691, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.7123, -2.7909, -3.2281, -3.2587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5187, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.7101, -2.7900, -3.2264, -3.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4455, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.7087, -2.7873, -3.2256, -3.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5533, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.7080, -2.7849, -3.2257, -3.2589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4613, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.7071, -2.7841, -3.2272, -3.2580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4397, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.7056, -2.7841, -3.2281, -3.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4735, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.7038, -2.7852, -3.2291, -3.2558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4501, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.7048, -2.7848, -3.2282, -3.2543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4160, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.7063, -2.7848, -3.2265, -3.2533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4634, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7085, -2.7843, -3.2249, -3.2521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4516, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.7111, -2.7829, -3.2230, -3.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4809, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.7135, -2.7811, -3.2224, -3.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4713, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.7147, -2.7801, -3.2235, -3.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4960, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7140, -2.7808, -3.2280, -3.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4766, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.7128, -2.7813, -3.2304, -3.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4849, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.7117, -2.7810, -3.2293, -3.2512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4473, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.7116, -2.7804, -3.2252, -3.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4477, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.7114, -2.7802, -3.2222, -3.2537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5283, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.7130, -2.7795, -3.2194, -3.2560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4596, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.7147, -2.7801, -3.2200, -3.2559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5079, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.7136, -2.7831, -3.2239, -3.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4694, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.7128, -2.7851, -3.2247, -3.2521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4900, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.7115, -2.7861, -3.2218, -3.2506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4899, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.7105, -2.7860, -3.2183, -3.2503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4488, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7090, -2.7852, -3.2151, -3.2504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5257, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7083, -2.7839, -3.2147, -3.2516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5069, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.7097, -2.7817, -3.2166, -3.2530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5178, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.7096, -2.7822, -3.2218, -3.2526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4589, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.7099, -2.7840, -3.2263, -3.2514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5471, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.7121, -2.7833, -3.2234, -3.2520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4595, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.7145, -2.7825, -3.2186, -3.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4903, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.7159, -2.7834, -3.2166, -3.2525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4746, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.7159, -2.7843, -3.2160, -3.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5324, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.7175, -2.7834, -3.2161, -3.2551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4573, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.7185, -2.7826, -3.2162, -3.2575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5092, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.7177, -2.7825, -3.2162, -3.2583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4788, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.7164, -2.7822, -3.2162, -3.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4920, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.7138, -2.7826, -3.2147, -3.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5170, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.7086, -2.7833, -3.2159, -3.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5151, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.7012, -2.7867, -3.2206, -3.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4833, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6977, -2.7869, -3.2234, -3.2484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5628, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6981, -2.7848, -3.2217, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5186, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7010, -2.7823, -3.2185, -3.2459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5015, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7050, -2.7810, -3.2161, -3.2453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5449, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.7085, -2.7792, -3.2134, -3.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4691, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.7099, -2.7777, -3.2114, -3.2471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4982, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.7077, -2.7787, -3.2133, -3.2465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5059, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.7066, -2.7781, -3.2131, -3.2472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5162, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.7062, -2.7767, -3.2120, -3.2490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4537, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7061, -2.7774, -3.2137, -3.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4719, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7052, -2.7796, -3.2171, -3.2497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5268, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.7036, -2.7832, -3.2224, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5126, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.7017, -2.7864, -3.2273, -3.2462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4448, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.7012, -2.7887, -3.2280, -3.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5385, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.7051, -2.7871, -3.2231, -3.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5105, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.7094, -2.7838, -3.2166, -3.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4384, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.7133, -2.7788, -3.2085, -3.2523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5027, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7151, -2.7743, -3.2033, -3.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5759, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.7136, -2.7733, -3.2041, -3.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4559, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.7106, -2.7751, -3.2083, -3.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5745, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7102, -2.7742, -3.2097, -3.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5118, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7108, -2.7730, -3.2103, -3.2502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5010, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.7113, -2.7728, -3.2100, -3.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4991, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.7120, -2.7738, -3.2092, -3.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5095, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.7098, -2.7766, -3.2104, -3.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5281, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.7062, -2.7787, -3.2117, -3.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.7038, -2.7792, -3.2123, -3.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5586, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.7040, -2.7781, -3.2104, -3.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4937, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.7034, -2.7774, -3.2065, -3.2424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4698, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.7027, -2.7766, -3.2052, -3.2435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5087, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.7009, -2.7763, -3.2048, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5276, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6995, -2.7779, -3.2089, -3.2427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5245, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6979, -2.7798, -3.2144, -3.2416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5462, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6997, -2.7793, -3.2164, -3.2418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5642, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.7045, -2.7765, -3.2147, -3.2443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5021, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7063, -2.7754, -3.2153, -3.2455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5354, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7075, -2.7737, -3.2149, -3.2475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4561, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.7062, -2.7753, -3.2169, -3.2478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4936, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.7044, -2.7783, -3.2176, -3.2470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5501, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.7055, -2.7783, -3.2123, -3.2481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4604, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.7086, -2.7778, -3.2075, -3.2485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5332, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.7100, -2.7794, -3.2078, -3.2446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5104, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.7123, -2.7788, -3.2091, -3.2411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4923, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.7129, -2.7771, -3.2121, -3.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5394, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.7110, -2.7769, -3.2156, -3.2330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4838, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.7083, -2.7774, -3.2163, -3.2298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5787, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7080, -2.7750, -3.2110, -3.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5030, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.7055, -2.7743, -3.2070, -3.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5216, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7005, -2.7769, -3.2076, -3.2309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4790, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6972, -2.7794, -3.2094, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5298, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6975, -2.7799, -3.2100, -3.2339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4608, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.7002, -2.7779, -3.2098, -3.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5223, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.7037, -2.7754, -3.2116, -3.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5028, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.7080, -2.7717, -3.2139, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5159, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.7127, -2.7674, -3.2131, -3.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4899, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.7142, -2.7663, -3.2113, -3.2460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5057, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.7126, -2.7666, -3.2112, -3.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5025, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.7104, -2.7682, -3.2109, -3.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4738, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.7065, -2.7699, -3.2114, -3.2432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5225, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.7035, -2.7708, -3.2108, -3.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4743, device='cuda:0', dtype=torch.float64)
tensor([-1.8275, -2.7018, -2.7699, -3.2092, -3.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5556, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6997, -2.7705, -3.2113, -3.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4985, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6994, -2.7702, -3.2112, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5484, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.7022, -2.7693, -3.2095, -3.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5311, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.7047, -2.7707, -3.2077, -3.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5023, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.7081, -2.7710, -3.2032, -3.2390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4815, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.7101, -2.7702, -3.2002, -3.2414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5457, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.7100, -2.7691, -3.2010, -3.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5455, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7041, -2.7703, -3.2056, -3.2405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4923, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.7018, -2.7694, -3.2063, -3.2403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7123, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.7026, -2.7653, -3.2001, -3.2429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6666, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.7011, -2.7666, -3.1960, -3.2415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4740, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7001, -2.7701, -3.1965, -3.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5884, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.7007, -2.7718, -3.1947, -3.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4868, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7021, -2.7735, -3.1971, -3.2395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6239, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6998, -2.7782, -3.2012, -3.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5271, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.7002, -2.7810, -3.2014, -3.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5706, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.7014, -2.7817, -3.1966, -3.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4648, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.7003, -2.7824, -3.1955, -3.2357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6377, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6956, -2.7847, -3.1997, -3.2320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4742, device='cuda:0', dtype=torch.float64)
tensor([-1.8245, -2.6940, -2.7836, -3.2026, -3.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4822, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6957, -2.7786, -3.2020, -3.2290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5700, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6996, -2.7749, -3.2042, -3.2287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5794, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.7009, -2.7744, -3.2086, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6005, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.7043, -2.7718, -3.2062, -3.2278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5534, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.7083, -2.7698, -3.2012, -3.2304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6485, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.7061, -2.7733, -3.1982, -3.2303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6141, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7054, -2.7755, -3.1937, -3.2312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6742, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.7076, -2.7738, -3.1898, -3.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6772, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.7044, -2.7748, -3.1919, -3.2323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5923, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.7000, -2.7766, -3.1977, -3.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6694, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6990, -2.7756, -3.1989, -3.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5471, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7001, -2.7730, -3.1985, -3.2326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6952, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6970, -2.7745, -3.2002, -3.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5125, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6963, -2.7760, -3.2010, -3.2310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6602, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6978, -2.7746, -3.1966, -3.2331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5297, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.7012, -2.7724, -3.1965, -3.2359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6856, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.7028, -2.7712, -3.1969, -3.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5189, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.7052, -2.7702, -3.1980, -3.2369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8119, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7094, -2.7664, -3.1911, -3.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6359, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.7059, -2.7678, -3.1917, -3.2394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7234, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6971, -2.7746, -3.1996, -3.2355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6036, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6911, -2.7782, -3.2026, -3.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4792, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6876, -2.7792, -3.2041, -3.2358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6158, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6845, -2.7812, -3.2068, -3.2345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4856, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6858, -2.7778, -3.2053, -3.2349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5275, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6909, -2.7722, -3.2003, -3.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5373, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6965, -2.7682, -3.1980, -3.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5997, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.7015, -2.7667, -3.1966, -3.2345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5675, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.7080, -2.7641, -3.1927, -3.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5189, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.7101, -2.7656, -3.1924, -3.2305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4618, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.7091, -2.7679, -3.1940, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5164, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.7069, -2.7682, -3.1953, -3.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4554, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.7038, -2.7679, -3.1966, -3.2237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5991, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6968, -2.7695, -3.1989, -3.2217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6264, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6943, -2.7671, -3.1949, -3.2233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5437, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6936, -2.7661, -3.1925, -3.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6150, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6907, -2.7680, -3.1966, -3.2243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5875, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6914, -2.7689, -3.1981, -3.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5667, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6953, -2.7677, -3.1955, -3.2238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5258, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.7005, -2.7669, -3.1905, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5051, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7041, -2.7671, -3.1877, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5363, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.7050, -2.7685, -3.1887, -3.2288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4678, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.7033, -2.7707, -3.1914, -3.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6988, -2.7726, -3.1931, -3.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4957, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6955, -2.7728, -3.1906, -3.2262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5279, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6934, -2.7717, -3.1879, -3.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5187, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6930, -2.7708, -3.1883, -3.2257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4714, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6941, -2.7699, -3.1905, -3.2245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5369, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6972, -2.7673, -3.1904, -3.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4805, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6989, -2.7658, -3.1897, -3.2263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4795, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.6975, -2.7650, -3.1887, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4808, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6952, -2.7644, -3.1885, -3.2271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5723, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6926, -2.7626, -3.1888, -3.2262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5531, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6916, -2.7615, -3.1915, -3.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5533, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6936, -2.7592, -3.1943, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6780, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6966, -2.7582, -3.1951, -3.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5447, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7009, -2.7577, -3.1926, -3.2191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5915, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.7024, -2.7587, -3.1889, -3.2202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5297, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.7010, -2.7618, -3.1885, -3.2206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5436, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6987, -2.7657, -3.1922, -3.2209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5872, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.7007, -2.7675, -3.1924, -3.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5770, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.7068, -2.7660, -3.1881, -3.2290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5295, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.7097, -2.7667, -3.1881, -3.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6839, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.7048, -2.7733, -3.1946, -3.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5285, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6974, -2.7805, -3.1990, -3.2261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6246, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6920, -2.7833, -3.1978, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6540, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6852, -2.7863, -3.1972, -3.2259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4913, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6823, -2.7868, -3.1981, -3.2254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5597, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6849, -2.7826, -3.1949, -3.2265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5041, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6885, -2.7789, -3.1931, -3.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6543, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6889, -2.7793, -3.1971, -3.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6980, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6943, -2.7751, -3.1926, -3.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5237, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.7019, -2.7705, -3.1879, -3.2302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6888, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.7025, -2.7700, -3.1869, -3.2283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5905, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.7011, -2.7709, -3.1893, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7695, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.7034, -2.7660, -3.1829, -3.2249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4798, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.7037, -2.7630, -3.1812, -3.2247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8261, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6952, -2.7664, -3.1862, -3.2181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5544, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6864, -2.7705, -3.1907, -3.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7885, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.6835, -2.7694, -3.1857, -3.2143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8198, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6815, -2.7689, -3.1856, -3.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5663, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6824, -2.7687, -3.1871, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6622, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6898, -2.7637, -3.1835, -3.2192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5696, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6935, -2.7619, -3.1858, -3.2213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7015, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6922, -2.7650, -3.1936, -3.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5690, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6915, -2.7649, -3.1932, -3.2205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6504, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6943, -2.7612, -3.1858, -3.2227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5129, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6942, -2.7623, -3.1799, -3.2230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5713, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6935, -2.7663, -3.1773, -3.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5939, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6945, -2.7680, -3.1759, -3.2228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5576, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6966, -2.7682, -3.1759, -3.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6951, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.7013, -2.7656, -3.1773, -3.2245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5017, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.7058, -2.7626, -3.1815, -3.2245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6240, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.7078, -2.7585, -3.1833, -3.2258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6348, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.7029, -2.7580, -3.1883, -3.2242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5647, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6949, -2.7592, -3.1909, -3.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5967, device='cuda:0', dtype=torch.float64)
tensor([-1.8253, -2.6897, -2.7583, -3.1893, -3.2227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4995, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6850, -2.7589, -3.1854, -3.2225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5636, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6823, -2.7587, -3.1825, -3.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6195, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6825, -2.7592, -3.1806, -3.2200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5294, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6851, -2.7597, -3.1773, -3.2189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5944, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6861, -2.7615, -3.1755, -3.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5269, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6891, -2.7645, -3.1767, -3.2159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6211, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6953, -2.7645, -3.1772, -3.2168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6339, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6978, -2.7646, -3.1821, -3.2164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5697, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6994, -2.7648, -3.1888, -3.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5804, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6996, -2.7646, -3.1938, -3.2155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5577, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6981, -2.7639, -3.1927, -3.2160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5579, device='cuda:0', dtype=torch.float64)
tensor([-1.8273, -2.6964, -2.7616, -3.1880, -3.2172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5928, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6899, -2.7627, -3.1863, -3.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4801, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6842, -2.7649, -3.1850, -3.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5721, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6833, -2.7649, -3.1832, -3.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5303, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6810, -2.7671, -3.1848, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5652, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6810, -2.7672, -3.1864, -3.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7236, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6875, -2.7605, -3.1765, -3.2133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6720, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6904, -2.7577, -3.1701, -3.2179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6113, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6922, -2.7581, -3.1693, -3.2201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5801, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6922, -2.7582, -3.1692, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5412, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6920, -2.7595, -3.1719, -3.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4902, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6923, -2.7614, -3.1737, -3.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5713, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6935, -2.7638, -3.1764, -3.2225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5221, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6928, -2.7663, -3.1799, -3.2216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6053, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6916, -2.7683, -3.1844, -3.2191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6372, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6892, -2.7680, -3.1848, -3.2172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5455, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6836, -2.7683, -3.1866, -3.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5890, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.6819, -2.7660, -3.1846, -3.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4867, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6824, -2.7638, -3.1840, -3.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5669, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6848, -2.7621, -3.1834, -3.2117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5162, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6875, -2.7596, -3.1814, -3.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5393, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6908, -2.7576, -3.1807, -3.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6452, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6904, -2.7574, -3.1811, -3.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5808, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6918, -2.7565, -3.1794, -3.2126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5738, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6929, -2.7564, -3.1773, -3.2167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6881, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6896, -2.7622, -3.1798, -3.2159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6519, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6899, -2.7669, -3.1810, -3.2151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5994, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6965, -2.7653, -3.1755, -3.2157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4988, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6999, -2.7627, -3.1699, -3.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7010, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6972, -2.7621, -3.1690, -3.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7789, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6966, -2.7560, -3.1622, -3.2139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6122, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6928, -2.7534, -3.1606, -3.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6239, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6830, -2.7564, -3.1677, -3.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5868, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6782, -2.7584, -3.1736, -3.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6330, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6791, -2.7584, -3.1767, -3.2089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6939, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6839, -2.7583, -3.1751, -3.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5200, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6868, -2.7604, -3.1757, -3.2089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6806, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6886, -2.7621, -3.1756, -3.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6329, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6865, -2.7656, -3.1811, -3.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7568, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6790, -2.7730, -3.1924, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6904, device='cuda:0', dtype=torch.float64)
tensor([-1.8136, -2.6774, -2.7747, -3.1951, -3.1973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8971, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6859, -2.7665, -3.1850, -3.2037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8721, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6891, -2.7623, -3.1733, -3.2051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5660, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6883, -2.7607, -3.1711, -3.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8620, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6900, -2.7571, -3.1678, -3.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6362, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6905, -2.7567, -3.1740, -3.2090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8994, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6884, -2.7610, -3.1782, -3.2073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7256, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6956, -2.7587, -3.1766, -3.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5057, device='cuda:0', dtype=torch.float64)
tensor([-1.8500, -2.7035, -2.7559, -3.1733, -3.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7856, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.6986, -2.7608, -3.1764, -3.2105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5348, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6891, -2.7651, -3.1810, -3.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7143, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6829, -2.7642, -3.1819, -3.2061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6792, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6784, -2.7639, -3.1783, -3.2049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6294, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6758, -2.7634, -3.1729, -3.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5972, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6764, -2.7602, -3.1679, -3.2079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6332, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6780, -2.7567, -3.1653, -3.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7086, device='cuda:0', dtype=torch.float64)
tensor([-1.8263, -2.6749, -2.7590, -3.1688, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7497, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6765, -2.7575, -3.1667, -3.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8098, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6865, -2.7505, -3.1605, -3.2152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9257, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6854, -2.7544, -3.1613, -3.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6543, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6842, -2.7587, -3.1673, -3.2133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8450, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6857, -2.7578, -3.1692, -3.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7809, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6833, -2.7599, -3.1734, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6657, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6834, -2.7599, -3.1738, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8889, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.6907, -2.7515, -3.1588, -3.2078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4880, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6958, -2.7464, -3.1487, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7800, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6893, -2.7521, -3.1539, -3.2045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6816, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6850, -2.7560, -3.1603, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5522, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6811, -2.7606, -3.1681, -3.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6518, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6782, -2.7629, -3.1723, -3.2026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6114, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6782, -2.7626, -3.1751, -3.2038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6066, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6806, -2.7576, -3.1714, -3.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7044, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6838, -2.7516, -3.1672, -3.2108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7675, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6801, -2.7529, -3.1705, -3.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6487, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6814, -2.7518, -3.1741, -3.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7034, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6849, -2.7491, -3.1725, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6255, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6842, -2.7523, -3.1758, -3.2102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6331, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6777, -2.7627, -3.1842, -3.2058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6378, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.6772, -2.7674, -3.1828, -3.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5003, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.6779, -2.7688, -3.1820, -3.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6753, device='cuda:0', dtype=torch.float64)
tensor([-1.8103, -2.6763, -2.7693, -3.1804, -3.2053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5759, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6778, -2.7668, -3.1772, -3.2051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5431, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6836, -2.7588, -3.1746, -3.2075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6260, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6851, -2.7555, -3.1741, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5689, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6829, -2.7548, -3.1708, -3.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5952, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.6836, -2.7506, -3.1621, -3.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5755, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6870, -2.7479, -3.1542, -3.2074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6743, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6833, -2.7537, -3.1564, -3.2057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7188, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6809, -2.7580, -3.1582, -3.2083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5845, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6828, -2.7605, -3.1650, -3.2088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7467, device='cuda:0', dtype=torch.float64)
tensor([-1.8161, -2.6811, -2.7668, -3.1726, -3.2058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8170, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6839, -2.7663, -3.1693, -3.2084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5317, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6849, -2.7640, -3.1640, -3.2123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8959, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6772, -2.7680, -3.1657, -3.2095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8609, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6756, -2.7656, -3.1632, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5916, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6801, -2.7599, -3.1658, -3.2128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8987, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6813, -2.7579, -3.1671, -3.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6045, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6830, -2.7564, -3.1710, -3.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9115, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6902, -2.7494, -3.1655, -3.2104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8361, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6877, -2.7534, -3.1642, -3.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7334, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6803, -2.7624, -3.1687, -3.1955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0015, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6801, -2.7594, -3.1611, -3.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6765, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6798, -2.7570, -3.1629, -3.1948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6635, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6783, -2.7550, -3.1676, -3.1921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7316, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6816, -2.7485, -3.1706, -3.1961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6601, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6855, -2.7414, -3.1750, -3.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6842, device='cuda:0', dtype=torch.float64)
tensor([-1.8321, -2.6821, -2.7439, -3.1815, -3.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6484, device='cuda:0', dtype=torch.float64)
tensor([-1.8286, -2.6817, -2.7483, -3.1796, -3.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7843, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6882, -2.7512, -3.1736, -3.1990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7435, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6870, -2.7615, -3.1697, -3.1963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.4831, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6840, -2.7689, -3.1689, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7989, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6823, -2.7685, -3.1632, -3.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6631, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6791, -2.7689, -3.1638, -3.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7001, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6703, -2.7725, -3.1672, -3.1976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7874, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6709, -2.7690, -3.1639, -3.1992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5743, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6766, -2.7623, -3.1572, -3.2029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7720, device='cuda:0', dtype=torch.float64)
tensor([-1.8316, -2.6742, -2.7632, -3.1611, -3.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6015, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6708, -2.7651, -3.1665, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6543, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6722, -2.7637, -3.1632, -3.2027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-1.8279, -2.6726, -2.7648, -3.1630, -3.2034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6170, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6766, -2.7654, -3.1597, -3.2043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6174, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6815, -2.7646, -3.1556, -3.2062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6668, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6812, -2.7667, -3.1586, -3.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6619, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6840, -2.7635, -3.1640, -3.2014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5965, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6853, -2.7571, -3.1669, -3.1997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6701, device='cuda:0', dtype=torch.float64)
tensor([-1.8340, -2.6890, -2.7481, -3.1638, -3.2019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5915, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6898, -2.7413, -3.1607, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5552, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6867, -2.7381, -3.1586, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7564, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6757, -2.7440, -3.1648, -3.2013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7972, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6726, -2.7452, -3.1664, -3.2012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6206, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6717, -2.7476, -3.1705, -3.1996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6452, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6716, -2.7527, -3.1699, -3.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6534, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6740, -2.7571, -3.1659, -3.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6892, device='cuda:0', dtype=torch.float64)
tensor([-1.8254, -2.6766, -2.7581, -3.1612, -3.2020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5683, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6763, -2.7575, -3.1577, -3.2031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5916, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6791, -2.7533, -3.1510, -3.2064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5904, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6794, -2.7516, -3.1456, -3.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6342, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6810, -2.7541, -3.1463, -3.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6686, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6811, -2.7603, -3.1467, -3.2016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5710, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6804, -2.7655, -3.1465, -3.1975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7017, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6787, -2.7694, -3.1465, -3.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7202, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6829, -2.7656, -3.1466, -3.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6044, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6846, -2.7613, -3.1537, -3.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6362, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6806, -2.7620, -3.1655, -3.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6883, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6778, -2.7606, -3.1676, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5750, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6758, -2.7591, -3.1642, -3.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6578, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6711, -2.7604, -3.1540, -3.1964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8330, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6691, -2.7591, -3.1469, -3.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7325, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6721, -2.7540, -3.1436, -3.2046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8949, device='cuda:0', dtype=torch.float64)
tensor([-1.8311, -2.6675, -2.7552, -3.1546, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7180, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6704, -2.7505, -3.1671, -3.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6270, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6794, -2.7444, -3.1765, -3.2025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6601, device='cuda:0', dtype=torch.float64)
tensor([-1.8259, -2.6898, -2.7407, -3.1814, -3.2025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6587, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6984, -2.7364, -3.1745, -3.2071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7464, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6981, -2.7407, -3.1659, -3.2094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6516, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6854, -2.7523, -3.1628, -3.2067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7445, device='cuda:0', dtype=torch.float64)
tensor([-1.8341, -2.6756, -2.7553, -3.1589, -3.2040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8188, device='cuda:0', dtype=torch.float64)
tensor([-1.8323, -2.6688, -2.7574, -3.1605, -3.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6674, -2.7550, -3.1612, -3.2011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6253, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6715, -2.7487, -3.1589, -3.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8703, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6683, -2.7475, -3.1627, -3.2014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7987, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6637, -2.7521, -3.1684, -3.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8218, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6683, -2.7510, -3.1611, -3.1955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7672, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6708, -2.7512, -3.1480, -3.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6421, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6746, -2.7542, -3.1412, -3.1935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8316, device='cuda:0', dtype=torch.float64)
tensor([-1.8361, -2.6828, -2.7510, -3.1386, -3.1942], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6241, device='cuda:0', dtype=torch.float64)
tensor([-1.8365, -2.6875, -2.7526, -3.1419, -3.1919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6804, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6891, -2.7602, -3.1512, -3.1855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9688, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6941, -2.7590, -3.1529, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6301, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6928, -2.7621, -3.1566, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8100, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6831, -2.7685, -3.1601, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6744, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6838, -2.7655, -3.1574, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6473, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6864, -2.7599, -3.1506, -3.1793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6822, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6830, -2.7596, -3.1484, -3.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6136, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6800, -2.7560, -3.1475, -3.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6970, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6789, -2.7496, -3.1394, -3.1971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7388, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6704, -2.7529, -3.1430, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5534, device='cuda:0', dtype=torch.float64)
tensor([-1.8348, -2.6644, -2.7540, -3.1476, -3.1998], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5693, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.6617, -2.7574, -3.1514, -3.2029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5420, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6617, -2.7601, -3.1554, -3.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5856, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6655, -2.7590, -3.1576, -3.2069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5902, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6684, -2.7567, -3.1591, -3.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6397, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.6673, -2.7576, -3.1621, -3.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5588, device='cuda:0', dtype=torch.float64)
tensor([-1.8139, -2.6721, -2.7562, -3.1625, -3.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7619, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6862, -2.7467, -3.1524, -3.2097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8069, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6884, -2.7473, -3.1465, -3.2056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5857, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6884, -2.7471, -3.1392, -3.2005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7189, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6911, -2.7434, -3.1311, -3.1986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8313, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6873, -2.7481, -3.1297, -3.1928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6630, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6841, -2.7510, -3.1309, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7234, device='cuda:0', dtype=torch.float64)
tensor([-1.8416, -2.6823, -2.7488, -3.1297, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6237, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6757, -2.7488, -3.1354, -3.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6806, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6656, -2.7530, -3.1497, -3.1745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6524, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6614, -2.7538, -3.1573, -3.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7110, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6624, -2.7495, -3.1552, -3.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6097, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6620, -2.7502, -3.1579, -3.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7665, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6608, -2.7512, -3.1620, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6467, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6649, -2.7463, -3.1596, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7415, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6689, -2.7432, -3.1626, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7165, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6721, -2.7426, -3.1638, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7329, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6789, -2.7430, -3.1558, -3.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6240, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6821, -2.7455, -3.1462, -3.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6564, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6779, -2.7530, -3.1435, -3.2032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6962, device='cuda:0', dtype=torch.float64)
tensor([-1.8202, -2.6756, -2.7619, -3.1407, -3.2055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9486, device='cuda:0', dtype=torch.float64)
tensor([-1.8224, -2.6824, -2.7599, -3.1320, -3.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8350, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6822, -2.7620, -3.1329, -3.2098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7965, device='cuda:0', dtype=torch.float64)
tensor([-1.8152, -2.6761, -2.7635, -3.1401, -3.2017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9768, device='cuda:0', dtype=torch.float64)
tensor([-1.8171, -2.6763, -2.7567, -3.1363, -3.1985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0248, device='cuda:0', dtype=torch.float64)
tensor([-1.8138, -2.6670, -2.7562, -3.1421, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7293, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6672, -2.7518, -3.1436, -3.1838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7853, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6736, -2.7457, -3.1406, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6785, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.6777, -2.7426, -3.1398, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8505, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6724, -2.7498, -3.1464, -3.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9233, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6733, -2.7512, -3.1434, -3.1820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6519, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.6722, -2.7567, -3.1440, -3.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7259, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6697, -2.7620, -3.1482, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6702, device='cuda:0', dtype=torch.float64)
tensor([-1.8278, -2.6729, -2.7623, -3.1477, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6713, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6793, -2.7565, -3.1464, -3.1898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6647, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6816, -2.7518, -3.1455, -3.1901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6277, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6806, -2.7509, -3.1459, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7131, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6821, -2.7496, -3.1452, -3.1920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6196, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6803, -2.7536, -3.1471, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5708, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6761, -2.7588, -3.1497, -3.1921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6856, device='cuda:0', dtype=torch.float64)
tensor([-1.8165, -2.6740, -2.7617, -3.1528, -3.1890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6239, device='cuda:0', dtype=torch.float64)
tensor([-1.8124, -2.6709, -2.7635, -3.1513, -3.1841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6637, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.6689, -2.7599, -3.1480, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7813, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6765, -2.7488, -3.1364, -3.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6776, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6789, -2.7422, -3.1313, -3.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6126, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6759, -2.7395, -3.1324, -3.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7784, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6640, -2.7448, -3.1461, -3.1856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5604, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6552, -2.7504, -3.1583, -3.1832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7168, device='cuda:0', dtype=torch.float64)
tensor([-1.8287, -2.6556, -2.7503, -3.1591, -3.1862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6333, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.6588, -2.7485, -3.1530, -3.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6317, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6604, -2.7450, -3.1456, -3.1948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7168, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6667, -2.7380, -3.1398, -3.1967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8216, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6638, -2.7400, -3.1420, -3.1903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7808, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6666, -2.7379, -3.1378, -3.1909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7334, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6734, -2.7339, -3.1333, -3.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0342, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6676, -2.7412, -3.1345, -3.1884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8856, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.6738, -2.7385, -3.1311, -3.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6861, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6789, -2.7371, -3.1324, -3.1922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7300, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6739, -2.7426, -3.1413, -3.1862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6749, device='cuda:0', dtype=torch.float64)
tensor([-1.8153, -2.6694, -2.7479, -3.1487, -3.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9004, device='cuda:0', dtype=torch.float64)
tensor([-1.8192, -2.6728, -2.7454, -3.1463, -3.1867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9861, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6658, -2.7511, -3.1495, -3.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6701, device='cuda:0', dtype=torch.float64)
tensor([-1.8173, -2.6648, -2.7572, -3.1513, -3.1760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6783, -2.7463, -3.1368, -3.1817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7755, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6836, -2.7466, -3.1312, -3.1815], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7346, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6816, -2.7525, -3.1381, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0093, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6882, -2.7463, -3.1302, -3.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6781, device='cuda:0', dtype=torch.float64)
tensor([-1.8428, -2.6884, -2.7460, -3.1350, -3.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8924, device='cuda:0', dtype=torch.float64)
tensor([-1.8336, -2.6783, -2.7521, -3.1441, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3145, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6783, -2.7440, -3.1384, -3.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8662, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6706, -2.7452, -3.1387, -3.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6960, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6571, -2.7539, -3.1467, -3.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8727, device='cuda:0', dtype=torch.float64)
tensor([-1.8215, -2.6557, -2.7527, -3.1435, -3.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7595, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6523, -2.7565, -3.1446, -3.1859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6933, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6514, -2.7612, -3.1460, -3.1799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9413, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6610, -2.7520, -3.1331, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7568, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.6692, -2.7421, -3.1261, -3.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8445, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6652, -2.7415, -3.1315, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7337, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6631, -2.7376, -3.1368, -3.1860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5955, device='cuda:0', dtype=torch.float64)
tensor([-1.8296, -2.6659, -2.7335, -3.1396, -3.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8904, device='cuda:0', dtype=torch.float64)
tensor([-1.8229, -2.6642, -2.7404, -3.1438, -3.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9050, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6717, -2.7429, -3.1333, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9169, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6855, -2.7372, -3.1156, -3.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2690, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6772, -2.7495, -3.1202, -3.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8357, device='cuda:0', dtype=torch.float64)
tensor([-1.8130, -2.6711, -2.7566, -3.1316, -3.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9425, device='cuda:0', dtype=torch.float64)
tensor([-1.8179, -2.6749, -2.7470, -3.1415, -3.1795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2650, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6645, -2.7494, -3.1488, -3.1726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9949, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6642, -2.7421, -3.1499, -3.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6923, device='cuda:0', dtype=torch.float64)
tensor([-1.8333, -2.6648, -2.7367, -3.1447, -3.1827], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9938, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6583, -2.7424, -3.1478, -3.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8410, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6644, -2.7386, -3.1367, -3.1812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6309, device='cuda:0', dtype=torch.float64)
tensor([-1.8406, -2.6697, -2.7396, -3.1297, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8375, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6692, -2.7493, -3.1325, -3.1806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0555, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.6796, -2.7420, -3.1209, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7304, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6822, -2.7392, -3.1197, -3.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9650, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6726, -2.7450, -3.1327, -3.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9391, device='cuda:0', dtype=torch.float64)
tensor([-1.8292, -2.6721, -2.7404, -3.1343, -3.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7399, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6711, -2.7386, -3.1392, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7003, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6709, -2.7408, -3.1373, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6966, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6759, -2.7410, -3.1321, -3.1889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6605, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6711, -2.7467, -3.1327, -3.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6372, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6658, -2.7514, -3.1332, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6207, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6594, -2.7536, -3.1340, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7499, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6530, -2.7554, -3.1360, -3.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6087, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6542, -2.7490, -3.1311, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6277, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6622, -2.7411, -3.1267, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8379, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6600, -2.7421, -3.1328, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6584, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.6606, -2.7422, -3.1419, -3.1608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9184, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6714, -2.7333, -3.1362, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9094, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6739, -2.7319, -3.1296, -3.1689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5998, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6769, -2.7327, -3.1287, -3.1739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8445, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6808, -2.7311, -3.1241, -3.1824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0765, device='cuda:0', dtype=torch.float64)
tensor([-1.8146, -2.6713, -2.7436, -3.1313, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7468, device='cuda:0', dtype=torch.float64)
tensor([-1.8068, -2.6688, -2.7498, -3.1371, -3.1810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6801, device='cuda:0', dtype=torch.float64)
tensor([-1.8097, -2.6748, -2.7507, -3.1411, -3.1864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8243, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.6783, -2.7551, -3.1490, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7279, device='cuda:0', dtype=torch.float64)
tensor([-1.8151, -2.6784, -2.7584, -3.1551, -3.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7841, device='cuda:0', dtype=torch.float64)
tensor([-1.8272, -2.6806, -2.7522, -3.1480, -3.1940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7975, device='cuda:0', dtype=torch.float64)
tensor([-1.8354, -2.6768, -2.7485, -3.1425, -3.1921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7401, device='cuda:0', dtype=torch.float64)
tensor([-1.8390, -2.6712, -2.7471, -3.1339, -3.1888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0837, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.6794, -2.7362, -3.1137, -3.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0633, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6741, -2.7421, -3.1125, -3.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-1.8337, -2.6734, -2.7453, -3.1202, -3.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7850, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6765, -2.7413, -3.1284, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8345, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6700, -2.7443, -3.1354, -3.1796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7515, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6678, -2.7400, -3.1277, -3.1779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7050, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6709, -2.7312, -3.1093, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8619, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6652, -2.7327, -3.1020, -3.1765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5723, device='cuda:0', dtype=torch.float64)
tensor([-1.8242, -2.6647, -2.7357, -3.1032, -3.1716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7904, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6711, -2.7302, -3.1069, -3.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7743, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6703, -2.7335, -3.1195, -3.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6245, device='cuda:0', dtype=torch.float64)
tensor([-1.8232, -2.6661, -2.7412, -3.1331, -3.1595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8683, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6686, -2.7423, -3.1321, -3.1630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7687, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6624, -2.7476, -3.1347, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6830, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6590, -2.7522, -3.1352, -3.1625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6829, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6596, -2.7507, -3.1299, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6961, device='cuda:0', dtype=torch.float64)
tensor([-1.8280, -2.6589, -2.7542, -3.1322, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6221, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6617, -2.7579, -3.1366, -3.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-1.8327, -2.6699, -2.7593, -3.1375, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6656, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6796, -2.7573, -3.1323, -3.1822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6529, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6844, -2.7575, -3.1310, -3.1864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6656, device='cuda:0', dtype=torch.float64)
tensor([-1.8317, -2.6779, -2.7629, -3.1384, -3.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8009, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6731, -2.7593, -3.1392, -3.1854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6923, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6644, -2.7586, -3.1453, -3.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6778, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6550, -2.7601, -3.1476, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5966, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.6523, -2.7587, -3.1435, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7500, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6575, -2.7517, -3.1265, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8336, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6626, -2.7519, -3.1145, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7857, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.6670, -2.7517, -3.1083, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6240, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6724, -2.7513, -3.1094, -3.1811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8568, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6710, -2.7585, -3.1204, -3.1778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6741, -2.7562, -3.1264, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9328, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6794, -2.7468, -3.1228, -3.1820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1220, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6651, -2.7506, -3.1361, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8116, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6569, -2.7501, -3.1420, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6547, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.6528, -2.7491, -3.1470, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7344, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6511, -2.7476, -3.1473, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6909, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6562, -2.7412, -3.1366, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6944, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6628, -2.7340, -3.1230, -3.1830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7643, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6598, -2.7345, -3.1174, -3.1800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8638, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6596, -2.7342, -3.1149, -3.1754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7454, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6622, -2.7332, -3.1213, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8027, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6666, -2.7337, -3.1257, -3.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9404, device='cuda:0', dtype=torch.float64)
tensor([-1.8462, -2.6779, -2.7261, -3.1180, -3.1728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7462, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6739, -2.7321, -3.1200, -3.1700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6080, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6695, -2.7386, -3.1241, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6070, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6656, -2.7452, -3.1294, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7648, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.6586, -2.7560, -3.1395, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6030, device='cuda:0', dtype=torch.float64)
tensor([-1.8035, -2.6588, -2.7617, -3.1433, -3.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7329, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6714, -2.7528, -3.1335, -3.1735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7126, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6746, -2.7493, -3.1271, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7853, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6764, -2.7459, -3.1188, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7720, device='cuda:0', dtype=torch.float64)
tensor([-1.8396, -2.6782, -2.7400, -3.1078, -3.1845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7452, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6733, -2.7438, -3.1080, -3.1831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6927, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6704, -2.7470, -3.1124, -3.1817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7911, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6706, -2.7442, -3.1163, -3.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9250, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6620, -2.7488, -3.1343, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6669, device='cuda:0', dtype=torch.float64)
tensor([-1.8188, -2.6549, -2.7490, -3.1451, -3.1680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7510, device='cuda:0', dtype=torch.float64)
tensor([-1.8222, -2.6508, -2.7472, -3.1423, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8911, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6429, -2.7532, -3.1405, -3.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7476, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6466, -2.7492, -3.1261, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8206, device='cuda:0', dtype=torch.float64)
tensor([-1.8457, -2.6587, -2.7397, -3.1083, -3.1627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6092, device='cuda:0', dtype=torch.float64)
tensor([-1.8453, -2.6653, -2.7380, -3.1029, -3.1659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7386, device='cuda:0', dtype=torch.float64)
tensor([-1.8425, -2.6716, -2.7331, -3.1009, -3.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5321, device='cuda:0', dtype=torch.float64)
tensor([-1.8328, -2.6750, -2.7330, -3.1088, -3.1742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6950, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6694, -2.7354, -3.1168, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8088, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6696, -2.7317, -3.1133, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5773, device='cuda:0', dtype=torch.float64)
tensor([-1.8197, -2.6680, -2.7285, -3.1102, -3.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9286, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6608, -2.7340, -3.1178, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7132, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6591, -2.7364, -3.1236, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8158, device='cuda:0', dtype=torch.float64)
tensor([-1.8387, -2.6677, -2.7340, -3.1200, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8522, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6670, -2.7395, -3.1236, -3.1660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7831, device='cuda:0', dtype=torch.float64)
tensor([-1.8482, -2.6665, -2.7400, -3.1219, -3.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7377, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6682, -2.7376, -3.1170, -3.1871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9771, device='cuda:0', dtype=torch.float64)
tensor([-1.8400, -2.6530, -2.7474, -3.1215, -3.1863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6507, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6444, -2.7506, -3.1235, -3.1861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7731, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6435, -2.7479, -3.1234, -3.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8915, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6422, -2.7505, -3.1268, -3.1755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6515, -2.7414, -3.1185, -3.1748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9651, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6587, -2.7421, -3.1241, -3.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7246, device='cuda:0', dtype=torch.float64)
tensor([-1.8094, -2.6648, -2.7494, -3.1315, -3.1701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9723, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6822, -2.7465, -3.1272, -3.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8760, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6882, -2.7466, -3.1276, -3.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8399, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6802, -2.7516, -3.1339, -3.1767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8539, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6744, -2.7455, -3.1237, -3.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8666, device='cuda:0', dtype=torch.float64)
tensor([-1.8355, -2.6613, -2.7453, -3.1276, -3.1754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8038, device='cuda:0', dtype=torch.float64)
tensor([-1.8297, -2.6456, -2.7525, -3.1446, -3.1659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1028, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6520, -2.7435, -3.1389, -3.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8859, device='cuda:0', dtype=torch.float64)
tensor([-1.8326, -2.6537, -2.7420, -3.1482, -3.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7774, device='cuda:0', dtype=torch.float64)
tensor([-1.8248, -2.6576, -2.7458, -3.1572, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2143, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6842, -2.7350, -3.1300, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7777, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6939, -2.7356, -3.1128, -3.1745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6792, -2.7553, -3.1293, -3.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7956, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6785, -2.7491, -3.1078, -3.1776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4445, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6556, -2.7576, -3.1178, -3.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6930, device='cuda:0', dtype=torch.float64)
tensor([-1.8110, -2.6423, -2.7610, -3.1363, -3.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3321, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6557, -2.7438, -3.1164, -3.1722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9642, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6638, -2.7365, -3.1151, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([-1.8339, -2.6592, -2.7430, -3.1363, -3.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5447, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.6768, -2.7278, -3.1234, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3937, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.6732, -2.7308, -3.1121, -3.1668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7739, device='cuda:0', dtype=torch.float64)
tensor([-1.8357, -2.6677, -2.7343, -3.1110, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6685, -2.7275, -3.1015, -3.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3895, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6472, -2.7463, -3.1160, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7160, device='cuda:0', dtype=torch.float64)
tensor([-1.8027, -2.6388, -2.7544, -3.1265, -3.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8548, device='cuda:0', dtype=torch.float64)
tensor([-1.8105, -2.6428, -2.7525, -3.1287, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7869, device='cuda:0', dtype=torch.float64)
tensor([-1.8204, -2.6488, -2.7481, -3.1303, -3.1663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6575, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6522, -2.7391, -3.1281, -3.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8932, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.6585, -2.7274, -3.1145, -3.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6710, device='cuda:0', dtype=torch.float64)
tensor([-1.8426, -2.6620, -2.7252, -3.1089, -3.1682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8638, device='cuda:0', dtype=torch.float64)
tensor([-1.8372, -2.6605, -2.7305, -3.1121, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7758, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6575, -2.7398, -3.1220, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8706, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6602, -2.7422, -3.1198, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7386, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6656, -2.7466, -3.1201, -3.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8747, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6650, -2.7552, -3.1300, -3.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1237, device='cuda:0', dtype=torch.float64)
tensor([-1.8157, -2.6714, -2.7512, -3.1289, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9508, device='cuda:0', dtype=torch.float64)
tensor([-1.8290, -2.6808, -2.7358, -3.1234, -3.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2550, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6676, -2.7403, -3.1219, -3.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1569, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6648, -2.7306, -3.1139, -3.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7232, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6639, -2.7236, -3.1139, -3.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9585, device='cuda:0', dtype=torch.float64)
tensor([-1.8305, -2.6563, -2.7344, -3.1205, -3.1769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9346, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6591, -2.7389, -3.1150, -3.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7617, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6653, -2.7424, -3.1051, -3.1737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2646, device='cuda:0', dtype=torch.float64)
tensor([-1.8150, -2.6469, -2.7624, -3.1150, -3.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8662, device='cuda:0', dtype=torch.float64)
tensor([-1.8070, -2.6358, -2.7702, -3.1237, -3.1512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1704, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6427, -2.7565, -3.1158, -3.1634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1957, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.6435, -2.7540, -3.1187, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8871, device='cuda:0', dtype=torch.float64)
tensor([-1.8533, -2.6511, -2.7518, -3.1243, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0865, device='cuda:0', dtype=torch.float64)
tensor([-1.8552, -2.6601, -2.7461, -3.1192, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0095, device='cuda:0', dtype=torch.float64)
tensor([-1.8379, -2.6574, -2.7539, -3.1294, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8880, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6640, -2.7524, -3.1274, -3.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1781, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6813, -2.7331, -3.1077, -3.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3610, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6716, -2.7384, -3.1066, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8194, device='cuda:0', dtype=torch.float64)
tensor([-1.8081, -2.6583, -2.7460, -3.1177, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1385, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6629, -2.7347, -3.1081, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0937, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6585, -2.7359, -3.1048, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7648, device='cuda:0', dtype=torch.float64)
tensor([-1.8288, -2.6673, -2.7309, -3.1002, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8298, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6795, -2.7191, -3.0934, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7827, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6767, -2.7184, -3.1012, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6825, device='cuda:0', dtype=torch.float64)
tensor([-1.8371, -2.6677, -2.7192, -3.1086, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7457, device='cuda:0', dtype=torch.float64)
tensor([-1.8413, -2.6614, -2.7190, -3.1128, -3.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8797, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6499, -2.7278, -3.1193, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6179, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6467, -2.7355, -3.1207, -3.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0364, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6548, -2.7378, -3.1063, -3.1717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6689, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6543, -2.7472, -3.1035, -3.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5711, device='cuda:0', dtype=torch.float64)
tensor([-1.8148, -2.6559, -2.7536, -3.1099, -3.1696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7230, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.6587, -2.7533, -3.1171, -3.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6295, device='cuda:0', dtype=torch.float64)
tensor([-1.8180, -2.6571, -2.7513, -3.1235, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7232, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6541, -2.7469, -3.1183, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6996, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6473, -2.7450, -3.1102, -3.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7896, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6427, -2.7487, -3.1021, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7651, device='cuda:0', dtype=torch.float64)
tensor([-1.8362, -2.6444, -2.7530, -3.1052, -3.1684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6938, device='cuda:0', dtype=torch.float64)
tensor([-1.8391, -2.6592, -2.7494, -3.1059, -3.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8000, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6762, -2.7471, -3.1156, -3.1645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7886, device='cuda:0', dtype=torch.float64)
tensor([-1.8334, -2.6878, -2.7452, -3.1197, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8748, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6911, -2.7432, -3.1122, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8332, device='cuda:0', dtype=torch.float64)
tensor([-1.8201, -2.6727, -2.7491, -3.1023, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6626, -2.7425, -3.0898, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8348, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6550, -2.7387, -3.0916, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6856, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6509, -2.7318, -3.0956, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7054, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6463, -2.7289, -3.1082, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8659, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6424, -2.7298, -3.1263, -3.1556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7910, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6465, -2.7325, -3.1297, -3.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7667, device='cuda:0', dtype=torch.float64)
tensor([-1.8282, -2.6559, -2.7338, -3.1217, -3.1718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8332, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6575, -2.7422, -3.1196, -3.1783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7317, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6521, -2.7521, -3.1250, -3.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0557, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6569, -2.7468, -3.1070, -3.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8669, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6589, -2.7425, -3.0931, -3.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7857, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6558, -2.7459, -3.0930, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9153, device='cuda:0', dtype=torch.float64)
tensor([-1.8285, -2.6610, -2.7451, -3.0901, -3.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7326, device='cuda:0', dtype=torch.float64)
tensor([-1.8250, -2.6702, -2.7448, -3.0953, -3.1659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2610, device='cuda:0', dtype=torch.float64)
tensor([-1.8097, -2.6587, -2.7554, -3.1161, -3.1482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1853, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6669, -2.7401, -3.1048, -3.1527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8200, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6789, -2.7268, -3.0929, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1407, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6748, -2.7346, -3.1087, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3891, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6778, -2.7318, -3.0912, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8216, device='cuda:0', dtype=torch.float64)
tensor([-1.8359, -2.6732, -2.7402, -3.0888, -3.1611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9267, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.6634, -2.7576, -3.1030, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2188, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6686, -2.7548, -3.1018, -3.1603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.6571, -2.7640, -3.1179, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8968, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.6479, -2.7640, -3.1278, -3.1587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8097, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6516, -2.7523, -3.1230, -3.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8258, device='cuda:0', dtype=torch.float64)
tensor([-1.8420, -2.6526, -2.7463, -3.1228, -3.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7377, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.6529, -2.7485, -3.1324, -3.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2653, device='cuda:0', dtype=torch.float64)
tensor([-1.8674, -2.6730, -2.7333, -3.1147, -3.1932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1985, device='cuda:0', dtype=torch.float64)
tensor([-1.8515, -2.6643, -2.7389, -3.1254, -3.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7871, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6543, -2.7496, -3.1411, -3.1674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2932, device='cuda:0', dtype=torch.float64)
tensor([-1.8247, -2.6667, -2.7421, -3.1289, -3.1665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3057, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.6644, -2.7451, -3.1099, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7344, device='cuda:0', dtype=torch.float64)
tensor([-1.8074, -2.6675, -2.7486, -3.1020, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9121, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.6694, -2.7431, -3.0966, -3.1589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2110, device='cuda:0', dtype=torch.float64)
tensor([-1.8013, -2.6521, -2.7513, -3.1162, -3.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7519, device='cuda:0', dtype=torch.float64)
tensor([-1.7989, -2.6381, -2.7548, -3.1388, -3.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3070, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6501, -2.7336, -3.1231, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9426, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6564, -2.7187, -3.1157, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7961, device='cuda:0', dtype=torch.float64)
tensor([-1.8661, -2.6648, -2.7078, -3.1114, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7234, device='cuda:0', dtype=torch.float64)
tensor([-1.8757, -2.6703, -2.7015, -3.1056, -3.1565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9765, device='cuda:0', dtype=torch.float64)
tensor([-1.8588, -2.6561, -2.7134, -3.1160, -3.1517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8539, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6515, -2.7276, -3.1186, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7250, device='cuda:0', dtype=torch.float64)
tensor([-1.8235, -2.6454, -2.7459, -3.1181, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7451, device='cuda:0', dtype=torch.float64)
tensor([-1.7990, -2.6357, -2.7671, -3.1210, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8488, device='cuda:0', dtype=torch.float64)
tensor([-1.7958, -2.6419, -2.7665, -3.1076, -3.1667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7184, device='cuda:0', dtype=torch.float64)
tensor([-1.8068, -2.6549, -2.7600, -3.0958, -3.1703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9344, device='cuda:0', dtype=torch.float64)
tensor([-1.8189, -2.6552, -2.7560, -3.0977, -3.1649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9372, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6655, -2.7376, -3.0878, -3.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6207, device='cuda:0', dtype=torch.float64)
tensor([-1.8439, -2.6601, -2.7318, -3.0921, -3.1675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7541, device='cuda:0', dtype=torch.float64)
tensor([-1.8302, -2.6427, -2.7386, -3.1007, -3.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9517, device='cuda:0', dtype=torch.float64)
tensor([-1.8240, -2.6368, -2.7407, -3.0901, -3.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8362, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6404, -2.7437, -3.0858, -3.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9879, device='cuda:0', dtype=torch.float64)
tensor([-1.8149, -2.6408, -2.7556, -3.0953, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3994, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6672, -2.7439, -3.0921, -3.1620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3507, device='cuda:0', dtype=torch.float64)
tensor([-1.8377, -2.6731, -2.7505, -3.1125, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6943, device='cuda:0', dtype=torch.float64)
tensor([-1.8398, -2.6786, -2.7508, -3.1251, -3.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-1.8553, -2.6911, -2.7337, -3.1006, -3.1597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1527, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6775, -2.7339, -3.0868, -3.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7974, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6536, -2.7419, -3.0890, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8456, device='cuda:0', dtype=torch.float64)
tensor([-1.8156, -2.6323, -2.7482, -3.0999, -3.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7303, device='cuda:0', dtype=torch.float64)
tensor([-1.7982, -2.6100, -2.7575, -3.1253, -3.1442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9054, device='cuda:0', dtype=torch.float64)
tensor([-1.8022, -2.6120, -2.7529, -3.1340, -3.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8360, device='cuda:0', dtype=torch.float64)
tensor([-1.8264, -2.6332, -2.7368, -3.1254, -3.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9097, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6479, -2.7298, -3.1172, -3.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1586, device='cuda:0', dtype=torch.float64)
tensor([-1.8702, -2.6626, -2.7248, -3.0965, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8798, device='cuda:0', dtype=torch.float64)
tensor([-1.8627, -2.6612, -2.7323, -3.0928, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6570, -2.7408, -3.0910, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4325, device='cuda:0', dtype=torch.float64)
tensor([-1.8475, -2.6733, -2.7271, -3.0787, -3.1733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0972, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6628, -2.7365, -3.0902, -3.1713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-1.7892, -2.6382, -2.7572, -3.1287, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5632, device='cuda:0', dtype=torch.float64)
tensor([-1.7906, -2.6394, -2.7539, -3.1473, -3.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7517, device='cuda:0', dtype=torch.float64)
tensor([-1.7878, -2.6319, -2.7664, -3.1508, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2687, device='cuda:0', dtype=torch.float64)
tensor([-1.8210, -2.6559, -2.7547, -3.1336, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0143, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.6874, -2.7322, -3.0980, -3.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0644, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.6655, -2.7462, -3.1212, -3.1465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2561, device='cuda:0', dtype=torch.float64)
tensor([-1.8427, -2.6534, -2.7413, -3.1157, -3.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1532, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6550, -2.7256, -3.1075, -3.1532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5285, device='cuda:0', dtype=torch.float64)
tensor([-1.8329, -2.6343, -2.7394, -3.1156, -3.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0833, device='cuda:0', dtype=torch.float64)
tensor([-1.8207, -2.6303, -2.7452, -3.1163, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2051, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6406, -2.7437, -3.1136, -3.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6689, device='cuda:0', dtype=torch.float64)
tensor([-1.8037, -2.6357, -2.7590, -3.1275, -3.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3772, device='cuda:0', dtype=torch.float64)
tensor([-1.8208, -2.6538, -2.7487, -3.1146, -3.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0568, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.6851, -2.7257, -3.0842, -3.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8456, device='cuda:0', dtype=torch.float64)
tensor([-1.8484, -2.6751, -2.7370, -3.1032, -3.1793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5959, device='cuda:0', dtype=torch.float64)
tensor([-1.8473, -2.6789, -2.7329, -3.0910, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9481, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6764, -2.7339, -3.1025, -3.1887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4365, device='cuda:0', dtype=torch.float64)
tensor([-1.8089, -2.6544, -2.7538, -3.1212, -3.1743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7568, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6640, -2.7323, -3.0950, -3.1758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9808, device='cuda:0', dtype=torch.float64)
tensor([-1.8216, -2.6579, -2.7271, -3.0977, -3.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3737, device='cuda:0', dtype=torch.float64)
tensor([-1.7984, -2.6309, -2.7424, -3.1314, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2878, device='cuda:0', dtype=torch.float64)
tensor([-1.8083, -2.6260, -2.7344, -3.1207, -3.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0755, device='cuda:0', dtype=torch.float64)
tensor([-1.8307, -2.6364, -2.7258, -3.1098, -3.1282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0981, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6403, -2.7286, -3.1125, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3633, device='cuda:0', dtype=torch.float64)
tensor([-1.8644, -2.6585, -2.7162, -3.0963, -3.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1376, device='cuda:0', dtype=torch.float64)
tensor([-1.8563, -2.6563, -2.7237, -3.1092, -3.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8230, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.6451, -2.7386, -3.1307, -3.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3908, device='cuda:0', dtype=torch.float64)
tensor([-1.8369, -2.6485, -2.7366, -3.1165, -3.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8306, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6539, -2.7418, -3.0989, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2132, device='cuda:0', dtype=torch.float64)
tensor([-1.8098, -2.6438, -2.7580, -3.1145, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2697, device='cuda:0', dtype=torch.float64)
tensor([-1.8093, -2.6489, -2.7519, -3.1103, -3.1594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8327, device='cuda:0', dtype=torch.float64)
tensor([-1.8087, -2.6477, -2.7499, -3.1201, -3.1585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8987, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6462, -2.7429, -3.1202, -3.1629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9726, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.6555, -2.7313, -3.1059, -3.1781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7223, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.6528, -2.7332, -3.0922, -3.1825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1163, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.6335, -2.7535, -3.1039, -3.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0938, device='cuda:0', dtype=torch.float64)
tensor([-1.8447, -2.6306, -2.7631, -3.1016, -3.1654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9377, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6412, -2.7624, -3.1099, -3.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6520, -2.7520, -3.1249, -3.1473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1442, device='cuda:0', dtype=torch.float64)
tensor([-1.8463, -2.6804, -2.7239, -3.1069, -3.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4318, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.6784, -2.7166, -3.1086, -3.1330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6709, -2.7126, -3.0998, -3.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8492, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6662, -2.7095, -3.0886, -3.1212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9741, device='cuda:0', dtype=torch.float64)
tensor([-1.8185, -2.6488, -2.7247, -3.0897, -3.1181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0363, device='cuda:0', dtype=torch.float64)
tensor([-1.8301, -2.6471, -2.7293, -3.0799, -3.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7918, device='cuda:0', dtype=torch.float64)
tensor([-1.8266, -2.6356, -2.7412, -3.0870, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8432, device='cuda:0', dtype=torch.float64)
tensor([-1.8200, -2.6277, -2.7471, -3.0968, -3.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7035, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6340, -2.7467, -3.1083, -3.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9627, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6494, -2.7321, -3.0979, -3.1627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9691, device='cuda:0', dtype=torch.float64)
tensor([-1.8597, -2.6781, -2.7030, -3.0717, -3.1857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4226, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.6676, -2.7059, -3.0825, -3.1786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9114, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6525, -2.7141, -3.0904, -3.1752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7681, device='cuda:0', dtype=torch.float64)
tensor([-1.8213, -2.6359, -2.7319, -3.0993, -3.1708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8093, device='cuda:0', dtype=torch.float64)
tensor([-1.8143, -2.6270, -2.7505, -3.1044, -3.1637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7675, device='cuda:0', dtype=torch.float64)
tensor([-1.8255, -2.6362, -2.7570, -3.0947, -3.1641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1215, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6393, -2.7654, -3.1051, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8590, device='cuda:0', dtype=torch.float64)
tensor([-1.8347, -2.6419, -2.7654, -3.1137, -3.1441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0656, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.6637, -2.7415, -3.0959, -3.1515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0169, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6645, -2.7344, -3.1011, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8386, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6573, -2.7328, -3.1150, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.6546, -2.7326, -3.1154, -3.1458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3021, device='cuda:0', dtype=torch.float64)
tensor([-1.7895, -2.6350, -2.7542, -3.1309, -3.1336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9997, device='cuda:0', dtype=torch.float64)
tensor([-1.8031, -2.6388, -2.7584, -3.1222, -3.1352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2299, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.6673, -2.7416, -3.0952, -3.1555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9195, device='cuda:0', dtype=torch.float64)
tensor([-1.8478, -2.6550, -2.7516, -3.1181, -3.1366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4912, device='cuda:0', dtype=torch.float64)
tensor([-1.8659, -2.6617, -2.7368, -3.0964, -3.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9752, device='cuda:0', dtype=torch.float64)
tensor([-1.8675, -2.6589, -2.7252, -3.0908, -3.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4772, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6371, -2.7324, -3.1150, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7480, device='cuda:0', dtype=torch.float64)
tensor([-1.8364, -2.6513, -2.7070, -3.0930, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1884, device='cuda:0', dtype=torch.float64)
tensor([-1.8119, -2.6474, -2.7065, -3.1105, -3.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2170, device='cuda:0', dtype=torch.float64)
tensor([-1.7786, -2.6331, -2.7350, -3.1445, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4678, device='cuda:0', dtype=torch.float64)
tensor([-1.8147, -2.6697, -2.7107, -3.0941, -3.1741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3182, device='cuda:0', dtype=torch.float64)
tensor([-1.8310, -2.6764, -2.7157, -3.0770, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2884, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6524, -2.7420, -3.1080, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0201, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6631, -2.7328, -3.0758, -3.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5371, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6493, -2.7409, -3.0801, -3.1488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7920, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6338, -2.7555, -3.1102, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5509, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.6429, -2.7414, -3.0993, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4581, device='cuda:0', dtype=torch.float64)
tensor([-1.8244, -2.6277, -2.7510, -3.1185, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9676, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6271, -2.7531, -3.1238, -3.1307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1796, device='cuda:0', dtype=torch.float64)
tensor([-1.8405, -2.6508, -2.7380, -3.0897, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1017, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6504, -2.7460, -3.0880, -3.1535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7120, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6451, -2.7551, -3.0994, -3.1490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9736, device='cuda:0', dtype=torch.float64)
tensor([-1.8211, -2.6526, -2.7459, -3.0894, -3.1548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0956, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6508, -2.7433, -3.0956, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7153, device='cuda:0', dtype=torch.float64)
tensor([-1.8233, -2.6539, -2.7399, -3.1104, -3.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2003, device='cuda:0', dtype=torch.float64)
tensor([-1.8452, -2.6763, -2.7142, -3.0884, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0321, device='cuda:0', dtype=torch.float64)
tensor([-1.8404, -2.6693, -2.7153, -3.0954, -3.1478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7082, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6485, -2.7282, -3.1122, -3.1368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2462, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6374, -2.7330, -3.1023, -3.1426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8398, device='cuda:0', dtype=torch.float64)
tensor([-1.8187, -2.6215, -2.7466, -3.1065, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-1.8083, -2.6108, -2.7588, -3.1166, -3.1259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9507, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.6218, -2.7545, -3.1107, -3.1333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7353, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6433, -2.7405, -3.1009, -3.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7601, device='cuda:0', dtype=torch.float64)
tensor([-1.8470, -2.6661, -2.7194, -3.0946, -3.1599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8510, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6703, -2.7178, -3.1062, -3.1655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8107, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.6735, -2.7168, -3.1135, -3.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8601, device='cuda:0', dtype=torch.float64)
tensor([-1.8380, -2.6643, -2.7301, -3.1285, -3.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9315, device='cuda:0', dtype=torch.float64)
tensor([-1.8137, -2.6468, -2.7525, -3.1313, -3.1583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1891, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.6475, -2.7567, -3.1079, -3.1610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9078, device='cuda:0', dtype=torch.float64)
tensor([-1.8126, -2.6467, -2.7562, -3.0910, -3.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2905, device='cuda:0', dtype=torch.float64)
tensor([-1.7965, -2.6243, -2.7716, -3.0969, -3.1452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0065, device='cuda:0', dtype=torch.float64)
tensor([-1.8059, -2.6243, -2.7625, -3.0895, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0617, device='cuda:0', dtype=torch.float64)
tensor([-1.8421, -2.6440, -2.7355, -3.0712, -3.1543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4635, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6451, -2.7357, -3.0810, -3.1411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3191, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.6583, -2.7219, -3.0677, -3.1422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8672, device='cuda:0', dtype=torch.float64)
tensor([-1.8548, -2.6574, -2.7219, -3.0858, -3.1349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1722, device='cuda:0', dtype=torch.float64)
tensor([-1.8309, -2.6405, -2.7441, -3.1270, -3.1156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7394, device='cuda:0', dtype=torch.float64)
tensor([-1.8445, -2.6588, -2.7311, -3.1027, -3.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8693, device='cuda:0', dtype=torch.float64)
tensor([-1.8490, -2.6711, -2.7270, -3.0983, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4058, device='cuda:0', dtype=torch.float64)
tensor([-1.8195, -2.6479, -2.7441, -3.1299, -3.1306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4658, device='cuda:0', dtype=torch.float64)
tensor([-1.8105, -2.6489, -2.7383, -3.1176, -3.1414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8922, device='cuda:0', dtype=torch.float64)
tensor([-1.8022, -2.6493, -2.7346, -3.1136, -3.1522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3386, device='cuda:0', dtype=torch.float64)
tensor([-1.7846, -2.6297, -2.7490, -3.1180, -3.1469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4966, device='cuda:0', dtype=torch.float64)
tensor([-1.8089, -2.6450, -2.7367, -3.0736, -3.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9698, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6538, -2.7339, -3.0629, -3.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6453, -2.7559, -3.0900, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7038, device='cuda:0', dtype=torch.float64)
tensor([-1.8610, -2.6648, -2.7400, -3.0647, -3.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0527, device='cuda:0', dtype=torch.float64)
tensor([-1.8676, -2.6569, -2.7371, -3.0702, -3.1642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0935, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6340, -2.7485, -3.1093, -3.1427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2304, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6308, -2.7413, -3.1056, -3.1407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0913, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6223, -2.7484, -3.1188, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8914, device='cuda:0', dtype=torch.float64)
tensor([-1.8107, -2.6212, -2.7606, -3.1366, -3.1226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-1.8239, -2.6497, -2.7451, -3.1187, -3.1321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0343, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6652, -2.7432, -3.1145, -3.1278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8639, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6761, -2.7437, -3.1178, -3.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3041, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.6981, -2.7285, -3.0713, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3099, device='cuda:0', dtype=torch.float64)
tensor([-1.8384, -2.6759, -2.7403, -3.0821, -3.1395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9335, device='cuda:0', dtype=torch.float64)
tensor([-1.8298, -2.6504, -2.7442, -3.0891, -3.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3710, device='cuda:0', dtype=torch.float64)
tensor([-1.8467, -2.6518, -2.7192, -3.0805, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6592, device='cuda:0', dtype=torch.float64)
tensor([-1.8096, -2.6026, -2.7476, -3.1292, -3.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1574, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.5984, -2.7316, -3.0951, -3.1558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8187, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6044, -2.7293, -3.0996, -3.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6511, device='cuda:0', dtype=torch.float64)
tensor([-1.8014, -2.5893, -2.7487, -3.1400, -3.1363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3005, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6255, -2.7199, -3.0896, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1476, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.6627, -2.7060, -3.0674, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1939, device='cuda:0', dtype=torch.float64)
tensor([-1.8544, -2.6753, -2.7201, -3.0784, -3.1514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5318, device='cuda:0', dtype=torch.float64)
tensor([-1.8654, -2.6967, -2.7119, -3.0484, -3.1653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0625, device='cuda:0', dtype=torch.float64)
tensor([-1.8479, -2.6907, -2.7235, -3.0548, -3.1672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0494, device='cuda:0', dtype=torch.float64)
tensor([-1.8067, -2.6582, -2.7552, -3.0887, -3.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2328, device='cuda:0', dtype=torch.float64)
tensor([-1.7957, -2.6437, -2.7567, -3.0990, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8897, device='cuda:0', dtype=torch.float64)
tensor([-1.7961, -2.6372, -2.7527, -3.1186, -3.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-1.8028, -2.6222, -2.7546, -3.1439, -3.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2396, device='cuda:0', dtype=torch.float64)
tensor([-1.8432, -2.6407, -2.7310, -3.1114, -3.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9458, device='cuda:0', dtype=torch.float64)
tensor([-1.8638, -2.6437, -2.7220, -3.0942, -3.1336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0932, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6317, -2.7307, -3.1122, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2079, device='cuda:0', dtype=torch.float64)
tensor([-1.8450, -2.6368, -2.7255, -3.0930, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6518, -2.7274, -3.0897, -3.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2988, device='cuda:0', dtype=torch.float64)
tensor([-1.8088, -2.6453, -2.7504, -3.1064, -3.1442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9879, device='cuda:0', dtype=torch.float64)
tensor([-1.8080, -2.6527, -2.7568, -3.1101, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0807, device='cuda:0', dtype=torch.float64)
tensor([-1.8338, -2.6777, -2.7479, -3.0954, -3.1560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6120, device='cuda:0', dtype=torch.float64)
tensor([-1.8267, -2.6517, -2.7588, -3.1133, -3.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8319, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6253, -2.7599, -3.1187, -3.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3537, device='cuda:0', dtype=torch.float64)
tensor([-1.8410, -2.6308, -2.7334, -3.0842, -3.1329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5218, device='cuda:0', dtype=torch.float64)
tensor([-1.8367, -2.6201, -2.7306, -3.0763, -3.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7821, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6308, -2.7254, -3.0791, -3.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1728, device='cuda:0', dtype=torch.float64)
tensor([-1.8494, -2.6635, -2.7061, -3.0636, -3.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1426, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6650, -2.7177, -3.0802, -3.1512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7230, device='cuda:0', dtype=torch.float64)
tensor([-1.8105, -2.6597, -2.7293, -3.0943, -3.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0014, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.6638, -2.7269, -3.0791, -3.1638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9842, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6505, -2.7325, -3.0813, -3.1605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7956, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6365, -2.7332, -3.0885, -3.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8667, device='cuda:0', dtype=torch.float64)
tensor([-1.8558, -2.6294, -2.7262, -3.0960, -3.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9029, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.6273, -2.7278, -3.1140, -3.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8358, device='cuda:0', dtype=torch.float64)
tensor([-1.8530, -2.6353, -2.7329, -3.1153, -3.1413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9336, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6418, -2.7471, -3.1084, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8805, device='cuda:0', dtype=torch.float64)
tensor([-1.8249, -2.6547, -2.7510, -3.0826, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9217, device='cuda:0', dtype=torch.float64)
tensor([-1.8061, -2.6481, -2.7622, -3.0868, -3.1420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7225, device='cuda:0', dtype=torch.float64)
tensor([-1.7995, -2.6412, -2.7615, -3.0925, -3.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8725, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.6420, -2.7500, -3.1028, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8830, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6417, -2.7404, -3.1077, -3.1238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8916, device='cuda:0', dtype=torch.float64)
tensor([-1.8444, -2.6455, -2.7290, -3.1032, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9257, device='cuda:0', dtype=torch.float64)
tensor([-1.8464, -2.6362, -2.7324, -3.0977, -3.1211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9894, device='cuda:0', dtype=torch.float64)
tensor([-1.8389, -2.6207, -2.7440, -3.1057, -3.1176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7936, device='cuda:0', dtype=torch.float64)
tensor([-1.8374, -2.6161, -2.7501, -3.1028, -3.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0368, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6308, -2.7364, -3.0876, -3.1382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8431, device='cuda:0', dtype=torch.float64)
tensor([-1.8397, -2.6441, -2.7298, -3.0772, -3.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6638, -2.7181, -3.0552, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0260, device='cuda:0', dtype=torch.float64)
tensor([-1.8093, -2.6627, -2.7232, -3.0592, -3.1505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0475, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6813, -2.7139, -3.0529, -3.1544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0396, device='cuda:0', dtype=torch.float64)
tensor([-1.8458, -2.7041, -2.6954, -3.0498, -3.1712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5441, device='cuda:0', dtype=torch.float64)
tensor([-1.8277, -2.6779, -2.7188, -3.0852, -3.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0773, device='cuda:0', dtype=torch.float64)
tensor([-1.8178, -2.6497, -2.7359, -3.1198, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3339, device='cuda:0', dtype=torch.float64)
tensor([-1.8366, -2.6393, -2.7448, -3.1250, -3.1524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9509, device='cuda:0', dtype=torch.float64)
tensor([-1.8137, -2.5890, -2.7793, -3.1458, -3.1277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3265, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.5768, -2.7824, -3.1321, -3.1243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0147, device='cuda:0', dtype=torch.float64)
tensor([-1.8435, -2.6059, -2.7565, -3.1071, -3.1436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9441, device='cuda:0', dtype=torch.float64)
tensor([-1.8423, -2.6213, -2.7454, -3.1148, -3.1307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5032, device='cuda:0', dtype=torch.float64)
tensor([-1.8664, -2.6719, -2.7117, -3.0844, -3.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9958, device='cuda:0', dtype=torch.float64)
tensor([-1.8725, -2.7038, -2.6998, -3.0565, -3.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6855, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6756, -2.7377, -3.0923, -3.1384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4189, device='cuda:0', dtype=torch.float64)
tensor([-1.8060, -2.6666, -2.7503, -3.0791, -3.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0259, device='cuda:0', dtype=torch.float64)
tensor([-1.8113, -2.6661, -2.7441, -3.0730, -3.1652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3844, device='cuda:0', dtype=torch.float64)
tensor([-1.8060, -2.6451, -2.7452, -3.0890, -3.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3465, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6487, -2.7239, -3.0704, -3.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1379, device='cuda:0', dtype=torch.float64)
tensor([-1.8243, -2.6336, -2.7243, -3.0897, -3.1381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9935, device='cuda:0', dtype=torch.float64)
tensor([-1.7986, -2.6055, -2.7448, -3.1260, -3.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4775, device='cuda:0', dtype=torch.float64)
tensor([-1.8134, -2.6117, -2.7410, -3.0984, -3.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0101, device='cuda:0', dtype=torch.float64)
tensor([-1.8241, -2.6127, -2.7418, -3.0869, -3.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0795, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6049, -2.7583, -3.1146, -3.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4381, device='cuda:0', dtype=torch.float64)
tensor([-1.8546, -2.6384, -2.7371, -3.0945, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9259, device='cuda:0', dtype=torch.float64)
tensor([-1.8711, -2.6564, -2.7259, -3.0882, -3.1432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8078, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6560, -2.7331, -3.1155, -3.1378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4407, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.6764, -2.7174, -3.1010, -3.1521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5275, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6633, -2.7310, -3.1159, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8521, device='cuda:0', dtype=torch.float64)
tensor([-1.8043, -2.6561, -2.7423, -3.1202, -3.1375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1359, device='cuda:0', dtype=torch.float64)
tensor([-1.8199, -2.6645, -2.7357, -3.0940, -3.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5284, device='cuda:0', dtype=torch.float64)
tensor([-1.8123, -2.6461, -2.7548, -3.1005, -3.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2778, device='cuda:0', dtype=torch.float64)
tensor([-1.8313, -2.6482, -2.7449, -3.0691, -3.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8344, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6433, -2.7372, -3.0473, -3.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9350, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6270, -2.7415, -3.0524, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1834, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6285, -2.7256, -3.0398, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0460, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6261, -2.7169, -3.0516, -3.1370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-1.8136, -2.6175, -2.7239, -3.0866, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6391, -2.7191, -3.0754, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9102, device='cuda:0', dtype=torch.float64)
tensor([-1.8358, -2.6609, -2.7170, -3.0583, -3.1497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1324, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6499, -2.7431, -3.0747, -3.1399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2858, device='cuda:0', dtype=torch.float64)
tensor([-1.8144, -2.6384, -2.7620, -3.0778, -3.1385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8674, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6402, -2.7665, -3.0842, -3.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9312, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6406, -2.7624, -3.0934, -3.1441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9891, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.6496, -2.7468, -3.0871, -3.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8560, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.6493, -2.7375, -3.0790, -3.1580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-1.8495, -2.6381, -2.7343, -3.0850, -3.1528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7398, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6280, -2.7396, -3.0920, -3.1528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9093, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6359, -2.7353, -3.0943, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8663, device='cuda:0', dtype=torch.float64)
tensor([-1.8135, -2.6471, -2.7398, -3.1028, -3.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7501, device='cuda:0', dtype=torch.float64)
tensor([-1.8166, -2.6574, -2.7430, -3.1084, -3.1516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9028, device='cuda:0', dtype=torch.float64)
tensor([-1.8306, -2.6706, -2.7361, -3.1056, -3.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8338, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6686, -2.7259, -3.1075, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0286, device='cuda:0', dtype=torch.float64)
tensor([-1.8226, -2.6471, -2.7239, -3.1146, -3.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2765, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6449, -2.7079, -3.0823, -3.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9266, device='cuda:0', dtype=torch.float64)
tensor([-1.8268, -2.6274, -2.7120, -3.0855, -3.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7517, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.6154, -2.7244, -3.1033, -3.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9003, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6297, -2.7192, -3.0976, -3.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9664, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6527, -2.7184, -3.0895, -3.1143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9728, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6632, -2.7246, -3.0925, -3.1194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1612, device='cuda:0', dtype=torch.float64)
tensor([-1.8507, -2.6799, -2.7136, -3.0687, -3.1444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1806, device='cuda:0', dtype=torch.float64)
tensor([-1.8315, -2.6579, -2.7266, -3.0749, -3.1472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0822, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6446, -2.7233, -3.0565, -3.1601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8325, device='cuda:0', dtype=torch.float64)
tensor([-1.8293, -2.6348, -2.7154, -3.0498, -3.1732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0650, device='cuda:0', dtype=torch.float64)
tensor([-1.8086, -2.6096, -2.7289, -3.0782, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8642, device='cuda:0', dtype=torch.float64)
tensor([-1.8026, -2.6036, -2.7363, -3.0991, -3.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0258, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6184, -2.7344, -3.0888, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8807, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6253, -2.7403, -3.0899, -3.1348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-1.8206, -2.6281, -2.7461, -3.1013, -3.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8710, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6395, -2.7411, -3.1028, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-1.8504, -2.6498, -2.7364, -3.1028, -3.1258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9157, device='cuda:0', dtype=torch.float64)
tensor([-1.8401, -2.6389, -2.7445, -3.1184, -3.1124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2108, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6415, -2.7388, -3.0940, -3.1193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8091, device='cuda:0', dtype=torch.float64)
tensor([-1.8314, -2.6424, -2.7383, -3.0837, -3.1245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0258, device='cuda:0', dtype=torch.float64)
tensor([-1.8057, -2.6291, -2.7506, -3.1105, -3.1124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2031, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6436, -2.7402, -3.1039, -3.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8098, device='cuda:0', dtype=torch.float64)
tensor([-1.8343, -2.6617, -2.7275, -3.1093, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2053, device='cuda:0', dtype=torch.float64)
tensor([-1.8262, -2.6396, -2.7328, -3.1241, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8337, device='cuda:0', dtype=torch.float64)
tensor([-1.8555, -2.6575, -2.7063, -3.0623, -3.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1040, device='cuda:0', dtype=torch.float64)
tensor([-1.8474, -2.6466, -2.7107, -3.0388, -3.1647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4388, device='cuda:0', dtype=torch.float64)
tensor([-1.8069, -2.6144, -2.7475, -3.0822, -3.1425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1199, device='cuda:0', dtype=torch.float64)
tensor([-1.8212, -2.6255, -2.7316, -3.0415, -3.1613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5620, device='cuda:0', dtype=torch.float64)
tensor([-1.8101, -2.6177, -2.7418, -3.0687, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8657, device='cuda:0', dtype=torch.float64)
tensor([-1.8074, -2.6190, -2.7500, -3.1140, -3.1383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9738, device='cuda:0', dtype=torch.float64)
tensor([-1.8537, -2.6716, -2.7065, -3.0978, -3.1657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9205, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6675, -2.7042, -3.1048, -3.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2048, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6606, -2.7147, -3.1069, -3.1503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2846, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6624, -2.7159, -3.1131, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8997, device='cuda:0', dtype=torch.float64)
tensor([-1.8122, -2.6210, -2.7468, -3.1249, -3.1292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4277, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6170, -2.7507, -3.1193, -3.1237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3362, device='cuda:0', dtype=torch.float64)
tensor([-1.8461, -2.6402, -2.7246, -3.0755, -3.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0363, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6150, -2.7338, -3.0956, -3.1112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9839, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.6122, -2.7337, -3.1065, -3.1040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4435, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6482, -2.7107, -3.0861, -3.1346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4868, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6233, -2.7482, -3.1261, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8583, device='cuda:0', dtype=torch.float64)
tensor([-1.8689, -2.6528, -2.7224, -3.0567, -3.1512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7383, device='cuda:0', dtype=torch.float64)
tensor([-1.8441, -2.6418, -2.7370, -3.0778, -3.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9753, device='cuda:0', dtype=torch.float64)
tensor([-1.8164, -2.6286, -2.7536, -3.1224, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4484, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6472, -2.7370, -3.1037, -3.1572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9188, device='cuda:0', dtype=torch.float64)
tensor([-1.8324, -2.6489, -2.7354, -3.0961, -3.1617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0633, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6298, -2.7548, -3.1131, -3.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6429, device='cuda:0', dtype=torch.float64)
tensor([-1.8382, -2.6425, -2.7405, -3.0657, -3.1582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0118, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6390, -2.7440, -3.0505, -3.1530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0723, device='cuda:0', dtype=torch.float64)
tensor([-1.8281, -2.6247, -2.7626, -3.0691, -3.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4775, device='cuda:0', dtype=torch.float64)
tensor([-1.8465, -2.6374, -2.7466, -3.0533, -3.1462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1601, device='cuda:0', dtype=torch.float64)
tensor([-1.8318, -2.6294, -2.7483, -3.0775, -3.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-1.8016, -2.6136, -2.7569, -3.1118, -3.1091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1961, device='cuda:0', dtype=torch.float64)
tensor([-1.8120, -2.6242, -2.7356, -3.0890, -3.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9632, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6451, -2.7120, -3.0689, -3.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2027, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6434, -2.7214, -3.0783, -3.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7222, device='cuda:0', dtype=torch.float64)
tensor([-1.8586, -2.6733, -2.7039, -3.0352, -3.1624], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9198, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.6769, -2.7114, -3.0323, -3.1592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2103, device='cuda:0', dtype=torch.float64)
tensor([-1.8087, -2.6416, -2.7513, -3.0811, -3.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7551, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6406, -2.7451, -3.0565, -3.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3104, device='cuda:0', dtype=torch.float64)
tensor([-1.8062, -2.6161, -2.7475, -3.0856, -3.1243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-1.7949, -2.5894, -2.7587, -3.1376, -3.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6910, device='cuda:0', dtype=torch.float64)
tensor([-1.8312, -2.6101, -2.7261, -3.1107, -3.1168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6306, -2.7167, -3.0977, -3.1307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2168, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6246, -2.7410, -3.1130, -3.1134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7414, device='cuda:0', dtype=torch.float64)
tensor([-1.8596, -2.6624, -2.7283, -3.0631, -3.1429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7619, device='cuda:0', dtype=torch.float64)
tensor([-1.8677, -2.6967, -2.7271, -3.0384, -3.1698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3767, device='cuda:0', dtype=torch.float64)
tensor([-1.8236, -2.6838, -2.7574, -3.0635, -3.1542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2687, device='cuda:0', dtype=torch.float64)
tensor([-1.8078, -2.6737, -2.7564, -3.0655, -3.1539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7765, device='cuda:0', dtype=torch.float64)
tensor([-1.7945, -2.6497, -2.7601, -3.0817, -3.1467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1791, device='cuda:0', dtype=torch.float64)
tensor([-1.7896, -2.6212, -2.7664, -3.1018, -3.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0741, device='cuda:0', dtype=torch.float64)
tensor([-1.8219, -2.6207, -2.7420, -3.0868, -3.1319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9401, device='cuda:0', dtype=torch.float64)
tensor([-1.8442, -2.6218, -2.7270, -3.0712, -3.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9679, device='cuda:0', dtype=torch.float64)
tensor([-1.8567, -2.6237, -2.7190, -3.0650, -3.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1581, device='cuda:0', dtype=torch.float64)
tensor([-1.8716, -2.6435, -2.7111, -3.0497, -3.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8600, device='cuda:0', dtype=torch.float64)
tensor([-1.8776, -2.6619, -2.7087, -3.0514, -3.1602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0165, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6443, -2.7327, -3.0950, -3.1477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1354, device='cuda:0', dtype=torch.float64)
tensor([-1.8095, -2.6337, -2.7508, -3.1081, -3.1434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([-1.8100, -2.6403, -2.7553, -3.1016, -3.1510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4171, device='cuda:0', dtype=torch.float64)
tensor([-1.8126, -2.6355, -2.7654, -3.1103, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2587, device='cuda:0', dtype=torch.float64)
tensor([-1.8518, -2.6628, -2.7383, -3.0872, -3.1614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1467, device='cuda:0', dtype=torch.float64)
tensor([-1.8582, -2.6725, -2.7292, -3.0998, -3.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5603, device='cuda:0', dtype=torch.float64)
tensor([-1.8109, -2.6349, -2.7560, -3.1516, -3.1136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2514, device='cuda:0', dtype=torch.float64)
tensor([-1.8128, -2.6287, -2.7428, -3.0982, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5145, device='cuda:0', dtype=torch.float64)
tensor([-1.7938, -2.5962, -2.7539, -3.0990, -3.1026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9163, device='cuda:0', dtype=torch.float64)
tensor([-1.7915, -2.5847, -2.7645, -3.1095, -3.0873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7312, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6298, -2.7213, -3.0598, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4384, device='cuda:0', dtype=torch.float64)
tensor([-1.8658, -2.6464, -2.7149, -3.0506, -3.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6988, device='cuda:0', dtype=torch.float64)
tensor([-1.8565, -2.6481, -2.7154, -3.0693, -3.1029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3117, device='cuda:0', dtype=torch.float64)
tensor([-1.8584, -2.6626, -2.7038, -3.0579, -3.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0895, device='cuda:0', dtype=torch.float64)
tensor([-1.8181, -2.6371, -2.7212, -3.0926, -3.1149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8555, device='cuda:0', dtype=torch.float64)
tensor([-1.7838, -2.6073, -2.7451, -3.1281, -3.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2978, device='cuda:0', dtype=torch.float64)
tensor([-1.8037, -2.6223, -2.7291, -3.1084, -3.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8858, device='cuda:0', dtype=torch.float64)
tensor([-1.8252, -2.6479, -2.7147, -3.0928, -3.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3993, device='cuda:0', dtype=torch.float64)
tensor([-1.8131, -2.6416, -2.7352, -3.1195, -3.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7145, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.6670, -2.7182, -3.0635, -3.1723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3593, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6574, -2.7302, -3.0474, -3.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8540, device='cuda:0', dtype=torch.float64)
tensor([-1.8304, -2.6414, -2.7461, -3.0583, -3.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4882, device='cuda:0', dtype=torch.float64)
tensor([-1.8388, -2.6435, -2.7374, -3.0447, -3.1824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5430, device='cuda:0', dtype=torch.float64)
tensor([-1.8190, -2.6188, -2.7567, -3.0674, -3.1464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6190, -2.7555, -3.0852, -3.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9648, device='cuda:0', dtype=torch.float64)
tensor([-1.8402, -2.6247, -2.7460, -3.0789, -3.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6191, -2.7397, -3.0887, -3.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9330, device='cuda:0', dtype=torch.float64)
tensor([-1.8085, -2.6061, -2.7456, -3.1038, -3.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9638, device='cuda:0', dtype=torch.float64)
tensor([-1.8004, -2.6098, -2.7460, -3.1081, -3.1124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0167, device='cuda:0', dtype=torch.float64)
tensor([-1.8030, -2.6170, -2.7483, -3.1124, -3.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0513, device='cuda:0', dtype=torch.float64)
tensor([-1.8415, -2.6484, -2.7216, -3.0848, -3.1139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8219, device='cuda:0', dtype=torch.float64)
tensor([-1.8724, -2.6670, -2.7047, -3.0677, -3.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9495, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6557, -2.7060, -3.0646, -3.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-1.8730, -2.6521, -2.7013, -3.0517, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4282, device='cuda:0', dtype=torch.float64)
tensor([-1.8325, -2.6179, -2.7284, -3.0703, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3665, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6288, -2.7231, -3.0583, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-1.8378, -2.6379, -2.7198, -3.0591, -3.1695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3401, device='cuda:0', dtype=torch.float64)
tensor([-1.8108, -2.6237, -2.7485, -3.1053, -3.1628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4868, device='cuda:0', dtype=torch.float64)
tensor([-1.8121, -2.6369, -2.7527, -3.0978, -3.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-1.8186, -2.6458, -2.7579, -3.0951, -3.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8683, device='cuda:0', dtype=torch.float64)
tensor([-1.8110, -2.6382, -2.7633, -3.1092, -3.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2169, device='cuda:0', dtype=torch.float64)
tensor([-1.8177, -2.6310, -2.7504, -3.1048, -3.1359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1739, device='cuda:0', dtype=torch.float64)
tensor([-1.8193, -2.6137, -2.7423, -3.1112, -3.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8783, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.6072, -2.7260, -3.0989, -3.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9044, device='cuda:0', dtype=torch.float64)
tensor([-1.8509, -2.6008, -2.7206, -3.0921, -3.1056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8357, device='cuda:0', dtype=torch.float64)
tensor([-1.8630, -2.6170, -2.7178, -3.0793, -3.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9076, device='cuda:0', dtype=torch.float64)
tensor([-1.8524, -2.6358, -2.7234, -3.0786, -3.1093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0114, device='cuda:0', dtype=torch.float64)
tensor([-1.8132, -2.6407, -2.7413, -3.0971, -3.1022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8732, device='cuda:0', dtype=torch.float64)
tensor([-1.8007, -2.6589, -2.7397, -3.0864, -3.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1923, device='cuda:0', dtype=torch.float64)
tensor([-1.8256, -2.6797, -2.7278, -3.0485, -3.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3617, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6518, -2.7371, -3.0493, -3.1200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4410, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6467, -2.7184, -3.0172, -3.1285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9782, device='cuda:0', dtype=torch.float64)
tensor([-1.8417, -2.6272, -2.7184, -3.0227, -3.1214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0685, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6103, -2.7286, -3.0544, -3.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1034, device='cuda:0', dtype=torch.float64)
tensor([-1.8446, -2.6221, -2.7263, -3.0742, -3.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0646, device='cuda:0', dtype=torch.float64)
tensor([-1.8437, -2.6358, -2.7333, -3.1068, -3.1230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1991, device='cuda:0', dtype=torch.float64)
tensor([-1.8099, -2.6174, -2.7638, -3.1499, -3.1108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5778, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6372, -2.7511, -3.1040, -3.1344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1560, device='cuda:0', dtype=torch.float64)
tensor([-1.8221, -2.6326, -2.7539, -3.0567, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-1.8104, -2.6192, -2.7625, -3.0521, -3.1482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4199, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6307, -2.7395, -3.0331, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0774, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6298, -2.7341, -3.0538, -3.1588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9190, device='cuda:0', dtype=torch.float64)
tensor([-1.8349, -2.6313, -2.7411, -3.0898, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5412, device='cuda:0', dtype=torch.float64)
tensor([-1.8606, -2.6680, -2.7287, -3.0936, -3.1618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6335, device='cuda:0', dtype=torch.float64)
tensor([-1.8332, -2.6466, -2.7550, -3.1475, -3.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3061, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6416, -2.7484, -3.1365, -3.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1917, device='cuda:0', dtype=torch.float64)
tensor([-1.8331, -2.6375, -2.7269, -3.1050, -3.1327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0960, device='cuda:0', dtype=torch.float64)
tensor([-1.8436, -2.6232, -2.7061, -3.0777, -3.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0123, device='cuda:0', dtype=torch.float64)
tensor([-1.8419, -2.6172, -2.6968, -3.0649, -3.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1662, device='cuda:0', dtype=torch.float64)
tensor([-1.8227, -2.6102, -2.7022, -3.0735, -3.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2173, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6273, -2.7016, -3.0608, -3.1175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3843, device='cuda:0', dtype=torch.float64)
tensor([-1.7953, -2.6209, -2.7275, -3.0838, -3.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-1.7973, -2.6324, -2.7426, -3.0918, -3.1041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-1.8258, -2.6557, -2.7349, -3.1036, -3.1225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6698, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.6467, -2.7471, -3.1388, -3.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2961, device='cuda:0', dtype=torch.float64)
tensor([-1.8618, -2.6656, -2.7357, -3.1257, -3.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([-1.8905, -2.6878, -2.7280, -3.0817, -3.1474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2685, device='cuda:0', dtype=torch.float64)
tensor([-1.8519, -2.6532, -2.7563, -3.0795, -3.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-1.8194, -2.6333, -2.7742, -3.0713, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-1.7907, -2.6233, -2.7846, -3.0742, -3.1442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0683, device='cuda:0', dtype=torch.float64)
tensor([-1.7770, -2.6158, -2.7886, -3.0951, -3.1389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8210, device='cuda:0', dtype=torch.float64)
tensor([-1.8011, -2.6314, -2.7670, -3.0902, -3.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0479, device='cuda:0', dtype=torch.float64)
tensor([-1.8353, -2.6456, -2.7380, -3.0727, -3.1541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3361, device='cuda:0', dtype=torch.float64)
tensor([-1.8370, -2.6267, -2.7327, -3.0904, -3.1320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2502, device='cuda:0', dtype=torch.float64)
tensor([-1.8629, -2.6370, -2.7076, -3.0795, -3.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1610, device='cuda:0', dtype=torch.float64)
tensor([-1.8737, -2.6380, -2.7012, -3.0756, -3.1213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2461, device='cuda:0', dtype=torch.float64)
tensor([-1.8697, -2.6349, -2.7023, -3.0703, -3.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9307, device='cuda:0', dtype=torch.float64)
tensor([-1.8363, -2.6212, -2.7148, -3.0781, -3.1060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9764, device='cuda:0', dtype=torch.float64)
tensor([-1.8052, -2.6051, -2.7239, -3.0866, -3.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0963, device='cuda:0', dtype=torch.float64)
tensor([-1.8053, -2.6124, -2.7203, -3.0775, -3.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1173, device='cuda:0', dtype=torch.float64)
tensor([-1.8176, -2.6279, -2.7204, -3.0634, -3.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([-1.8383, -2.6508, -2.7193, -3.0543, -3.1619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9463, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6639, -2.7167, -3.0480, -3.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3137, device='cuda:0', dtype=torch.float64)
tensor([-1.8214, -2.6357, -2.7459, -3.0880, -3.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2668, device='cuda:0', dtype=torch.float64)
tensor([-1.8175, -2.6266, -2.7535, -3.0828, -3.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9270, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6261, -2.7502, -3.0589, -3.1182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1586, device='cuda:0', dtype=torch.float64)
tensor([-1.8223, -2.6176, -2.7557, -3.0685, -3.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6225, -2.7457, -3.0636, -3.0995], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9161, device='cuda:0', dtype=torch.float64)
tensor([-1.8274, -2.6302, -2.7414, -3.0748, -3.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0181, device='cuda:0', dtype=torch.float64)
tensor([-1.8408, -2.6376, -2.7287, -3.0820, -3.1040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0326, device='cuda:0', dtype=torch.float64)
tensor([-1.8526, -2.6439, -2.7194, -3.0767, -3.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8794, device='cuda:0', dtype=torch.float64)
tensor([-1.8525, -2.6432, -2.7172, -3.0699, -3.1292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8300, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6320, -2.7295, -3.0759, -3.1303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9160, device='cuda:0', dtype=torch.float64)
tensor([-1.8090, -2.6226, -2.7437, -3.0986, -3.1283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0945, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6324, -2.7303, -3.0927, -3.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5150, device='cuda:0', dtype=torch.float64)
tensor([-1.7988, -2.6054, -2.7467, -3.1315, -3.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5635, device='cuda:0', dtype=torch.float64)
tensor([-1.8065, -2.6075, -2.7255, -3.1135, -3.1290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8723, device='cuda:0', dtype=torch.float64)
tensor([-1.8155, -2.6073, -2.7161, -3.0992, -3.1219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1854, device='cuda:0', dtype=torch.float64)
tensor([-1.8183, -2.6045, -2.7248, -3.0990, -3.1058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0632, device='cuda:0', dtype=torch.float64)
tensor([-1.8528, -2.6360, -2.7088, -3.0635, -3.1145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0260, device='cuda:0', dtype=torch.float64)
tensor([-1.8746, -2.6563, -2.7064, -3.0481, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1636, device='cuda:0', dtype=torch.float64)
tensor([-1.8460, -2.6427, -2.7268, -3.0736, -3.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2357, device='cuda:0', dtype=torch.float64)
tensor([-1.8342, -2.6424, -2.7244, -3.0777, -3.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4870, device='cuda:0', dtype=torch.float64)
tensor([-1.8501, -2.6622, -2.7070, -3.0541, -3.1631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8194, device='cuda:0', dtype=torch.float64)
tensor([-1.8093, -2.6304, -2.7400, -3.0886, -3.1380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5397, device='cuda:0', dtype=torch.float64)
tensor([-1.8077, -2.6344, -2.7433, -3.0582, -3.1386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1007, device='cuda:0', dtype=torch.float64)
tensor([-1.7983, -2.6310, -2.7588, -3.0682, -3.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3765, device='cuda:0', dtype=torch.float64)
tensor([-1.8048, -2.6288, -2.7581, -3.0924, -3.1106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6167, device='cuda:0', dtype=torch.float64)
tensor([-1.8549, -2.6553, -2.7118, -3.0627, -3.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3519, device='cuda:0', dtype=torch.float64)
tensor([-1.8489, -2.6363, -2.7084, -3.0854, -3.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5600, device='cuda:0', dtype=torch.float64)
tensor([-1.7995, -2.5796, -2.7487, -3.1368, -3.0853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5507, device='cuda:0', dtype=torch.float64)
tensor([-1.8080, -2.5751, -2.7433, -3.1052, -3.0907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2161, device='cuda:0', dtype=torch.float64)
tensor([-1.8319, -2.5900, -2.7325, -3.0671, -3.1029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-1.8466, -2.6172, -2.7203, -3.0452, -3.1054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8379, device='cuda:0', dtype=torch.float64)
tensor([-1.8853, -2.6621, -2.6837, -2.9864, -3.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6135, device='cuda:0', dtype=torch.float64)
tensor([-1.8542, -2.6568, -2.6960, -3.0131, -3.1294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0815, device='cuda:0', dtype=torch.float64)
tensor([-1.8116, -2.6353, -2.7247, -3.0605, -3.1179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2681, device='cuda:0', dtype=torch.float64)
tensor([-1.8162, -2.6468, -2.7238, -3.0633, -3.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9921, device='cuda:0', dtype=torch.float64)
tensor([-1.8251, -2.6575, -2.7182, -3.0406, -3.1471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0607, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6471, -2.7207, -3.0478, -3.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2614, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6347, -2.7186, -3.0540, -3.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0770, device='cuda:0', dtype=torch.float64)
tensor([-1.8209, -2.6167, -2.7293, -3.1146, -3.1320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7706, device='cuda:0', dtype=torch.float64)
tensor([-1.7975, -2.5706, -2.7608, -3.1941, -3.0970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8791, device='cuda:0', dtype=torch.float64)
tensor([-1.8434, -2.5813, -2.7372, -3.1539, -3.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2602, device='cuda:0', dtype=torch.float64)
tensor([-1.8707, -2.5921, -2.7303, -3.1280, -3.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0878, device='cuda:0', dtype=torch.float64)
tensor([-1.8385, -2.5822, -2.7653, -3.1360, -3.0796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1186, device='cuda:0', dtype=torch.float64)
tensor([-1.8743, -2.6450, -2.7307, -3.0526, -3.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6536, device='cuda:0', dtype=torch.float64)
tensor([-1.8623, -2.6693, -2.7297, -3.0324, -3.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2834, device='cuda:0', dtype=torch.float64)
tensor([-1.8225, -2.6618, -2.7519, -3.0862, -3.1127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3905, device='cuda:0', dtype=torch.float64)
tensor([-1.8320, -2.6791, -2.7195, -3.0394, -3.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3114, device='cuda:0', dtype=torch.float64)
tensor([-1.8125, -2.6532, -2.7185, -3.0612, -3.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4748, device='cuda:0', dtype=torch.float64)
tensor([-1.8017, -2.6293, -2.7328, -3.1052, -3.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2662, device='cuda:0', dtype=torch.float64)
tensor([-1.8608, -2.6734, -2.6959, -3.0698, -3.1923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9261, device='cuda:0', dtype=torch.float64)
tensor([-1.7988, -2.6137, -2.7495, -3.1373, -3.1393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3235, device='cuda:0', dtype=torch.float64)
tensor([-1.7839, -2.5875, -2.7734, -3.1464, -3.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2036, device='cuda:0', dtype=torch.float64)
tensor([-1.8451, -2.6279, -2.7197, -3.0486, -3.1824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7567, device='cuda:0', dtype=torch.float64)
tensor([-1.8160, -2.6007, -2.7321, -3.0734, -3.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0042, device='cuda:0', dtype=torch.float64)
tensor([-1.8335, -2.6257, -2.7046, -3.0548, -3.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8007, device='cuda:0', dtype=torch.float64)
tensor([-1.8578, -2.6526, -2.6835, -3.0662, -3.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8293, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6361, -2.7030, -3.1008, -3.1072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9505, device='cuda:0', dtype=torch.float64)
tensor([-1.8601, -2.6531, -2.6936, -3.0619, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1439, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.6503, -2.7046, -3.0586, -3.1238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4789, device='cuda:0', dtype=torch.float64)
tensor([-1.7864, -2.6061, -2.7492, -3.1145, -3.0790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1403, device='cuda:0', dtype=torch.float64)
tensor([-1.7818, -2.6065, -2.7576, -3.1209, -3.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1244, device='cuda:0', dtype=torch.float64)
tensor([-1.8299, -2.6402, -2.7327, -3.0851, -3.1049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7175, device='cuda:0', dtype=torch.float64)
tensor([-1.8392, -2.6405, -2.7353, -3.0864, -3.0919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1804, device='cuda:0', dtype=torch.float64)
tensor([-1.8514, -2.6449, -2.7308, -3.0693, -3.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2309, device='cuda:0', dtype=torch.float64)
tensor([-1.8637, -2.6463, -2.7209, -3.0330, -3.1043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3556, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6263, -2.7316, -3.0332, -3.1076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1394, device='cuda:0', dtype=torch.float64)
tensor([-1.8118, -2.6089, -2.7499, -3.0714, -3.1132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6965, device='cuda:0', dtype=torch.float64)
tensor([-1.8284, -2.6273, -2.7248, -3.0487, -3.1546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5651, device='cuda:0', dtype=torch.float64)
tensor([-1.8198, -2.6303, -2.7256, -3.0781, -3.1621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2131, device='cuda:0', dtype=torch.float64)
tensor([-1.8034, -2.6249, -2.7507, -3.1408, -3.1545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8515, device='cuda:0', dtype=torch.float64)
tensor([-1.8472, -2.6596, -2.7289, -3.0783, -3.1881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8053, device='cuda:0', dtype=torch.float64)
tensor([-1.8722, -2.6726, -2.7198, -3.0436, -3.2101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6051, device='cuda:0', dtype=torch.float64)
tensor([-1.8351, -2.6235, -2.7486, -3.0798, -3.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5490, device='cuda:0', dtype=torch.float64)
tensor([-1.8346, -2.6145, -2.7406, -3.0682, -3.1513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1267, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6149, -2.7384, -3.0784, -3.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0269, device='cuda:0', dtype=torch.float64)
tensor([-1.8142, -2.6071, -2.7510, -3.1231, -3.1071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2861, device='cuda:0', dtype=torch.float64)
tensor([-1.8203, -2.6097, -2.7368, -3.1146, -3.1007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8738, device='cuda:0', dtype=torch.float64)
tensor([-1.8376, -2.6212, -2.7198, -3.0765, -3.1088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2773, device='cuda:0', dtype=torch.float64)
tensor([-1.8238, -2.6113, -2.7239, -3.0761, -3.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9859, device='cuda:0', dtype=torch.float64)
tensor([-1.8260, -2.6187, -2.7215, -3.0780, -3.0870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-1.8557, -2.6470, -2.7010, -3.0521, -3.1087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6672, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6326, -2.7157, -3.0782, -3.0952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0951, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6314, -2.7137, -3.0845, -3.0997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1930, device='cuda:0', dtype=torch.float64)
tensor([-1.8345, -2.6355, -2.7046, -3.0582, -3.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0886, device='cuda:0', dtype=torch.float64)
tensor([-1.8082, -2.6198, -2.7139, -3.0650, -3.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8638, device='cuda:0', dtype=torch.float64)
tensor([-1.7978, -2.6094, -2.7194, -3.0659, -3.1047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0510, device='cuda:0', dtype=torch.float64)
tensor([-1.8271, -2.6252, -2.7065, -3.0394, -3.1166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9658, device='cuda:0', dtype=torch.float64)
tensor([-1.8257, -2.6182, -2.7256, -3.0551, -3.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([-1.8300, -2.6165, -2.7407, -3.0688, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-1.8468, -2.6258, -2.7428, -3.0659, -3.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9152, device='cuda:0', dtype=torch.float64)
tensor([-1.8261, -2.6113, -2.7697, -3.0971, -3.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0071, device='cuda:0', dtype=torch.float64)
tensor([-1.8151, -2.6081, -2.7845, -3.1058, -3.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0261, device='cuda:0', dtype=torch.float64)
tensor([-1.8106, -2.6095, -2.7941, -3.1105, -3.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-1.8270, -2.6255, -2.7779, -3.0879, -3.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0595, device='cuda:0', dtype=torch.float64)
tensor([-1.8496, -2.6411, -2.7455, -3.0565, -3.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7943, device='cuda:0', dtype=torch.float64)
tensor([-1.8523, -2.6386, -2.7170, -3.0433, -3.1443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9064, device='cuda:0', dtype=torch.float64)
tensor([-1.8422, -2.6298, -2.6947, -3.0444, -3.1305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6214, -2.6862, -3.0615, -3.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0565, device='cuda:0', dtype=torch.float64)
tensor([-1.8140, -2.6170, -2.6901, -3.0777, -3.1014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7956, device='cuda:0', dtype=torch.float64)
tensor([-1.8062, -2.6236, -2.6994, -3.0902, -3.0990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1391, device='cuda:0', dtype=torch.float64)
tensor([-1.8237, -2.6496, -2.6967, -3.0632, -3.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7239, device='cuda:0', dtype=torch.float64)
tensor([-1.8030, -2.6267, -2.7250, -3.0829, -3.0919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2344, device='cuda:0', dtype=torch.float64)
tensor([-1.8356, -2.6314, -2.7185, -3.0500, -3.1000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1774, device='cuda:0', dtype=torch.float64)
tensor([-1.8813, -2.6402, -2.7009, -3.0119, -3.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4789, device='cuda:0', dtype=torch.float64)
tensor([-1.8626, -2.6074, -2.7175, -3.0656, -3.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-1.8269, -2.5799, -2.7328, -3.1207, -3.1077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9033, device='cuda:0', dtype=torch.float64)
tensor([-1.8091, -2.5730, -2.7347, -3.1377, -3.1052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2613, device='cuda:0', dtype=torch.float64)
tensor([-1.8170, -2.5953, -2.7393, -3.1224, -3.1098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0678, device='cuda:0', dtype=torch.float64)
tensor([-1.8373, -2.6295, -2.7407, -3.0948, -3.1176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0682, device='cuda:0', dtype=torch.float64)
tensor([-1.8429, -2.6542, -2.7347, -3.0548, -3.1285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8119, device='cuda:0', dtype=torch.float64)
tensor([-1.8368, -2.6555, -2.7321, -3.0292, -3.1390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9282, device='cuda:0', dtype=torch.float64)
tensor([-1.8330, -2.6481, -2.7228, -3.0135, -3.1481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7492, device='cuda:0', dtype=torch.float64)
tensor([-1.8169, -2.6331, -2.7188, -3.0276, -3.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-1.7957, -2.6162, -2.7210, -3.0660, -3.1193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9156, device='cuda:0', dtype=torch.float64)
tensor([-1.7947, -2.6194, -2.7192, -3.0918, -3.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9625, device='cuda:0', dtype=torch.float64)
tensor([-1.8154, -2.6310, -2.7188, -3.1067, -3.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8956, device='cuda:0', dtype=torch.float64)
tensor([-1.8360, -2.6306, -2.7225, -3.1002, -3.1104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9787, device='cuda:0', dtype=torch.float64)
tensor([-1.8556, -2.6208, -2.7227, -3.0710, -3.1267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0775, device='cuda:0', dtype=torch.float64)
tensor([-1.8767, -2.6217, -2.7211, -3.0492, -3.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2767, device='cuda:0', dtype=torch.float64)
tensor([-1.8538, -2.6065, -2.7449, -3.0628, -3.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1142, device='cuda:0', dtype=torch.float64)
tensor([-1.8352, -2.6166, -2.7464, -3.0797, -3.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1604, device='cuda:0', dtype=torch.float64)
tensor([-1.8375, -2.6481, -2.7276, -3.0750, -3.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-1.8168, -2.6464, -2.7362, -3.0905, -3.1318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1317, device='cuda:0', dtype=torch.float64)
tensor([-1.8218, -2.6479, -2.7262, -3.0855, -3.1468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3098, device='cuda:0', dtype=torch.float64)
tensor([-1.8196, -2.6373, -2.7283, -3.0855, -3.1438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8330, device='cuda:0', dtype=torch.float64)
tensor([-1.8117, -2.6234, -2.7377, -3.1006, -3.1273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9542, device='cuda:0', dtype=torch.float64)
tensor([-1.8234, -2.6295, -2.7396, -3.1051, -3.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9575, device='cuda:0', dtype=torch.float64)
tensor([-1.8294, -2.6355, -2.7388, -3.1102, -3.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9462, device='cuda:0', dtype=torch.float64)
tensor([-1.8265, -2.6298, -2.7366, -3.1129, -3.0982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([-1.8220, -2.6093, -2.7366, -3.1026, -3.0883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1473, device='cuda:0', dtype=torch.float64)
tensor([-1.8276, -2.5899, -2.7320, -3.0754, -3.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9676, device='cuda:0', dtype=torch.float64)
tensor([-1.8395, -2.5873, -2.7212, -3.0475, -3.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9480, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.5979, -2.7091, -3.0433, -3.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0450, device='cuda:0', dtype=torch.float64)
tensor([-1.8443, -2.6044, -2.7042, -3.0675, -3.0979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0339, device='cuda:0', dtype=torch.float64)
tensor([-1.8505, -2.6222, -2.6955, -3.0635, -3.1097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0338, device='cuda:0', dtype=torch.float64)
tensor([-1.8409, -2.6297, -2.7072, -3.0843, -3.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1300, device='cuda:0', dtype=torch.float64)
tensor([-1.8322, -2.6438, -2.7246, -3.0978, -3.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0245, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6599, -2.7387, -3.0899, -3.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0514, device='cuda:0', dtype=torch.float64)
tensor([-1.7977, -2.6387, -2.7588, -3.0913, -3.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2489, device='cuda:0', dtype=torch.float64)
tensor([-1.7745, -2.6039, -2.7671, -3.0900, -3.1421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2998, device='cuda:0', dtype=torch.float64)
tensor([-1.7965, -2.5922, -2.7404, -3.0486, -3.1500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8720, device='cuda:0', dtype=torch.float64)
tensor([-1.8448, -2.6060, -2.7041, -3.0184, -3.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1002, device='cuda:0', dtype=torch.float64)
tensor([-1.8731, -2.6246, -2.6882, -3.0110, -3.1565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8476, device='cuda:0', dtype=torch.float64)
tensor([-1.8734, -2.6341, -2.6977, -3.0262, -3.1409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-1.8350, -2.6244, -2.7246, -3.0676, -3.1162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0887, device='cuda:0', dtype=torch.float64)
tensor([-1.8125, -2.6185, -2.7414, -3.0921, -3.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9993, device='cuda:0', dtype=torch.float64)
tensor([-1.8025, -2.6129, -2.7464, -3.1098, -3.1022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1238, device='cuda:0', dtype=torch.float64)
tensor([-1.7976, -2.6011, -2.7457, -3.1309, -3.0924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0395, device='cuda:0', dtype=torch.float64)
tensor([-1.8205, -2.6120, -2.7154, -3.1138, -3.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8637, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6329, -2.6894, -3.0907, -3.1157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0661, device='cuda:0', dtype=torch.float64)
tensor([-1.8590, -2.6481, -2.6859, -3.0584, -3.1342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-1.8393, -2.6468, -2.7029, -3.0390, -3.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8402, device='cuda:0', dtype=torch.float64)
tensor([-1.8113, -2.6314, -2.7331, -3.0430, -3.1299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9935, device='cuda:0', dtype=torch.float64)
tensor([-1.8102, -2.6365, -2.7445, -3.0395, -3.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0476, device='cuda:0', dtype=torch.float64)
tensor([-1.8308, -2.6519, -2.7351, -3.0329, -3.1430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8662, device='cuda:0', dtype=torch.float64)
tensor([-1.8231, -2.6338, -2.7402, -3.0614, -3.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0698, device='cuda:0', dtype=torch.float64)
tensor([-1.8060, -2.5974, -2.7538, -3.1096, -3.1055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-1.8289, -2.5961, -2.7410, -3.1102, -3.0957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9551, device='cuda:0', dtype=torch.float64)
tensor([-1.8541, -2.5943, -2.7297, -3.0954, -3.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8765, device='cuda:0', dtype=torch.float64)
tensor([-1.8601, -2.5970, -2.7286, -3.0837, -3.0680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2282, device='cuda:0', dtype=torch.float64)
tensor([-1.8655, -2.6197, -2.7164, -3.0410, -3.0783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1365, device='cuda:0', dtype=torch.float64)
tensor([-1.8485, -2.6292, -2.7214, -3.0303, -3.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0950, device='cuda:0', dtype=torch.float64)
tensor([-1.8082, -2.6242, -2.7462, -3.0573, -3.1044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2788, device='cuda:0', dtype=torch.float64)
tensor([-1.7950, -2.6311, -2.7565, -3.0609, -3.1284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9334, device='cuda:0', dtype=torch.float64)
tensor([-1.7869, -2.6355, -2.7611, -3.1023, -3.1433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2023, device='cuda:0', dtype=torch.float64)
tensor([-1.7831, -2.6277, -2.7706, -3.1336, -3.1322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9921, device='cuda:0', dtype=torch.float64)
tensor([-1.8593, -2.6772, -2.7053, -3.0698, -3.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-1.8771, -2.6742, -2.6860, -3.0474, -3.1736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0963, device='cuda:0', dtype=torch.float64)
tensor([-1.8511, -2.6386, -2.6888, -3.0374, -3.1622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7382, device='cuda:0', dtype=torch.float64)
tensor([-1.8115, -2.5923, -2.7073, -3.0507, -3.1423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9418, device='cuda:0', dtype=torch.float64)
tensor([-1.7852, -2.5669, -2.7260, -3.0701, -3.1238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9435, device='cuda:0', dtype=torch.float64)
tensor([-1.7930, -2.5659, -2.7250, -3.0762, -3.1148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0298, device='cuda:0', dtype=torch.float64)
tensor([-1.8512, -2.6102, -2.6889, -3.0438, -3.1319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2906, device='cuda:0', dtype=torch.float64)
tensor([-1.8672, -2.6268, -2.6854, -3.0698, -3.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9453, device='cuda:0', dtype=torch.float64)
tensor([-1.8622, -2.6356, -2.6982, -3.0997, -3.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6210, device='cuda:0', dtype=torch.float64)
tensor([-1.8657, -2.6481, -2.6988, -3.0844, -3.1045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1034, device='cuda:0', dtype=torch.float64)
tensor([-1.8414, -2.6274, -2.7170, -3.0718, -3.1040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1906, device='cuda:0', dtype=torch.float64)
tensor([-1.8008, -2.6045, -2.7409, -3.0838, -3.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2111, device='cuda:0', dtype=torch.float64)
tensor([-1.7977, -2.6180, -2.7314, -3.0811, -3.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7887, device='cuda:0', dtype=torch.float64)
tensor([-1.7727, -2.6176, -2.7495, -3.0992, -3.1101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6904, device='cuda:0', dtype=torch.float64)
tensor([-1.8217, -2.6583, -2.7212, -3.0518, -3.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-1.8344, -2.6673, -2.7204, -3.0501, -3.1512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-1.8159, -2.6356, -2.7408, -3.0810, -3.1283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4612, device='cuda:0', dtype=torch.float64)
tensor([-1.8412, -2.6239, -2.7272, -3.0520, -3.1398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7911, device='cuda:0', dtype=torch.float64)
tensor([-1.8303, -2.5748, -2.7444, -3.0584, -3.1129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2443, device='cuda:0', dtype=torch.float64)
tensor([-1.8605, -2.5714, -2.7372, -3.0491, -3.1225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2730, device='cuda:0', dtype=torch.float64)
tensor([-1.8780, -2.6001, -2.7189, -3.0451, -3.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5564, device='cuda:0', dtype=torch.float64)
tensor([-1.8230, -2.5875, -2.7446, -3.1088, -3.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8289, device='cuda:0', dtype=torch.float64)
tensor([-1.8283, -2.6283, -2.7129, -3.0848, -3.1059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1081, device='cuda:0', dtype=torch.float64)
tensor([-1.8411, -2.6675, -2.6788, -3.0303, -3.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4945, device='cuda:0', dtype=torch.float64)
tensor([-1.8010, -2.6329, -2.7029, -3.0384, -3.1065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5907, device='cuda:0', dtype=torch.float64)
tensor([-1.8091, -2.6213, -2.7039, -3.0057, -3.1028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4366, device='cuda:0', dtype=torch.float64)
tensor([-1.8172, -2.6043, -2.7264, -3.0210, -3.0768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9850, device='cuda:0', dtype=torch.float64)
tensor([-1.8394, -2.6003, -2.7438, -3.0550, -3.0698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4230, device='cuda:0', dtype=torch.float64)
tensor([-1.8926, -2.6321, -2.7262, -3.0438, -3.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3033, device='cuda:0', dtype=torch.float64)
tensor([-1.8745, -2.6252, -2.7372, -3.0934, -3.1053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-1.8295, -2.6102, -2.7644, -3.1275, -3.1033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0024, device='cuda:0', dtype=torch.float64)
tensor([-1.8508, -2.6553, -2.7269, -3.0807, -3.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0661, device='cuda:0', dtype=torch.float64)
tensor([-1.7746, -2.6176, -2.7704, -3.1259, -3.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2969, device='cuda:0', dtype=torch.float64)
tensor([-1.8291, -2.6666, -2.7071, -3.0834, -3.1569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4934, device='cuda:0', dtype=torch.float64)
tensor([-1.7534, -2.6145, -2.7541, -3.1989, -3.0952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6030, device='cuda:0', dtype=torch.float64)
tensor([-1.8517, -2.6824, -2.6942, -3.1743, -3.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.8892, device='cuda:0', dtype=torch.float64)
tensor([-23.6143, -17.2156,  -3.9622, -28.3596, -12.0688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(157.6670, device='cuda:0', dtype=torch.float64)
tensor([-1706.1202, -2533.7678, -3318.6107, -6457.6986, -1789.4854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1801.1742, device='cuda:0', dtype=torch.float64)
tensor([-358.9847, -194.0578, -255.7756, -269.1909, -432.4177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(499.6826, device='cuda:0', dtype=torch.float64)
tensor([-1603.5813, -1852.9770, -1131.2800,  -855.9254, -1622.6508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(1050.3642, device='cuda:0', dtype=torch.float64)
tensor([ -860.3722, -1076.8994,  -660.0346,  -492.7811,  -899.8927],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(577.6116, device='cuda:0', dtype=torch.float64)
tensor([-292.4926, -414.3419, -244.6592, -208.1583, -522.8878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(200.4910, device='cuda:0', dtype=torch.float64)
tensor([-249.6113, -276.3410, -159.7337, -219.7799, -453.3592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(140.3685, device='cuda:0', dtype=torch.float64)
tensor([-227.8484, -231.4004, -193.3363, -228.9232, -435.9629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(171.9896, device='cuda:0', dtype=torch.float64)
tensor([-188.1039, -206.9640, -218.5460, -253.5305, -427.4840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(169.5667, device='cuda:0', dtype=torch.float64)
tensor([-155.2108, -187.3703, -196.9504, -246.8989, -384.6878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(146.9712, device='cuda:0', dtype=torch.float64)
tensor([-136.8499, -174.6383, -167.2717, -223.7807, -316.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(114.6937, device='cuda:0', dtype=torch.float64)
tensor([-124.2981, -165.5600, -146.6501, -198.2642, -250.5769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(92.6432, device='cuda:0', dtype=torch.float64)
tensor([-113.0129, -150.6817, -129.1728, -182.6800, -202.9883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(76.6871, device='cuda:0', dtype=torch.float64)
tensor([ -98.5067, -131.1474, -113.9113, -169.0421, -170.9100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(65.0850, device='cuda:0', dtype=torch.float64)
tensor([ -85.9727, -114.0566, -104.7895, -153.9630, -149.9050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(56.6377, device='cuda:0', dtype=torch.float64)
tensor([ -77.6187, -101.1779,  -99.3255, -139.1081, -133.9426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(52.4002, device='cuda:0', dtype=torch.float64)
tensor([ -76.0438,  -92.1485,  -96.3651, -126.5546, -122.7527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(50.3980, device='cuda:0', dtype=torch.float64)
tensor([ -75.0193,  -85.3046,  -93.7889, -116.4004, -115.8507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(50.6021, device='cuda:0', dtype=torch.float64)
tensor([ -72.0586,  -79.8267,  -91.0995, -105.9504, -108.7148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(49.1067, device='cuda:0', dtype=torch.float64)
tensor([ -65.3552,  -76.2821,  -87.8146,  -94.7041, -101.7561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(46.2557, device='cuda:0', dtype=torch.float64)
tensor([-56.4823, -74.4561, -82.9789, -83.7562, -95.9514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(41.7942, device='cuda:0', dtype=torch.float64)
tensor([-47.7592, -73.8779, -77.4204, -74.8449, -90.4025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(36.7572, device='cuda:0', dtype=torch.float64)
tensor([-40.2957, -73.7824, -71.2945, -68.2698, -85.4181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(32.8562, device='cuda:0', dtype=torch.float64)
tensor([-34.5910, -73.2824, -65.0210, -63.2625, -81.1479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(30.1617, device='cuda:0', dtype=torch.float64)
tensor([-30.4047, -71.7976, -58.9151, -59.5656, -77.1242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(28.3872, device='cuda:0', dtype=torch.float64)
tensor([-27.1851, -69.1863, -53.1233, -56.8142, -72.9130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(27.0843, device='cuda:0', dtype=torch.float64)
tensor([-24.6928, -65.5676, -47.8033, -54.5895, -68.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(25.8670, device='cuda:0', dtype=torch.float64)
tensor([-22.7655, -61.2397, -43.0246, -52.4987, -64.0547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(24.7560, device='cuda:0', dtype=torch.float64)
tensor([-21.2631, -56.5067, -38.7937, -50.3111, -59.8611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(23.4361, device='cuda:0', dtype=torch.float64)
tensor([-20.1027, -51.7094, -35.1153, -47.9639, -55.9458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(21.9058, device='cuda:0', dtype=torch.float64)
tensor([-19.2698, -47.1583, -31.9748, -45.5255, -52.2727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(20.3022, device='cuda:0', dtype=torch.float64)
tensor([-18.7872, -43.1719, -29.3717, -43.1029, -48.8445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(18.8958, device='cuda:0', dtype=torch.float64)
tensor([-18.6044, -39.9621, -27.2389, -40.7884, -45.7286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(17.6218, device='cuda:0', dtype=torch.float64)
tensor([-18.6185, -37.5784, -25.4806, -38.6687, -43.0047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.7081, device='cuda:0', dtype=torch.float64)
tensor([-18.7017, -35.9177, -23.9896, -36.7610, -40.7055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(16.0567, device='cuda:0', dtype=torch.float64)
tensor([-18.7371, -34.8172, -22.6942, -35.0889, -38.8330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.6442, device='cuda:0', dtype=torch.float64)
tensor([-18.6541, -34.0864, -21.5696, -33.6390, -37.3233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(15.3385, device='cuda:0', dtype=torch.float64)
tensor([-18.4263, -33.5442, -20.6186, -32.4003, -36.1040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.9835, device='cuda:0', dtype=torch.float64)
tensor([-18.0296, -33.0650, -19.8400, -31.3542, -35.0596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.6877, device='cuda:0', dtype=torch.float64)
tensor([-17.4671, -32.5779, -19.2132, -30.4664, -34.0914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(14.3013, device='cuda:0', dtype=torch.float64)
tensor([-16.7638, -32.0250, -18.7122, -29.7033, -33.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.8994, device='cuda:0', dtype=torch.float64)
tensor([-15.9660, -31.3772, -18.3114, -29.0370, -32.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(13.4041, device='cuda:0', dtype=torch.float64)
tensor([-15.1334, -30.6400, -17.9832, -28.4514, -31.2993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.8370, device='cuda:0', dtype=torch.float64)
tensor([-14.3036, -29.8297, -17.7160, -27.9304, -30.4441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(12.3483, device='cuda:0', dtype=torch.float64)
tensor([-13.5113, -28.9512, -17.5052, -27.4647, -29.6688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.6691, device='cuda:0', dtype=torch.float64)
tensor([-12.7902, -28.0208, -17.3496, -27.0352, -28.9893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(11.1343, device='cuda:0', dtype=torch.float64)
tensor([-12.1531, -27.0569, -17.2480, -26.6272, -28.4031], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.6797, device='cuda:0', dtype=torch.float64)
tensor([-11.5992, -26.0849, -17.1915, -26.2310, -27.8957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(10.2178, device='cuda:0', dtype=torch.float64)
tensor([-11.1265, -25.1320, -17.1583, -25.8335, -27.4488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.9341, device='cuda:0', dtype=torch.float64)
tensor([-10.7284, -24.2187, -17.1268, -25.4289, -27.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.6085, device='cuda:0', dtype=torch.float64)
tensor([-10.3942, -23.3667, -17.0745, -25.0138, -26.6564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.4241, device='cuda:0', dtype=torch.float64)
tensor([-10.1180, -22.5853, -16.9840, -24.5871, -26.2757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.2558, device='cuda:0', dtype=torch.float64)
tensor([ -9.8911, -21.8841, -16.8449, -24.1524, -25.8910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(9.0930, device='cuda:0', dtype=torch.float64)
tensor([ -9.7005, -21.2691, -16.6574, -23.7146, -25.5023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.9438, device='cuda:0', dtype=torch.float64)
tensor([ -9.5378, -20.7410, -16.4300, -23.2806, -25.1082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.7245, device='cuda:0', dtype=torch.float64)
tensor([ -9.3957, -20.2907, -16.1747, -22.8545, -24.7149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.5785, device='cuda:0', dtype=torch.float64)
tensor([ -9.2650, -19.9101, -15.9064, -22.4469, -24.3286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.3255, device='cuda:0', dtype=torch.float64)
tensor([ -9.1405, -19.5883, -15.6368, -22.0619, -23.9526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(8.1261, device='cuda:0', dtype=torch.float64)
tensor([ -9.0188, -19.3166, -15.3773, -21.7040, -23.5896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.9617, device='cuda:0', dtype=torch.float64)
tensor([ -8.8970, -19.0846, -15.1331, -21.3757, -23.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.7465, device='cuda:0', dtype=torch.float64)
tensor([ -8.7735, -18.8794, -14.9101, -21.0773, -22.9084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.6405, device='cuda:0', dtype=torch.float64)
tensor([ -8.6506, -18.6935, -14.7073, -20.8099, -22.5922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.5172, device='cuda:0', dtype=torch.float64)
tensor([ -8.5273, -18.5198, -14.5229, -20.5725, -22.2893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.3610, device='cuda:0', dtype=torch.float64)
tensor([ -8.4059, -18.3505, -14.3552, -20.3635, -21.9982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(7.2087, device='cuda:0', dtype=torch.float64)
tensor([ -8.2877, -18.1784, -14.2025, -20.1797, -21.7198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.9279, device='cuda:0', dtype=torch.float64)
tensor([ -8.1734, -17.9995, -14.0619, -20.0157, -21.4548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.8656, device='cuda:0', dtype=torch.float64)
tensor([ -8.0622, -17.8097, -13.9329, -19.8702, -21.2024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.7614, device='cuda:0', dtype=torch.float64)
tensor([ -7.9586, -17.6131, -13.8133, -19.7360, -20.9639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.5689, device='cuda:0', dtype=torch.float64)
tensor([ -7.8628, -17.4106, -13.7016, -19.6092, -20.7390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.3650, device='cuda:0', dtype=torch.float64)
tensor([ -7.7757, -17.2025, -13.5942, -19.4824, -20.5251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.1628, device='cuda:0', dtype=torch.float64)
tensor([ -7.6972, -16.9919, -13.4877, -19.3544, -20.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(6.0538, device='cuda:0', dtype=torch.float64)
tensor([ -7.6235, -16.7842, -13.3820, -19.2222, -20.1233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.8989, device='cuda:0', dtype=torch.float64)
tensor([ -7.5541, -16.5810, -13.2777, -19.0845, -19.9304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.7888, device='cuda:0', dtype=torch.float64)
tensor([ -7.4873, -16.3856, -13.1706, -18.9401, -19.7374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.6463, device='cuda:0', dtype=torch.float64)
tensor([ -7.4227, -16.1950, -13.0624, -18.7869, -19.5416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.5248, device='cuda:0', dtype=torch.float64)
tensor([ -7.3585, -16.0135, -12.9531, -18.6267, -19.3456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3975, device='cuda:0', dtype=torch.float64)
tensor([ -7.2964, -15.8416, -12.8424, -18.4593, -19.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.3184, device='cuda:0', dtype=torch.float64)
tensor([ -7.2354, -15.6811, -12.7314, -18.2861, -18.9553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2695, device='cuda:0', dtype=torch.float64)
tensor([ -7.1763, -15.5292, -12.6222, -18.1072, -18.7639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.2019, device='cuda:0', dtype=torch.float64)
tensor([ -7.1204, -15.3865, -12.5141, -17.9247, -18.5774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.1220, device='cuda:0', dtype=torch.float64)
tensor([ -7.0694, -15.2534, -12.4084, -17.7440, -18.3954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0431, device='cuda:0', dtype=torch.float64)
tensor([ -7.0221, -15.1268, -12.3068, -17.5663, -18.2177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(5.0266, device='cuda:0', dtype=torch.float64)
tensor([ -6.9804, -15.0062, -12.2084, -17.3925, -18.0450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9551, device='cuda:0', dtype=torch.float64)
tensor([ -6.9398, -14.8925, -12.1171, -17.2249, -17.8793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.9261, device='cuda:0', dtype=torch.float64)
tensor([ -6.9020, -14.7842, -12.0321, -17.0637, -17.7187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8919, device='cuda:0', dtype=torch.float64)
tensor([ -6.8639, -14.6795, -11.9551, -16.9132, -17.5652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.8181, device='cuda:0', dtype=torch.float64)
tensor([ -6.8238, -14.5786, -11.8845, -16.7723, -17.4172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7290, device='cuda:0', dtype=torch.float64)
tensor([ -6.7841, -14.4780, -11.8205, -16.6392, -17.2729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.7312, device='cuda:0', dtype=torch.float64)
tensor([ -6.7418, -14.3801, -11.7634, -16.5160, -17.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6756, device='cuda:0', dtype=torch.float64)
tensor([ -6.6990, -14.2824, -11.7109, -16.4006, -16.9977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.6136, device='cuda:0', dtype=torch.float64)
tensor([ -6.6574, -14.1827, -11.6623, -16.2909, -16.8655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5735, device='cuda:0', dtype=torch.float64)
tensor([ -6.6157, -14.0837, -11.6167, -16.1881, -16.7343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.5260, device='cuda:0', dtype=torch.float64)
tensor([ -6.5736, -13.9864, -11.5727, -16.0909, -16.6052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4701, device='cuda:0', dtype=torch.float64)
tensor([ -6.5313, -13.8903, -11.5277, -15.9998, -16.4786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4404, device='cuda:0', dtype=torch.float64)
tensor([ -6.4888, -13.7956, -11.4821, -15.9098, -16.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.4906, device='cuda:0', dtype=torch.float64)
tensor([ -6.4476, -13.7029, -11.4358, -15.8205, -16.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3967, device='cuda:0', dtype=torch.float64)
tensor([ -6.4070, -13.6110, -11.3887, -15.7338, -16.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3586, device='cuda:0', dtype=torch.float64)
tensor([ -6.3692, -13.5172, -11.3372, -15.6470, -15.9947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3254, device='cuda:0', dtype=torch.float64)
tensor([ -6.3355, -13.4257, -11.2824, -15.5587, -15.8765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.3312, device='cuda:0', dtype=torch.float64)
tensor([ -6.3050, -13.3369, -11.2271, -15.4676, -15.7601], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2676, device='cuda:0', dtype=torch.float64)
tensor([ -6.2753, -13.2497, -11.1709, -15.3757, -15.6450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2621, device='cuda:0', dtype=torch.float64)
tensor([ -6.2462, -13.1658, -11.1154, -15.2839, -15.5315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2261, device='cuda:0', dtype=torch.float64)
tensor([ -6.2174, -13.0852, -11.0598, -15.1910, -15.4199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1557, device='cuda:0', dtype=torch.float64)
tensor([ -6.1887, -13.0074, -11.0072, -15.0983, -15.3106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.2055, device='cuda:0', dtype=torch.float64)
tensor([ -6.1597, -12.9345, -10.9556, -15.0076, -15.2030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1875, device='cuda:0', dtype=torch.float64)
tensor([ -6.1314, -12.8642, -10.9049, -14.9188, -15.0986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1875, device='cuda:0', dtype=torch.float64)
tensor([ -6.1015, -12.7967, -10.8550, -14.8326, -14.9983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.1143, device='cuda:0', dtype=torch.float64)
tensor([ -6.0714, -12.7295, -10.8046, -14.7475, -14.9018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0865, device='cuda:0', dtype=torch.float64)
tensor([ -6.0411, -12.6652, -10.7569, -14.6633, -14.8084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0302, device='cuda:0', dtype=torch.float64)
tensor([ -6.0114, -12.6027, -10.7088, -14.5817, -14.7169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(4.0075, device='cuda:0', dtype=torch.float64)
tensor([ -5.9811, -12.5434, -10.6619, -14.5005, -14.6276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9663, device='cuda:0', dtype=torch.float64)
tensor([ -5.9510, -12.4840, -10.6175, -14.4181, -14.5400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9546, device='cuda:0', dtype=torch.float64)
tensor([ -5.9195, -12.4241, -10.5742, -14.3367, -14.4536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8992, device='cuda:0', dtype=torch.float64)
tensor([ -5.8863, -12.3643, -10.5320, -14.2557, -14.3675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9502, device='cuda:0', dtype=torch.float64)
tensor([ -5.8535, -12.3027, -10.4902, -14.1761, -14.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8597, device='cuda:0', dtype=torch.float64)
tensor([ -5.8220, -12.2412, -10.4466, -14.0966, -14.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9030, device='cuda:0', dtype=torch.float64)
tensor([ -5.7917, -12.1784, -10.4022, -14.0172, -14.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8732, device='cuda:0', dtype=torch.float64)
tensor([ -5.7618, -12.1124, -10.3574, -13.9376, -14.0337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8456, device='cuda:0', dtype=torch.float64)
tensor([ -5.7332, -12.0463, -10.3131, -13.8554, -13.9522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.9131, device='cuda:0', dtype=torch.float64)
tensor([ -5.7052, -11.9810, -10.2678, -13.7704, -13.8733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.8119, device='cuda:0', dtype=torch.float64)
tensor([ -5.6794, -11.9145, -10.2207, -13.6876, -13.7957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7567, device='cuda:0', dtype=torch.float64)
tensor([ -5.6550, -11.8502, -10.1732, -13.6048, -13.7178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7221, device='cuda:0', dtype=torch.float64)
tensor([ -5.6298, -11.7877, -10.1286, -13.5228, -13.6413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7573, device='cuda:0', dtype=torch.float64)
tensor([ -5.6046, -11.7267, -10.0841, -13.4425, -13.5651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.7203, device='cuda:0', dtype=torch.float64)
tensor([ -5.5790, -11.6654, -10.0414, -13.3636, -13.4894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6695, device='cuda:0', dtype=torch.float64)
tensor([ -5.5536, -11.6080, -10.0001, -13.2849, -13.4127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6486, device='cuda:0', dtype=torch.float64)
tensor([ -5.5287, -11.5513,  -9.9599, -13.2085, -13.3373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6464, device='cuda:0', dtype=torch.float64)
tensor([ -5.5017, -11.4965,  -9.9217, -13.1354, -13.2618], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.6384, device='cuda:0', dtype=torch.float64)
tensor([ -5.4744, -11.4442,  -9.8841, -13.0624, -13.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5494, device='cuda:0', dtype=torch.float64)
tensor([ -5.4473, -11.3920,  -9.8461, -12.9907, -13.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5810, device='cuda:0', dtype=torch.float64)
tensor([ -5.4217, -11.3401,  -9.8082, -12.9209, -13.0433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5371, device='cuda:0', dtype=torch.float64)
tensor([ -5.3979, -11.2895,  -9.7695, -12.8525, -12.9717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5533, device='cuda:0', dtype=torch.float64)
tensor([ -5.3759, -11.2372,  -9.7313, -12.7831, -12.9016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.5029, device='cuda:0', dtype=torch.float64)
tensor([ -5.3546, -11.1869,  -9.6962, -12.7133, -12.8326], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4788, device='cuda:0', dtype=torch.float64)
tensor([ -5.3327, -11.1358,  -9.6615, -12.6453, -12.7642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4695, device='cuda:0', dtype=torch.float64)
tensor([ -5.3117, -11.0856,  -9.6267, -12.5762, -12.6983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4383, device='cuda:0', dtype=torch.float64)
tensor([ -5.2918, -11.0342,  -9.5900, -12.5064, -12.6354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.4224, device='cuda:0', dtype=torch.float64)
tensor([ -5.2708, -10.9821,  -9.5540, -12.4400, -12.5757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3660, device='cuda:0', dtype=torch.float64)
tensor([ -5.2495, -10.9292,  -9.5179, -12.3739, -12.5153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3810, device='cuda:0', dtype=torch.float64)
tensor([ -5.2278, -10.8771,  -9.4813, -12.3077, -12.4573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3334, device='cuda:0', dtype=torch.float64)
tensor([ -5.2094, -10.8254,  -9.4445, -12.2371, -12.4009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3329, device='cuda:0', dtype=torch.float64)
tensor([ -5.1910, -10.7747,  -9.4079, -12.1689, -12.3447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3228, device='cuda:0', dtype=torch.float64)
tensor([ -5.1714, -10.7252,  -9.3719, -12.0991, -12.2888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.3529, device='cuda:0', dtype=torch.float64)
tensor([ -5.1516, -10.6777,  -9.3382, -12.0308, -12.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2778, device='cuda:0', dtype=torch.float64)
tensor([ -5.1309, -10.6335,  -9.3054, -11.9646, -12.1727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2562, device='cuda:0', dtype=torch.float64)
tensor([ -5.1116, -10.5931,  -9.2734, -11.8989, -12.1150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2445, device='cuda:0', dtype=torch.float64)
tensor([ -5.0915, -10.5524,  -9.2431, -11.8351, -12.0575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2430, device='cuda:0', dtype=torch.float64)
tensor([ -5.0730, -10.5149,  -9.2124, -11.7728, -12.0007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2291, device='cuda:0', dtype=torch.float64)
tensor([ -5.0561, -10.4781,  -9.1828, -11.7115, -11.9426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.2066, device='cuda:0', dtype=torch.float64)
tensor([ -5.0384, -10.4423,  -9.1539, -11.6510, -11.8826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1980, device='cuda:0', dtype=torch.float64)
tensor([ -5.0224, -10.4067,  -9.1253, -11.5899, -11.8243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1924, device='cuda:0', dtype=torch.float64)
tensor([ -5.0044, -10.3723,  -9.0985, -11.5318, -11.7679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1823, device='cuda:0', dtype=torch.float64)
tensor([ -4.9858, -10.3360,  -9.0718, -11.4738, -11.7133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0990, device='cuda:0', dtype=torch.float64)
tensor([ -4.9673, -10.2983,  -9.0452, -11.4171, -11.6606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1353, device='cuda:0', dtype=torch.float64)
tensor([ -4.9481, -10.2565,  -9.0204, -11.3618, -11.6103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1247, device='cuda:0', dtype=torch.float64)
tensor([ -4.9288, -10.2127,  -8.9957, -11.3088, -11.5623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1208, device='cuda:0', dtype=torch.float64)
tensor([ -4.9113, -10.1674,  -8.9703, -11.2561, -11.5177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1282, device='cuda:0', dtype=torch.float64)
tensor([ -4.8942, -10.1233,  -8.9425, -11.2032, -11.4734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.1182, device='cuda:0', dtype=torch.float64)
tensor([ -4.8771, -10.0800,  -8.9144, -11.1514, -11.4292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0206, device='cuda:0', dtype=torch.float64)
tensor([ -4.8604, -10.0370,  -8.8870, -11.0987, -11.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0474, device='cuda:0', dtype=torch.float64)
tensor([ -4.8452,  -9.9939,  -8.8596, -11.0455, -11.3433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(3.0155, device='cuda:0', dtype=torch.float64)
tensor([ -4.8297,  -9.9533,  -8.8319, -10.9936, -11.3033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9999, device='cuda:0', dtype=torch.float64)
tensor([ -4.8154,  -9.9122,  -8.8055, -10.9405, -11.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9752, device='cuda:0', dtype=torch.float64)
tensor([ -4.7989,  -9.8721,  -8.7800, -10.8881, -11.2266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9459, device='cuda:0', dtype=torch.float64)
tensor([ -4.7815,  -9.8345,  -8.7561, -10.8361, -11.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9409, device='cuda:0', dtype=torch.float64)
tensor([ -4.7639,  -9.7980,  -8.7323, -10.7856, -11.1492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9528, device='cuda:0', dtype=torch.float64)
tensor([ -4.7463,  -9.7612,  -8.7086, -10.7356, -11.1083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.9431, device='cuda:0', dtype=torch.float64)
tensor([ -4.7296,  -9.7250,  -8.6843, -10.6874, -11.0662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8967, device='cuda:0', dtype=torch.float64)
tensor([ -4.7137,  -9.6895,  -8.6587, -10.6389, -11.0230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8779, device='cuda:0', dtype=torch.float64)
tensor([ -4.6992,  -9.6546,  -8.6331, -10.5907, -10.9791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8792, device='cuda:0', dtype=torch.float64)
tensor([ -4.6854,  -9.6209,  -8.6073, -10.5435, -10.9347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8635, device='cuda:0', dtype=torch.float64)
tensor([ -4.6717,  -9.5876,  -8.5820, -10.4962, -10.8892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8083, device='cuda:0', dtype=torch.float64)
tensor([ -4.6583,  -9.5527,  -8.5572, -10.4518, -10.8422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8056, device='cuda:0', dtype=torch.float64)
tensor([ -4.6441,  -9.5183,  -8.5316, -10.4093, -10.7966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7994, device='cuda:0', dtype=torch.float64)
tensor([ -4.6284,  -9.4845,  -8.5065, -10.3686, -10.7521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7788, device='cuda:0', dtype=torch.float64)
tensor([ -4.6133,  -9.4506,  -8.4811, -10.3278, -10.7078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7750, device='cuda:0', dtype=torch.float64)
tensor([ -4.5982,  -9.4148,  -8.4556, -10.2871, -10.6641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.8171, device='cuda:0', dtype=torch.float64)
tensor([ -4.5827,  -9.3780,  -8.4299, -10.2468, -10.6207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7606, device='cuda:0', dtype=torch.float64)
tensor([ -4.5674,  -9.3403,  -8.4027, -10.2076, -10.5777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7203, device='cuda:0', dtype=torch.float64)
tensor([ -4.5514,  -9.3022,  -8.3747, -10.1691, -10.5364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7627, device='cuda:0', dtype=torch.float64)
tensor([ -4.5346,  -9.2640,  -8.3478, -10.1318, -10.4954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7545, device='cuda:0', dtype=torch.float64)
tensor([ -4.5186,  -9.2265,  -8.3214, -10.0936, -10.4557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7530, device='cuda:0', dtype=torch.float64)
tensor([ -4.5020,  -9.1895,  -8.2961, -10.0559, -10.4192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6939, device='cuda:0', dtype=torch.float64)
tensor([ -4.4855,  -9.1518,  -8.2726, -10.0197, -10.3821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7227, device='cuda:0', dtype=torch.float64)
tensor([ -4.4710,  -9.1154,  -8.2488,  -9.9836, -10.3434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7168, device='cuda:0', dtype=torch.float64)
tensor([ -4.4585,  -9.0785,  -8.2256,  -9.9446, -10.3067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.7882, device='cuda:0', dtype=torch.float64)
tensor([ -4.4473,  -9.0435,  -8.2022,  -9.9055, -10.2730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6981, device='cuda:0', dtype=torch.float64)
tensor([ -4.4388,  -9.0097,  -8.1781,  -9.8651, -10.2399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6241, device='cuda:0', dtype=torch.float64)
tensor([ -4.4296,  -8.9800,  -8.1543,  -9.8252, -10.2082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6591, device='cuda:0', dtype=torch.float64)
tensor([ -4.4191,  -8.9525,  -8.1307,  -9.7852, -10.1764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6585, device='cuda:0', dtype=torch.float64)
tensor([ -4.4081,  -8.9282,  -8.1044,  -9.7453, -10.1460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6205, device='cuda:0', dtype=torch.float64)
tensor([ -4.3976,  -8.9051,  -8.0760,  -9.7030, -10.1165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6222, device='cuda:0', dtype=torch.float64)
tensor([ -4.3877,  -8.8860,  -8.0471,  -9.6611, -10.0873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6172, device='cuda:0', dtype=torch.float64)
tensor([ -4.3777,  -8.8663,  -8.0226,  -9.6221, -10.0584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6066, device='cuda:0', dtype=torch.float64)
tensor([ -4.3685,  -8.8440,  -7.9982,  -9.5855, -10.0305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6648, device='cuda:0', dtype=torch.float64)
tensor([ -4.3592,  -8.8197,  -7.9735,  -9.5510, -10.0035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.6120, device='cuda:0', dtype=torch.float64)
tensor([-4.3488, -8.7951, -7.9508, -9.5175, -9.9771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5737, device='cuda:0', dtype=torch.float64)
tensor([-4.3382, -8.7691, -7.9291, -9.4832, -9.9492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5991, device='cuda:0', dtype=torch.float64)
tensor([-4.3268, -8.7449, -7.9082, -9.4493, -9.9233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5266, device='cuda:0', dtype=torch.float64)
tensor([-4.3152, -8.7195, -7.8863, -9.4141, -9.8978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4903, device='cuda:0', dtype=torch.float64)
tensor([-4.3021, -8.6956, -7.8642, -9.3772, -9.8720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5228, device='cuda:0', dtype=torch.float64)
tensor([-4.2892, -8.6712, -7.8434, -9.3414, -9.8461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4709, device='cuda:0', dtype=torch.float64)
tensor([-4.2761, -8.6466, -7.8237, -9.3077, -9.8182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5169, device='cuda:0', dtype=torch.float64)
tensor([-4.2622, -8.6198, -7.8046, -9.2756, -9.7891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5221, device='cuda:0', dtype=torch.float64)
tensor([-4.2489, -8.5923, -7.7838, -9.2436, -9.7589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4649, device='cuda:0', dtype=torch.float64)
tensor([-4.2367, -8.5661, -7.7615, -9.2105, -9.7270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4974, device='cuda:0', dtype=torch.float64)
tensor([-4.2248, -8.5403, -7.7395, -9.1757, -9.6980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.5203, device='cuda:0', dtype=torch.float64)
tensor([-4.2139, -8.5124, -7.7169, -9.1435, -9.6686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4627, device='cuda:0', dtype=torch.float64)
tensor([-4.2020, -8.4843, -7.6956, -9.1113, -9.6389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4482, device='cuda:0', dtype=torch.float64)
tensor([-4.1921, -8.4565, -7.6740, -9.0794, -9.6093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3853, device='cuda:0', dtype=torch.float64)
tensor([-4.1813, -8.4298, -7.6543, -9.0489, -9.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4760, device='cuda:0', dtype=torch.float64)
tensor([-4.1724, -8.4019, -7.6344, -9.0182, -9.5476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4760, device='cuda:0', dtype=torch.float64)
tensor([-4.1632, -8.3774, -7.6152, -8.9901, -9.5160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4109, device='cuda:0', dtype=torch.float64)
tensor([-4.1544, -8.3548, -7.5965, -8.9637, -9.4849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4313, device='cuda:0', dtype=torch.float64)
tensor([-4.1473, -8.3294, -7.5788, -8.9373, -9.4549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4160, device='cuda:0', dtype=torch.float64)
tensor([-4.1390, -8.3054, -7.5619, -8.9105, -9.4253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.4117, device='cuda:0', dtype=torch.float64)
tensor([-4.1298, -8.2828, -7.5447, -8.8851, -9.3950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3391, device='cuda:0', dtype=torch.float64)
tensor([-4.1213, -8.2586, -7.5277, -8.8594, -9.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3670, device='cuda:0', dtype=torch.float64)
tensor([-4.1126, -8.2340, -7.5126, -8.8349, -9.3359], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3617, device='cuda:0', dtype=torch.float64)
tensor([-4.1031, -8.2088, -7.4987, -8.8091, -9.3065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3440, device='cuda:0', dtype=torch.float64)
tensor([-4.0937, -8.1834, -7.4843, -8.7831, -9.2780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3715, device='cuda:0', dtype=torch.float64)
tensor([-4.0834, -8.1590, -7.4699, -8.7581, -9.2528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3516, device='cuda:0', dtype=torch.float64)
tensor([-4.0724, -8.1342, -7.4556, -8.7336, -9.2277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3278, device='cuda:0', dtype=torch.float64)
tensor([-4.0609, -8.1087, -7.4399, -8.7100, -9.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3597, device='cuda:0', dtype=torch.float64)
tensor([-4.0495, -8.0833, -7.4234, -8.6870, -9.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3566, device='cuda:0', dtype=torch.float64)
tensor([-4.0381, -8.0576, -7.4059, -8.6635, -9.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3695, device='cuda:0', dtype=torch.float64)
tensor([-4.0262, -8.0338, -7.3876, -8.6402, -9.1285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3448, device='cuda:0', dtype=torch.float64)
tensor([-4.0142, -8.0124, -7.3679, -8.6158, -9.1048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3033, device='cuda:0', dtype=torch.float64)
tensor([-4.0039, -7.9910, -7.3472, -8.5897, -9.0847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3189, device='cuda:0', dtype=torch.float64)
tensor([-3.9939, -7.9709, -7.3266, -8.5621, -9.0652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3913, device='cuda:0', dtype=torch.float64)
tensor([-3.9862, -7.9479, -7.3048, -8.5326, -9.0477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2653, device='cuda:0', dtype=torch.float64)
tensor([-3.9799, -7.9245, -7.2831, -8.5035, -9.0300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2727, device='cuda:0', dtype=torch.float64)
tensor([-3.9740, -7.9010, -7.2624, -8.4740, -9.0116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2813, device='cuda:0', dtype=torch.float64)
tensor([-3.9674, -7.8783, -7.2432, -8.4462, -8.9938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3593, device='cuda:0', dtype=torch.float64)
tensor([-3.9627, -7.8540, -7.2232, -8.4198, -8.9742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3041, device='cuda:0', dtype=torch.float64)
tensor([-3.9577, -7.8293, -7.2034, -8.3951, -8.9532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2555, device='cuda:0', dtype=torch.float64)
tensor([-3.9522, -7.8058, -7.1870, -8.3723, -8.9304], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2823, device='cuda:0', dtype=torch.float64)
tensor([-3.9460, -7.7853, -7.1702, -8.3510, -8.9071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.3270, device='cuda:0', dtype=torch.float64)
tensor([-3.9388, -7.7667, -7.1535, -8.3320, -8.8833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2702, device='cuda:0', dtype=torch.float64)
tensor([-3.9309, -7.7488, -7.1374, -8.3137, -8.8619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2931, device='cuda:0', dtype=torch.float64)
tensor([-3.9232, -7.7315, -7.1211, -8.2948, -8.8413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2362, device='cuda:0', dtype=torch.float64)
tensor([-3.9151, -7.7122, -7.1068, -8.2769, -8.8196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2436, device='cuda:0', dtype=torch.float64)
tensor([-3.9079, -7.6944, -7.0921, -8.2597, -8.7974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2451, device='cuda:0', dtype=torch.float64)
tensor([-3.9016, -7.6746, -7.0771, -8.2428, -8.7759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1827, device='cuda:0', dtype=torch.float64)
tensor([-3.8951, -7.6528, -7.0629, -8.2259, -8.7567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2073, device='cuda:0', dtype=torch.float64)
tensor([-3.8882, -7.6302, -7.0504, -8.2075, -8.7381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1963, device='cuda:0', dtype=torch.float64)
tensor([-3.8810, -7.6093, -7.0367, -8.1873, -8.7193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1756, device='cuda:0', dtype=torch.float64)
tensor([-3.8741, -7.5893, -7.0218, -8.1663, -8.7013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.2048, device='cuda:0', dtype=torch.float64)
tensor([-3.8674, -7.5703, -7.0049, -8.1457, -8.6825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1785, device='cuda:0', dtype=torch.float64)
tensor([-3.8597, -7.5511, -6.9888, -8.1244, -8.6632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1886, device='cuda:0', dtype=torch.float64)
tensor([-3.8517, -7.5309, -6.9741, -8.1057, -8.6431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1860, device='cuda:0', dtype=torch.float64)
tensor([-3.8417, -7.5126, -6.9601, -8.0873, -8.6230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1662, device='cuda:0', dtype=torch.float64)
tensor([-3.8317, -7.4946, -6.9468, -8.0680, -8.6016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1098, device='cuda:0', dtype=torch.float64)
tensor([-3.8224, -7.4764, -6.9329, -8.0486, -8.5792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1768, device='cuda:0', dtype=torch.float64)
tensor([-3.8135, -7.4581, -6.9193, -8.0288, -8.5582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1226, device='cuda:0', dtype=torch.float64)
tensor([-3.8049, -7.4405, -6.9046, -8.0091, -8.5387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1091, device='cuda:0', dtype=torch.float64)
tensor([-3.7952, -7.4224, -6.8915, -7.9908, -8.5194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1656, device='cuda:0', dtype=torch.float64)
tensor([-3.7873, -7.4048, -6.8776, -7.9722, -8.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0843, device='cuda:0', dtype=torch.float64)
tensor([-3.7787, -7.3887, -6.8657, -7.9550, -8.4808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1083, device='cuda:0', dtype=torch.float64)
tensor([-3.7707, -7.3742, -6.8550, -7.9395, -8.4600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1201, device='cuda:0', dtype=torch.float64)
tensor([-3.7628, -7.3592, -6.8441, -7.9247, -8.4402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1348, device='cuda:0', dtype=torch.float64)
tensor([-3.7551, -7.3428, -6.8329, -7.9102, -8.4198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0783, device='cuda:0', dtype=torch.float64)
tensor([-3.7478, -7.3273, -6.8211, -7.8956, -8.3985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1193, device='cuda:0', dtype=torch.float64)
tensor([-3.7408, -7.3102, -6.8093, -7.8803, -8.3777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0561, device='cuda:0', dtype=torch.float64)
tensor([-3.7339, -7.2933, -6.7967, -7.8636, -8.3564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0633, device='cuda:0', dtype=torch.float64)
tensor([-3.7288, -7.2752, -6.7840, -7.8480, -8.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0824, device='cuda:0', dtype=torch.float64)
tensor([-3.7248, -7.2570, -6.7695, -7.8313, -8.3161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.1101, device='cuda:0', dtype=torch.float64)
tensor([-3.7216, -7.2419, -6.7545, -7.8119, -8.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0761, device='cuda:0', dtype=torch.float64)
tensor([-3.7171, -7.2250, -6.7392, -7.7933, -8.2790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0423, device='cuda:0', dtype=torch.float64)
tensor([-3.7128, -7.2102, -6.7240, -7.7750, -8.2606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0463, device='cuda:0', dtype=torch.float64)
tensor([-3.7078, -7.1954, -6.7090, -7.7576, -8.2425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0565, device='cuda:0', dtype=torch.float64)
tensor([-3.7033, -7.1805, -6.6941, -7.7421, -8.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0208, device='cuda:0', dtype=torch.float64)
tensor([-3.6978, -7.1668, -6.6791, -7.7269, -8.2091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0775, device='cuda:0', dtype=torch.float64)
tensor([-3.6923, -7.1530, -6.6652, -7.7107, -8.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0205, device='cuda:0', dtype=torch.float64)
tensor([-3.6865, -7.1390, -6.6520, -7.6942, -8.1797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0462, device='cuda:0', dtype=torch.float64)
tensor([-3.6805, -7.1249, -6.6388, -7.6778, -8.1656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0183, device='cuda:0', dtype=torch.float64)
tensor([-3.6746, -7.1101, -6.6243, -7.6603, -8.1509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0160, device='cuda:0', dtype=torch.float64)
tensor([-3.6690, -7.0938, -6.6102, -7.6434, -8.1360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0236, device='cuda:0', dtype=torch.float64)
tensor([-3.6640, -7.0760, -6.5951, -7.6266, -8.1214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0325, device='cuda:0', dtype=torch.float64)
tensor([-3.6595, -7.0566, -6.5817, -7.6103, -8.1060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9798, device='cuda:0', dtype=torch.float64)
tensor([-3.6558, -7.0376, -6.5684, -7.5938, -8.0897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9807, device='cuda:0', dtype=torch.float64)
tensor([-3.6511, -7.0199, -6.5545, -7.5770, -8.0742], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(2.0342, device='cuda:0', dtype=torch.float64)
tensor([-3.6464, -7.0041, -6.5406, -7.5593, -8.0584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9835, device='cuda:0', dtype=torch.float64)
tensor([-3.6396, -6.9875, -6.5270, -7.5414, -8.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9437, device='cuda:0', dtype=torch.float64)
tensor([-3.6323, -6.9686, -6.5141, -7.5242, -8.0266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9592, device='cuda:0', dtype=torch.float64)
tensor([-3.6254, -6.9487, -6.5021, -7.5060, -8.0117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9401, device='cuda:0', dtype=torch.float64)
tensor([-3.6194, -6.9275, -6.4914, -7.4883, -7.9979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9324, device='cuda:0', dtype=torch.float64)
tensor([-3.6131, -6.9086, -6.4816, -7.4721, -7.9820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9395, device='cuda:0', dtype=torch.float64)
tensor([-3.6062, -6.8920, -6.4735, -7.4561, -7.9668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9625, device='cuda:0', dtype=torch.float64)
tensor([-3.5992, -6.8767, -6.4671, -7.4416, -7.9523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9838, device='cuda:0', dtype=torch.float64)
tensor([-3.5924, -6.8619, -6.4596, -7.4277, -7.9367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9609, device='cuda:0', dtype=torch.float64)
tensor([-3.5856, -6.8473, -6.4515, -7.4147, -7.9200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9953, device='cuda:0', dtype=torch.float64)
tensor([-3.5792, -6.8328, -6.4416, -7.4015, -7.9047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9282, device='cuda:0', dtype=torch.float64)
tensor([-3.5748, -6.8168, -6.4304, -7.3872, -7.8897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9826, device='cuda:0', dtype=torch.float64)
tensor([-3.5690, -6.8024, -6.4173, -7.3733, -7.8749], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9726, device='cuda:0', dtype=torch.float64)
tensor([-3.5633, -6.7892, -6.4048, -7.3591, -7.8607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9519, device='cuda:0', dtype=torch.float64)
tensor([-3.5579, -6.7758, -6.3930, -7.3463, -7.8449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9943, device='cuda:0', dtype=torch.float64)
tensor([-3.5531, -6.7637, -6.3800, -7.3346, -7.8302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9056, device='cuda:0', dtype=torch.float64)
tensor([-3.5482, -6.7511, -6.3679, -7.3233, -7.8157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9040, device='cuda:0', dtype=torch.float64)
tensor([-3.5434, -6.7378, -6.3551, -7.3118, -7.8014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9247, device='cuda:0', dtype=torch.float64)
tensor([-3.5393, -6.7267, -6.3435, -7.3027, -7.7858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8966, device='cuda:0', dtype=torch.float64)
tensor([-3.5341, -6.7176, -6.3314, -7.2936, -7.7690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9392, device='cuda:0', dtype=torch.float64)
tensor([-3.5293, -6.7099, -6.3225, -7.2831, -7.7534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9312, device='cuda:0', dtype=torch.float64)
tensor([-3.5244, -6.7007, -6.3130, -7.2709, -7.7397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8911, device='cuda:0', dtype=torch.float64)
tensor([-3.5202, -6.6899, -6.3034, -7.2585, -7.7263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8603, device='cuda:0', dtype=torch.float64)
tensor([-3.5161, -6.6793, -6.2926, -7.2457, -7.7110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8709, device='cuda:0', dtype=torch.float64)
tensor([-3.5111, -6.6680, -6.2816, -7.2330, -7.6950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8980, device='cuda:0', dtype=torch.float64)
tensor([-3.5047, -6.6575, -6.2711, -7.2210, -7.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9263, device='cuda:0', dtype=torch.float64)
tensor([-3.5007, -6.6462, -6.2574, -7.2057, -7.6629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8621, device='cuda:0', dtype=torch.float64)
tensor([-3.4969, -6.6339, -6.2440, -7.1898, -7.6452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8282, device='cuda:0', dtype=torch.float64)
tensor([-3.4933, -6.6224, -6.2311, -7.1733, -7.6273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8804, device='cuda:0', dtype=torch.float64)
tensor([-3.4901, -6.6109, -6.2190, -7.1565, -7.6100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8756, device='cuda:0', dtype=torch.float64)
tensor([-3.4867, -6.5975, -6.2084, -7.1424, -7.5917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8401, device='cuda:0', dtype=torch.float64)
tensor([-3.4835, -6.5853, -6.1990, -7.1281, -7.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8529, device='cuda:0', dtype=torch.float64)
tensor([-3.4802, -6.5710, -6.1911, -7.1146, -7.5578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9290, device='cuda:0', dtype=torch.float64)
tensor([-3.4763, -6.5546, -6.1816, -7.1033, -7.5414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8774, device='cuda:0', dtype=torch.float64)
tensor([-3.4727, -6.5381, -6.1715, -7.0924, -7.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8571, device='cuda:0', dtype=torch.float64)
tensor([-3.4688, -6.5207, -6.1630, -7.0828, -7.5125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7958, device='cuda:0', dtype=torch.float64)
tensor([-3.4635, -6.5050, -6.1565, -7.0731, -7.5003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.9000, device='cuda:0', dtype=torch.float64)
tensor([-3.4591, -6.4901, -6.1508, -7.0626, -7.4893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7998, device='cuda:0', dtype=torch.float64)
tensor([-3.4536, -6.4749, -6.1468, -7.0538, -7.4791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7696, device='cuda:0', dtype=torch.float64)
tensor([-3.4489, -6.4605, -6.1429, -7.0449, -7.4692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8554, device='cuda:0', dtype=torch.float64)
tensor([-3.4465, -6.4460, -6.1369, -7.0336, -7.4614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8024, device='cuda:0', dtype=torch.float64)
tensor([-3.4435, -6.4324, -6.1300, -7.0210, -7.4544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8047, device='cuda:0', dtype=torch.float64)
tensor([-3.4395, -6.4209, -6.1242, -7.0101, -7.4481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8791, device='cuda:0', dtype=torch.float64)
tensor([-3.4362, -6.4105, -6.1178, -7.0005, -7.4413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7270, device='cuda:0', dtype=torch.float64)
tensor([-3.4317, -6.3978, -6.1127, -6.9924, -7.4341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8248, device='cuda:0', dtype=torch.float64)
tensor([-3.4281, -6.3860, -6.1058, -6.9825, -7.4276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8487, device='cuda:0', dtype=torch.float64)
tensor([-3.4254, -6.3760, -6.0972, -6.9725, -7.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7573, device='cuda:0', dtype=torch.float64)
tensor([-3.4220, -6.3641, -6.0887, -6.9638, -7.4092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7771, device='cuda:0', dtype=torch.float64)
tensor([-3.4192, -6.3524, -6.0782, -6.9535, -7.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7608, device='cuda:0', dtype=torch.float64)
tensor([-3.4166, -6.3432, -6.0660, -6.9428, -7.3844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7521, device='cuda:0', dtype=torch.float64)
tensor([-3.4152, -6.3343, -6.0530, -6.9297, -7.3702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7895, device='cuda:0', dtype=torch.float64)
tensor([-3.4144, -6.3226, -6.0407, -6.9176, -7.3558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7826, device='cuda:0', dtype=torch.float64)
tensor([-3.4126, -6.3122, -6.0281, -6.9058, -7.3411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6971, device='cuda:0', dtype=torch.float64)
tensor([-3.4097, -6.3013, -6.0169, -6.8936, -7.3280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7770, device='cuda:0', dtype=torch.float64)
tensor([-3.4060, -6.2913, -6.0072, -6.8836, -7.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7336, device='cuda:0', dtype=torch.float64)
tensor([-3.4021, -6.2795, -5.9974, -6.8749, -7.3025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7452, device='cuda:0', dtype=torch.float64)
tensor([-3.3977, -6.2686, -5.9885, -6.8666, -7.2900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7006, device='cuda:0', dtype=torch.float64)
tensor([-3.3930, -6.2592, -5.9780, -6.8584, -7.2774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7687, device='cuda:0', dtype=torch.float64)
tensor([-3.3883, -6.2504, -5.9681, -6.8513, -7.2653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7080, device='cuda:0', dtype=torch.float64)
tensor([-3.3832, -6.2419, -5.9584, -6.8437, -7.2518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7219, device='cuda:0', dtype=torch.float64)
tensor([-3.3778, -6.2319, -5.9490, -6.8366, -7.2378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7143, device='cuda:0', dtype=torch.float64)
tensor([-3.3724, -6.2245, -5.9414, -6.8293, -7.2241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8138, device='cuda:0', dtype=torch.float64)
tensor([-3.3671, -6.2177, -5.9347, -6.8212, -7.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7328, device='cuda:0', dtype=torch.float64)
tensor([-3.3626, -6.2097, -5.9293, -6.8133, -7.1968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6885, device='cuda:0', dtype=torch.float64)
tensor([-3.3575, -6.2024, -5.9242, -6.8047, -7.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7180, device='cuda:0', dtype=torch.float64)
tensor([-3.3534, -6.1930, -5.9186, -6.7955, -7.1679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6907, device='cuda:0', dtype=torch.float64)
tensor([-3.3490, -6.1840, -5.9129, -6.7859, -7.1551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7535, device='cuda:0', dtype=torch.float64)
tensor([-3.3457, -6.1737, -5.9068, -6.7756, -7.1431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.8177, device='cuda:0', dtype=torch.float64)
tensor([-3.3441, -6.1616, -5.8992, -6.7626, -7.1340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7606, device='cuda:0', dtype=torch.float64)
tensor([-3.3423, -6.1519, -5.8913, -6.7501, -7.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6753, device='cuda:0', dtype=torch.float64)
tensor([-3.3409, -6.1412, -5.8826, -6.7371, -7.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7317, device='cuda:0', dtype=torch.float64)
tensor([-3.3387, -6.1319, -5.8736, -6.7247, -7.1055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6850, device='cuda:0', dtype=torch.float64)
tensor([-3.3361, -6.1223, -5.8669, -6.7150, -7.0952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6314, device='cuda:0', dtype=torch.float64)
tensor([-3.3328, -6.1127, -5.8616, -6.7070, -7.0849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7109, device='cuda:0', dtype=torch.float64)
tensor([-3.3291, -6.1023, -5.8580, -6.7021, -7.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6410, device='cuda:0', dtype=torch.float64)
tensor([-3.3251, -6.0904, -5.8545, -6.6984, -7.0653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7083, device='cuda:0', dtype=torch.float64)
tensor([-3.3213, -6.0805, -5.8500, -6.6923, -7.0561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7280, device='cuda:0', dtype=torch.float64)
tensor([-3.3180, -6.0706, -5.8471, -6.6869, -7.0475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6503, device='cuda:0', dtype=torch.float64)
tensor([-3.3140, -6.0591, -5.8442, -6.6816, -7.0389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7221, device='cuda:0', dtype=torch.float64)
tensor([-3.3086, -6.0475, -5.8422, -6.6770, -7.0297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6791, device='cuda:0', dtype=torch.float64)
tensor([-3.3036, -6.0394, -5.8402, -6.6721, -7.0213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5974, device='cuda:0', dtype=torch.float64)
tensor([-3.2991, -6.0302, -5.8373, -6.6675, -7.0129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.7129, device='cuda:0', dtype=torch.float64)
tensor([-3.2942, -6.0220, -5.8334, -6.6616, -7.0044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6342, device='cuda:0', dtype=torch.float64)
tensor([-3.2893, -6.0128, -5.8285, -6.6550, -6.9959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6407, device='cuda:0', dtype=torch.float64)
tensor([-3.2850, -6.0036, -5.8233, -6.6466, -6.9878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6308, device='cuda:0', dtype=torch.float64)
tensor([-3.2797, -5.9946, -5.8169, -6.6378, -6.9770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6546, device='cuda:0', dtype=torch.float64)
tensor([-3.2747, -5.9867, -5.8109, -6.6290, -6.9653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6242, device='cuda:0', dtype=torch.float64)
tensor([-3.2683, -5.9796, -5.8048, -6.6208, -6.9529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5814, device='cuda:0', dtype=torch.float64)
tensor([-3.2635, -5.9729, -5.7974, -6.6112, -6.9400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5844, device='cuda:0', dtype=torch.float64)
tensor([-3.2588, -5.9665, -5.7900, -6.6008, -6.9272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6681, device='cuda:0', dtype=torch.float64)
tensor([-3.2537, -5.9599, -5.7811, -6.5879, -6.9149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6381, device='cuda:0', dtype=torch.float64)
tensor([-3.2482, -5.9547, -5.7725, -6.5756, -6.9026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5779, device='cuda:0', dtype=torch.float64)
tensor([-3.2433, -5.9476, -5.7647, -6.5618, -6.8915], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6761, device='cuda:0', dtype=torch.float64)
tensor([-3.2402, -5.9405, -5.7569, -6.5484, -6.8810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5891, device='cuda:0', dtype=torch.float64)
tensor([-3.2377, -5.9343, -5.7507, -6.5373, -6.8709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6230, device='cuda:0', dtype=torch.float64)
tensor([-3.2355, -5.9259, -5.7452, -6.5285, -6.8629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6681, device='cuda:0', dtype=torch.float64)
tensor([-3.2342, -5.9164, -5.7377, -6.5212, -6.8562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5416, device='cuda:0', dtype=torch.float64)
tensor([-3.2334, -5.9071, -5.7297, -6.5128, -6.8491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5683, device='cuda:0', dtype=torch.float64)
tensor([-3.2324, -5.8955, -5.7227, -6.5056, -6.8400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5882, device='cuda:0', dtype=torch.float64)
tensor([-3.2308, -5.8854, -5.7156, -6.4987, -6.8318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6134, device='cuda:0', dtype=torch.float64)
tensor([-3.2295, -5.8768, -5.7084, -6.4932, -6.8229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5806, device='cuda:0', dtype=torch.float64)
tensor([-3.2279, -5.8709, -5.7014, -6.4887, -6.8141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5577, device='cuda:0', dtype=torch.float64)
tensor([-3.2264, -5.8665, -5.6938, -6.4827, -6.8066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6716, device='cuda:0', dtype=torch.float64)
tensor([-3.2254, -5.8633, -5.6864, -6.4779, -6.7992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5597, device='cuda:0', dtype=torch.float64)
tensor([-3.2233, -5.8609, -5.6790, -6.4718, -6.7903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6122, device='cuda:0', dtype=torch.float64)
tensor([-3.2221, -5.8578, -5.6700, -6.4643, -6.7818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6026, device='cuda:0', dtype=torch.float64)
tensor([-3.2199, -5.8549, -5.6605, -6.4563, -6.7739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6070, device='cuda:0', dtype=torch.float64)
tensor([-3.2183, -5.8523, -5.6507, -6.4473, -6.7648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6291, device='cuda:0', dtype=torch.float64)
tensor([-3.2153, -5.8482, -5.6402, -6.4386, -6.7553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5690, device='cuda:0', dtype=torch.float64)
tensor([-3.2118, -5.8440, -5.6301, -6.4312, -6.7460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5502, device='cuda:0', dtype=torch.float64)
tensor([-3.2084, -5.8383, -5.6208, -6.4245, -6.7384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5198, device='cuda:0', dtype=torch.float64)
tensor([-3.2047, -5.8323, -5.6111, -6.4178, -6.7318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5135, device='cuda:0', dtype=torch.float64)
tensor([-3.2012, -5.8230, -5.6010, -6.4121, -6.7242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6232, device='cuda:0', dtype=torch.float64)
tensor([-3.1977, -5.8116, -5.5917, -6.4074, -6.7165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5028, device='cuda:0', dtype=torch.float64)
tensor([-3.1940, -5.7996, -5.5824, -6.4011, -6.7095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5568, device='cuda:0', dtype=torch.float64)
tensor([-3.1904, -5.7869, -5.5740, -6.3950, -6.7033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5614, device='cuda:0', dtype=torch.float64)
tensor([-3.1865, -5.7717, -5.5676, -6.3890, -6.6988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5453, device='cuda:0', dtype=torch.float64)
tensor([-3.1810, -5.7561, -5.5616, -6.3850, -6.6936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5564, device='cuda:0', dtype=torch.float64)
tensor([-3.1745, -5.7437, -5.5557, -6.3807, -6.6874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5128, device='cuda:0', dtype=torch.float64)
tensor([-3.1682, -5.7322, -5.5494, -6.3763, -6.6810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6489, device='cuda:0', dtype=torch.float64)
tensor([-3.1636, -5.7230, -5.5447, -6.3710, -6.6741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4959, device='cuda:0', dtype=torch.float64)
tensor([-3.1584, -5.7164, -5.5387, -6.3644, -6.6659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5271, device='cuda:0', dtype=torch.float64)
tensor([-3.1529, -5.7120, -5.5353, -6.3586, -6.6569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5327, device='cuda:0', dtype=torch.float64)
tensor([-3.1463, -5.7071, -5.5311, -6.3531, -6.6474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4861, device='cuda:0', dtype=torch.float64)
tensor([-3.1403, -5.7022, -5.5267, -6.3480, -6.6380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5199, device='cuda:0', dtype=torch.float64)
tensor([-3.1367, -5.6975, -5.5200, -6.3392, -6.6275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4859, device='cuda:0', dtype=torch.float64)
tensor([-3.1345, -5.6918, -5.5145, -6.3297, -6.6166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4287, device='cuda:0', dtype=torch.float64)
tensor([-3.1324, -5.6871, -5.5102, -6.3203, -6.6066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4405, device='cuda:0', dtype=torch.float64)
tensor([-3.1320, -5.6826, -5.5058, -6.3116, -6.5951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4826, device='cuda:0', dtype=torch.float64)
tensor([-3.1319, -5.6784, -5.5019, -6.3025, -6.5833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5598, device='cuda:0', dtype=torch.float64)
tensor([-3.1320, -5.6722, -5.4965, -6.2928, -6.5731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4678, device='cuda:0', dtype=torch.float64)
tensor([-3.1320, -5.6663, -5.4918, -6.2847, -6.5630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4541, device='cuda:0', dtype=torch.float64)
tensor([-3.1310, -5.6571, -5.4875, -6.2780, -6.5523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4155, device='cuda:0', dtype=torch.float64)
tensor([-3.1298, -5.6473, -5.4821, -6.2714, -6.5411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4865, device='cuda:0', dtype=torch.float64)
tensor([-3.1278, -5.6361, -5.4769, -6.2645, -6.5303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4252, device='cuda:0', dtype=torch.float64)
tensor([-3.1243, -5.6246, -5.4710, -6.2595, -6.5192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4453, device='cuda:0', dtype=torch.float64)
tensor([-3.1207, -5.6148, -5.4654, -6.2548, -6.5092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5179, device='cuda:0', dtype=torch.float64)
tensor([-3.1180, -5.6065, -5.4598, -6.2526, -6.4994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4552, device='cuda:0', dtype=torch.float64)
tensor([-3.1157, -5.5988, -5.4539, -6.2501, -6.4895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5405, device='cuda:0', dtype=torch.float64)
tensor([-3.1122, -5.5935, -5.4500, -6.2496, -6.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4113, device='cuda:0', dtype=torch.float64)
tensor([-3.1086, -5.5893, -5.4455, -6.2484, -6.4714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.6142, device='cuda:0', dtype=torch.float64)
tensor([-3.1058, -5.5857, -5.4412, -6.2463, -6.4651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4662, device='cuda:0', dtype=torch.float64)
tensor([-3.1022, -5.5840, -5.4365, -6.2426, -6.4573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4380, device='cuda:0', dtype=torch.float64)
tensor([-3.0980, -5.5834, -5.4304, -6.2376, -6.4487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5778, device='cuda:0', dtype=torch.float64)
tensor([-3.0938, -5.5836, -5.4243, -6.2329, -6.4402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4870, device='cuda:0', dtype=torch.float64)
tensor([-3.0912, -5.5841, -5.4174, -6.2256, -6.4335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5053, device='cuda:0', dtype=torch.float64)
tensor([-3.0897, -5.5857, -5.4103, -6.2178, -6.4279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4529, device='cuda:0', dtype=torch.float64)
tensor([-3.0889, -5.5843, -5.4040, -6.2101, -6.4241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3647, device='cuda:0', dtype=torch.float64)
tensor([-3.0886, -5.5809, -5.3978, -6.2021, -6.4206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4066, device='cuda:0', dtype=torch.float64)
tensor([-3.0868, -5.5776, -5.3917, -6.1959, -6.4167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4706, device='cuda:0', dtype=torch.float64)
tensor([-3.0852, -5.5770, -5.3853, -6.1893, -6.4124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4551, device='cuda:0', dtype=torch.float64)
tensor([-3.0849, -5.5744, -5.3774, -6.1830, -6.4087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5108, device='cuda:0', dtype=torch.float64)
tensor([-3.0844, -5.5696, -5.3694, -6.1769, -6.4049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4720, device='cuda:0', dtype=torch.float64)
tensor([-3.0839, -5.5622, -5.3629, -6.1702, -6.4027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3762, device='cuda:0', dtype=torch.float64)
tensor([-3.0826, -5.5520, -5.3566, -6.1635, -6.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4676, device='cuda:0', dtype=torch.float64)
tensor([-3.0814, -5.5404, -5.3505, -6.1578, -6.3987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4210, device='cuda:0', dtype=torch.float64)
tensor([-3.0801, -5.5259, -5.3431, -6.1521, -6.3953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4508, device='cuda:0', dtype=torch.float64)
tensor([-3.0782, -5.5119, -5.3370, -6.1485, -6.3906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4216, device='cuda:0', dtype=torch.float64)
tensor([-3.0762, -5.4976, -5.3313, -6.1456, -6.3873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4411, device='cuda:0', dtype=torch.float64)
tensor([-3.0745, -5.4838, -5.3255, -6.1418, -6.3850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4589, device='cuda:0', dtype=torch.float64)
tensor([-3.0739, -5.4719, -5.3191, -6.1366, -6.3831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4476, device='cuda:0', dtype=torch.float64)
tensor([-3.0718, -5.4642, -5.3131, -6.1312, -6.3787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4166, device='cuda:0', dtype=torch.float64)
tensor([-3.0692, -5.4598, -5.3083, -6.1272, -6.3731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4067, device='cuda:0', dtype=torch.float64)
tensor([-3.0663, -5.4566, -5.3039, -6.1228, -6.3679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3642, device='cuda:0', dtype=torch.float64)
tensor([-3.0639, -5.4528, -5.2981, -6.1156, -6.3625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4440, device='cuda:0', dtype=torch.float64)
tensor([-3.0621, -5.4508, -5.2916, -6.1067, -6.3588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4475, device='cuda:0', dtype=torch.float64)
tensor([-3.0593, -5.4507, -5.2842, -6.0984, -6.3536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3394, device='cuda:0', dtype=torch.float64)
tensor([-3.0564, -5.4505, -5.2773, -6.0920, -6.3476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3344, device='cuda:0', dtype=torch.float64)
tensor([-3.0544, -5.4489, -5.2699, -6.0856, -6.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4151, device='cuda:0', dtype=torch.float64)
tensor([-3.0516, -5.4477, -5.2641, -6.0809, -6.3312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4186, device='cuda:0', dtype=torch.float64)
tensor([-3.0501, -5.4459, -5.2587, -6.0772, -6.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3486, device='cuda:0', dtype=torch.float64)
tensor([-3.0512, -5.4421, -5.2531, -6.0743, -6.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4837, device='cuda:0', dtype=torch.float64)
tensor([-3.0517, -5.4365, -5.2485, -6.0729, -6.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4337, device='cuda:0', dtype=torch.float64)
tensor([-3.0517, -5.4276, -5.2448, -6.0722, -6.2887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3455, device='cuda:0', dtype=torch.float64)
tensor([-3.0505, -5.4163, -5.2433, -6.0723, -6.2782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4164, device='cuda:0', dtype=torch.float64)
tensor([-3.0479, -5.4051, -5.2420, -6.0717, -6.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5137, device='cuda:0', dtype=torch.float64)
tensor([-3.0454, -5.3934, -5.2417, -6.0706, -6.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3592, device='cuda:0', dtype=torch.float64)
tensor([-3.0415, -5.3813, -5.2428, -6.0686, -6.2440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3803, device='cuda:0', dtype=torch.float64)
tensor([-3.0371, -5.3727, -5.2419, -6.0640, -6.2346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4092, device='cuda:0', dtype=torch.float64)
tensor([-3.0326, -5.3673, -5.2387, -6.0570, -6.2265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3477, device='cuda:0', dtype=torch.float64)
tensor([-3.0277, -5.3644, -5.2345, -6.0490, -6.2182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3927, device='cuda:0', dtype=torch.float64)
tensor([-3.0226, -5.3614, -5.2296, -6.0405, -6.2102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4150, device='cuda:0', dtype=torch.float64)
tensor([-3.0173, -5.3606, -5.2246, -6.0324, -6.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4843, device='cuda:0', dtype=torch.float64)
tensor([-3.0124, -5.3594, -5.2174, -6.0232, -6.1945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4160, device='cuda:0', dtype=torch.float64)
tensor([-3.0078, -5.3584, -5.2105, -6.0141, -6.1870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3392, device='cuda:0', dtype=torch.float64)
tensor([-3.0043, -5.3563, -5.2014, -6.0046, -6.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4259, device='cuda:0', dtype=torch.float64)
tensor([-3.0004, -5.3546, -5.1929, -5.9959, -6.1720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3200, device='cuda:0', dtype=torch.float64)
tensor([-2.9966, -5.3532, -5.1844, -5.9883, -6.1639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3676, device='cuda:0', dtype=torch.float64)
tensor([-2.9934, -5.3505, -5.1741, -5.9802, -6.1561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3474, device='cuda:0', dtype=torch.float64)
tensor([-2.9900, -5.3440, -5.1651, -5.9738, -6.1484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3268, device='cuda:0', dtype=torch.float64)
tensor([-2.9872, -5.3347, -5.1575, -5.9686, -6.1408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3727, device='cuda:0', dtype=torch.float64)
tensor([-2.9855, -5.3215, -5.1509, -5.9649, -6.1357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3706, device='cuda:0', dtype=torch.float64)
tensor([-2.9837, -5.3070, -5.1464, -5.9631, -6.1296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3994, device='cuda:0', dtype=torch.float64)
tensor([-2.9830, -5.2930, -5.1421, -5.9603, -6.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4696, device='cuda:0', dtype=torch.float64)
tensor([-2.9839, -5.2801, -5.1382, -5.9583, -6.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3588, device='cuda:0', dtype=torch.float64)
tensor([-2.9844, -5.2689, -5.1346, -5.9566, -6.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3088, device='cuda:0', dtype=torch.float64)
tensor([-2.9848, -5.2606, -5.1312, -5.9537, -6.1068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3443, device='cuda:0', dtype=torch.float64)
tensor([-2.9843, -5.2521, -5.1297, -5.9509, -6.1010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4078, device='cuda:0', dtype=torch.float64)
tensor([-2.9833, -5.2473, -5.1261, -5.9466, -6.0947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3704, device='cuda:0', dtype=torch.float64)
tensor([-2.9812, -5.2415, -5.1210, -5.9423, -6.0885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3917, device='cuda:0', dtype=torch.float64)
tensor([-2.9790, -5.2391, -5.1153, -5.9369, -6.0826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3978, device='cuda:0', dtype=torch.float64)
tensor([-2.9770, -5.2380, -5.1096, -5.9302, -6.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3073, device='cuda:0', dtype=torch.float64)
tensor([-2.9743, -5.2383, -5.1034, -5.9240, -6.0701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2894, device='cuda:0', dtype=torch.float64)
tensor([-2.9704, -5.2397, -5.0984, -5.9183, -6.0640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3872, device='cuda:0', dtype=torch.float64)
tensor([-2.9669, -5.2401, -5.0924, -5.9124, -6.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3838, device='cuda:0', dtype=torch.float64)
tensor([-2.9642, -5.2411, -5.0868, -5.9064, -6.0517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3734, device='cuda:0', dtype=torch.float64)
tensor([-2.9632, -5.2427, -5.0797, -5.9001, -6.0463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4325, device='cuda:0', dtype=torch.float64)
tensor([-2.9633, -5.2415, -5.0721, -5.8935, -6.0420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2832, device='cuda:0', dtype=torch.float64)
tensor([-2.9635, -5.2382, -5.0659, -5.8880, -6.0390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3959, device='cuda:0', dtype=torch.float64)
tensor([-2.9626, -5.2331, -5.0587, -5.8823, -6.0361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3961, device='cuda:0', dtype=torch.float64)
tensor([-2.9611, -5.2265, -5.0535, -5.8782, -6.0327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3506, device='cuda:0', dtype=torch.float64)
tensor([-2.9596, -5.2175, -5.0492, -5.8769, -6.0291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4227, device='cuda:0', dtype=torch.float64)
tensor([-2.9595, -5.2082, -5.0451, -5.8767, -6.0251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3717, device='cuda:0', dtype=torch.float64)
tensor([-2.9601, -5.1979, -5.0406, -5.8744, -6.0202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3499, device='cuda:0', dtype=torch.float64)
tensor([-2.9601, -5.1882, -5.0369, -5.8733, -6.0164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3559, device='cuda:0', dtype=torch.float64)
tensor([-2.9586, -5.1790, -5.0348, -5.8733, -6.0138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3278, device='cuda:0', dtype=torch.float64)
tensor([-2.9564, -5.1701, -5.0318, -5.8719, -6.0094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2422, device='cuda:0', dtype=torch.float64)
tensor([-2.9523, -5.1647, -5.0296, -5.8720, -6.0038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2642, device='cuda:0', dtype=torch.float64)
tensor([-2.9502, -5.1589, -5.0263, -5.8727, -5.9973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3363, device='cuda:0', dtype=torch.float64)
tensor([-2.9473, -5.1538, -5.0226, -5.8728, -5.9898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2976, device='cuda:0', dtype=torch.float64)
tensor([-2.9429, -5.1519, -5.0190, -5.8718, -5.9813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3907, device='cuda:0', dtype=torch.float64)
tensor([-2.9396, -5.1501, -5.0143, -5.8684, -5.9721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2993, device='cuda:0', dtype=torch.float64)
tensor([-2.9359, -5.1505, -5.0110, -5.8630, -5.9642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3645, device='cuda:0', dtype=torch.float64)
tensor([-2.9346, -5.1506, -5.0076, -5.8557, -5.9561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3173, device='cuda:0', dtype=torch.float64)
tensor([-2.9347, -5.1505, -5.0053, -5.8482, -5.9493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2932, device='cuda:0', dtype=torch.float64)
tensor([-2.9349, -5.1495, -5.0016, -5.8397, -5.9425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3848, device='cuda:0', dtype=torch.float64)
tensor([-2.9362, -5.1480, -4.9966, -5.8296, -5.9374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2807, device='cuda:0', dtype=torch.float64)
tensor([-2.9381, -5.1444, -4.9913, -5.8206, -5.9331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3803, device='cuda:0', dtype=torch.float64)
tensor([-2.9408, -5.1399, -4.9857, -5.8125, -5.9298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3331, device='cuda:0', dtype=torch.float64)
tensor([-2.9444, -5.1308, -4.9793, -5.8044, -5.9272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2820, device='cuda:0', dtype=torch.float64)
tensor([-2.9483, -5.1221, -4.9714, -5.7959, -5.9239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2862, device='cuda:0', dtype=torch.float64)
tensor([-2.9507, -5.1140, -4.9652, -5.7897, -5.9195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3576, device='cuda:0', dtype=torch.float64)
tensor([-2.9505, -5.1078, -4.9612, -5.7869, -5.9152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3125, device='cuda:0', dtype=torch.float64)
tensor([-2.9503, -5.1035, -4.9598, -5.7847, -5.9110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3805, device='cuda:0', dtype=torch.float64)
tensor([-2.9488, -5.1005, -4.9592, -5.7836, -5.9055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3576, device='cuda:0', dtype=torch.float64)
tensor([-2.9462, -5.0975, -4.9595, -5.7851, -5.9002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2717, device='cuda:0', dtype=torch.float64)
tensor([-2.9433, -5.0934, -4.9596, -5.7868, -5.8959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3010, device='cuda:0', dtype=torch.float64)
tensor([-2.9391, -5.0898, -4.9591, -5.7900, -5.8917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2794, device='cuda:0', dtype=torch.float64)
tensor([-2.9349, -5.0847, -4.9563, -5.7920, -5.8881], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3148, device='cuda:0', dtype=torch.float64)
tensor([-2.9299, -5.0802, -4.9538, -5.7939, -5.8823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3785, device='cuda:0', dtype=torch.float64)
tensor([-2.9252, -5.0756, -4.9500, -5.7950, -5.8776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2368, device='cuda:0', dtype=torch.float64)
tensor([-2.9198, -5.0726, -4.9460, -5.7958, -5.8718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2053, device='cuda:0', dtype=torch.float64)
tensor([-2.9145, -5.0687, -4.9416, -5.7971, -5.8655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3608, device='cuda:0', dtype=torch.float64)
tensor([-2.9084, -5.0682, -4.9383, -5.7985, -5.8575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3052, device='cuda:0', dtype=torch.float64)
tensor([-2.9031, -5.0665, -4.9353, -5.8004, -5.8496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3404, device='cuda:0', dtype=torch.float64)
tensor([-2.9000, -5.0661, -4.9307, -5.7981, -5.8413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4088, device='cuda:0', dtype=torch.float64)
tensor([-2.8981, -5.0654, -4.9258, -5.7933, -5.8348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2840, device='cuda:0', dtype=torch.float64)
tensor([-2.8993, -5.0641, -4.9203, -5.7853, -5.8288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2608, device='cuda:0', dtype=torch.float64)
tensor([-2.8996, -5.0623, -4.9147, -5.7768, -5.8218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3056, device='cuda:0', dtype=torch.float64)
tensor([-2.8990, -5.0613, -4.9107, -5.7698, -5.8149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2602, device='cuda:0', dtype=torch.float64)
tensor([-2.8981, -5.0564, -4.9060, -5.7642, -5.8103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2948, device='cuda:0', dtype=torch.float64)
tensor([-2.8981, -5.0507, -4.8989, -5.7569, -5.8069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3827, device='cuda:0', dtype=torch.float64)
tensor([-2.8983, -5.0468, -4.8913, -5.7501, -5.8038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2702, device='cuda:0', dtype=torch.float64)
tensor([-2.8979, -5.0424, -4.8838, -5.7443, -5.8032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2067, device='cuda:0', dtype=torch.float64)
tensor([-2.8977, -5.0380, -4.8756, -5.7401, -5.8017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2904, device='cuda:0', dtype=torch.float64)
tensor([-2.8967, -5.0319, -4.8665, -5.7355, -5.7994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3184, device='cuda:0', dtype=torch.float64)
tensor([-2.8958, -5.0239, -4.8574, -5.7317, -5.7989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3144, device='cuda:0', dtype=torch.float64)
tensor([-2.8932, -5.0147, -4.8500, -5.7294, -5.7976], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-2.8894, -5.0067, -4.8443, -5.7286, -5.7966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3086, device='cuda:0', dtype=torch.float64)
tensor([-2.8866, -4.9974, -4.8387, -5.7281, -5.7954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2481, device='cuda:0', dtype=torch.float64)
tensor([-2.8841, -4.9904, -4.8331, -5.7289, -5.7921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2800, device='cuda:0', dtype=torch.float64)
tensor([-2.8801, -4.9846, -4.8290, -5.7315, -5.7888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2280, device='cuda:0', dtype=torch.float64)
tensor([-2.8759, -4.9784, -4.8270, -5.7332, -5.7846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2614, device='cuda:0', dtype=torch.float64)
tensor([-2.8724, -4.9753, -4.8254, -5.7346, -5.7782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2964, device='cuda:0', dtype=torch.float64)
tensor([-2.8691, -4.9750, -4.8230, -5.7341, -5.7717], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2554, device='cuda:0', dtype=torch.float64)
tensor([-2.8668, -4.9751, -4.8211, -5.7310, -5.7655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2916, device='cuda:0', dtype=torch.float64)
tensor([-2.8659, -4.9741, -4.8185, -5.7270, -5.7606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3391, device='cuda:0', dtype=torch.float64)
tensor([-2.8654, -4.9727, -4.8154, -5.7200, -5.7547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2614, device='cuda:0', dtype=torch.float64)
tensor([-2.8657, -4.9713, -4.8115, -5.7116, -5.7487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2793, device='cuda:0', dtype=torch.float64)
tensor([-2.8658, -4.9683, -4.8089, -5.7044, -5.7436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1827, device='cuda:0', dtype=torch.float64)
tensor([-2.8648, -4.9670, -4.8062, -5.6967, -5.7374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2491, device='cuda:0', dtype=torch.float64)
tensor([-2.8641, -4.9661, -4.8031, -5.6884, -5.7305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2714, device='cuda:0', dtype=torch.float64)
tensor([-2.8643, -4.9670, -4.8001, -5.6804, -5.7219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-2.8645, -4.9644, -4.7989, -5.6739, -5.7121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3028, device='cuda:0', dtype=torch.float64)
tensor([-2.8649, -4.9601, -4.7967, -5.6686, -5.7037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-2.8654, -4.9563, -4.7911, -5.6619, -5.6961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3441, device='cuda:0', dtype=torch.float64)
tensor([-2.8664, -4.9519, -4.7837, -5.6561, -5.6887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2774, device='cuda:0', dtype=torch.float64)
tensor([-2.8667, -4.9474, -4.7755, -5.6494, -5.6816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2669, device='cuda:0', dtype=torch.float64)
tensor([-2.8663, -4.9434, -4.7684, -5.6418, -5.6741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2209, device='cuda:0', dtype=torch.float64)
tensor([-2.8648, -4.9385, -4.7626, -5.6370, -5.6688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2385, device='cuda:0', dtype=torch.float64)
tensor([-2.8619, -4.9362, -4.7588, -5.6340, -5.6645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2454, device='cuda:0', dtype=torch.float64)
tensor([-2.8583, -4.9329, -4.7563, -5.6318, -5.6598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2204, device='cuda:0', dtype=torch.float64)
tensor([-2.8532, -4.9313, -4.7544, -5.6288, -5.6546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2682, device='cuda:0', dtype=torch.float64)
tensor([-2.8480, -4.9302, -4.7522, -5.6279, -5.6494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2401, device='cuda:0', dtype=torch.float64)
tensor([-2.8429, -4.9269, -4.7503, -5.6279, -5.6448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2683, device='cuda:0', dtype=torch.float64)
tensor([-2.8376, -4.9234, -4.7487, -5.6281, -5.6407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1842, device='cuda:0', dtype=torch.float64)
tensor([-2.8328, -4.9174, -4.7463, -5.6272, -5.6381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2629, device='cuda:0', dtype=torch.float64)
tensor([-2.8276, -4.9097, -4.7449, -5.6270, -5.6355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3582, device='cuda:0', dtype=torch.float64)
tensor([-2.8236, -4.9049, -4.7423, -5.6234, -5.6342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2413, device='cuda:0', dtype=torch.float64)
tensor([-2.8202, -4.9009, -4.7407, -5.6188, -5.6322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3851, device='cuda:0', dtype=torch.float64)
tensor([-2.8185, -4.8965, -4.7372, -5.6119, -5.6299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2931, device='cuda:0', dtype=torch.float64)
tensor([-2.8177, -4.8905, -4.7336, -5.6049, -5.6281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2625, device='cuda:0', dtype=torch.float64)
tensor([-2.8171, -4.8845, -4.7307, -5.5986, -5.6253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([-2.8157, -4.8801, -4.7285, -5.5941, -5.6245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2638, device='cuda:0', dtype=torch.float64)
tensor([-2.8149, -4.8771, -4.7258, -5.5908, -5.6256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2202, device='cuda:0', dtype=torch.float64)
tensor([-2.8145, -4.8763, -4.7241, -5.5887, -5.6254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2633, device='cuda:0', dtype=torch.float64)
tensor([-2.8140, -4.8766, -4.7215, -5.5852, -5.6238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1862, device='cuda:0', dtype=torch.float64)
tensor([-2.8146, -4.8773, -4.7164, -5.5804, -5.6221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2189, device='cuda:0', dtype=torch.float64)
tensor([-2.8149, -4.8788, -4.7116, -5.5747, -5.6191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2023, device='cuda:0', dtype=torch.float64)
tensor([-2.8145, -4.8804, -4.7068, -5.5698, -5.6152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1533, device='cuda:0', dtype=torch.float64)
tensor([-2.8139, -4.8826, -4.7022, -5.5652, -5.6099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2689, device='cuda:0', dtype=torch.float64)
tensor([-2.8146, -4.8823, -4.6973, -5.5617, -5.6046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2464, device='cuda:0', dtype=torch.float64)
tensor([-2.8136, -4.8817, -4.6944, -5.5605, -5.5969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2413, device='cuda:0', dtype=torch.float64)
tensor([-2.8111, -4.8801, -4.6915, -5.5603, -5.5894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2839, device='cuda:0', dtype=torch.float64)
tensor([-2.8079, -4.8750, -4.6900, -5.5618, -5.5823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1693, device='cuda:0', dtype=torch.float64)
tensor([-2.8033, -4.8707, -4.6893, -5.5630, -5.5741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1898, device='cuda:0', dtype=torch.float64)
tensor([-2.7989, -4.8678, -4.6904, -5.5648, -5.5666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1834, device='cuda:0', dtype=torch.float64)
tensor([-2.7943, -4.8659, -4.6925, -5.5659, -5.5589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([-2.7904, -4.8632, -4.6947, -5.5665, -5.5517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1707, device='cuda:0', dtype=torch.float64)
tensor([-2.7852, -4.8583, -4.6979, -5.5683, -5.5458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2403, device='cuda:0', dtype=torch.float64)
tensor([-2.7816, -4.8529, -4.6998, -5.5677, -5.5394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3004, device='cuda:0', dtype=torch.float64)
tensor([-2.7802, -4.8441, -4.7006, -5.5672, -5.5343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-2.7810, -4.8360, -4.6996, -5.5653, -5.5309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1643, device='cuda:0', dtype=torch.float64)
tensor([-2.7836, -4.8272, -4.6962, -5.5613, -5.5290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2412, device='cuda:0', dtype=torch.float64)
tensor([-2.7852, -4.8209, -4.6955, -5.5564, -5.5272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2313, device='cuda:0', dtype=torch.float64)
tensor([-2.7862, -4.8170, -4.6949, -5.5523, -5.5261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-2.7894, -4.8138, -4.6929, -5.5453, -5.5243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1593, device='cuda:0', dtype=torch.float64)
tensor([-2.7922, -4.8123, -4.6916, -5.5377, -5.5233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2017, device='cuda:0', dtype=torch.float64)
tensor([-2.7930, -4.8097, -4.6893, -5.5305, -5.5216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2584, device='cuda:0', dtype=torch.float64)
tensor([-2.7912, -4.8082, -4.6873, -5.5265, -5.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2848, device='cuda:0', dtype=torch.float64)
tensor([-2.7899, -4.8083, -4.6853, -5.5216, -5.5151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3131, device='cuda:0', dtype=torch.float64)
tensor([-2.7890, -4.8084, -4.6819, -5.5138, -5.5110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1309, device='cuda:0', dtype=torch.float64)
tensor([-2.7890, -4.8070, -4.6774, -5.5058, -5.5060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2205, device='cuda:0', dtype=torch.float64)
tensor([-2.7895, -4.8029, -4.6732, -5.5001, -5.5009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2231, device='cuda:0', dtype=torch.float64)
tensor([-2.7896, -4.7979, -4.6698, -5.4958, -5.4964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1756, device='cuda:0', dtype=torch.float64)
tensor([-2.7890, -4.7918, -4.6662, -5.4916, -5.4918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1883, device='cuda:0', dtype=torch.float64)
tensor([-2.7867, -4.7846, -4.6611, -5.4888, -5.4863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2601, device='cuda:0', dtype=torch.float64)
tensor([-2.7842, -4.7764, -4.6545, -5.4856, -5.4810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1618, device='cuda:0', dtype=torch.float64)
tensor([-2.7816, -4.7676, -4.6480, -5.4820, -5.4774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1685, device='cuda:0', dtype=torch.float64)
tensor([-2.7778, -4.7601, -4.6439, -5.4790, -5.4732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-2.7749, -4.7548, -4.6398, -5.4747, -5.4694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2097, device='cuda:0', dtype=torch.float64)
tensor([-2.7723, -4.7502, -4.6380, -5.4713, -5.4654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2068, device='cuda:0', dtype=torch.float64)
tensor([-2.7704, -4.7483, -4.6372, -5.4673, -5.4612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1725, device='cuda:0', dtype=torch.float64)
tensor([-2.7710, -4.7447, -4.6358, -5.4620, -5.4576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3014, device='cuda:0', dtype=torch.float64)
tensor([-2.7731, -4.7397, -4.6345, -5.4569, -5.4548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1862, device='cuda:0', dtype=torch.float64)
tensor([-2.7758, -4.7346, -4.6356, -5.4539, -5.4522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2810, device='cuda:0', dtype=torch.float64)
tensor([-2.7797, -4.7294, -4.6370, -5.4495, -5.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2083, device='cuda:0', dtype=torch.float64)
tensor([-2.7831, -4.7241, -4.6393, -5.4473, -5.4435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1505, device='cuda:0', dtype=torch.float64)
tensor([-2.7856, -4.7190, -4.6432, -5.4471, -5.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0985, device='cuda:0', dtype=torch.float64)
tensor([-2.7862, -4.7146, -4.6480, -5.4488, -5.4333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-2.7859, -4.7081, -4.6513, -5.4530, -5.4282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1712, device='cuda:0', dtype=torch.float64)
tensor([-2.7847, -4.7012, -4.6543, -5.4573, -5.4226], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2861, device='cuda:0', dtype=torch.float64)
tensor([-2.7813, -4.6991, -4.6569, -5.4598, -5.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2752, device='cuda:0', dtype=torch.float64)
tensor([-2.7766, -4.6959, -4.6581, -5.4640, -5.4098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2075, device='cuda:0', dtype=torch.float64)
tensor([-2.7722, -4.6946, -4.6579, -5.4663, -5.4033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1790, device='cuda:0', dtype=torch.float64)
tensor([-2.7697, -4.6958, -4.6556, -5.4653, -5.3967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1992, device='cuda:0', dtype=torch.float64)
tensor([-2.7685, -4.6972, -4.6518, -5.4608, -5.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2146, device='cuda:0', dtype=torch.float64)
tensor([-2.7683, -4.6988, -4.6469, -5.4555, -5.3864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1680, device='cuda:0', dtype=torch.float64)
tensor([-2.7671, -4.7007, -4.6409, -5.4496, -5.3829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2808, device='cuda:0', dtype=torch.float64)
tensor([-2.7657, -4.7007, -4.6342, -5.4443, -5.3803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1776, device='cuda:0', dtype=torch.float64)
tensor([-2.7647, -4.7007, -4.6272, -5.4384, -5.3787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2169, device='cuda:0', dtype=torch.float64)
tensor([-2.7639, -4.6982, -4.6185, -5.4344, -5.3770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2196, device='cuda:0', dtype=torch.float64)
tensor([-2.7635, -4.6957, -4.6122, -5.4291, -5.3743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2179, device='cuda:0', dtype=torch.float64)
tensor([-2.7637, -4.6931, -4.6062, -5.4244, -5.3712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-2.7633, -4.6925, -4.6013, -5.4187, -5.3677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1160, device='cuda:0', dtype=torch.float64)
tensor([-2.7622, -4.6925, -4.5978, -5.4146, -5.3645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0764, device='cuda:0', dtype=torch.float64)
tensor([-2.7610, -4.6899, -4.5958, -5.4124, -5.3610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1264, device='cuda:0', dtype=torch.float64)
tensor([-2.7602, -4.6877, -4.5943, -5.4099, -5.3576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1692, device='cuda:0', dtype=torch.float64)
tensor([-2.7583, -4.6837, -4.5943, -5.4088, -5.3558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1504, device='cuda:0', dtype=torch.float64)
tensor([-2.7568, -4.6802, -4.5946, -5.4072, -5.3528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-2.7559, -4.6783, -4.5940, -5.4057, -5.3490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2313, device='cuda:0', dtype=torch.float64)
tensor([-2.7539, -4.6768, -4.5931, -5.4047, -5.3468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1388, device='cuda:0', dtype=torch.float64)
tensor([-2.7500, -4.6757, -4.5935, -5.4038, -5.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2088, device='cuda:0', dtype=torch.float64)
tensor([-2.7461, -4.6767, -4.5927, -5.4015, -5.3413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1691, device='cuda:0', dtype=torch.float64)
tensor([-2.7414, -4.6774, -4.5904, -5.4015, -5.3372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2188, device='cuda:0', dtype=torch.float64)
tensor([-2.7377, -4.6776, -4.5862, -5.3993, -5.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3610, device='cuda:0', dtype=torch.float64)
tensor([-2.7344, -4.6773, -4.5808, -5.3986, -5.3297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1523, device='cuda:0', dtype=torch.float64)
tensor([-2.7327, -4.6777, -4.5750, -5.3953, -5.3281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1694, device='cuda:0', dtype=torch.float64)
tensor([-2.7314, -4.6734, -4.5688, -5.3929, -5.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1346, device='cuda:0', dtype=torch.float64)
tensor([-2.7301, -4.6678, -4.5605, -5.3888, -5.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1524, device='cuda:0', dtype=torch.float64)
tensor([-2.7301, -4.6625, -4.5508, -5.3839, -5.3203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2028, device='cuda:0', dtype=torch.float64)
tensor([-2.7305, -4.6545, -4.5418, -5.3783, -5.3167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1948, device='cuda:0', dtype=torch.float64)
tensor([-2.7310, -4.6475, -4.5329, -5.3724, -5.3125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1509, device='cuda:0', dtype=torch.float64)
tensor([-2.7305, -4.6410, -4.5263, -5.3684, -5.3073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1575, device='cuda:0', dtype=torch.float64)
tensor([-2.7294, -4.6342, -4.5197, -5.3650, -5.3019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1346, device='cuda:0', dtype=torch.float64)
tensor([-2.7270, -4.6276, -4.5151, -5.3612, -5.2967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-2.7250, -4.6211, -4.5114, -5.3574, -5.2928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1866, device='cuda:0', dtype=torch.float64)
tensor([-2.7223, -4.6144, -4.5093, -5.3541, -5.2887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0317, device='cuda:0', dtype=torch.float64)
tensor([-2.7190, -4.6065, -4.5081, -5.3517, -5.2848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1990, device='cuda:0', dtype=torch.float64)
tensor([-2.7162, -4.5976, -4.5081, -5.3490, -5.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-2.7173, -4.5892, -4.5074, -5.3449, -5.2816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0793, device='cuda:0', dtype=torch.float64)
tensor([-2.7183, -4.5839, -4.5074, -5.3403, -5.2806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1280, device='cuda:0', dtype=torch.float64)
tensor([-2.7193, -4.5817, -4.5078, -5.3359, -5.2799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0693, device='cuda:0', dtype=torch.float64)
tensor([-2.7199, -4.5814, -4.5094, -5.3315, -5.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2540, device='cuda:0', dtype=torch.float64)
tensor([-2.7210, -4.5840, -4.5108, -5.3286, -5.2777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2691, device='cuda:0', dtype=torch.float64)
tensor([-2.7221, -4.5861, -4.5117, -5.3274, -5.2767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1669, device='cuda:0', dtype=torch.float64)
tensor([-2.7237, -4.5872, -4.5103, -5.3268, -5.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2123, device='cuda:0', dtype=torch.float64)
tensor([-2.7253, -4.5887, -4.5078, -5.3264, -5.2753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2780, device='cuda:0', dtype=torch.float64)
tensor([-2.7256, -4.5923, -4.5041, -5.3254, -5.2762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1535, device='cuda:0', dtype=torch.float64)
tensor([-2.7227, -4.5939, -4.4996, -5.3271, -5.2773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1786, device='cuda:0', dtype=torch.float64)
tensor([-2.7202, -4.5918, -4.4951, -5.3290, -5.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-2.7175, -4.5931, -4.4910, -5.3312, -5.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1373, device='cuda:0', dtype=torch.float64)
tensor([-2.7145, -4.5928, -4.4891, -5.3348, -5.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0733, device='cuda:0', dtype=torch.float64)
tensor([-2.7123, -4.5913, -4.4874, -5.3374, -5.2779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0922, device='cuda:0', dtype=torch.float64)
tensor([-2.7093, -4.5895, -4.4838, -5.3379, -5.2751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1486, device='cuda:0', dtype=torch.float64)
tensor([-2.7061, -4.5843, -4.4805, -5.3373, -5.2722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2022, device='cuda:0', dtype=torch.float64)
tensor([-2.7036, -4.5777, -4.4776, -5.3366, -5.2694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2071, device='cuda:0', dtype=torch.float64)
tensor([-2.6996, -4.5680, -4.4739, -5.3386, -5.2666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2311, device='cuda:0', dtype=torch.float64)
tensor([-2.6962, -4.5576, -4.4693, -5.3381, -5.2639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1930, device='cuda:0', dtype=torch.float64)
tensor([-2.6950, -4.5486, -4.4640, -5.3360, -5.2614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0743, device='cuda:0', dtype=torch.float64)
tensor([-2.6959, -4.5396, -4.4601, -5.3326, -5.2584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1581, device='cuda:0', dtype=torch.float64)
tensor([-2.6969, -4.5327, -4.4573, -5.3289, -5.2547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2525, device='cuda:0', dtype=torch.float64)
tensor([-2.6972, -4.5283, -4.4569, -5.3250, -5.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1631, device='cuda:0', dtype=torch.float64)
tensor([-2.6965, -4.5249, -4.4566, -5.3209, -5.2460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1389, device='cuda:0', dtype=torch.float64)
tensor([-2.6972, -4.5224, -4.4565, -5.3168, -5.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1431, device='cuda:0', dtype=torch.float64)
tensor([-2.6981, -4.5221, -4.4552, -5.3127, -5.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2490, device='cuda:0', dtype=torch.float64)
tensor([-2.7006, -4.5234, -4.4525, -5.3090, -5.2296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1561, device='cuda:0', dtype=torch.float64)
tensor([-2.7034, -4.5271, -4.4492, -5.3049, -5.2244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1383, device='cuda:0', dtype=torch.float64)
tensor([-2.7062, -4.5324, -4.4455, -5.3000, -5.2195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.7081, -4.5406, -4.4416, -5.2948, -5.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-2.7084, -4.5481, -4.4378, -5.2936, -5.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0866, device='cuda:0', dtype=torch.float64)
tensor([-2.7084, -4.5528, -4.4329, -5.2933, -5.2078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1332, device='cuda:0', dtype=torch.float64)
tensor([-2.7084, -4.5520, -4.4275, -5.2930, -5.2063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2690, device='cuda:0', dtype=torch.float64)
tensor([-2.7080, -4.5490, -4.4226, -5.2924, -5.2051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1272, device='cuda:0', dtype=torch.float64)
tensor([-2.7060, -4.5453, -4.4166, -5.2912, -5.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2066, device='cuda:0', dtype=torch.float64)
tensor([-2.7045, -4.5406, -4.4102, -5.2875, -5.1988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1056, device='cuda:0', dtype=torch.float64)
tensor([-2.7026, -4.5351, -4.4051, -5.2819, -5.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1846, device='cuda:0', dtype=torch.float64)
tensor([-2.7013, -4.5274, -4.3995, -5.2781, -5.1913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0915, device='cuda:0', dtype=torch.float64)
tensor([-2.6994, -4.5151, -4.3957, -5.2767, -5.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-2.6987, -4.5046, -4.3932, -5.2750, -5.1849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0928, device='cuda:0', dtype=torch.float64)
tensor([-2.6980, -4.4954, -4.3916, -5.2723, -5.1819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2227, device='cuda:0', dtype=torch.float64)
tensor([-2.6977, -4.4896, -4.3884, -5.2688, -5.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2458, device='cuda:0', dtype=torch.float64)
tensor([-2.6974, -4.4864, -4.3872, -5.2676, -5.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0831, device='cuda:0', dtype=torch.float64)
tensor([-2.6970, -4.4829, -4.3887, -5.2697, -5.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1691, device='cuda:0', dtype=torch.float64)
tensor([-2.6981, -4.4815, -4.3884, -5.2692, -5.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1048, device='cuda:0', dtype=torch.float64)
tensor([-2.6983, -4.4806, -4.3878, -5.2684, -5.1750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1643, device='cuda:0', dtype=torch.float64)
tensor([-2.6979, -4.4832, -4.3874, -5.2677, -5.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1276, device='cuda:0', dtype=torch.float64)
tensor([-2.6967, -4.4887, -4.3865, -5.2652, -5.1699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1119, device='cuda:0', dtype=torch.float64)
tensor([-2.6950, -4.4953, -4.3861, -5.2635, -5.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-2.6933, -4.5025, -4.3862, -5.2615, -5.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([-2.6908, -4.5090, -4.3849, -5.2584, -5.1640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2066, device='cuda:0', dtype=torch.float64)
tensor([-2.6877, -4.5151, -4.3840, -5.2567, -5.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-2.6856, -4.5200, -4.3831, -5.2567, -5.1593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1946, device='cuda:0', dtype=torch.float64)
tensor([-2.6837, -4.5195, -4.3817, -5.2564, -5.1577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2271, device='cuda:0', dtype=torch.float64)
tensor([-2.6809, -4.5151, -4.3795, -5.2556, -5.1567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2056, device='cuda:0', dtype=torch.float64)
tensor([-2.6776, -4.5073, -4.3769, -5.2551, -5.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-2.6746, -4.5002, -4.3730, -5.2541, -5.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2121, device='cuda:0', dtype=torch.float64)
tensor([-2.6721, -4.4933, -4.3707, -5.2519, -5.1476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1923, device='cuda:0', dtype=torch.float64)
tensor([-2.6705, -4.4870, -4.3693, -5.2491, -5.1453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2345, device='cuda:0', dtype=torch.float64)
tensor([-2.6697, -4.4815, -4.3680, -5.2445, -5.1423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1236, device='cuda:0', dtype=torch.float64)
tensor([-2.6680, -4.4737, -4.3676, -5.2401, -5.1397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([-2.6662, -4.4649, -4.3686, -5.2376, -5.1367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0959, device='cuda:0', dtype=torch.float64)
tensor([-2.6647, -4.4567, -4.3697, -5.2352, -5.1337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1520, device='cuda:0', dtype=torch.float64)
tensor([-2.6639, -4.4501, -4.3706, -5.2318, -5.1301], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1554, device='cuda:0', dtype=torch.float64)
tensor([-2.6644, -4.4420, -4.3705, -5.2287, -5.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1276, device='cuda:0', dtype=torch.float64)
tensor([-2.6656, -4.4343, -4.3696, -5.2253, -5.1302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1202, device='cuda:0', dtype=torch.float64)
tensor([-2.6667, -4.4272, -4.3692, -5.2237, -5.1310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2622, device='cuda:0', dtype=torch.float64)
tensor([-2.6692, -4.4228, -4.3663, -5.2204, -5.1294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2173, device='cuda:0', dtype=torch.float64)
tensor([-2.6706, -4.4194, -4.3664, -5.2178, -5.1280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0811, device='cuda:0', dtype=torch.float64)
tensor([-2.6715, -4.4181, -4.3669, -5.2162, -5.1252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1433, device='cuda:0', dtype=torch.float64)
tensor([-2.6711, -4.4179, -4.3697, -5.2160, -5.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1456, device='cuda:0', dtype=torch.float64)
tensor([-2.6701, -4.4189, -4.3717, -5.2145, -5.1207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0918, device='cuda:0', dtype=torch.float64)
tensor([-2.6693, -4.4204, -4.3737, -5.2121, -5.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-2.6679, -4.4219, -4.3744, -5.2084, -5.1200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1597, device='cuda:0', dtype=torch.float64)
tensor([-2.6653, -4.4223, -4.3736, -5.2035, -5.1184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-2.6623, -4.4207, -4.3723, -5.2003, -5.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0518, device='cuda:0', dtype=torch.float64)
tensor([-2.6589, -4.4180, -4.3690, -5.1971, -5.1161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1261, device='cuda:0', dtype=torch.float64)
tensor([-2.6547, -4.4133, -4.3652, -5.1969, -5.1144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1026, device='cuda:0', dtype=torch.float64)
tensor([-2.6509, -4.4081, -4.3599, -5.1965, -5.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1861, device='cuda:0', dtype=torch.float64)
tensor([-2.6470, -4.4004, -4.3544, -5.1965, -5.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1177, device='cuda:0', dtype=torch.float64)
tensor([-2.6434, -4.3943, -4.3502, -5.1961, -5.1049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1757, device='cuda:0', dtype=torch.float64)
tensor([-2.6414, -4.3864, -4.3455, -5.1940, -5.1012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1451, device='cuda:0', dtype=torch.float64)
tensor([-2.6401, -4.3815, -4.3400, -5.1894, -5.0974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2042, device='cuda:0', dtype=torch.float64)
tensor([-2.6391, -4.3792, -4.3356, -5.1843, -5.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([-2.6387, -4.3756, -4.3306, -5.1787, -5.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2327, device='cuda:0', dtype=torch.float64)
tensor([-2.6373, -4.3722, -4.3272, -5.1727, -5.0875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0243, device='cuda:0', dtype=torch.float64)
tensor([-2.6367, -4.3700, -4.3228, -5.1660, -5.0838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1983, device='cuda:0', dtype=torch.float64)
tensor([-2.6349, -4.3697, -4.3204, -5.1614, -5.0813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-2.6331, -4.3714, -4.3187, -5.1569, -5.0784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2059, device='cuda:0', dtype=torch.float64)
tensor([-2.6331, -4.3756, -4.3186, -5.1530, -5.0767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1587, device='cuda:0', dtype=torch.float64)
tensor([-2.6343, -4.3778, -4.3176, -5.1494, -5.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1200, device='cuda:0', dtype=torch.float64)
tensor([-2.6356, -4.3777, -4.3150, -5.1450, -5.0738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1302, device='cuda:0', dtype=torch.float64)
tensor([-2.6378, -4.3785, -4.3118, -5.1409, -5.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2438, device='cuda:0', dtype=torch.float64)
tensor([-2.6376, -4.3792, -4.3096, -5.1369, -5.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2324, device='cuda:0', dtype=torch.float64)
tensor([-2.6378, -4.3788, -4.3054, -5.1332, -5.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1854, device='cuda:0', dtype=torch.float64)
tensor([-2.6384, -4.3794, -4.3013, -5.1318, -5.0550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-2.6385, -4.3798, -4.2978, -5.1305, -5.0477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1531, device='cuda:0', dtype=torch.float64)
tensor([-2.6368, -4.3802, -4.2957, -5.1294, -5.0400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1519, device='cuda:0', dtype=torch.float64)
tensor([-2.6334, -4.3803, -4.2926, -5.1279, -5.0314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0978, device='cuda:0', dtype=torch.float64)
tensor([-2.6300, -4.3788, -4.2906, -5.1273, -5.0236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1389, device='cuda:0', dtype=torch.float64)
tensor([-2.6270, -4.3791, -4.2905, -5.1272, -5.0166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2436, device='cuda:0', dtype=torch.float64)
tensor([-2.6235, -4.3789, -4.2897, -5.1279, -5.0109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2594, device='cuda:0', dtype=torch.float64)
tensor([-2.6208, -4.3783, -4.2881, -5.1268, -5.0066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0171, device='cuda:0', dtype=torch.float64)
tensor([-2.6178, -4.3772, -4.2882, -5.1277, -5.0023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-2.6161, -4.3757, -4.2886, -5.1284, -4.9972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-2.6141, -4.3728, -4.2909, -5.1316, -4.9920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1336, device='cuda:0', dtype=torch.float64)
tensor([-2.6125, -4.3673, -4.2933, -5.1362, -4.9877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1570, device='cuda:0', dtype=torch.float64)
tensor([-2.6117, -4.3586, -4.2964, -5.1408, -4.9835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0733, device='cuda:0', dtype=torch.float64)
tensor([-2.6113, -4.3486, -4.2994, -5.1454, -4.9806], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1527, device='cuda:0', dtype=torch.float64)
tensor([-2.6105, -4.3379, -4.3010, -5.1471, -4.9781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1512, device='cuda:0', dtype=torch.float64)
tensor([-2.6115, -4.3294, -4.3000, -5.1460, -4.9773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1238, device='cuda:0', dtype=torch.float64)
tensor([-2.6130, -4.3238, -4.2989, -5.1453, -4.9757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1846, device='cuda:0', dtype=torch.float64)
tensor([-2.6135, -4.3202, -4.2975, -5.1435, -4.9763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1609, device='cuda:0', dtype=torch.float64)
tensor([-2.6145, -4.3193, -4.2941, -5.1383, -4.9778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0424, device='cuda:0', dtype=torch.float64)
tensor([-2.6148, -4.3197, -4.2910, -5.1330, -4.9790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1570, device='cuda:0', dtype=torch.float64)
tensor([-2.6143, -4.3230, -4.2863, -5.1272, -4.9788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1406, device='cuda:0', dtype=torch.float64)
tensor([-2.6133, -4.3275, -4.2822, -5.1204, -4.9785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0365, device='cuda:0', dtype=torch.float64)
tensor([-2.6110, -4.3306, -4.2796, -5.1152, -4.9772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2557, device='cuda:0', dtype=torch.float64)
tensor([-2.6099, -4.3321, -4.2742, -5.1108, -4.9777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0694, device='cuda:0', dtype=torch.float64)
tensor([-2.6077, -4.3318, -4.2673, -5.1078, -4.9771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1878, device='cuda:0', dtype=torch.float64)
tensor([-2.6069, -4.3310, -4.2616, -5.1051, -4.9768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1551, device='cuda:0', dtype=torch.float64)
tensor([-2.6068, -4.3301, -4.2595, -5.1031, -4.9755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0895, device='cuda:0', dtype=torch.float64)
tensor([-2.6061, -4.3284, -4.2580, -5.1031, -4.9745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0312, device='cuda:0', dtype=torch.float64)
tensor([-2.6055, -4.3265, -4.2572, -5.1022, -4.9728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0723, device='cuda:0', dtype=torch.float64)
tensor([-2.6069, -4.3230, -4.2561, -5.1007, -4.9701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2564, device='cuda:0', dtype=torch.float64)
tensor([-2.6064, -4.3191, -4.2558, -5.1018, -4.9659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0702, device='cuda:0', dtype=torch.float64)
tensor([-2.6068, -4.3140, -4.2536, -5.1022, -4.9615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1571, device='cuda:0', dtype=torch.float64)
tensor([-2.6061, -4.3103, -4.2505, -5.1004, -4.9580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1272, device='cuda:0', dtype=torch.float64)
tensor([-2.6064, -4.3071, -4.2471, -5.0976, -4.9538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9785, device='cuda:0', dtype=torch.float64)
tensor([-2.6078, -4.3051, -4.2448, -5.0934, -4.9509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0741, device='cuda:0', dtype=torch.float64)
tensor([-2.6093, -4.3015, -4.2441, -5.0926, -4.9473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1460, device='cuda:0', dtype=torch.float64)
tensor([-2.6107, -4.2977, -4.2449, -5.0895, -4.9442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1427, device='cuda:0', dtype=torch.float64)
tensor([-2.6120, -4.2972, -4.2464, -5.0877, -4.9409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2320, device='cuda:0', dtype=torch.float64)
tensor([-2.6119, -4.2952, -4.2466, -5.0853, -4.9385], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0316, device='cuda:0', dtype=torch.float64)
tensor([-2.6111, -4.2936, -4.2478, -5.0831, -4.9365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0642, device='cuda:0', dtype=torch.float64)
tensor([-2.6095, -4.2937, -4.2486, -5.0800, -4.9350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0723, device='cuda:0', dtype=torch.float64)
tensor([-2.6077, -4.2936, -4.2500, -5.0790, -4.9322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.6060, -4.2892, -4.2502, -5.0781, -4.9300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-2.6053, -4.2859, -4.2486, -5.0791, -4.9292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([-2.6057, -4.2845, -4.2453, -5.0790, -4.9289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0807, device='cuda:0', dtype=torch.float64)
tensor([-2.6055, -4.2816, -4.2381, -5.0776, -4.9277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([-2.6060, -4.2813, -4.2308, -5.0747, -4.9281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1131, device='cuda:0', dtype=torch.float64)
tensor([-2.6065, -4.2825, -4.2247, -5.0719, -4.9273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0322, device='cuda:0', dtype=torch.float64)
tensor([-2.6062, -4.2827, -4.2177, -5.0676, -4.9269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0668, device='cuda:0', dtype=torch.float64)
tensor([-2.6072, -4.2792, -4.2098, -5.0609, -4.9259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-2.6062, -4.2779, -4.2028, -5.0560, -4.9240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1361, device='cuda:0', dtype=torch.float64)
tensor([-2.6049, -4.2767, -4.1970, -5.0524, -4.9224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0616, device='cuda:0', dtype=torch.float64)
tensor([-2.6039, -4.2743, -4.1915, -5.0488, -4.9202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1019, device='cuda:0', dtype=torch.float64)
tensor([-2.6019, -4.2718, -4.1871, -5.0461, -4.9166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0801, device='cuda:0', dtype=torch.float64)
tensor([-2.6024, -4.2659, -4.1825, -5.0440, -4.9139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2496, device='cuda:0', dtype=torch.float64)
tensor([-2.6014, -4.2628, -4.1800, -5.0433, -4.9111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2486, device='cuda:0', dtype=torch.float64)
tensor([-2.6012, -4.2578, -4.1780, -5.0439, -4.9114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1343, device='cuda:0', dtype=torch.float64)
tensor([-2.6003, -4.2520, -4.1786, -5.0453, -4.9130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-2.5973, -4.2468, -4.1817, -5.0488, -4.9130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-2.5945, -4.2424, -4.1852, -5.0527, -4.9137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([-2.5909, -4.2378, -4.1897, -5.0556, -4.9140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1269, device='cuda:0', dtype=torch.float64)
tensor([-2.5892, -4.2331, -4.1912, -5.0551, -4.9147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1152, device='cuda:0', dtype=torch.float64)
tensor([-2.5871, -4.2296, -4.1929, -5.0524, -4.9146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0351, device='cuda:0', dtype=torch.float64)
tensor([-2.5854, -4.2263, -4.1926, -5.0494, -4.9123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0516, device='cuda:0', dtype=torch.float64)
tensor([-2.5831, -4.2238, -4.1944, -5.0476, -4.9094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0564, device='cuda:0', dtype=torch.float64)
tensor([-2.5813, -4.2215, -4.1942, -5.0442, -4.9070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1643, device='cuda:0', dtype=torch.float64)
tensor([-2.5802, -4.2212, -4.1936, -5.0379, -4.9050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0259, device='cuda:0', dtype=torch.float64)
tensor([-2.5778, -4.2211, -4.1930, -5.0319, -4.9038], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1917, device='cuda:0', dtype=torch.float64)
tensor([-2.5775, -4.2235, -4.1912, -5.0259, -4.9005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-2.5766, -4.2236, -4.1908, -5.0229, -4.8974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0627, device='cuda:0', dtype=torch.float64)
tensor([-2.5757, -4.2237, -4.1886, -5.0216, -4.8961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0597, device='cuda:0', dtype=torch.float64)
tensor([-2.5744, -4.2232, -4.1866, -5.0226, -4.8937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0842, device='cuda:0', dtype=torch.float64)
tensor([-2.5727, -4.2205, -4.1842, -5.0252, -4.8909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0858, device='cuda:0', dtype=torch.float64)
tensor([-2.5719, -4.2194, -4.1813, -5.0271, -4.8869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0155, device='cuda:0', dtype=torch.float64)
tensor([-2.5705, -4.2167, -4.1787, -5.0312, -4.8832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1226, device='cuda:0', dtype=torch.float64)
tensor([-2.5694, -4.2142, -4.1768, -5.0337, -4.8803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0362, device='cuda:0', dtype=torch.float64)
tensor([-2.5696, -4.2113, -4.1752, -5.0341, -4.8775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1019, device='cuda:0', dtype=torch.float64)
tensor([-2.5705, -4.2066, -4.1747, -5.0342, -4.8751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9880, device='cuda:0', dtype=torch.float64)
tensor([-2.5698, -4.2017, -4.1760, -5.0341, -4.8739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1894, device='cuda:0', dtype=torch.float64)
tensor([-2.5708, -4.1979, -4.1773, -5.0317, -4.8715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2279, device='cuda:0', dtype=torch.float64)
tensor([-2.5732, -4.1947, -4.1787, -5.0277, -4.8696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0014, device='cuda:0', dtype=torch.float64)
tensor([-2.5747, -4.1919, -4.1814, -5.0248, -4.8679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1547, device='cuda:0', dtype=torch.float64)
tensor([-2.5754, -4.1887, -4.1849, -5.0243, -4.8676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-2.5739, -4.1834, -4.1895, -5.0256, -4.8673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0517, device='cuda:0', dtype=torch.float64)
tensor([-2.5714, -4.1796, -4.1922, -5.0269, -4.8668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1616, device='cuda:0', dtype=torch.float64)
tensor([-2.5701, -4.1781, -4.1950, -5.0272, -4.8668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9561, device='cuda:0', dtype=torch.float64)
tensor([-2.5691, -4.1743, -4.1967, -5.0281, -4.8655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-2.5694, -4.1691, -4.1969, -5.0294, -4.8641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1036, device='cuda:0', dtype=torch.float64)
tensor([-2.5705, -4.1640, -4.1941, -5.0286, -4.8628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1593, device='cuda:0', dtype=torch.float64)
tensor([-2.5722, -4.1594, -4.1903, -5.0276, -4.8611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1003, device='cuda:0', dtype=torch.float64)
tensor([-2.5738, -4.1561, -4.1841, -5.0250, -4.8591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0979, device='cuda:0', dtype=torch.float64)
tensor([-2.5750, -4.1549, -4.1778, -5.0232, -4.8581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0866, device='cuda:0', dtype=torch.float64)
tensor([-2.5769, -4.1530, -4.1708, -5.0210, -4.8579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2072, device='cuda:0', dtype=torch.float64)
tensor([-2.5786, -4.1532, -4.1658, -5.0178, -4.8580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0762, device='cuda:0', dtype=torch.float64)
tensor([-2.5791, -4.1563, -4.1606, -5.0147, -4.8577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1181, device='cuda:0', dtype=torch.float64)
tensor([-2.5800, -4.1580, -4.1545, -5.0102, -4.8565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-2.5797, -4.1572, -4.1506, -5.0073, -4.8549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0567, device='cuda:0', dtype=torch.float64)
tensor([-2.5794, -4.1536, -4.1466, -5.0051, -4.8536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0760, device='cuda:0', dtype=torch.float64)
tensor([-2.5780, -4.1512, -4.1430, -5.0038, -4.8526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1463, device='cuda:0', dtype=torch.float64)
tensor([-2.5770, -4.1462, -4.1386, -5.0040, -4.8514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2071, device='cuda:0', dtype=torch.float64)
tensor([-2.5761, -4.1399, -4.1349, -5.0045, -4.8508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1986, device='cuda:0', dtype=torch.float64)
tensor([-2.5752, -4.1356, -4.1342, -5.0049, -4.8500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0752, device='cuda:0', dtype=torch.float64)
tensor([-2.5738, -4.1308, -4.1345, -5.0051, -4.8504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2165, device='cuda:0', dtype=torch.float64)
tensor([-2.5730, -4.1287, -4.1354, -5.0038, -4.8506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1214, device='cuda:0', dtype=torch.float64)
tensor([-2.5733, -4.1284, -4.1360, -5.0007, -4.8517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-2.5727, -4.1300, -4.1359, -4.9969, -4.8515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0971, device='cuda:0', dtype=torch.float64)
tensor([-2.5715, -4.1321, -4.1361, -4.9923, -4.8505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0135, device='cuda:0', dtype=torch.float64)
tensor([-2.5712, -4.1341, -4.1345, -4.9865, -4.8487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0823, device='cuda:0', dtype=torch.float64)
tensor([-2.5705, -4.1340, -4.1331, -4.9791, -4.8467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0876, device='cuda:0', dtype=torch.float64)
tensor([-2.5708, -4.1344, -4.1286, -4.9722, -4.8436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1036, device='cuda:0', dtype=torch.float64)
tensor([-2.5708, -4.1354, -4.1250, -4.9670, -4.8399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9530, device='cuda:0', dtype=torch.float64)
tensor([-2.5689, -4.1323, -4.1218, -4.9634, -4.8365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1481, device='cuda:0', dtype=torch.float64)
tensor([-2.5671, -4.1286, -4.1193, -4.9619, -4.8341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1547, device='cuda:0', dtype=torch.float64)
tensor([-2.5663, -4.1220, -4.1154, -4.9596, -4.8309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2708, device='cuda:0', dtype=torch.float64)
tensor([-2.5650, -4.1149, -4.1105, -4.9592, -4.8285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-2.5619, -4.1080, -4.1060, -4.9610, -4.8267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([-2.5592, -4.1019, -4.1015, -4.9652, -4.8251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0574, device='cuda:0', dtype=torch.float64)
tensor([-2.5571, -4.0965, -4.0964, -4.9677, -4.8239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1936, device='cuda:0', dtype=torch.float64)
tensor([-2.5564, -4.0947, -4.0917, -4.9713, -4.8244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9877, device='cuda:0', dtype=torch.float64)
tensor([-2.5559, -4.0946, -4.0888, -4.9755, -4.8247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2308, device='cuda:0', dtype=torch.float64)
tensor([-2.5568, -4.0963, -4.0863, -4.9770, -4.8250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-2.5580, -4.1001, -4.0857, -4.9791, -4.8237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-2.5603, -4.1023, -4.0844, -4.9788, -4.8225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1051, device='cuda:0', dtype=torch.float64)
tensor([-2.5622, -4.1047, -4.0841, -4.9773, -4.8231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-2.5633, -4.1048, -4.0843, -4.9771, -4.8246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-2.5662, -4.1054, -4.0848, -4.9756, -4.8235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1190, device='cuda:0', dtype=torch.float64)
tensor([-2.5693, -4.1039, -4.0846, -4.9749, -4.8209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0083, device='cuda:0', dtype=torch.float64)
tensor([-2.5723, -4.1002, -4.0867, -4.9739, -4.8171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0772, device='cuda:0', dtype=torch.float64)
tensor([-2.5753, -4.0972, -4.0866, -4.9732, -4.8116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1268, device='cuda:0', dtype=torch.float64)
tensor([-2.5778, -4.0943, -4.0865, -4.9731, -4.8050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-2.5777, -4.0928, -4.0867, -4.9731, -4.7972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0500, device='cuda:0', dtype=torch.float64)
tensor([-2.5763, -4.0913, -4.0866, -4.9740, -4.7895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0292, device='cuda:0', dtype=torch.float64)
tensor([-2.5723, -4.0914, -4.0860, -4.9763, -4.7817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1991, device='cuda:0', dtype=torch.float64)
tensor([-2.5673, -4.0900, -4.0855, -4.9786, -4.7768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1870, device='cuda:0', dtype=torch.float64)
tensor([-2.5606, -4.0861, -4.0843, -4.9787, -4.7736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1668, device='cuda:0', dtype=torch.float64)
tensor([-2.5539, -4.0793, -4.0818, -4.9814, -4.7722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0997, device='cuda:0', dtype=torch.float64)
tensor([-2.5466, -4.0737, -4.0782, -4.9825, -4.7721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0829, device='cuda:0', dtype=torch.float64)
tensor([-2.5399, -4.0701, -4.0737, -4.9826, -4.7716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1202, device='cuda:0', dtype=torch.float64)
tensor([-2.5338, -4.0672, -4.0702, -4.9808, -4.7703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8664, device='cuda:0', dtype=torch.float64)
tensor([-2.5285, -4.0645, -4.0655, -4.9768, -4.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0857, device='cuda:0', dtype=torch.float64)
tensor([-2.5253, -4.0593, -4.0607, -4.9712, -4.7722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-2.5229, -4.0570, -4.0579, -4.9655, -4.7728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0003, device='cuda:0', dtype=torch.float64)
tensor([-2.5226, -4.0553, -4.0542, -4.9580, -4.7753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-2.5228, -4.0501, -4.0502, -4.9512, -4.7793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-2.5221, -4.0477, -4.0475, -4.9451, -4.7843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0519, device='cuda:0', dtype=torch.float64)
tensor([-2.5222, -4.0488, -4.0450, -4.9381, -4.7883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-2.5223, -4.0522, -4.0436, -4.9321, -4.7937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0528, device='cuda:0', dtype=torch.float64)
tensor([-2.5233, -4.0542, -4.0430, -4.9263, -4.7981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0050, device='cuda:0', dtype=torch.float64)
tensor([-2.5256, -4.0576, -4.0416, -4.9200, -4.8010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0057, device='cuda:0', dtype=torch.float64)
tensor([-2.5277, -4.0605, -4.0423, -4.9145, -4.8023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1062, device='cuda:0', dtype=torch.float64)
tensor([-2.5282, -4.0596, -4.0430, -4.9109, -4.8020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0830, device='cuda:0', dtype=torch.float64)
tensor([-2.5292, -4.0588, -4.0441, -4.9089, -4.8013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2287, device='cuda:0', dtype=torch.float64)
tensor([-2.5309, -4.0561, -4.0447, -4.9110, -4.7985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0242, device='cuda:0', dtype=torch.float64)
tensor([-2.5329, -4.0540, -4.0468, -4.9134, -4.7943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2486, device='cuda:0', dtype=torch.float64)
tensor([-2.5361, -4.0522, -4.0489, -4.9161, -4.7877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0871, device='cuda:0', dtype=torch.float64)
tensor([-2.5387, -4.0491, -4.0502, -4.9195, -4.7824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-2.5409, -4.0460, -4.0501, -4.9208, -4.7775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1112, device='cuda:0', dtype=torch.float64)
tensor([-2.5428, -4.0435, -4.0479, -4.9217, -4.7712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1794, device='cuda:0', dtype=torch.float64)
tensor([-2.5420, -4.0396, -4.0467, -4.9256, -4.7654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0612, device='cuda:0', dtype=torch.float64)
tensor([-2.5394, -4.0359, -4.0425, -4.9277, -4.7589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9898, device='cuda:0', dtype=torch.float64)
tensor([-2.5350, -4.0323, -4.0374, -4.9283, -4.7538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0789, device='cuda:0', dtype=torch.float64)
tensor([-2.5317, -4.0305, -4.0323, -4.9251, -4.7487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0741, device='cuda:0', dtype=torch.float64)
tensor([-2.5299, -4.0287, -4.0265, -4.9185, -4.7452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1851, device='cuda:0', dtype=torch.float64)
tensor([-2.5282, -4.0286, -4.0224, -4.9122, -4.7431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1116, device='cuda:0', dtype=torch.float64)
tensor([-2.5260, -4.0297, -4.0215, -4.9073, -4.7411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0139, device='cuda:0', dtype=torch.float64)
tensor([-2.5228, -4.0309, -4.0226, -4.9062, -4.7384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1009, device='cuda:0', dtype=torch.float64)
tensor([-2.5207, -4.0357, -4.0262, -4.9068, -4.7370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0431, device='cuda:0', dtype=torch.float64)
tensor([-2.5193, -4.0412, -4.0310, -4.9059, -4.7361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0590, device='cuda:0', dtype=torch.float64)
tensor([-2.5181, -4.0464, -4.0363, -4.9060, -4.7349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1165, device='cuda:0', dtype=torch.float64)
tensor([-2.5182, -4.0509, -4.0406, -4.9055, -4.7345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-2.5184, -4.0530, -4.0435, -4.9066, -4.7350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0503, device='cuda:0', dtype=torch.float64)
tensor([-2.5183, -4.0554, -4.0470, -4.9084, -4.7341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([-2.5184, -4.0573, -4.0501, -4.9113, -4.7350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-2.5198, -4.0572, -4.0504, -4.9117, -4.7363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1864, device='cuda:0', dtype=torch.float64)
tensor([-2.5207, -4.0567, -4.0509, -4.9113, -4.7373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2355, device='cuda:0', dtype=torch.float64)
tensor([-2.5211, -4.0567, -4.0496, -4.9101, -4.7368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2640, device='cuda:0', dtype=torch.float64)
tensor([-2.5220, -4.0531, -4.0459, -4.9094, -4.7372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1768, device='cuda:0', dtype=torch.float64)
tensor([-2.5233, -4.0483, -4.0430, -4.9095, -4.7371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-2.5233, -4.0419, -4.0367, -4.9099, -4.7378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0722, device='cuda:0', dtype=torch.float64)
tensor([-2.5226, -4.0350, -4.0290, -4.9095, -4.7378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1088, device='cuda:0', dtype=torch.float64)
tensor([-2.5196, -4.0287, -4.0215, -4.9094, -4.7369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0630, device='cuda:0', dtype=torch.float64)
tensor([-2.5163, -4.0228, -4.0133, -4.9078, -4.7355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0119, device='cuda:0', dtype=torch.float64)
tensor([-2.5139, -4.0210, -4.0049, -4.9052, -4.7335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2027, device='cuda:0', dtype=torch.float64)
tensor([-2.5122, -4.0187, -3.9971, -4.9011, -4.7321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2316, device='cuda:0', dtype=torch.float64)
tensor([-2.5110, -4.0170, -3.9886, -4.8988, -4.7312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9937, device='cuda:0', dtype=torch.float64)
tensor([-2.5099, -4.0133, -3.9818, -4.8953, -4.7299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0329, device='cuda:0', dtype=torch.float64)
tensor([-2.5074, -4.0120, -3.9766, -4.8934, -4.7287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-2.5052, -4.0117, -3.9746, -4.8930, -4.7258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-2.5037, -4.0119, -3.9738, -4.8931, -4.7231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0820, device='cuda:0', dtype=torch.float64)
tensor([-2.5023, -4.0111, -3.9732, -4.8935, -4.7234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0460, device='cuda:0', dtype=torch.float64)
tensor([-2.5004, -4.0111, -3.9757, -4.8953, -4.7231], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0836, device='cuda:0', dtype=torch.float64)
tensor([-2.4983, -4.0112, -3.9785, -4.8971, -4.7227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0753, device='cuda:0', dtype=torch.float64)
tensor([-2.4949, -4.0106, -3.9815, -4.9007, -4.7215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1884, device='cuda:0', dtype=torch.float64)
tensor([-2.4918, -4.0091, -3.9857, -4.9043, -4.7200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0392, device='cuda:0', dtype=torch.float64)
tensor([-2.4895, -4.0058, -3.9874, -4.9038, -4.7171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-2.4883, -4.0000, -3.9881, -4.9048, -4.7142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0573, device='cuda:0', dtype=torch.float64)
tensor([-2.4882, -3.9952, -3.9883, -4.9052, -4.7105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-2.4898, -3.9891, -3.9909, -4.9074, -4.7063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2537, device='cuda:0', dtype=torch.float64)
tensor([-2.4912, -3.9840, -3.9937, -4.9090, -4.7033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9902, device='cuda:0', dtype=torch.float64)
tensor([-2.4931, -3.9808, -3.9954, -4.9099, -4.6980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9448, device='cuda:0', dtype=torch.float64)
tensor([-2.4930, -3.9800, -3.9971, -4.9120, -4.6923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1379, device='cuda:0', dtype=torch.float64)
tensor([-2.4929, -3.9813, -4.0002, -4.9148, -4.6872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2172, device='cuda:0', dtype=torch.float64)
tensor([-2.4923, -3.9841, -4.0021, -4.9143, -4.6830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0407, device='cuda:0', dtype=torch.float64)
tensor([-2.4918, -3.9877, -4.0040, -4.9130, -4.6788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([-2.4917, -3.9888, -4.0044, -4.9121, -4.6751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-2.4918, -3.9892, -4.0032, -4.9090, -4.6734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0329, device='cuda:0', dtype=torch.float64)
tensor([-2.4902, -3.9891, -4.0035, -4.9073, -4.6722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0769, device='cuda:0', dtype=torch.float64)
tensor([-2.4884, -3.9859, -4.0027, -4.9084, -4.6712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0171, device='cuda:0', dtype=torch.float64)
tensor([-2.4864, -3.9816, -4.0006, -4.9087, -4.6683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0142, device='cuda:0', dtype=torch.float64)
tensor([-2.4850, -3.9784, -3.9968, -4.9087, -4.6665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0168, device='cuda:0', dtype=torch.float64)
tensor([-2.4841, -3.9756, -3.9939, -4.9079, -4.6641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([-2.4843, -3.9726, -3.9904, -4.9060, -4.6603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1250, device='cuda:0', dtype=torch.float64)
tensor([-2.4867, -3.9718, -3.9863, -4.9034, -4.6575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0999, device='cuda:0', dtype=torch.float64)
tensor([-2.4883, -3.9699, -3.9821, -4.9013, -4.6565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1850, device='cuda:0', dtype=torch.float64)
tensor([-2.4913, -3.9673, -3.9785, -4.8989, -4.6556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1313, device='cuda:0', dtype=torch.float64)
tensor([-2.4944, -3.9662, -3.9747, -4.8961, -4.6539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9660, device='cuda:0', dtype=torch.float64)
tensor([-2.4969, -3.9645, -3.9710, -4.8936, -4.6510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1224, device='cuda:0', dtype=torch.float64)
tensor([-2.4991, -3.9668, -3.9698, -4.8905, -4.6490], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1558, device='cuda:0', dtype=torch.float64)
tensor([-2.5034, -3.9671, -3.9662, -4.8855, -4.6452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0625, device='cuda:0', dtype=torch.float64)
tensor([-2.5054, -3.9655, -3.9649, -4.8825, -4.6397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9861, device='cuda:0', dtype=torch.float64)
tensor([-2.5049, -3.9621, -3.9646, -4.8826, -4.6331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9443, device='cuda:0', dtype=torch.float64)
tensor([-2.5027, -3.9593, -3.9635, -4.8832, -4.6266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0933, device='cuda:0', dtype=torch.float64)
tensor([-2.5008, -3.9566, -3.9629, -4.8845, -4.6209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1381, device='cuda:0', dtype=torch.float64)
tensor([-2.4984, -3.9551, -3.9612, -4.8842, -4.6162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0699, device='cuda:0', dtype=torch.float64)
tensor([-2.4949, -3.9549, -3.9603, -4.8816, -4.6105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1495, device='cuda:0', dtype=torch.float64)
tensor([-2.4916, -3.9568, -3.9588, -4.8781, -4.6051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([-2.4889, -3.9621, -3.9595, -4.8754, -4.6010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0523, device='cuda:0', dtype=torch.float64)
tensor([-2.4848, -3.9667, -3.9598, -4.8725, -4.5986], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1385, device='cuda:0', dtype=torch.float64)
tensor([-2.4808, -3.9717, -3.9598, -4.8709, -4.5971], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-2.4787, -3.9756, -3.9593, -4.8684, -4.5959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0841, device='cuda:0', dtype=torch.float64)
tensor([-2.4790, -3.9784, -3.9558, -4.8647, -4.5992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0600, device='cuda:0', dtype=torch.float64)
tensor([-2.4810, -3.9802, -3.9507, -4.8608, -4.6044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1280, device='cuda:0', dtype=torch.float64)
tensor([-2.4826, -3.9780, -3.9457, -4.8576, -4.6101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2468, device='cuda:0', dtype=torch.float64)
tensor([-2.4860, -3.9745, -3.9423, -4.8531, -4.6132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0994, device='cuda:0', dtype=torch.float64)
tensor([-2.4896, -3.9710, -3.9407, -4.8493, -4.6154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-2.4931, -3.9657, -3.9374, -4.8470, -4.6175], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1934, device='cuda:0', dtype=torch.float64)
tensor([-2.4971, -3.9607, -3.9352, -4.8454, -4.6191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1010, device='cuda:0', dtype=torch.float64)
tensor([-2.5023, -3.9577, -3.9331, -4.8450, -4.6219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2698, device='cuda:0', dtype=torch.float64)
tensor([-2.5067, -3.9532, -3.9326, -4.8452, -4.6214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0912, device='cuda:0', dtype=torch.float64)
tensor([-2.5100, -3.9491, -3.9307, -4.8452, -4.6200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1303, device='cuda:0', dtype=torch.float64)
tensor([-2.5108, -3.9437, -3.9282, -4.8470, -4.6165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0690, device='cuda:0', dtype=torch.float64)
tensor([-2.5118, -3.9398, -3.9261, -4.8470, -4.6127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0762, device='cuda:0', dtype=torch.float64)
tensor([-2.5128, -3.9392, -3.9235, -4.8463, -4.6096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1769, device='cuda:0', dtype=torch.float64)
tensor([-2.5125, -3.9409, -3.9217, -4.8470, -4.6076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2497, device='cuda:0', dtype=torch.float64)
tensor([-2.5113, -3.9410, -3.9217, -4.8508, -4.6074], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9444, device='cuda:0', dtype=torch.float64)
tensor([-2.5099, -3.9408, -3.9211, -4.8528, -4.6067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0865, device='cuda:0', dtype=torch.float64)
tensor([-2.5094, -3.9403, -3.9190, -4.8492, -4.6057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0337, device='cuda:0', dtype=torch.float64)
tensor([-2.5088, -3.9405, -3.9187, -4.8443, -4.6042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0631, device='cuda:0', dtype=torch.float64)
tensor([-2.5090, -3.9410, -3.9188, -4.8395, -4.6040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2018, device='cuda:0', dtype=torch.float64)
tensor([-2.5096, -3.9409, -3.9196, -4.8356, -4.6033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0629, device='cuda:0', dtype=torch.float64)
tensor([-2.5098, -3.9403, -3.9189, -4.8309, -4.6027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0027, device='cuda:0', dtype=torch.float64)
tensor([-2.5081, -3.9376, -3.9160, -4.8287, -4.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9360, device='cuda:0', dtype=torch.float64)
tensor([-2.5041, -3.9343, -3.9148, -4.8279, -4.6037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1705, device='cuda:0', dtype=torch.float64)
tensor([-2.5008, -3.9336, -3.9150, -4.8263, -4.6020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0560, device='cuda:0', dtype=torch.float64)
tensor([-2.4985, -3.9287, -3.9172, -4.8268, -4.6001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0405, device='cuda:0', dtype=torch.float64)
tensor([-2.4961, -3.9243, -3.9197, -4.8262, -4.5990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1014, device='cuda:0', dtype=torch.float64)
tensor([-2.4925, -3.9210, -3.9233, -4.8269, -4.5984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-2.4887, -3.9155, -3.9256, -4.8289, -4.5966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1535, device='cuda:0', dtype=torch.float64)
tensor([-2.4849, -3.9076, -3.9310, -4.8325, -4.5934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0228, device='cuda:0', dtype=torch.float64)
tensor([-2.4824, -3.8997, -3.9356, -4.8348, -4.5908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-2.4792, -3.8925, -3.9392, -4.8335, -4.5875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1377, device='cuda:0', dtype=torch.float64)
tensor([-2.4773, -3.8873, -3.9419, -4.8282, -4.5832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0332, device='cuda:0', dtype=torch.float64)
tensor([-2.4752, -3.8846, -3.9441, -4.8242, -4.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2505, device='cuda:0', dtype=torch.float64)
tensor([-2.4729, -3.8831, -3.9427, -4.8199, -4.5752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9251, device='cuda:0', dtype=torch.float64)
tensor([-2.4723, -3.8828, -3.9426, -4.8163, -4.5719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0683, device='cuda:0', dtype=torch.float64)
tensor([-2.4711, -3.8840, -3.9407, -4.8109, -4.5690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3225, device='cuda:0', dtype=torch.float64)
tensor([-2.4711, -3.8881, -3.9382, -4.8051, -4.5680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0998, device='cuda:0', dtype=torch.float64)
tensor([-2.4707, -3.8948, -3.9378, -4.8003, -4.5668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1209, device='cuda:0', dtype=torch.float64)
tensor([-2.4720, -3.9018, -3.9373, -4.7952, -4.5655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1317, device='cuda:0', dtype=torch.float64)
tensor([-2.4723, -3.9105, -3.9356, -4.7931, -4.5665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9406, device='cuda:0', dtype=torch.float64)
tensor([-2.4717, -3.9187, -3.9341, -4.7923, -4.5682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1980, device='cuda:0', dtype=torch.float64)
tensor([-2.4703, -3.9254, -3.9340, -4.7938, -4.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9643, device='cuda:0', dtype=torch.float64)
tensor([-2.4678, -3.9294, -3.9308, -4.7946, -4.5724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0163, device='cuda:0', dtype=torch.float64)
tensor([-2.4651, -3.9293, -3.9265, -4.7961, -4.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9955, device='cuda:0', dtype=torch.float64)
tensor([-2.4614, -3.9267, -3.9241, -4.7987, -4.5746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0323, device='cuda:0', dtype=torch.float64)
tensor([-2.4602, -3.9207, -3.9241, -4.8004, -4.5746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1190, device='cuda:0', dtype=torch.float64)
tensor([-2.4590, -3.9141, -3.9239, -4.8034, -4.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2320, device='cuda:0', dtype=torch.float64)
tensor([-2.4587, -3.9078, -3.9235, -4.8055, -4.5740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0819, device='cuda:0', dtype=torch.float64)
tensor([-2.4572, -3.9006, -3.9242, -4.8089, -4.5734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1824, device='cuda:0', dtype=torch.float64)
tensor([-2.4570, -3.8935, -3.9231, -4.8139, -4.5750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0755, device='cuda:0', dtype=torch.float64)
tensor([-2.4571, -3.8847, -3.9220, -4.8174, -4.5747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1448, device='cuda:0', dtype=torch.float64)
tensor([-2.4581, -3.8745, -3.9189, -4.8181, -4.5750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0926, device='cuda:0', dtype=torch.float64)
tensor([-2.4581, -3.8672, -3.9168, -4.8191, -4.5731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1282, device='cuda:0', dtype=torch.float64)
tensor([-2.4593, -3.8607, -3.9140, -4.8180, -4.5718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0682, device='cuda:0', dtype=torch.float64)
tensor([-2.4596, -3.8570, -3.9109, -4.8145, -4.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0571, device='cuda:0', dtype=torch.float64)
tensor([-2.4596, -3.8553, -3.9086, -4.8107, -4.5713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1297, device='cuda:0', dtype=torch.float64)
tensor([-2.4598, -3.8562, -3.9051, -4.8037, -4.5723], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9808, device='cuda:0', dtype=torch.float64)
tensor([-2.4602, -3.8585, -3.9008, -4.7965, -4.5737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1114, device='cuda:0', dtype=torch.float64)
tensor([-2.4606, -3.8628, -3.8975, -4.7904, -4.5735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-2.4598, -3.8673, -3.8946, -4.7844, -4.5736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9457, device='cuda:0', dtype=torch.float64)
tensor([-2.4567, -3.8747, -3.8936, -4.7802, -4.5725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([-2.4543, -3.8834, -3.8939, -4.7749, -4.5720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0790, device='cuda:0', dtype=torch.float64)
tensor([-2.4525, -3.8920, -3.8923, -4.7695, -4.5710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0785, device='cuda:0', dtype=torch.float64)
tensor([-2.4518, -3.8964, -3.8880, -4.7645, -4.5716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1070, device='cuda:0', dtype=torch.float64)
tensor([-2.4511, -3.8994, -3.8839, -4.7579, -4.5712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1831, device='cuda:0', dtype=torch.float64)
tensor([-2.4501, -3.8988, -3.8804, -4.7536, -4.5700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0478, device='cuda:0', dtype=torch.float64)
tensor([-2.4497, -3.8975, -3.8777, -4.7505, -4.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9898, device='cuda:0', dtype=torch.float64)
tensor([-2.4487, -3.8967, -3.8728, -4.7453, -4.5702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0762, device='cuda:0', dtype=torch.float64)
tensor([-2.4500, -3.8919, -3.8663, -4.7384, -4.5702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0657, device='cuda:0', dtype=torch.float64)
tensor([-2.4509, -3.8871, -3.8585, -4.7311, -4.5707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-2.4519, -3.8869, -3.8535, -4.7257, -4.5707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0992, device='cuda:0', dtype=torch.float64)
tensor([-2.4534, -3.8900, -3.8481, -4.7184, -4.5719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1423, device='cuda:0', dtype=torch.float64)
tensor([-2.4543, -3.8934, -3.8461, -4.7122, -4.5744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1407, device='cuda:0', dtype=torch.float64)
tensor([-2.4571, -3.8970, -3.8465, -4.7077, -4.5753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9555, device='cuda:0', dtype=torch.float64)
tensor([-2.4582, -3.9020, -3.8483, -4.7076, -4.5775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9625, device='cuda:0', dtype=torch.float64)
tensor([-2.4598, -3.9044, -3.8515, -4.7113, -4.5781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1492, device='cuda:0', dtype=torch.float64)
tensor([-2.4606, -3.9056, -3.8549, -4.7150, -4.5797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0085, device='cuda:0', dtype=torch.float64)
tensor([-2.4619, -3.9045, -3.8576, -4.7219, -4.5821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-2.4634, -3.8996, -3.8608, -4.7293, -4.5830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0140, device='cuda:0', dtype=torch.float64)
tensor([-2.4654, -3.8899, -3.8628, -4.7396, -4.5833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9936, device='cuda:0', dtype=torch.float64)
tensor([-2.4666, -3.8809, -3.8652, -4.7490, -4.5812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1319, device='cuda:0', dtype=torch.float64)
tensor([-2.4672, -3.8731, -3.8681, -4.7564, -4.5793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0087, device='cuda:0', dtype=torch.float64)
tensor([-2.4651, -3.8664, -3.8681, -4.7601, -4.5767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0746, device='cuda:0', dtype=torch.float64)
tensor([-2.4619, -3.8598, -3.8685, -4.7631, -4.5726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0849, device='cuda:0', dtype=torch.float64)
tensor([-2.4590, -3.8527, -3.8658, -4.7637, -4.5696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1155, device='cuda:0', dtype=torch.float64)
tensor([-2.4558, -3.8449, -3.8595, -4.7604, -4.5663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0910, device='cuda:0', dtype=torch.float64)
tensor([-2.4529, -3.8376, -3.8521, -4.7542, -4.5623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3242, device='cuda:0', dtype=torch.float64)
tensor([-2.4506, -3.8325, -3.8462, -4.7489, -4.5570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0810, device='cuda:0', dtype=torch.float64)
tensor([-2.4502, -3.8276, -3.8395, -4.7435, -4.5531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1563, device='cuda:0', dtype=torch.float64)
tensor([-2.4501, -3.8252, -3.8366, -4.7426, -4.5499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0378, device='cuda:0', dtype=torch.float64)
tensor([-2.4492, -3.8236, -3.8349, -4.7408, -4.5469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9292, device='cuda:0', dtype=torch.float64)
tensor([-2.4485, -3.8238, -3.8348, -4.7400, -4.5434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0875, device='cuda:0', dtype=torch.float64)
tensor([-2.4479, -3.8261, -3.8350, -4.7379, -4.5411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0409, device='cuda:0', dtype=torch.float64)
tensor([-2.4463, -3.8309, -3.8351, -4.7354, -4.5363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9321, device='cuda:0', dtype=torch.float64)
tensor([-2.4437, -3.8371, -3.8381, -4.7374, -4.5305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-2.4403, -3.8441, -3.8439, -4.7429, -4.5248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1766, device='cuda:0', dtype=torch.float64)
tensor([-2.4357, -3.8494, -3.8503, -4.7497, -4.5189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1577, device='cuda:0', dtype=torch.float64)
tensor([-2.4313, -3.8534, -3.8562, -4.7519, -4.5128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1509, device='cuda:0', dtype=torch.float64)
tensor([-2.4276, -3.8566, -3.8597, -4.7544, -4.5091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0660, device='cuda:0', dtype=torch.float64)
tensor([-2.4249, -3.8561, -3.8602, -4.7556, -4.5079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0865, device='cuda:0', dtype=torch.float64)
tensor([-2.4246, -3.8539, -3.8561, -4.7542, -4.5105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1012, device='cuda:0', dtype=torch.float64)
tensor([-2.4259, -3.8475, -3.8498, -4.7483, -4.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([-2.4285, -3.8426, -3.8437, -4.7423, -4.5180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0372, device='cuda:0', dtype=torch.float64)
tensor([-2.4308, -3.8371, -3.8362, -4.7368, -4.5218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0756, device='cuda:0', dtype=torch.float64)
tensor([-2.4329, -3.8324, -3.8289, -4.7293, -4.5253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1809, device='cuda:0', dtype=torch.float64)
tensor([-2.4378, -3.8293, -3.8224, -4.7204, -4.5300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-2.4435, -3.8266, -3.8176, -4.7131, -4.5347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0407, device='cuda:0', dtype=torch.float64)
tensor([-2.4504, -3.8190, -3.8124, -4.7078, -4.5390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9582, device='cuda:0', dtype=torch.float64)
tensor([-2.4541, -3.8135, -3.8081, -4.7041, -4.5434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0276, device='cuda:0', dtype=torch.float64)
tensor([-2.4554, -3.8076, -3.8070, -4.7042, -4.5461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1119, device='cuda:0', dtype=torch.float64)
tensor([-2.4563, -3.8048, -3.8072, -4.7040, -4.5480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1460, device='cuda:0', dtype=torch.float64)
tensor([-2.4573, -3.8031, -3.8089, -4.7046, -4.5470], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0959, device='cuda:0', dtype=torch.float64)
tensor([-2.4560, -3.8026, -3.8126, -4.7060, -4.5439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1817, device='cuda:0', dtype=torch.float64)
tensor([-2.4549, -3.7999, -3.8153, -4.7090, -4.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9867, device='cuda:0', dtype=torch.float64)
tensor([-2.4536, -3.7970, -3.8185, -4.7122, -4.5334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1183, device='cuda:0', dtype=torch.float64)
tensor([-2.4523, -3.7945, -3.8210, -4.7158, -4.5286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1213, device='cuda:0', dtype=torch.float64)
tensor([-2.4500, -3.7932, -3.8221, -4.7168, -4.5242], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9840, device='cuda:0', dtype=torch.float64)
tensor([-2.4475, -3.7936, -3.8231, -4.7184, -4.5205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0713, device='cuda:0', dtype=torch.float64)
tensor([-2.4455, -3.7978, -3.8243, -4.7167, -4.5165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0791, device='cuda:0', dtype=torch.float64)
tensor([-2.4425, -3.8025, -3.8234, -4.7179, -4.5149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-2.4396, -3.8057, -3.8209, -4.7183, -4.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0747, device='cuda:0', dtype=torch.float64)
tensor([-2.4365, -3.8083, -3.8195, -4.7195, -4.5082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0467, device='cuda:0', dtype=torch.float64)
tensor([-2.4357, -3.8088, -3.8174, -4.7193, -4.5042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0327, device='cuda:0', dtype=torch.float64)
tensor([-2.4359, -3.8126, -3.8163, -4.7168, -4.5033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9326, device='cuda:0', dtype=torch.float64)
tensor([-2.4348, -3.8112, -3.8148, -4.7165, -4.5025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9052, device='cuda:0', dtype=torch.float64)
tensor([-2.4341, -3.8076, -3.8140, -4.7173, -4.5016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9667, device='cuda:0', dtype=torch.float64)
tensor([-2.4324, -3.8036, -3.8148, -4.7186, -4.5003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0209, device='cuda:0', dtype=torch.float64)
tensor([-2.4288, -3.8000, -3.8185, -4.7219, -4.4984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0129, device='cuda:0', dtype=torch.float64)
tensor([-2.4255, -3.7963, -3.8213, -4.7222, -4.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0064, device='cuda:0', dtype=torch.float64)
tensor([-2.4224, -3.7941, -3.8266, -4.7201, -4.4974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9025, device='cuda:0', dtype=torch.float64)
tensor([-2.4187, -3.7894, -3.8313, -4.7207, -4.4973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1044, device='cuda:0', dtype=torch.float64)
tensor([-2.4172, -3.7838, -3.8342, -4.7174, -4.4983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([-2.4185, -3.7769, -3.8337, -4.7126, -4.5005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-2.4199, -3.7707, -3.8328, -4.7070, -4.5013], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-2.4234, -3.7655, -3.8299, -4.6991, -4.5012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1231, device='cuda:0', dtype=torch.float64)
tensor([-2.4274, -3.7622, -3.8256, -4.6896, -4.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-2.4309, -3.7611, -3.8187, -4.6776, -4.4951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0725, device='cuda:0', dtype=torch.float64)
tensor([-2.4343, -3.7623, -3.8137, -4.6664, -4.4916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0472, device='cuda:0', dtype=torch.float64)
tensor([-2.4363, -3.7625, -3.8094, -4.6570, -4.4876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0196, device='cuda:0', dtype=torch.float64)
tensor([-2.4379, -3.7641, -3.8054, -4.6491, -4.4857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0158, device='cuda:0', dtype=torch.float64)
tensor([-2.4378, -3.7633, -3.8009, -4.6421, -4.4847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1204, device='cuda:0', dtype=torch.float64)
tensor([-2.4368, -3.7608, -3.7981, -4.6332, -4.4842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1373, device='cuda:0', dtype=torch.float64)
tensor([-2.4351, -3.7574, -3.7979, -4.6268, -4.4844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1511, device='cuda:0', dtype=torch.float64)
tensor([-2.4319, -3.7525, -3.7985, -4.6211, -4.4853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9579, device='cuda:0', dtype=torch.float64)
tensor([-2.4283, -3.7472, -3.7993, -4.6194, -4.4868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-2.4238, -3.7424, -3.7977, -4.6213, -4.4870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0927, device='cuda:0', dtype=torch.float64)
tensor([-2.4197, -3.7350, -3.7954, -4.6252, -4.4884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1353, device='cuda:0', dtype=torch.float64)
tensor([-2.4146, -3.7296, -3.7929, -4.6341, -4.4889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0899, device='cuda:0', dtype=torch.float64)
tensor([-2.4093, -3.7262, -3.7892, -4.6438, -4.4894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1607, device='cuda:0', dtype=torch.float64)
tensor([-2.4053, -3.7227, -3.7837, -4.6539, -4.4903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([-2.4048, -3.7237, -3.7802, -4.6638, -4.4897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0075, device='cuda:0', dtype=torch.float64)
tensor([-2.4061, -3.7259, -3.7748, -4.6704, -4.4869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0550, device='cuda:0', dtype=torch.float64)
tensor([-2.4079, -3.7291, -3.7707, -4.6748, -4.4838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1571, device='cuda:0', dtype=torch.float64)
tensor([-2.4124, -3.7311, -3.7684, -4.6802, -4.4786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9945, device='cuda:0', dtype=torch.float64)
tensor([-2.4162, -3.7344, -3.7686, -4.6837, -4.4741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0756, device='cuda:0', dtype=torch.float64)
tensor([-2.4214, -3.7382, -3.7684, -4.6851, -4.4702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0840, device='cuda:0', dtype=torch.float64)
tensor([-2.4268, -3.7410, -3.7674, -4.6838, -4.4669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1978, device='cuda:0', dtype=torch.float64)
tensor([-2.4325, -3.7443, -3.7680, -4.6852, -4.4626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0369, device='cuda:0', dtype=torch.float64)
tensor([-2.4365, -3.7462, -3.7690, -4.6875, -4.4609], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0093, device='cuda:0', dtype=torch.float64)
tensor([-2.4380, -3.7483, -3.7694, -4.6868, -4.4593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0209, device='cuda:0', dtype=torch.float64)
tensor([-2.4377, -3.7496, -3.7695, -4.6864, -4.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-2.4348, -3.7534, -3.7715, -4.6886, -4.4581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0976, device='cuda:0', dtype=torch.float64)
tensor([-2.4324, -3.7579, -3.7727, -4.6848, -4.4576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2746, device='cuda:0', dtype=torch.float64)
tensor([-2.4293, -3.7635, -3.7744, -4.6796, -4.4580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9789, device='cuda:0', dtype=torch.float64)
tensor([-2.4267, -3.7676, -3.7750, -4.6743, -4.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1171, device='cuda:0', dtype=torch.float64)
tensor([-2.4260, -3.7698, -3.7762, -4.6712, -4.4586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1130, device='cuda:0', dtype=torch.float64)
tensor([-2.4244, -3.7701, -3.7785, -4.6688, -4.4574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0816, device='cuda:0', dtype=torch.float64)
tensor([-2.4233, -3.7695, -3.7809, -4.6653, -4.4547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0326, device='cuda:0', dtype=torch.float64)
tensor([-2.4233, -3.7654, -3.7828, -4.6613, -4.4529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0855, device='cuda:0', dtype=torch.float64)
tensor([-2.4237, -3.7624, -3.7811, -4.6554, -4.4504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1293, device='cuda:0', dtype=torch.float64)
tensor([-2.4230, -3.7611, -3.7787, -4.6506, -4.4491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2095, device='cuda:0', dtype=torch.float64)
tensor([-2.4211, -3.7581, -3.7758, -4.6466, -4.4465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-2.4198, -3.7570, -3.7716, -4.6414, -4.4421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-2.4205, -3.7559, -3.7654, -4.6378, -4.4398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9983, device='cuda:0', dtype=torch.float64)
tensor([-2.4208, -3.7518, -3.7594, -4.6341, -4.4386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0139, device='cuda:0', dtype=torch.float64)
tensor([-2.4217, -3.7473, -3.7521, -4.6298, -4.4381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0845, device='cuda:0', dtype=torch.float64)
tensor([-2.4235, -3.7449, -3.7454, -4.6258, -4.4401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0043, device='cuda:0', dtype=torch.float64)
tensor([-2.4237, -3.7436, -3.7409, -4.6234, -4.4408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9617, device='cuda:0', dtype=torch.float64)
tensor([-2.4222, -3.7410, -3.7348, -4.6239, -4.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-2.4210, -3.7378, -3.7291, -4.6232, -4.4409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1117, device='cuda:0', dtype=torch.float64)
tensor([-2.4201, -3.7328, -3.7263, -4.6230, -4.4411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9083, device='cuda:0', dtype=torch.float64)
tensor([-2.4189, -3.7286, -3.7244, -4.6234, -4.4406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1945, device='cuda:0', dtype=torch.float64)
tensor([-2.4181, -3.7254, -3.7232, -4.6252, -4.4417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9725, device='cuda:0', dtype=torch.float64)
tensor([-2.4170, -3.7220, -3.7207, -4.6290, -4.4420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9671, device='cuda:0', dtype=torch.float64)
tensor([-2.4152, -3.7169, -3.7178, -4.6314, -4.4427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0141, device='cuda:0', dtype=torch.float64)
tensor([-2.4127, -3.7124, -3.7168, -4.6336, -4.4432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0468, device='cuda:0', dtype=torch.float64)
tensor([-2.4117, -3.7094, -3.7164, -4.6344, -4.4446], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0290, device='cuda:0', dtype=torch.float64)
tensor([-2.4112, -3.7060, -3.7188, -4.6350, -4.4441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0118, device='cuda:0', dtype=torch.float64)
tensor([-2.4099, -3.7044, -3.7217, -4.6367, -4.4424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0706, device='cuda:0', dtype=torch.float64)
tensor([-2.4081, -3.7038, -3.7250, -4.6355, -4.4405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0790, device='cuda:0', dtype=torch.float64)
tensor([-2.4077, -3.7008, -3.7266, -4.6333, -4.4389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0178, device='cuda:0', dtype=torch.float64)
tensor([-2.4073, -3.6997, -3.7271, -4.6314, -4.4376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1106, device='cuda:0', dtype=torch.float64)
tensor([-2.4051, -3.6994, -3.7285, -4.6285, -4.4350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1339, device='cuda:0', dtype=torch.float64)
tensor([-2.4029, -3.7028, -3.7300, -4.6248, -4.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0238, device='cuda:0', dtype=torch.float64)
tensor([-2.3990, -3.7077, -3.7302, -4.6216, -4.4318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1931, device='cuda:0', dtype=torch.float64)
tensor([-2.3962, -3.7154, -3.7278, -4.6154, -4.4315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9853, device='cuda:0', dtype=torch.float64)
tensor([-2.3940, -3.7213, -3.7264, -4.6096, -4.4310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1260, device='cuda:0', dtype=torch.float64)
tensor([-2.3922, -3.7292, -3.7235, -4.6034, -4.4314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1403, device='cuda:0', dtype=torch.float64)
tensor([-2.3889, -3.7372, -3.7197, -4.6043, -4.4329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0906, device='cuda:0', dtype=torch.float64)
tensor([-2.3862, -3.7460, -3.7174, -4.6055, -4.4344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-2.3850, -3.7544, -3.7152, -4.6050, -4.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0360, device='cuda:0', dtype=torch.float64)
tensor([-2.3839, -3.7593, -3.7141, -4.6064, -4.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1344, device='cuda:0', dtype=torch.float64)
tensor([-2.3834, -3.7629, -3.7120, -4.6077, -4.4356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0534, device='cuda:0', dtype=torch.float64)
tensor([-2.3859, -3.7626, -3.7096, -4.6075, -4.4357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1086, device='cuda:0', dtype=torch.float64)
tensor([-2.3883, -3.7591, -3.7080, -4.6071, -4.4350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1708, device='cuda:0', dtype=torch.float64)
tensor([-2.3902, -3.7523, -3.7086, -4.6086, -4.4343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9049, device='cuda:0', dtype=torch.float64)
tensor([-2.3911, -3.7443, -3.7092, -4.6110, -4.4341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1093, device='cuda:0', dtype=torch.float64)
tensor([-2.3908, -3.7346, -3.7120, -4.6148, -4.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0877, device='cuda:0', dtype=torch.float64)
tensor([-2.3909, -3.7230, -3.7147, -4.6185, -4.4312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2028, device='cuda:0', dtype=torch.float64)
tensor([-2.3927, -3.7139, -3.7156, -4.6216, -4.4298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0628, device='cuda:0', dtype=torch.float64)
tensor([-2.3965, -3.7048, -3.7152, -4.6237, -4.4285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1735, device='cuda:0', dtype=torch.float64)
tensor([-2.4009, -3.6961, -3.7141, -4.6240, -4.4277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([-2.4050, -3.6909, -3.7138, -4.6245, -4.4249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0760, device='cuda:0', dtype=torch.float64)
tensor([-2.4056, -3.6883, -3.7148, -4.6230, -4.4205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0205, device='cuda:0', dtype=torch.float64)
tensor([-2.4050, -3.6893, -3.7163, -4.6197, -4.4161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1408, device='cuda:0', dtype=torch.float64)
tensor([-2.4024, -3.6916, -3.7179, -4.6153, -4.4120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2186, device='cuda:0', dtype=torch.float64)
tensor([-2.3990, -3.6970, -3.7188, -4.6121, -4.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0498, device='cuda:0', dtype=torch.float64)
tensor([-2.3938, -3.7038, -3.7201, -4.6103, -4.4078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0949, device='cuda:0', dtype=torch.float64)
tensor([-2.3884, -3.7115, -3.7204, -4.6096, -4.4087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0791, device='cuda:0', dtype=torch.float64)
tensor([-2.3847, -3.7175, -3.7203, -4.6085, -4.4105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1537, device='cuda:0', dtype=torch.float64)
tensor([-2.3826, -3.7230, -3.7199, -4.6068, -4.4129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1320, device='cuda:0', dtype=torch.float64)
tensor([-2.3804, -3.7259, -3.7202, -4.6048, -4.4128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0930, device='cuda:0', dtype=torch.float64)
tensor([-2.3771, -3.7282, -3.7208, -4.6029, -4.4127], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4141, device='cuda:0', dtype=torch.float64)
tensor([-2.3749, -3.7282, -3.7195, -4.5995, -4.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0889, device='cuda:0', dtype=torch.float64)
tensor([-2.3733, -3.7257, -3.7188, -4.5981, -4.4165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9711, device='cuda:0', dtype=torch.float64)
tensor([-2.3728, -3.7208, -3.7167, -4.5932, -4.4192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1403, device='cuda:0', dtype=torch.float64)
tensor([-2.3740, -3.7153, -3.7157, -4.5868, -4.4199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9777, device='cuda:0', dtype=torch.float64)
tensor([-2.3740, -3.7097, -3.7165, -4.5820, -4.4189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0561, device='cuda:0', dtype=torch.float64)
tensor([-2.3765, -3.7034, -3.7166, -4.5759, -4.4164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0571, device='cuda:0', dtype=torch.float64)
tensor([-2.3801, -3.7003, -3.7158, -4.5705, -4.4145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0420, device='cuda:0', dtype=torch.float64)
tensor([-2.3843, -3.6976, -3.7130, -4.5649, -4.4136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0576, device='cuda:0', dtype=torch.float64)
tensor([-2.3890, -3.6957, -3.7122, -4.5605, -4.4110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0333, device='cuda:0', dtype=torch.float64)
tensor([-2.3920, -3.6935, -3.7086, -4.5582, -4.4084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1186, device='cuda:0', dtype=torch.float64)
tensor([-2.3947, -3.6920, -3.7033, -4.5542, -4.4077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1193, device='cuda:0', dtype=torch.float64)
tensor([-2.3982, -3.6900, -3.7006, -4.5509, -4.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-2.3992, -3.6900, -3.6981, -4.5507, -4.4080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-2.3986, -3.6918, -3.6944, -4.5528, -4.4093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1359, device='cuda:0', dtype=torch.float64)
tensor([-2.3965, -3.6945, -3.6929, -4.5580, -4.4109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1849, device='cuda:0', dtype=torch.float64)
tensor([-2.3929, -3.6994, -3.6954, -4.5652, -4.4100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1546, device='cuda:0', dtype=torch.float64)
tensor([-2.3885, -3.7068, -3.6982, -4.5748, -4.4099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0104, device='cuda:0', dtype=torch.float64)
tensor([-2.3859, -3.7149, -3.7009, -4.5829, -4.4107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2282, device='cuda:0', dtype=torch.float64)
tensor([-2.3846, -3.7224, -3.7038, -4.5902, -4.4144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2777, device='cuda:0', dtype=torch.float64)
tensor([-2.3847, -3.7302, -3.7066, -4.5946, -4.4198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2027, device='cuda:0', dtype=torch.float64)
tensor([-2.3877, -3.7346, -3.7058, -4.6000, -4.4272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1152, device='cuda:0', dtype=torch.float64)
tensor([-2.3884, -3.7359, -3.7054, -4.6044, -4.4353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9782, device='cuda:0', dtype=torch.float64)
tensor([-2.3891, -3.7342, -3.7051, -4.6069, -4.4410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9785, device='cuda:0', dtype=torch.float64)
tensor([-2.3888, -3.7314, -3.7050, -4.6077, -4.4443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1155, device='cuda:0', dtype=torch.float64)
tensor([-2.3878, -3.7256, -3.7042, -4.6093, -4.4463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0540, device='cuda:0', dtype=torch.float64)
tensor([-2.3888, -3.7175, -3.7018, -4.6078, -4.4473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-2.3894, -3.7095, -3.6995, -4.6060, -4.4478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0052, device='cuda:0', dtype=torch.float64)
tensor([-2.3887, -3.7029, -3.6978, -4.6017, -4.4467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-2.3870, -3.6968, -3.6964, -4.5968, -4.4430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0891, device='cuda:0', dtype=torch.float64)
tensor([-2.3852, -3.6919, -3.6966, -4.5942, -4.4380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-2.3844, -3.6853, -3.6958, -4.5917, -4.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1514, device='cuda:0', dtype=torch.float64)
tensor([-2.3825, -3.6845, -3.6975, -4.5891, -4.4277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-2.3812, -3.6832, -3.6988, -4.5881, -4.4221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2185, device='cuda:0', dtype=torch.float64)
tensor([-2.3796, -3.6848, -3.7009, -4.5865, -4.4152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2009, device='cuda:0', dtype=torch.float64)
tensor([-2.3779, -3.6858, -3.7034, -4.5841, -4.4067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2209, device='cuda:0', dtype=torch.float64)
tensor([-2.3763, -3.6873, -3.7055, -4.5814, -4.3992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1711, device='cuda:0', dtype=torch.float64)
tensor([-2.3753, -3.6925, -3.7058, -4.5782, -4.3919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9266, device='cuda:0', dtype=torch.float64)
tensor([-2.3755, -3.6954, -3.7041, -4.5746, -4.3887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0415, device='cuda:0', dtype=torch.float64)
tensor([-2.3766, -3.6946, -3.7013, -4.5708, -4.3866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1069, device='cuda:0', dtype=torch.float64)
tensor([-2.3786, -3.6929, -3.6981, -4.5679, -4.3861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1535, device='cuda:0', dtype=torch.float64)
tensor([-2.3796, -3.6907, -3.6946, -4.5654, -4.3872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1954, device='cuda:0', dtype=torch.float64)
tensor([-2.3811, -3.6873, -3.6904, -4.5608, -4.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2380, device='cuda:0', dtype=torch.float64)
tensor([-2.3832, -3.6867, -3.6862, -4.5540, -4.3953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0208, device='cuda:0', dtype=torch.float64)
tensor([-2.3848, -3.6835, -3.6816, -4.5506, -4.3990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0867, device='cuda:0', dtype=torch.float64)
tensor([-2.3850, -3.6803, -3.6794, -4.5478, -4.4037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0057, device='cuda:0', dtype=torch.float64)
tensor([-2.3839, -3.6764, -3.6794, -4.5467, -4.4108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0411, device='cuda:0', dtype=torch.float64)
tensor([-2.3845, -3.6731, -3.6805, -4.5440, -4.4156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1954, device='cuda:0', dtype=torch.float64)
tensor([-2.3866, -3.6686, -3.6827, -4.5390, -4.4185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0678, device='cuda:0', dtype=torch.float64)
tensor([-2.3879, -3.6652, -3.6816, -4.5354, -4.4210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0357, device='cuda:0', dtype=torch.float64)
tensor([-2.3886, -3.6631, -3.6816, -4.5339, -4.4225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0000, device='cuda:0', dtype=torch.float64)
tensor([-2.3890, -3.6628, -3.6805, -4.5334, -4.4222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9717, device='cuda:0', dtype=torch.float64)
tensor([-2.3873, -3.6648, -3.6783, -4.5317, -4.4210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1617, device='cuda:0', dtype=torch.float64)
tensor([-2.3842, -3.6653, -3.6774, -4.5312, -4.4162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2710, device='cuda:0', dtype=torch.float64)
tensor([-2.3819, -3.6634, -3.6782, -4.5347, -4.4116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0192, device='cuda:0', dtype=torch.float64)
tensor([-2.3799, -3.6593, -3.6784, -4.5399, -4.4063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1301, device='cuda:0', dtype=torch.float64)
tensor([-2.3789, -3.6545, -3.6785, -4.5455, -4.4015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1292, device='cuda:0', dtype=torch.float64)
tensor([-2.3784, -3.6503, -3.6776, -4.5498, -4.3975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1292, device='cuda:0', dtype=torch.float64)
tensor([-2.3774, -3.6468, -3.6768, -4.5534, -4.3951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1053, device='cuda:0', dtype=torch.float64)
tensor([-2.3769, -3.6417, -3.6769, -4.5550, -4.3941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0554, device='cuda:0', dtype=torch.float64)
tensor([-2.3759, -3.6386, -3.6758, -4.5568, -4.3929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1330, device='cuda:0', dtype=torch.float64)
tensor([-2.3745, -3.6360, -3.6745, -4.5566, -4.3935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9921, device='cuda:0', dtype=torch.float64)
tensor([-2.3741, -3.6338, -3.6733, -4.5526, -4.3947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9893, device='cuda:0', dtype=torch.float64)
tensor([-2.3734, -3.6335, -3.6711, -4.5473, -4.3952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2050, device='cuda:0', dtype=torch.float64)
tensor([-2.3736, -3.6325, -3.6707, -4.5436, -4.3926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0016, device='cuda:0', dtype=torch.float64)
tensor([-2.3718, -3.6315, -3.6699, -4.5401, -4.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9908, device='cuda:0', dtype=torch.float64)
tensor([-2.3705, -3.6334, -3.6708, -4.5342, -4.3919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1124, device='cuda:0', dtype=torch.float64)
tensor([-2.3707, -3.6361, -3.6718, -4.5291, -4.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0187, device='cuda:0', dtype=torch.float64)
tensor([-2.3710, -3.6377, -3.6726, -4.5246, -4.3900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1754, device='cuda:0', dtype=torch.float64)
tensor([-2.3695, -3.6405, -3.6748, -4.5210, -4.3880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1020, device='cuda:0', dtype=torch.float64)
tensor([-2.3681, -3.6426, -3.6787, -4.5190, -4.3861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0434, device='cuda:0', dtype=torch.float64)
tensor([-2.3684, -3.6434, -3.6810, -4.5168, -4.3846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1443, device='cuda:0', dtype=torch.float64)
tensor([-2.3698, -3.6437, -3.6812, -4.5158, -4.3813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0392, device='cuda:0', dtype=torch.float64)
tensor([-2.3719, -3.6402, -3.6824, -4.5183, -4.3780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2949, device='cuda:0', dtype=torch.float64)
tensor([-2.3718, -3.6365, -3.6852, -4.5219, -4.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0842, device='cuda:0', dtype=torch.float64)
tensor([-2.3740, -3.6345, -3.6872, -4.5246, -4.3751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9860, device='cuda:0', dtype=torch.float64)
tensor([-2.3778, -3.6316, -3.6873, -4.5279, -4.3746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-2.3823, -3.6316, -3.6860, -4.5261, -4.3748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2823, device='cuda:0', dtype=torch.float64)
tensor([-2.3871, -3.6317, -3.6816, -4.5227, -4.3732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-2.3906, -3.6326, -3.6779, -4.5184, -4.3705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1970, device='cuda:0', dtype=torch.float64)
tensor([-2.3942, -3.6337, -3.6717, -4.5117, -4.3685], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2571, device='cuda:0', dtype=torch.float64)
tensor([-2.3993, -3.6314, -3.6636, -4.5049, -4.3698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0919, device='cuda:0', dtype=torch.float64)
tensor([-2.4024, -3.6311, -3.6560, -4.4971, -4.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1469, device='cuda:0', dtype=torch.float64)
tensor([-2.4056, -3.6289, -3.6456, -4.4903, -4.3711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0821, device='cuda:0', dtype=torch.float64)
tensor([-2.4072, -3.6275, -3.6376, -4.4836, -4.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9855, device='cuda:0', dtype=torch.float64)
tensor([-2.4067, -3.6235, -3.6306, -4.4791, -4.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0273, device='cuda:0', dtype=torch.float64)
tensor([-2.4063, -3.6216, -3.6249, -4.4766, -4.3670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9889, device='cuda:0', dtype=torch.float64)
tensor([-2.4034, -3.6205, -3.6213, -4.4731, -4.3650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0220, device='cuda:0', dtype=torch.float64)
tensor([-2.4008, -3.6203, -3.6189, -4.4692, -4.3643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([-2.3949, -3.6188, -3.6182, -4.4649, -4.3646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0582, device='cuda:0', dtype=torch.float64)
tensor([-2.3906, -3.6186, -3.6192, -4.4611, -4.3628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0438, device='cuda:0', dtype=torch.float64)
tensor([-2.3852, -3.6185, -3.6225, -4.4560, -4.3608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-2.3815, -3.6187, -3.6297, -4.4524, -4.3584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-2.3772, -3.6210, -3.6373, -4.4492, -4.3564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-2.3730, -3.6207, -3.6460, -4.4481, -4.3555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0398, device='cuda:0', dtype=torch.float64)
tensor([-2.3722, -3.6200, -3.6527, -4.4465, -4.3542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2140, device='cuda:0', dtype=torch.float64)
tensor([-2.3729, -3.6185, -3.6570, -4.4448, -4.3508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1229, device='cuda:0', dtype=torch.float64)
tensor([-2.3739, -3.6169, -3.6592, -4.4426, -4.3463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1330, device='cuda:0', dtype=torch.float64)
tensor([-2.3762, -3.6147, -3.6589, -4.4437, -4.3451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([-2.3799, -3.6147, -3.6558, -4.4418, -4.3466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9842, device='cuda:0', dtype=torch.float64)
tensor([-2.3841, -3.6140, -3.6505, -4.4409, -4.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1173, device='cuda:0', dtype=torch.float64)
tensor([-2.3894, -3.6147, -3.6430, -4.4384, -4.3483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9800, device='cuda:0', dtype=torch.float64)
tensor([-2.3929, -3.6149, -3.6361, -4.4379, -4.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0234, device='cuda:0', dtype=torch.float64)
tensor([-2.3966, -3.6142, -3.6298, -4.4401, -4.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1001, device='cuda:0', dtype=torch.float64)
tensor([-2.3989, -3.6142, -3.6257, -4.4488, -4.3475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2715, device='cuda:0', dtype=torch.float64)
tensor([-2.4030, -3.6146, -3.6189, -4.4564, -4.3482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0978, device='cuda:0', dtype=torch.float64)
tensor([-2.4054, -3.6152, -3.6136, -4.4607, -4.3474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([-2.4062, -3.6158, -3.6096, -4.4641, -4.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0442, device='cuda:0', dtype=torch.float64)
tensor([-2.4063, -3.6165, -3.6075, -4.4664, -4.3437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1404, device='cuda:0', dtype=torch.float64)
tensor([-2.4059, -3.6166, -3.6065, -4.4683, -4.3421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0026, device='cuda:0', dtype=torch.float64)
tensor([-2.4033, -3.6154, -3.6078, -4.4701, -4.3405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0158, device='cuda:0', dtype=torch.float64)
tensor([-2.4006, -3.6136, -3.6101, -4.4672, -4.3378], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-2.3963, -3.6113, -3.6119, -4.4645, -4.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-2.3922, -3.6104, -3.6141, -4.4589, -4.3369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0791, device='cuda:0', dtype=torch.float64)
tensor([-2.3889, -3.6054, -3.6163, -4.4543, -4.3382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1518, device='cuda:0', dtype=torch.float64)
tensor([-2.3849, -3.6001, -3.6200, -4.4517, -4.3382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1209, device='cuda:0', dtype=torch.float64)
tensor([-2.3808, -3.5953, -3.6216, -4.4488, -4.3376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0294, device='cuda:0', dtype=torch.float64)
tensor([-2.3788, -3.5914, -3.6219, -4.4452, -4.3377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2121, device='cuda:0', dtype=torch.float64)
tensor([-2.3768, -3.5875, -3.6234, -4.4433, -4.3389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0745, device='cuda:0', dtype=torch.float64)
tensor([-2.3762, -3.5845, -3.6225, -4.4417, -4.3420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9304, device='cuda:0', dtype=torch.float64)
tensor([-2.3765, -3.5812, -3.6223, -4.4400, -4.3440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1438, device='cuda:0', dtype=torch.float64)
tensor([-2.3767, -3.5760, -3.6205, -4.4413, -4.3458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1079, device='cuda:0', dtype=torch.float64)
tensor([-2.3789, -3.5741, -3.6175, -4.4405, -4.3496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0731, device='cuda:0', dtype=torch.float64)
tensor([-2.3785, -3.5733, -3.6149, -4.4421, -4.3517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0165, device='cuda:0', dtype=torch.float64)
tensor([-2.3751, -3.5763, -3.6121, -4.4451, -4.3541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9844, device='cuda:0', dtype=torch.float64)
tensor([-2.3725, -3.5790, -3.6098, -4.4478, -4.3550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-2.3719, -3.5821, -3.6054, -4.4515, -4.3534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-2.3717, -3.5845, -3.6014, -4.4535, -4.3512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0596, device='cuda:0', dtype=torch.float64)
tensor([-2.3713, -3.5860, -3.5977, -4.4549, -4.3480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-2.3712, -3.5856, -3.5942, -4.4573, -4.3448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0305, device='cuda:0', dtype=torch.float64)
tensor([-2.3717, -3.5828, -3.5904, -4.4605, -4.3410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8785, device='cuda:0', dtype=torch.float64)
tensor([-2.3718, -3.5811, -3.5888, -4.4607, -4.3376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1208, device='cuda:0', dtype=torch.float64)
tensor([-2.3733, -3.5780, -3.5889, -4.4626, -4.3309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1958, device='cuda:0', dtype=torch.float64)
tensor([-2.3750, -3.5756, -3.5901, -4.4632, -4.3245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0691, device='cuda:0', dtype=torch.float64)
tensor([-2.3769, -3.5733, -3.5918, -4.4633, -4.3200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0725, device='cuda:0', dtype=torch.float64)
tensor([-2.3789, -3.5721, -3.5924, -4.4617, -4.3148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0908, device='cuda:0', dtype=torch.float64)
tensor([-2.3801, -3.5716, -3.5905, -4.4601, -4.3091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-2.3817, -3.5689, -3.5887, -4.4588, -4.3063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2031, device='cuda:0', dtype=torch.float64)
tensor([-2.3832, -3.5681, -3.5867, -4.4536, -4.3049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0910, device='cuda:0', dtype=torch.float64)
tensor([-2.3852, -3.5708, -3.5849, -4.4496, -4.3033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0749, device='cuda:0', dtype=torch.float64)
tensor([-2.3877, -3.5710, -3.5812, -4.4430, -4.3014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0705, device='cuda:0', dtype=torch.float64)
tensor([-2.3897, -3.5720, -3.5766, -4.4341, -4.3000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0917, device='cuda:0', dtype=torch.float64)
tensor([-2.3892, -3.5758, -3.5731, -4.4234, -4.3003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-2.3887, -3.5793, -3.5710, -4.4120, -4.3001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-2.3883, -3.5821, -3.5691, -4.4037, -4.3003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1100, device='cuda:0', dtype=torch.float64)
tensor([-2.3890, -3.5833, -3.5690, -4.3986, -4.3004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9530, device='cuda:0', dtype=torch.float64)
tensor([-2.3899, -3.5814, -3.5673, -4.3974, -4.3004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1393, device='cuda:0', dtype=torch.float64)
tensor([-2.3894, -3.5786, -3.5652, -4.3980, -4.3022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9122, device='cuda:0', dtype=torch.float64)
tensor([-2.3882, -3.5747, -3.5648, -4.3994, -4.3047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0292, device='cuda:0', dtype=torch.float64)
tensor([-2.3856, -3.5714, -3.5634, -4.4029, -4.3103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1784, device='cuda:0', dtype=torch.float64)
tensor([-2.3834, -3.5701, -3.5631, -4.4095, -4.3150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0748, device='cuda:0', dtype=torch.float64)
tensor([-2.3807, -3.5670, -3.5650, -4.4193, -4.3174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1256, device='cuda:0', dtype=torch.float64)
tensor([-2.3788, -3.5639, -3.5674, -4.4260, -4.3239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1112, device='cuda:0', dtype=torch.float64)
tensor([-2.3791, -3.5596, -3.5705, -4.4349, -4.3290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2500, device='cuda:0', dtype=torch.float64)
tensor([-2.3824, -3.5525, -3.5760, -4.4391, -4.3315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9749, device='cuda:0', dtype=torch.float64)
tensor([-2.3827, -3.5458, -3.5811, -4.4416, -4.3327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1247, device='cuda:0', dtype=torch.float64)
tensor([-2.3816, -3.5416, -3.5883, -4.4461, -4.3330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1498, device='cuda:0', dtype=torch.float64)
tensor([-2.3795, -3.5370, -3.5949, -4.4482, -4.3298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0865, device='cuda:0', dtype=torch.float64)
tensor([-2.3772, -3.5384, -3.6032, -4.4497, -4.3266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1484, device='cuda:0', dtype=torch.float64)
tensor([-2.3739, -3.5415, -3.6109, -4.4528, -4.3229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1264, device='cuda:0', dtype=torch.float64)
tensor([-2.3728, -3.5457, -3.6151, -4.4499, -4.3193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8652, device='cuda:0', dtype=torch.float64)
tensor([-2.3698, -3.5511, -3.6172, -4.4451, -4.3156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1598, device='cuda:0', dtype=torch.float64)
tensor([-2.3681, -3.5567, -3.6183, -4.4372, -4.3129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9935, device='cuda:0', dtype=torch.float64)
tensor([-2.3664, -3.5594, -3.6189, -4.4302, -4.3111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1718, device='cuda:0', dtype=torch.float64)
tensor([-2.3637, -3.5593, -3.6170, -4.4289, -4.3112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1301, device='cuda:0', dtype=torch.float64)
tensor([-2.3603, -3.5577, -3.6149, -4.4262, -4.3092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0887, device='cuda:0', dtype=torch.float64)
tensor([-2.3566, -3.5560, -3.6109, -4.4234, -4.3072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1823, device='cuda:0', dtype=torch.float64)
tensor([-2.3564, -3.5521, -3.6062, -4.4191, -4.3057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1286, device='cuda:0', dtype=torch.float64)
tensor([-2.3567, -3.5491, -3.6027, -4.4144, -4.3033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9398, device='cuda:0', dtype=torch.float64)
tensor([-2.3564, -3.5476, -3.5999, -4.4120, -4.3017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([-2.3558, -3.5465, -3.5979, -4.4086, -4.2999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2954, device='cuda:0', dtype=torch.float64)
tensor([-2.3573, -3.5485, -3.5966, -4.4037, -4.2967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0744, device='cuda:0', dtype=torch.float64)
tensor([-2.3595, -3.5497, -3.5955, -4.4015, -4.2924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-2.3600, -3.5499, -3.5932, -4.3984, -4.2883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1360, device='cuda:0', dtype=torch.float64)
tensor([-2.3601, -3.5524, -3.5915, -4.3954, -4.2850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([-2.3601, -3.5546, -3.5920, -4.3933, -4.2805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([-2.3586, -3.5583, -3.5920, -4.3911, -4.2797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-2.3562, -3.5655, -3.5916, -4.3892, -4.2776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-2.3528, -3.5694, -3.5916, -4.3904, -4.2738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1935, device='cuda:0', dtype=torch.float64)
tensor([-2.3486, -3.5716, -3.5896, -4.3896, -4.2732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1058, device='cuda:0', dtype=torch.float64)
tensor([-2.3455, -3.5749, -3.5879, -4.3857, -4.2738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1738, device='cuda:0', dtype=torch.float64)
tensor([-2.3426, -3.5776, -3.5874, -4.3807, -4.2760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0277, device='cuda:0', dtype=torch.float64)
tensor([-2.3382, -3.5823, -3.5893, -4.3788, -4.2774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0302, device='cuda:0', dtype=torch.float64)
tensor([-2.3350, -3.5849, -3.5922, -4.3776, -4.2790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1411, device='cuda:0', dtype=torch.float64)
tensor([-2.3323, -3.5852, -3.5968, -4.3793, -4.2798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0866, device='cuda:0', dtype=torch.float64)
tensor([-2.3305, -3.5836, -3.6004, -4.3780, -4.2812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1716, device='cuda:0', dtype=torch.float64)
tensor([-2.3305, -3.5832, -3.6025, -4.3784, -4.2830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-2.3315, -3.5802, -3.6038, -4.3792, -4.2843], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0141, device='cuda:0', dtype=torch.float64)
tensor([-2.3335, -3.5784, -3.6045, -4.3762, -4.2839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2391, device='cuda:0', dtype=torch.float64)
tensor([-2.3364, -3.5771, -3.6019, -4.3747, -4.2846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0464, device='cuda:0', dtype=torch.float64)
tensor([-2.3397, -3.5758, -3.5988, -4.3722, -4.2841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1671, device='cuda:0', dtype=torch.float64)
tensor([-2.3448, -3.5758, -3.5959, -4.3707, -4.2830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1298, device='cuda:0', dtype=torch.float64)
tensor([-2.3504, -3.5798, -3.5931, -4.3679, -4.2811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0107, device='cuda:0', dtype=torch.float64)
tensor([-2.3546, -3.5826, -3.5920, -4.3662, -4.2769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9624, device='cuda:0', dtype=torch.float64)
tensor([-2.3569, -3.5845, -3.5903, -4.3652, -4.2733], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0770, device='cuda:0', dtype=torch.float64)
tensor([-2.3605, -3.5874, -3.5863, -4.3691, -4.2699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9896, device='cuda:0', dtype=torch.float64)
tensor([-2.3631, -3.5879, -3.5823, -4.3712, -4.2693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0532, device='cuda:0', dtype=torch.float64)
tensor([-2.3651, -3.5871, -3.5779, -4.3721, -4.2695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1985, device='cuda:0', dtype=torch.float64)
tensor([-2.3677, -3.5834, -3.5733, -4.3726, -4.2694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([-2.3692, -3.5786, -3.5683, -4.3718, -4.2702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2549, device='cuda:0', dtype=torch.float64)
tensor([-2.3703, -3.5744, -3.5633, -4.3728, -4.2743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1438, device='cuda:0', dtype=torch.float64)
tensor([-2.3713, -3.5698, -3.5580, -4.3732, -4.2748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0152, device='cuda:0', dtype=torch.float64)
tensor([-2.3724, -3.5663, -3.5536, -4.3725, -4.2745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9975, device='cuda:0', dtype=torch.float64)
tensor([-2.3724, -3.5644, -3.5514, -4.3714, -4.2715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1202, device='cuda:0', dtype=torch.float64)
tensor([-2.3710, -3.5645, -3.5509, -4.3703, -4.2688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0981, device='cuda:0', dtype=torch.float64)
tensor([-2.3677, -3.5658, -3.5508, -4.3678, -4.2681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9656, device='cuda:0', dtype=torch.float64)
tensor([-2.3635, -3.5691, -3.5504, -4.3638, -4.2678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1045, device='cuda:0', dtype=torch.float64)
tensor([-2.3584, -3.5698, -3.5509, -4.3615, -4.2673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3343, device='cuda:0', dtype=torch.float64)
tensor([-2.3560, -3.5718, -3.5512, -4.3580, -4.2659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0433, device='cuda:0', dtype=torch.float64)
tensor([-2.3522, -3.5735, -3.5530, -4.3572, -4.2647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1377, device='cuda:0', dtype=torch.float64)
tensor([-2.3515, -3.5711, -3.5543, -4.3544, -4.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-2.3520, -3.5689, -3.5556, -4.3540, -4.2629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4310, device='cuda:0', dtype=torch.float64)
tensor([-2.3536, -3.5665, -3.5575, -4.3542, -4.2602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-2.3554, -3.5637, -3.5569, -4.3550, -4.2571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9550, device='cuda:0', dtype=torch.float64)
tensor([-2.3572, -3.5627, -3.5572, -4.3583, -4.2542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0473, device='cuda:0', dtype=torch.float64)
tensor([-2.3597, -3.5614, -3.5550, -4.3602, -4.2525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1452, device='cuda:0', dtype=torch.float64)
tensor([-2.3627, -3.5611, -3.5497, -4.3618, -4.2513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1881, device='cuda:0', dtype=torch.float64)
tensor([-2.3650, -3.5588, -3.5462, -4.3629, -4.2472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0330, device='cuda:0', dtype=torch.float64)
tensor([-2.3656, -3.5563, -3.5445, -4.3638, -4.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1232, device='cuda:0', dtype=torch.float64)
tensor([-2.3675, -3.5537, -3.5423, -4.3633, -4.2393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-2.3711, -3.5523, -3.5418, -4.3659, -4.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0437, device='cuda:0', dtype=torch.float64)
tensor([-2.3742, -3.5507, -3.5418, -4.3701, -4.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3258, device='cuda:0', dtype=torch.float64)
tensor([-2.3766, -3.5501, -3.5426, -4.3749, -4.2325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1839, device='cuda:0', dtype=torch.float64)
tensor([-2.3780, -3.5500, -3.5459, -4.3768, -4.2308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-2.3790, -3.5501, -3.5478, -4.3754, -4.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0619, device='cuda:0', dtype=torch.float64)
tensor([-2.3797, -3.5525, -3.5491, -4.3747, -4.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1177, device='cuda:0', dtype=torch.float64)
tensor([-2.3771, -3.5575, -3.5500, -4.3771, -4.2299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0852, device='cuda:0', dtype=torch.float64)
tensor([-2.3752, -3.5608, -3.5501, -4.3812, -4.2306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-2.3751, -3.5630, -3.5492, -4.3831, -4.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9431, device='cuda:0', dtype=torch.float64)
tensor([-2.3746, -3.5620, -3.5468, -4.3833, -4.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0373, device='cuda:0', dtype=torch.float64)
tensor([-2.3717, -3.5596, -3.5452, -4.3838, -4.2317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0988, device='cuda:0', dtype=torch.float64)
tensor([-2.3692, -3.5561, -3.5425, -4.3804, -4.2338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8968, device='cuda:0', dtype=torch.float64)
tensor([-2.3639, -3.5515, -3.5388, -4.3792, -4.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([-2.3602, -3.5483, -3.5362, -4.3788, -4.2408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9725, device='cuda:0', dtype=torch.float64)
tensor([-2.3565, -3.5442, -3.5324, -4.3778, -4.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0203, device='cuda:0', dtype=torch.float64)
tensor([-2.3555, -3.5408, -3.5270, -4.3734, -4.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1399, device='cuda:0', dtype=torch.float64)
tensor([-2.3550, -3.5380, -3.5228, -4.3689, -4.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8694, device='cuda:0', dtype=torch.float64)
tensor([-2.3548, -3.5378, -3.5198, -4.3636, -4.2517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1906, device='cuda:0', dtype=torch.float64)
tensor([-2.3554, -3.5392, -3.5168, -4.3587, -4.2527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0989, device='cuda:0', dtype=torch.float64)
tensor([-2.3559, -3.5397, -3.5119, -4.3532, -4.2539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0673, device='cuda:0', dtype=torch.float64)
tensor([-2.3583, -3.5398, -3.5090, -4.3507, -4.2549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0375, device='cuda:0', dtype=torch.float64)
tensor([-2.3609, -3.5390, -3.5061, -4.3482, -4.2541], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0802, device='cuda:0', dtype=torch.float64)
tensor([-2.3630, -3.5366, -3.5070, -4.3489, -4.2508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-2.3644, -3.5317, -3.5096, -4.3510, -4.2457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0609, device='cuda:0', dtype=torch.float64)
tensor([-2.3638, -3.5255, -3.5118, -4.3514, -4.2386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-2.3632, -3.5216, -3.5127, -4.3487, -4.2330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1676, device='cuda:0', dtype=torch.float64)
tensor([-2.3634, -3.5171, -3.5113, -4.3448, -4.2295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9811, device='cuda:0', dtype=torch.float64)
tensor([-2.3618, -3.5117, -3.5096, -4.3427, -4.2264], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0366, device='cuda:0', dtype=torch.float64)
tensor([-2.3599, -3.5082, -3.5098, -4.3398, -4.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9289, device='cuda:0', dtype=torch.float64)
tensor([-2.3586, -3.5049, -3.5083, -4.3361, -4.2202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0669, device='cuda:0', dtype=torch.float64)
tensor([-2.3581, -3.5016, -3.5073, -4.3307, -4.2163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-2.3570, -3.5014, -3.5077, -4.3276, -4.2144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1497, device='cuda:0', dtype=torch.float64)
tensor([-2.3568, -3.4996, -3.5061, -4.3282, -4.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1902, device='cuda:0', dtype=torch.float64)
tensor([-2.3548, -3.4989, -3.5061, -4.3279, -4.2116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0948, device='cuda:0', dtype=torch.float64)
tensor([-2.3518, -3.4966, -3.5063, -4.3298, -4.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9869, device='cuda:0', dtype=torch.float64)
tensor([-2.3479, -3.4937, -3.5064, -4.3329, -4.2041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1913, device='cuda:0', dtype=torch.float64)
tensor([-2.3459, -3.4910, -3.5057, -4.3368, -4.2011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0953, device='cuda:0', dtype=torch.float64)
tensor([-2.3454, -3.4880, -3.5037, -4.3448, -4.2008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2036, device='cuda:0', dtype=torch.float64)
tensor([-2.3477, -3.4841, -3.4997, -4.3534, -4.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1805, device='cuda:0', dtype=torch.float64)
tensor([-2.3498, -3.4835, -3.4975, -4.3626, -4.2048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0883, device='cuda:0', dtype=torch.float64)
tensor([-2.3519, -3.4872, -3.4955, -4.3710, -4.2076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1545, device='cuda:0', dtype=torch.float64)
tensor([-2.3546, -3.4922, -3.4946, -4.3797, -4.2126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9839, device='cuda:0', dtype=torch.float64)
tensor([-2.3563, -3.4998, -3.4959, -4.3844, -4.2178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0538, device='cuda:0', dtype=torch.float64)
tensor([-2.3589, -3.5077, -3.4985, -4.3865, -4.2222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1093, device='cuda:0', dtype=torch.float64)
tensor([-2.3598, -3.5115, -3.5024, -4.3880, -4.2281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-2.3591, -3.5141, -3.5068, -4.3892, -4.2332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1574, device='cuda:0', dtype=torch.float64)
tensor([-2.3606, -3.5140, -3.5106, -4.3853, -4.2365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3434, device='cuda:0', dtype=torch.float64)
tensor([-2.3616, -3.5151, -3.5147, -4.3794, -4.2364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0582, device='cuda:0', dtype=torch.float64)
tensor([-2.3617, -3.5148, -3.5187, -4.3748, -4.2376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1219, device='cuda:0', dtype=torch.float64)
tensor([-2.3605, -3.5148, -3.5242, -4.3678, -4.2388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0586, device='cuda:0', dtype=torch.float64)
tensor([-2.3601, -3.5136, -3.5283, -4.3613, -4.2389], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1743, device='cuda:0', dtype=torch.float64)
tensor([-2.3597, -3.5125, -3.5308, -4.3551, -4.2388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-2.3575, -3.5083, -3.5318, -4.3449, -4.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0574, device='cuda:0', dtype=torch.float64)
tensor([-2.3563, -3.5042, -3.5337, -4.3370, -4.2319], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9954, device='cuda:0', dtype=torch.float64)
tensor([-2.3564, -3.5001, -3.5336, -4.3313, -4.2293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1032, device='cuda:0', dtype=torch.float64)
tensor([-2.3548, -3.4932, -3.5323, -4.3281, -4.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1156, device='cuda:0', dtype=torch.float64)
tensor([-2.3499, -3.4909, -3.5293, -4.3260, -4.2252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1448, device='cuda:0', dtype=torch.float64)
tensor([-2.3450, -3.4921, -3.5262, -4.3252, -4.2253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0672, device='cuda:0', dtype=torch.float64)
tensor([-2.3403, -3.4922, -3.5213, -4.3262, -4.2228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1921, device='cuda:0', dtype=torch.float64)
tensor([-2.3376, -3.4950, -3.5179, -4.3294, -4.2186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9048, device='cuda:0', dtype=torch.float64)
tensor([-2.3331, -3.4967, -3.5169, -4.3354, -4.2130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2746, device='cuda:0', dtype=torch.float64)
tensor([-2.3315, -3.4979, -3.5165, -4.3384, -4.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0784, device='cuda:0', dtype=torch.float64)
tensor([-2.3290, -3.5007, -3.5169, -4.3430, -4.2051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2718, device='cuda:0', dtype=torch.float64)
tensor([-2.3288, -3.4974, -3.5183, -4.3501, -4.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9586, device='cuda:0', dtype=torch.float64)
tensor([-2.3297, -3.4943, -3.5214, -4.3604, -4.2001], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0830, device='cuda:0', dtype=torch.float64)
tensor([-2.3311, -3.4895, -3.5224, -4.3697, -4.1984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-2.3351, -3.4846, -3.5234, -4.3749, -4.1983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9578, device='cuda:0', dtype=torch.float64)
tensor([-2.3409, -3.4822, -3.5235, -4.3798, -4.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9983, device='cuda:0', dtype=torch.float64)
tensor([-2.3471, -3.4792, -3.5244, -4.3871, -4.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1916, device='cuda:0', dtype=torch.float64)
tensor([-2.3551, -3.4761, -3.5233, -4.3905, -4.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-2.3610, -3.4775, -3.5231, -4.3920, -4.2054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0522, device='cuda:0', dtype=torch.float64)
tensor([-2.3642, -3.4831, -3.5219, -4.3918, -4.2085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1745, device='cuda:0', dtype=torch.float64)
tensor([-2.3670, -3.4856, -3.5186, -4.3899, -4.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1112, device='cuda:0', dtype=torch.float64)
tensor([-2.3690, -3.4896, -3.5156, -4.3853, -4.2136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1016, device='cuda:0', dtype=torch.float64)
tensor([-2.3671, -3.4915, -3.5131, -4.3811, -4.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0177, device='cuda:0', dtype=torch.float64)
tensor([-2.3631, -3.4947, -3.5088, -4.3776, -4.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2027, device='cuda:0', dtype=torch.float64)
tensor([-2.3592, -3.4977, -3.5026, -4.3708, -4.2202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0926, device='cuda:0', dtype=torch.float64)
tensor([-2.3548, -3.5019, -3.4963, -4.3649, -4.2248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0766, device='cuda:0', dtype=torch.float64)
tensor([-2.3501, -3.5046, -3.4902, -4.3556, -4.2290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1956, device='cuda:0', dtype=torch.float64)
tensor([-2.3462, -3.5111, -3.4876, -4.3459, -4.2333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2104, device='cuda:0', dtype=torch.float64)
tensor([-2.3427, -3.5193, -3.4861, -4.3366, -4.2376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1727, device='cuda:0', dtype=torch.float64)
tensor([-2.3413, -3.5226, -3.4828, -4.3291, -4.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0957, device='cuda:0', dtype=torch.float64)
tensor([-2.3400, -3.5251, -3.4766, -4.3193, -4.2452], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0256, device='cuda:0', dtype=torch.float64)
tensor([-2.3412, -3.5279, -3.4692, -4.3077, -4.2464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0627, device='cuda:0', dtype=torch.float64)
tensor([-2.3431, -3.5284, -3.4644, -4.2967, -4.2474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0110, device='cuda:0', dtype=torch.float64)
tensor([-2.3453, -3.5277, -3.4625, -4.2860, -4.2458], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-2.3465, -3.5258, -3.4631, -4.2784, -4.2437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1899, device='cuda:0', dtype=torch.float64)
tensor([-2.3458, -3.5185, -3.4655, -4.2761, -4.2410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-2.3452, -3.5137, -3.4695, -4.2744, -4.2373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([-2.3454, -3.5082, -3.4758, -4.2716, -4.2314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0653, device='cuda:0', dtype=torch.float64)
tensor([-2.3449, -3.5037, -3.4821, -4.2696, -4.2268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0301, device='cuda:0', dtype=torch.float64)
tensor([-2.3438, -3.4987, -3.4874, -4.2696, -4.2217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2293, device='cuda:0', dtype=torch.float64)
tensor([-2.3423, -3.4938, -3.4922, -4.2694, -4.2164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1621, device='cuda:0', dtype=torch.float64)
tensor([-2.3393, -3.4916, -3.4961, -4.2751, -4.2092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-2.3377, -3.4907, -3.5003, -4.2833, -4.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1665, device='cuda:0', dtype=torch.float64)
tensor([-2.3395, -3.4906, -3.5019, -4.2936, -4.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0945, device='cuda:0', dtype=torch.float64)
tensor([-2.3413, -3.4936, -3.5029, -4.3026, -4.1984], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1459, device='cuda:0', dtype=torch.float64)
tensor([-2.3408, -3.4999, -3.5045, -4.3116, -4.1974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1414, device='cuda:0', dtype=torch.float64)
tensor([-2.3392, -3.5079, -3.5060, -4.3205, -4.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0903, device='cuda:0', dtype=torch.float64)
tensor([-2.3400, -3.5152, -3.5056, -4.3261, -4.1958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9329, device='cuda:0', dtype=torch.float64)
tensor([-2.3394, -3.5229, -3.5087, -4.3283, -4.1935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2108, device='cuda:0', dtype=torch.float64)
tensor([-2.3397, -3.5320, -3.5067, -4.3288, -4.1947], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0333, device='cuda:0', dtype=torch.float64)
tensor([-2.3402, -3.5349, -3.5050, -4.3286, -4.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1406, device='cuda:0', dtype=torch.float64)
tensor([-2.3421, -3.5351, -3.5022, -4.3286, -4.1950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2355, device='cuda:0', dtype=torch.float64)
tensor([-2.3453, -3.5314, -3.4954, -4.3250, -4.1939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1428, device='cuda:0', dtype=torch.float64)
tensor([-2.3466, -3.5276, -3.4902, -4.3219, -4.1954], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3320, device='cuda:0', dtype=torch.float64)
tensor([-2.3443, -3.5192, -3.4857, -4.3203, -4.1956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1524, device='cuda:0', dtype=torch.float64)
tensor([-2.3434, -3.5092, -3.4805, -4.3180, -4.1994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-2.3437, -3.4977, -3.4734, -4.3155, -4.2039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0828, device='cuda:0', dtype=torch.float64)
tensor([-2.3452, -3.4859, -3.4666, -4.3140, -4.2069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1155, device='cuda:0', dtype=torch.float64)
tensor([-2.3464, -3.4739, -3.4620, -4.3131, -4.2106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2575, device='cuda:0', dtype=torch.float64)
tensor([-2.3477, -3.4610, -3.4593, -4.3132, -4.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2120, device='cuda:0', dtype=torch.float64)
tensor([-2.3493, -3.4530, -3.4579, -4.3129, -4.2159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1670, device='cuda:0', dtype=torch.float64)
tensor([-2.3483, -3.4500, -3.4589, -4.3109, -4.2179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-2.3464, -3.4489, -3.4605, -4.3101, -4.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1778, device='cuda:0', dtype=torch.float64)
tensor([-2.3429, -3.4479, -3.4632, -4.3085, -4.2273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3075, device='cuda:0', dtype=torch.float64)
tensor([-2.3383, -3.4470, -3.4667, -4.3089, -4.2316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1752, device='cuda:0', dtype=torch.float64)
tensor([-2.3328, -3.4485, -3.4691, -4.3060, -4.2328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0686, device='cuda:0', dtype=torch.float64)
tensor([-2.3279, -3.4520, -3.4717, -4.3051, -4.2337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9978, device='cuda:0', dtype=torch.float64)
tensor([-2.3249, -3.4553, -3.4742, -4.3045, -4.2345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1568, device='cuda:0', dtype=torch.float64)
tensor([-2.3238, -3.4592, -3.4771, -4.3006, -4.2347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0555, device='cuda:0', dtype=torch.float64)
tensor([-2.3254, -3.4649, -3.4798, -4.2945, -4.2351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2476, device='cuda:0', dtype=torch.float64)
tensor([-2.3297, -3.4703, -3.4798, -4.2846, -4.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0847, device='cuda:0', dtype=torch.float64)
tensor([-2.3318, -3.4758, -3.4781, -4.2749, -4.2352], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1334, device='cuda:0', dtype=torch.float64)
tensor([-2.3339, -3.4807, -3.4775, -4.2712, -4.2350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9020, device='cuda:0', dtype=torch.float64)
tensor([-2.3335, -3.4865, -3.4796, -4.2682, -4.2327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0328, device='cuda:0', dtype=torch.float64)
tensor([-2.3324, -3.4890, -3.4843, -4.2695, -4.2267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1649, device='cuda:0', dtype=torch.float64)
tensor([-2.3322, -3.4887, -3.4890, -4.2704, -4.2196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1155, device='cuda:0', dtype=torch.float64)
tensor([-2.3323, -3.4898, -3.4939, -4.2701, -4.2129], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2631, device='cuda:0', dtype=torch.float64)
tensor([-2.3341, -3.4912, -3.4974, -4.2735, -4.2070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0569, device='cuda:0', dtype=torch.float64)
tensor([-2.3341, -3.4897, -3.5009, -4.2780, -4.1982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1455, device='cuda:0', dtype=torch.float64)
tensor([-2.3346, -3.4855, -3.5023, -4.2786, -4.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1291, device='cuda:0', dtype=torch.float64)
tensor([-2.3347, -3.4816, -3.5042, -4.2784, -4.1852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2025, device='cuda:0', dtype=torch.float64)
tensor([-2.3348, -3.4779, -3.5036, -4.2798, -4.1814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1363, device='cuda:0', dtype=torch.float64)
tensor([-2.3354, -3.4733, -3.5016, -4.2814, -4.1785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0760, device='cuda:0', dtype=torch.float64)
tensor([-2.3375, -3.4679, -3.4989, -4.2810, -4.1784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1098, device='cuda:0', dtype=torch.float64)
tensor([-2.3397, -3.4645, -3.4957, -4.2807, -4.1775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-2.3411, -3.4619, -3.4911, -4.2754, -4.1809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2071, device='cuda:0', dtype=torch.float64)
tensor([-2.3395, -3.4596, -3.4873, -4.2696, -4.1836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1919, device='cuda:0', dtype=torch.float64)
tensor([-2.3396, -3.4620, -3.4815, -4.2643, -4.1892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-2.3391, -3.4640, -3.4762, -4.2572, -4.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0837, device='cuda:0', dtype=torch.float64)
tensor([-2.3416, -3.4645, -3.4721, -4.2517, -4.2028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0314, device='cuda:0', dtype=torch.float64)
tensor([-2.3424, -3.4661, -3.4671, -4.2493, -4.2086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4122, device='cuda:0', dtype=torch.float64)
tensor([-2.3412, -3.4699, -3.4621, -4.2470, -4.2115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2739, device='cuda:0', dtype=torch.float64)
tensor([-2.3413, -3.4737, -3.4567, -4.2458, -4.2138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9941, device='cuda:0', dtype=torch.float64)
tensor([-2.3419, -3.4765, -3.4513, -4.2469, -4.2148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1372, device='cuda:0', dtype=torch.float64)
tensor([-2.3431, -3.4810, -3.4464, -4.2513, -4.2134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-2.3458, -3.4871, -3.4434, -4.2555, -4.2093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0150, device='cuda:0', dtype=torch.float64)
tensor([-2.3485, -3.4918, -3.4426, -4.2581, -4.2034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9990, device='cuda:0', dtype=torch.float64)
tensor([-2.3513, -3.4960, -3.4421, -4.2593, -4.1966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2105, device='cuda:0', dtype=torch.float64)
tensor([-2.3520, -3.4982, -3.4428, -4.2607, -4.1879], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0601, device='cuda:0', dtype=torch.float64)
tensor([-2.3516, -3.4979, -3.4444, -4.2609, -4.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2281, device='cuda:0', dtype=torch.float64)
tensor([-2.3500, -3.4959, -3.4491, -4.2573, -4.1757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3128, device='cuda:0', dtype=torch.float64)
tensor([-2.3464, -3.4909, -3.4534, -4.2549, -4.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2726, device='cuda:0', dtype=torch.float64)
tensor([-2.3471, -3.4841, -3.4576, -4.2513, -4.1686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1653, device='cuda:0', dtype=torch.float64)
tensor([-2.3465, -3.4791, -3.4627, -4.2480, -4.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0947, device='cuda:0', dtype=torch.float64)
tensor([-2.3464, -3.4739, -3.4668, -4.2475, -4.1690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2186, device='cuda:0', dtype=torch.float64)
tensor([-2.3453, -3.4693, -3.4715, -4.2494, -4.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1008, device='cuda:0', dtype=torch.float64)
tensor([-2.3450, -3.4655, -3.4738, -4.2515, -4.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0241, device='cuda:0', dtype=torch.float64)
tensor([-2.3433, -3.4618, -3.4748, -4.2550, -4.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1650, device='cuda:0', dtype=torch.float64)
tensor([-2.3430, -3.4601, -3.4742, -4.2579, -4.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2070, device='cuda:0', dtype=torch.float64)
tensor([-2.3431, -3.4583, -3.4724, -4.2611, -4.1880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-2.3413, -3.4581, -3.4718, -4.2645, -4.1907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1714, device='cuda:0', dtype=torch.float64)
tensor([-2.3414, -3.4589, -3.4702, -4.2660, -4.1941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1054, device='cuda:0', dtype=torch.float64)
tensor([-2.3394, -3.4571, -3.4708, -4.2698, -4.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3176, device='cuda:0', dtype=torch.float64)
tensor([-2.3384, -3.4574, -3.4731, -4.2701, -4.1936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0284, device='cuda:0', dtype=torch.float64)
tensor([-2.3382, -3.4617, -3.4755, -4.2711, -4.1926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1926, device='cuda:0', dtype=torch.float64)
tensor([-2.3369, -3.4600, -3.4758, -4.2733, -4.1946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1312, device='cuda:0', dtype=torch.float64)
tensor([-2.3358, -3.4599, -3.4769, -4.2748, -4.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1497, device='cuda:0', dtype=torch.float64)
tensor([-2.3336, -3.4607, -3.4778, -4.2790, -4.1899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1166, device='cuda:0', dtype=torch.float64)
tensor([-2.3315, -3.4615, -3.4805, -4.2798, -4.1883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1035, device='cuda:0', dtype=torch.float64)
tensor([-2.3292, -3.4625, -3.4852, -4.2781, -4.1872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0470, device='cuda:0', dtype=torch.float64)
tensor([-2.3282, -3.4614, -3.4892, -4.2768, -4.1844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0384, device='cuda:0', dtype=torch.float64)
tensor([-2.3273, -3.4575, -3.4951, -4.2769, -4.1798], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0527, device='cuda:0', dtype=torch.float64)
tensor([-2.3272, -3.4532, -3.4991, -4.2743, -4.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2094, device='cuda:0', dtype=torch.float64)
tensor([-2.3281, -3.4495, -3.5028, -4.2706, -4.1774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0876, device='cuda:0', dtype=torch.float64)
tensor([-2.3271, -3.4480, -3.5059, -4.2674, -4.1792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1594, device='cuda:0', dtype=torch.float64)
tensor([-2.3242, -3.4465, -3.5093, -4.2643, -4.1804], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1174, device='cuda:0', dtype=torch.float64)
tensor([-2.3229, -3.4447, -3.5143, -4.2588, -4.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1370, device='cuda:0', dtype=torch.float64)
tensor([-2.3207, -3.4481, -3.5211, -4.2519, -4.1802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1116, device='cuda:0', dtype=torch.float64)
tensor([-2.3175, -3.4514, -3.5298, -4.2457, -4.1789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-2.3145, -3.4583, -3.5392, -4.2397, -4.1744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1095, device='cuda:0', dtype=torch.float64)
tensor([-2.3116, -3.4637, -3.5461, -4.2346, -4.1706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0335, device='cuda:0', dtype=torch.float64)
tensor([-2.3101, -3.4661, -3.5520, -4.2296, -4.1681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1511, device='cuda:0', dtype=torch.float64)
tensor([-2.3108, -3.4660, -3.5555, -4.2260, -4.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2541, device='cuda:0', dtype=torch.float64)
tensor([-2.3107, -3.4652, -3.5555, -4.2224, -4.1664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2309, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.4637, -3.5554, -4.2175, -4.1669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9991, device='cuda:0', dtype=torch.float64)
tensor([-2.3122, -3.4606, -3.5533, -4.2155, -4.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9734, device='cuda:0', dtype=torch.float64)
tensor([-2.3138, -3.4560, -3.5483, -4.2144, -4.1751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1063, device='cuda:0', dtype=torch.float64)
tensor([-2.3177, -3.4500, -3.5408, -4.2153, -4.1803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1690, device='cuda:0', dtype=torch.float64)
tensor([-2.3225, -3.4429, -3.5344, -4.2172, -4.1824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1256, device='cuda:0', dtype=torch.float64)
tensor([-2.3274, -3.4366, -3.5278, -4.2206, -4.1834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9265, device='cuda:0', dtype=torch.float64)
tensor([-2.3313, -3.4332, -3.5210, -4.2238, -4.1847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2344, device='cuda:0', dtype=torch.float64)
tensor([-2.3325, -3.4344, -3.5139, -4.2272, -4.1840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1524, device='cuda:0', dtype=torch.float64)
tensor([-2.3330, -3.4349, -3.5081, -4.2297, -4.1828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0604, device='cuda:0', dtype=torch.float64)
tensor([-2.3340, -3.4330, -3.5028, -4.2304, -4.1801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1956, device='cuda:0', dtype=torch.float64)
tensor([-2.3347, -3.4324, -3.4974, -4.2343, -4.1794], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9567, device='cuda:0', dtype=torch.float64)
tensor([-2.3316, -3.4325, -3.4943, -4.2391, -4.1772], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1781, device='cuda:0', dtype=torch.float64)
tensor([-2.3284, -3.4309, -3.4884, -4.2427, -4.1768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2798, device='cuda:0', dtype=torch.float64)
tensor([-2.3253, -3.4300, -3.4837, -4.2502, -4.1734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2483, device='cuda:0', dtype=torch.float64)
tensor([-2.3229, -3.4321, -3.4796, -4.2555, -4.1715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3455, device='cuda:0', dtype=torch.float64)
tensor([-2.3216, -3.4344, -3.4765, -4.2620, -4.1673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([-2.3205, -3.4371, -3.4734, -4.2676, -4.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2058, device='cuda:0', dtype=torch.float64)
tensor([-2.3209, -3.4398, -3.4701, -4.2730, -4.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2067, device='cuda:0', dtype=torch.float64)
tensor([-2.3226, -3.4407, -3.4692, -4.2790, -4.1578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1151, device='cuda:0', dtype=torch.float64)
tensor([-2.3261, -3.4403, -3.4688, -4.2842, -4.1528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2779, device='cuda:0', dtype=torch.float64)
tensor([-2.3295, -3.4392, -3.4691, -4.2896, -4.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2555, device='cuda:0', dtype=torch.float64)
tensor([-2.3289, -3.4375, -3.4716, -4.2947, -4.1369], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1141, device='cuda:0', dtype=torch.float64)
tensor([-2.3284, -3.4357, -3.4743, -4.2947, -4.1287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1387, device='cuda:0', dtype=torch.float64)
tensor([-2.3284, -3.4331, -3.4792, -4.2932, -4.1174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-2.3266, -3.4313, -3.4838, -4.2908, -4.1071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1192, device='cuda:0', dtype=torch.float64)
tensor([-2.3248, -3.4306, -3.4857, -4.2844, -4.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1085, device='cuda:0', dtype=torch.float64)
tensor([-2.3243, -3.4319, -3.4866, -4.2765, -4.0928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1285, device='cuda:0', dtype=torch.float64)
tensor([-2.3265, -3.4320, -3.4849, -4.2644, -4.0888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0662, device='cuda:0', dtype=torch.float64)
tensor([-2.3275, -3.4331, -3.4835, -4.2534, -4.0857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1415, device='cuda:0', dtype=torch.float64)
tensor([-2.3284, -3.4330, -3.4853, -4.2416, -4.0839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0549, device='cuda:0', dtype=torch.float64)
tensor([-2.3326, -3.4327, -3.4850, -4.2296, -4.0822], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1067, device='cuda:0', dtype=torch.float64)
tensor([-2.3350, -3.4314, -3.4853, -4.2239, -4.0833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([-2.3377, -3.4281, -3.4844, -4.2172, -4.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1657, device='cuda:0', dtype=torch.float64)
tensor([-2.3412, -3.4258, -3.4819, -4.2147, -4.0902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1977, device='cuda:0', dtype=torch.float64)
tensor([-2.3475, -3.4239, -3.4779, -4.2157, -4.0956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1598, device='cuda:0', dtype=torch.float64)
tensor([-2.3542, -3.4229, -3.4739, -4.2124, -4.1012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0207, device='cuda:0', dtype=torch.float64)
tensor([-2.3575, -3.4219, -3.4705, -4.2085, -4.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0943, device='cuda:0', dtype=torch.float64)
tensor([-2.3583, -3.4211, -3.4654, -4.2061, -4.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0830, device='cuda:0', dtype=torch.float64)
tensor([-2.3589, -3.4241, -3.4593, -4.2051, -4.1186], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9940, device='cuda:0', dtype=torch.float64)
tensor([-2.3582, -3.4268, -3.4542, -4.2028, -4.1250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1129, device='cuda:0', dtype=torch.float64)
tensor([-2.3549, -3.4311, -3.4507, -4.2003, -4.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-2.3507, -3.4354, -3.4504, -4.1996, -4.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([-2.3469, -3.4392, -3.4478, -4.1997, -4.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9875, device='cuda:0', dtype=torch.float64)
tensor([-2.3430, -3.4400, -3.4463, -4.2045, -4.1457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3460, device='cuda:0', dtype=torch.float64)
tensor([-2.3410, -3.4406, -3.4450, -4.2084, -4.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-2.3362, -3.4410, -3.4446, -4.2151, -4.1507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3383, device='cuda:0', dtype=torch.float64)
tensor([-2.3341, -3.4436, -3.4451, -4.2225, -4.1494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([-2.3312, -3.4464, -3.4469, -4.2291, -4.1456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0219, device='cuda:0', dtype=torch.float64)
tensor([-2.3279, -3.4502, -3.4485, -4.2353, -4.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1654, device='cuda:0', dtype=torch.float64)
tensor([-2.3277, -3.4516, -3.4491, -4.2376, -4.1358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3060, device='cuda:0', dtype=torch.float64)
tensor([-2.3278, -3.4520, -3.4496, -4.2414, -4.1313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2332, device='cuda:0', dtype=torch.float64)
tensor([-2.3254, -3.4540, -3.4521, -4.2452, -4.1233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1676, device='cuda:0', dtype=torch.float64)
tensor([-2.3222, -3.4562, -3.4530, -4.2487, -4.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0306, device='cuda:0', dtype=torch.float64)
tensor([-2.3217, -3.4602, -3.4517, -4.2495, -4.1152], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1400, device='cuda:0', dtype=torch.float64)
tensor([-2.3220, -3.4647, -3.4483, -4.2454, -4.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1640, device='cuda:0', dtype=torch.float64)
tensor([-2.3194, -3.4664, -3.4437, -4.2407, -4.1119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2017, device='cuda:0', dtype=torch.float64)
tensor([-2.3181, -3.4684, -3.4397, -4.2352, -4.1114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1604, device='cuda:0', dtype=torch.float64)
tensor([-2.3186, -3.4686, -3.4342, -4.2295, -4.1125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9515, device='cuda:0', dtype=torch.float64)
tensor([-2.3169, -3.4701, -3.4287, -4.2245, -4.1154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0021, device='cuda:0', dtype=torch.float64)
tensor([-2.3150, -3.4696, -3.4246, -4.2189, -4.1196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0214, device='cuda:0', dtype=torch.float64)
tensor([-2.3127, -3.4710, -3.4213, -4.2149, -4.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1602, device='cuda:0', dtype=torch.float64)
tensor([-2.3083, -3.4699, -3.4183, -4.2148, -4.1274], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1616, device='cuda:0', dtype=torch.float64)
tensor([-2.3065, -3.4679, -3.4147, -4.2170, -4.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2795, device='cuda:0', dtype=torch.float64)
tensor([-2.3076, -3.4644, -3.4086, -4.2192, -4.1367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1260, device='cuda:0', dtype=torch.float64)
tensor([-2.3085, -3.4627, -3.4031, -4.2250, -4.1377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0088, device='cuda:0', dtype=torch.float64)
tensor([-2.3092, -3.4598, -3.4006, -4.2347, -4.1387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2966, device='cuda:0', dtype=torch.float64)
tensor([-2.3084, -3.4588, -3.4037, -4.2473, -4.1391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2650, device='cuda:0', dtype=torch.float64)
tensor([-2.3131, -3.4581, -3.4051, -4.2595, -4.1418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1352, device='cuda:0', dtype=torch.float64)
tensor([-2.3156, -3.4563, -3.4069, -4.2700, -4.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1048, device='cuda:0', dtype=torch.float64)
tensor([-2.3204, -3.4555, -3.4072, -4.2785, -4.1491], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0253, device='cuda:0', dtype=torch.float64)
tensor([-2.3238, -3.4540, -3.4065, -4.2850, -4.1547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1364, device='cuda:0', dtype=torch.float64)
tensor([-2.3265, -3.4502, -3.4049, -4.2865, -4.1612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9549, device='cuda:0', dtype=torch.float64)
tensor([-2.3252, -3.4461, -3.4048, -4.2842, -4.1670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2468, device='cuda:0', dtype=torch.float64)
tensor([-2.3223, -3.4421, -3.4053, -4.2781, -4.1719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2729, device='cuda:0', dtype=torch.float64)
tensor([-2.3187, -3.4375, -3.4074, -4.2714, -4.1747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0614, device='cuda:0', dtype=torch.float64)
tensor([-2.3153, -3.4363, -3.4093, -4.2615, -4.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2252, device='cuda:0', dtype=torch.float64)
tensor([-2.3123, -3.4370, -3.4131, -4.2516, -4.1714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1157, device='cuda:0', dtype=torch.float64)
tensor([-2.3101, -3.4407, -3.4163, -4.2443, -4.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1228, device='cuda:0', dtype=torch.float64)
tensor([-2.3103, -3.4434, -3.4203, -4.2368, -4.1576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3290, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.4476, -3.4242, -4.2301, -4.1499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2052, device='cuda:0', dtype=torch.float64)
tensor([-2.3117, -3.4521, -3.4279, -4.2246, -4.1394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0199, device='cuda:0', dtype=torch.float64)
tensor([-2.3127, -3.4582, -3.4306, -4.2210, -4.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0435, device='cuda:0', dtype=torch.float64)
tensor([-2.3163, -3.4637, -3.4325, -4.2164, -4.1235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0308, device='cuda:0', dtype=torch.float64)
tensor([-2.3188, -3.4658, -3.4329, -4.2141, -4.1154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2619, device='cuda:0', dtype=torch.float64)
tensor([-2.3239, -3.4683, -3.4313, -4.2112, -4.1086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0651, device='cuda:0', dtype=torch.float64)
tensor([-2.3261, -3.4687, -3.4311, -4.2108, -4.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0217, device='cuda:0', dtype=torch.float64)
tensor([-2.3273, -3.4645, -3.4330, -4.2148, -4.1009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1451, device='cuda:0', dtype=torch.float64)
tensor([-2.3252, -3.4622, -3.4343, -4.2237, -4.0992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2047, device='cuda:0', dtype=torch.float64)
tensor([-2.3242, -3.4551, -3.4317, -4.2293, -4.0981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1830, device='cuda:0', dtype=torch.float64)
tensor([-2.3246, -3.4476, -3.4285, -4.2349, -4.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-2.3239, -3.4406, -3.4267, -4.2395, -4.0983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2635, device='cuda:0', dtype=torch.float64)
tensor([-2.3253, -3.4331, -3.4220, -4.2412, -4.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0764, device='cuda:0', dtype=torch.float64)
tensor([-2.3258, -3.4291, -3.4161, -4.2398, -4.0975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1156, device='cuda:0', dtype=torch.float64)
tensor([-2.3247, -3.4235, -3.4096, -4.2372, -4.0994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0964, device='cuda:0', dtype=torch.float64)
tensor([-2.3218, -3.4184, -3.4044, -4.2377, -4.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0477, device='cuda:0', dtype=torch.float64)
tensor([-2.3166, -3.4168, -3.4010, -4.2402, -4.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-2.3127, -3.4205, -3.3964, -4.2446, -4.1190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1301, device='cuda:0', dtype=torch.float64)
tensor([-2.3108, -3.4264, -3.3928, -4.2515, -4.1289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2771, device='cuda:0', dtype=torch.float64)
tensor([-2.3110, -3.4323, -3.3851, -4.2543, -4.1408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2863, device='cuda:0', dtype=torch.float64)
tensor([-2.3090, -3.4363, -3.3786, -4.2567, -4.1504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2310, device='cuda:0', dtype=torch.float64)
tensor([-2.3085, -3.4399, -3.3742, -4.2619, -4.1579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0254, device='cuda:0', dtype=torch.float64)
tensor([-2.3112, -3.4403, -3.3707, -4.2644, -4.1644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1608, device='cuda:0', dtype=torch.float64)
tensor([-2.3187, -3.4353, -3.3669, -4.2642, -4.1696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0542, device='cuda:0', dtype=torch.float64)
tensor([-2.3263, -3.4281, -3.3662, -4.2599, -4.1724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2335, device='cuda:0', dtype=torch.float64)
tensor([-2.3333, -3.4208, -3.3658, -4.2547, -4.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1305, device='cuda:0', dtype=torch.float64)
tensor([-2.3406, -3.4120, -3.3690, -4.2489, -4.1688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0629, device='cuda:0', dtype=torch.float64)
tensor([-2.3455, -3.4040, -3.3735, -4.2451, -4.1616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1374, device='cuda:0', dtype=torch.float64)
tensor([-2.3476, -3.3943, -3.3789, -4.2410, -4.1557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0856, device='cuda:0', dtype=torch.float64)
tensor([-2.3476, -3.3875, -3.3837, -4.2355, -4.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1085, device='cuda:0', dtype=torch.float64)
tensor([-2.3459, -3.3794, -3.3857, -4.2321, -4.1466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2414, device='cuda:0', dtype=torch.float64)
tensor([-2.3455, -3.3720, -3.3879, -4.2269, -4.1410], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1435, device='cuda:0', dtype=torch.float64)
tensor([-2.3444, -3.3677, -3.3915, -4.2210, -4.1350], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2665, device='cuda:0', dtype=torch.float64)
tensor([-2.3429, -3.3636, -3.3942, -4.2125, -4.1295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0601, device='cuda:0', dtype=torch.float64)
tensor([-2.3385, -3.3591, -3.3974, -4.2039, -4.1255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([-2.3313, -3.3567, -3.4016, -4.1924, -4.1198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0235, device='cuda:0', dtype=torch.float64)
tensor([-2.3238, -3.3564, -3.4063, -4.1810, -4.1153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-2.3157, -3.3599, -3.4114, -4.1678, -4.1069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2052, device='cuda:0', dtype=torch.float64)
tensor([-2.3106, -3.3652, -3.4150, -4.1567, -4.1014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0818, device='cuda:0', dtype=torch.float64)
tensor([-2.3056, -3.3698, -3.4185, -4.1492, -4.0969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1370, device='cuda:0', dtype=torch.float64)
tensor([-2.3030, -3.3742, -3.4212, -4.1482, -4.0933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2208, device='cuda:0', dtype=torch.float64)
tensor([-2.3032, -3.3788, -3.4219, -4.1514, -4.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1799, device='cuda:0', dtype=torch.float64)
tensor([-2.3011, -3.3821, -3.4228, -4.1543, -4.0905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9005, device='cuda:0', dtype=torch.float64)
tensor([-2.3000, -3.3862, -3.4218, -4.1587, -4.0926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0323, device='cuda:0', dtype=torch.float64)
tensor([-2.2983, -3.3900, -3.4240, -4.1648, -4.0935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3553, device='cuda:0', dtype=torch.float64)
tensor([-2.2988, -3.3943, -3.4272, -4.1674, -4.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1972, device='cuda:0', dtype=torch.float64)
tensor([-2.2997, -3.3969, -3.4316, -4.1714, -4.0951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1910, device='cuda:0', dtype=torch.float64)
tensor([-2.3023, -3.3969, -3.4361, -4.1775, -4.0946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0797, device='cuda:0', dtype=torch.float64)
tensor([-2.3065, -3.3971, -3.4401, -4.1829, -4.0930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2778, device='cuda:0', dtype=torch.float64)
tensor([-2.3102, -3.3976, -3.4442, -4.1877, -4.0911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0182, device='cuda:0', dtype=torch.float64)
tensor([-2.3158, -3.3978, -3.4466, -4.1914, -4.0890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0432, device='cuda:0', dtype=torch.float64)
tensor([-2.3228, -3.4004, -3.4484, -4.1947, -4.0878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1700, device='cuda:0', dtype=torch.float64)
tensor([-2.3321, -3.4037, -3.4485, -4.2005, -4.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1755, device='cuda:0', dtype=torch.float64)
tensor([-2.3380, -3.4109, -3.4494, -4.2047, -4.0904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2639, device='cuda:0', dtype=torch.float64)
tensor([-2.3421, -3.4151, -3.4509, -4.2057, -4.0925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0413, device='cuda:0', dtype=torch.float64)
tensor([-2.3456, -3.4193, -3.4497, -4.2043, -4.0968], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0766, device='cuda:0', dtype=torch.float64)
tensor([-2.3479, -3.4233, -3.4485, -4.2034, -4.1010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0483, device='cuda:0', dtype=torch.float64)
tensor([-2.3487, -3.4274, -3.4464, -4.1998, -4.1050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2707, device='cuda:0', dtype=torch.float64)
tensor([-2.3497, -3.4314, -3.4433, -4.1948, -4.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1265, device='cuda:0', dtype=torch.float64)
tensor([-2.3506, -3.4326, -3.4399, -4.1920, -4.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1557, device='cuda:0', dtype=torch.float64)
tensor([-2.3480, -3.4349, -3.4408, -4.1885, -4.1194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0636, device='cuda:0', dtype=torch.float64)
tensor([-2.3474, -3.4343, -3.4419, -4.1854, -4.1172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0966, device='cuda:0', dtype=torch.float64)
tensor([-2.3436, -3.4343, -3.4435, -4.1857, -4.1122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9487, device='cuda:0', dtype=torch.float64)
tensor([-2.3412, -3.4345, -3.4412, -4.1840, -4.1063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0382, device='cuda:0', dtype=torch.float64)
tensor([-2.3397, -3.4382, -3.4376, -4.1826, -4.1014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0728, device='cuda:0', dtype=torch.float64)
tensor([-2.3367, -3.4418, -3.4347, -4.1837, -4.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1407, device='cuda:0', dtype=torch.float64)
tensor([-2.3364, -3.4469, -3.4334, -4.1813, -4.0902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([-2.3350, -3.4525, -3.4328, -4.1774, -4.0856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1957, device='cuda:0', dtype=torch.float64)
tensor([-2.3313, -3.4578, -3.4318, -4.1751, -4.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1582, device='cuda:0', dtype=torch.float64)
tensor([-2.3293, -3.4593, -3.4311, -4.1710, -4.0796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0248, device='cuda:0', dtype=torch.float64)
tensor([-2.3270, -3.4606, -3.4331, -4.1696, -4.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2797, device='cuda:0', dtype=torch.float64)
tensor([-2.3227, -3.4581, -3.4372, -4.1680, -4.0696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1715, device='cuda:0', dtype=torch.float64)
tensor([-2.3175, -3.4502, -3.4425, -4.1660, -4.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3583, device='cuda:0', dtype=torch.float64)
tensor([-2.3137, -3.4441, -3.4480, -4.1655, -4.0530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2904, device='cuda:0', dtype=torch.float64)
tensor([-2.3114, -3.4391, -3.4519, -4.1679, -4.0478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2193, device='cuda:0', dtype=torch.float64)
tensor([-2.3094, -3.4347, -3.4527, -4.1689, -4.0433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0069, device='cuda:0', dtype=torch.float64)
tensor([-2.3071, -3.4286, -3.4525, -4.1683, -4.0360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1452, device='cuda:0', dtype=torch.float64)
tensor([-2.3055, -3.4242, -3.4495, -4.1693, -4.0299], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2343, device='cuda:0', dtype=torch.float64)
tensor([-2.3011, -3.4214, -3.4477, -4.1758, -4.0251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0264, device='cuda:0', dtype=torch.float64)
tensor([-2.2996, -3.4156, -3.4420, -4.1791, -4.0245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0307, device='cuda:0', dtype=torch.float64)
tensor([-2.2996, -3.4094, -3.4375, -4.1811, -4.0241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1933, device='cuda:0', dtype=torch.float64)
tensor([-2.3026, -3.4033, -3.4326, -4.1805, -4.0248], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1043, device='cuda:0', dtype=torch.float64)
tensor([-2.3048, -3.3973, -3.4287, -4.1820, -4.0241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1460, device='cuda:0', dtype=torch.float64)
tensor([-2.3089, -3.3926, -3.4225, -4.1827, -4.0268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1896, device='cuda:0', dtype=torch.float64)
tensor([-2.3142, -3.3922, -3.4141, -4.1815, -4.0315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1161, device='cuda:0', dtype=torch.float64)
tensor([-2.3206, -3.3899, -3.4060, -4.1771, -4.0377], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([-2.3254, -3.3920, -3.3995, -4.1738, -4.0455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0694, device='cuda:0', dtype=torch.float64)
tensor([-2.3293, -3.3977, -3.3933, -4.1689, -4.0511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1500, device='cuda:0', dtype=torch.float64)
tensor([-2.3326, -3.4067, -3.3888, -4.1621, -4.0558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1532, device='cuda:0', dtype=torch.float64)
tensor([-2.3390, -3.4140, -3.3848, -4.1586, -4.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3025, device='cuda:0', dtype=torch.float64)
tensor([-2.3467, -3.4221, -3.3807, -4.1531, -4.0657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2095, device='cuda:0', dtype=torch.float64)
tensor([-2.3533, -3.4308, -3.3772, -4.1504, -4.0719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3293, device='cuda:0', dtype=torch.float64)
tensor([-2.3617, -3.4382, -3.3748, -4.1489, -4.0776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2960, device='cuda:0', dtype=torch.float64)
tensor([-2.3688, -3.4430, -3.3714, -4.1508, -4.0839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9955, device='cuda:0', dtype=torch.float64)
tensor([-2.3731, -3.4474, -3.3710, -4.1541, -4.0880], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2420, device='cuda:0', dtype=torch.float64)
tensor([-2.3762, -3.4506, -3.3745, -4.1603, -4.0909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2091, device='cuda:0', dtype=torch.float64)
tensor([-2.3787, -3.4518, -3.3794, -4.1637, -4.0934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0397, device='cuda:0', dtype=torch.float64)
tensor([-2.3792, -3.4504, -3.3844, -4.1682, -4.0948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0876, device='cuda:0', dtype=torch.float64)
tensor([-2.3778, -3.4523, -3.3899, -4.1742, -4.0934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1287, device='cuda:0', dtype=torch.float64)
tensor([-2.3773, -3.4513, -3.3915, -4.1780, -4.0973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0013, device='cuda:0', dtype=torch.float64)
tensor([-2.3755, -3.4501, -3.3913, -4.1813, -4.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3712, device='cuda:0', dtype=torch.float64)
tensor([-2.3735, -3.4476, -3.3922, -4.1839, -4.0990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1259, device='cuda:0', dtype=torch.float64)
tensor([-2.3733, -3.4449, -3.3943, -4.1867, -4.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2440, device='cuda:0', dtype=torch.float64)
tensor([-2.3740, -3.4416, -3.3942, -4.1875, -4.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0676, device='cuda:0', dtype=torch.float64)
tensor([-2.3738, -3.4381, -3.3927, -4.1856, -4.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1829, device='cuda:0', dtype=torch.float64)
tensor([-2.3717, -3.4291, -3.3908, -4.1872, -4.0941], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2820, device='cuda:0', dtype=torch.float64)
tensor([-2.3685, -3.4198, -3.3898, -4.1917, -4.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0834, device='cuda:0', dtype=torch.float64)
tensor([-2.3640, -3.4105, -3.3892, -4.1960, -4.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1191, device='cuda:0', dtype=torch.float64)
tensor([-2.3570, -3.4014, -3.3910, -4.2055, -4.0963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8988, device='cuda:0', dtype=torch.float64)
tensor([-2.3483, -3.3952, -3.3934, -4.2131, -4.0974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2405, device='cuda:0', dtype=torch.float64)
tensor([-2.3445, -3.3885, -3.3975, -4.2194, -4.0980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9925, device='cuda:0', dtype=torch.float64)
tensor([-2.3399, -3.3816, -3.4008, -4.2229, -4.0967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0312, device='cuda:0', dtype=torch.float64)
tensor([-2.3381, -3.3763, -3.4027, -4.2230, -4.0931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2786, device='cuda:0', dtype=torch.float64)
tensor([-2.3342, -3.3774, -3.4066, -4.2210, -4.0857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0840, device='cuda:0', dtype=torch.float64)
tensor([-2.3298, -3.3834, -3.4124, -4.2208, -4.0775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0741, device='cuda:0', dtype=torch.float64)
tensor([-2.3263, -3.3922, -3.4171, -4.2209, -4.0721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1111, device='cuda:0', dtype=torch.float64)
tensor([-2.3221, -3.4011, -3.4214, -4.2174, -4.0672], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1683, device='cuda:0', dtype=torch.float64)
tensor([-2.3166, -3.4121, -3.4260, -4.2148, -4.0654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9384, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.4224, -3.4309, -4.2111, -4.0635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2321, device='cuda:0', dtype=torch.float64)
tensor([-2.3090, -3.4314, -3.4353, -4.2070, -4.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2854, device='cuda:0', dtype=torch.float64)
tensor([-2.3058, -3.4403, -3.4384, -4.2021, -4.0603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0408, device='cuda:0', dtype=torch.float64)
tensor([-2.3048, -3.4434, -3.4396, -4.1932, -4.0603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-2.3066, -3.4433, -3.4407, -4.1845, -4.0596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1261, device='cuda:0', dtype=torch.float64)
tensor([-2.3084, -3.4376, -3.4431, -4.1784, -4.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2495, device='cuda:0', dtype=torch.float64)
tensor([-2.3117, -3.4317, -3.4454, -4.1717, -4.0593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0789, device='cuda:0', dtype=torch.float64)
tensor([-2.3155, -3.4254, -3.4455, -4.1650, -4.0578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0499, device='cuda:0', dtype=torch.float64)
tensor([-2.3211, -3.4261, -3.4441, -4.1594, -4.0567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0890, device='cuda:0', dtype=torch.float64)
tensor([-2.3296, -3.4225, -3.4402, -4.1522, -4.0571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3353, device='cuda:0', dtype=torch.float64)
tensor([-2.3356, -3.4192, -3.4358, -4.1450, -4.0594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0231, device='cuda:0', dtype=torch.float64)
tensor([-2.3397, -3.4181, -3.4307, -4.1365, -4.0625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2027, device='cuda:0', dtype=torch.float64)
tensor([-2.3421, -3.4170, -3.4265, -4.1318, -4.0652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9997, device='cuda:0', dtype=torch.float64)
tensor([-2.3418, -3.4203, -3.4221, -4.1309, -4.0677], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0554, device='cuda:0', dtype=torch.float64)
tensor([-2.3414, -3.4247, -3.4174, -4.1304, -4.0691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0845, device='cuda:0', dtype=torch.float64)
tensor([-2.3403, -3.4307, -3.4111, -4.1309, -4.0724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1762, device='cuda:0', dtype=torch.float64)
tensor([-2.3414, -3.4378, -3.4054, -4.1321, -4.0743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2859, device='cuda:0', dtype=torch.float64)
tensor([-2.3437, -3.4433, -3.4021, -4.1320, -4.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2011, device='cuda:0', dtype=torch.float64)
tensor([-2.3430, -3.4494, -3.4032, -4.1347, -4.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1604, device='cuda:0', dtype=torch.float64)
tensor([-2.3410, -3.4567, -3.4041, -4.1383, -4.0767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9613, device='cuda:0', dtype=torch.float64)
tensor([-2.3366, -3.4617, -3.4064, -4.1401, -4.0766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9860, device='cuda:0', dtype=torch.float64)
tensor([-2.3328, -3.4624, -3.4072, -4.1411, -4.0778], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2850, device='cuda:0', dtype=torch.float64)
tensor([-2.3334, -3.4602, -3.4076, -4.1399, -4.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8935, device='cuda:0', dtype=torch.float64)
tensor([-2.3359, -3.4564, -3.4077, -4.1386, -4.0752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1839, device='cuda:0', dtype=torch.float64)
tensor([-2.3385, -3.4497, -3.4077, -4.1337, -4.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([-2.3399, -3.4393, -3.4103, -4.1292, -4.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9746, device='cuda:0', dtype=torch.float64)
tensor([-2.3404, -3.4293, -3.4128, -4.1265, -4.0730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9074, device='cuda:0', dtype=torch.float64)
tensor([-2.3403, -3.4197, -3.4136, -4.1249, -4.0706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0782, device='cuda:0', dtype=torch.float64)
tensor([-2.3399, -3.4131, -3.4137, -4.1222, -4.0694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2558, device='cuda:0', dtype=torch.float64)
tensor([-2.3427, -3.4067, -3.4129, -4.1174, -4.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2794, device='cuda:0', dtype=torch.float64)
tensor([-2.3432, -3.4058, -3.4135, -4.1135, -4.0701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2084, device='cuda:0', dtype=torch.float64)
tensor([-2.3426, -3.4083, -3.4145, -4.1123, -4.0728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9861, device='cuda:0', dtype=torch.float64)
tensor([-2.3404, -3.4135, -3.4174, -4.1122, -4.0726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2792, device='cuda:0', dtype=torch.float64)
tensor([-2.3348, -3.4206, -3.4220, -4.1155, -4.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2874, device='cuda:0', dtype=torch.float64)
tensor([-2.3298, -3.4331, -3.4265, -4.1179, -4.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-2.3237, -3.4429, -3.4330, -4.1231, -4.0773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0418, device='cuda:0', dtype=torch.float64)
tensor([-2.3198, -3.4495, -3.4367, -4.1256, -4.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0701, device='cuda:0', dtype=torch.float64)
tensor([-2.3168, -3.4537, -3.4406, -4.1259, -4.0735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2302, device='cuda:0', dtype=torch.float64)
tensor([-2.3148, -3.4565, -3.4431, -4.1270, -4.0703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-2.3121, -3.4582, -3.4445, -4.1290, -4.0660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1503, device='cuda:0', dtype=torch.float64)
tensor([-2.3130, -3.4583, -3.4422, -4.1312, -4.0622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0756, device='cuda:0', dtype=torch.float64)
tensor([-2.3146, -3.4561, -3.4408, -4.1379, -4.0582], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0995, device='cuda:0', dtype=torch.float64)
tensor([-2.3162, -3.4526, -3.4391, -4.1434, -4.0531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9635, device='cuda:0', dtype=torch.float64)
tensor([-2.3181, -3.4451, -3.4356, -4.1486, -4.0521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0302, device='cuda:0', dtype=torch.float64)
tensor([-2.3186, -3.4359, -3.4323, -4.1524, -4.0527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1255, device='cuda:0', dtype=torch.float64)
tensor([-2.3185, -3.4283, -3.4262, -4.1590, -4.0545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-2.3193, -3.4205, -3.4200, -4.1632, -4.0607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0688, device='cuda:0', dtype=torch.float64)
tensor([-2.3149, -3.4137, -3.4183, -4.1679, -4.0697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0793, device='cuda:0', dtype=torch.float64)
tensor([-2.3102, -3.4115, -3.4175, -4.1722, -4.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9791, device='cuda:0', dtype=torch.float64)
tensor([-2.3061, -3.4077, -3.4154, -4.1757, -4.0832], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9077, device='cuda:0', dtype=torch.float64)
tensor([-2.3014, -3.4045, -3.4139, -4.1803, -4.0892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1447, device='cuda:0', dtype=torch.float64)
tensor([-2.3007, -3.3996, -3.4096, -4.1825, -4.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0229, device='cuda:0', dtype=torch.float64)
tensor([-2.2985, -3.3945, -3.4052, -4.1834, -4.0997], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3187, device='cuda:0', dtype=torch.float64)
tensor([-2.2924, -3.3953, -3.4005, -4.1816, -4.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2618, device='cuda:0', dtype=torch.float64)
tensor([-2.2874, -3.3974, -3.3933, -4.1782, -4.1071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9976, device='cuda:0', dtype=torch.float64)
tensor([-2.2852, -3.3997, -3.3876, -4.1760, -4.1084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1117, device='cuda:0', dtype=torch.float64)
tensor([-2.2848, -3.4015, -3.3861, -4.1747, -4.1076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1603, device='cuda:0', dtype=torch.float64)
tensor([-2.2853, -3.4011, -3.3873, -4.1739, -4.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0465, device='cuda:0', dtype=torch.float64)
tensor([-2.2893, -3.4012, -3.3862, -4.1724, -4.1053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1764, device='cuda:0', dtype=torch.float64)
tensor([-2.2950, -3.4020, -3.3861, -4.1672, -4.1009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1598, device='cuda:0', dtype=torch.float64)
tensor([-2.3013, -3.4014, -3.3856, -4.1641, -4.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1871, device='cuda:0', dtype=torch.float64)
tensor([-2.3043, -3.4044, -3.3839, -4.1642, -4.0925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0470, device='cuda:0', dtype=torch.float64)
tensor([-2.3091, -3.4050, -3.3820, -4.1636, -4.0886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-2.3138, -3.4034, -3.3791, -4.1638, -4.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9765, device='cuda:0', dtype=torch.float64)
tensor([-2.3196, -3.3998, -3.3741, -4.1627, -4.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0422, device='cuda:0', dtype=torch.float64)
tensor([-2.3245, -3.3976, -3.3698, -4.1633, -4.0842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1654, device='cuda:0', dtype=torch.float64)
tensor([-2.3237, -3.3997, -3.3699, -4.1650, -4.0797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0544, device='cuda:0', dtype=torch.float64)
tensor([-2.3222, -3.4033, -3.3735, -4.1654, -4.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1818, device='cuda:0', dtype=torch.float64)
tensor([-2.3233, -3.4075, -3.3751, -4.1615, -4.0656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1227, device='cuda:0', dtype=torch.float64)
tensor([-2.3216, -3.4127, -3.3760, -4.1552, -4.0575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1433, device='cuda:0', dtype=torch.float64)
tensor([-2.3184, -3.4191, -3.3770, -4.1463, -4.0498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1788, device='cuda:0', dtype=torch.float64)
tensor([-2.3142, -3.4250, -3.3777, -4.1394, -4.0445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0499, device='cuda:0', dtype=torch.float64)
tensor([-2.3085, -3.4341, -3.3786, -4.1299, -4.0426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1493, device='cuda:0', dtype=torch.float64)
tensor([-2.3064, -3.4425, -3.3782, -4.1172, -4.0434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0869, device='cuda:0', dtype=torch.float64)
tensor([-2.3063, -3.4492, -3.3753, -4.1032, -4.0468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1516, device='cuda:0', dtype=torch.float64)
tensor([-2.3071, -3.4525, -3.3714, -4.0891, -4.0525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9180, device='cuda:0', dtype=torch.float64)
tensor([-2.3076, -3.4571, -3.3663, -4.0778, -4.0566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3035, device='cuda:0', dtype=torch.float64)
tensor([-2.3114, -3.4612, -3.3609, -4.0668, -4.0617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1531, device='cuda:0', dtype=torch.float64)
tensor([-2.3166, -3.4620, -3.3574, -4.0600, -4.0695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1706, device='cuda:0', dtype=torch.float64)
tensor([-2.3235, -3.4596, -3.3556, -4.0551, -4.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1215, device='cuda:0', dtype=torch.float64)
tensor([-2.3307, -3.4541, -3.3539, -4.0539, -4.0791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1630, device='cuda:0', dtype=torch.float64)
tensor([-2.3370, -3.4490, -3.3538, -4.0549, -4.0829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1297, device='cuda:0', dtype=torch.float64)
tensor([-2.3423, -3.4455, -3.3549, -4.0568, -4.0821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1209, device='cuda:0', dtype=torch.float64)
tensor([-2.3464, -3.4452, -3.3560, -4.0623, -4.0802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0050, device='cuda:0', dtype=torch.float64)
tensor([-2.3491, -3.4457, -3.3561, -4.0733, -4.0783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0838, device='cuda:0', dtype=torch.float64)
tensor([-2.3517, -3.4464, -3.3547, -4.0819, -4.0748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1609, device='cuda:0', dtype=torch.float64)
tensor([-2.3557, -3.4442, -3.3528, -4.0871, -4.0724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2741, device='cuda:0', dtype=torch.float64)
tensor([-2.3611, -3.4429, -3.3517, -4.0915, -4.0716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1099, device='cuda:0', dtype=torch.float64)
tensor([-2.3607, -3.4437, -3.3532, -4.0985, -4.0716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1617, device='cuda:0', dtype=torch.float64)
tensor([-2.3599, -3.4417, -3.3555, -4.1057, -4.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0626, device='cuda:0', dtype=torch.float64)
tensor([-2.3582, -3.4375, -3.3588, -4.1144, -4.0674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1438, device='cuda:0', dtype=torch.float64)
tensor([-2.3532, -3.4342, -3.3607, -4.1191, -4.0649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0913, device='cuda:0', dtype=torch.float64)
tensor([-2.3499, -3.4282, -3.3615, -4.1218, -4.0648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2679, device='cuda:0', dtype=torch.float64)
tensor([-2.3419, -3.4254, -3.3650, -4.1257, -4.0610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2010, device='cuda:0', dtype=torch.float64)
tensor([-2.3364, -3.4243, -3.3672, -4.1260, -4.0557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1938, device='cuda:0', dtype=torch.float64)
tensor([-2.3310, -3.4219, -3.3709, -4.1252, -4.0514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.3266, -3.4191, -3.3731, -4.1246, -4.0487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0479, device='cuda:0', dtype=torch.float64)
tensor([-2.3249, -3.4119, -3.3730, -4.1243, -4.0477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1956, device='cuda:0', dtype=torch.float64)
tensor([-2.3242, -3.4063, -3.3704, -4.1214, -4.0461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1746, device='cuda:0', dtype=torch.float64)
tensor([-2.3234, -3.4019, -3.3698, -4.1191, -4.0448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2222, device='cuda:0', dtype=torch.float64)
tensor([-2.3220, -3.4007, -3.3703, -4.1180, -4.0443], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9946, device='cuda:0', dtype=torch.float64)
tensor([-2.3208, -3.4011, -3.3708, -4.1173, -4.0464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-2.3172, -3.4063, -3.3746, -4.1212, -4.0461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2307, device='cuda:0', dtype=torch.float64)
tensor([-2.3129, -3.4124, -3.3775, -4.1230, -4.0495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-2.3107, -3.4208, -3.3805, -4.1211, -4.0514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4031, device='cuda:0', dtype=torch.float64)
tensor([-2.3106, -3.4273, -3.3806, -4.1195, -4.0548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2129, device='cuda:0', dtype=torch.float64)
tensor([-2.3148, -3.4330, -3.3806, -4.1189, -4.0602], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3520, device='cuda:0', dtype=torch.float64)
tensor([-2.3178, -3.4387, -3.3797, -4.1154, -4.0628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1488, device='cuda:0', dtype=torch.float64)
tensor([-2.3232, -3.4459, -3.3792, -4.1135, -4.0644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1648, device='cuda:0', dtype=torch.float64)
tensor([-2.3328, -3.4491, -3.3791, -4.1076, -4.0654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-2.3419, -3.4496, -3.3788, -4.1013, -4.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2427, device='cuda:0', dtype=torch.float64)
tensor([-2.3520, -3.4481, -3.3776, -4.0980, -4.0571], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2427, device='cuda:0', dtype=torch.float64)
tensor([-2.3588, -3.4471, -3.3774, -4.0934, -4.0523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0912, device='cuda:0', dtype=torch.float64)
tensor([-2.3620, -3.4455, -3.3796, -4.0902, -4.0457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0850, device='cuda:0', dtype=torch.float64)
tensor([-2.3649, -3.4450, -3.3826, -4.0906, -4.0363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2263, device='cuda:0', dtype=torch.float64)
tensor([-2.3684, -3.4429, -3.3838, -4.0898, -4.0320], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0855, device='cuda:0', dtype=torch.float64)
tensor([-2.3733, -3.4391, -3.3822, -4.0892, -4.0296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0797, device='cuda:0', dtype=torch.float64)
tensor([-2.3737, -3.4366, -3.3803, -4.0916, -4.0255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1728, device='cuda:0', dtype=torch.float64)
tensor([-2.3755, -3.4306, -3.3770, -4.0979, -4.0195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9426, device='cuda:0', dtype=torch.float64)
tensor([-2.3776, -3.4239, -3.3747, -4.1041, -4.0148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9296, device='cuda:0', dtype=torch.float64)
tensor([-2.3803, -3.4186, -3.3726, -4.1111, -4.0119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-2.3849, -3.4114, -3.3685, -4.1174, -4.0125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1835, device='cuda:0', dtype=torch.float64)
tensor([-2.3887, -3.4011, -3.3656, -4.1263, -4.0146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0159, device='cuda:0', dtype=torch.float64)
tensor([-2.3935, -3.3881, -3.3637, -4.1327, -4.0179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9254, device='cuda:0', dtype=torch.float64)
tensor([-2.3988, -3.3783, -3.3619, -4.1382, -4.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1755, device='cuda:0', dtype=torch.float64)
tensor([-2.4034, -3.3702, -3.3590, -4.1434, -4.0275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0582, device='cuda:0', dtype=torch.float64)
tensor([-2.4062, -3.3673, -3.3559, -4.1449, -4.0313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.4059, -3.3656, -3.3520, -4.1458, -4.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9862, device='cuda:0', dtype=torch.float64)
tensor([-2.4026, -3.3660, -3.3477, -4.1472, -4.0393], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2175, device='cuda:0', dtype=torch.float64)
tensor([-2.3983, -3.3684, -3.3452, -4.1517, -4.0462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3367, device='cuda:0', dtype=torch.float64)
tensor([-2.3950, -3.3695, -3.3459, -4.1552, -4.0521], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0272, device='cuda:0', dtype=torch.float64)
tensor([-2.3932, -3.3691, -3.3474, -4.1561, -4.0574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3350, device='cuda:0', dtype=torch.float64)
tensor([-2.3897, -3.3706, -3.3499, -4.1609, -4.0619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3297, device='cuda:0', dtype=torch.float64)
tensor([-2.3864, -3.3724, -3.3509, -4.1642, -4.0646], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1539, device='cuda:0', dtype=torch.float64)
tensor([-2.3793, -3.3760, -3.3516, -4.1646, -4.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1802, device='cuda:0', dtype=torch.float64)
tensor([-2.3732, -3.3781, -3.3506, -4.1657, -4.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1076, device='cuda:0', dtype=torch.float64)
tensor([-2.3642, -3.3827, -3.3520, -4.1637, -4.0738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1508, device='cuda:0', dtype=torch.float64)
tensor([-2.3550, -3.3870, -3.3550, -4.1609, -4.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1767, device='cuda:0', dtype=torch.float64)
tensor([-2.3464, -3.3924, -3.3555, -4.1568, -4.0774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0994, device='cuda:0', dtype=torch.float64)
tensor([-2.3426, -3.3986, -3.3546, -4.1500, -4.0779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2396, device='cuda:0', dtype=torch.float64)
tensor([-2.3393, -3.4032, -3.3544, -4.1435, -4.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2298, device='cuda:0', dtype=torch.float64)
tensor([-2.3356, -3.4041, -3.3535, -4.1358, -4.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0759, device='cuda:0', dtype=torch.float64)
tensor([-2.3289, -3.4037, -3.3537, -4.1285, -4.0730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1347, device='cuda:0', dtype=torch.float64)
tensor([-2.3240, -3.4032, -3.3533, -4.1226, -4.0693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3812, device='cuda:0', dtype=torch.float64)
tensor([-2.3221, -3.4010, -3.3548, -4.1203, -4.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2773, device='cuda:0', dtype=torch.float64)
tensor([-2.3202, -3.3964, -3.3597, -4.1193, -4.0614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0629, device='cuda:0', dtype=torch.float64)
tensor([-2.3181, -3.3903, -3.3665, -4.1194, -4.0555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0345, device='cuda:0', dtype=torch.float64)
tensor([-2.3172, -3.3838, -3.3723, -4.1187, -4.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1149, device='cuda:0', dtype=torch.float64)
tensor([-2.3201, -3.3762, -3.3772, -4.1162, -4.0379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2144, device='cuda:0', dtype=torch.float64)
tensor([-2.3241, -3.3712, -3.3820, -4.1159, -4.0300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1239, device='cuda:0', dtype=torch.float64)
tensor([-2.3264, -3.3681, -3.3857, -4.1133, -4.0221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0866, device='cuda:0', dtype=torch.float64)
tensor([-2.3298, -3.3661, -3.3875, -4.1104, -4.0148], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2172, device='cuda:0', dtype=torch.float64)
tensor([-2.3330, -3.3669, -3.3880, -4.1066, -4.0121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1501, device='cuda:0', dtype=torch.float64)
tensor([-2.3360, -3.3717, -3.3867, -4.1034, -4.0112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9965, device='cuda:0', dtype=torch.float64)
tensor([-2.3343, -3.3792, -3.3874, -4.1008, -4.0085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1350, device='cuda:0', dtype=torch.float64)
tensor([-2.3314, -3.3876, -3.3868, -4.1001, -4.0096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1355, device='cuda:0', dtype=torch.float64)
tensor([-2.3297, -3.3962, -3.3864, -4.1012, -4.0107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0308, device='cuda:0', dtype=torch.float64)
tensor([-2.3276, -3.4059, -3.3872, -4.1020, -4.0096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2651, device='cuda:0', dtype=torch.float64)
tensor([-2.3261, -3.4103, -3.3882, -4.1022, -4.0098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9819, device='cuda:0', dtype=torch.float64)
tensor([-2.3264, -3.4142, -3.3880, -4.1007, -4.0118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2289, device='cuda:0', dtype=torch.float64)
tensor([-2.3285, -3.4167, -3.3868, -4.0984, -4.0150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2579, device='cuda:0', dtype=torch.float64)
tensor([-2.3311, -3.4184, -3.3856, -4.0965, -4.0158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0367, device='cuda:0', dtype=torch.float64)
tensor([-2.3324, -3.4221, -3.3861, -4.0987, -4.0158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1957, device='cuda:0', dtype=torch.float64)
tensor([-2.3373, -3.4216, -3.3835, -4.1023, -4.0168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0935, device='cuda:0', dtype=torch.float64)
tensor([-2.3412, -3.4199, -3.3835, -4.1097, -4.0178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1876, device='cuda:0', dtype=torch.float64)
tensor([-2.3445, -3.4140, -3.3818, -4.1169, -4.0170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2288, device='cuda:0', dtype=torch.float64)
tensor([-2.3469, -3.4052, -3.3798, -4.1237, -4.0155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3695, device='cuda:0', dtype=torch.float64)
tensor([-2.3528, -3.3987, -3.3758, -4.1267, -4.0139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0878, device='cuda:0', dtype=torch.float64)
tensor([-2.3546, -3.3969, -3.3733, -4.1327, -4.0155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1358, device='cuda:0', dtype=torch.float64)
tensor([-2.3577, -3.3971, -3.3703, -4.1393, -4.0188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1723, device='cuda:0', dtype=torch.float64)
tensor([-2.3595, -3.3999, -3.3672, -4.1432, -4.0217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1970, device='cuda:0', dtype=torch.float64)
tensor([-2.3582, -3.4032, -3.3628, -4.1451, -4.0268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1928, device='cuda:0', dtype=torch.float64)
tensor([-2.3542, -3.4112, -3.3602, -4.1429, -4.0335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2587, device='cuda:0', dtype=torch.float64)
tensor([-2.3507, -3.4186, -3.3536, -4.1358, -4.0461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2535, device='cuda:0', dtype=torch.float64)
tensor([-2.3475, -3.4300, -3.3464, -4.1296, -4.0588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0190, device='cuda:0', dtype=torch.float64)
tensor([-2.3438, -3.4376, -3.3386, -4.1223, -4.0705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2918, device='cuda:0', dtype=torch.float64)
tensor([-2.3400, -3.4401, -3.3354, -4.1160, -4.0800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1753, device='cuda:0', dtype=torch.float64)
tensor([-2.3388, -3.4439, -3.3300, -4.1075, -4.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1331, device='cuda:0', dtype=torch.float64)
tensor([-2.3369, -3.4448, -3.3269, -4.1000, -4.0979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2146, device='cuda:0', dtype=torch.float64)
tensor([-2.3364, -3.4451, -3.3265, -4.0892, -4.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2515, device='cuda:0', dtype=torch.float64)
tensor([-2.3404, -3.4430, -3.3251, -4.0817, -4.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2670, device='cuda:0', dtype=torch.float64)
tensor([-2.3426, -3.4387, -3.3278, -4.0763, -4.1140], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0654, device='cuda:0', dtype=torch.float64)
tensor([-2.3474, -3.4344, -3.3317, -4.0725, -4.1120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2645, device='cuda:0', dtype=torch.float64)
tensor([-2.3530, -3.4310, -3.3363, -4.0707, -4.1078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2685, device='cuda:0', dtype=torch.float64)
tensor([-2.3573, -3.4287, -3.3403, -4.0746, -4.1028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-2.3613, -3.4251, -3.3452, -4.0785, -4.0951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2624, device='cuda:0', dtype=torch.float64)
tensor([-2.3659, -3.4212, -3.3484, -4.0848, -4.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2120, device='cuda:0', dtype=torch.float64)
tensor([-2.3720, -3.4181, -3.3500, -4.0872, -4.0773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0086, device='cuda:0', dtype=torch.float64)
tensor([-2.3769, -3.4162, -3.3523, -4.0926, -4.0683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1452, device='cuda:0', dtype=torch.float64)
tensor([-2.3784, -3.4161, -3.3552, -4.0996, -4.0586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1522, device='cuda:0', dtype=torch.float64)
tensor([-2.3820, -3.4174, -3.3596, -4.1078, -4.0512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([-2.3842, -3.4153, -3.3632, -4.1135, -4.0454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0552, device='cuda:0', dtype=torch.float64)
tensor([-2.3875, -3.4114, -3.3644, -4.1141, -4.0416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([-2.3863, -3.4063, -3.3657, -4.1128, -4.0382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0986, device='cuda:0', dtype=torch.float64)
tensor([-2.3823, -3.4019, -3.3690, -4.1138, -4.0343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1843, device='cuda:0', dtype=torch.float64)
tensor([-2.3772, -3.3999, -3.3728, -4.1117, -4.0317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2846, device='cuda:0', dtype=torch.float64)
tensor([-2.3759, -3.3966, -3.3761, -4.1040, -4.0277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0414, device='cuda:0', dtype=torch.float64)
tensor([-2.3724, -3.3941, -3.3785, -4.0951, -4.0225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2662, device='cuda:0', dtype=torch.float64)
tensor([-2.3723, -3.3910, -3.3817, -4.0891, -4.0161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2769, device='cuda:0', dtype=torch.float64)
tensor([-2.3721, -3.3884, -3.3835, -4.0797, -4.0112], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1026, device='cuda:0', dtype=torch.float64)
tensor([-2.3702, -3.3885, -3.3853, -4.0726, -4.0102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1005, device='cuda:0', dtype=torch.float64)
tensor([-2.3684, -3.3818, -3.3875, -4.0662, -4.0068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1277, device='cuda:0', dtype=torch.float64)
tensor([-2.3639, -3.3811, -3.3908, -4.0617, -4.0050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0505, device='cuda:0', dtype=torch.float64)
tensor([-2.3595, -3.3792, -3.3927, -4.0580, -4.0055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2055, device='cuda:0', dtype=torch.float64)
tensor([-2.3512, -3.3758, -3.3930, -4.0577, -4.0086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1586, device='cuda:0', dtype=torch.float64)
tensor([-2.3427, -3.3741, -3.3936, -4.0621, -4.0111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1677, device='cuda:0', dtype=torch.float64)
tensor([-2.3351, -3.3691, -3.3933, -4.0660, -4.0126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2641, device='cuda:0', dtype=torch.float64)
tensor([-2.3294, -3.3664, -3.3936, -4.0683, -4.0138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1937, device='cuda:0', dtype=torch.float64)
tensor([-2.3252, -3.3652, -3.3938, -4.0738, -4.0144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0805, device='cuda:0', dtype=torch.float64)
tensor([-2.3215, -3.3631, -3.3937, -4.0799, -4.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1624, device='cuda:0', dtype=torch.float64)
tensor([-2.3192, -3.3610, -3.3915, -4.0820, -4.0188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2941, device='cuda:0', dtype=torch.float64)
tensor([-2.3165, -3.3624, -3.3887, -4.0871, -4.0230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1381, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.3657, -3.3874, -4.0948, -4.0259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9653, device='cuda:0', dtype=torch.float64)
tensor([-2.3048, -3.3717, -3.3862, -4.1020, -4.0296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1078, device='cuda:0', dtype=torch.float64)
tensor([-2.3008, -3.3762, -3.3858, -4.1097, -4.0311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1734, device='cuda:0', dtype=torch.float64)
tensor([-2.3006, -3.3837, -3.3832, -4.1158, -4.0309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0412, device='cuda:0', dtype=torch.float64)
tensor([-2.3058, -3.3892, -3.3793, -4.1196, -4.0271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2017, device='cuda:0', dtype=torch.float64)
tensor([-2.3100, -3.3920, -3.3793, -4.1211, -4.0261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1801, device='cuda:0', dtype=torch.float64)
tensor([-2.3147, -3.3930, -3.3806, -4.1231, -4.0196], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2184, device='cuda:0', dtype=torch.float64)
tensor([-2.3214, -3.3893, -3.3808, -4.1233, -4.0119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4118, device='cuda:0', dtype=torch.float64)
tensor([-2.3321, -3.3838, -3.3796, -4.1187, -4.0062], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0562, device='cuda:0', dtype=torch.float64)
tensor([-2.3455, -3.3798, -3.3777, -4.1086, -4.0019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4427, device='cuda:0', dtype=torch.float64)
tensor([-2.3621, -3.3795, -3.3745, -4.0996, -4.0003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1240, device='cuda:0', dtype=torch.float64)
tensor([-2.3752, -3.3815, -3.3721, -4.0889, -3.9991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1205, device='cuda:0', dtype=torch.float64)
tensor([-2.3863, -3.3846, -3.3713, -4.0804, -3.9974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3079, device='cuda:0', dtype=torch.float64)
tensor([-2.3941, -3.3853, -3.3716, -4.0732, -3.9989], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0622, device='cuda:0', dtype=torch.float64)
tensor([-2.3978, -3.3888, -3.3700, -4.0647, -3.9991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2342, device='cuda:0', dtype=torch.float64)
tensor([-2.4004, -3.3885, -3.3733, -4.0562, -3.9994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0327, device='cuda:0', dtype=torch.float64)
tensor([-2.3992, -3.3894, -3.3777, -4.0492, -3.9993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0961, device='cuda:0', dtype=torch.float64)
tensor([-2.3942, -3.3894, -3.3836, -4.0478, -3.9985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2940, device='cuda:0', dtype=torch.float64)
tensor([-2.3879, -3.3915, -3.3843, -4.0512, -4.0027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2487, device='cuda:0', dtype=torch.float64)
tensor([-2.3833, -3.3930, -3.3866, -4.0560, -4.0080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1909, device='cuda:0', dtype=torch.float64)
tensor([-2.3805, -3.3963, -3.3864, -4.0577, -4.0125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2085, device='cuda:0', dtype=torch.float64)
tensor([-2.3818, -3.3991, -3.3831, -4.0595, -4.0193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2134, device='cuda:0', dtype=torch.float64)
tensor([-2.3828, -3.4029, -3.3797, -4.0643, -4.0256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2238, device='cuda:0', dtype=torch.float64)
tensor([-2.3829, -3.4085, -3.3768, -4.0729, -4.0285], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1936, device='cuda:0', dtype=torch.float64)
tensor([-2.3809, -3.4162, -3.3754, -4.0826, -4.0314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1275, device='cuda:0', dtype=torch.float64)
tensor([-2.3765, -3.4202, -3.3730, -4.0875, -4.0357], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2590, device='cuda:0', dtype=torch.float64)
tensor([-2.3703, -3.4235, -3.3716, -4.0921, -4.0372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([-2.3678, -3.4243, -3.3684, -4.0937, -4.0395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9544, device='cuda:0', dtype=torch.float64)
tensor([-2.3656, -3.4238, -3.3668, -4.0978, -4.0373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0216, device='cuda:0', dtype=torch.float64)
tensor([-2.3625, -3.4176, -3.3675, -4.1020, -4.0331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0982, device='cuda:0', dtype=torch.float64)
tensor([-2.3592, -3.4144, -3.3683, -4.1027, -4.0278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-2.3599, -3.4148, -3.3685, -4.1072, -4.0201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0555, device='cuda:0', dtype=torch.float64)
tensor([-2.3598, -3.4158, -3.3692, -4.1140, -4.0139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2419, device='cuda:0', dtype=torch.float64)
tensor([-2.3568, -3.4135, -3.3694, -4.1194, -4.0049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2889, device='cuda:0', dtype=torch.float64)
tensor([-2.3564, -3.4109, -3.3682, -4.1215, -3.9979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2311, device='cuda:0', dtype=torch.float64)
tensor([-2.3531, -3.4106, -3.3667, -4.1216, -3.9908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2336, device='cuda:0', dtype=torch.float64)
tensor([-2.3477, -3.4087, -3.3672, -4.1243, -3.9840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2305, device='cuda:0', dtype=torch.float64)
tensor([-2.3398, -3.4076, -3.3715, -4.1243, -3.9777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0242, device='cuda:0', dtype=torch.float64)
tensor([-2.3327, -3.4063, -3.3762, -4.1251, -3.9715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2483, device='cuda:0', dtype=torch.float64)
tensor([-2.3267, -3.4059, -3.3810, -4.1247, -3.9691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2793, device='cuda:0', dtype=torch.float64)
tensor([-2.3241, -3.4051, -3.3819, -4.1217, -3.9720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1536, device='cuda:0', dtype=torch.float64)
tensor([-2.3250, -3.4011, -3.3822, -4.1197, -3.9762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1634, device='cuda:0', dtype=torch.float64)
tensor([-2.3285, -3.3979, -3.3835, -4.1158, -3.9812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1271, device='cuda:0', dtype=torch.float64)
tensor([-2.3278, -3.3980, -3.3856, -4.1149, -3.9844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2074, device='cuda:0', dtype=torch.float64)
tensor([-2.3296, -3.3992, -3.3906, -4.1125, -3.9883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-2.3293, -3.3999, -3.3952, -4.1069, -3.9912], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1635, device='cuda:0', dtype=torch.float64)
tensor([-2.3300, -3.4015, -3.4023, -4.1030, -3.9925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0824, device='cuda:0', dtype=torch.float64)
tensor([-2.3303, -3.3979, -3.4115, -4.1032, -3.9921], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1760, device='cuda:0', dtype=torch.float64)
tensor([-2.3300, -3.3930, -3.4213, -4.1039, -3.9893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1172, device='cuda:0', dtype=torch.float64)
tensor([-2.3303, -3.3893, -3.4276, -4.1039, -3.9866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1467, device='cuda:0', dtype=torch.float64)
tensor([-2.3264, -3.3858, -3.4328, -4.1035, -3.9869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3315, device='cuda:0', dtype=torch.float64)
tensor([-2.3226, -3.3809, -3.4349, -4.1015, -3.9860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1934, device='cuda:0', dtype=torch.float64)
tensor([-2.3166, -3.3773, -3.4346, -4.0959, -3.9869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2085, device='cuda:0', dtype=torch.float64)
tensor([-2.3109, -3.3756, -3.4342, -4.0907, -3.9882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2194, device='cuda:0', dtype=torch.float64)
tensor([-2.3077, -3.3759, -3.4305, -4.0806, -3.9904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1863, device='cuda:0', dtype=torch.float64)
tensor([-2.3072, -3.3761, -3.4282, -4.0706, -3.9965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9876, device='cuda:0', dtype=torch.float64)
tensor([-2.3048, -3.3786, -3.4230, -4.0642, -4.0059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1794, device='cuda:0', dtype=torch.float64)
tensor([-2.3023, -3.3815, -3.4175, -4.0594, -4.0077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1459, device='cuda:0', dtype=torch.float64)
tensor([-2.3018, -3.3848, -3.4124, -4.0565, -4.0114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1427, device='cuda:0', dtype=torch.float64)
tensor([-2.3006, -3.3867, -3.4063, -4.0585, -4.0134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1103, device='cuda:0', dtype=torch.float64)
tensor([-2.2992, -3.3905, -3.4019, -4.0607, -4.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2206, device='cuda:0', dtype=torch.float64)
tensor([-2.3040, -3.3940, -3.3956, -4.0647, -4.0174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2085, device='cuda:0', dtype=torch.float64)
tensor([-2.3097, -3.3940, -3.3888, -4.0685, -4.0197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1483, device='cuda:0', dtype=torch.float64)
tensor([-2.3164, -3.3917, -3.3826, -4.0743, -4.0212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1040, device='cuda:0', dtype=torch.float64)
tensor([-2.3253, -3.3889, -3.3783, -4.0840, -4.0235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2030, device='cuda:0', dtype=torch.float64)
tensor([-2.3340, -3.3863, -3.3731, -4.0933, -4.0275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2568, device='cuda:0', dtype=torch.float64)
tensor([-2.3436, -3.3874, -3.3684, -4.0997, -4.0305], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2309, device='cuda:0', dtype=torch.float64)
tensor([-2.3527, -3.3892, -3.3660, -4.1075, -4.0351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2811, device='cuda:0', dtype=torch.float64)
tensor([-2.3614, -3.3900, -3.3669, -4.1185, -4.0388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-2.3663, -3.3880, -3.3677, -4.1280, -4.0431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2224, device='cuda:0', dtype=torch.float64)
tensor([-2.3698, -3.3867, -3.3692, -4.1333, -4.0504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1356, device='cuda:0', dtype=torch.float64)
tensor([-2.3714, -3.3856, -3.3680, -4.1337, -4.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1661, device='cuda:0', dtype=torch.float64)
tensor([-2.3721, -3.3882, -3.3637, -4.1309, -4.0681], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1627, device='cuda:0', dtype=torch.float64)
tensor([-2.3722, -3.3904, -3.3602, -4.1280, -4.0758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1964, device='cuda:0', dtype=torch.float64)
tensor([-2.3705, -3.3927, -3.3611, -4.1234, -4.0800], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2179, device='cuda:0', dtype=torch.float64)
tensor([-2.3717, -3.3944, -3.3636, -4.1151, -4.0791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0835, device='cuda:0', dtype=torch.float64)
tensor([-2.3705, -3.3940, -3.3667, -4.1072, -4.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0798, device='cuda:0', dtype=torch.float64)
tensor([-2.3697, -3.3941, -3.3665, -4.0989, -4.0712], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0708, device='cuda:0', dtype=torch.float64)
tensor([-2.3682, -3.3957, -3.3630, -4.0898, -4.0655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2155, device='cuda:0', dtype=torch.float64)
tensor([-2.3639, -3.3962, -3.3590, -4.0853, -4.0586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2867, device='cuda:0', dtype=torch.float64)
tensor([-2.3640, -3.3938, -3.3532, -4.0838, -4.0545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3585, device='cuda:0', dtype=torch.float64)
tensor([-2.3611, -3.3905, -3.3467, -4.0820, -4.0461], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1232, device='cuda:0', dtype=torch.float64)
tensor([-2.3602, -3.3900, -3.3434, -4.0768, -4.0382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1577, device='cuda:0', dtype=torch.float64)
tensor([-2.3603, -3.3897, -3.3423, -4.0751, -4.0281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1193, device='cuda:0', dtype=torch.float64)
tensor([-2.3603, -3.3888, -3.3424, -4.0719, -4.0207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1004, device='cuda:0', dtype=torch.float64)
tensor([-2.3596, -3.3889, -3.3426, -4.0730, -4.0168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1692, device='cuda:0', dtype=torch.float64)
tensor([-2.3557, -3.3921, -3.3425, -4.0788, -4.0117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0510, device='cuda:0', dtype=torch.float64)
tensor([-2.3528, -3.3979, -3.3439, -4.0844, -4.0097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3002, device='cuda:0', dtype=torch.float64)
tensor([-2.3510, -3.4081, -3.3438, -4.0887, -4.0108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1134, device='cuda:0', dtype=torch.float64)
tensor([-2.3515, -3.4197, -3.3426, -4.0953, -4.0114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9721, device='cuda:0', dtype=torch.float64)
tensor([-2.3445, -3.4312, -3.3428, -4.1041, -4.0085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1909, device='cuda:0', dtype=torch.float64)
tensor([-2.3378, -3.4428, -3.3410, -4.1082, -4.0088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-2.3383, -3.4480, -3.3373, -4.1123, -4.0076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2529, device='cuda:0', dtype=torch.float64)
tensor([-2.3435, -3.4506, -3.3293, -4.1097, -4.0061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1431, device='cuda:0', dtype=torch.float64)
tensor([-2.3519, -3.4483, -3.3218, -4.1068, -4.0075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0073, device='cuda:0', dtype=torch.float64)
tensor([-2.3592, -3.4386, -3.3140, -4.1037, -4.0093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0886, device='cuda:0', dtype=torch.float64)
tensor([-2.3673, -3.4279, -3.3074, -4.1010, -4.0139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3526, device='cuda:0', dtype=torch.float64)
tensor([-2.3748, -3.4177, -3.3043, -4.0999, -4.0188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1428, device='cuda:0', dtype=torch.float64)
tensor([-2.3790, -3.4049, -3.3046, -4.1010, -4.0249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1443, device='cuda:0', dtype=torch.float64)
tensor([-2.3832, -3.3917, -3.3059, -4.1033, -4.0344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3087, device='cuda:0', dtype=torch.float64)
tensor([-2.3894, -3.3814, -3.3100, -4.1029, -4.0438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1782, device='cuda:0', dtype=torch.float64)
tensor([-2.3950, -3.3733, -3.3151, -4.1032, -4.0532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1795, device='cuda:0', dtype=torch.float64)
tensor([-2.4010, -3.3638, -3.3241, -4.1020, -4.0591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1729, device='cuda:0', dtype=torch.float64)
tensor([-2.4059, -3.3583, -3.3321, -4.0972, -4.0661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2785, device='cuda:0', dtype=torch.float64)
tensor([-2.4069, -3.3511, -3.3425, -4.0940, -4.0703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2085, device='cuda:0', dtype=torch.float64)
tensor([-2.4022, -3.3506, -3.3493, -4.0870, -4.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9938, device='cuda:0', dtype=torch.float64)
tensor([-2.3958, -3.3503, -3.3551, -4.0835, -4.0779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2189, device='cuda:0', dtype=torch.float64)
tensor([-2.3892, -3.3530, -3.3611, -4.0819, -4.0819], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3068, device='cuda:0', dtype=torch.float64)
tensor([-2.3832, -3.3564, -3.3673, -4.0826, -4.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0752, device='cuda:0', dtype=torch.float64)
tensor([-2.3797, -3.3645, -3.3715, -4.0824, -4.0781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0944, device='cuda:0', dtype=torch.float64)
tensor([-2.3776, -3.3723, -3.3725, -4.0846, -4.0751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2767, device='cuda:0', dtype=torch.float64)
tensor([-2.3745, -3.3791, -3.3736, -4.0848, -4.0722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1612, device='cuda:0', dtype=torch.float64)
tensor([-2.3695, -3.3879, -3.3745, -4.0885, -4.0701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0965, device='cuda:0', dtype=torch.float64)
tensor([-2.3674, -3.3961, -3.3771, -4.0897, -4.0649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2566, device='cuda:0', dtype=torch.float64)
tensor([-2.3615, -3.4013, -3.3804, -4.0890, -4.0606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1301, device='cuda:0', dtype=torch.float64)
tensor([-2.3545, -3.4109, -3.3838, -4.0900, -4.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2284, device='cuda:0', dtype=torch.float64)
tensor([-2.3508, -3.4173, -3.3845, -4.0913, -4.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1445, device='cuda:0', dtype=torch.float64)
tensor([-2.3445, -3.4254, -3.3857, -4.0891, -4.0520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3164, device='cuda:0', dtype=torch.float64)
tensor([-2.3440, -3.4295, -3.3843, -4.0861, -4.0522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1756, device='cuda:0', dtype=torch.float64)
tensor([-2.3444, -3.4358, -3.3830, -4.0824, -4.0536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1477, device='cuda:0', dtype=torch.float64)
tensor([-2.3484, -3.4373, -3.3795, -4.0802, -4.0551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2922, device='cuda:0', dtype=torch.float64)
tensor([-2.3541, -3.4375, -3.3795, -4.0788, -4.0528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3440, device='cuda:0', dtype=torch.float64)
tensor([-2.3615, -3.4331, -3.3782, -4.0819, -4.0493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3655, device='cuda:0', dtype=torch.float64)
tensor([-2.3691, -3.4227, -3.3744, -4.0961, -4.0441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2018, device='cuda:0', dtype=torch.float64)
tensor([-2.3781, -3.4105, -3.3681, -4.1063, -4.0420], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0249, device='cuda:0', dtype=torch.float64)
tensor([-2.3869, -3.3991, -3.3601, -4.1175, -4.0422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2392, device='cuda:0', dtype=torch.float64)
tensor([-2.3922, -3.3881, -3.3526, -4.1254, -4.0433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1458, device='cuda:0', dtype=torch.float64)
tensor([-2.3928, -3.3749, -3.3459, -4.1279, -4.0499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1888, device='cuda:0', dtype=torch.float64)
tensor([-2.3889, -3.3630, -3.3401, -4.1255, -4.0539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2818, device='cuda:0', dtype=torch.float64)
tensor([-2.3880, -3.3550, -3.3354, -4.1172, -4.0572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1354, device='cuda:0', dtype=torch.float64)
tensor([-2.3824, -3.3515, -3.3310, -4.1077, -4.0617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0893, device='cuda:0', dtype=torch.float64)
tensor([-2.3745, -3.3507, -3.3265, -4.0944, -4.0654], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2472, device='cuda:0', dtype=torch.float64)
tensor([-2.3659, -3.3536, -3.3247, -4.0833, -4.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0614, device='cuda:0', dtype=torch.float64)
tensor([-2.3605, -3.3568, -3.3260, -4.0756, -4.0620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4238, device='cuda:0', dtype=torch.float64)
tensor([-2.3558, -3.3656, -3.3288, -4.0696, -4.0651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0895, device='cuda:0', dtype=torch.float64)
tensor([-2.3471, -3.3745, -3.3316, -4.0642, -4.0679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9394, device='cuda:0', dtype=torch.float64)
tensor([-2.3373, -3.3876, -3.3348, -4.0613, -4.0706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3135, device='cuda:0', dtype=torch.float64)
tensor([-2.3306, -3.4059, -3.3372, -4.0594, -4.0743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0965, device='cuda:0', dtype=torch.float64)
tensor([-2.3250, -3.4229, -3.3394, -4.0578, -4.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3639, device='cuda:0', dtype=torch.float64)
tensor([-2.3202, -3.4387, -3.3423, -4.0553, -4.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3242, device='cuda:0', dtype=torch.float64)
tensor([-2.3169, -3.4542, -3.3447, -4.0542, -4.0769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1095, device='cuda:0', dtype=torch.float64)
tensor([-2.3131, -3.4681, -3.3470, -4.0558, -4.0781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1738, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.4795, -3.3485, -4.0562, -4.0764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2597, device='cuda:0', dtype=torch.float64)
tensor([-2.3106, -3.4888, -3.3539, -4.0526, -4.0748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2873, device='cuda:0', dtype=torch.float64)
tensor([-2.3087, -3.4984, -3.3598, -4.0506, -4.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1534, device='cuda:0', dtype=torch.float64)
tensor([-2.3084, -3.5015, -3.3662, -4.0451, -4.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2507, device='cuda:0', dtype=torch.float64)
tensor([-2.3080, -3.4984, -3.3729, -4.0413, -4.0708], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2017, device='cuda:0', dtype=torch.float64)
tensor([-2.3115, -3.4952, -3.3819, -4.0379, -4.0637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0033, device='cuda:0', dtype=torch.float64)
tensor([-2.3192, -3.4889, -3.3865, -4.0325, -4.0555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1525, device='cuda:0', dtype=torch.float64)
tensor([-2.3291, -3.4840, -3.3878, -4.0312, -4.0497], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1184, device='cuda:0', dtype=torch.float64)
tensor([-2.3422, -3.4801, -3.3876, -4.0303, -4.0453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1339, device='cuda:0', dtype=torch.float64)
tensor([-2.3557, -3.4756, -3.3834, -4.0290, -4.0428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9766, device='cuda:0', dtype=torch.float64)
tensor([-2.3681, -3.4687, -3.3775, -4.0271, -4.0399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3182, device='cuda:0', dtype=torch.float64)
tensor([-2.3777, -3.4579, -3.3712, -4.0258, -4.0406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0967, device='cuda:0', dtype=torch.float64)
tensor([-2.3859, -3.4475, -3.3659, -4.0260, -4.0435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1347, device='cuda:0', dtype=torch.float64)
tensor([-2.3927, -3.4396, -3.3620, -4.0270, -4.0463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2269, device='cuda:0', dtype=torch.float64)
tensor([-2.3995, -3.4371, -3.3584, -4.0281, -4.0488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3343, device='cuda:0', dtype=torch.float64)
tensor([-2.4085, -3.4372, -3.3525, -4.0258, -4.0479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1858, device='cuda:0', dtype=torch.float64)
tensor([-2.4170, -3.4367, -3.3479, -4.0278, -4.0506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0389, device='cuda:0', dtype=torch.float64)
tensor([-2.4211, -3.4368, -3.3438, -4.0289, -4.0564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2972, device='cuda:0', dtype=torch.float64)
tensor([-2.4247, -3.4354, -3.3397, -4.0301, -4.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1094, device='cuda:0', dtype=torch.float64)
tensor([-2.4275, -3.4323, -3.3376, -4.0348, -4.0579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0755, device='cuda:0', dtype=torch.float64)
tensor([-2.4321, -3.4229, -3.3327, -4.0387, -4.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3156, device='cuda:0', dtype=torch.float64)
tensor([-2.4366, -3.4159, -3.3301, -4.0491, -4.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3008, device='cuda:0', dtype=torch.float64)
tensor([-2.4450, -3.4100, -3.3290, -4.0567, -4.0662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1056, device='cuda:0', dtype=torch.float64)
tensor([-2.4522, -3.4039, -3.3260, -4.0613, -4.0698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-2.4572, -3.4031, -3.3244, -4.0623, -4.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1674, device='cuda:0', dtype=torch.float64)
tensor([-2.4578, -3.4026, -3.3241, -4.0646, -4.0748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1246, device='cuda:0', dtype=torch.float64)
tensor([-2.4561, -3.4008, -3.3234, -4.0697, -4.0750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1059, device='cuda:0', dtype=torch.float64)
tensor([-2.4560, -3.3965, -3.3236, -4.0732, -4.0728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0841, device='cuda:0', dtype=torch.float64)
tensor([-2.4541, -3.3918, -3.3245, -4.0772, -4.0715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3496, device='cuda:0', dtype=torch.float64)
tensor([-2.4536, -3.3882, -3.3261, -4.0819, -4.0690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9577, device='cuda:0', dtype=torch.float64)
tensor([-2.4513, -3.3864, -3.3236, -4.0807, -4.0636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3159, device='cuda:0', dtype=torch.float64)
tensor([-2.4514, -3.3877, -3.3220, -4.0816, -4.0644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1416, device='cuda:0', dtype=torch.float64)
tensor([-2.4489, -3.3885, -3.3229, -4.0857, -4.0625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0293, device='cuda:0', dtype=torch.float64)
tensor([-2.4461, -3.3887, -3.3232, -4.0887, -4.0643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2213, device='cuda:0', dtype=torch.float64)
tensor([-2.4434, -3.3845, -3.3249, -4.0906, -4.0667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2894, device='cuda:0', dtype=torch.float64)
tensor([-2.4417, -3.3849, -3.3268, -4.0922, -4.0714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1779, device='cuda:0', dtype=torch.float64)
tensor([-2.4379, -3.3871, -3.3307, -4.0951, -4.0773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2366, device='cuda:0', dtype=torch.float64)
tensor([-2.4321, -3.3902, -3.3344, -4.0957, -4.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2230, device='cuda:0', dtype=torch.float64)
tensor([-2.4232, -3.3896, -3.3376, -4.0986, -4.0824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2337, device='cuda:0', dtype=torch.float64)
tensor([-2.4102, -3.3909, -3.3405, -4.0974, -4.0865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1637, device='cuda:0', dtype=torch.float64)
tensor([-2.3923, -3.3911, -3.3454, -4.0955, -4.0855], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4126, device='cuda:0', dtype=torch.float64)
tensor([-2.3782, -3.3874, -3.3505, -4.0930, -4.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2960, device='cuda:0', dtype=torch.float64)
tensor([-2.3675, -3.3831, -3.3537, -4.0886, -4.0831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1420, device='cuda:0', dtype=torch.float64)
tensor([-2.3585, -3.3793, -3.3555, -4.0773, -4.0765], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4304, device='cuda:0', dtype=torch.float64)
tensor([-2.3508, -3.3759, -3.3586, -4.0703, -4.0700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3654, device='cuda:0', dtype=torch.float64)
tensor([-2.3438, -3.3733, -3.3652, -4.0659, -4.0611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3892, device='cuda:0', dtype=torch.float64)
tensor([-2.3411, -3.3732, -3.3703, -4.0601, -4.0513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8862, device='cuda:0', dtype=torch.float64)
tensor([-2.3385, -3.3731, -3.3757, -4.0551, -4.0398], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1918, device='cuda:0', dtype=torch.float64)
tensor([-2.3376, -3.3776, -3.3776, -4.0530, -4.0295], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2746, device='cuda:0', dtype=torch.float64)
tensor([-2.3366, -3.3816, -3.3801, -4.0535, -4.0178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2913, device='cuda:0', dtype=torch.float64)
tensor([-2.3389, -3.3897, -3.3802, -4.0591, -4.0119], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1067, device='cuda:0', dtype=torch.float64)
tensor([-2.3433, -3.4023, -3.3806, -4.0662, -4.0059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1327, device='cuda:0', dtype=torch.float64)
tensor([-2.3543, -3.4180, -3.3776, -4.0707, -4.0043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3655, device='cuda:0', dtype=torch.float64)
tensor([-2.3703, -3.4305, -3.3738, -4.0733, -4.0041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2098, device='cuda:0', dtype=torch.float64)
tensor([-2.3902, -3.4435, -3.3706, -4.0758, -4.0077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1523, device='cuda:0', dtype=torch.float64)
tensor([-2.4083, -3.4555, -3.3683, -4.0790, -4.0133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2704, device='cuda:0', dtype=torch.float64)
tensor([-2.4233, -3.4594, -3.3625, -4.0813, -4.0185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1226, device='cuda:0', dtype=torch.float64)
tensor([-2.4354, -3.4595, -3.3605, -4.0831, -4.0219], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0633, device='cuda:0', dtype=torch.float64)
tensor([-2.4464, -3.4592, -3.3593, -4.0829, -4.0243], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1940, device='cuda:0', dtype=torch.float64)
tensor([-2.4491, -3.4591, -3.3604, -4.0833, -4.0276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1889, device='cuda:0', dtype=torch.float64)
tensor([-2.4485, -3.4554, -3.3640, -4.0821, -4.0312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4531, device='cuda:0', dtype=torch.float64)
tensor([-2.4464, -3.4514, -3.3680, -4.0776, -4.0375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0789, device='cuda:0', dtype=torch.float64)
tensor([-2.4413, -3.4451, -3.3690, -4.0691, -4.0450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1932, device='cuda:0', dtype=torch.float64)
tensor([-2.4353, -3.4420, -3.3684, -4.0606, -4.0544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1526, device='cuda:0', dtype=torch.float64)
tensor([-2.4296, -3.4384, -3.3668, -4.0542, -4.0622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0746, device='cuda:0', dtype=torch.float64)
tensor([-2.4240, -3.4357, -3.3685, -4.0491, -4.0643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0653, device='cuda:0', dtype=torch.float64)
tensor([-2.4177, -3.4358, -3.3694, -4.0398, -4.0673], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0261, device='cuda:0', dtype=torch.float64)
tensor([-2.4116, -3.4373, -3.3697, -4.0320, -4.0731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1986, device='cuda:0', dtype=torch.float64)
tensor([-2.4111, -3.4368, -3.3711, -4.0267, -4.0797], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1678, device='cuda:0', dtype=torch.float64)
tensor([-2.4090, -3.4348, -3.3697, -4.0221, -4.0812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9537, device='cuda:0', dtype=torch.float64)
tensor([-2.4056, -3.4355, -3.3663, -4.0179, -4.0836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2669, device='cuda:0', dtype=torch.float64)
tensor([-2.3999, -3.4364, -3.3654, -4.0199, -4.0777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1396, device='cuda:0', dtype=torch.float64)
tensor([-2.3951, -3.4371, -3.3660, -4.0227, -4.0702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0738, device='cuda:0', dtype=torch.float64)
tensor([-2.3910, -3.4337, -3.3681, -4.0274, -4.0603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0782, device='cuda:0', dtype=torch.float64)
tensor([-2.3864, -3.4289, -3.3702, -4.0341, -4.0486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2732, device='cuda:0', dtype=torch.float64)
tensor([-2.3776, -3.4262, -3.3787, -4.0413, -4.0335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2298, device='cuda:0', dtype=torch.float64)
tensor([-2.3683, -3.4212, -3.3841, -4.0477, -4.0246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0811, device='cuda:0', dtype=torch.float64)
tensor([-2.3620, -3.4162, -3.3890, -4.0561, -4.0147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0988, device='cuda:0', dtype=torch.float64)
tensor([-2.3568, -3.4137, -3.3930, -4.0664, -4.0098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2396, device='cuda:0', dtype=torch.float64)
tensor([-2.3567, -3.4139, -3.3935, -4.0748, -4.0067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9382, device='cuda:0', dtype=torch.float64)
tensor([-2.3570, -3.4102, -3.3939, -4.0787, -4.0043], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1391, device='cuda:0', dtype=torch.float64)
tensor([-2.3594, -3.4106, -3.3926, -4.0781, -4.0076], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1001, device='cuda:0', dtype=torch.float64)
tensor([-2.3624, -3.4104, -3.3894, -4.0759, -4.0094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3228, device='cuda:0', dtype=torch.float64)
tensor([-2.3685, -3.4123, -3.3837, -4.0750, -4.0120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3306, device='cuda:0', dtype=torch.float64)
tensor([-2.3747, -3.4079, -3.3772, -4.0753, -4.0161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1726, device='cuda:0', dtype=torch.float64)
tensor([-2.3829, -3.4038, -3.3719, -4.0743, -4.0189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1628, device='cuda:0', dtype=torch.float64)
tensor([-2.3943, -3.3990, -3.3655, -4.0683, -4.0218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1819, device='cuda:0', dtype=torch.float64)
tensor([-2.4034, -3.3953, -3.3601, -4.0616, -4.0271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9896, device='cuda:0', dtype=torch.float64)
tensor([-2.4111, -3.3939, -3.3543, -4.0555, -4.0323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2982, device='cuda:0', dtype=torch.float64)
tensor([-2.4143, -3.3917, -3.3504, -4.0500, -4.0340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0816, device='cuda:0', dtype=torch.float64)
tensor([-2.4189, -3.3920, -3.3435, -4.0409, -4.0358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3528, device='cuda:0', dtype=torch.float64)
tensor([-2.4247, -3.3941, -3.3376, -4.0360, -4.0381], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2158, device='cuda:0', dtype=torch.float64)
tensor([-2.4284, -3.3963, -3.3373, -4.0374, -4.0395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1169, device='cuda:0', dtype=torch.float64)
tensor([-2.4266, -3.3992, -3.3383, -4.0408, -4.0409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0455, device='cuda:0', dtype=torch.float64)
tensor([-2.4252, -3.4062, -3.3419, -4.0427, -4.0390], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-2.4215, -3.4130, -3.3461, -4.0456, -4.0405], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1723, device='cuda:0', dtype=torch.float64)
tensor([-2.4147, -3.4202, -3.3529, -4.0440, -4.0418], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2001, device='cuda:0', dtype=torch.float64)
tensor([-2.4112, -3.4238, -3.3604, -4.0431, -4.0445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0358, device='cuda:0', dtype=torch.float64)
tensor([-2.4044, -3.4274, -3.3655, -4.0454, -4.0469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2209, device='cuda:0', dtype=torch.float64)
tensor([-2.3988, -3.4298, -3.3684, -4.0466, -4.0542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1069, device='cuda:0', dtype=torch.float64)
tensor([-2.3946, -3.4324, -3.3705, -4.0484, -4.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2740, device='cuda:0', dtype=torch.float64)
tensor([-2.3893, -3.4352, -3.3718, -4.0477, -4.0633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1508, device='cuda:0', dtype=torch.float64)
tensor([-2.3861, -3.4377, -3.3737, -4.0470, -4.0613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3427, device='cuda:0', dtype=torch.float64)
tensor([-2.3886, -3.4357, -3.3766, -4.0496, -4.0611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0764, device='cuda:0', dtype=torch.float64)
tensor([-2.3906, -3.4317, -3.3788, -4.0514, -4.0577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0276, device='cuda:0', dtype=torch.float64)
tensor([-2.3934, -3.4252, -3.3810, -4.0463, -4.0494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2755, device='cuda:0', dtype=torch.float64)
tensor([-2.4005, -3.4227, -3.3797, -4.0399, -4.0427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1754, device='cuda:0', dtype=torch.float64)
tensor([-2.4075, -3.4198, -3.3789, -4.0309, -4.0331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9756, device='cuda:0', dtype=torch.float64)
tensor([-2.4128, -3.4183, -3.3791, -4.0241, -4.0290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0862, device='cuda:0', dtype=torch.float64)
tensor([-2.4191, -3.4202, -3.3763, -4.0174, -4.0284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0133, device='cuda:0', dtype=torch.float64)
tensor([-2.4274, -3.4221, -3.3731, -4.0142, -4.0267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1147, device='cuda:0', dtype=torch.float64)
tensor([-2.4338, -3.4219, -3.3685, -4.0083, -4.0255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2943, device='cuda:0', dtype=torch.float64)
tensor([-2.4404, -3.4236, -3.3628, -4.0070, -4.0286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2544, device='cuda:0', dtype=torch.float64)
tensor([-2.4453, -3.4253, -3.3582, -4.0066, -4.0339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2622, device='cuda:0', dtype=torch.float64)
tensor([-2.4454, -3.4278, -3.3551, -4.0122, -4.0387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1483, device='cuda:0', dtype=torch.float64)
tensor([-2.4451, -3.4281, -3.3525, -4.0185, -4.0438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0523, device='cuda:0', dtype=torch.float64)
tensor([-2.4416, -3.4243, -3.3497, -4.0251, -4.0509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0058, device='cuda:0', dtype=torch.float64)
tensor([-2.4399, -3.4196, -3.3467, -4.0305, -4.0544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-2.4423, -3.4127, -3.3410, -4.0357, -4.0594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1346, device='cuda:0', dtype=torch.float64)
tensor([-2.4443, -3.4049, -3.3352, -4.0393, -4.0634], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2139, device='cuda:0', dtype=torch.float64)
tensor([-2.4424, -3.3975, -3.3350, -4.0392, -4.0643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([-2.4385, -3.3885, -3.3350, -4.0371, -4.0625], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0082, device='cuda:0', dtype=torch.float64)
tensor([-2.4336, -3.3837, -3.3393, -4.0349, -4.0608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-2.4310, -3.3783, -3.3427, -4.0318, -4.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0462, device='cuda:0', dtype=torch.float64)
tensor([-2.4317, -3.3767, -3.3452, -4.0336, -4.0597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2554, device='cuda:0', dtype=torch.float64)
tensor([-2.4370, -3.3746, -3.3460, -4.0345, -4.0596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0854, device='cuda:0', dtype=torch.float64)
tensor([-2.4417, -3.3718, -3.3464, -4.0367, -4.0593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.5486, device='cuda:0', dtype=torch.float64)
tensor([-2.4427, -3.3674, -3.3492, -4.0417, -4.0605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2088, device='cuda:0', dtype=torch.float64)
tensor([-2.4429, -3.3623, -3.3500, -4.0474, -4.0614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1405, device='cuda:0', dtype=torch.float64)
tensor([-2.4390, -3.3596, -3.3506, -4.0534, -4.0613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0622, device='cuda:0', dtype=torch.float64)
tensor([-2.4362, -3.3568, -3.3517, -4.0554, -4.0600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0252, device='cuda:0', dtype=torch.float64)
tensor([-2.4313, -3.3553, -3.3534, -4.0569, -4.0553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2525, device='cuda:0', dtype=torch.float64)
tensor([-2.4256, -3.3542, -3.3557, -4.0578, -4.0483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2785, device='cuda:0', dtype=torch.float64)
tensor([-2.4201, -3.3571, -3.3596, -4.0628, -4.0435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1929, device='cuda:0', dtype=torch.float64)
tensor([-2.4104, -3.3634, -3.3659, -4.0673, -4.0392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1886, device='cuda:0', dtype=torch.float64)
tensor([-2.4035, -3.3686, -3.3716, -4.0724, -4.0316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0577, device='cuda:0', dtype=torch.float64)
tensor([-2.3937, -3.3723, -3.3763, -4.0750, -4.0232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0831, device='cuda:0', dtype=torch.float64)
tensor([-2.3879, -3.3721, -3.3786, -4.0790, -4.0166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2039, device='cuda:0', dtype=torch.float64)
tensor([-2.3882, -3.3732, -3.3804, -4.0797, -4.0120], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1939, device='cuda:0', dtype=torch.float64)
tensor([-2.3882, -3.3814, -3.3818, -4.0809, -4.0084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0808, device='cuda:0', dtype=torch.float64)
tensor([-2.3856, -3.3893, -3.3846, -4.0820, -4.0068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([-2.3867, -3.3945, -3.3867, -4.0844, -4.0030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1838, device='cuda:0', dtype=torch.float64)
tensor([-2.3874, -3.4038, -3.3900, -4.0835, -3.9999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0685, device='cuda:0', dtype=torch.float64)
tensor([-2.3891, -3.4117, -3.3936, -4.0784, -4.0009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1661, device='cuda:0', dtype=torch.float64)
tensor([-2.3934, -3.4166, -3.3976, -4.0739, -4.0019], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2470, device='cuda:0', dtype=torch.float64)
tensor([-2.4033, -3.4208, -3.3982, -4.0678, -4.0061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1914, device='cuda:0', dtype=torch.float64)
tensor([-2.4146, -3.4237, -3.3947, -4.0637, -4.0105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1741, device='cuda:0', dtype=torch.float64)
tensor([-2.4252, -3.4249, -3.3893, -4.0571, -4.0163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0433, device='cuda:0', dtype=torch.float64)
tensor([-2.4323, -3.4287, -3.3858, -4.0514, -4.0253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1773, device='cuda:0', dtype=torch.float64)
tensor([-2.4410, -3.4311, -3.3804, -4.0442, -4.0347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1581, device='cuda:0', dtype=torch.float64)
tensor([-2.4524, -3.4291, -3.3739, -4.0384, -4.0431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0774, device='cuda:0', dtype=torch.float64)
tensor([-2.4601, -3.4282, -3.3690, -4.0348, -4.0485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1519, device='cuda:0', dtype=torch.float64)
tensor([-2.4712, -3.4250, -3.3625, -4.0325, -4.0573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2037, device='cuda:0', dtype=torch.float64)
tensor([-2.4791, -3.4223, -3.3610, -4.0286, -4.0615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0885, device='cuda:0', dtype=torch.float64)
tensor([-2.4852, -3.4187, -3.3594, -4.0272, -4.0670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1941, device='cuda:0', dtype=torch.float64)
tensor([-2.4891, -3.4097, -3.3580, -4.0256, -4.0727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1569, device='cuda:0', dtype=torch.float64)
tensor([-2.4900, -3.4041, -3.3571, -4.0252, -4.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([-2.4938, -3.3995, -3.3530, -4.0238, -4.0759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2347, device='cuda:0', dtype=torch.float64)
tensor([-2.4945, -3.3973, -3.3489, -4.0239, -4.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2077, device='cuda:0', dtype=torch.float64)
tensor([-2.4960, -3.3956, -3.3458, -4.0237, -4.0716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9785, device='cuda:0', dtype=torch.float64)
tensor([-2.4984, -3.3936, -3.3411, -4.0183, -4.0629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0063, device='cuda:0', dtype=torch.float64)
tensor([-2.4982, -3.3924, -3.3380, -4.0171, -4.0545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0176, device='cuda:0', dtype=torch.float64)
tensor([-2.4949, -3.3907, -3.3355, -4.0180, -4.0466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2482, device='cuda:0', dtype=torch.float64)
tensor([-2.4928, -3.3911, -3.3344, -4.0174, -4.0415], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0303, device='cuda:0', dtype=torch.float64)
tensor([-2.4806, -3.3946, -3.3347, -4.0214, -4.0373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-2.4614, -3.4008, -3.3379, -4.0266, -4.0291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0283, device='cuda:0', dtype=torch.float64)
tensor([-2.4417, -3.4128, -3.3428, -4.0329, -4.0220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2156, device='cuda:0', dtype=torch.float64)
tensor([-2.4262, -3.4253, -3.3475, -4.0401, -4.0153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0576, device='cuda:0', dtype=torch.float64)
tensor([-2.4145, -3.4359, -3.3531, -4.0477, -4.0102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1000, device='cuda:0', dtype=torch.float64)
tensor([-2.4041, -3.4434, -3.3619, -4.0573, -4.0042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1921, device='cuda:0', dtype=torch.float64)
tensor([-2.3932, -3.4480, -3.3714, -4.0685, -4.0054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2466, device='cuda:0', dtype=torch.float64)
tensor([-2.3844, -3.4466, -3.3829, -4.0806, -4.0154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2044, device='cuda:0', dtype=torch.float64)
tensor([-2.3800, -3.4507, -3.3897, -4.0853, -4.0244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1830, device='cuda:0', dtype=torch.float64)
tensor([-2.3776, -3.4514, -3.3959, -4.0921, -4.0318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1367, device='cuda:0', dtype=torch.float64)
tensor([-2.3808, -3.4520, -3.4022, -4.0986, -4.0430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0954, device='cuda:0', dtype=torch.float64)
tensor([-2.3846, -3.4547, -3.4070, -4.1048, -4.0523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4045, device='cuda:0', dtype=torch.float64)
tensor([-2.3896, -3.4575, -3.4068, -4.1066, -4.0639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1446, device='cuda:0', dtype=torch.float64)
tensor([-2.3947, -3.4617, -3.4035, -4.1042, -4.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1680, device='cuda:0', dtype=torch.float64)
tensor([-2.4010, -3.4662, -3.3997, -4.1016, -4.0803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1874, device='cuda:0', dtype=torch.float64)
tensor([-2.4043, -3.4693, -3.3964, -4.1025, -4.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0376, device='cuda:0', dtype=torch.float64)
tensor([-2.4054, -3.4694, -3.3927, -4.1073, -4.0913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1762, device='cuda:0', dtype=torch.float64)
tensor([-2.4120, -3.4690, -3.3845, -4.1084, -4.0957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3125, device='cuda:0', dtype=torch.float64)
tensor([-2.4224, -3.4647, -3.3767, -4.1088, -4.0963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1052, device='cuda:0', dtype=torch.float64)
tensor([-2.4290, -3.4580, -3.3702, -4.1083, -4.0958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0114, device='cuda:0', dtype=torch.float64)
tensor([-2.4401, -3.4500, -3.3621, -4.1062, -4.0922], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0176, device='cuda:0', dtype=torch.float64)
tensor([-2.4513, -3.4397, -3.3544, -4.1044, -4.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1505, device='cuda:0', dtype=torch.float64)
tensor([-2.4638, -3.4328, -3.3504, -4.1009, -4.0833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1724, device='cuda:0', dtype=torch.float64)
tensor([-2.4719, -3.4297, -3.3476, -4.0969, -4.0796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0651, device='cuda:0', dtype=torch.float64)
tensor([-2.4789, -3.4288, -3.3437, -4.0935, -4.0785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0750, device='cuda:0', dtype=torch.float64)
tensor([-2.4854, -3.4255, -3.3432, -4.0899, -4.0763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3354, device='cuda:0', dtype=torch.float64)
tensor([-2.4870, -3.4207, -3.3459, -4.0878, -4.0692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2133, device='cuda:0', dtype=torch.float64)
tensor([-2.4855, -3.4154, -3.3502, -4.0878, -4.0612], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2544, device='cuda:0', dtype=torch.float64)
tensor([-2.4822, -3.4111, -3.3555, -4.0857, -4.0594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9887, device='cuda:0', dtype=torch.float64)
tensor([-2.4743, -3.4084, -3.3636, -4.0868, -4.0551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0931, device='cuda:0', dtype=torch.float64)
tensor([-2.4655, -3.4078, -3.3703, -4.0860, -4.0525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2664, device='cuda:0', dtype=torch.float64)
tensor([-2.4568, -3.4100, -3.3741, -4.0863, -4.0495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1576, device='cuda:0', dtype=torch.float64)
tensor([-2.4473, -3.4145, -3.3786, -4.0869, -4.0487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0211, device='cuda:0', dtype=torch.float64)
tensor([-2.4397, -3.4183, -3.3822, -4.0870, -4.0501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-2.4350, -3.4170, -3.3814, -4.0869, -4.0555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2057, device='cuda:0', dtype=torch.float64)
tensor([-2.4298, -3.4151, -3.3811, -4.0893, -4.0606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2013, device='cuda:0', dtype=torch.float64)
tensor([-2.4298, -3.4145, -3.3800, -4.0932, -4.0652], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1879, device='cuda:0', dtype=torch.float64)
tensor([-2.4257, -3.4134, -3.3784, -4.0975, -4.0653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2678, device='cuda:0', dtype=torch.float64)
tensor([-2.4266, -3.4159, -3.3751, -4.0963, -4.0651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1476, device='cuda:0', dtype=torch.float64)
tensor([-2.4262, -3.4215, -3.3740, -4.0956, -4.0642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2332, device='cuda:0', dtype=torch.float64)
tensor([-2.4287, -3.4224, -3.3739, -4.0927, -4.0665], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1624, device='cuda:0', dtype=torch.float64)
tensor([-2.4332, -3.4217, -3.3751, -4.0903, -4.0735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1883, device='cuda:0', dtype=torch.float64)
tensor([-2.4334, -3.4195, -3.3812, -4.0927, -4.0816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0812, device='cuda:0', dtype=torch.float64)
tensor([-2.4346, -3.4175, -3.3853, -4.0953, -4.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2690, device='cuda:0', dtype=torch.float64)
tensor([-2.4438, -3.4180, -3.3852, -4.0925, -4.0907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1929, device='cuda:0', dtype=torch.float64)
tensor([-2.4538, -3.4143, -3.3850, -4.0856, -4.0914], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1381, device='cuda:0', dtype=torch.float64)
tensor([-2.4610, -3.4142, -3.3842, -4.0746, -4.0917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1024, device='cuda:0', dtype=torch.float64)
tensor([-2.4692, -3.4119, -3.3844, -4.0682, -4.0917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2378, device='cuda:0', dtype=torch.float64)
tensor([-2.4748, -3.4111, -3.3864, -4.0637, -4.0932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1036, device='cuda:0', dtype=torch.float64)
tensor([-2.4777, -3.4100, -3.3881, -4.0599, -4.0938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0838, device='cuda:0', dtype=torch.float64)
tensor([-2.4802, -3.4133, -3.3898, -4.0519, -4.0932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0504, device='cuda:0', dtype=torch.float64)
tensor([-2.4783, -3.4162, -3.3914, -4.0454, -4.0894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1577, device='cuda:0', dtype=torch.float64)
tensor([-2.4740, -3.4238, -3.3936, -4.0393, -4.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1265, device='cuda:0', dtype=torch.float64)
tensor([-2.4706, -3.4311, -3.3944, -4.0369, -4.0860], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0520, device='cuda:0', dtype=torch.float64)
tensor([-2.4670, -3.4383, -3.3948, -4.0316, -4.0848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0679, device='cuda:0', dtype=torch.float64)
tensor([-2.4680, -3.4463, -3.3921, -4.0270, -4.0895], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1940, device='cuda:0', dtype=torch.float64)
tensor([-2.4658, -3.4568, -3.3919, -4.0192, -4.0940], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2145, device='cuda:0', dtype=torch.float64)
tensor([-2.4663, -3.4629, -3.3955, -4.0112, -4.1009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1310, device='cuda:0', dtype=torch.float64)
tensor([-2.4660, -3.4702, -3.4007, -4.0065, -4.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9517, device='cuda:0', dtype=torch.float64)
tensor([-2.4644, -3.4765, -3.4051, -4.0060, -4.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1638, device='cuda:0', dtype=torch.float64)
tensor([-2.4635, -3.4847, -3.4079, -4.0038, -4.1004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2014, device='cuda:0', dtype=torch.float64)
tensor([-2.4582, -3.5005, -3.4134, -4.0054, -4.0960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1101, device='cuda:0', dtype=torch.float64)
tensor([-2.4548, -3.5129, -3.4194, -4.0070, -4.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2036, device='cuda:0', dtype=torch.float64)
tensor([-2.4563, -3.5159, -3.4248, -4.0125, -4.0906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1560, device='cuda:0', dtype=torch.float64)
tensor([-2.4602, -3.5159, -3.4257, -4.0210, -4.0901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1897, device='cuda:0', dtype=torch.float64)
tensor([-2.4643, -3.5081, -3.4245, -4.0348, -4.0961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1484, device='cuda:0', dtype=torch.float64)
tensor([-2.4633, -3.5033, -3.4238, -4.0487, -4.1044], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1080, device='cuda:0', dtype=torch.float64)
tensor([-2.4633, -3.4986, -3.4248, -4.0604, -4.1113], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3613, device='cuda:0', dtype=torch.float64)
tensor([-2.4643, -3.4906, -3.4259, -4.0723, -4.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2276, device='cuda:0', dtype=torch.float64)
tensor([-2.4646, -3.4824, -3.4261, -4.0830, -4.1229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1130, device='cuda:0', dtype=torch.float64)
tensor([-2.4692, -3.4761, -3.4260, -4.0883, -4.1268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0274, device='cuda:0', dtype=torch.float64)
tensor([-2.4751, -3.4691, -3.4209, -4.0964, -4.1371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9634, device='cuda:0', dtype=torch.float64)
tensor([-2.4863, -3.4626, -3.4140, -4.0988, -4.1445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0895, device='cuda:0', dtype=torch.float64)
tensor([-2.4945, -3.4576, -3.4083, -4.0995, -4.1498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2068, device='cuda:0', dtype=torch.float64)
tensor([-2.4992, -3.4501, -3.4063, -4.1008, -4.1525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3044, device='cuda:0', dtype=torch.float64)
tensor([-2.4978, -3.4431, -3.4026, -4.0984, -4.1495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2251, device='cuda:0', dtype=torch.float64)
tensor([-2.4950, -3.4323, -3.3992, -4.0911, -4.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2907, device='cuda:0', dtype=torch.float64)
tensor([-2.4930, -3.4230, -3.3996, -4.0859, -4.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1216, device='cuda:0', dtype=torch.float64)
tensor([-2.4938, -3.4125, -3.3998, -4.0819, -4.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1677, device='cuda:0', dtype=torch.float64)
tensor([-2.4904, -3.4102, -3.4026, -4.0805, -4.1203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1525, device='cuda:0', dtype=torch.float64)
tensor([-2.4826, -3.4121, -3.4078, -4.0791, -4.1118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0962, device='cuda:0', dtype=torch.float64)
tensor([-2.4750, -3.4173, -3.4123, -4.0796, -4.1018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1073, device='cuda:0', dtype=torch.float64)
tensor([-2.4677, -3.4244, -3.4158, -4.0813, -4.0902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1026, device='cuda:0', dtype=torch.float64)
tensor([-2.4598, -3.4333, -3.4197, -4.0828, -4.0773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1441, device='cuda:0', dtype=torch.float64)
tensor([-2.4507, -3.4420, -3.4227, -4.0858, -4.0701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2921, device='cuda:0', dtype=torch.float64)
tensor([-2.4395, -3.4503, -3.4255, -4.0898, -4.0669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0525, device='cuda:0', dtype=torch.float64)
tensor([-2.4287, -3.4589, -3.4276, -4.0944, -4.0640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0623, device='cuda:0', dtype=torch.float64)
tensor([-2.4265, -3.4667, -3.4280, -4.0945, -4.0581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1593, device='cuda:0', dtype=torch.float64)
tensor([-2.4255, -3.4719, -3.4267, -4.0954, -4.0545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0114, device='cuda:0', dtype=torch.float64)
tensor([-2.4206, -3.4767, -3.4265, -4.0980, -4.0492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0626, device='cuda:0', dtype=torch.float64)
tensor([-2.4237, -3.4765, -3.4264, -4.0989, -4.0462], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1594, device='cuda:0', dtype=torch.float64)
tensor([-2.4278, -3.4780, -3.4262, -4.0969, -4.0484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1402, device='cuda:0', dtype=torch.float64)
tensor([-2.4343, -3.4768, -3.4242, -4.0910, -4.0510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3653, device='cuda:0', dtype=torch.float64)
tensor([-2.4418, -3.4744, -3.4257, -4.0902, -4.0528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2044, device='cuda:0', dtype=torch.float64)
tensor([-2.4510, -3.4710, -3.4245, -4.0892, -4.0544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0833, device='cuda:0', dtype=torch.float64)
tensor([-2.4607, -3.4703, -3.4270, -4.0889, -4.0559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0782, device='cuda:0', dtype=torch.float64)
tensor([-2.4713, -3.4726, -3.4317, -4.0925, -4.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-2.4804, -3.4732, -3.4361, -4.0963, -4.0623], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1777, device='cuda:0', dtype=torch.float64)
tensor([-2.4874, -3.4727, -3.4422, -4.1022, -4.0686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1121, device='cuda:0', dtype=torch.float64)
tensor([-2.4968, -3.4691, -3.4452, -4.1080, -4.0770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1994, device='cuda:0', dtype=torch.float64)
tensor([-2.5017, -3.4700, -3.4491, -4.1143, -4.0850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1629, device='cuda:0', dtype=torch.float64)
tensor([-2.4997, -3.4709, -3.4523, -4.1226, -4.0943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1807, device='cuda:0', dtype=torch.float64)
tensor([-2.4944, -3.4692, -3.4538, -4.1290, -4.1055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3266, device='cuda:0', dtype=torch.float64)
tensor([-2.4876, -3.4680, -3.4568, -4.1373, -4.1124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1437, device='cuda:0', dtype=torch.float64)
tensor([-2.4820, -3.4691, -3.4586, -4.1422, -4.1195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3585, device='cuda:0', dtype=torch.float64)
tensor([-2.4803, -3.4692, -3.4609, -4.1421, -4.1256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-2.4774, -3.4661, -3.4615, -4.1423, -4.1308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0805, device='cuda:0', dtype=torch.float64)
tensor([-2.4758, -3.4635, -3.4618, -4.1428, -4.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1594, device='cuda:0', dtype=torch.float64)
tensor([-2.4778, -3.4582, -3.4621, -4.1421, -4.1324], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1968, device='cuda:0', dtype=torch.float64)
tensor([-2.4790, -3.4511, -3.4659, -4.1398, -4.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0924, device='cuda:0', dtype=torch.float64)
tensor([-2.4830, -3.4452, -3.4690, -4.1376, -4.1259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9953, device='cuda:0', dtype=torch.float64)
tensor([-2.4836, -3.4399, -3.4704, -4.1386, -4.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1489, device='cuda:0', dtype=torch.float64)
tensor([-2.4827, -3.4365, -3.4679, -4.1438, -4.1102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3341, device='cuda:0', dtype=torch.float64)
tensor([-2.4844, -3.4407, -3.4613, -4.1442, -4.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1273, device='cuda:0', dtype=torch.float64)
tensor([-2.4826, -3.4466, -3.4557, -4.1468, -4.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2293, device='cuda:0', dtype=torch.float64)
tensor([-2.4812, -3.4537, -3.4511, -4.1531, -4.0962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2163, device='cuda:0', dtype=torch.float64)
tensor([-2.4785, -3.4563, -3.4474, -4.1638, -4.0920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3181, device='cuda:0', dtype=torch.float64)
tensor([-2.4814, -3.4571, -3.4431, -4.1703, -4.0839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2005, device='cuda:0', dtype=torch.float64)
tensor([-2.4882, -3.4522, -3.4409, -4.1772, -4.0720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2185, device='cuda:0', dtype=torch.float64)
tensor([-2.5029, -3.4431, -3.4378, -4.1789, -4.0674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0295, device='cuda:0', dtype=torch.float64)
tensor([-2.5141, -3.4378, -3.4354, -4.1782, -4.0596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0988, device='cuda:0', dtype=torch.float64)
tensor([-2.5195, -3.4319, -3.4331, -4.1769, -4.0540], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1424, device='cuda:0', dtype=torch.float64)
tensor([-2.5252, -3.4282, -3.4348, -4.1743, -4.0509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0804, device='cuda:0', dtype=torch.float64)
tensor([-2.5283, -3.4222, -3.4323, -4.1662, -4.0510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3263, device='cuda:0', dtype=torch.float64)
tensor([-2.5305, -3.4196, -3.4285, -4.1582, -4.0535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1323, device='cuda:0', dtype=torch.float64)
tensor([-2.5285, -3.4159, -3.4277, -4.1502, -4.0569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-2.5236, -3.4154, -3.4256, -4.1420, -4.0664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0765, device='cuda:0', dtype=torch.float64)
tensor([-2.5166, -3.4178, -3.4250, -4.1365, -4.0753], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9518, device='cuda:0', dtype=torch.float64)
tensor([-2.5091, -3.4199, -3.4274, -4.1314, -4.0828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1195, device='cuda:0', dtype=torch.float64)
tensor([-2.4980, -3.4268, -3.4286, -4.1275, -4.0886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1292, device='cuda:0', dtype=torch.float64)
tensor([-2.4889, -3.4325, -3.4293, -4.1248, -4.0911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1813, device='cuda:0', dtype=torch.float64)
tensor([-2.4833, -3.4345, -3.4301, -4.1182, -4.0892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0686, device='cuda:0', dtype=torch.float64)
tensor([-2.4826, -3.4389, -3.4281, -4.1107, -4.0916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0879, device='cuda:0', dtype=torch.float64)
tensor([-2.4849, -3.4422, -3.4299, -4.1023, -4.0939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2192, device='cuda:0', dtype=torch.float64)
tensor([-2.4875, -3.4444, -3.4339, -4.0979, -4.0933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0859, device='cuda:0', dtype=torch.float64)
tensor([-2.4890, -3.4445, -3.4417, -4.0994, -4.0910], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4897, device='cuda:0', dtype=torch.float64)
tensor([-2.4981, -3.4487, -3.4475, -4.1028, -4.0931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0901, device='cuda:0', dtype=torch.float64)
tensor([-2.5068, -3.4530, -3.4523, -4.1118, -4.0978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0192, device='cuda:0', dtype=torch.float64)
tensor([-2.5172, -3.4525, -3.4540, -4.1174, -4.1015], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2229, device='cuda:0', dtype=torch.float64)
tensor([-2.5321, -3.4531, -3.4559, -4.1214, -4.1061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2551, device='cuda:0', dtype=torch.float64)
tensor([-2.5458, -3.4526, -3.4547, -4.1232, -4.1131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1775, device='cuda:0', dtype=torch.float64)
tensor([-2.5638, -3.4513, -3.4539, -4.1232, -4.1169], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2716, device='cuda:0', dtype=torch.float64)
tensor([-2.5809, -3.4513, -3.4478, -4.1236, -4.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2092, device='cuda:0', dtype=torch.float64)
tensor([-2.5908, -3.4572, -3.4414, -4.1231, -4.1227], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1188, device='cuda:0', dtype=torch.float64)
tensor([-2.5925, -3.4582, -3.4345, -4.1214, -4.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0041, device='cuda:0', dtype=torch.float64)
tensor([-2.5910, -3.4599, -3.4289, -4.1173, -4.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1096, device='cuda:0', dtype=torch.float64)
tensor([-2.5880, -3.4594, -3.4222, -4.1101, -4.1251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3730, device='cuda:0', dtype=torch.float64)
tensor([-2.5823, -3.4618, -3.4127, -4.1042, -4.1253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2212, device='cuda:0', dtype=torch.float64)
tensor([-2.5774, -3.4613, -3.4048, -4.1024, -4.1277], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1592, device='cuda:0', dtype=torch.float64)
tensor([-2.5702, -3.4607, -3.3981, -4.1055, -4.1284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2915, device='cuda:0', dtype=torch.float64)
tensor([-2.5630, -3.4595, -3.3972, -4.1067, -4.1259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([-2.5533, -3.4593, -3.3962, -4.1120, -4.1223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1964, device='cuda:0', dtype=torch.float64)
tensor([-2.5463, -3.4597, -3.3965, -4.1174, -4.1220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2160, device='cuda:0', dtype=torch.float64)
tensor([-2.5421, -3.4641, -3.3995, -4.1238, -4.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1485, device='cuda:0', dtype=torch.float64)
tensor([-2.5369, -3.4705, -3.4033, -4.1318, -4.1138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1182, device='cuda:0', dtype=torch.float64)
tensor([-2.5327, -3.4768, -3.4066, -4.1369, -4.1098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3795, device='cuda:0', dtype=torch.float64)
tensor([-2.5303, -3.4822, -3.4124, -4.1375, -4.1103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-2.5247, -3.4867, -3.4198, -4.1347, -4.1121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1823, device='cuda:0', dtype=torch.float64)
tensor([-2.5185, -3.4937, -3.4268, -4.1260, -4.1136], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0341, device='cuda:0', dtype=torch.float64)
tensor([-2.5116, -3.4983, -3.4322, -4.1186, -4.1160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3055, device='cuda:0', dtype=torch.float64)
tensor([-2.5066, -3.5061, -3.4336, -4.1078, -4.1206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2291, device='cuda:0', dtype=torch.float64)
tensor([-2.5011, -3.5183, -3.4348, -4.0934, -4.1224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1175, device='cuda:0', dtype=torch.float64)
tensor([-2.4999, -3.5264, -3.4341, -4.0801, -4.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3255, device='cuda:0', dtype=torch.float64)
tensor([-2.5030, -3.5304, -3.4352, -4.0693, -4.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3165, device='cuda:0', dtype=torch.float64)
tensor([-2.5105, -3.5324, -3.4361, -4.0623, -4.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1574, device='cuda:0', dtype=torch.float64)
tensor([-2.5228, -3.5299, -3.4333, -4.0503, -4.1286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0949, device='cuda:0', dtype=torch.float64)
tensor([-2.5335, -3.5262, -3.4319, -4.0431, -4.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2809, device='cuda:0', dtype=torch.float64)
tensor([-2.5443, -3.5222, -3.4297, -4.0406, -4.1303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3184, device='cuda:0', dtype=torch.float64)
tensor([-2.5562, -3.5159, -3.4248, -4.0369, -4.1257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1360, device='cuda:0', dtype=torch.float64)
tensor([-2.5675, -3.5083, -3.4172, -4.0360, -4.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0950, device='cuda:0', dtype=torch.float64)
tensor([-2.5814, -3.5047, -3.4085, -4.0321, -4.1173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2310, device='cuda:0', dtype=torch.float64)
tensor([-2.5907, -3.5001, -3.4029, -4.0297, -4.1125], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2215, device='cuda:0', dtype=torch.float64)
tensor([-2.5967, -3.4964, -3.3995, -4.0273, -4.1071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1606, device='cuda:0', dtype=torch.float64)
tensor([-2.5997, -3.4924, -3.3984, -4.0252, -4.0991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1912, device='cuda:0', dtype=torch.float64)
tensor([-2.6051, -3.4884, -3.3983, -4.0247, -4.0953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1089, device='cuda:0', dtype=torch.float64)
tensor([-2.6075, -3.4862, -3.4002, -4.0280, -4.0963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0861, device='cuda:0', dtype=torch.float64)
tensor([-2.6052, -3.4811, -3.4072, -4.0373, -4.0978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1376, device='cuda:0', dtype=torch.float64)
tensor([-2.6033, -3.4765, -3.4124, -4.0489, -4.1003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1067, device='cuda:0', dtype=torch.float64)
tensor([-2.5968, -3.4742, -3.4172, -4.0623, -4.1017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0780, device='cuda:0', dtype=torch.float64)
tensor([-2.5885, -3.4702, -3.4220, -4.0750, -4.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-2.5772, -3.4723, -3.4237, -4.0817, -4.1036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2183, device='cuda:0', dtype=torch.float64)
tensor([-2.5648, -3.4787, -3.4281, -4.0874, -4.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2182, device='cuda:0', dtype=torch.float64)
tensor([-2.5577, -3.4890, -3.4313, -4.0866, -4.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1532, device='cuda:0', dtype=torch.float64)
tensor([-2.5490, -3.5005, -3.4356, -4.0850, -4.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1481, device='cuda:0', dtype=torch.float64)
tensor([-2.5407, -3.5168, -3.4418, -4.0868, -4.1135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1965, device='cuda:0', dtype=torch.float64)
tensor([-2.5270, -3.5309, -3.4510, -4.0847, -4.1185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2457, device='cuda:0', dtype=torch.float64)
tensor([-2.5167, -3.5407, -3.4610, -4.0852, -4.1241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1677, device='cuda:0', dtype=torch.float64)
tensor([-2.5121, -3.5496, -3.4712, -4.0870, -4.1300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1766, device='cuda:0', dtype=torch.float64)
tensor([-2.5109, -3.5551, -3.4811, -4.0853, -4.1354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1366, device='cuda:0', dtype=torch.float64)
tensor([-2.5095, -3.5608, -3.4895, -4.0883, -4.1336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1932, device='cuda:0', dtype=torch.float64)
tensor([-2.5132, -3.5682, -3.4958, -4.0842, -4.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2442, device='cuda:0', dtype=torch.float64)
tensor([-2.5164, -3.5761, -3.5032, -4.0759, -4.1236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1780, device='cuda:0', dtype=torch.float64)
tensor([-2.5192, -3.5776, -3.5072, -4.0684, -4.1180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0493, device='cuda:0', dtype=torch.float64)
tensor([-2.5220, -3.5804, -3.5099, -4.0571, -4.1126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2167, device='cuda:0', dtype=torch.float64)
tensor([-2.5253, -3.5734, -3.5115, -4.0447, -4.1081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-2.5295, -3.5643, -3.5120, -4.0361, -4.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1619, device='cuda:0', dtype=torch.float64)
tensor([-2.5359, -3.5540, -3.5121, -4.0281, -4.1012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1569, device='cuda:0', dtype=torch.float64)
tensor([-2.5396, -3.5509, -3.5154, -4.0255, -4.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1843, device='cuda:0', dtype=torch.float64)
tensor([-2.5423, -3.5435, -3.5165, -4.0269, -4.0869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1186, device='cuda:0', dtype=torch.float64)
tensor([-2.5494, -3.5355, -3.5185, -4.0312, -4.0825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-2.5550, -3.5293, -3.5168, -4.0335, -4.0830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1737, device='cuda:0', dtype=torch.float64)
tensor([-2.5595, -3.5195, -3.5136, -4.0400, -4.0849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0735, device='cuda:0', dtype=torch.float64)
tensor([-2.5590, -3.5122, -3.5115, -4.0484, -4.0872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0971, device='cuda:0', dtype=torch.float64)
tensor([-2.5559, -3.5065, -3.5111, -4.0547, -4.0871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3802, device='cuda:0', dtype=torch.float64)
tensor([-2.5539, -3.5002, -3.5101, -4.0654, -4.0789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1138, device='cuda:0', dtype=torch.float64)
tensor([-2.5510, -3.4943, -3.5076, -4.0784, -4.0728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1726, device='cuda:0', dtype=torch.float64)
tensor([-2.5444, -3.4899, -3.5064, -4.0876, -4.0639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2499, device='cuda:0', dtype=torch.float64)
tensor([-2.5379, -3.4824, -3.5098, -4.1058, -4.0564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2044, device='cuda:0', dtype=torch.float64)
tensor([-2.5297, -3.4826, -3.5111, -4.1247, -4.0522], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1391, device='cuda:0', dtype=torch.float64)
tensor([-2.5211, -3.4801, -3.5139, -4.1451, -4.0481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([-2.5130, -3.4753, -3.5152, -4.1598, -4.0440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0640, device='cuda:0', dtype=torch.float64)
tensor([-2.5095, -3.4698, -3.5176, -4.1728, -4.0348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0498, device='cuda:0', dtype=torch.float64)
tensor([-2.5030, -3.4645, -3.5190, -4.1792, -4.0312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0578, device='cuda:0', dtype=torch.float64)
tensor([-2.4978, -3.4611, -3.5210, -4.1814, -4.0294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2844, device='cuda:0', dtype=torch.float64)
tensor([-2.5006, -3.4532, -3.5184, -4.1739, -4.0309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3638, device='cuda:0', dtype=torch.float64)
tensor([-2.5000, -3.4544, -3.5124, -4.1679, -4.0387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1427, device='cuda:0', dtype=torch.float64)
tensor([-2.5014, -3.4550, -3.5071, -4.1631, -4.0439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1150, device='cuda:0', dtype=torch.float64)
tensor([-2.5007, -3.4570, -3.5043, -4.1620, -4.0503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0968, device='cuda:0', dtype=torch.float64)
tensor([-2.4993, -3.4550, -3.5036, -4.1586, -4.0526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1134, device='cuda:0', dtype=torch.float64)
tensor([-2.4949, -3.4542, -3.5071, -4.1558, -4.0516], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([-2.4892, -3.4522, -3.5098, -4.1455, -4.0508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0914, device='cuda:0', dtype=torch.float64)
tensor([-2.4834, -3.4508, -3.5098, -4.1343, -4.0539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1417, device='cuda:0', dtype=torch.float64)
tensor([-2.4845, -3.4457, -3.5107, -4.1223, -4.0583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2318, device='cuda:0', dtype=torch.float64)
tensor([-2.4905, -3.4379, -3.5105, -4.1113, -4.0643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2243, device='cuda:0', dtype=torch.float64)
tensor([-2.4955, -3.4290, -3.5103, -4.0992, -4.0722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2391, device='cuda:0', dtype=torch.float64)
tensor([-2.5051, -3.4231, -3.5093, -4.0857, -4.0760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0984, device='cuda:0', dtype=torch.float64)
tensor([-2.5154, -3.4158, -3.5065, -4.0730, -4.0805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2737, device='cuda:0', dtype=torch.float64)
tensor([-2.5218, -3.4124, -3.5030, -4.0623, -4.0852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2938, device='cuda:0', dtype=torch.float64)
tensor([-2.5281, -3.4124, -3.4992, -4.0521, -4.0889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1193, device='cuda:0', dtype=torch.float64)
tensor([-2.5280, -3.4148, -3.4959, -4.0437, -4.0946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3689, device='cuda:0', dtype=torch.float64)
tensor([-2.5281, -3.4223, -3.4937, -4.0378, -4.0996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4539, device='cuda:0', dtype=torch.float64)
tensor([-2.5298, -3.4350, -3.4894, -4.0363, -4.1018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1799, device='cuda:0', dtype=torch.float64)
tensor([-2.5269, -3.4476, -3.4864, -4.0375, -4.1039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2070, device='cuda:0', dtype=torch.float64)
tensor([-2.5241, -3.4585, -3.4843, -4.0380, -4.1053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1596, device='cuda:0', dtype=torch.float64)
tensor([-2.5185, -3.4722, -3.4843, -4.0413, -4.1073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1682, device='cuda:0', dtype=torch.float64)
tensor([-2.5079, -3.4829, -3.4873, -4.0468, -4.1023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2147, device='cuda:0', dtype=torch.float64)
tensor([-2.4944, -3.4959, -3.4934, -4.0547, -4.1032], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3028, device='cuda:0', dtype=torch.float64)
tensor([-2.4778, -3.5011, -3.5017, -4.0620, -4.1037], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1902, device='cuda:0', dtype=torch.float64)
tensor([-2.4638, -3.5129, -3.5087, -4.0700, -4.1034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3730, device='cuda:0', dtype=torch.float64)
tensor([-2.4528, -3.5257, -3.5125, -4.0837, -4.1080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2494, device='cuda:0', dtype=torch.float64)
tensor([-2.4466, -3.5392, -3.5145, -4.0968, -4.1194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2972, device='cuda:0', dtype=torch.float64)
tensor([-2.4394, -3.5468, -3.5173, -4.1126, -4.1281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3153, device='cuda:0', dtype=torch.float64)
tensor([-2.4335, -3.5561, -3.5188, -4.1221, -4.1341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1214, device='cuda:0', dtype=torch.float64)
tensor([-2.4317, -3.5627, -3.5196, -4.1315, -4.1447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2388, device='cuda:0', dtype=torch.float64)
tensor([-2.4288, -3.5667, -3.5189, -4.1419, -4.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2657, device='cuda:0', dtype=torch.float64)
tensor([-2.4286, -3.5698, -3.5134, -4.1453, -4.1687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2563, device='cuda:0', dtype=torch.float64)
tensor([-2.4370, -3.5705, -3.5074, -4.1502, -4.1821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1638, device='cuda:0', dtype=torch.float64)
tensor([-2.4458, -3.5714, -3.5022, -4.1528, -4.1933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-2.4607, -3.5734, -3.4984, -4.1610, -4.2050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3753, device='cuda:0', dtype=torch.float64)
tensor([-2.4772, -3.5775, -3.4943, -4.1691, -4.2132], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2907, device='cuda:0', dtype=torch.float64)
tensor([-2.4967, -3.5795, -3.4890, -4.1730, -4.2235], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2976, device='cuda:0', dtype=torch.float64)
tensor([-2.5150, -3.5790, -3.4840, -4.1764, -4.2356], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0824, device='cuda:0', dtype=torch.float64)
tensor([-2.5351, -3.5772, -3.4782, -4.1761, -4.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1540, device='cuda:0', dtype=torch.float64)
tensor([-2.5498, -3.5753, -3.4735, -4.1726, -4.2475], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2500, device='cuda:0', dtype=torch.float64)
tensor([-2.5592, -3.5753, -3.4734, -4.1736, -4.2463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0524, device='cuda:0', dtype=torch.float64)
tensor([-2.5658, -3.5717, -3.4771, -4.1751, -4.2375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1189, device='cuda:0', dtype=torch.float64)
tensor([-2.5725, -3.5667, -3.4822, -4.1742, -4.2256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2701, device='cuda:0', dtype=torch.float64)
tensor([-2.5794, -3.5654, -3.4891, -4.1754, -4.2149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1897, device='cuda:0', dtype=torch.float64)
tensor([-2.5842, -3.5597, -3.4961, -4.1746, -4.2023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1539, device='cuda:0', dtype=torch.float64)
tensor([-2.5848, -3.5530, -3.5043, -4.1762, -4.1884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2904, device='cuda:0', dtype=torch.float64)
tensor([-2.5892, -3.5455, -3.5081, -4.1744, -4.1761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0427, device='cuda:0', dtype=torch.float64)
tensor([-2.5894, -3.5376, -3.5100, -4.1731, -4.1661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1301, device='cuda:0', dtype=torch.float64)
tensor([-2.5901, -3.5303, -3.5116, -4.1806, -4.1550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0295, device='cuda:0', dtype=torch.float64)
tensor([-2.5847, -3.5304, -3.5133, -4.1907, -4.1435], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0512, device='cuda:0', dtype=torch.float64)
tensor([-2.5820, -3.5361, -3.5146, -4.2030, -4.1355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1947, device='cuda:0', dtype=torch.float64)
tensor([-2.5802, -3.5430, -3.5154, -4.2159, -4.1276], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1996, device='cuda:0', dtype=torch.float64)
tensor([-2.5812, -3.5490, -3.5161, -4.2299, -4.1249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0910, device='cuda:0', dtype=torch.float64)
tensor([-2.5840, -3.5580, -3.5190, -4.2407, -4.1244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0472, device='cuda:0', dtype=torch.float64)
tensor([-2.5876, -3.5622, -3.5213, -4.2447, -4.1246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0149, device='cuda:0', dtype=torch.float64)
tensor([-2.5884, -3.5647, -3.5227, -4.2438, -4.1270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1279, device='cuda:0', dtype=torch.float64)
tensor([-2.5858, -3.5726, -3.5233, -4.2452, -4.1292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9938, device='cuda:0', dtype=torch.float64)
tensor([-2.5838, -3.5778, -3.5250, -4.2430, -4.1293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1118, device='cuda:0', dtype=torch.float64)
tensor([-2.5798, -3.5821, -3.5265, -4.2408, -4.1332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1576, device='cuda:0', dtype=torch.float64)
tensor([-2.5695, -3.5889, -3.5269, -4.2384, -4.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0399, device='cuda:0', dtype=torch.float64)
tensor([-2.5593, -3.5945, -3.5291, -4.2341, -4.1316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0200, device='cuda:0', dtype=torch.float64)
tensor([-2.5507, -3.5986, -3.5317, -4.2302, -4.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2455, device='cuda:0', dtype=torch.float64)
tensor([-2.5431, -3.5968, -3.5370, -4.2279, -4.1298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3291, device='cuda:0', dtype=torch.float64)
tensor([-2.5383, -3.5990, -3.5392, -4.2252, -4.1328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2282, device='cuda:0', dtype=torch.float64)
tensor([-2.5408, -3.5971, -3.5402, -4.2189, -4.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1906, device='cuda:0', dtype=torch.float64)
tensor([-2.5424, -3.5958, -3.5391, -4.2142, -4.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1368, device='cuda:0', dtype=torch.float64)
tensor([-2.5459, -3.5943, -3.5410, -4.2119, -4.1218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0786, device='cuda:0', dtype=torch.float64)
tensor([-2.5520, -3.5939, -3.5412, -4.2098, -4.1204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([-2.5564, -3.5905, -3.5430, -4.2056, -4.1197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1573, device='cuda:0', dtype=torch.float64)
tensor([-2.5559, -3.5893, -3.5465, -4.2020, -4.1202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3423, device='cuda:0', dtype=torch.float64)
tensor([-2.5572, -3.5870, -3.5480, -4.1951, -4.1201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0048, device='cuda:0', dtype=torch.float64)
tensor([-2.5587, -3.5872, -3.5513, -4.1864, -4.1210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2917, device='cuda:0', dtype=torch.float64)
tensor([-2.5600, -3.5884, -3.5567, -4.1761, -4.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3284, device='cuda:0', dtype=torch.float64)
tensor([-2.5619, -3.5840, -3.5624, -4.1677, -4.1188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2542, device='cuda:0', dtype=torch.float64)
tensor([-2.5697, -3.5770, -3.5655, -4.1615, -4.1199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9843, device='cuda:0', dtype=torch.float64)
tensor([-2.5786, -3.5678, -3.5663, -4.1567, -4.1178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2462, device='cuda:0', dtype=torch.float64)
tensor([-2.5929, -3.5566, -3.5682, -4.1530, -4.1163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0983, device='cuda:0', dtype=torch.float64)
tensor([-2.6103, -3.5485, -3.5702, -4.1495, -4.1147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1747, device='cuda:0', dtype=torch.float64)
tensor([-2.6253, -3.5471, -3.5691, -4.1480, -4.1117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0763, device='cuda:0', dtype=torch.float64)
tensor([-2.6376, -3.5486, -3.5701, -4.1439, -4.1069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2259, device='cuda:0', dtype=torch.float64)
tensor([-2.6509, -3.5520, -3.5708, -4.1384, -4.0974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2070, device='cuda:0', dtype=torch.float64)
tensor([-2.6579, -3.5561, -3.5722, -4.1316, -4.0893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3242, device='cuda:0', dtype=torch.float64)
tensor([-2.6631, -3.5539, -3.5695, -4.1246, -4.0837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2932, device='cuda:0', dtype=torch.float64)
tensor([-2.6632, -3.5512, -3.5661, -4.1180, -4.0766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1622, device='cuda:0', dtype=torch.float64)
tensor([-2.6543, -3.5563, -3.5631, -4.1087, -4.0684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2235, device='cuda:0', dtype=torch.float64)
tensor([-2.6400, -3.5610, -3.5600, -4.0997, -4.0590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2438, device='cuda:0', dtype=torch.float64)
tensor([-2.6263, -3.5657, -3.5613, -4.0953, -4.0502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1552, device='cuda:0', dtype=torch.float64)
tensor([-2.6066, -3.5721, -3.5613, -4.0944, -4.0454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2076, device='cuda:0', dtype=torch.float64)
tensor([-2.5897, -3.5762, -3.5600, -4.0919, -4.0494], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3006, device='cuda:0', dtype=torch.float64)
tensor([-2.5715, -3.5757, -3.5586, -4.0827, -4.0593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3179, device='cuda:0', dtype=torch.float64)
tensor([-2.5576, -3.5849, -3.5577, -4.0756, -4.0678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-2.5454, -3.5935, -3.5568, -4.0736, -4.0747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0550, device='cuda:0', dtype=torch.float64)
tensor([-2.5311, -3.5956, -3.5557, -4.0705, -4.0821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2952, device='cuda:0', dtype=torch.float64)
tensor([-2.5183, -3.5927, -3.5552, -4.0673, -4.0883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4535, device='cuda:0', dtype=torch.float64)
tensor([-2.5112, -3.5916, -3.5535, -4.0659, -4.0985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0868, device='cuda:0', dtype=torch.float64)
tensor([-2.5064, -3.5908, -3.5498, -4.0658, -4.1146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1071, device='cuda:0', dtype=torch.float64)
tensor([-2.5031, -3.5913, -3.5445, -4.0695, -4.1284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([-2.4989, -3.5952, -3.5383, -4.0777, -4.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2043, device='cuda:0', dtype=torch.float64)
tensor([-2.5038, -3.5903, -3.5319, -4.0856, -4.1454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9941, device='cuda:0', dtype=torch.float64)
tensor([-2.5076, -3.5854, -3.5276, -4.0881, -4.1502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4267, device='cuda:0', dtype=torch.float64)
tensor([-2.5128, -3.5731, -3.5224, -4.0928, -4.1483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1627, device='cuda:0', dtype=torch.float64)
tensor([-2.5215, -3.5630, -3.5178, -4.1016, -4.1451], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0396, device='cuda:0', dtype=torch.float64)
tensor([-2.5324, -3.5550, -3.5141, -4.1160, -4.1449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9784, device='cuda:0', dtype=torch.float64)
tensor([-2.5440, -3.5448, -3.5119, -4.1277, -4.1419], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2851, device='cuda:0', dtype=torch.float64)
tensor([-2.5633, -3.5358, -3.5074, -4.1382, -4.1486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2124, device='cuda:0', dtype=torch.float64)
tensor([-2.5839, -3.5303, -3.5024, -4.1511, -4.1568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0534, device='cuda:0', dtype=torch.float64)
tensor([-2.6036, -3.5283, -3.4995, -4.1615, -4.1666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1642, device='cuda:0', dtype=torch.float64)
tensor([-2.6216, -3.5326, -3.4978, -4.1714, -4.1787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4405, device='cuda:0', dtype=torch.float64)
tensor([-2.6379, -3.5412, -3.4940, -4.1787, -4.1908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0778, device='cuda:0', dtype=torch.float64)
tensor([-2.6490, -3.5517, -3.4929, -4.1831, -4.2007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2161, device='cuda:0', dtype=torch.float64)
tensor([-2.6519, -3.5594, -3.4957, -4.1864, -4.2087], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0021, device='cuda:0', dtype=torch.float64)
tensor([-2.6495, -3.5663, -3.5037, -4.1882, -4.2184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1061, device='cuda:0', dtype=torch.float64)
tensor([-2.6489, -3.5702, -3.5131, -4.1893, -4.2282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([-2.6479, -3.5748, -3.5214, -4.1877, -4.2363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1246, device='cuda:0', dtype=torch.float64)
tensor([-2.6443, -3.5764, -3.5296, -4.1859, -4.2422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1545, device='cuda:0', dtype=torch.float64)
tensor([-2.6346, -3.5758, -3.5369, -4.1871, -4.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9308, device='cuda:0', dtype=torch.float64)
tensor([-2.6279, -3.5708, -3.5462, -4.1892, -4.2487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1507, device='cuda:0', dtype=torch.float64)
tensor([-2.6173, -3.5704, -3.5541, -4.1863, -4.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1611, device='cuda:0', dtype=torch.float64)
tensor([-2.6139, -3.5697, -3.5592, -4.1821, -4.2513], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-2.6118, -3.5689, -3.5621, -4.1798, -4.2535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1133, device='cuda:0', dtype=torch.float64)
tensor([-2.6145, -3.5656, -3.5635, -4.1735, -4.2549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2262, device='cuda:0', dtype=torch.float64)
tensor([-2.6218, -3.5612, -3.5612, -4.1653, -4.2570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1440, device='cuda:0', dtype=torch.float64)
tensor([-2.6283, -3.5620, -3.5597, -4.1551, -4.2563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0968, device='cuda:0', dtype=torch.float64)
tensor([-2.6314, -3.5620, -3.5611, -4.1476, -4.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0918, device='cuda:0', dtype=torch.float64)
tensor([-2.6421, -3.5610, -3.5604, -4.1404, -4.2569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2279, device='cuda:0', dtype=torch.float64)
tensor([-2.6478, -3.5566, -3.5642, -4.1319, -4.2566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3302, device='cuda:0', dtype=torch.float64)
tensor([-2.6508, -3.5509, -3.5660, -4.1270, -4.2549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1891, device='cuda:0', dtype=torch.float64)
tensor([-2.6512, -3.5450, -3.5676, -4.1258, -4.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3152, device='cuda:0', dtype=torch.float64)
tensor([-2.6535, -3.5409, -3.5687, -4.1246, -4.2524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0089, device='cuda:0', dtype=torch.float64)
tensor([-2.6606, -3.5382, -3.5664, -4.1232, -4.2507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4200, device='cuda:0', dtype=torch.float64)
tensor([-2.6628, -3.5431, -3.5636, -4.1212, -4.2486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2258, device='cuda:0', dtype=torch.float64)
tensor([-2.6646, -3.5430, -3.5610, -4.1204, -4.2500], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0216, device='cuda:0', dtype=torch.float64)
tensor([-2.6693, -3.5411, -3.5569, -4.1179, -4.2548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-2.6695, -3.5361, -3.5565, -4.1192, -4.2632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-2.6697, -3.5336, -3.5616, -4.1257, -4.2683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1349, device='cuda:0', dtype=torch.float64)
tensor([-2.6717, -3.5329, -3.5667, -4.1358, -4.2718], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1221, device='cuda:0', dtype=torch.float64)
tensor([-2.6732, -3.5382, -3.5691, -4.1442, -4.2764], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1087, device='cuda:0', dtype=torch.float64)
tensor([-2.6764, -3.5436, -3.5713, -4.1546, -4.2834], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0730, device='cuda:0', dtype=torch.float64)
tensor([-2.6727, -3.5559, -3.5739, -4.1689, -4.2872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2503, device='cuda:0', dtype=torch.float64)
tensor([-2.6723, -3.5631, -3.5775, -4.1813, -4.2854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9690, device='cuda:0', dtype=torch.float64)
tensor([-2.6754, -3.5717, -3.5775, -4.1930, -4.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0431, device='cuda:0', dtype=torch.float64)
tensor([-2.6767, -3.5770, -3.5778, -4.2030, -4.2840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2764, device='cuda:0', dtype=torch.float64)
tensor([-2.6777, -3.5882, -3.5774, -4.2158, -4.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0355, device='cuda:0', dtype=torch.float64)
tensor([-2.6797, -3.6021, -3.5741, -4.2253, -4.2810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2665, device='cuda:0', dtype=torch.float64)
tensor([-2.6818, -3.6128, -3.5720, -4.2365, -4.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3262, device='cuda:0', dtype=torch.float64)
tensor([-2.6874, -3.6214, -3.5683, -4.2441, -4.2839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1186, device='cuda:0', dtype=torch.float64)
tensor([-2.6833, -3.6361, -3.5656, -4.2492, -4.2795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2187, device='cuda:0', dtype=torch.float64)
tensor([-2.6816, -3.6481, -3.5608, -4.2505, -4.2735], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8372, device='cuda:0', dtype=torch.float64)
tensor([-2.6791, -3.6499, -3.5588, -4.2487, -4.2651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9957, device='cuda:0', dtype=torch.float64)
tensor([-2.6706, -3.6560, -3.5536, -4.2489, -4.2572], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0778, device='cuda:0', dtype=torch.float64)
tensor([-2.6619, -3.6625, -3.5497, -4.2439, -4.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1437, device='cuda:0', dtype=torch.float64)
tensor([-2.6511, -3.6638, -3.5510, -4.2433, -4.2550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0614, device='cuda:0', dtype=torch.float64)
tensor([-2.6420, -3.6686, -3.5524, -4.2418, -4.2496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0518, device='cuda:0', dtype=torch.float64)
tensor([-2.6348, -3.6721, -3.5582, -4.2387, -4.2449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2621, device='cuda:0', dtype=torch.float64)
tensor([-2.6330, -3.6708, -3.5613, -4.2307, -4.2460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-2.6282, -3.6598, -3.5660, -4.2267, -4.2441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1524, device='cuda:0', dtype=torch.float64)
tensor([-2.6239, -3.6517, -3.5715, -4.2255, -4.2426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2031, device='cuda:0', dtype=torch.float64)
tensor([-2.6246, -3.6400, -3.5763, -4.2276, -4.2402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3162, device='cuda:0', dtype=torch.float64)
tensor([-2.6218, -3.6335, -3.5805, -4.2368, -4.2382], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2683, device='cuda:0', dtype=torch.float64)
tensor([-2.6204, -3.6241, -3.5845, -4.2471, -4.2387], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3745, device='cuda:0', dtype=torch.float64)
tensor([-2.6227, -3.6191, -3.5884, -4.2567, -4.2421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1202, device='cuda:0', dtype=torch.float64)
tensor([-2.6247, -3.6106, -3.5909, -4.2688, -4.2456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1730, device='cuda:0', dtype=torch.float64)
tensor([-2.6249, -3.6088, -3.5944, -4.2794, -4.2493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0194, device='cuda:0', dtype=torch.float64)
tensor([-2.6281, -3.6020, -3.5997, -4.2870, -4.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2572, device='cuda:0', dtype=torch.float64)
tensor([-2.6276, -3.6065, -3.6010, -4.2908, -4.2583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1267, device='cuda:0', dtype=torch.float64)
tensor([-2.6310, -3.6069, -3.5994, -4.2908, -4.2610], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0998, device='cuda:0', dtype=torch.float64)
tensor([-2.6367, -3.6101, -3.5971, -4.2969, -4.2629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3018, device='cuda:0', dtype=torch.float64)
tensor([-2.6462, -3.6094, -3.5924, -4.2981, -4.2630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2661, device='cuda:0', dtype=torch.float64)
tensor([-2.6576, -3.6075, -3.5857, -4.3009, -4.2581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3012, device='cuda:0', dtype=torch.float64)
tensor([-2.6692, -3.6080, -3.5790, -4.3108, -4.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2426, device='cuda:0', dtype=torch.float64)
tensor([-2.6835, -3.6079, -3.5696, -4.3233, -4.2581], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1883, device='cuda:0', dtype=torch.float64)
tensor([-2.6992, -3.6018, -3.5660, -4.3363, -4.2638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2077, device='cuda:0', dtype=torch.float64)
tensor([-2.7115, -3.5978, -3.5631, -4.3516, -4.2713], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1393, device='cuda:0', dtype=torch.float64)
tensor([-2.7178, -3.5963, -3.5623, -4.3669, -4.2781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-2.7216, -3.5920, -3.5639, -4.3788, -4.2820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0707, device='cuda:0', dtype=torch.float64)
tensor([-2.7205, -3.5826, -3.5659, -4.3865, -4.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2065, device='cuda:0', dtype=torch.float64)
tensor([-2.7196, -3.5817, -3.5653, -4.3871, -4.2884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1069, device='cuda:0', dtype=torch.float64)
tensor([-2.7201, -3.5769, -3.5652, -4.3792, -4.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0289, device='cuda:0', dtype=torch.float64)
tensor([-2.7248, -3.5690, -3.5656, -4.3681, -4.2933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2106, device='cuda:0', dtype=torch.float64)
tensor([-2.7220, -3.5608, -3.5694, -4.3607, -4.2950], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0813, device='cuda:0', dtype=torch.float64)
tensor([-2.7202, -3.5559, -3.5725, -4.3483, -4.2987], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1528, device='cuda:0', dtype=torch.float64)
tensor([-2.7237, -3.5491, -3.5748, -4.3307, -4.2936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1000, device='cuda:0', dtype=torch.float64)
tensor([-2.7238, -3.5437, -3.5783, -4.3143, -4.2874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1278, device='cuda:0', dtype=torch.float64)
tensor([-2.7219, -3.5456, -3.5808, -4.3014, -4.2870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0509, device='cuda:0', dtype=torch.float64)
tensor([-2.7239, -3.5500, -3.5840, -4.2921, -4.2892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1490, device='cuda:0', dtype=torch.float64)
tensor([-2.7297, -3.5581, -3.5852, -4.2876, -4.2909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-2.7387, -3.5658, -3.5826, -4.2813, -4.2907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0768, device='cuda:0', dtype=torch.float64)
tensor([-2.7509, -3.5761, -3.5785, -4.2782, -4.2958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9948, device='cuda:0', dtype=torch.float64)
tensor([-2.7610, -3.5875, -3.5726, -4.2745, -4.3042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2916, device='cuda:0', dtype=torch.float64)
tensor([-2.7717, -3.5933, -3.5658, -4.2737, -4.3202], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2013, device='cuda:0', dtype=torch.float64)
tensor([-2.7849, -3.5972, -3.5581, -4.2747, -4.3327], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1733, device='cuda:0', dtype=torch.float64)
tensor([-2.7986, -3.5969, -3.5491, -4.2761, -4.3423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1316, device='cuda:0', dtype=torch.float64)
tensor([-2.8147, -3.5981, -3.5374, -4.2763, -4.3565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1678, device='cuda:0', dtype=torch.float64)
tensor([-2.8327, -3.6003, -3.5284, -4.2820, -4.3701], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0483, device='cuda:0', dtype=torch.float64)
tensor([-2.8507, -3.6033, -3.5228, -4.2881, -4.3830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-2.8638, -3.6099, -3.5193, -4.3013, -4.3946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3679, device='cuda:0', dtype=torch.float64)
tensor([-2.8777, -3.6152, -3.5152, -4.3072, -4.4090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3420, device='cuda:0', dtype=torch.float64)
tensor([-2.8911, -3.6243, -3.5138, -4.3121, -4.4143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0902, device='cuda:0', dtype=torch.float64)
tensor([-2.9046, -3.6330, -3.5152, -4.3172, -4.4165], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2258, device='cuda:0', dtype=torch.float64)
tensor([-2.9169, -3.6385, -3.5177, -4.3180, -4.4097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0667, device='cuda:0', dtype=torch.float64)
tensor([-2.9194, -3.6458, -3.5234, -4.3136, -4.3999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9802, device='cuda:0', dtype=torch.float64)
tensor([-2.9151, -3.6521, -3.5300, -4.3035, -4.3888], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2650, device='cuda:0', dtype=torch.float64)
tensor([-2.9084, -3.6557, -3.5392, -4.2952, -4.3696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0298, device='cuda:0', dtype=torch.float64)
tensor([-2.8980, -3.6587, -3.5469, -4.2821, -4.3527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0928, device='cuda:0', dtype=torch.float64)
tensor([-2.8743, -3.6670, -3.5558, -4.2716, -4.3354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1644, device='cuda:0', dtype=torch.float64)
tensor([-2.8486, -3.6800, -3.5617, -4.2643, -4.3212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1451, device='cuda:0', dtype=torch.float64)
tensor([-2.8237, -3.6944, -3.5689, -4.2600, -4.3106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1716, device='cuda:0', dtype=torch.float64)
tensor([-2.8004, -3.7181, -3.5766, -4.2611, -4.3036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-2.7813, -3.7447, -3.5863, -4.2645, -4.3010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2445, device='cuda:0', dtype=torch.float64)
tensor([-2.7638, -3.7736, -3.5956, -4.2712, -4.3005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8953, device='cuda:0', dtype=torch.float64)
tensor([-2.7455, -3.8001, -3.6062, -4.2765, -4.2979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3158, device='cuda:0', dtype=torch.float64)
tensor([-2.7328, -3.8169, -3.6202, -4.2812, -4.2939], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1923, device='cuda:0', dtype=torch.float64)
tensor([-2.7235, -3.8271, -3.6308, -4.2856, -4.2927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3528, device='cuda:0', dtype=torch.float64)
tensor([-2.7236, -3.8340, -3.6350, -4.2871, -4.2930], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2015, device='cuda:0', dtype=torch.float64)
tensor([-2.7227, -3.8390, -3.6361, -4.2902, -4.2964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2483, device='cuda:0', dtype=torch.float64)
tensor([-2.7228, -3.8435, -3.6333, -4.2918, -4.3028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1845, device='cuda:0', dtype=torch.float64)
tensor([-2.7302, -3.8406, -3.6306, -4.2837, -4.3088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9502, device='cuda:0', dtype=torch.float64)
tensor([-2.7422, -3.8363, -3.6267, -4.2740, -4.3172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0040, device='cuda:0', dtype=torch.float64)
tensor([-2.7521, -3.8193, -3.6235, -4.2606, -4.3258], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0483, device='cuda:0', dtype=torch.float64)
tensor([-2.7528, -3.8054, -3.6198, -4.2514, -4.3325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1098, device='cuda:0', dtype=torch.float64)
tensor([-2.7547, -3.7939, -3.6166, -4.2413, -4.3445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0078, device='cuda:0', dtype=torch.float64)
tensor([-2.7550, -3.7769, -3.6140, -4.2342, -4.3579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1520, device='cuda:0', dtype=torch.float64)
tensor([-2.7619, -3.7590, -3.6086, -4.2287, -4.3700], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0568, device='cuda:0', dtype=torch.float64)
tensor([-2.7687, -3.7388, -3.6028, -4.2168, -4.3771], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0280, device='cuda:0', dtype=torch.float64)
tensor([-2.7797, -3.7162, -3.5975, -4.2054, -4.3851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3525, device='cuda:0', dtype=torch.float64)
tensor([-2.7874, -3.6975, -3.5983, -4.1969, -4.3875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-2.7952, -3.6875, -3.5983, -4.1941, -4.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1232, device='cuda:0', dtype=torch.float64)
tensor([-2.7981, -3.6782, -3.6024, -4.1956, -4.3927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-2.8039, -3.6756, -3.6074, -4.1959, -4.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1819, device='cuda:0', dtype=torch.float64)
tensor([-2.8117, -3.6762, -3.6120, -4.1946, -4.3871], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9746, device='cuda:0', dtype=torch.float64)
tensor([-2.8197, -3.6764, -3.6176, -4.1893, -4.3807], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-2.8282, -3.6741, -3.6222, -4.1838, -4.3686], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4878, device='cuda:0', dtype=torch.float64)
tensor([-2.8247, -3.6777, -3.6315, -4.1752, -4.3583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2237, device='cuda:0', dtype=torch.float64)
tensor([-2.8190, -3.6829, -3.6402, -4.1708, -4.3477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9676, device='cuda:0', dtype=torch.float64)
tensor([-2.8181, -3.6866, -3.6476, -4.1660, -4.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1574, device='cuda:0', dtype=torch.float64)
tensor([-2.8124, -3.6924, -3.6604, -4.1644, -4.3263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2457, device='cuda:0', dtype=torch.float64)
tensor([-2.8063, -3.6935, -3.6755, -4.1605, -4.3222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0695, device='cuda:0', dtype=torch.float64)
tensor([-2.8049, -3.6969, -3.6917, -4.1550, -4.3151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9400, device='cuda:0', dtype=torch.float64)
tensor([-2.8041, -3.7021, -3.7065, -4.1528, -4.3115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3382, device='cuda:0', dtype=torch.float64)
tensor([-2.8086, -3.7037, -3.7215, -4.1548, -4.3134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0496, device='cuda:0', dtype=torch.float64)
tensor([-2.8157, -3.7074, -3.7316, -4.1525, -4.3137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-2.8233, -3.7123, -3.7411, -4.1482, -4.3149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0529, device='cuda:0', dtype=torch.float64)
tensor([-2.8274, -3.7183, -3.7461, -4.1394, -4.3179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0552, device='cuda:0', dtype=torch.float64)
tensor([-2.8344, -3.7281, -3.7486, -4.1312, -4.3209], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0045, device='cuda:0', dtype=torch.float64)
tensor([-2.8388, -3.7322, -3.7490, -4.1258, -4.3237], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0247, device='cuda:0', dtype=torch.float64)
tensor([-2.8342, -3.7406, -3.7499, -4.1235, -4.3291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0848, device='cuda:0', dtype=torch.float64)
tensor([-2.8242, -3.7484, -3.7527, -4.1217, -4.3321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1623, device='cuda:0', dtype=torch.float64)
tensor([-2.8174, -3.7519, -3.7525, -4.1259, -4.3337], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1048, device='cuda:0', dtype=torch.float64)
tensor([-2.8102, -3.7555, -3.7546, -4.1306, -4.3355], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2296, device='cuda:0', dtype=torch.float64)
tensor([-2.8048, -3.7517, -3.7542, -4.1388, -4.3323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0570, device='cuda:0', dtype=torch.float64)
tensor([-2.7974, -3.7415, -3.7551, -4.1514, -4.3302], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0635, device='cuda:0', dtype=torch.float64)
tensor([-2.7887, -3.7319, -3.7570, -4.1696, -4.3240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0115, device='cuda:0', dtype=torch.float64)
tensor([-2.7800, -3.7276, -3.7574, -4.1872, -4.3216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9836, device='cuda:0', dtype=torch.float64)
tensor([-2.7759, -3.7148, -3.7550, -4.2040, -4.3170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0497, device='cuda:0', dtype=torch.float64)
tensor([-2.7680, -3.7052, -3.7536, -4.2196, -4.3135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0046, device='cuda:0', dtype=torch.float64)
tensor([-2.7626, -3.6983, -3.7501, -4.2332, -4.3107], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0527, device='cuda:0', dtype=torch.float64)
tensor([-2.7649, -3.6901, -3.7446, -4.2378, -4.3104], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0358, device='cuda:0', dtype=torch.float64)
tensor([-2.7716, -3.6892, -3.7396, -4.2442, -4.3114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1730, device='cuda:0', dtype=torch.float64)
tensor([-2.7854, -3.6927, -3.7364, -4.2475, -4.3090], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1207, device='cuda:0', dtype=torch.float64)
tensor([-2.7928, -3.6945, -3.7330, -4.2458, -4.3099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1395, device='cuda:0', dtype=torch.float64)
tensor([-2.7988, -3.6958, -3.7300, -4.2433, -4.3066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0825, device='cuda:0', dtype=torch.float64)
tensor([-2.8033, -3.6969, -3.7295, -4.2424, -4.2999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2428, device='cuda:0', dtype=torch.float64)
tensor([-2.8053, -3.6937, -3.7278, -4.2479, -4.2944], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1033, device='cuda:0', dtype=torch.float64)
tensor([-2.8076, -3.6990, -3.7242, -4.2504, -4.2969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9804, device='cuda:0', dtype=torch.float64)
tensor([-2.8069, -3.7065, -3.7206, -4.2504, -4.2990], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1185, device='cuda:0', dtype=torch.float64)
tensor([-2.8019, -3.7096, -3.7192, -4.2495, -4.2975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0786, device='cuda:0', dtype=torch.float64)
tensor([-2.7986, -3.7104, -3.7168, -4.2476, -4.3036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-2.7942, -3.7094, -3.7161, -4.2474, -4.3095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2637, device='cuda:0', dtype=torch.float64)
tensor([-2.7908, -3.7115, -3.7176, -4.2509, -4.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3017, device='cuda:0', dtype=torch.float64)
tensor([-2.7896, -3.7075, -3.7188, -4.2533, -4.3178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1445, device='cuda:0', dtype=torch.float64)
tensor([-2.7828, -3.7079, -3.7190, -4.2521, -4.3207], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1353, device='cuda:0', dtype=torch.float64)
tensor([-2.7796, -3.7194, -3.7191, -4.2501, -4.3244], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2214, device='cuda:0', dtype=torch.float64)
tensor([-2.7829, -3.7325, -3.7171, -4.2438, -4.3293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1503, device='cuda:0', dtype=torch.float64)
tensor([-2.7888, -3.7417, -3.7167, -4.2345, -4.3349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4373, device='cuda:0', dtype=torch.float64)
tensor([-2.8010, -3.7517, -3.7143, -4.2321, -4.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9794, device='cuda:0', dtype=torch.float64)
tensor([-2.8130, -3.7573, -3.7124, -4.2260, -4.3569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0936, device='cuda:0', dtype=torch.float64)
tensor([-2.8214, -3.7641, -3.7157, -4.2238, -4.3694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1870, device='cuda:0', dtype=torch.float64)
tensor([-2.8229, -3.7754, -3.7194, -4.2264, -4.3782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0180, device='cuda:0', dtype=torch.float64)
tensor([-2.8281, -3.7904, -3.7206, -4.2273, -4.3820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-2.8405, -3.8023, -3.7209, -4.2295, -4.3836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9751, device='cuda:0', dtype=torch.float64)
tensor([-2.8485, -3.8183, -3.7256, -4.2343, -4.3850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1445, device='cuda:0', dtype=torch.float64)
tensor([-2.8525, -3.8332, -3.7338, -4.2402, -4.3849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0296, device='cuda:0', dtype=torch.float64)
tensor([-2.8575, -3.8452, -3.7397, -4.2418, -4.3868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8926, device='cuda:0', dtype=torch.float64)
tensor([-2.8668, -3.8526, -3.7446, -4.2448, -4.3909], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([-2.8751, -3.8571, -3.7488, -4.2451, -4.3952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2442, device='cuda:0', dtype=torch.float64)
tensor([-2.8792, -3.8650, -3.7533, -4.2491, -4.3962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0659, device='cuda:0', dtype=torch.float64)
tensor([-2.8784, -3.8677, -3.7552, -4.2485, -4.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2241, device='cuda:0', dtype=torch.float64)
tensor([-2.8827, -3.8685, -3.7573, -4.2531, -4.3897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1017, device='cuda:0', dtype=torch.float64)
tensor([-2.8861, -3.8691, -3.7607, -4.2602, -4.3850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1065, device='cuda:0', dtype=torch.float64)
tensor([-2.8863, -3.8672, -3.7620, -4.2686, -4.3763], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0651, device='cuda:0', dtype=torch.float64)
tensor([-2.8835, -3.8661, -3.7626, -4.2756, -4.3683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0494, device='cuda:0', dtype=torch.float64)
tensor([-2.8792, -3.8596, -3.7627, -4.2842, -4.3619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2055, device='cuda:0', dtype=torch.float64)
tensor([-2.8830, -3.8613, -3.7606, -4.2954, -4.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0992, device='cuda:0', dtype=torch.float64)
tensor([-2.8798, -3.8722, -3.7567, -4.3140, -4.3496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1552, device='cuda:0', dtype=torch.float64)
tensor([-2.8741, -3.8727, -3.7592, -4.3374, -4.3457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3013, device='cuda:0', dtype=torch.float64)
tensor([-2.8584, -3.8661, -3.7680, -4.3500, -4.3427], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0957, device='cuda:0', dtype=torch.float64)
tensor([-2.8363, -3.8549, -3.7759, -4.3626, -4.3436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2078, device='cuda:0', dtype=torch.float64)
tensor([-2.8135, -3.8403, -3.7793, -4.3704, -4.3409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0921, device='cuda:0', dtype=torch.float64)
tensor([-2.7929, -3.8226, -3.7798, -4.3771, -4.3383], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.4706, device='cuda:0', dtype=torch.float64)
tensor([-2.7846, -3.8140, -3.7804, -4.3773, -4.3394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0109, device='cuda:0', dtype=torch.float64)
tensor([-2.7840, -3.8052, -3.7779, -4.3849, -4.3432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0470, device='cuda:0', dtype=torch.float64)
tensor([-2.7825, -3.7935, -3.7757, -4.3876, -4.3486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0406, device='cuda:0', dtype=torch.float64)
tensor([-2.7862, -3.7802, -3.7720, -4.3869, -4.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0516, device='cuda:0', dtype=torch.float64)
tensor([-2.7937, -3.7671, -3.7651, -4.3801, -4.3534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2032, device='cuda:0', dtype=torch.float64)
tensor([-2.8007, -3.7599, -3.7602, -4.3801, -4.3560], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1286, device='cuda:0', dtype=torch.float64)
tensor([-2.8068, -3.7528, -3.7567, -4.3819, -4.3649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2848, device='cuda:0', dtype=torch.float64)
tensor([-2.8165, -3.7559, -3.7526, -4.3808, -4.3758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9213, device='cuda:0', dtype=torch.float64)
tensor([-2.8252, -3.7582, -3.7449, -4.3783, -4.3838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2072, device='cuda:0', dtype=torch.float64)
tensor([-2.8305, -3.7606, -3.7396, -4.3821, -4.3973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2793, device='cuda:0', dtype=torch.float64)
tensor([-2.8437, -3.7604, -3.7375, -4.3891, -4.4094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-2.8556, -3.7615, -3.7364, -4.3975, -4.4183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0643, device='cuda:0', dtype=torch.float64)
tensor([-2.8693, -3.7635, -3.7350, -4.4012, -4.4332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0868, device='cuda:0', dtype=torch.float64)
tensor([-2.8878, -3.7587, -3.7335, -4.4042, -4.4442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2178, device='cuda:0', dtype=torch.float64)
tensor([-2.8983, -3.7622, -3.7354, -4.4156, -4.4536], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1284, device='cuda:0', dtype=torch.float64)
tensor([-2.9072, -3.7693, -3.7380, -4.4237, -4.4604], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1677, device='cuda:0', dtype=torch.float64)
tensor([-2.9148, -3.7771, -3.7408, -4.4303, -4.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0733, device='cuda:0', dtype=torch.float64)
tensor([-2.9266, -3.7905, -3.7469, -4.4312, -4.4643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0993, device='cuda:0', dtype=torch.float64)
tensor([-2.9424, -3.8098, -3.7558, -4.4267, -4.4650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9660, device='cuda:0', dtype=torch.float64)
tensor([-2.9567, -3.8266, -3.7640, -4.4196, -4.4655], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1069, device='cuda:0', dtype=torch.float64)
tensor([-2.9659, -3.8444, -3.7689, -4.4101, -4.4710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2446, device='cuda:0', dtype=torch.float64)
tensor([-2.9693, -3.8569, -3.7764, -4.4035, -4.4814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9873, device='cuda:0', dtype=torch.float64)
tensor([-2.9714, -3.8620, -3.7872, -4.3962, -4.4861], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2333, device='cuda:0', dtype=torch.float64)
tensor([-2.9759, -3.8620, -3.7958, -4.3949, -4.4872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0623, device='cuda:0', dtype=torch.float64)
tensor([-2.9784, -3.8645, -3.8036, -4.3933, -4.4867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2730, device='cuda:0', dtype=torch.float64)
tensor([-2.9782, -3.8693, -3.8121, -4.3966, -4.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0251, device='cuda:0', dtype=torch.float64)
tensor([-2.9726, -3.8740, -3.8226, -4.4004, -4.4777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1416, device='cuda:0', dtype=torch.float64)
tensor([-2.9655, -3.8857, -3.8297, -4.4056, -4.4777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2196, device='cuda:0', dtype=torch.float64)
tensor([-2.9670, -3.9020, -3.8340, -4.4098, -4.4808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9369, device='cuda:0', dtype=torch.float64)
tensor([-2.9690, -3.9121, -3.8349, -4.4107, -4.4830], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2258, device='cuda:0', dtype=torch.float64)
tensor([-2.9712, -3.9221, -3.8377, -4.4159, -4.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1511, device='cuda:0', dtype=torch.float64)
tensor([-2.9771, -3.9253, -3.8419, -4.4231, -4.4799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1595, device='cuda:0', dtype=torch.float64)
tensor([-2.9855, -3.9261, -3.8454, -4.4274, -4.4850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2580, device='cuda:0', dtype=torch.float64)
tensor([-3.0041, -3.9223, -3.8447, -4.4308, -4.4956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1374, device='cuda:0', dtype=torch.float64)
tensor([-3.0176, -3.9239, -3.8476, -4.4346, -4.5109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9679, device='cuda:0', dtype=torch.float64)
tensor([-3.0264, -3.9233, -3.8565, -4.4418, -4.5288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-3.0358, -3.9195, -3.8614, -4.4466, -4.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0896, device='cuda:0', dtype=torch.float64)
tensor([-3.0400, -3.9199, -3.8654, -4.4566, -4.5711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1538, device='cuda:0', dtype=torch.float64)
tensor([-3.0468, -3.9187, -3.8705, -4.4607, -4.5891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9652, device='cuda:0', dtype=torch.float64)
tensor([-3.0538, -3.9160, -3.8748, -4.4640, -4.6041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3736, device='cuda:0', dtype=torch.float64)
tensor([-3.0572, -3.9176, -3.8759, -4.4633, -4.6130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2322, device='cuda:0', dtype=torch.float64)
tensor([-3.0583, -3.9223, -3.8788, -4.4663, -4.6251], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0033, device='cuda:0', dtype=torch.float64)
tensor([-3.0560, -3.9330, -3.8799, -4.4679, -4.6380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2668, device='cuda:0', dtype=torch.float64)
tensor([-3.0519, -3.9423, -3.8850, -4.4651, -4.6510], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9515, device='cuda:0', dtype=torch.float64)
tensor([-3.0500, -3.9539, -3.8885, -4.4627, -4.6639], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0995, device='cuda:0', dtype=torch.float64)
tensor([-3.0490, -3.9669, -3.8908, -4.4629, -4.6758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1550, device='cuda:0', dtype=torch.float64)
tensor([-3.0483, -3.9809, -3.8910, -4.4678, -4.6851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1967, device='cuda:0', dtype=torch.float64)
tensor([-3.0414, -3.9913, -3.8909, -4.4739, -4.6883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0205, device='cuda:0', dtype=torch.float64)
tensor([-3.0341, -3.9996, -3.8893, -4.4872, -4.6916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-3.0240, -3.9997, -3.8909, -4.5020, -4.6891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9466, device='cuda:0', dtype=torch.float64)
tensor([-3.0212, -4.0011, -3.8898, -4.5178, -4.6848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9717, device='cuda:0', dtype=torch.float64)
tensor([-3.0194, -4.0039, -3.8866, -4.5296, -4.6841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2190, device='cuda:0', dtype=torch.float64)
tensor([-3.0180, -4.0118, -3.8859, -4.5431, -4.6795], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1923, device='cuda:0', dtype=torch.float64)
tensor([-3.0177, -4.0150, -3.8863, -4.5543, -4.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0743, device='cuda:0', dtype=torch.float64)
tensor([-3.0190, -4.0066, -3.8858, -4.5655, -4.6585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0584, device='cuda:0', dtype=torch.float64)
tensor([-3.0187, -4.0020, -3.8876, -4.5752, -4.6439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9934, device='cuda:0', dtype=torch.float64)
tensor([-3.0128, -3.9896, -3.8923, -4.5827, -4.6252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0625, device='cuda:0', dtype=torch.float64)
tensor([-2.9987, -3.9765, -3.8987, -4.5848, -4.6005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0396, device='cuda:0', dtype=torch.float64)
tensor([-2.9878, -3.9583, -3.9049, -4.5777, -4.5734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0420, device='cuda:0', dtype=torch.float64)
tensor([-2.9771, -3.9433, -3.9079, -4.5698, -4.5481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0021, device='cuda:0', dtype=torch.float64)
tensor([-2.9654, -3.9294, -3.9091, -4.5634, -4.5287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2506, device='cuda:0', dtype=torch.float64)
tensor([-2.9619, -3.9153, -3.9058, -4.5508, -4.5114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9765, device='cuda:0', dtype=torch.float64)
tensor([-2.9533, -3.9023, -3.9038, -4.5474, -4.4918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0054, device='cuda:0', dtype=torch.float64)
tensor([-2.9546, -3.8864, -3.9016, -4.5396, -4.4802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1022, device='cuda:0', dtype=torch.float64)
tensor([-2.9641, -3.8716, -3.8963, -4.5176, -4.4706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2546, device='cuda:0', dtype=torch.float64)
tensor([-2.9782, -3.8632, -3.8911, -4.5012, -4.4620], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1476, device='cuda:0', dtype=torch.float64)
tensor([-2.9934, -3.8556, -3.8838, -4.4800, -4.4576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0884, device='cuda:0', dtype=torch.float64)
tensor([-3.0049, -3.8541, -3.8818, -4.4663, -4.4569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0160, device='cuda:0', dtype=torch.float64)
tensor([-3.0211, -3.8523, -3.8731, -4.4524, -4.4549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0584, device='cuda:0', dtype=torch.float64)
tensor([-3.0395, -3.8517, -3.8656, -4.4456, -4.4517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1230, device='cuda:0', dtype=torch.float64)
tensor([-3.0561, -3.8574, -3.8611, -4.4392, -4.4466], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1865, device='cuda:0', dtype=torch.float64)
tensor([-3.0725, -3.8606, -3.8536, -4.4347, -4.4397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9644, device='cuda:0', dtype=torch.float64)
tensor([-3.0881, -3.8602, -3.8449, -4.4351, -4.4330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1320, device='cuda:0', dtype=torch.float64)
tensor([-3.1109, -3.8597, -3.8327, -4.4395, -4.4263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2677, device='cuda:0', dtype=torch.float64)
tensor([-3.1373, -3.8613, -3.8216, -4.4472, -4.4225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1025, device='cuda:0', dtype=torch.float64)
tensor([-3.1561, -3.8708, -3.8128, -4.4555, -4.4176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1853, device='cuda:0', dtype=torch.float64)
tensor([-3.1797, -3.8738, -3.8074, -4.4676, -4.4103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9886, device='cuda:0', dtype=torch.float64)
tensor([-3.1953, -3.8767, -3.8061, -4.4760, -4.4054], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1966, device='cuda:0', dtype=torch.float64)
tensor([-3.2060, -3.8810, -3.8065, -4.4875, -4.4046], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9304, device='cuda:0', dtype=torch.float64)
tensor([-3.2113, -3.8841, -3.8073, -4.5003, -4.4045], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1027, device='cuda:0', dtype=torch.float64)
tensor([-3.1982, -3.8940, -3.8076, -4.5070, -4.4096], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0814, device='cuda:0', dtype=torch.float64)
tensor([-3.1834, -3.9026, -3.8080, -4.5118, -4.4101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0881, device='cuda:0', dtype=torch.float64)
tensor([-3.1701, -3.9224, -3.8081, -4.5227, -4.4151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0460, device='cuda:0', dtype=torch.float64)
tensor([-3.1537, -3.9371, -3.8070, -4.5312, -4.4254], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2242, device='cuda:0', dtype=torch.float64)
tensor([-3.1439, -3.9441, -3.8083, -4.5334, -4.4407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0761, device='cuda:0', dtype=torch.float64)
tensor([-3.1242, -3.9436, -3.8100, -4.5379, -4.4617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0110, device='cuda:0', dtype=torch.float64)
tensor([-3.0999, -3.9404, -3.8135, -4.5445, -4.4813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2339, device='cuda:0', dtype=torch.float64)
tensor([-3.0797, -3.9462, -3.8174, -4.5449, -4.5006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-3.0666, -3.9400, -3.8223, -4.5413, -4.5192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1260, device='cuda:0', dtype=torch.float64)
tensor([-3.0498, -3.9404, -3.8303, -4.5444, -4.5360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0206, device='cuda:0', dtype=torch.float64)
tensor([-3.0276, -3.9393, -3.8379, -4.5465, -4.5577], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0989, device='cuda:0', dtype=torch.float64)
tensor([-3.0098, -3.9345, -3.8479, -4.5443, -4.5788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1746, device='cuda:0', dtype=torch.float64)
tensor([-2.9985, -3.9327, -3.8565, -4.5403, -4.5945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1341, device='cuda:0', dtype=torch.float64)
tensor([-2.9921, -3.9303, -3.8642, -4.5412, -4.6078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1204, device='cuda:0', dtype=torch.float64)
tensor([-2.9926, -3.9287, -3.8697, -4.5404, -4.6241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2295, device='cuda:0', dtype=torch.float64)
tensor([-3.0060, -3.9287, -3.8750, -4.5375, -4.6365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-3.0172, -3.9355, -3.8789, -4.5340, -4.6488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0749, device='cuda:0', dtype=torch.float64)
tensor([-3.0281, -3.9449, -3.8836, -4.5319, -4.6621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-3.0426, -3.9450, -3.8852, -4.5272, -4.6716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1491, device='cuda:0', dtype=torch.float64)
tensor([-3.0525, -3.9482, -3.8903, -4.5210, -4.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1252, device='cuda:0', dtype=torch.float64)
tensor([-3.0595, -3.9593, -3.8974, -4.5094, -4.6720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0276, device='cuda:0', dtype=torch.float64)
tensor([-3.0603, -3.9750, -3.9030, -4.4952, -4.6725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1662, device='cuda:0', dtype=torch.float64)
tensor([-3.0640, -3.9937, -3.9106, -4.4825, -4.6666], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2313, device='cuda:0', dtype=torch.float64)
tensor([-3.0669, -4.0188, -3.9200, -4.4723, -4.6641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0860, device='cuda:0', dtype=torch.float64)
tensor([-3.0713, -4.0422, -3.9314, -4.4707, -4.6690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1880, device='cuda:0', dtype=torch.float64)
tensor([-3.0800, -4.0611, -3.9395, -4.4707, -4.6724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0605, device='cuda:0', dtype=torch.float64)
tensor([-3.0837, -4.0813, -3.9465, -4.4758, -4.6743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1105, device='cuda:0', dtype=torch.float64)
tensor([-3.0924, -4.0949, -3.9534, -4.4827, -4.6782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8915, device='cuda:0', dtype=torch.float64)
tensor([-3.1058, -4.1034, -3.9575, -4.4873, -4.6836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1517, device='cuda:0', dtype=torch.float64)
tensor([-3.1223, -4.1132, -3.9617, -4.4919, -4.6841], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0319, device='cuda:0', dtype=torch.float64)
tensor([-3.1429, -4.1285, -3.9667, -4.5013, -4.6890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2239, device='cuda:0', dtype=torch.float64)
tensor([-3.1727, -4.1444, -3.9706, -4.5093, -4.6937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1962, device='cuda:0', dtype=torch.float64)
tensor([-3.1949, -4.1594, -3.9732, -4.5170, -4.6918], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0123, device='cuda:0', dtype=torch.float64)
tensor([-3.2126, -4.1691, -3.9736, -4.5213, -4.6894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-3.2292, -4.1773, -3.9716, -4.5284, -4.6893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0998, device='cuda:0', dtype=torch.float64)
tensor([-3.2501, -4.1811, -3.9693, -4.5405, -4.6883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1444, device='cuda:0', dtype=torch.float64)
tensor([-3.2612, -4.1877, -3.9670, -4.5441, -4.6870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1141, device='cuda:0', dtype=torch.float64)
tensor([-3.2615, -4.1994, -3.9647, -4.5490, -4.6884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([-3.2631, -4.2021, -3.9620, -4.5518, -4.6877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0587, device='cuda:0', dtype=torch.float64)
tensor([-3.2604, -4.2036, -3.9630, -4.5562, -4.6823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2171, device='cuda:0', dtype=torch.float64)
tensor([-3.2546, -4.2037, -3.9653, -4.5601, -4.6784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3167, device='cuda:0', dtype=torch.float64)
tensor([-3.2439, -4.2102, -3.9696, -4.5630, -4.6786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9111, device='cuda:0', dtype=torch.float64)
tensor([-3.2360, -4.2181, -3.9744, -4.5686, -4.6817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9381, device='cuda:0', dtype=torch.float64)
tensor([-3.2211, -4.2177, -3.9820, -4.5715, -4.6850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0136, device='cuda:0', dtype=torch.float64)
tensor([-3.2029, -4.2156, -3.9908, -4.5852, -4.6898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9871, device='cuda:0', dtype=torch.float64)
tensor([-3.1890, -4.2079, -4.0008, -4.5894, -4.6929], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0408, device='cuda:0', dtype=torch.float64)
tensor([-3.1788, -4.2048, -4.0094, -4.5948, -4.6962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8439, device='cuda:0', dtype=torch.float64)
tensor([-3.1681, -4.1991, -4.0174, -4.5987, -4.6962], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9577, device='cuda:0', dtype=torch.float64)
tensor([-3.1593, -4.1867, -4.0254, -4.5928, -4.6887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1329, device='cuda:0', dtype=torch.float64)
tensor([-3.1561, -4.1704, -4.0327, -4.5833, -4.6824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0011, device='cuda:0', dtype=torch.float64)
tensor([-3.1518, -4.1569, -4.0387, -4.5738, -4.6776], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0331, device='cuda:0', dtype=torch.float64)
tensor([-3.1541, -4.1550, -4.0447, -4.5690, -4.6769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0839, device='cuda:0', dtype=torch.float64)
tensor([-3.1561, -4.1512, -4.0499, -4.5658, -4.6783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0815, device='cuda:0', dtype=torch.float64)
tensor([-3.1673, -4.1532, -4.0562, -4.5660, -4.6796], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9787, device='cuda:0', dtype=torch.float64)
tensor([-3.1804, -4.1556, -4.0663, -4.5678, -4.6803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-3.1899, -4.1603, -4.0751, -4.5652, -4.6779], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2278, device='cuda:0', dtype=torch.float64)
tensor([-3.2010, -4.1629, -4.0807, -4.5594, -4.6782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2882, device='cuda:0', dtype=torch.float64)
tensor([-3.2084, -4.1579, -4.0836, -4.5514, -4.6812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-3.2122, -4.1572, -4.0851, -4.5431, -4.6817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0189, device='cuda:0', dtype=torch.float64)
tensor([-3.2115, -4.1508, -4.0892, -4.5320, -4.6840], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0618, device='cuda:0', dtype=torch.float64)
tensor([-3.2115, -4.1471, -4.0934, -4.5201, -4.6867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1194, device='cuda:0', dtype=torch.float64)
tensor([-3.2181, -4.1450, -4.0941, -4.5101, -4.6898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0556, device='cuda:0', dtype=torch.float64)
tensor([-3.2152, -4.1522, -4.0939, -4.5050, -4.6970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0226, device='cuda:0', dtype=torch.float64)
tensor([-3.2106, -4.1616, -4.0930, -4.5001, -4.7042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3434, device='cuda:0', dtype=torch.float64)
tensor([-3.2035, -4.1718, -4.0916, -4.4965, -4.7093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2285, device='cuda:0', dtype=torch.float64)
tensor([-3.2035, -4.1820, -4.0910, -4.5015, -4.7185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0935, device='cuda:0', dtype=torch.float64)
tensor([-3.2034, -4.1981, -4.0875, -4.5107, -4.7238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1090, device='cuda:0', dtype=torch.float64)
tensor([-3.2013, -4.2097, -4.0839, -4.5233, -4.7220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0821, device='cuda:0', dtype=torch.float64)
tensor([-3.1951, -4.2159, -4.0822, -4.5387, -4.7198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1345, device='cuda:0', dtype=torch.float64)
tensor([-3.1908, -4.2213, -4.0814, -4.5570, -4.7142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0505, device='cuda:0', dtype=torch.float64)
tensor([-3.1914, -4.2267, -4.0826, -4.5704, -4.7122], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9535, device='cuda:0', dtype=torch.float64)
tensor([-3.1885, -4.2250, -4.0828, -4.5871, -4.7064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1266, device='cuda:0', dtype=torch.float64)
tensor([-3.1892, -4.2188, -4.0818, -4.6016, -4.7042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9980, device='cuda:0', dtype=torch.float64)
tensor([-3.1910, -4.2120, -4.0816, -4.6126, -4.7018], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0530, device='cuda:0', dtype=torch.float64)
tensor([-3.1987, -4.2045, -4.0835, -4.6211, -4.6993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0401, device='cuda:0', dtype=torch.float64)
tensor([-3.2080, -4.2030, -4.0859, -4.6305, -4.6966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0227, device='cuda:0', dtype=torch.float64)
tensor([-3.2153, -4.2025, -4.0873, -4.6441, -4.6946], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2036, device='cuda:0', dtype=torch.float64)
tensor([-3.2287, -4.2000, -4.0863, -4.6568, -4.6970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9116, device='cuda:0', dtype=torch.float64)
tensor([-3.2360, -4.1987, -4.0865, -4.6697, -4.6999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9631, device='cuda:0', dtype=torch.float64)
tensor([-3.2461, -4.2078, -4.0856, -4.6826, -4.7008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0374, device='cuda:0', dtype=torch.float64)
tensor([-3.2484, -4.2207, -4.0842, -4.6930, -4.7055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1915, device='cuda:0', dtype=torch.float64)
tensor([-3.2442, -4.2334, -4.0873, -4.7030, -4.7106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0627, device='cuda:0', dtype=torch.float64)
tensor([-3.2426, -4.2513, -4.0883, -4.7076, -4.7170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-3.2384, -4.2658, -4.0874, -4.7102, -4.7249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1348, device='cuda:0', dtype=torch.float64)
tensor([-3.2422, -4.2702, -4.0896, -4.7113, -4.7358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8800, device='cuda:0', dtype=torch.float64)
tensor([-3.2466, -4.2732, -4.0933, -4.7155, -4.7422], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1537, device='cuda:0', dtype=torch.float64)
tensor([-3.2588, -4.2861, -4.0969, -4.7130, -4.7433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2019, device='cuda:0', dtype=torch.float64)
tensor([-3.2716, -4.3130, -4.1013, -4.7104, -4.7515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0887, device='cuda:0', dtype=torch.float64)
tensor([-3.2926, -4.3284, -4.1075, -4.7087, -4.7597], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9791, device='cuda:0', dtype=torch.float64)
tensor([-3.3089, -4.3361, -4.1129, -4.7023, -4.7716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0567, device='cuda:0', dtype=torch.float64)
tensor([-3.3248, -4.3401, -4.1181, -4.6979, -4.7787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0348, device='cuda:0', dtype=torch.float64)
tensor([-3.3430, -4.3476, -4.1205, -4.6932, -4.7835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9309, device='cuda:0', dtype=torch.float64)
tensor([-3.3534, -4.3576, -4.1247, -4.6995, -4.7885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1140, device='cuda:0', dtype=torch.float64)
tensor([-3.3640, -4.3572, -4.1283, -4.7003, -4.7893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0295, device='cuda:0', dtype=torch.float64)
tensor([-3.3707, -4.3622, -4.1294, -4.6988, -4.7849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9548, device='cuda:0', dtype=torch.float64)
tensor([-3.3748, -4.3601, -4.1313, -4.6888, -4.7766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9821, device='cuda:0', dtype=torch.float64)
tensor([-3.3747, -4.3608, -4.1317, -4.6763, -4.7693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2122, device='cuda:0', dtype=torch.float64)
tensor([-3.3663, -4.3570, -4.1316, -4.6692, -4.7573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9507, device='cuda:0', dtype=torch.float64)
tensor([-3.3620, -4.3462, -4.1329, -4.6617, -4.7455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-3.3582, -4.3333, -4.1372, -4.6571, -4.7362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1321, device='cuda:0', dtype=torch.float64)
tensor([-3.3554, -4.3243, -4.1439, -4.6597, -4.7279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1395, device='cuda:0', dtype=torch.float64)
tensor([-3.3490, -4.3101, -4.1539, -4.6599, -4.7176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9542, device='cuda:0', dtype=torch.float64)
tensor([-3.3411, -4.2957, -4.1655, -4.6631, -4.7081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0028, device='cuda:0', dtype=torch.float64)
tensor([-3.3291, -4.2885, -4.1772, -4.6653, -4.7020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1038, device='cuda:0', dtype=torch.float64)
tensor([-3.3222, -4.2814, -4.1922, -4.6811, -4.6965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1426, device='cuda:0', dtype=torch.float64)
tensor([-3.3318, -4.2785, -4.2048, -4.6991, -4.6956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9847, device='cuda:0', dtype=torch.float64)
tensor([-3.3354, -4.2782, -4.2132, -4.7058, -4.7011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2069, device='cuda:0', dtype=torch.float64)
tensor([-3.3368, -4.2852, -4.2227, -4.7132, -4.6999], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2996, device='cuda:0', dtype=torch.float64)
tensor([-3.3452, -4.2902, -4.2346, -4.7128, -4.7005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1357, device='cuda:0', dtype=torch.float64)
tensor([-3.3493, -4.2873, -4.2394, -4.7124, -4.7035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9844, device='cuda:0', dtype=torch.float64)
tensor([-3.3460, -4.2846, -4.2432, -4.7191, -4.7030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9519, device='cuda:0', dtype=torch.float64)
tensor([-3.3356, -4.2743, -4.2488, -4.7271, -4.7065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1626, device='cuda:0', dtype=torch.float64)
tensor([-3.3329, -4.2647, -4.2588, -4.7421, -4.7026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1104, device='cuda:0', dtype=torch.float64)
tensor([-3.3356, -4.2563, -4.2682, -4.7598, -4.7055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0708, device='cuda:0', dtype=torch.float64)
tensor([-3.3386, -4.2552, -4.2763, -4.7777, -4.7069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1606, device='cuda:0', dtype=torch.float64)
tensor([-3.3473, -4.2554, -4.2810, -4.8009, -4.7093], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0808, device='cuda:0', dtype=torch.float64)
tensor([-3.3512, -4.2552, -4.2842, -4.8271, -4.7115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1823, device='cuda:0', dtype=torch.float64)
tensor([-3.3582, -4.2525, -4.2833, -4.8377, -4.7188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0582, device='cuda:0', dtype=torch.float64)
tensor([-3.3649, -4.2528, -4.2797, -4.8384, -4.7245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9925, device='cuda:0', dtype=torch.float64)
tensor([-3.3704, -4.2553, -4.2771, -4.8426, -4.7294], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3343, device='cuda:0', dtype=torch.float64)
tensor([-3.3840, -4.2601, -4.2749, -4.8477, -4.7372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0516, device='cuda:0', dtype=torch.float64)
tensor([-3.3914, -4.2708, -4.2767, -4.8623, -4.7474], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8123, device='cuda:0', dtype=torch.float64)
tensor([-3.4056, -4.2749, -4.2802, -4.8783, -4.7544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1628, device='cuda:0', dtype=torch.float64)
tensor([-3.4199, -4.2842, -4.2808, -4.8938, -4.7575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9975, device='cuda:0', dtype=torch.float64)
tensor([-3.4350, -4.2861, -4.2850, -4.9062, -4.7578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3871, device='cuda:0', dtype=torch.float64)
tensor([-3.4520, -4.2828, -4.2907, -4.9099, -4.7587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9583, device='cuda:0', dtype=torch.float64)
tensor([-3.4718, -4.2772, -4.2941, -4.9007, -4.7628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9718, device='cuda:0', dtype=torch.float64)
tensor([-3.4887, -4.2704, -4.2965, -4.8925, -4.7724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9264, device='cuda:0', dtype=torch.float64)
tensor([-3.4995, -4.2739, -4.2950, -4.8756, -4.7801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2705, device='cuda:0', dtype=torch.float64)
tensor([-3.5177, -4.2860, -4.2944, -4.8691, -4.7864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9844, device='cuda:0', dtype=torch.float64)
tensor([-3.5386, -4.3044, -4.2942, -4.8679, -4.7952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-3.5570, -4.3269, -4.2986, -4.8705, -4.8088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0261, device='cuda:0', dtype=torch.float64)
tensor([-3.5771, -4.3523, -4.3049, -4.8759, -4.8198], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0518, device='cuda:0', dtype=torch.float64)
tensor([-3.5965, -4.3777, -4.3120, -4.8830, -4.8270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9447, device='cuda:0', dtype=torch.float64)
tensor([-3.6067, -4.4086, -4.3157, -4.9006, -4.8368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9942, device='cuda:0', dtype=torch.float64)
tensor([-3.6097, -4.4324, -4.3197, -4.9176, -4.8425], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9600, device='cuda:0', dtype=torch.float64)
tensor([-3.6040, -4.4487, -4.3251, -4.9379, -4.8463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1502, device='cuda:0', dtype=torch.float64)
tensor([-3.5966, -4.4663, -4.3312, -4.9504, -4.8483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9835, device='cuda:0', dtype=torch.float64)
tensor([-3.5836, -4.4862, -4.3361, -4.9585, -4.8476], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0722, device='cuda:0', dtype=torch.float64)
tensor([-3.5759, -4.5029, -4.3412, -4.9689, -4.8512], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0240, device='cuda:0', dtype=torch.float64)
tensor([-3.5754, -4.5076, -4.3449, -4.9739, -4.8508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1183, device='cuda:0', dtype=torch.float64)
tensor([-3.5727, -4.5141, -4.3477, -4.9773, -4.8549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1533, device='cuda:0', dtype=torch.float64)
tensor([-3.5772, -4.5172, -4.3523, -4.9831, -4.8530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0581, device='cuda:0', dtype=torch.float64)
tensor([-3.5843, -4.5143, -4.3619, -5.0030, -4.8477], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2422, device='cuda:0', dtype=torch.float64)
tensor([-3.6009, -4.5130, -4.3790, -5.0271, -4.8404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0269, device='cuda:0', dtype=torch.float64)
tensor([-3.6252, -4.5060, -4.3923, -5.0495, -4.8335], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3066, device='cuda:0', dtype=torch.float64)
tensor([-3.6556, -4.4912, -4.4128, -5.0743, -4.8361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-3.6856, -4.4751, -4.4293, -5.0958, -4.8346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1184, device='cuda:0', dtype=torch.float64)
tensor([-3.7014, -4.4647, -4.4452, -5.1168, -4.8345], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9547, device='cuda:0', dtype=torch.float64)
tensor([-3.7190, -4.4547, -4.4632, -5.1389, -4.8321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9989, device='cuda:0', dtype=torch.float64)
tensor([-3.7322, -4.4432, -4.4793, -5.1560, -4.8318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9982, device='cuda:0', dtype=torch.float64)
tensor([-3.7456, -4.4371, -4.4929, -5.1725, -4.8330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1494, device='cuda:0', dtype=torch.float64)
tensor([-3.7470, -4.4310, -4.5107, -5.1861, -4.8372], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0387, device='cuda:0', dtype=torch.float64)
tensor([-3.7427, -4.4302, -4.5248, -5.1915, -4.8414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0173, device='cuda:0', dtype=torch.float64)
tensor([-3.7441, -4.4283, -4.5322, -5.1920, -4.8463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0757, device='cuda:0', dtype=torch.float64)
tensor([-3.7361, -4.4353, -4.5379, -5.1951, -4.8565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1556, device='cuda:0', dtype=torch.float64)
tensor([-3.7402, -4.4317, -4.5492, -5.1980, -4.8619], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8624, device='cuda:0', dtype=torch.float64)
tensor([-3.7423, -4.4310, -4.5552, -5.2047, -4.8726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2355, device='cuda:0', dtype=torch.float64)
tensor([-3.7421, -4.4255, -4.5591, -5.2023, -4.8848], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9232, device='cuda:0', dtype=torch.float64)
tensor([-3.7343, -4.4241, -4.5662, -5.2131, -4.8934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9379, device='cuda:0', dtype=torch.float64)
tensor([-3.7336, -4.4200, -4.5678, -5.2146, -4.9029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1803, device='cuda:0', dtype=torch.float64)
tensor([-3.7369, -4.4152, -4.5660, -5.2057, -4.9081], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2214, device='cuda:0', dtype=torch.float64)
tensor([-3.7379, -4.4191, -4.5664, -5.1948, -4.9141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9702, device='cuda:0', dtype=torch.float64)
tensor([-3.7487, -4.4272, -4.5564, -5.1732, -4.9183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0017, device='cuda:0', dtype=torch.float64)
tensor([-3.7711, -4.4407, -4.5484, -5.1662, -4.9222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1782, device='cuda:0', dtype=torch.float64)
tensor([-3.8059, -4.4605, -4.5444, -5.1669, -4.9386], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0042, device='cuda:0', dtype=torch.float64)
tensor([-3.8345, -4.4765, -4.5396, -5.1714, -4.9527], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1113, device='cuda:0', dtype=torch.float64)
tensor([-3.8546, -4.4822, -4.5345, -5.1626, -4.9703], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2195, device='cuda:0', dtype=torch.float64)
tensor([-3.8719, -4.4840, -4.5254, -5.1470, -4.9902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0052, device='cuda:0', dtype=torch.float64)
tensor([-3.8849, -4.4922, -4.5208, -5.1319, -5.0159], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9200, device='cuda:0', dtype=torch.float64)
tensor([-3.8959, -4.5018, -4.5137, -5.1168, -5.0426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1742, device='cuda:0', dtype=torch.float64)
tensor([-3.8914, -4.5142, -4.5117, -5.1028, -5.0630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9632, device='cuda:0', dtype=torch.float64)
tensor([-3.8719, -4.5214, -4.5154, -5.0934, -5.0782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9061, device='cuda:0', dtype=torch.float64)
tensor([-3.8624, -4.5279, -4.5186, -5.0909, -5.0923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0621, device='cuda:0', dtype=torch.float64)
tensor([-3.8517, -4.5376, -4.5173, -5.0933, -5.1109], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9190, device='cuda:0', dtype=torch.float64)
tensor([-3.8410, -4.5371, -4.5197, -5.0942, -5.1323], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1998, device='cuda:0', dtype=torch.float64)
tensor([-3.8304, -4.5244, -4.5232, -5.0950, -5.1501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0281, device='cuda:0', dtype=torch.float64)
tensor([-3.8221, -4.5182, -4.5241, -5.1005, -5.1658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1326, device='cuda:0', dtype=torch.float64)
tensor([-3.8247, -4.5032, -4.5241, -5.1052, -5.1746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9985, device='cuda:0', dtype=torch.float64)
tensor([-3.8245, -4.5020, -4.5270, -5.1102, -5.1823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9681, device='cuda:0', dtype=torch.float64)
tensor([-3.8231, -4.5003, -4.5325, -5.1155, -5.1902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0730, device='cuda:0', dtype=torch.float64)
tensor([-3.8242, -4.4971, -4.5380, -5.1249, -5.2003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0059, device='cuda:0', dtype=torch.float64)
tensor([-3.8342, -4.4868, -4.5473, -5.1256, -5.2080], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3684, device='cuda:0', dtype=torch.float64)
tensor([-3.8467, -4.4861, -4.5510, -5.1280, -5.2246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9187, device='cuda:0', dtype=torch.float64)
tensor([-3.8666, -4.4899, -4.5540, -5.1258, -5.2436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2055, device='cuda:0', dtype=torch.float64)
tensor([-3.8874, -4.5127, -4.5557, -5.1184, -5.2657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9983, device='cuda:0', dtype=torch.float64)
tensor([-3.9009, -4.5301, -4.5570, -5.1049, -5.2896], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9939, device='cuda:0', dtype=torch.float64)
tensor([-3.9229, -4.5465, -4.5611, -5.0876, -5.3088], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0487, device='cuda:0', dtype=torch.float64)
tensor([-3.9337, -4.5543, -4.5721, -5.0801, -5.3288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9732, device='cuda:0', dtype=torch.float64)
tensor([-3.9443, -4.5599, -4.5829, -5.0850, -5.3489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0024, device='cuda:0', dtype=torch.float64)
tensor([-3.9402, -4.5652, -4.5956, -5.0866, -5.3660], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9811, device='cuda:0', dtype=torch.float64)
tensor([-3.9396, -4.5821, -4.6027, -5.0846, -5.3889], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-3.9429, -4.6151, -4.6083, -5.0914, -5.4174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0912, device='cuda:0', dtype=torch.float64)
tensor([-3.9449, -4.6429, -4.6173, -5.1025, -5.4453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0558, device='cuda:0', dtype=torch.float64)
tensor([-3.9518, -4.6749, -4.6288, -5.1141, -5.4676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0580, device='cuda:0', dtype=torch.float64)
tensor([-3.9612, -4.7032, -4.6403, -5.1248, -5.4854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0388, device='cuda:0', dtype=torch.float64)
tensor([-3.9684, -4.7282, -4.6567, -5.1281, -5.4985], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2011, device='cuda:0', dtype=torch.float64)
tensor([-3.9781, -4.7468, -4.6664, -5.1238, -5.5143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9107, device='cuda:0', dtype=torch.float64)
tensor([-3.9964, -4.7681, -4.6764, -5.1164, -5.5270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1572, device='cuda:0', dtype=torch.float64)
tensor([-4.0114, -4.7935, -4.6845, -5.1121, -5.5375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8896, device='cuda:0', dtype=torch.float64)
tensor([-4.0294, -4.8270, -4.6898, -5.1068, -5.5484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1405, device='cuda:0', dtype=torch.float64)
tensor([-4.0492, -4.8713, -4.6966, -5.1081, -5.5653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-4.0801, -4.9092, -4.7025, -5.1088, -5.5817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1281, device='cuda:0', dtype=torch.float64)
tensor([-4.1041, -4.9424, -4.7042, -5.1151, -5.5982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9170, device='cuda:0', dtype=torch.float64)
tensor([-4.1284, -4.9678, -4.7041, -5.1163, -5.6124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-4.1485, -4.9903, -4.7014, -5.1168, -5.6358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1846, device='cuda:0', dtype=torch.float64)
tensor([-4.1639, -5.0177, -4.7024, -5.1177, -5.6559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9975, device='cuda:0', dtype=torch.float64)
tensor([-4.1818, -5.0353, -4.7029, -5.1103, -5.6659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-4.1955, -5.0471, -4.7051, -5.1022, -5.6767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0655, device='cuda:0', dtype=torch.float64)
tensor([-4.2141, -5.0592, -4.7059, -5.1035, -5.6952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1587, device='cuda:0', dtype=torch.float64)
tensor([-4.2209, -5.0637, -4.7043, -5.1004, -5.7077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1048, device='cuda:0', dtype=torch.float64)
tensor([-4.2277, -5.0701, -4.7044, -5.1040, -5.7200], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0161, device='cuda:0', dtype=torch.float64)
tensor([-4.2361, -5.0653, -4.7065, -5.1082, -5.7317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9944, device='cuda:0', dtype=torch.float64)
tensor([-4.2445, -5.0647, -4.7112, -5.1181, -5.7468], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9592, device='cuda:0', dtype=torch.float64)
tensor([-4.2553, -5.0693, -4.7140, -5.1283, -5.7575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0790, device='cuda:0', dtype=torch.float64)
tensor([-4.2582, -5.0742, -4.7239, -5.1381, -5.7645], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8656, device='cuda:0', dtype=torch.float64)
tensor([-4.2580, -5.0728, -4.7355, -5.1476, -5.7699], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([-4.2647, -5.0782, -4.7452, -5.1604, -5.7704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9397, device='cuda:0', dtype=torch.float64)
tensor([-4.2638, -5.0776, -4.7539, -5.1815, -5.7689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0796, device='cuda:0', dtype=torch.float64)
tensor([-4.2744, -5.0664, -4.7637, -5.2065, -5.7644], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0555, device='cuda:0', dtype=torch.float64)
tensor([-4.2892, -5.0493, -4.7736, -5.2297, -5.7505], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0090, device='cuda:0', dtype=torch.float64)
tensor([-4.2989, -5.0315, -4.7853, -5.2549, -5.7384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9202, device='cuda:0', dtype=torch.float64)
tensor([-4.3037, -5.0266, -4.7973, -5.2754, -5.7328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9117, device='cuda:0', dtype=torch.float64)
tensor([-4.3034, -5.0125, -4.8079, -5.2871, -5.7263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9414, device='cuda:0', dtype=torch.float64)
tensor([-4.3011, -4.9993, -4.8185, -5.2973, -5.7163], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9821, device='cuda:0', dtype=torch.float64)
tensor([-4.3019, -4.9839, -4.8293, -5.2992, -5.7040], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8725, device='cuda:0', dtype=torch.float64)
tensor([-4.2985, -4.9804, -4.8403, -5.3059, -5.6983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8517, device='cuda:0', dtype=torch.float64)
tensor([-4.3029, -4.9693, -4.8504, -5.3142, -5.6969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8715, device='cuda:0', dtype=torch.float64)
tensor([-4.3048, -4.9610, -4.8591, -5.3186, -5.6992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8859, device='cuda:0', dtype=torch.float64)
tensor([-4.3051, -4.9467, -4.8649, -5.3208, -5.7030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9122, device='cuda:0', dtype=torch.float64)
tensor([-4.3044, -4.9344, -4.8679, -5.3181, -5.7039], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9493, device='cuda:0', dtype=torch.float64)
tensor([-4.3023, -4.9188, -4.8748, -5.3194, -5.7017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0638, device='cuda:0', dtype=torch.float64)
tensor([-4.3103, -4.9008, -4.8891, -5.3168, -5.6978], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0606, device='cuda:0', dtype=torch.float64)
tensor([-4.3145, -4.8854, -4.9028, -5.3116, -5.6972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9888, device='cuda:0', dtype=torch.float64)
tensor([-4.3187, -4.8785, -4.9163, -5.3106, -5.7078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0120, device='cuda:0', dtype=torch.float64)
tensor([-4.3245, -4.8765, -4.9265, -5.3148, -5.7230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9401, device='cuda:0', dtype=torch.float64)
tensor([-4.3348, -4.8737, -4.9350, -5.3191, -5.7406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1575, device='cuda:0', dtype=torch.float64)
tensor([-4.3415, -4.8708, -4.9414, -5.3249, -5.7551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2910, device='cuda:0', dtype=torch.float64)
tensor([-4.3500, -4.8753, -4.9418, -5.3307, -5.7710], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9205, device='cuda:0', dtype=torch.float64)
tensor([-4.3539, -4.8860, -4.9426, -5.3405, -5.7875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9017, device='cuda:0', dtype=torch.float64)
tensor([-4.3455, -4.8967, -4.9424, -5.3557, -5.8000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([-4.3424, -4.9074, -4.9328, -5.3656, -5.8108], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1634, device='cuda:0', dtype=torch.float64)
tensor([-4.3418, -4.9330, -4.9261, -5.3826, -5.8256], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9562, device='cuda:0', dtype=torch.float64)
tensor([-4.3399, -4.9503, -4.9204, -5.3964, -5.8395], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([-4.3410, -4.9758, -4.9176, -5.4161, -5.8501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9006, device='cuda:0', dtype=torch.float64)
tensor([-4.3429, -5.0087, -4.9168, -5.4383, -5.8635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9998, device='cuda:0', dtype=torch.float64)
tensor([-4.3456, -5.0318, -4.9228, -5.4588, -5.8727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9249, device='cuda:0', dtype=torch.float64)
tensor([-4.3467, -5.0570, -4.9320, -5.4774, -5.8845], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8995, device='cuda:0', dtype=torch.float64)
tensor([-4.3480, -5.0848, -4.9417, -5.4913, -5.8988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9769, device='cuda:0', dtype=torch.float64)
tensor([-4.3600, -5.1144, -4.9543, -5.5089, -5.9173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0649, device='cuda:0', dtype=torch.float64)
tensor([-4.3707, -5.1427, -4.9651, -5.5169, -5.9424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8981, device='cuda:0', dtype=torch.float64)
tensor([-4.3855, -5.1670, -4.9727, -5.5271, -5.9647], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0278, device='cuda:0', dtype=torch.float64)
tensor([-4.3973, -5.1833, -4.9736, -5.5348, -5.9793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0720, device='cuda:0', dtype=torch.float64)
tensor([-4.4123, -5.1937, -4.9783, -5.5440, -5.9935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9738, device='cuda:0', dtype=torch.float64)
tensor([-4.4186, -5.2031, -4.9872, -5.5563, -6.0052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9918, device='cuda:0', dtype=torch.float64)
tensor([-4.4177, -5.2099, -5.0007, -5.5721, -6.0162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0441, device='cuda:0', dtype=torch.float64)
tensor([-4.4195, -5.2122, -5.0177, -5.5887, -6.0249], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8999, device='cuda:0', dtype=torch.float64)
tensor([-4.4192, -5.2153, -5.0292, -5.6070, -6.0340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([-4.4373, -5.2129, -5.0283, -5.6177, -6.0486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9490, device='cuda:0', dtype=torch.float64)
tensor([-4.4499, -5.2160, -5.0323, -5.6376, -6.0589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8509, device='cuda:0', dtype=torch.float64)
tensor([-4.4577, -5.2261, -5.0340, -5.6524, -6.0781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7995, device='cuda:0', dtype=torch.float64)
tensor([-4.4720, -5.2323, -5.0376, -5.6675, -6.0965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8139, device='cuda:0', dtype=torch.float64)
tensor([-4.4778, -5.2353, -5.0428, -5.6810, -6.1030], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0145, device='cuda:0', dtype=torch.float64)
tensor([-4.4806, -5.2348, -5.0486, -5.6966, -6.1141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0567, device='cuda:0', dtype=torch.float64)
tensor([-4.4736, -5.2409, -5.0560, -5.7075, -6.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8231, device='cuda:0', dtype=torch.float64)
tensor([-4.4710, -5.2553, -5.0638, -5.7225, -6.1574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9484, device='cuda:0', dtype=torch.float64)
tensor([-4.4658, -5.2583, -5.0743, -5.7370, -6.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0119, device='cuda:0', dtype=torch.float64)
tensor([-4.4689, -5.2679, -5.0844, -5.7561, -6.2134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0151, device='cuda:0', dtype=torch.float64)
tensor([-4.4823, -5.2921, -5.0951, -5.7828, -6.2657], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9905, device='cuda:0', dtype=torch.float64)
tensor([-4.4939, -5.3146, -5.1114, -5.8091, -6.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9419, device='cuda:0', dtype=torch.float64)
tensor([-4.5045, -5.3450, -5.1266, -5.8463, -6.3785], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1284, device='cuda:0', dtype=torch.float64)
tensor([-4.5074, -5.3911, -5.1403, -5.8763, -6.4260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9141, device='cuda:0', dtype=torch.float64)
tensor([-4.5120, -5.4365, -5.1519, -5.9042, -6.4674], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9702, device='cuda:0', dtype=torch.float64)
tensor([-4.5184, -5.4758, -5.1645, -5.9405, -6.5025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8688, device='cuda:0', dtype=torch.float64)
tensor([-4.5280, -5.5168, -5.1776, -5.9761, -6.5334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0758, device='cuda:0', dtype=torch.float64)
tensor([-4.5484, -5.5569, -5.1905, -6.0099, -6.5594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9364, device='cuda:0', dtype=torch.float64)
tensor([-4.5676, -5.5901, -5.1992, -6.0373, -6.5911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9184, device='cuda:0', dtype=torch.float64)
tensor([-4.5889, -5.6212, -5.2167, -6.0659, -6.6133], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1703, device='cuda:0', dtype=torch.float64)
tensor([-4.6221, -5.6563, -5.2302, -6.0866, -6.6453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1584, device='cuda:0', dtype=torch.float64)
tensor([-4.6689, -5.6945, -5.2425, -6.0966, -6.6637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1067, device='cuda:0', dtype=torch.float64)
tensor([-4.7109, -5.7292, -5.2537, -6.1036, -6.6687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9322, device='cuda:0', dtype=torch.float64)
tensor([-4.7532, -5.7542, -5.2663, -6.1175, -6.6740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9337, device='cuda:0', dtype=torch.float64)
tensor([-4.7970, -5.7859, -5.2794, -6.1204, -6.6774], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9193, device='cuda:0', dtype=torch.float64)
tensor([-4.8478, -5.8141, -5.2934, -6.1343, -6.6874], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8290, device='cuda:0', dtype=torch.float64)
tensor([-4.8925, -5.8513, -5.3129, -6.1551, -6.7180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9007, device='cuda:0', dtype=torch.float64)
tensor([-4.9261, -5.8796, -5.3387, -6.1677, -6.7370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8824, device='cuda:0', dtype=torch.float64)
tensor([-4.9572, -5.8972, -5.3698, -6.1815, -6.7308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9351, device='cuda:0', dtype=torch.float64)
tensor([-4.9825, -5.9075, -5.4083, -6.2060, -6.7185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-5.0085, -5.9097, -5.4460, -6.2275, -6.6977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8269, device='cuda:0', dtype=torch.float64)
tensor([-5.0262, -5.9060, -5.4857, -6.2481, -6.6824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0748, device='cuda:0', dtype=torch.float64)
tensor([-5.0519, -5.9007, -5.5243, -6.2734, -6.6809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-5.0817, -5.9004, -5.5629, -6.2991, -6.6808], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1077, device='cuda:0', dtype=torch.float64)
tensor([-5.1181, -5.8985, -5.5929, -6.3291, -6.7052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9704, device='cuda:0', dtype=torch.float64)
tensor([-5.1605, -5.9115, -5.6141, -6.3561, -6.7314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9581, device='cuda:0', dtype=torch.float64)
tensor([-5.1986, -5.9301, -5.6310, -6.3885, -6.7635], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8480, device='cuda:0', dtype=torch.float64)
tensor([-5.2294, -5.9760, -5.6403, -6.4256, -6.7873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8215, device='cuda:0', dtype=torch.float64)
tensor([-5.2629, -6.0181, -5.6527, -6.4691, -6.8091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0810, device='cuda:0', dtype=torch.float64)
tensor([-5.2872, -6.0609, -5.6747, -6.5201, -6.8464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0539, device='cuda:0', dtype=torch.float64)
tensor([-5.3231, -6.1009, -5.7023, -6.5794, -6.8893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0192, device='cuda:0', dtype=torch.float64)
tensor([-5.3575, -6.1320, -5.7340, -6.6508, -6.9210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-5.3965, -6.1587, -5.7615, -6.7183, -6.9495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8909, device='cuda:0', dtype=torch.float64)
tensor([-5.4388, -6.1775, -5.7931, -6.7828, -6.9697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0330, device='cuda:0', dtype=torch.float64)
tensor([-5.4913, -6.2133, -5.8121, -6.8595, -7.0022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9714, device='cuda:0', dtype=torch.float64)
tensor([-5.5319, -6.2375, -5.8301, -6.9373, -7.0349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9825, device='cuda:0', dtype=torch.float64)
tensor([-5.5700, -6.2518, -5.8478, -7.0252, -7.0793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-5.5870, -6.2617, -5.8655, -7.1043, -7.1221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-5.6199, -6.2814, -5.8963, -7.1755, -7.1575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7144, device='cuda:0', dtype=torch.float64)
tensor([-5.6751, -6.2998, -5.9309, -7.2676, -7.2006], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9778, device='cuda:0', dtype=torch.float64)
tensor([-5.7296, -6.3187, -5.9618, -7.3541, -7.2397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0213, device='cuda:0', dtype=torch.float64)
tensor([-5.7837, -6.3302, -5.9895, -7.4447, -7.2903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8871, device='cuda:0', dtype=torch.float64)
tensor([-5.8454, -6.3355, -6.0175, -7.5336, -7.3426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8723, device='cuda:0', dtype=torch.float64)
tensor([-5.9118, -6.3566, -6.0396, -7.6161, -7.3960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9188, device='cuda:0', dtype=torch.float64)
tensor([-5.9759, -6.3819, -6.0729, -7.6970, -7.4438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9122, device='cuda:0', dtype=torch.float64)
tensor([-6.0357, -6.4048, -6.1088, -7.7896, -7.4813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9477, device='cuda:0', dtype=torch.float64)
tensor([-6.0941, -6.4207, -6.1446, -7.8750, -7.4955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9030, device='cuda:0', dtype=torch.float64)
tensor([-6.1743, -6.4360, -6.1882, -7.9646, -7.5068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9336, device='cuda:0', dtype=torch.float64)
tensor([-6.2686, -6.4645, -6.2322, -8.0635, -7.5230], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0951, device='cuda:0', dtype=torch.float64)
tensor([-6.3505, -6.5065, -6.2630, -8.1787, -7.5517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9964, device='cuda:0', dtype=torch.float64)
tensor([-6.4285, -6.5571, -6.2988, -8.2966, -7.5876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9333, device='cuda:0', dtype=torch.float64)
tensor([-6.5248, -6.6011, -6.3281, -8.4071, -7.6102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([-6.5924, -6.6497, -6.3505, -8.5020, -7.6338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0612, device='cuda:0', dtype=torch.float64)
tensor([-6.6077, -6.7160, -6.3755, -8.5718, -7.6638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9086, device='cuda:0', dtype=torch.float64)
tensor([-6.6400, -6.7815, -6.4028, -8.6470, -7.7003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8707, device='cuda:0', dtype=torch.float64)
tensor([-6.6733, -6.8322, -6.4377, -8.7304, -7.7453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0761, device='cuda:0', dtype=torch.float64)
tensor([-6.6796, -6.8940, -6.4878, -8.8247, -7.7928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0529, device='cuda:0', dtype=torch.float64)
tensor([-6.6755, -6.9602, -6.5422, -8.9266, -7.8465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-6.6964, -7.0179, -6.5753, -9.0167, -7.8782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2464, device='cuda:0', dtype=torch.float64)
tensor([-6.7264, -7.0845, -6.6259, -9.1150, -7.8892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8467, device='cuda:0', dtype=torch.float64)
tensor([-6.7443, -7.1507, -6.6768, -9.2286, -7.9117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0852, device='cuda:0', dtype=torch.float64)
tensor([-6.7602, -7.2085, -6.7216, -9.3313, -7.9493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0205, device='cuda:0', dtype=torch.float64)
tensor([-6.7844, -7.2561, -6.7567, -9.4154, -7.9856], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-6.7901, -7.3085, -6.7845, -9.4935, -8.0284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9721, device='cuda:0', dtype=torch.float64)
tensor([-6.7875, -7.3577, -6.7965, -9.5332, -8.0729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8751, device='cuda:0', dtype=torch.float64)
tensor([-6.8218, -7.4000, -6.7984, -9.5761, -8.1269], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9287, device='cuda:0', dtype=torch.float64)
tensor([-6.8269, -7.4340, -6.8095, -9.6259, -8.1897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9981, device='cuda:0', dtype=torch.float64)
tensor([-6.8561, -7.4698, -6.8237, -9.6794, -8.2570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9704, device='cuda:0', dtype=torch.float64)
tensor([-6.8648, -7.5025, -6.8235, -9.7243, -8.3267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1521, device='cuda:0', dtype=torch.float64)
tensor([-6.8819, -7.5488, -6.8204, -9.7886, -8.3887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9300, device='cuda:0', dtype=torch.float64)
tensor([-6.8999, -7.5766, -6.8330, -9.8532, -8.4449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0932, device='cuda:0', dtype=torch.float64)
tensor([-6.9296, -7.5990, -6.8414, -9.8812, -8.5053], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9273, device='cuda:0', dtype=torch.float64)
tensor([-6.9772, -7.6300, -6.8507, -9.9346, -8.5658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0038, device='cuda:0', dtype=torch.float64)
tensor([ -7.0213,  -7.6658,  -6.8622, -10.0079,  -8.6257], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8441, device='cuda:0', dtype=torch.float64)
tensor([ -7.0760,  -7.7142,  -6.8754, -10.0732,  -8.7160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0511, device='cuda:0', dtype=torch.float64)
tensor([ -7.1354,  -7.7805,  -6.8929, -10.1363,  -8.8052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9041, device='cuda:0', dtype=torch.float64)
tensor([ -7.2218,  -7.8619,  -6.9040, -10.1828,  -8.8722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1687, device='cuda:0', dtype=torch.float64)
tensor([ -7.3137,  -7.9210,  -6.9199, -10.2271,  -8.9041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0081, device='cuda:0', dtype=torch.float64)
tensor([ -7.4008,  -8.0039,  -6.9358, -10.2717,  -8.9640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9963, device='cuda:0', dtype=torch.float64)
tensor([ -7.4723,  -8.0528,  -6.9483, -10.3134,  -9.0181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9907, device='cuda:0', dtype=torch.float64)
tensor([ -7.5256,  -8.0947,  -6.9579, -10.3584,  -9.0758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9193, device='cuda:0', dtype=torch.float64)
tensor([ -7.5739,  -8.1310,  -6.9759, -10.4036,  -9.1232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([ -7.6075,  -8.1672,  -7.0096, -10.4238,  -9.1731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1491, device='cuda:0', dtype=torch.float64)
tensor([ -7.6606,  -8.1866,  -7.0451, -10.4675,  -9.1931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8482, device='cuda:0', dtype=torch.float64)
tensor([ -7.7116,  -8.2243,  -7.0927, -10.4964,  -9.2078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8949, device='cuda:0', dtype=torch.float64)
tensor([ -7.7733,  -8.2771,  -7.1351, -10.5373,  -9.2564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7768, device='cuda:0', dtype=torch.float64)
tensor([ -7.8499,  -8.3282,  -7.1796, -10.5827,  -9.3180], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0709, device='cuda:0', dtype=torch.float64)
tensor([ -7.9344,  -8.3789,  -7.2441, -10.6475,  -9.3716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9875, device='cuda:0', dtype=torch.float64)
tensor([ -8.0208,  -8.4264,  -7.3165, -10.7034,  -9.4273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0006, device='cuda:0', dtype=torch.float64)
tensor([ -8.1097,  -8.4742,  -7.4032, -10.7719,  -9.4899], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8643, device='cuda:0', dtype=torch.float64)
tensor([ -8.1790,  -8.5104,  -7.4966, -10.8098,  -9.5453], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7725, device='cuda:0', dtype=torch.float64)
tensor([ -8.2466,  -8.5451,  -7.5797, -10.8404,  -9.5864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0574, device='cuda:0', dtype=torch.float64)
tensor([ -8.2945,  -8.5694,  -7.6542, -10.8221,  -9.6332], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8506, device='cuda:0', dtype=torch.float64)
tensor([ -8.3492,  -8.6161,  -7.7361, -10.8262,  -9.7009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8797, device='cuda:0', dtype=torch.float64)
tensor([ -8.4206,  -8.6388,  -7.8092, -10.8533,  -9.7535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8874, device='cuda:0', dtype=torch.float64)
tensor([ -8.4864,  -8.6690,  -7.8969, -10.8669,  -9.7951], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9804, device='cuda:0', dtype=torch.float64)
tensor([ -8.5489,  -8.6956,  -7.9825, -10.8610,  -9.8444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7976, device='cuda:0', dtype=torch.float64)
tensor([ -8.6039,  -8.7323,  -8.0670, -10.8715,  -9.9048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8137, device='cuda:0', dtype=torch.float64)
tensor([ -8.6899,  -8.7719,  -8.1388, -10.8833,  -9.9734], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1434, device='cuda:0', dtype=torch.float64)
tensor([ -8.7367,  -8.8013,  -8.2339, -10.9398, -10.0630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8701, device='cuda:0', dtype=torch.float64)
tensor([ -8.7710,  -8.8377,  -8.3482, -10.9850, -10.1552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7717, device='cuda:0', dtype=torch.float64)
tensor([ -8.7982,  -8.8385,  -8.4406, -11.0174, -10.2208], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9988, device='cuda:0', dtype=torch.float64)
tensor([ -8.7982,  -8.8612,  -8.5317, -11.0405, -10.2818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([ -8.8106,  -8.8648,  -8.6043, -11.0516, -10.3464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0061, device='cuda:0', dtype=torch.float64)
tensor([ -8.8464,  -8.8743,  -8.6768, -11.0748, -10.4259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2011, device='cuda:0', dtype=torch.float64)
tensor([ -8.8740,  -8.9053,  -8.7541, -11.0707, -10.4959], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9356, device='cuda:0', dtype=torch.float64)
tensor([ -8.8937,  -8.9298,  -8.8639, -11.0491, -10.5537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9536, device='cuda:0', dtype=torch.float64)
tensor([ -8.9182,  -8.9586,  -8.9597, -11.0309, -10.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0096, device='cuda:0', dtype=torch.float64)
tensor([ -8.9547,  -8.9895,  -9.0468, -11.0148, -10.6539], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9625, device='cuda:0', dtype=torch.float64)
tensor([ -9.0036,  -9.0384,  -9.1241, -10.9982, -10.7098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0251, device='cuda:0', dtype=torch.float64)
tensor([ -9.0604,  -9.0892,  -9.2269, -10.9996, -10.7877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0057, device='cuda:0', dtype=torch.float64)
tensor([ -9.0993,  -9.1119,  -9.3547, -10.9808, -10.8115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0308, device='cuda:0', dtype=torch.float64)
tensor([ -9.1837,  -9.1690,  -9.4793, -11.0179, -10.8568], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([ -9.2771,  -9.1965,  -9.5908, -11.0352, -10.8551], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8383, device='cuda:0', dtype=torch.float64)
tensor([ -9.3581,  -9.2242,  -9.7319, -11.0686, -10.8751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1996, device='cuda:0', dtype=torch.float64)
tensor([ -9.4072,  -9.2337,  -9.8600, -11.0992, -10.8759], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9646, device='cuda:0', dtype=torch.float64)
tensor([ -9.4827,  -9.2599,  -9.9881, -11.1480, -10.9116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0519, device='cuda:0', dtype=torch.float64)
tensor([ -9.5668,  -9.2992, -10.1022, -11.1994, -10.9805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0722, device='cuda:0', dtype=torch.float64)
tensor([ -9.6874,  -9.3191, -10.2106, -11.2341, -11.0289], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9232, device='cuda:0', dtype=torch.float64)
tensor([ -9.7523,  -9.3191, -10.2896, -11.2383, -11.0739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0899, device='cuda:0', dtype=torch.float64)
tensor([ -9.7928,  -9.2886, -10.3853, -11.2673, -11.1130], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9912, device='cuda:0', dtype=torch.float64)
tensor([ -9.8398,  -9.2621, -10.4650, -11.2997, -11.1563], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9702, device='cuda:0', dtype=torch.float64)
tensor([ -9.8580,  -9.2507, -10.5400, -11.3020, -11.1953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0299, device='cuda:0', dtype=torch.float64)
tensor([ -9.9008,  -9.2373, -10.6018, -11.3025, -11.1970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1318, device='cuda:0', dtype=torch.float64)
tensor([ -9.8902,  -9.2588, -10.6603, -11.3165, -11.1866], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0215, device='cuda:0', dtype=torch.float64)
tensor([ -9.8736,  -9.2569, -10.7361, -11.3459, -11.2047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9445, device='cuda:0', dtype=torch.float64)
tensor([ -9.8439,  -9.2434, -10.8252, -11.3601, -11.2174], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9349, device='cuda:0', dtype=torch.float64)
tensor([ -9.8462,  -9.2364, -10.9082, -11.3527, -11.2374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0386, device='cuda:0', dtype=torch.float64)
tensor([ -9.8061,  -9.2256, -10.9966, -11.3367, -11.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7800, device='cuda:0', dtype=torch.float64)
tensor([ -9.7861,  -9.2299, -11.0957, -11.3429, -11.2791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9353, device='cuda:0', dtype=torch.float64)
tensor([ -9.7664,  -9.2072, -11.2215, -11.3641, -11.3179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9530, device='cuda:0', dtype=torch.float64)
tensor([ -9.7192,  -9.1868, -11.3292, -11.3539, -11.3592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7884, device='cuda:0', dtype=torch.float64)
tensor([ -9.6696,  -9.1767, -11.4387, -11.3296, -11.4014], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0382, device='cuda:0', dtype=torch.float64)
tensor([ -9.6336,  -9.1813, -11.5318, -11.2860, -11.4428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9014, device='cuda:0', dtype=torch.float64)
tensor([ -9.5876,  -9.1828, -11.6134, -11.2330, -11.4943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8598, device='cuda:0', dtype=torch.float64)
tensor([ -9.5945,  -9.1972, -11.7051, -11.1899, -11.5478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8852, device='cuda:0', dtype=torch.float64)
tensor([ -9.5851,  -9.2101, -11.7853, -11.1876, -11.5994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8684, device='cuda:0', dtype=torch.float64)
tensor([ -9.5276,  -9.2092, -11.8407, -11.1648, -11.6267], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0495, device='cuda:0', dtype=torch.float64)
tensor([ -9.5126,  -9.1730, -11.8964, -11.1305, -11.6284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1567, device='cuda:0', dtype=torch.float64)
tensor([ -9.5153,  -9.1037, -11.9508, -11.1373, -11.6056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8608, device='cuda:0', dtype=torch.float64)
tensor([ -9.5008,  -9.0663, -12.0257, -11.1485, -11.5935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8558, device='cuda:0', dtype=torch.float64)
tensor([ -9.4905,  -9.0395, -12.0844, -11.1427, -11.5669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9573, device='cuda:0', dtype=torch.float64)
tensor([ -9.4546,  -9.0011, -12.1535, -11.1430, -11.5721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8993, device='cuda:0', dtype=torch.float64)
tensor([ -9.4451,  -8.9565, -12.1799, -11.1298, -11.5782], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0162, device='cuda:0', dtype=torch.float64)
tensor([ -9.4494,  -8.9203, -12.1958, -11.0951, -11.5850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1185, device='cuda:0', dtype=torch.float64)
tensor([ -9.4463,  -8.8992, -12.2656, -11.0862, -11.5900], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0546, device='cuda:0', dtype=torch.float64)
tensor([ -9.4367,  -8.8701, -12.3414, -11.0767, -11.5555], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1679, device='cuda:0', dtype=torch.float64)
tensor([ -9.4039,  -8.8499, -12.3861, -11.0540, -11.4818], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9947, device='cuda:0', dtype=torch.float64)
tensor([ -9.3815,  -8.8466, -12.4211, -11.0484, -11.4598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0901, device='cuda:0', dtype=torch.float64)
tensor([ -9.3936,  -8.8638, -12.4104, -11.0063, -11.4143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8738, device='cuda:0', dtype=torch.float64)
tensor([ -9.4224,  -8.8797, -12.4073, -10.9808, -11.3599], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([ -9.4563,  -8.9043, -12.4090, -10.9619, -11.2967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1208, device='cuda:0', dtype=torch.float64)
tensor([ -9.5142,  -8.9742, -12.4085, -10.9662, -11.2787], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1064, device='cuda:0', dtype=torch.float64)
tensor([ -9.5908,  -9.0179, -12.4015, -10.9760, -11.2380], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9170, device='cuda:0', dtype=torch.float64)
tensor([ -9.6971,  -9.0833, -12.4340, -10.9986, -11.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8531, device='cuda:0', dtype=torch.float64)
tensor([ -9.7659,  -9.1288, -12.4732, -11.0456, -11.2740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8640, device='cuda:0', dtype=torch.float64)
tensor([ -9.8817,  -9.1885, -12.5273, -11.0812, -11.2857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9617, device='cuda:0', dtype=torch.float64)
tensor([ -9.9600,  -9.2751, -12.5699, -11.0902, -11.3016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9891, device='cuda:0', dtype=torch.float64)
tensor([-10.0123,  -9.3632, -12.6074, -11.1151, -11.3135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9470, device='cuda:0', dtype=torch.float64)
tensor([-10.0968,  -9.4470, -12.6577, -11.1449, -11.3348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-10.1684,  -9.5214, -12.6742, -11.1562, -11.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9423, device='cuda:0', dtype=torch.float64)
tensor([-10.2778,  -9.5907, -12.6787, -11.1703, -11.3284], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9320, device='cuda:0', dtype=torch.float64)
tensor([-10.3742,  -9.6532, -12.6938, -11.1786, -11.2844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8449, device='cuda:0', dtype=torch.float64)
tensor([-10.4959,  -9.6991, -12.7284, -11.1925, -11.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8680, device='cuda:0', dtype=torch.float64)
tensor([-10.5739,  -9.7449, -12.7669, -11.1843, -11.1862], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9735, device='cuda:0', dtype=torch.float64)
tensor([-10.6367,  -9.7685, -12.8121, -11.1913, -11.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8619, device='cuda:0', dtype=torch.float64)
tensor([-10.6925,  -9.7919, -12.8572, -11.1797, -11.1711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9516, device='cuda:0', dtype=torch.float64)
tensor([-10.7587,  -9.8097, -12.9206, -11.1790, -11.1729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-10.8345,  -9.8314, -12.9885, -11.1652, -11.1691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9773, device='cuda:0', dtype=torch.float64)
tensor([-10.8826,  -9.8512, -13.0202, -11.1409, -11.1530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0337, device='cuda:0', dtype=torch.float64)
tensor([-10.9369,  -9.8999, -13.0569, -11.1251, -11.1636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1988, device='cuda:0', dtype=torch.float64)
tensor([-10.9478,  -9.9711, -13.1179, -11.0647, -11.1835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9652, device='cuda:0', dtype=torch.float64)
tensor([-10.9413, -10.0539, -13.1629, -11.0195, -11.1865], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0056, device='cuda:0', dtype=torch.float64)
tensor([-10.9167, -10.1459, -13.2008, -10.9818, -11.1927], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0001, device='cuda:0', dtype=torch.float64)
tensor([-10.8932, -10.2379, -13.2522, -10.9709, -11.1762], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8551, device='cuda:0', dtype=torch.float64)
tensor([-10.8633, -10.3111, -13.3128, -10.9626, -11.1680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9641, device='cuda:0', dtype=torch.float64)
tensor([-10.8006, -10.3946, -13.3986, -10.9720, -11.1777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9104, device='cuda:0', dtype=torch.float64)
tensor([-10.7201, -10.4545, -13.4478, -10.9792, -11.1924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0815, device='cuda:0', dtype=torch.float64)
tensor([-10.6344, -10.5121, -13.5056, -10.9778, -11.2158], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9827, device='cuda:0', dtype=torch.float64)
tensor([-10.5127, -10.5845, -13.5442, -10.9746, -11.2440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9360, device='cuda:0', dtype=torch.float64)
tensor([-10.4082, -10.6413, -13.6047, -10.9648, -11.2433], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8303, device='cuda:0', dtype=torch.float64)
tensor([-10.3377, -10.6949, -13.6329, -10.9461, -11.2417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1180, device='cuda:0', dtype=torch.float64)
tensor([-10.2858, -10.7354, -13.6717, -10.9425, -11.2325], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9234, device='cuda:0', dtype=torch.float64)
tensor([-10.2262, -10.7472, -13.6988, -10.9358, -11.2351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9685, device='cuda:0', dtype=torch.float64)
tensor([-10.2158, -10.7636, -13.7355, -10.9401, -11.2489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9854, device='cuda:0', dtype=torch.float64)
tensor([-10.2367, -10.7850, -13.7727, -10.9794, -11.2588], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-10.2564, -10.7951, -13.7909, -11.0135, -11.2412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0037, device='cuda:0', dtype=torch.float64)
tensor([-10.2772, -10.8051, -13.8076, -11.0467, -11.2495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0410, device='cuda:0', dtype=torch.float64)
tensor([-10.2929, -10.8307, -13.8001, -11.0784, -11.2758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9290, device='cuda:0', dtype=torch.float64)
tensor([-10.3280, -10.8472, -13.8041, -11.0744, -11.2884], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2315, device='cuda:0', dtype=torch.float64)
tensor([-10.3668, -10.8614, -13.8030, -11.0699, -11.3147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0075, device='cuda:0', dtype=torch.float64)
tensor([-10.4000, -10.9090, -13.8337, -11.0670, -11.3008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9357, device='cuda:0', dtype=torch.float64)
tensor([-10.4199, -10.9482, -13.8576, -11.0395, -11.3100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9338, device='cuda:0', dtype=torch.float64)
tensor([-10.4427, -10.9788, -13.8542, -11.0116, -11.3049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9386, device='cuda:0', dtype=torch.float64)
tensor([-10.4386, -11.0298, -13.8399, -11.0044, -11.3029], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0307, device='cuda:0', dtype=torch.float64)
tensor([-10.4184, -11.0924, -13.8487, -11.0273, -11.3484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0290, device='cuda:0', dtype=torch.float64)
tensor([-10.4006, -11.1469, -13.8208, -11.0379, -11.3945], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0886, device='cuda:0', dtype=torch.float64)
tensor([-10.3949, -11.1931, -13.8216, -11.0671, -11.4404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9843, device='cuda:0', dtype=torch.float64)
tensor([-10.3529, -11.2536, -13.8450, -11.1105, -11.4783], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9021, device='cuda:0', dtype=torch.float64)
tensor([-10.3714, -11.2835, -13.8657, -11.1853, -11.5259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9923, device='cuda:0', dtype=torch.float64)
tensor([-10.4452, -11.3169, -13.9099, -11.2453, -11.5687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1020, device='cuda:0', dtype=torch.float64)
tensor([-10.4548, -11.3668, -13.9486, -11.2778, -11.6514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8088, device='cuda:0', dtype=torch.float64)
tensor([-10.4753, -11.4205, -13.9675, -11.3318, -11.7530], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9762, device='cuda:0', dtype=torch.float64)
tensor([-10.4839, -11.4459, -13.9738, -11.3857, -11.8151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9965, device='cuda:0', dtype=torch.float64)
tensor([-10.4827, -11.4576, -13.9542, -11.4495, -11.8633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9702, device='cuda:0', dtype=torch.float64)
tensor([-10.4863, -11.4300, -13.9757, -11.5503, -11.9278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8203, device='cuda:0', dtype=torch.float64)
tensor([-10.4906, -11.4231, -13.9888, -11.6646, -12.0114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8188, device='cuda:0', dtype=torch.float64)
tensor([-10.4624, -11.4375, -14.0123, -11.7577, -12.0716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9833, device='cuda:0', dtype=torch.float64)
tensor([-10.4513, -11.4862, -14.0501, -11.8262, -12.1364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0719, device='cuda:0', dtype=torch.float64)
tensor([-10.4987, -11.5012, -14.0695, -11.8934, -12.1916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8895, device='cuda:0', dtype=torch.float64)
tensor([-10.5535, -11.5088, -14.1216, -11.9416, -12.2448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8590, device='cuda:0', dtype=torch.float64)
tensor([-10.5937, -11.5238, -14.1600, -12.0009, -12.2925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8246, device='cuda:0', dtype=torch.float64)
tensor([-10.6471, -11.5675, -14.2056, -12.0543, -12.3543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1245, device='cuda:0', dtype=torch.float64)
tensor([-10.7202, -11.5938, -14.2459, -12.0988, -12.3859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1769, device='cuda:0', dtype=torch.float64)
tensor([-10.7877, -11.6290, -14.3043, -12.1618, -12.4008], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9589, device='cuda:0', dtype=torch.float64)
tensor([-10.8192, -11.6801, -14.3492, -12.2189, -12.4176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0203, device='cuda:0', dtype=torch.float64)
tensor([-10.8422, -11.7223, -14.3776, -12.3065, -12.4792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9366, device='cuda:0', dtype=torch.float64)
tensor([-10.8510, -11.7387, -14.3797, -12.3614, -12.5206], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0900, device='cuda:0', dtype=torch.float64)
tensor([-10.8995, -11.7813, -14.3630, -12.3945, -12.5752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9134, device='cuda:0', dtype=torch.float64)
tensor([-10.9745, -11.8253, -14.3389, -12.4128, -12.6189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([-11.0390, -11.8861, -14.3711, -12.4234, -12.6501], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1345, device='cuda:0', dtype=torch.float64)
tensor([-11.1421, -11.9382, -14.3963, -12.4458, -12.6656], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8551, device='cuda:0', dtype=torch.float64)
tensor([-11.1921, -11.9946, -14.4522, -12.4660, -12.6664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1825, device='cuda:0', dtype=torch.float64)
tensor([-11.2702, -12.0148, -14.4911, -12.4780, -12.6195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1040, device='cuda:0', dtype=torch.float64)
tensor([-11.3045, -12.0567, -14.5694, -12.4726, -12.5967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8756, device='cuda:0', dtype=torch.float64)
tensor([-11.3814, -12.1048, -14.6452, -12.4525, -12.5661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0245, device='cuda:0', dtype=torch.float64)
tensor([-11.4039, -12.1596, -14.7539, -12.4179, -12.5250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9932, device='cuda:0', dtype=torch.float64)
tensor([-11.4196, -12.2145, -14.8158, -12.4132, -12.4691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1369, device='cuda:0', dtype=torch.float64)
tensor([-11.3860, -12.2901, -14.8226, -12.4308, -12.4358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8804, device='cuda:0', dtype=torch.float64)
tensor([-11.3916, -12.3810, -14.8585, -12.4392, -12.4667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9867, device='cuda:0', dtype=torch.float64)
tensor([-11.4151, -12.4989, -14.9058, -12.4465, -12.5204], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8049, device='cuda:0', dtype=torch.float64)
tensor([-11.4595, -12.6028, -14.9750, -12.4359, -12.5559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7620, device='cuda:0', dtype=torch.float64)
tensor([-11.5588, -12.6939, -15.0407, -12.4635, -12.6172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8761, device='cuda:0', dtype=torch.float64)
tensor([-11.6523, -12.7797, -15.1166, -12.4845, -12.6849], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8495, device='cuda:0', dtype=torch.float64)
tensor([-11.7364, -12.8414, -15.1532, -12.5186, -12.7593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0313, device='cuda:0', dtype=torch.float64)
tensor([-11.8470, -12.9250, -15.1891, -12.5064, -12.8151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0745, device='cuda:0', dtype=torch.float64)
tensor([-11.9470, -13.0202, -15.1940, -12.5124, -12.9077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9525, device='cuda:0', dtype=torch.float64)
tensor([-12.0373, -13.1438, -15.1678, -12.5440, -13.0360], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8587, device='cuda:0', dtype=torch.float64)
tensor([-12.0966, -13.2520, -15.1823, -12.5655, -13.1439], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8848, device='cuda:0', dtype=torch.float64)
tensor([-12.1812, -13.3722, -15.1944, -12.5791, -13.2473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0295, device='cuda:0', dtype=torch.float64)
tensor([-12.2450, -13.4748, -15.1783, -12.5820, -13.3593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9398, device='cuda:0', dtype=torch.float64)
tensor([-12.3109, -13.6072, -15.1613, -12.5648, -13.4561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8858, device='cuda:0', dtype=torch.float64)
tensor([-12.3163, -13.7128, -15.1624, -12.5434, -13.5282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9041, device='cuda:0', dtype=torch.float64)
tensor([-12.3713, -13.8186, -15.1684, -12.5175, -13.5956], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9078, device='cuda:0', dtype=torch.float64)
tensor([-12.4127, -13.9170, -15.1799, -12.4856, -13.6241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0437, device='cuda:0', dtype=torch.float64)
tensor([-12.4763, -13.9819, -15.1880, -12.4477, -13.6217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0273, device='cuda:0', dtype=torch.float64)
tensor([-12.4857, -14.0022, -15.1703, -12.4174, -13.6259], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1302, device='cuda:0', dtype=torch.float64)
tensor([-12.4933, -13.9537, -15.1400, -12.4201, -13.6168], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0887, device='cuda:0', dtype=torch.float64)
tensor([-12.4588, -13.8895, -15.1242, -12.4168, -13.5931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0639, device='cuda:0', dtype=torch.float64)
tensor([-12.4388, -13.8534, -15.1239, -12.4219, -13.5743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9168, device='cuda:0', dtype=torch.float64)
tensor([-12.3865, -13.8483, -15.1750, -12.4144, -13.5693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0222, device='cuda:0', dtype=torch.float64)
tensor([-12.3432, -13.8473, -15.2254, -12.4255, -13.5460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9180, device='cuda:0', dtype=torch.float64)
tensor([-12.2957, -13.8284, -15.2557, -12.4221, -13.5057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9233, device='cuda:0', dtype=torch.float64)
tensor([-12.2520, -13.8053, -15.2520, -12.4189, -13.4348], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9130, device='cuda:0', dtype=torch.float64)
tensor([-12.1943, -13.7646, -15.2265, -12.4159, -13.3300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1510, device='cuda:0', dtype=torch.float64)
tensor([-12.1573, -13.7226, -15.1822, -12.4168, -13.2199], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8898, device='cuda:0', dtype=torch.float64)
tensor([-12.1353, -13.7006, -15.1602, -12.4367, -13.1487], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9717, device='cuda:0', dtype=torch.float64)
tensor([-12.1117, -13.6964, -15.1696, -12.4473, -13.0887], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9721, device='cuda:0', dtype=torch.float64)
tensor([-12.0374, -13.6792, -15.1709, -12.4730, -13.0412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7725, device='cuda:0', dtype=torch.float64)
tensor([-11.9926, -13.6849, -15.1681, -12.4728, -13.0091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0594, device='cuda:0', dtype=torch.float64)
tensor([-11.9754, -13.7276, -15.1698, -12.5410, -12.9996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0731, device='cuda:0', dtype=torch.float64)
tensor([-11.9855, -13.7566, -15.1899, -12.6170, -12.9788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0478, device='cuda:0', dtype=torch.float64)
tensor([-12.0374, -13.7743, -15.2227, -12.6642, -12.9569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0665, device='cuda:0', dtype=torch.float64)
tensor([-12.1249, -13.7698, -15.2640, -12.7318, -12.9738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9139, device='cuda:0', dtype=torch.float64)
tensor([-12.2443, -13.7713, -15.3502, -12.8092, -12.9988], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0400, device='cuda:0', dtype=torch.float64)
tensor([-12.3590, -13.7608, -15.4123, -12.8990, -13.0401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0593, device='cuda:0', dtype=torch.float64)
tensor([-12.4983, -13.7442, -15.5023, -12.9990, -13.0364], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9542, device='cuda:0', dtype=torch.float64)
tensor([-12.6863, -13.7496, -15.5884, -13.0777, -13.0417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-12.8265, -13.7456, -15.7029, -13.1702, -13.0547], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-12.9524, -13.7916, -15.7842, -13.2870, -13.0913], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0162, device='cuda:0', dtype=torch.float64)
tensor([-13.1416, -13.8208, -15.8924, -13.4384, -13.1260], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2130, device='cuda:0', dtype=torch.float64)
tensor([-13.2678, -13.8306, -16.0549, -13.5418, -13.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9117, device='cuda:0', dtype=torch.float64)
tensor([-13.3787, -13.8498, -16.1930, -13.6498, -13.1187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9153, device='cuda:0', dtype=torch.float64)
tensor([-13.4624, -13.8416, -16.2824, -13.7524, -13.1064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9706, device='cuda:0', dtype=torch.float64)
tensor([-13.5170, -13.8264, -16.3540, -13.8382, -13.0745], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1089, device='cuda:0', dtype=torch.float64)
tensor([-13.5744, -13.8630, -16.4100, -13.9036, -13.0758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9243, device='cuda:0', dtype=torch.float64)
tensor([-13.6833, -13.9246, -16.4412, -13.9721, -13.1126], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0270, device='cuda:0', dtype=torch.float64)
tensor([-13.8325, -14.0040, -16.4957, -13.9972, -13.1339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9364, device='cuda:0', dtype=torch.float64)
tensor([-14.0167, -14.0720, -16.5529, -14.0064, -13.1265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0064, device='cuda:0', dtype=torch.float64)
tensor([-14.1414, -14.1667, -16.6346, -13.9887, -13.1293], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1516, device='cuda:0', dtype=torch.float64)
tensor([-14.1950, -14.2953, -16.6875, -13.9192, -13.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9800, device='cuda:0', dtype=torch.float64)
tensor([-14.3035, -14.4348, -16.7328, -13.8736, -13.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9951, device='cuda:0', dtype=torch.float64)
tensor([-14.3469, -14.5205, -16.7987, -13.8495, -13.1607], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8663, device='cuda:0', dtype=torch.float64)
tensor([-14.4126, -14.5594, -16.8281, -13.8520, -13.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0588, device='cuda:0', dtype=torch.float64)
tensor([-14.4640, -14.6139, -16.8413, -13.8627, -13.1282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7800, device='cuda:0', dtype=torch.float64)
tensor([-14.5236, -14.6609, -16.8656, -13.8882, -13.1261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0915, device='cuda:0', dtype=torch.float64)
tensor([-14.5467, -14.7120, -16.9120, -13.9267, -13.1463], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-14.6186, -14.8023, -16.9575, -13.9783, -13.1882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9568, device='cuda:0', dtype=torch.float64)
tensor([-14.6691, -14.8700, -17.0021, -14.0511, -13.2145], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8914, device='cuda:0', dtype=torch.float64)
tensor([-14.7561, -14.9088, -17.0271, -14.1467, -13.2220], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8293, device='cuda:0', dtype=torch.float64)
tensor([-14.8432, -14.9030, -17.0750, -14.2154, -13.2050], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0898, device='cuda:0', dtype=torch.float64)
tensor([-14.9158, -14.9429, -17.1176, -14.2913, -13.2131], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8366, device='cuda:0', dtype=torch.float64)
tensor([-15.0161, -14.9767, -17.1823, -14.3937, -13.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9508, device='cuda:0', dtype=torch.float64)
tensor([-15.1485, -14.9758, -17.2480, -14.5128, -13.2627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0983, device='cuda:0', dtype=torch.float64)
tensor([-15.2436, -14.9775, -17.2837, -14.6244, -13.2760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0575, device='cuda:0', dtype=torch.float64)
tensor([-15.2938, -15.0198, -17.2852, -14.7078, -13.3017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0260, device='cuda:0', dtype=torch.float64)
tensor([-15.4487, -15.1003, -17.3113, -14.7931, -13.3455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8459, device='cuda:0', dtype=torch.float64)
tensor([-15.6168, -15.1627, -17.3515, -14.8842, -13.4082], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7719, device='cuda:0', dtype=torch.float64)
tensor([-15.7347, -15.1655, -17.3984, -14.9433, -13.4769], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9928, device='cuda:0', dtype=torch.float64)
tensor([-15.8910, -15.1280, -17.4320, -15.0239, -13.5146], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9922, device='cuda:0', dtype=torch.float64)
tensor([-16.0322, -15.0639, -17.4361, -15.1048, -13.5670], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9641, device='cuda:0', dtype=torch.float64)
tensor([-16.2033, -14.9884, -17.4267, -15.1661, -13.5826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9149, device='cuda:0', dtype=torch.float64)
tensor([-16.4103, -14.8982, -17.4510, -15.2729, -13.5790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0367, device='cuda:0', dtype=torch.float64)
tensor([-16.5212, -14.7955, -17.4774, -15.3592, -13.5392], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9021, device='cuda:0', dtype=torch.float64)
tensor([-16.6452, -14.7388, -17.5009, -15.4300, -13.4781], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9832, device='cuda:0', dtype=torch.float64)
tensor([-16.7552, -14.7062, -17.5320, -15.5230, -13.4727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9052, device='cuda:0', dtype=torch.float64)
tensor([-16.8863, -14.6659, -17.5285, -15.6202, -13.4842], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0198, device='cuda:0', dtype=torch.float64)
tensor([-16.9549, -14.6425, -17.5477, -15.7312, -13.5221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-17.0214, -14.6357, -17.5474, -15.8559, -13.5877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9717, device='cuda:0', dtype=torch.float64)
tensor([-17.1119, -14.5788, -17.4867, -15.9781, -13.6176], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9711, device='cuda:0', dtype=torch.float64)
tensor([-17.2246, -14.5325, -17.4032, -16.1300, -13.6467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0244, device='cuda:0', dtype=torch.float64)
tensor([-17.3519, -14.5542, -17.3343, -16.2895, -13.7115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9076, device='cuda:0', dtype=torch.float64)
tensor([-17.4925, -14.5614, -17.2603, -16.4267, -13.8118], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0260, device='cuda:0', dtype=torch.float64)
tensor([-17.6232, -14.5367, -17.2161, -16.5758, -13.8813], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0553, device='cuda:0', dtype=torch.float64)
tensor([-17.7068, -14.4769, -17.1573, -16.6564, -13.9166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8058, device='cuda:0', dtype=torch.float64)
tensor([-17.8288, -14.4351, -17.1027, -16.7527, -13.9650], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1380, device='cuda:0', dtype=torch.float64)
tensor([-17.9079, -14.3845, -17.0221, -16.8855, -14.0193], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9724, device='cuda:0', dtype=torch.float64)
tensor([-18.0951, -14.3696, -16.9591, -17.0304, -14.0668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9937, device='cuda:0', dtype=torch.float64)
tensor([-18.2586, -14.3358, -16.9125, -17.1577, -14.0972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8568, device='cuda:0', dtype=torch.float64)
tensor([-18.3495, -14.3297, -16.8785, -17.3097, -14.1533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9950, device='cuda:0', dtype=torch.float64)
tensor([-18.4547, -14.3029, -16.8367, -17.4829, -14.1977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0670, device='cuda:0', dtype=torch.float64)
tensor([-18.6080, -14.2885, -16.8437, -17.6315, -14.2111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9104, device='cuda:0', dtype=torch.float64)
tensor([-18.7283, -14.2603, -16.8633, -17.7681, -14.1993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8746, device='cuda:0', dtype=torch.float64)
tensor([-18.8578, -14.2173, -16.8672, -17.8810, -14.1216], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9422, device='cuda:0', dtype=torch.float64)
tensor([-19.0233, -14.1895, -16.8616, -18.0303, -14.0864], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.2128, device='cuda:0', dtype=torch.float64)
tensor([-19.1519, -14.1136, -16.8897, -18.1057, -14.0532], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8281, device='cuda:0', dtype=torch.float64)
tensor([-19.3214, -14.0400, -16.9480, -18.2027, -14.0266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0457, device='cuda:0', dtype=torch.float64)
tensor([-19.4722, -13.9577, -17.0151, -18.2892, -14.0048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9810, device='cuda:0', dtype=torch.float64)
tensor([-19.5827, -13.8809, -17.0809, -18.3585, -13.9890], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9866, device='cuda:0', dtype=torch.float64)
tensor([-19.6170, -13.8515, -17.1299, -18.4096, -13.9934], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8767, device='cuda:0', dtype=torch.float64)
tensor([-19.6357, -13.8457, -17.1863, -18.4183, -13.9897], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1883, device='cuda:0', dtype=torch.float64)
tensor([-19.6595, -13.7958, -17.2192, -18.4367, -14.0166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0047, device='cuda:0', dtype=torch.float64)
tensor([-19.6510, -13.7669, -17.2584, -18.4874, -14.0678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8442, device='cuda:0', dtype=torch.float64)
tensor([-19.6240, -13.7463, -17.2976, -18.5432, -14.1123], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0057, device='cuda:0', dtype=torch.float64)
tensor([-19.6445, -13.7513, -17.3621, -18.6523, -14.1702], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8408, device='cuda:0', dtype=torch.float64)
tensor([-19.6536, -13.7556, -17.3959, -18.7650, -14.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9989, device='cuda:0', dtype=torch.float64)
tensor([-19.6548, -13.7361, -17.4518, -18.8631, -14.2920], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9999, device='cuda:0', dtype=torch.float64)
tensor([-19.6460, -13.7319, -17.5332, -18.9366, -14.3561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9608, device='cuda:0', dtype=torch.float64)
tensor([-19.6221, -13.7157, -17.6449, -18.9615, -14.4384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8452, device='cuda:0', dtype=torch.float64)
tensor([-19.6430, -13.7038, -17.7659, -18.9623, -14.5368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9056, device='cuda:0', dtype=torch.float64)
tensor([-19.5915, -13.6920, -17.8808, -18.9961, -14.6172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8295, device='cuda:0', dtype=torch.float64)
tensor([-19.5225, -13.6880, -18.0004, -18.9913, -14.7099], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8562, device='cuda:0', dtype=torch.float64)
tensor([-19.5090, -13.7051, -18.0817, -18.9868, -14.8241], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([-19.4605, -13.7083, -18.1607, -18.9410, -14.9034], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9393, device='cuda:0', dtype=torch.float64)
tensor([-19.4108, -13.7148, -18.2187, -18.8921, -14.9694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1138, device='cuda:0', dtype=torch.float64)
tensor([-19.4476, -13.7487, -18.2451, -18.8630, -14.9902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0212, device='cuda:0', dtype=torch.float64)
tensor([-19.5031, -13.7640, -18.2589, -18.8957, -15.0218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8698, device='cuda:0', dtype=torch.float64)
tensor([-19.4915, -13.7902, -18.2730, -18.9704, -15.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9659, device='cuda:0', dtype=torch.float64)
tensor([-19.4558, -13.8078, -18.2610, -19.0218, -15.0528], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0192, device='cuda:0', dtype=torch.float64)
tensor([-19.4524, -13.8016, -18.2706, -19.0607, -15.0262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0249, device='cuda:0', dtype=torch.float64)
tensor([-19.4706, -13.8492, -18.2333, -19.1438, -15.0519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8606, device='cuda:0', dtype=torch.float64)
tensor([-19.4027, -13.9087, -18.1665, -19.2127, -15.0649], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-19.3549, -13.9761, -18.1358, -19.2971, -15.0932], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([-19.2860, -14.0380, -18.1062, -19.3779, -15.1167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0305, device='cuda:0', dtype=torch.float64)
tensor([-19.0960, -14.0769, -18.0887, -19.4255, -15.1271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9494, device='cuda:0', dtype=torch.float64)
tensor([-18.9107, -14.1229, -18.0643, -19.4505, -15.1401], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9075, device='cuda:0', dtype=torch.float64)
tensor([-18.7802, -14.1758, -18.0507, -19.4925, -15.1413], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0490, device='cuda:0', dtype=torch.float64)
tensor([-18.6643, -14.2425, -18.0280, -19.5258, -15.1564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0888, device='cuda:0', dtype=torch.float64)
tensor([-18.6760, -14.2434, -17.9970, -19.5525, -15.0955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0423, device='cuda:0', dtype=torch.float64)
tensor([-18.6759, -14.2846, -17.9646, -19.6493, -15.1042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8577, device='cuda:0', dtype=torch.float64)
tensor([-18.6937, -14.3306, -17.9673, -19.7011, -15.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9667, device='cuda:0', dtype=torch.float64)
tensor([-18.6664, -14.3334, -17.9701, -19.7398, -15.1837], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8963, device='cuda:0', dtype=torch.float64)
tensor([-18.6043, -14.3607, -17.9451, -19.8125, -15.2330], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9628, device='cuda:0', dtype=torch.float64)
tensor([-18.5402, -14.3794, -17.9896, -19.8701, -15.2931], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9110, device='cuda:0', dtype=torch.float64)
tensor([-18.4416, -14.3690, -17.9878, -19.8612, -15.3429], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0703, device='cuda:0', dtype=torch.float64)
tensor([-18.3130, -14.3656, -18.0025, -19.8252, -15.3754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1144, device='cuda:0', dtype=torch.float64)
tensor([-18.2735, -14.3668, -17.9831, -19.7910, -15.4028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9722, device='cuda:0', dtype=torch.float64)
tensor([-18.2152, -14.3482, -17.9938, -19.7155, -15.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1263, device='cuda:0', dtype=torch.float64)
tensor([-18.1023, -14.3268, -17.9764, -19.5913, -15.4659], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0146, device='cuda:0', dtype=torch.float64)
tensor([-17.8875, -14.3147, -17.9497, -19.4068, -15.4564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9136, device='cuda:0', dtype=torch.float64)
tensor([-17.7764, -14.3030, -17.9860, -19.2464, -15.4486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9262, device='cuda:0', dtype=torch.float64)
tensor([-17.7233, -14.3245, -18.0300, -19.0986, -15.4448], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9613, device='cuda:0', dtype=torch.float64)
tensor([-17.7206, -14.4156, -18.0996, -19.0011, -15.4948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9569, device='cuda:0', dtype=torch.float64)
tensor([-17.7643, -14.5156, -18.1618, -18.9451, -15.5316], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0137, device='cuda:0', dtype=torch.float64)
tensor([-17.7791, -14.5881, -18.2092, -18.8996, -15.5792], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0379, device='cuda:0', dtype=torch.float64)
tensor([-17.8155, -14.6331, -18.2929, -18.8304, -15.6077], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9987, device='cuda:0', dtype=torch.float64)
tensor([-17.9476, -14.7379, -18.3857, -18.8212, -15.6616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9358, device='cuda:0', dtype=torch.float64)
tensor([-18.0776, -14.8378, -18.4907, -18.8811, -15.7801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1275, device='cuda:0', dtype=torch.float64)
tensor([-18.1295, -14.9122, -18.6016, -18.8681, -15.9003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0579, device='cuda:0', dtype=torch.float64)
tensor([-18.2127, -14.9906, -18.7070, -18.8717, -16.0278], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0131, device='cuda:0', dtype=torch.float64)
tensor([-18.3153, -15.1087, -18.7796, -18.9031, -16.1721], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1037, device='cuda:0', dtype=torch.float64)
tensor([-18.4193, -15.2584, -18.8447, -18.9808, -16.3605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7734, device='cuda:0', dtype=torch.float64)
tensor([-18.4941, -15.4474, -18.8842, -19.0793, -16.5873], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9296, device='cuda:0', dtype=torch.float64)
tensor([-18.5692, -15.6387, -18.9230, -19.1199, -16.7736], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0717, device='cuda:0', dtype=torch.float64)
tensor([-18.6012, -15.8059, -18.9530, -19.0875, -16.9110], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9429, device='cuda:0', dtype=torch.float64)
tensor([-18.5966, -15.9588, -19.0042, -19.0551, -17.0863], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9015, device='cuda:0', dtype=torch.float64)
tensor([-18.6195, -16.0991, -19.0630, -19.0260, -17.2135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9526, device='cuda:0', dtype=torch.float64)
tensor([-18.6494, -16.2280, -19.1134, -19.1042, -17.4351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0458, device='cuda:0', dtype=torch.float64)
tensor([-18.7104, -16.3720, -19.1276, -19.2313, -17.6587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8359, device='cuda:0', dtype=torch.float64)
tensor([-18.7779, -16.5833, -19.1526, -19.3857, -17.8740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9663, device='cuda:0', dtype=torch.float64)
tensor([-18.8678, -16.7517, -19.2423, -19.5519, -18.0564], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9259, device='cuda:0', dtype=torch.float64)
tensor([-18.8815, -16.8858, -19.3085, -19.7315, -18.2071], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9841, device='cuda:0', dtype=torch.float64)
tensor([-18.9614, -16.9881, -19.3989, -19.9231, -18.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8862, device='cuda:0', dtype=torch.float64)
tensor([-18.9657, -17.0925, -19.4667, -20.1045, -18.5035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0302, device='cuda:0', dtype=torch.float64)
tensor([-18.9106, -17.1131, -19.5047, -20.2451, -18.5496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8411, device='cuda:0', dtype=torch.float64)
tensor([-18.9015, -17.1229, -19.5222, -20.3755, -18.5859], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9218, device='cuda:0', dtype=torch.float64)
tensor([-18.9209, -17.1439, -19.5537, -20.4642, -18.6170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9123, device='cuda:0', dtype=torch.float64)
tensor([-18.9292, -17.1397, -19.5946, -20.5169, -18.6557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8966, device='cuda:0', dtype=torch.float64)
tensor([-18.9563, -17.1497, -19.6118, -20.6217, -18.7114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9616, device='cuda:0', dtype=torch.float64)
tensor([-19.1037, -17.1350, -19.6508, -20.7237, -18.7928], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-19.1950, -17.0906, -19.6770, -20.7442, -18.7970], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8856, device='cuda:0', dtype=torch.float64)
tensor([-19.2841, -17.0536, -19.6967, -20.7835, -18.8271], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0030, device='cuda:0', dtype=torch.float64)
tensor([-19.2928, -17.0222, -19.7233, -20.8079, -18.8719], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8844, device='cuda:0', dtype=torch.float64)
tensor([-19.3060, -17.0029, -19.7828, -20.8950, -18.9070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1240, device='cuda:0', dtype=torch.float64)
tensor([-19.3209, -16.9477, -19.8365, -20.9658, -18.8877], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0128, device='cuda:0', dtype=torch.float64)
tensor([-19.2828, -16.8779, -19.8741, -20.9914, -18.9064], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9560, device='cuda:0', dtype=torch.float64)
tensor([-19.2536, -16.8261, -19.8843, -21.0420, -18.9543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0468, device='cuda:0', dtype=torch.float64)
tensor([-19.2087, -16.8023, -19.8991, -21.0881, -19.0502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9532, device='cuda:0', dtype=torch.float64)
tensor([-19.0765, -16.8213, -19.8885, -21.1587, -19.1905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9101, device='cuda:0', dtype=torch.float64)
tensor([-19.0011, -16.8225, -19.9177, -21.2078, -19.3253], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8311, device='cuda:0', dtype=torch.float64)
tensor([-18.9249, -16.8369, -19.9494, -21.2121, -19.4444], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9922, device='cuda:0', dtype=torch.float64)
tensor([-18.8800, -16.8433, -19.9617, -21.2290, -19.5729], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1416, device='cuda:0', dtype=torch.float64)
tensor([-18.9201, -16.8985, -19.9906, -21.2962, -19.7290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0725, device='cuda:0', dtype=torch.float64)
tensor([-18.9686, -16.9775, -20.0091, -21.3765, -19.8751], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9721, device='cuda:0', dtype=torch.float64)
tensor([-19.0077, -17.0490, -20.0201, -21.4384, -19.9996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9352, device='cuda:0', dtype=torch.float64)
tensor([-19.1620, -17.1153, -20.0138, -21.4375, -20.0570], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8128, device='cuda:0', dtype=torch.float64)
tensor([-19.3655, -17.1971, -20.0269, -21.4451, -20.1311], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9808, device='cuda:0', dtype=torch.float64)
tensor([-19.5418, -17.3129, -20.0563, -21.4768, -20.2157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8413, device='cuda:0', dtype=torch.float64)
tensor([-19.6645, -17.3963, -20.0770, -21.4871, -20.2585], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0724, device='cuda:0', dtype=torch.float64)
tensor([-19.7471, -17.5138, -20.1247, -21.4119, -20.3469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9659, device='cuda:0', dtype=torch.float64)
tensor([-19.7572, -17.6570, -20.1612, -21.2982, -20.4589], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0416, device='cuda:0', dtype=torch.float64)
tensor([-19.9066, -17.7394, -20.2332, -21.1829, -20.4933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8372, device='cuda:0', dtype=torch.float64)
tensor([-20.0724, -17.8153, -20.3101, -21.1103, -20.5339], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9520, device='cuda:0', dtype=torch.float64)
tensor([-20.1410, -17.9123, -20.3744, -21.1358, -20.6460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9648, device='cuda:0', dtype=torch.float64)
tensor([-20.2038, -17.9625, -20.4176, -21.1370, -20.7583], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9074, device='cuda:0', dtype=torch.float64)
tensor([-20.2628, -17.9891, -20.4312, -21.1511, -20.8011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9087, device='cuda:0', dtype=torch.float64)
tensor([-20.3269, -18.0627, -20.4286, -21.1324, -20.8653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7909, device='cuda:0', dtype=torch.float64)
tensor([-20.4270, -18.1194, -20.4042, -21.0973, -20.8550], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0224, device='cuda:0', dtype=torch.float64)
tensor([-20.4938, -18.1416, -20.3524, -21.0166, -20.7809], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9325, device='cuda:0', dtype=torch.float64)
tensor([-20.5799, -18.1456, -20.3298, -20.9727, -20.7492], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9654, device='cuda:0', dtype=torch.float64)
tensor([-20.6936, -18.1706, -20.2753, -20.9348, -20.6803], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8394, device='cuda:0', dtype=torch.float64)
tensor([-20.8455, -18.1726, -20.2288, -20.9012, -20.5758], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9206, device='cuda:0', dtype=torch.float64)
tensor([-20.9879, -18.2186, -20.1627, -20.8994, -20.4687], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9311, device='cuda:0', dtype=torch.float64)
tensor([-21.1242, -18.2504, -20.1552, -20.8767, -20.3682], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9772, device='cuda:0', dtype=torch.float64)
tensor([-21.1949, -18.3008, -20.1902, -20.8014, -20.2482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8670, device='cuda:0', dtype=torch.float64)
tensor([-21.2920, -18.3612, -20.2046, -20.7398, -20.1511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9705, device='cuda:0', dtype=torch.float64)
tensor([-21.3329, -18.4233, -20.2127, -20.7221, -20.0853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9851, device='cuda:0', dtype=torch.float64)
tensor([-21.4287, -18.5105, -20.2754, -20.6920, -20.0310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8936, device='cuda:0', dtype=torch.float64)
tensor([-21.5579, -18.5819, -20.3320, -20.7314, -20.0059], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9480, device='cuda:0', dtype=torch.float64)
tensor([-21.6788, -18.6540, -20.4344, -20.8033, -19.9820], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9838, device='cuda:0', dtype=torch.float64)
tensor([-21.7665, -18.7347, -20.5442, -20.8303, -19.9471], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9356, device='cuda:0', dtype=torch.float64)
tensor([-21.9139, -18.8592, -20.6110, -20.9334, -19.9593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8833, device='cuda:0', dtype=torch.float64)
tensor([-22.0927, -18.9667, -20.7099, -21.0259, -19.9447], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9867, device='cuda:0', dtype=torch.float64)
tensor([-22.1596, -19.0953, -20.7788, -21.1658, -19.9833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9630, device='cuda:0', dtype=torch.float64)
tensor([-22.2017, -19.2101, -20.7941, -21.2679, -19.9760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8793, device='cuda:0', dtype=torch.float64)
tensor([-22.3009, -19.3391, -20.7883, -21.3799, -19.9936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9304, device='cuda:0', dtype=torch.float64)
tensor([-22.3695, -19.4392, -20.7370, -21.4644, -20.0048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9219, device='cuda:0', dtype=torch.float64)
tensor([-22.5235, -19.4614, -20.6992, -21.5658, -19.9886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9633, device='cuda:0', dtype=torch.float64)
tensor([-22.5936, -19.4515, -20.6524, -21.6833, -19.9835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0052, device='cuda:0', dtype=torch.float64)
tensor([-22.7844, -19.4067, -20.6424, -21.8083, -19.9272], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9734, device='cuda:0', dtype=torch.float64)
tensor([-22.9925, -19.4161, -20.6439, -21.9417, -19.8857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9931, device='cuda:0', dtype=torch.float64)
tensor([-23.1510, -19.4476, -20.6905, -22.0752, -19.9160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1409, device='cuda:0', dtype=torch.float64)
tensor([-23.3438, -19.5368, -20.7742, -22.2237, -20.0197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0718, device='cuda:0', dtype=torch.float64)
tensor([-23.4459, -19.6417, -20.7715, -22.3792, -20.1566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8386, device='cuda:0', dtype=torch.float64)
tensor([-23.5352, -19.7551, -20.7619, -22.5211, -20.2755], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8819, device='cuda:0', dtype=torch.float64)
tensor([-23.6177, -19.8963, -20.7170, -22.5848, -20.4073], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9072, device='cuda:0', dtype=torch.float64)
tensor([-23.6665, -20.0301, -20.7339, -22.6572, -20.5137], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0081, device='cuda:0', dtype=torch.float64)
tensor([-23.6912, -20.1976, -20.7490, -22.7109, -20.6586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0163, device='cuda:0', dtype=torch.float64)
tensor([-23.7769, -20.3537, -20.7616, -22.7954, -20.8149], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0378, device='cuda:0', dtype=torch.float64)
tensor([-23.7370, -20.4869, -20.7985, -22.7939, -20.9916], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8333, device='cuda:0', dtype=torch.float64)
tensor([-23.6977, -20.5736, -20.8538, -22.7890, -21.1676], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8569, device='cuda:0', dtype=torch.float64)
tensor([-23.7357, -20.6722, -20.9217, -22.7848, -21.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7868, device='cuda:0', dtype=torch.float64)
tensor([-23.7203, -20.7725, -20.9411, -22.7932, -21.5430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9596, device='cuda:0', dtype=torch.float64)
tensor([-23.7346, -20.8964, -20.9317, -22.8288, -21.6906], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0488, device='cuda:0', dtype=torch.float64)
tensor([-23.7733, -21.0470, -20.9357, -22.8264, -21.8007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9981, device='cuda:0', dtype=torch.float64)
tensor([-23.8140, -21.1438, -20.9213, -22.7748, -21.8886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1558, device='cuda:0', dtype=torch.float64)
tensor([-23.9531, -21.2812, -20.8739, -22.7133, -21.9767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8955, device='cuda:0', dtype=torch.float64)
tensor([-24.0488, -21.4171, -20.8475, -22.5945, -22.0648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9475, device='cuda:0', dtype=torch.float64)
tensor([-24.1623, -21.4735, -20.8218, -22.5001, -22.0919], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-24.2044, -21.5550, -20.8550, -22.4133, -22.1440], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0067, device='cuda:0', dtype=torch.float64)
tensor([-24.2033, -21.6668, -20.8549, -22.4171, -22.2250], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9279, device='cuda:0', dtype=torch.float64)
tensor([-24.2006, -21.7582, -20.8582, -22.4369, -22.3460], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9887, device='cuda:0', dtype=torch.float64)
tensor([-24.1818, -21.8768, -20.8748, -22.4771, -22.4143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9839, device='cuda:0', dtype=torch.float64)
tensor([-24.1874, -22.0048, -20.8720, -22.5219, -22.4836], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1625, device='cuda:0', dtype=torch.float64)
tensor([-24.1771, -22.2115, -20.8042, -22.5494, -22.5908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9828, device='cuda:0', dtype=torch.float64)
tensor([-24.1984, -22.4553, -20.7476, -22.5784, -22.6885], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9356, device='cuda:0', dtype=torch.float64)
tensor([-24.2348, -22.6853, -20.6369, -22.5942, -22.7799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8889, device='cuda:0', dtype=torch.float64)
tensor([-24.2698, -22.8595, -20.5439, -22.6206, -22.8549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8479, device='cuda:0', dtype=torch.float64)
tensor([-24.3574, -22.9982, -20.4268, -22.6535, -22.9483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9450, device='cuda:0', dtype=torch.float64)
tensor([-24.4366, -23.1831, -20.3137, -22.7597, -23.0035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0894, device='cuda:0', dtype=torch.float64)
tensor([-24.3566, -23.2545, -20.1440, -22.7368, -23.0007], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7977, device='cuda:0', dtype=torch.float64)
tensor([-24.3181, -23.3316, -19.9768, -22.6834, -22.9802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9915, device='cuda:0', dtype=torch.float64)
tensor([-24.2314, -23.3723, -19.8266, -22.6275, -22.9298], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8951, device='cuda:0', dtype=torch.float64)
tensor([-24.2299, -23.4220, -19.7402, -22.6101, -22.8957], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9781, device='cuda:0', dtype=torch.float64)
tensor([-24.2424, -23.5317, -19.6993, -22.6152, -22.8534], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8450, device='cuda:0', dtype=torch.float64)
tensor([-24.2854, -23.6955, -19.7201, -22.6340, -22.8473], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9840, device='cuda:0', dtype=torch.float64)
tensor([-24.2697, -23.8895, -19.7233, -22.5870, -22.8184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7990, device='cuda:0', dtype=torch.float64)
tensor([-24.1963, -23.9951, -19.7286, -22.5161, -22.6579], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9905, device='cuda:0', dtype=torch.float64)
tensor([-24.1513, -24.1091, -19.6657, -22.4100, -22.4748], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9491, device='cuda:0', dtype=torch.float64)
tensor([-24.1800, -24.1833, -19.6139, -22.3343, -22.2982], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8682, device='cuda:0', dtype=torch.float64)
tensor([-24.2071, -24.2784, -19.5448, -22.2716, -22.1416], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9841, device='cuda:0', dtype=torch.float64)
tensor([-24.1849, -24.3520, -19.4693, -22.1993, -21.9614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8804, device='cuda:0', dtype=torch.float64)
tensor([-24.0715, -24.4652, -19.3526, -22.1239, -21.8592], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8174, device='cuda:0', dtype=torch.float64)
tensor([-23.8841, -24.5077, -19.2442, -22.0200, -21.7977], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9073, device='cuda:0', dtype=torch.float64)
tensor([-23.7585, -24.5489, -19.1643, -21.9553, -21.7465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9901, device='cuda:0', dtype=torch.float64)
tensor([-23.6571, -24.6175, -19.1038, -21.8676, -21.7069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0159, device='cuda:0', dtype=torch.float64)
tensor([-23.5514, -24.6771, -19.0710, -21.8120, -21.6103], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9200, device='cuda:0', dtype=torch.float64)
tensor([-23.5097, -24.8028, -19.0651, -21.8120, -21.5835], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0970, device='cuda:0', dtype=torch.float64)
tensor([-23.4936, -24.9580, -19.0533, -21.7720, -21.5354], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0249, device='cuda:0', dtype=torch.float64)
tensor([-23.4889, -25.0753, -18.9850, -21.7456, -21.5164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9191, device='cuda:0', dtype=torch.float64)
tensor([-23.4425, -25.2276, -18.9339, -21.6976, -21.5083], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0637, device='cuda:0', dtype=torch.float64)
tensor([-23.3649, -25.3806, -18.8769, -21.6304, -21.5306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9531, device='cuda:0', dtype=torch.float64)
tensor([-23.3877, -25.5622, -18.8624, -21.6190, -21.5692], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9510, device='cuda:0', dtype=torch.float64)
tensor([-23.3880, -25.7162, -18.8807, -21.5964, -21.5958], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0015, device='cuda:0', dtype=torch.float64)
tensor([-23.2997, -25.7974, -18.8333, -21.5812, -21.5640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1483, device='cuda:0', dtype=torch.float64)
tensor([-23.2134, -25.8419, -18.8151, -21.4793, -21.5171], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1066, device='cuda:0', dtype=torch.float64)
tensor([-23.1899, -25.8769, -18.7524, -21.4285, -21.5697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8879, device='cuda:0', dtype=torch.float64)
tensor([-23.1310, -25.8751, -18.6691, -21.3601, -21.5467], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9231, device='cuda:0', dtype=torch.float64)
tensor([-23.0679, -25.8886, -18.6195, -21.2886, -21.5706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9748, device='cuda:0', dtype=torch.float64)
tensor([-23.0410, -25.9293, -18.5688, -21.2900, -21.6695], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8501, device='cuda:0', dtype=torch.float64)
tensor([-23.0554, -25.9462, -18.5356, -21.2847, -21.7821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8875, device='cuda:0', dtype=torch.float64)
tensor([-23.0976, -26.0631, -18.5068, -21.3041, -21.9683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8165, device='cuda:0', dtype=torch.float64)
tensor([-23.1632, -26.1798, -18.4946, -21.3736, -22.1181], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8580, device='cuda:0', dtype=torch.float64)
tensor([-23.2810, -26.2688, -18.5083, -21.4287, -22.2567], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9608, device='cuda:0', dtype=torch.float64)
tensor([-23.4764, -26.3300, -18.5409, -21.5376, -22.4499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9684, device='cuda:0', dtype=torch.float64)
tensor([-23.7146, -26.4109, -18.6200, -21.6571, -22.5867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9004, device='cuda:0', dtype=torch.float64)
tensor([-24.0004, -26.4537, -18.7094, -21.7283, -22.6752], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8699, device='cuda:0', dtype=torch.float64)
tensor([-24.3488, -26.4224, -18.8283, -21.8162, -22.6821], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8774, device='cuda:0', dtype=torch.float64)
tensor([-24.6589, -26.4092, -18.9507, -21.9264, -22.7661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8216, device='cuda:0', dtype=torch.float64)
tensor([-24.9498, -26.4148, -19.1247, -21.9875, -22.8738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0675, device='cuda:0', dtype=torch.float64)
tensor([-25.2573, -26.4059, -19.2889, -22.0962, -23.0144], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([-25.6296, -26.4142, -19.4441, -22.2412, -23.1606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8916, device='cuda:0', dtype=torch.float64)
tensor([-25.9560, -26.4631, -19.6138, -22.3461, -23.3388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8350, device='cuda:0', dtype=torch.float64)
tensor([-26.2247, -26.5483, -19.8011, -22.4164, -23.5184], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0363, device='cuda:0', dtype=torch.float64)
tensor([-26.5369, -26.5538, -19.9426, -22.4920, -23.6816], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9630, device='cuda:0', dtype=torch.float64)
tensor([-26.7387, -26.5386, -19.9956, -22.5189, -23.7033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9355, device='cuda:0', dtype=torch.float64)
tensor([-26.8978, -26.5753, -20.0170, -22.4812, -23.7667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9531, device='cuda:0', dtype=torch.float64)
tensor([-27.1298, -26.5166, -20.0638, -22.4858, -23.8252], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9085, device='cuda:0', dtype=torch.float64)
tensor([-27.2504, -26.4870, -20.0908, -22.4579, -23.8786], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9746, device='cuda:0', dtype=torch.float64)
tensor([-27.2900, -26.4729, -20.1226, -22.4109, -23.9336], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8757, device='cuda:0', dtype=torch.float64)
tensor([-27.2848, -26.3477, -20.1188, -22.3332, -23.8980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-27.2547, -26.2191, -20.0853, -22.2295, -23.8506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9293, device='cuda:0', dtype=torch.float64)
tensor([-27.2193, -26.1131, -20.0049, -22.1396, -23.7911], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8214, device='cuda:0', dtype=torch.float64)
tensor([-27.2232, -26.0115, -19.9516, -22.0543, -23.7923], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8939, device='cuda:0', dtype=torch.float64)
tensor([-27.1796, -25.9203, -19.8766, -21.9607, -23.7853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1225, device='cuda:0', dtype=torch.float64)
tensor([-27.0014, -25.7537, -19.7701, -21.8759, -23.7722], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8466, device='cuda:0', dtype=torch.float64)
tensor([-26.7636, -25.5809, -19.6552, -21.8158, -23.7557], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9273, device='cuda:0', dtype=torch.float64)
tensor([-26.5073, -25.3962, -19.5158, -21.7858, -23.7222], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8425, device='cuda:0', dtype=torch.float64)
tensor([-26.3779, -25.3272, -19.4011, -21.8273, -23.7578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8783, device='cuda:0', dtype=torch.float64)
tensor([-26.2370, -25.2733, -19.3183, -21.8588, -23.8069], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9047, device='cuda:0', dtype=torch.float64)
tensor([-26.1541, -25.2193, -19.3255, -21.8755, -23.8070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8986, device='cuda:0', dtype=torch.float64)
tensor([-26.0094, -25.1229, -19.3317, -21.9167, -23.8642], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1174, device='cuda:0', dtype=torch.float64)
tensor([-25.8205, -25.0514, -19.3589, -21.9083, -23.8975], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8190, device='cuda:0', dtype=torch.float64)
tensor([-25.6979, -25.0415, -19.3668, -21.9248, -23.9714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9210, device='cuda:0', dtype=torch.float64)
tensor([-25.5847, -25.0062, -19.3422, -21.8961, -24.0246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9588, device='cuda:0', dtype=torch.float64)
tensor([-25.4435, -24.9946, -19.3366, -21.8896, -24.1469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8457, device='cuda:0', dtype=torch.float64)
tensor([-25.3366, -24.9582, -19.3664, -21.9154, -24.2850], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9026, device='cuda:0', dtype=torch.float64)
tensor([-25.2160, -24.9267, -19.4083, -21.9805, -24.4268], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8897, device='cuda:0', dtype=torch.float64)
tensor([-25.1319, -24.9006, -19.4337, -22.0946, -24.5630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9846, device='cuda:0', dtype=torch.float64)
tensor([-25.0591, -24.8872, -19.4892, -22.2083, -24.7553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9793, device='cuda:0', dtype=torch.float64)
tensor([-25.0021, -24.8714, -19.5424, -22.3331, -24.9678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8663, device='cuda:0', dtype=torch.float64)
tensor([-24.9506, -24.7850, -19.5633, -22.4634, -25.1417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8864, device='cuda:0', dtype=torch.float64)
tensor([-24.9273, -24.6902, -19.5699, -22.5385, -25.3084], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9288, device='cuda:0', dtype=torch.float64)
tensor([-24.9196, -24.6161, -19.5648, -22.5488, -25.4469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-24.9454, -24.5670, -19.5270, -22.6029, -25.6322], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8879, device='cuda:0', dtype=torch.float64)
tensor([-24.9965, -24.5234, -19.4880, -22.6401, -25.7694], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0210, device='cuda:0', dtype=torch.float64)
tensor([-25.1230, -24.5403, -19.4670, -22.7133, -25.9409], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9971, device='cuda:0', dtype=torch.float64)
tensor([-25.3223, -24.6049, -19.5110, -22.7122, -26.0608], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9190, device='cuda:0', dtype=torch.float64)
tensor([-25.4523, -24.6464, -19.5564, -22.6766, -26.1288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9649, device='cuda:0', dtype=torch.float64)
tensor([-25.6045, -24.7422, -19.5926, -22.5992, -26.2100], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9433, device='cuda:0', dtype=torch.float64)
tensor([-25.7744, -24.8302, -19.6287, -22.5943, -26.3036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8204, device='cuda:0', dtype=torch.float64)
tensor([-25.8747, -24.9821, -19.6205, -22.6029, -26.4454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7763, device='cuda:0', dtype=torch.float64)
tensor([-25.9912, -25.1446, -19.5916, -22.6008, -26.5641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9727, device='cuda:0', dtype=torch.float64)
tensor([-26.1183, -25.3138, -19.6213, -22.5825, -26.6506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7972, device='cuda:0', dtype=torch.float64)
tensor([-26.2094, -25.4853, -19.6287, -22.5769, -26.7128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9667, device='cuda:0', dtype=torch.float64)
tensor([-26.3821, -25.6899, -19.6777, -22.5877, -26.8561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0381, device='cuda:0', dtype=torch.float64)
tensor([-26.5458, -25.9307, -19.7287, -22.5343, -26.8967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8994, device='cuda:0', dtype=torch.float64)
tensor([-26.5863, -26.1773, -19.7591, -22.4617, -26.9012], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9057, device='cuda:0', dtype=torch.float64)
tensor([-26.6403, -26.4070, -19.7918, -22.4234, -26.9020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1178, device='cuda:0', dtype=torch.float64)
tensor([-26.6344, -26.6110, -19.8170, -22.4856, -26.9898], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0164, device='cuda:0', dtype=torch.float64)
tensor([-26.5776, -26.7028, -19.8289, -22.5471, -27.0714], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1461, device='cuda:0', dtype=torch.float64)
tensor([-26.6101, -26.7247, -19.8166, -22.6357, -27.1115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9563, device='cuda:0', dtype=torch.float64)
tensor([-26.5901, -26.6854, -19.8316, -22.7101, -27.1538], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8689, device='cuda:0', dtype=torch.float64)
tensor([-26.7242, -26.7692, -19.8526, -22.7875, -27.1518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8186, device='cuda:0', dtype=torch.float64)
tensor([-26.8759, -26.8945, -19.8743, -22.8337, -27.1189], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9898, device='cuda:0', dtype=torch.float64)
tensor([-26.9124, -26.8783, -19.8765, -22.8905, -26.9523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9010, device='cuda:0', dtype=torch.float64)
tensor([-26.9949, -26.9278, -19.8747, -22.9275, -26.8128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9755, device='cuda:0', dtype=torch.float64)
tensor([-27.1138, -26.9845, -19.8808, -22.9729, -26.6450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9116, device='cuda:0', dtype=torch.float64)
tensor([-27.2223, -27.0670, -19.9024, -22.9931, -26.4938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9605, device='cuda:0', dtype=torch.float64)
tensor([-27.3243, -27.1318, -19.9237, -23.0394, -26.3616], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1282, device='cuda:0', dtype=torch.float64)
tensor([-27.4274, -27.2242, -19.8904, -23.1177, -26.3214], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8932, device='cuda:0', dtype=torch.float64)
tensor([-27.5509, -27.3541, -19.8446, -23.2310, -26.3544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9746, device='cuda:0', dtype=torch.float64)
tensor([-27.7197, -27.4988, -19.7682, -23.4225, -26.4292], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8648, device='cuda:0', dtype=torch.float64)
tensor([-27.7507, -27.5501, -19.6650, -23.6071, -26.4549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9109, device='cuda:0', dtype=torch.float64)
tensor([-27.8245, -27.6230, -19.5948, -23.7788, -26.5225], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9037, device='cuda:0', dtype=torch.float64)
tensor([-27.9923, -27.7868, -19.5297, -23.9452, -26.6565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8193, device='cuda:0', dtype=torch.float64)
tensor([-28.1018, -28.0541, -19.4406, -24.1325, -26.8711], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0608, device='cuda:0', dtype=torch.float64)
tensor([-28.2776, -28.2852, -19.4131, -24.3081, -27.0638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9251, device='cuda:0', dtype=torch.float64)
tensor([-28.4718, -28.5374, -19.4044, -24.4903, -27.1678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9706, device='cuda:0', dtype=torch.float64)
tensor([-28.7565, -28.8204, -19.3977, -24.7642, -27.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8637, device='cuda:0', dtype=torch.float64)
tensor([-28.9861, -29.0615, -19.4072, -24.9593, -27.3531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9820, device='cuda:0', dtype=torch.float64)
tensor([-29.1868, -29.4105, -19.4006, -25.1497, -27.5525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8459, device='cuda:0', dtype=torch.float64)
tensor([-29.3801, -29.7577, -19.4226, -25.3440, -27.8016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0100, device='cuda:0', dtype=torch.float64)
tensor([-29.5657, -30.1204, -19.4257, -25.5776, -27.9943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9902, device='cuda:0', dtype=torch.float64)
tensor([-29.8081, -30.5252, -19.4316, -25.8066, -28.2234], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8100, device='cuda:0', dtype=torch.float64)
tensor([-30.0029, -30.8436, -19.4551, -25.9905, -28.4371], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8356, device='cuda:0', dtype=torch.float64)
tensor([-30.1619, -31.0146, -19.4836, -26.0800, -28.5907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1008, device='cuda:0', dtype=torch.float64)
tensor([-30.2625, -31.1041, -19.4846, -26.1403, -28.6715], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9895, device='cuda:0', dtype=torch.float64)
tensor([-30.3764, -31.1276, -19.5083, -26.1541, -28.7690], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8470, device='cuda:0', dtype=torch.float64)
tensor([-30.5257, -31.1660, -19.5155, -26.1928, -28.8058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0832, device='cuda:0', dtype=torch.float64)
tensor([-30.5796, -31.2400, -19.5146, -26.2405, -28.8747], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8738, device='cuda:0', dtype=torch.float64)
tensor([-30.6037, -31.2753, -19.5416, -26.2692, -28.9340], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8627, device='cuda:0', dtype=torch.float64)
tensor([-30.6215, -31.2555, -19.5549, -26.3056, -28.9799], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9482, device='cuda:0', dtype=torch.float64)
tensor([-30.5746, -31.3128, -19.5722, -26.3535, -29.1067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8888, device='cuda:0', dtype=torch.float64)
tensor([-30.4905, -31.3057, -19.5571, -26.3743, -29.1839], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8314, device='cuda:0', dtype=torch.float64)
tensor([-30.3905, -31.3307, -19.5028, -26.3898, -29.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8971, device='cuda:0', dtype=torch.float64)
tensor([-30.3028, -31.3414, -19.4733, -26.4095, -29.3211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9437, device='cuda:0', dtype=torch.float64)
tensor([-30.1817, -31.3289, -19.4769, -26.3654, -29.3098], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8923, device='cuda:0', dtype=torch.float64)
tensor([-30.2277, -31.4154, -19.4639, -26.3323, -29.2049], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1190, device='cuda:0', dtype=torch.float64)
tensor([-30.2754, -31.4604, -19.4554, -26.3727, -29.0412], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9317, device='cuda:0', dtype=torch.float64)
tensor([-30.4511, -31.5510, -19.4203, -26.4841, -28.9063], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8569, device='cuda:0', dtype=torch.float64)
tensor([-30.5189, -31.5680, -19.3945, -26.5194, -28.8160], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9840, device='cuda:0', dtype=torch.float64)
tensor([-30.5992, -31.6344, -19.3585, -26.6042, -28.6789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8878, device='cuda:0', dtype=torch.float64)
tensor([-30.6369, -31.6669, -19.3270, -26.6541, -28.5379], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8864, device='cuda:0', dtype=torch.float64)
tensor([-30.6309, -31.6991, -19.3075, -26.6815, -28.3506], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0363, device='cuda:0', dtype=torch.float64)
tensor([-30.5897, -31.7344, -19.3030, -26.6517, -28.0486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.3456, device='cuda:0', dtype=torch.float64)
tensor([-30.7563, -31.8927, -19.3701, -26.6100, -27.7793], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8557, device='cuda:0', dtype=torch.float64)
tensor([-30.9350, -32.1086, -19.4529, -26.5408, -27.5515], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8717, device='cuda:0', dtype=torch.float64)
tensor([-31.2302, -32.3124, -19.5485, -26.5501, -27.3414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8267, device='cuda:0', dtype=torch.float64)
tensor([-31.4256, -32.5610, -19.6377, -26.5711, -27.2578], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8961, device='cuda:0', dtype=torch.float64)
tensor([-31.6584, -32.7799, -19.7080, -26.5441, -27.1297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9566, device='cuda:0', dtype=torch.float64)
tensor([-31.8953, -33.1475, -19.8082, -26.6202, -27.0465], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9064, device='cuda:0', dtype=torch.float64)
tensor([-32.1327, -33.4126, -19.8599, -26.6096, -26.9442], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9154, device='cuda:0', dtype=torch.float64)
tensor([-32.2462, -33.5916, -19.9034, -26.6041, -26.8679], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8925, device='cuda:0', dtype=torch.float64)
tensor([-32.3032, -33.7282, -19.9686, -26.5849, -26.8056], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8888, device='cuda:0', dtype=torch.float64)
tensor([-32.2828, -33.7490, -20.0123, -26.4655, -26.6791], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.1115, device='cuda:0', dtype=torch.float64)
tensor([-32.3666, -33.7366, -20.0353, -26.2962, -26.4709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8133, device='cuda:0', dtype=torch.float64)
tensor([-32.4188, -33.6862, -20.0289, -26.1731, -26.2741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9075, device='cuda:0', dtype=torch.float64)
tensor([-32.5962, -33.6649, -20.0258, -26.1056, -26.1615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8006, device='cuda:0', dtype=torch.float64)
tensor([-32.7717, -33.6595, -20.0329, -26.0965, -26.1240], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9034, device='cuda:0', dtype=torch.float64)
tensor([-32.9658, -33.7296, -20.0210, -26.1662, -26.1526], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8055, device='cuda:0', dtype=torch.float64)
tensor([-33.0778, -33.6798, -19.9963, -26.1705, -26.1805], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0653, device='cuda:0', dtype=torch.float64)
tensor([-33.1456, -33.6716, -19.9525, -26.2241, -26.1651], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8958, device='cuda:0', dtype=torch.float64)
tensor([-33.2858, -33.6884, -19.8891, -26.2968, -26.1586], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0116, device='cuda:0', dtype=torch.float64)
tensor([-33.4065, -33.6467, -19.8142, -26.3237, -26.1960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8799, device='cuda:0', dtype=torch.float64)
tensor([-33.5953, -33.7213, -19.7397, -26.3559, -26.2279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0036, device='cuda:0', dtype=torch.float64)
tensor([-33.7598, -33.8028, -19.6903, -26.4242, -26.2662], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0548, device='cuda:0', dtype=torch.float64)
tensor([-33.9012, -33.9669, -19.6315, -26.5782, -26.3374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9342, device='cuda:0', dtype=torch.float64)
tensor([-33.9692, -34.1595, -19.5199, -26.7575, -26.3963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8778, device='cuda:0', dtype=torch.float64)
tensor([-34.0892, -34.3222, -19.4121, -26.8667, -26.4309], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8295, device='cuda:0', dtype=torch.float64)
tensor([-34.2176, -34.5223, -19.3416, -26.9686, -26.4482], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0494, device='cuda:0', dtype=torch.float64)
tensor([-34.3619, -34.6111, -19.3356, -27.0385, -26.4531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8260, device='cuda:0', dtype=torch.float64)
tensor([-34.5523, -34.6268, -19.3181, -27.1380, -26.4464], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8978, device='cuda:0', dtype=torch.float64)
tensor([-34.6206, -34.5862, -19.3307, -27.1604, -26.3973], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8746, device='cuda:0', dtype=torch.float64)
tensor([-34.6481, -34.6518, -19.3320, -27.2107, -26.3024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9986, device='cuda:0', dtype=torch.float64)
tensor([-34.5739, -34.6885, -19.3619, -27.2735, -26.2828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9272, device='cuda:0', dtype=torch.float64)
tensor([-34.4380, -34.6813, -19.3718, -27.3031, -26.2768], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9145, device='cuda:0', dtype=torch.float64)
tensor([-34.2685, -34.7635, -19.3405, -27.3708, -26.3161], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0480, device='cuda:0', dtype=torch.float64)
tensor([-34.0704, -34.6807, -19.2817, -27.3709, -26.3282], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9463, device='cuda:0', dtype=torch.float64)
tensor([-33.8694, -34.6337, -19.2203, -27.3377, -26.4135], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8244, device='cuda:0', dtype=torch.float64)
tensor([-33.7730, -34.6984, -19.1680, -27.3936, -26.5558], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8356, device='cuda:0', dtype=torch.float64)
tensor([-33.6693, -34.7533, -19.1183, -27.3782, -26.7629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8260, device='cuda:0', dtype=torch.float64)
tensor([-33.5895, -34.7532, -19.0545, -27.3427, -26.9101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7532, device='cuda:0', dtype=torch.float64)
tensor([-33.4735, -34.7495, -18.9739, -27.2901, -27.0192], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8549, device='cuda:0', dtype=torch.float64)
tensor([-33.3853, -34.8072, -18.8922, -27.3262, -27.1312], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9650, device='cuda:0', dtype=torch.float64)
tensor([-33.2108, -34.7846, -18.8471, -27.3619, -27.2404], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8920, device='cuda:0', dtype=torch.float64)
tensor([-33.1052, -34.7183, -18.8067, -27.3657, -27.2455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8647, device='cuda:0', dtype=torch.float64)
tensor([-32.9182, -34.6144, -18.7382, -27.3424, -27.3233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8711, device='cuda:0', dtype=torch.float64)
tensor([-32.8186, -34.6477, -18.7201, -27.3605, -27.3706], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9344, device='cuda:0', dtype=torch.float64)
tensor([-32.6980, -34.7248, -18.7288, -27.3462, -27.3967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8421, device='cuda:0', dtype=torch.float64)
tensor([-32.5296, -34.8558, -18.7331, -27.2821, -27.3788], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9561, device='cuda:0', dtype=torch.float64)
tensor([-32.4050, -34.9562, -18.7438, -27.2117, -27.3641], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9979, device='cuda:0', dtype=torch.float64)
tensor([-32.2799, -35.0294, -18.7552, -27.1223, -27.3613], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9459, device='cuda:0', dtype=torch.float64)
tensor([-32.0777, -35.0677, -18.7737, -27.0528, -27.3535], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0114, device='cuda:0', dtype=torch.float64)
tensor([-31.8115, -35.1154, -18.7722, -26.9413, -27.3994], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9120, device='cuda:0', dtype=torch.float64)
tensor([-31.5844, -35.0759, -18.7845, -26.8411, -27.3215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9079, device='cuda:0', dtype=torch.float64)
tensor([-31.2937, -35.0247, -18.7978, -26.7136, -27.2784], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8170, device='cuda:0', dtype=torch.float64)
tensor([-31.1225, -35.1040, -18.8481, -26.6025, -27.2407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9348, device='cuda:0', dtype=torch.float64)
tensor([-30.9855, -35.3791, -18.8834, -26.5438, -27.2737], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8245, device='cuda:0', dtype=torch.float64)
tensor([-30.8505, -35.6253, -18.9370, -26.5288, -27.2886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9248, device='cuda:0', dtype=torch.float64)
tensor([-30.6966, -35.8119, -18.9901, -26.5228, -27.3070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9608, device='cuda:0', dtype=torch.float64)
tensor([-30.5543, -35.8978, -19.0246, -26.5168, -27.3636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8784, device='cuda:0', dtype=torch.float64)
tensor([-30.4076, -36.0092, -19.0858, -26.5796, -27.5417], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9409, device='cuda:0', dtype=torch.float64)
tensor([-30.3538, -36.1368, -19.1515, -26.6793, -27.6504], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8384, device='cuda:0', dtype=torch.float64)
tensor([-30.3395, -36.2264, -19.2279, -26.7957, -27.7005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8185, device='cuda:0', dtype=torch.float64)
tensor([-30.3739, -36.4862, -19.3152, -27.0322, -27.8790], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9643, device='cuda:0', dtype=torch.float64)
tensor([-30.3594, -36.6242, -19.4001, -27.1780, -27.9744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9213, device='cuda:0', dtype=torch.float64)
tensor([-30.2667, -36.7192, -19.4676, -27.3649, -28.1051], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8833, device='cuda:0', dtype=torch.float64)
tensor([-30.2724, -36.8255, -19.5197, -27.5960, -28.2663], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0462, device='cuda:0', dtype=torch.float64)
tensor([-30.4105, -36.9315, -19.5860, -27.8524, -28.3892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8880, device='cuda:0', dtype=torch.float64)
tensor([-30.5213, -36.9143, -19.6795, -28.0139, -28.4631], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9173, device='cuda:0', dtype=torch.float64)
tensor([-30.5971, -36.9475, -19.7119, -28.2255, -28.5102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9767, device='cuda:0', dtype=torch.float64)
tensor([-30.7803, -37.0307, -19.7536, -28.4630, -28.6317], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8368, device='cuda:0', dtype=torch.float64)
tensor([-31.0316, -37.1784, -19.8183, -28.6580, -28.8265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9302, device='cuda:0', dtype=torch.float64)
tensor([-31.1927, -37.3891, -19.9210, -28.7875, -28.9590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8825, device='cuda:0', dtype=torch.float64)
tensor([-31.3545, -37.5750, -20.0016, -28.9151, -29.0684], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9333, device='cuda:0', dtype=torch.float64)
tensor([-31.5055, -37.7160, -20.0403, -29.0098, -29.1584], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8152, device='cuda:0', dtype=torch.float64)
tensor([-31.7407, -37.9355, -20.0585, -29.2224, -29.2770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7998, device='cuda:0', dtype=torch.float64)
tensor([-31.9177, -38.1218, -20.0647, -29.4508, -29.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8616, device='cuda:0', dtype=torch.float64)
tensor([-32.0520, -38.2184, -20.0566, -29.6408, -29.4996], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9178, device='cuda:0', dtype=torch.float64)
tensor([-32.1934, -38.3541, -20.0780, -29.8126, -29.5969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8345, device='cuda:0', dtype=torch.float64)
tensor([-32.3931, -38.5943, -20.1250, -30.0289, -29.7373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8150, device='cuda:0', dtype=torch.float64)
tensor([-32.5566, -38.8911, -20.1650, -30.2573, -29.9218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8700, device='cuda:0', dtype=torch.float64)
tensor([-32.8776, -39.1909, -20.1993, -30.5486, -30.0775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8116, device='cuda:0', dtype=torch.float64)
tensor([-33.1736, -39.4667, -20.2274, -30.8058, -30.2531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8125, device='cuda:0', dtype=torch.float64)
tensor([-33.4396, -39.6026, -20.2628, -30.9801, -30.3548], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9144, device='cuda:0', dtype=torch.float64)
tensor([-33.7778, -39.7067, -20.2583, -31.0855, -30.4085], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7932, device='cuda:0', dtype=torch.float64)
tensor([-34.0366, -39.7715, -20.2546, -31.2044, -30.4696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6993, device='cuda:0', dtype=torch.float64)
tensor([-34.3335, -39.7973, -20.2454, -31.3084, -30.4479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9755, device='cuda:0', dtype=torch.float64)
tensor([-34.6173, -39.7622, -20.2346, -31.4037, -30.3833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0070, device='cuda:0', dtype=torch.float64)
tensor([-34.8993, -39.6871, -20.2458, -31.4720, -30.3041], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9413, device='cuda:0', dtype=torch.float64)
tensor([-35.2049, -39.6374, -20.2814, -31.5094, -30.2617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9308, device='cuda:0', dtype=torch.float64)
tensor([-35.6079, -39.6961, -20.3351, -31.6393, -30.2141], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7415, device='cuda:0', dtype=torch.float64)
tensor([-35.9359, -39.8528, -20.4021, -31.8171, -30.2072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7576, device='cuda:0', dtype=torch.float64)
tensor([-36.2303, -39.9685, -20.4516, -31.9646, -30.2052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8354, device='cuda:0', dtype=torch.float64)
tensor([-36.5212, -40.1894, -20.4978, -32.1277, -30.3047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7962, device='cuda:0', dtype=torch.float64)
tensor([-36.7724, -40.3444, -20.5668, -32.2657, -30.3903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8494, device='cuda:0', dtype=torch.float64)
tensor([-36.9927, -40.2728, -20.5953, -32.3013, -30.4525], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0325, device='cuda:0', dtype=torch.float64)
tensor([-37.1791, -40.2190, -20.6028, -32.3975, -30.6279], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9512, device='cuda:0', dtype=torch.float64)
tensor([-37.2776, -40.2025, -20.6251, -32.5327, -30.7965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8421, device='cuda:0', dtype=torch.float64)
tensor([-37.4841, -40.2610, -20.6870, -32.6741, -31.0328], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0915, device='cuda:0', dtype=torch.float64)
tensor([-37.5783, -40.3331, -20.7334, -32.7483, -31.2033], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8579, device='cuda:0', dtype=torch.float64)
tensor([-37.6589, -40.3665, -20.7844, -32.8553, -31.3358], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9396, device='cuda:0', dtype=torch.float64)
tensor([-37.7347, -40.2926, -20.8429, -32.9891, -31.4106], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8319, device='cuda:0', dtype=torch.float64)
tensor([-37.7574, -40.1612, -20.8882, -33.0485, -31.4363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9842, device='cuda:0', dtype=torch.float64)
tensor([-37.8866, -40.1246, -20.9404, -33.1736, -31.5450], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8468, device='cuda:0', dtype=torch.float64)
tensor([-37.9544, -40.0847, -20.9722, -33.2695, -31.6457], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9741, device='cuda:0', dtype=torch.float64)
tensor([-38.1185, -39.9991, -21.0122, -33.3112, -31.7574], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8551, device='cuda:0', dtype=torch.float64)
tensor([-38.1458, -39.8101, -21.0177, -33.2584, -31.8116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8957, device='cuda:0', dtype=torch.float64)
tensor([-38.0207, -39.5823, -21.0305, -33.1935, -31.8147], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7525, device='cuda:0', dtype=torch.float64)
tensor([-37.9132, -39.3842, -21.0771, -33.1073, -31.8366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8911, device='cuda:0', dtype=torch.float64)
tensor([-37.7485, -39.2071, -21.0846, -33.0505, -31.8164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9185, device='cuda:0', dtype=torch.float64)
tensor([-37.6916, -39.0256, -21.1235, -33.0566, -31.7055], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8841, device='cuda:0', dtype=torch.float64)
tensor([-37.5450, -38.8302, -21.1415, -32.9975, -31.5605], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8814, device='cuda:0', dtype=torch.float64)
tensor([-37.3796, -38.6417, -21.1728, -32.9919, -31.4858], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8721, device='cuda:0', dtype=torch.float64)
tensor([-37.1266, -38.4231, -21.1974, -32.8965, -31.4823], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8367, device='cuda:0', dtype=torch.float64)
tensor([-36.9309, -38.1703, -21.2704, -32.8001, -31.4255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8517, device='cuda:0', dtype=torch.float64)
tensor([-36.8127, -38.0021, -21.3734, -32.7430, -31.4091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9964, device='cuda:0', dtype=torch.float64)
tensor([-36.7332, -37.9939, -21.5496, -32.7280, -31.4111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7801, device='cuda:0', dtype=torch.float64)
tensor([-36.6762, -37.9522, -21.7245, -32.7278, -31.3704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9356, device='cuda:0', dtype=torch.float64)
tensor([-36.5896, -37.9278, -21.8419, -32.7448, -31.3678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7937, device='cuda:0', dtype=torch.float64)
tensor([-36.5565, -37.8841, -21.9583, -32.7434, -31.3177], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9072, device='cuda:0', dtype=torch.float64)
tensor([-36.4977, -37.7592, -22.0752, -32.7395, -31.1869], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-36.3688, -37.6061, -22.1829, -32.6737, -31.0373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8454, device='cuda:0', dtype=torch.float64)
tensor([-36.2177, -37.4486, -22.3157, -32.5502, -30.8438], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8407, device='cuda:0', dtype=torch.float64)
tensor([-36.0754, -37.3826, -22.4228, -32.5342, -30.7546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7485, device='cuda:0', dtype=torch.float64)
tensor([-35.9943, -37.2891, -22.5566, -32.5210, -30.7089], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0012, device='cuda:0', dtype=torch.float64)
tensor([-35.9362, -37.2683, -22.6694, -32.5014, -30.7459], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7961, device='cuda:0', dtype=torch.float64)
tensor([-35.9191, -37.2093, -22.7851, -32.5151, -30.7731], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7561, device='cuda:0', dtype=torch.float64)
tensor([-35.8090, -37.1370, -22.8480, -32.5657, -30.7828], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7793, device='cuda:0', dtype=torch.float64)
tensor([-35.7331, -37.0847, -22.9017, -32.6114, -30.7423], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8773, device='cuda:0', dtype=torch.float64)
tensor([-35.6564, -37.0173, -22.9845, -32.6545, -30.6632], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0562, device='cuda:0', dtype=torch.float64)
tensor([-35.6110, -36.9366, -23.0452, -32.6592, -30.5375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9559, device='cuda:0', dtype=torch.float64)
tensor([-35.5148, -36.8208, -23.0825, -32.6671, -30.4011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7591, device='cuda:0', dtype=torch.float64)
tensor([-35.6064, -36.8354, -23.1097, -32.7461, -30.2498], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9064, device='cuda:0', dtype=torch.float64)
tensor([-35.6166, -36.8715, -23.1827, -32.8738, -30.1773], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8071, device='cuda:0', dtype=torch.float64)
tensor([-35.7065, -36.9503, -23.2603, -32.9197, -29.9696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7049, device='cuda:0', dtype=torch.float64)
tensor([-35.7282, -37.0162, -23.3303, -32.9529, -29.7349], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8310, device='cuda:0', dtype=torch.float64)
tensor([-35.5532, -36.8834, -23.4122, -32.8882, -29.4924], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9208, device='cuda:0', dtype=torch.float64)
tensor([-35.4219, -36.7116, -23.4674, -32.7995, -29.2966], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8412, device='cuda:0', dtype=torch.float64)
tensor([-35.3528, -36.5763, -23.5152, -32.7035, -29.1308], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9109, device='cuda:0', dtype=torch.float64)
tensor([-35.3542, -36.4534, -23.5803, -32.6678, -28.9591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8859, device='cuda:0', dtype=torch.float64)
tensor([-35.4266, -36.4121, -23.6180, -32.6896, -28.7022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-35.5050, -36.4079, -23.6505, -32.7421, -28.6391], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7658, device='cuda:0', dtype=torch.float64)
tensor([-35.6270, -36.4066, -23.6846, -32.7229, -28.5543], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9528, device='cuda:0', dtype=torch.float64)
tensor([-35.8193, -36.3759, -23.6947, -32.7259, -28.5075], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8461, device='cuda:0', dtype=torch.float64)
tensor([-36.1736, -36.3769, -23.7225, -32.7425, -28.4801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8712, device='cuda:0', dtype=torch.float64)
tensor([-36.5611, -36.5071, -23.7461, -32.7996, -28.5217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0031, device='cuda:0', dtype=torch.float64)
tensor([-36.9994, -36.6381, -23.7674, -32.7834, -28.4580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8324, device='cuda:0', dtype=torch.float64)
tensor([-37.3616, -36.8076, -23.8605, -32.7611, -28.3882], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8585, device='cuda:0', dtype=torch.float64)
tensor([-37.7307, -37.1085, -23.9584, -32.7857, -28.2892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8593, device='cuda:0', dtype=torch.float64)
tensor([-37.9965, -37.3286, -24.0244, -32.8605, -28.2342], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7656, device='cuda:0', dtype=torch.float64)
tensor([-38.2968, -37.7511, -24.0900, -33.0046, -28.2218], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7908, device='cuda:0', dtype=torch.float64)
tensor([-38.5626, -38.1041, -24.1306, -33.0451, -28.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9996, device='cuda:0', dtype=torch.float64)
tensor([-38.8014, -38.5214, -24.1597, -33.1322, -28.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8663, device='cuda:0', dtype=torch.float64)
tensor([-39.0647, -38.8898, -24.1617, -33.1949, -28.1489], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8082, device='cuda:0', dtype=torch.float64)
tensor([-39.4142, -39.3486, -24.1867, -33.2908, -28.1520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9594, device='cuda:0', dtype=torch.float64)
tensor([-39.7928, -39.6743, -24.1904, -33.3961, -28.1725], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9648, device='cuda:0', dtype=torch.float64)
tensor([-40.1175, -39.9599, -24.2254, -33.4983, -28.2229], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0825, device='cuda:0', dtype=torch.float64)
tensor([-40.4612, -40.1510, -24.2469, -33.5071, -28.1937], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8556, device='cuda:0', dtype=torch.float64)
tensor([-40.6023, -40.2926, -24.2104, -33.5271, -28.2689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8995, device='cuda:0', dtype=torch.float64)
tensor([-40.7333, -40.4662, -24.1650, -33.5652, -28.3638], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8819, device='cuda:0', dtype=torch.float64)
tensor([-40.6698, -40.3574, -24.0913, -33.4945, -28.3518], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8774, device='cuda:0', dtype=torch.float64)
tensor([-40.4982, -40.3633, -24.0085, -33.4922, -28.4495], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8640, device='cuda:0', dtype=torch.float64)
tensor([-40.2994, -40.3404, -23.9630, -33.4253, -28.6523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9448, device='cuda:0', dtype=torch.float64)
tensor([-40.0652, -40.2683, -23.9253, -33.3338, -28.8407], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8075, device='cuda:0', dtype=torch.float64)
tensor([-39.8802, -40.1462, -23.8746, -33.2740, -29.0223], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7783, device='cuda:0', dtype=torch.float64)
tensor([-39.7531, -40.0409, -23.8434, -33.2455, -29.1730], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8214, device='cuda:0', dtype=torch.float64)
tensor([-39.5885, -39.9712, -23.8288, -33.3352, -29.4178], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9507, device='cuda:0', dtype=torch.float64)
tensor([-39.4342, -39.9171, -23.8118, -33.4887, -29.7361], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8998, device='cuda:0', dtype=torch.float64)
tensor([-39.2711, -39.9084, -23.8000, -33.6581, -30.0598], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7556, device='cuda:0', dtype=torch.float64)
tensor([-39.1110, -40.0153, -23.8227, -33.8489, -30.4179], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8244, device='cuda:0', dtype=torch.float64)
tensor([-38.9430, -39.9792, -23.7930, -33.9564, -30.6478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9408, device='cuda:0', dtype=torch.float64)
tensor([-38.8020, -39.9724, -23.7658, -34.0522, -30.8724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8100, device='cuda:0', dtype=torch.float64)
tensor([-38.7775, -40.0285, -23.7558, -34.2087, -31.1052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8080, device='cuda:0', dtype=torch.float64)
tensor([-38.7238, -40.0993, -23.7450, -34.3854, -31.3288], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9137, device='cuda:0', dtype=torch.float64)
tensor([-38.7067, -39.9704, -23.7048, -34.4655, -31.4047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7162, device='cuda:0', dtype=torch.float64)
tensor([-38.7196, -39.9346, -23.6890, -34.6448, -31.5182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8832, device='cuda:0', dtype=torch.float64)
tensor([-38.7128, -40.0569, -23.6791, -34.8374, -31.6680], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8596, device='cuda:0', dtype=torch.float64)
tensor([-38.6866, -40.1192, -23.6784, -34.9573, -31.8016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8798, device='cuda:0', dtype=torch.float64)
tensor([-38.5041, -40.2040, -23.6798, -35.1180, -31.9992], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9389, device='cuda:0', dtype=torch.float64)
tensor([-38.1944, -40.2417, -23.6659, -35.2432, -32.1565], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7782, device='cuda:0', dtype=torch.float64)
tensor([-37.9756, -40.2809, -23.6701, -35.3116, -32.2307], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8424, device='cuda:0', dtype=torch.float64)
tensor([-37.9269, -40.3411, -23.6789, -35.3523, -32.2658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7634, device='cuda:0', dtype=torch.float64)
tensor([-37.8565, -40.5340, -23.7137, -35.3604, -32.2629], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7891, device='cuda:0', dtype=torch.float64)
tensor([-37.7452, -40.7648, -23.7812, -35.3588, -32.2902], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7307, device='cuda:0', dtype=torch.float64)
tensor([-37.5658, -40.9927, -23.8531, -35.3955, -32.3424], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8930, device='cuda:0', dtype=torch.float64)
tensor([-37.4208, -41.2235, -23.9078, -35.3965, -32.3720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7324, device='cuda:0', dtype=torch.float64)
tensor([-37.2710, -41.3801, -23.9735, -35.4402, -32.4150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8915, device='cuda:0', dtype=torch.float64)
tensor([-37.2078, -41.5439, -24.0601, -35.5253, -32.4493], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8799, device='cuda:0', dtype=torch.float64)
tensor([-37.2093, -41.8207, -24.1668, -35.6345, -32.4683], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6998, device='cuda:0', dtype=torch.float64)
tensor([-37.2598, -42.0449, -24.2568, -35.7571, -32.5306], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8154, device='cuda:0', dtype=torch.float64)
tensor([-37.3462, -42.2795, -24.3245, -35.8696, -32.6394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7460, device='cuda:0', dtype=torch.float64)
tensor([-37.4254, -42.5808, -24.4203, -35.9757, -32.7414], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7599, device='cuda:0', dtype=torch.float64)
tensor([-37.5417, -42.7845, -24.4881, -36.0389, -32.8142], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7361, device='cuda:0', dtype=torch.float64)
tensor([-37.7397, -43.0699, -24.5876, -36.1608, -32.9561], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7822, device='cuda:0', dtype=torch.float64)
tensor([-37.9919, -43.3813, -24.6380, -36.2810, -33.1097], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8435, device='cuda:0', dtype=torch.float64)
tensor([-38.2907, -43.7626, -24.6828, -36.4750, -33.3479], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9469, device='cuda:0', dtype=torch.float64)
tensor([-38.7019, -44.2367, -24.7144, -36.6252, -33.5709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8254, device='cuda:0', dtype=torch.float64)
tensor([-39.0424, -44.6613, -24.7580, -36.8665, -33.8428], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6762, device='cuda:0', dtype=torch.float64)
tensor([-39.2881, -45.0068, -24.7896, -37.0518, -34.0517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7595, device='cuda:0', dtype=torch.float64)
tensor([-39.5625, -45.3344, -24.8765, -37.2656, -34.2022], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7992, device='cuda:0', dtype=torch.float64)
tensor([-39.9123, -45.8135, -24.9857, -37.5059, -34.3967], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8240, device='cuda:0', dtype=torch.float64)
tensor([-40.2685, -46.3766, -25.1048, -37.7112, -34.6591], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9757, device='cuda:0', dtype=torch.float64)
tensor([-40.7368, -46.8918, -25.1846, -37.7828, -34.8705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9055, device='cuda:0', dtype=torch.float64)
tensor([-41.1816, -47.3030, -25.2600, -37.8892, -35.0936], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7459, device='cuda:0', dtype=torch.float64)
tensor([-41.5314, -47.7128, -25.3354, -38.0193, -35.3432], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8563, device='cuda:0', dtype=torch.float64)
tensor([-41.8336, -48.0017, -25.3864, -38.1358, -35.5524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9404, device='cuda:0', dtype=torch.float64)
tensor([-42.1794, -48.3501, -25.4146, -38.3273, -35.7048], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8248, device='cuda:0', dtype=torch.float64)
tensor([-42.4604, -48.6072, -25.4685, -38.4542, -35.7960], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8562, device='cuda:0', dtype=torch.float64)
tensor([-42.8458, -48.8799, -25.5084, -38.6149, -35.9750], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7285, device='cuda:0', dtype=torch.float64)
tensor([-43.2184, -49.1239, -25.5733, -38.8364, -36.1353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8375, device='cuda:0', dtype=torch.float64)
tensor([-43.6069, -49.3768, -25.5997, -39.0788, -36.2698], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7637, device='cuda:0', dtype=torch.float64)
tensor([-44.0789, -49.5689, -25.6151, -39.2674, -36.3507], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8076, device='cuda:0', dtype=torch.float64)
tensor([-44.4882, -49.7485, -25.6560, -39.4310, -36.4483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8891, device='cuda:0', dtype=torch.float64)
tensor([-44.8466, -49.7486, -25.7127, -39.4919, -36.4455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7410, device='cuda:0', dtype=torch.float64)
tensor([-45.2146, -49.5812, -25.7305, -39.4625, -36.3917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8197, device='cuda:0', dtype=torch.float64)
tensor([-45.6764, -49.4222, -25.7552, -39.4586, -36.3402], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7613, device='cuda:0', dtype=torch.float64)
tensor([-46.0906, -49.3033, -25.7553, -39.4723, -36.3587], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9290, device='cuda:0', dtype=torch.float64)
tensor([-46.4460, -49.1547, -25.7752, -39.4849, -36.4020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8088, device='cuda:0', dtype=torch.float64)
tensor([-46.6625, -49.0719, -25.7758, -39.5352, -36.4754], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8885, device='cuda:0', dtype=torch.float64)
tensor([-46.9387, -49.0530, -25.7322, -39.5679, -36.5365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7130, device='cuda:0', dtype=torch.float64)
tensor([-47.1930, -49.0853, -25.6872, -39.5924, -36.6026], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8887, device='cuda:0', dtype=torch.float64)
tensor([-47.5310, -49.1911, -25.6618, -39.6603, -36.6728], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8579, device='cuda:0', dtype=torch.float64)
tensor([-47.8556, -49.2138, -25.6324, -39.6685, -36.6397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6374, device='cuda:0', dtype=torch.float64)
tensor([-48.0802, -49.2064, -25.5853, -39.6450, -36.6124], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8087, device='cuda:0', dtype=torch.float64)
tensor([-48.2685, -49.2477, -25.5575, -39.6306, -36.5485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7585, device='cuda:0', dtype=torch.float64)
tensor([-48.3224, -49.1387, -25.4896, -39.5798, -36.4166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7039, device='cuda:0', dtype=torch.float64)
tensor([-48.3095, -49.0385, -25.4145, -39.5272, -36.2905], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8241, device='cuda:0', dtype=torch.float64)
tensor([-48.2994, -49.0559, -25.3788, -39.5474, -36.1972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8115, device='cuda:0', dtype=torch.float64)
tensor([-48.1897, -49.0176, -25.3679, -39.4267, -36.0917], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7726, device='cuda:0', dtype=torch.float64)
tensor([-48.0314, -49.0382, -25.3458, -39.3243, -35.9952], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6630, device='cuda:0', dtype=torch.float64)
tensor([-47.8297, -48.9466, -25.3542, -39.2147, -35.9445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7792, device='cuda:0', dtype=torch.float64)
tensor([-47.6931, -49.0363, -25.3859, -39.2276, -35.9667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6890, device='cuda:0', dtype=torch.float64)
tensor([-47.5756, -49.0759, -25.4367, -39.2591, -35.9445], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9232, device='cuda:0', dtype=torch.float64)
tensor([-47.3018, -49.0038, -25.4289, -39.1935, -35.9000], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8165, device='cuda:0', dtype=torch.float64)
tensor([-46.9793, -48.9513, -25.4719, -39.0365, -35.8138], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9441, device='cuda:0', dtype=torch.float64)
tensor([-46.6997, -48.7808, -25.5189, -38.8063, -35.7743], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6901, device='cuda:0', dtype=torch.float64)
tensor([-46.4420, -48.8961, -25.5439, -38.6722, -35.8273], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7412, device='cuda:0', dtype=torch.float64)
tensor([-46.2216, -48.8941, -25.5975, -38.5199, -35.8153], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8131, device='cuda:0', dtype=torch.float64)
tensor([-45.9006, -48.8574, -25.6771, -38.3931, -35.8017], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9214, device='cuda:0', dtype=torch.float64)
tensor([-45.4695, -48.7116, -25.7230, -38.2076, -35.7150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7601, device='cuda:0', dtype=torch.float64)
tensor([-45.1343, -48.6882, -25.7623, -38.0286, -35.5870], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7761, device='cuda:0', dtype=torch.float64)
tensor([-44.9471, -48.8004, -25.7895, -37.9285, -35.5067], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(1.0177, device='cuda:0', dtype=torch.float64)
tensor([-44.8112, -48.7902, -25.8382, -37.7968, -35.4170], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7546, device='cuda:0', dtype=torch.float64)
tensor([-44.7178, -48.8383, -25.8786, -37.6988, -35.3296], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7541, device='cuda:0', dtype=torch.float64)
tensor([-44.7076, -49.0489, -25.9078, -37.6282, -35.2637], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7515, device='cuda:0', dtype=torch.float64)
tensor([-44.7437, -49.2133, -25.9276, -37.6276, -35.2366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7987, device='cuda:0', dtype=torch.float64)
tensor([-44.7899, -49.4326, -25.9366, -37.6288, -35.1633], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7479, device='cuda:0', dtype=torch.float64)
tensor([-44.9368, -49.6896, -25.9790, -37.6679, -35.0343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8519, device='cuda:0', dtype=torch.float64)
tensor([-45.0487, -49.9425, -26.0718, -37.7680, -35.0183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8625, device='cuda:0', dtype=torch.float64)
tensor([-45.3196, -50.3469, -26.1529, -37.8865, -35.0964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7977, device='cuda:0', dtype=torch.float64)
tensor([-45.4742, -50.6332, -26.2234, -37.9927, -35.2009], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8816, device='cuda:0', dtype=torch.float64)
tensor([-45.5773, -50.8746, -26.3008, -38.0715, -35.3191], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8267, device='cuda:0', dtype=torch.float64)
tensor([-45.7570, -51.0082, -26.3599, -38.0939, -35.3341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8687, device='cuda:0', dtype=torch.float64)
tensor([-45.9568, -51.0171, -26.4262, -38.0958, -35.2653], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7831, device='cuda:0', dtype=torch.float64)
tensor([-46.1016, -51.0013, -26.4984, -38.1592, -35.2315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7749, device='cuda:0', dtype=torch.float64)
tensor([-46.2289, -50.8942, -26.5411, -38.1826, -35.1553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8193, device='cuda:0', dtype=torch.float64)
tensor([-46.3005, -50.7809, -26.6056, -38.1588, -35.0394], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7471, device='cuda:0', dtype=torch.float64)
tensor([-46.2951, -50.6838, -26.6898, -38.1182, -34.8829], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9829, device='cuda:0', dtype=torch.float64)
tensor([-46.2735, -50.5491, -26.8132, -38.0765, -34.7741], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8371, device='cuda:0', dtype=torch.float64)
tensor([-46.3194, -50.5770, -26.9897, -38.0483, -34.7016], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7752, device='cuda:0', dtype=torch.float64)
tensor([-46.3008, -50.3767, -27.1395, -37.9159, -34.6238], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9031, device='cuda:0', dtype=torch.float64)
tensor([-46.1915, -50.0616, -27.2375, -37.7162, -34.5615], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6900, device='cuda:0', dtype=torch.float64)
tensor([-46.0922, -49.6885, -27.3201, -37.4939, -34.4478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8820, device='cuda:0', dtype=torch.float64)
tensor([-45.9990, -49.2605, -27.4037, -37.2860, -34.3552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6945, device='cuda:0', dtype=torch.float64)
tensor([-45.9550, -48.9098, -27.4794, -37.1064, -34.2622], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8877, device='cuda:0', dtype=torch.float64)
tensor([-45.9139, -48.7019, -27.5447, -36.9326, -34.1904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7226, device='cuda:0', dtype=torch.float64)
tensor([-45.8284, -48.5463, -27.6400, -36.7503, -34.1549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8240, device='cuda:0', dtype=torch.float64)
tensor([-45.7043, -48.4749, -27.7433, -36.6295, -34.1738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7224, device='cuda:0', dtype=torch.float64)
tensor([-45.5832, -48.2896, -27.8101, -36.5330, -34.0933], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8376, device='cuda:0', dtype=torch.float64)
tensor([-45.4777, -48.0882, -27.8892, -36.4921, -34.0617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6782, device='cuda:0', dtype=torch.float64)
tensor([-45.3597, -47.9081, -27.9686, -36.5149, -34.0766], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8563, device='cuda:0', dtype=torch.float64)
tensor([-45.2402, -47.7841, -28.0412, -36.5573, -34.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7724, device='cuda:0', dtype=torch.float64)
tensor([-45.2037, -47.7621, -28.0514, -36.6498, -34.3617], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7028, device='cuda:0', dtype=torch.float64)
tensor([-45.1799, -47.7307, -28.0516, -36.7248, -34.5239], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7446, device='cuda:0', dtype=torch.float64)
tensor([-45.2232, -47.8343, -28.0416, -36.8600, -34.7028], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8252, device='cuda:0', dtype=torch.float64)
tensor([-45.4116, -48.0780, -28.0164, -37.0889, -34.9300], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8585, device='cuda:0', dtype=torch.float64)
tensor([-45.6414, -48.3431, -27.9551, -37.3810, -35.1878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7696, device='cuda:0', dtype=torch.float64)
tensor([-45.8242, -48.6356, -27.8777, -37.6668, -35.4313], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9063, device='cuda:0', dtype=torch.float64)
tensor([-46.0923, -48.9093, -27.7753, -38.0277, -35.6903], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7343, device='cuda:0', dtype=torch.float64)
tensor([-46.3650, -49.1608, -27.6984, -38.3109, -35.9517], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8143, device='cuda:0', dtype=torch.float64)
tensor([-46.7572, -49.4273, -27.6569, -38.5059, -36.1529], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8752, device='cuda:0', dtype=torch.float64)
tensor([-47.1234, -49.7657, -27.6256, -38.7477, -36.3811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8938, device='cuda:0', dtype=torch.float64)
tensor([-47.4006, -50.1499, -27.7030, -39.0231, -36.6893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7778, device='cuda:0', dtype=torch.float64)
tensor([-47.6709, -50.6320, -27.7441, -39.3802, -37.0384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7193, device='cuda:0', dtype=torch.float64)
tensor([-48.0384, -51.0330, -27.8255, -39.6621, -37.3102], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7932, device='cuda:0', dtype=torch.float64)
tensor([-48.3883, -51.3883, -27.9209, -39.8463, -37.5431], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8428, device='cuda:0', dtype=torch.float64)
tensor([-48.8073, -51.7386, -27.9977, -40.1018, -37.7777], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9101, device='cuda:0', dtype=torch.float64)
tensor([-49.3633, -52.0633, -28.1375, -40.3371, -38.0065], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6934, device='cuda:0', dtype=torch.float64)
tensor([-49.9346, -52.3994, -28.2623, -40.5306, -38.1876], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8034, device='cuda:0', dtype=torch.float64)
tensor([-50.5200, -52.6948, -28.4025, -40.6322, -38.3334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8235, device='cuda:0', dtype=torch.float64)
tensor([-51.1183, -53.0060, -28.5644, -40.7986, -38.5265], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6976, device='cuda:0', dtype=torch.float64)
tensor([-51.6624, -53.3438, -28.7527, -40.9505, -38.7333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8857, device='cuda:0', dtype=torch.float64)
tensor([-52.1990, -53.5939, -28.9147, -41.1574, -38.8878], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7338, device='cuda:0', dtype=torch.float64)
tensor([-52.7885, -53.8736, -29.0704, -41.4098, -39.1011], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7335, device='cuda:0', dtype=torch.float64)
tensor([-53.3320, -54.1740, -29.2352, -41.6977, -39.3004], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8691, device='cuda:0', dtype=torch.float64)
tensor([-53.8996, -54.4512, -29.4003, -41.9289, -39.4667], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8638, device='cuda:0', dtype=torch.float64)
tensor([-54.4029, -54.5856, -29.5559, -42.0178, -39.5408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9609, device='cuda:0', dtype=torch.float64)
tensor([-55.0221, -54.8171, -29.6964, -41.9520, -39.5775], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7908, device='cuda:0', dtype=torch.float64)
tensor([-55.5306, -54.9281, -29.8395, -41.8515, -39.5720], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8304, device='cuda:0', dtype=torch.float64)
tensor([-56.0779, -54.9311, -29.9363, -41.7469, -39.5596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8268, device='cuda:0', dtype=torch.float64)
tensor([-56.4426, -54.9813, -30.0049, -41.5799, -39.5554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([-56.7981, -55.0315, -30.0457, -41.4525, -39.5908], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7366, device='cuda:0', dtype=torch.float64)
tensor([-57.0322, -55.1269, -30.1254, -41.3716, -39.6542], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7350, device='cuda:0', dtype=torch.float64)
tensor([-57.2537, -55.2073, -30.1824, -41.3232, -39.6426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7309, device='cuda:0', dtype=torch.float64)
tensor([-57.3385, -55.2429, -30.2027, -41.2760, -39.6185], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7800, device='cuda:0', dtype=torch.float64)
tensor([-57.3849, -55.3007, -30.2440, -41.2836, -39.6068], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.9124, device='cuda:0', dtype=torch.float64)
tensor([-57.4246, -55.2944, -30.2991, -41.2162, -39.6203], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7102, device='cuda:0', dtype=torch.float64)
tensor([-57.4874, -55.3636, -30.4196, -41.2084, -39.6580], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7678, device='cuda:0', dtype=torch.float64)
tensor([-57.6305, -55.4623, -30.5581, -41.2554, -39.7211], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7136, device='cuda:0', dtype=torch.float64)
tensor([-57.7375, -55.5691, -30.6760, -41.3164, -39.7689], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8010, device='cuda:0', dtype=torch.float64)
tensor([-57.8193, -55.4866, -30.8116, -41.2911, -39.8117], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8616, device='cuda:0', dtype=torch.float64)
tensor([-57.9469, -55.4633, -30.9668, -41.2601, -39.8691], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7295, device='cuda:0', dtype=torch.float64)
tensor([-58.0363, -55.3610, -31.1371, -41.2143, -39.9003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7968, device='cuda:0', dtype=torch.float64)
tensor([-58.1532, -55.2036, -31.3022, -41.2545, -39.9603], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7073, device='cuda:0', dtype=torch.float64)
tensor([-58.2166, -54.9744, -31.4476, -41.2573, -39.9980], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8099, device='cuda:0', dtype=torch.float64)
tensor([-58.1538, -54.6976, -31.5622, -41.1296, -39.9509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7508, device='cuda:0', dtype=torch.float64)
tensor([-58.3031, -54.5877, -31.6638, -41.1488, -39.9658], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8921, device='cuda:0', dtype=torch.float64)
tensor([-58.4751, -54.5365, -31.6977, -41.1874, -39.9496], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7275, device='cuda:0', dtype=torch.float64)
tensor([-58.6624, -54.3011, -31.7404, -41.1739, -39.9070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6887, device='cuda:0', dtype=torch.float64)
tensor([-58.8786, -54.1620, -31.7867, -41.1163, -39.9143], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6755, device='cuda:0', dtype=torch.float64)
tensor([-59.2186, -54.1175, -31.8394, -41.1183, -40.0105], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8151, device='cuda:0', dtype=torch.float64)
tensor([-59.3423, -53.9061, -31.8657, -41.0295, -40.0343], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7865, device='cuda:0', dtype=torch.float64)
tensor([-59.4137, -53.7576, -31.8873, -40.9425, -40.0367], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7629, device='cuda:0', dtype=torch.float64)
tensor([-59.5232, -53.6811, -31.9599, -40.7306, -40.0047], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8678, device='cuda:0', dtype=torch.float64)
tensor([-59.5632, -53.5816, -31.9993, -40.5479, -39.7972], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8304, device='cuda:0', dtype=torch.float64)
tensor([-59.5197, -53.6020, -32.0398, -40.4513, -39.6709], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6841, device='cuda:0', dtype=torch.float64)
tensor([-59.4636, -53.6042, -32.0617, -40.3008, -39.5826], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8322, device='cuda:0', dtype=torch.float64)
tensor([-59.3819, -53.6264, -32.0576, -40.1321, -39.4831], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7571, device='cuda:0', dtype=torch.float64)
tensor([-59.2639, -53.5228, -32.0802, -39.8403, -39.3157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8894, device='cuda:0', dtype=torch.float64)
tensor([-59.1686, -53.4209, -32.1355, -39.5816, -39.1111], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8365, device='cuda:0', dtype=torch.float64)
tensor([-59.0483, -53.4350, -32.1229, -39.4278, -39.0162], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7677, device='cuda:0', dtype=torch.float64)
tensor([-58.8453, -53.2717, -32.0870, -39.2406, -38.8961], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8827, device='cuda:0', dtype=torch.float64)
tensor([-58.6298, -53.0261, -32.0272, -39.0015, -38.7280], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7573, device='cuda:0', dtype=torch.float64)
tensor([-58.3707, -52.7956, -31.9878, -38.7600, -38.5370], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7898, device='cuda:0', dtype=torch.float64)
tensor([-58.1177, -52.6466, -31.9588, -38.5063, -38.3907], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7509, device='cuda:0', dtype=torch.float64)
tensor([-57.9547, -52.5708, -31.8832, -38.2740, -38.2552], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7157, device='cuda:0', dtype=torch.float64)
tensor([-57.7932, -52.4166, -31.8180, -38.0509, -38.0851], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8356, device='cuda:0', dtype=torch.float64)
tensor([-57.9582, -52.3328, -31.7721, -37.9085, -37.8661], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7208, device='cuda:0', dtype=torch.float64)
tensor([-57.9751, -52.0837, -31.7163, -37.8054, -37.6611], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8126, device='cuda:0', dtype=torch.float64)
tensor([-58.0056, -51.8996, -31.7055, -37.7488, -37.5155], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8508, device='cuda:0', dtype=torch.float64)
tensor([-57.8683, -51.5782, -31.7058, -37.7116, -37.3904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7945, device='cuda:0', dtype=torch.float64)
tensor([-57.7429, -51.3086, -31.6610, -37.7549, -37.3562], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7054, device='cuda:0', dtype=torch.float64)
tensor([-57.6468, -51.1308, -31.6146, -37.8483, -37.3524], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6994, device='cuda:0', dtype=torch.float64)
tensor([-57.6155, -50.9879, -31.5659, -37.8586, -37.3553], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6738, device='cuda:0', dtype=torch.float64)
tensor([-57.6388, -50.8883, -31.5147, -37.8506, -37.3614], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8014, device='cuda:0', dtype=torch.float64)
tensor([-57.6005, -50.7783, -31.4814, -37.8054, -37.3182], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7922, device='cuda:0', dtype=torch.float64)
tensor([-57.6677, -50.6829, -31.4556, -37.7599, -37.2824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6638, device='cuda:0', dtype=torch.float64)
tensor([-57.7728, -50.7137, -31.4093, -37.7959, -37.3247], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7573, device='cuda:0', dtype=torch.float64)
tensor([-57.8220, -50.7396, -31.3507, -37.8627, -37.3688], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8148, device='cuda:0', dtype=torch.float64)
tensor([-57.7504, -50.8315, -31.2918, -37.9835, -37.5362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7797, device='cuda:0', dtype=torch.float64)
tensor([-57.6119, -50.9096, -31.2490, -38.1502, -37.6846], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7535, device='cuda:0', dtype=torch.float64)
tensor([-57.5693, -51.0369, -31.2209, -38.3038, -37.8375], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8327, device='cuda:0', dtype=torch.float64)
tensor([-57.7231, -51.1431, -31.2211, -38.4982, -37.9596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7294, device='cuda:0', dtype=torch.float64)
tensor([-57.8255, -51.2566, -31.2136, -38.6167, -38.0544], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7079, device='cuda:0', dtype=torch.float64)
tensor([-57.9047, -51.3902, -31.1602, -38.6600, -38.1485], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8369, device='cuda:0', dtype=torch.float64)
tensor([-57.9121, -51.6205, -31.1317, -38.7226, -38.2868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7323, device='cuda:0', dtype=torch.float64)
tensor([-57.8272, -51.7234, -31.0773, -38.7380, -38.3825], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8384, device='cuda:0', dtype=torch.float64)
tensor([-57.6725, -51.7945, -31.0440, -38.6472, -38.3814], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7699, device='cuda:0', dtype=torch.float64)
tensor([-57.4418, -51.8368, -31.0701, -38.5495, -38.3437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8554, device='cuda:0', dtype=torch.float64)
tensor([-57.1280, -51.8588, -31.0895, -38.4933, -38.2993], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8067, device='cuda:0', dtype=torch.float64)
tensor([-56.8761, -51.9723, -31.1108, -38.4646, -38.2546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6607, device='cuda:0', dtype=torch.float64)
tensor([-56.6540, -52.1311, -31.1278, -38.4779, -38.2173], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7773, device='cuda:0', dtype=torch.float64)
tensor([-56.4596, -52.2125, -31.1571, -38.4685, -38.1262], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7466, device='cuda:0', dtype=torch.float64)
tensor([-56.3035, -52.2963, -31.2275, -38.4490, -38.0621], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8556, device='cuda:0', dtype=torch.float64)
tensor([-56.2345, -52.4131, -31.3196, -38.4488, -38.0217], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8622, device='cuda:0', dtype=torch.float64)
tensor([-56.1429, -52.5694, -31.4252, -38.3378, -37.9281], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7618, device='cuda:0', dtype=torch.float64)
tensor([-56.0764, -52.6783, -31.5442, -38.1501, -37.8057], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7263, device='cuda:0', dtype=torch.float64)
tensor([-56.1521, -52.9540, -31.6630, -38.0605, -37.7868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7981, device='cuda:0', dtype=torch.float64)
tensor([-56.2910, -53.2439, -31.7794, -37.9947, -37.8197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-56.4115, -53.4981, -31.8544, -37.9125, -37.8533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7729, device='cuda:0', dtype=torch.float64)
tensor([-56.5601, -53.7389, -31.9391, -37.7719, -37.8964], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7327, device='cuda:0', dtype=torch.float64)
tensor([-56.6465, -53.9116, -32.0172, -37.6649, -37.9640], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7468, device='cuda:0', dtype=torch.float64)
tensor([-56.8736, -54.1519, -32.1706, -37.6883, -38.1437], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7204, device='cuda:0', dtype=torch.float64)
tensor([-57.0770, -54.3075, -32.3162, -37.7767, -38.2991], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6358, device='cuda:0', dtype=torch.float64)
tensor([-57.2834, -54.5340, -32.4651, -37.8646, -38.4115], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7760, device='cuda:0', dtype=torch.float64)
tensor([-57.4932, -54.6687, -32.6215, -38.0006, -38.5221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7119, device='cuda:0', dtype=torch.float64)
tensor([-57.6430, -54.7944, -32.7812, -38.0912, -38.6091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7711, device='cuda:0', dtype=torch.float64)
tensor([-57.8919, -54.9573, -32.9926, -38.2380, -38.7314], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8705, device='cuda:0', dtype=torch.float64)
tensor([-58.1591, -55.3327, -33.2411, -38.4378, -38.9154], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7826, device='cuda:0', dtype=torch.float64)
tensor([-58.3439, -55.7854, -33.3994, -38.7704, -39.1228], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8644, device='cuda:0', dtype=torch.float64)
tensor([-58.6765, -56.1932, -33.5351, -39.0607, -39.3509], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8848, device='cuda:0', dtype=torch.float64)
tensor([-59.0461, -56.6527, -33.7002, -39.3624, -39.4854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7941, device='cuda:0', dtype=torch.float64)
tensor([-59.4700, -57.0806, -33.8673, -39.6686, -39.5955], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7707, device='cuda:0', dtype=torch.float64)
tensor([-59.8162, -57.4732, -34.0024, -39.9915, -39.7236], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6941, device='cuda:0', dtype=torch.float64)
tensor([-60.0859, -57.8734, -34.1437, -40.3222, -39.9003], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7821, device='cuda:0', dtype=torch.float64)
tensor([-60.2651, -58.2243, -34.2663, -40.5700, -39.9287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7876, device='cuda:0', dtype=torch.float64)
tensor([-60.2837, -58.4368, -34.3997, -40.6971, -39.9157], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7224, device='cuda:0', dtype=torch.float64)
tensor([-60.3441, -58.7635, -34.5292, -40.8860, -39.9857], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6665, device='cuda:0', dtype=torch.float64)
tensor([-60.3865, -59.1651, -34.6922, -41.1444, -40.0780], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7797, device='cuda:0', dtype=torch.float64)
tensor([-60.3841, -59.5370, -34.8344, -41.4976, -40.1891], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7345, device='cuda:0', dtype=torch.float64)
tensor([-60.4267, -59.7465, -34.9097, -41.7791, -40.3303], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7531, device='cuda:0', dtype=torch.float64)
tensor([-60.5404, -59.9635, -34.9875, -42.0852, -40.4554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7836, device='cuda:0', dtype=torch.float64)
tensor([-60.5814, -60.1296, -35.0239, -42.3187, -40.5351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7687, device='cuda:0', dtype=torch.float64)
tensor([-60.6024, -60.2273, -35.0501, -42.5624, -40.5948], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7999, device='cuda:0', dtype=torch.float64)
tensor([-60.5755, -60.1107, -35.0245, -42.6708, -40.5341], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7947, device='cuda:0', dtype=torch.float64)
tensor([-60.6417, -60.1194, -35.0065, -42.7804, -40.4508], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7375, device='cuda:0', dtype=torch.float64)
tensor([-60.6848, -60.0547, -35.0055, -42.7885, -40.3403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7761, device='cuda:0', dtype=torch.float64)
tensor([-60.7934, -59.9082, -35.0321, -42.7563, -40.1969], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7364, device='cuda:0', dtype=torch.float64)
tensor([-60.7801, -59.6731, -35.0762, -42.6774, -40.0287], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8948, device='cuda:0', dtype=torch.float64)
tensor([-60.7530, -59.3272, -35.1061, -42.5391, -39.8726], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7314, device='cuda:0', dtype=torch.float64)
tensor([-60.8546, -59.0576, -35.1439, -42.4685, -39.7838], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6092, device='cuda:0', dtype=torch.float64)
tensor([-60.8697, -58.8114, -35.1867, -42.3574, -39.7139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7631, device='cuda:0', dtype=torch.float64)
tensor([-60.9103, -58.5540, -35.2668, -42.2025, -39.6678], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7487, device='cuda:0', dtype=torch.float64)
tensor([-60.9846, -58.3478, -35.4051, -42.0395, -39.6291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6355, device='cuda:0', dtype=torch.float64)
tensor([-61.1774, -58.2599, -35.5388, -41.9433, -39.6205], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7604, device='cuda:0', dtype=torch.float64)
tensor([-61.3606, -58.1968, -35.7156, -41.9053, -39.6559], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7512, device='cuda:0', dtype=torch.float64)
tensor([-61.4522, -58.0954, -35.8763, -41.8101, -39.5739], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6606, device='cuda:0', dtype=torch.float64)
tensor([-61.4549, -57.9965, -35.9983, -41.6689, -39.5704], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6352, device='cuda:0', dtype=torch.float64)
tensor([-61.4989, -57.9005, -36.0932, -41.5728, -39.5399], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6495, device='cuda:0', dtype=torch.float64)
tensor([-61.4571, -57.8102, -36.2216, -41.4474, -39.5070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7731, device='cuda:0', dtype=torch.float64)
tensor([-61.5395, -57.9718, -36.2932, -41.5059, -39.5232], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6972, device='cuda:0', dtype=torch.float64)
tensor([-61.5798, -58.0890, -36.3863, -41.5700, -39.5150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6501, device='cuda:0', dtype=torch.float64)
tensor([-61.6785, -58.2799, -36.4575, -41.6050, -39.5627], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7208, device='cuda:0', dtype=torch.float64)
tensor([-61.6898, -58.5427, -36.4477, -41.5987, -39.7224], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7625, device='cuda:0', dtype=torch.float64)
tensor([-61.8036, -58.8519, -36.4669, -41.5398, -39.8456], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7112, device='cuda:0', dtype=torch.float64)
tensor([-61.9431, -59.1255, -36.5100, -41.4881, -40.0233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7206, device='cuda:0', dtype=torch.float64)
tensor([-62.0388, -59.4083, -36.5443, -41.4149, -40.1853], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6585, device='cuda:0', dtype=torch.float64)
tensor([-62.1717, -59.7536, -36.6058, -41.3664, -40.3554], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7604, device='cuda:0', dtype=torch.float64)
tensor([-62.4272, -60.1482, -36.7477, -41.3256, -40.4963], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6706, device='cuda:0', dtype=torch.float64)
tensor([-62.6479, -60.5285, -36.9156, -41.3778, -40.6595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7079, device='cuda:0', dtype=torch.float64)
tensor([-62.7353, -60.8885, -37.0393, -41.4675, -40.9086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8435, device='cuda:0', dtype=torch.float64)
tensor([-62.8368, -61.2449, -37.1039, -41.6585, -41.2318], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7757, device='cuda:0', dtype=torch.float64)
tensor([-62.9858, -61.5585, -37.1469, -41.8642, -41.5545], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8095, device='cuda:0', dtype=torch.float64)
tensor([-63.4093, -61.9969, -37.1887, -42.1644, -41.8953], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8042, device='cuda:0', dtype=torch.float64)
tensor([-63.8446, -62.4806, -37.2785, -42.3986, -42.2519], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7568, device='cuda:0', dtype=torch.float64)
tensor([-64.2417, -63.0013, -37.3940, -42.6199, -42.6266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7488, device='cuda:0', dtype=torch.float64)
tensor([-64.5756, -63.5294, -37.5355, -42.8170, -42.9789], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7357, device='cuda:0', dtype=torch.float64)
tensor([-64.8445, -64.1336, -37.6802, -43.0772, -43.3363], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6639, device='cuda:0', dtype=torch.float64)
tensor([-65.1139, -64.7067, -37.7918, -43.3588, -43.7573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7171, device='cuda:0', dtype=torch.float64)
tensor([-65.3725, -65.1183, -37.9257, -43.5419, -44.1025], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7448, device='cuda:0', dtype=torch.float64)
tensor([-65.5658, -65.5545, -38.0211, -43.7600, -44.4546], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7525, device='cuda:0', dtype=torch.float64)
tensor([-65.6595, -65.9323, -38.1484, -43.8754, -44.6852], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7485, device='cuda:0', dtype=torch.float64)
tensor([-65.7206, -66.1590, -38.2249, -43.8669, -44.8134], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6971, device='cuda:0', dtype=torch.float64)
tensor([-65.7254, -66.2919, -38.3089, -43.9090, -44.9283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7876, device='cuda:0', dtype=torch.float64)
tensor([-65.7582, -66.3218, -38.3687, -43.9081, -45.0079], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6641, device='cuda:0', dtype=torch.float64)
tensor([-65.7473, -66.1590, -38.3478, -43.8286, -45.0761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6322, device='cuda:0', dtype=torch.float64)
tensor([-65.7808, -65.9893, -38.3304, -43.7981, -45.1938], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8201, device='cuda:0', dtype=torch.float64)
tensor([-65.8096, -65.8890, -38.3589, -43.7633, -45.2183], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7507, device='cuda:0', dtype=torch.float64)
tensor([-65.9374, -65.8455, -38.3833, -43.8791, -45.3668], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6567, device='cuda:0', dtype=torch.float64)
tensor([-66.1622, -65.9626, -38.3751, -44.0573, -45.6060], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8203, device='cuda:0', dtype=torch.float64)
tensor([-66.3770, -66.0478, -38.3532, -44.1850, -45.8190], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7510, device='cuda:0', dtype=torch.float64)
tensor([-66.5992, -66.2536, -38.3616, -44.3153, -46.0935], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6931, device='cuda:0', dtype=torch.float64)
tensor([-66.9474, -66.5670, -38.4535, -44.5882, -46.4139], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7027, device='cuda:0', dtype=torch.float64)
tensor([-67.2801, -66.8036, -38.5118, -44.8148, -46.6408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7529, device='cuda:0', dtype=torch.float64)
tensor([-67.5876, -67.0430, -38.5600, -45.0109, -46.9408], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7927, device='cuda:0', dtype=torch.float64)
tensor([-67.8912, -67.1796, -38.5746, -45.1130, -47.1537], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7544, device='cuda:0', dtype=torch.float64)
tensor([-68.1546, -67.4138, -38.5387, -45.2495, -47.3767], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7051, device='cuda:0', dtype=torch.float64)
tensor([-68.3102, -67.6119, -38.5451, -45.3612, -47.5286], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7949, device='cuda:0', dtype=torch.float64)
tensor([-68.5772, -68.0156, -38.5850, -45.6395, -47.7867], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7583, device='cuda:0', dtype=torch.float64)
tensor([-68.7630, -68.4591, -38.6315, -45.9354, -48.0483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6612, device='cuda:0', dtype=torch.float64)
tensor([-69.0747, -68.8326, -38.6914, -46.2563, -48.2724], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6784, device='cuda:0', dtype=torch.float64)
tensor([-69.4637, -69.2439, -38.7869, -46.6102, -48.5310], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8236, device='cuda:0', dtype=torch.float64)
tensor([-69.9579, -69.5541, -38.9225, -46.9503, -48.8368], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8429, device='cuda:0', dtype=torch.float64)
tensor([-70.3421, -69.7202, -39.1050, -47.1747, -49.0716], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7286, device='cuda:0', dtype=torch.float64)
tensor([-70.8064, -69.8903, -39.2936, -47.4507, -49.3488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7335, device='cuda:0', dtype=torch.float64)
tensor([-71.1310, -70.0386, -39.4764, -47.6953, -49.5002], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6978, device='cuda:0', dtype=torch.float64)
tensor([-71.5220, -70.2653, -39.6600, -48.0081, -49.6403], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7250, device='cuda:0', dtype=torch.float64)
tensor([-71.9062, -70.4902, -39.8315, -48.2904, -49.8150], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6001, device='cuda:0', dtype=torch.float64)
tensor([-72.3198, -70.6889, -40.0140, -48.5281, -49.9270], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7593, device='cuda:0', dtype=torch.float64)
tensor([-72.4437, -70.6375, -40.1283, -48.5903, -49.8430], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8552, device='cuda:0', dtype=torch.float64)
tensor([-72.6684, -70.6040, -40.2764, -48.6156, -49.8072], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7697, device='cuda:0', dtype=torch.float64)
tensor([-72.7041, -70.3713, -40.4627, -48.5355, -49.7027], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6673, device='cuda:0', dtype=torch.float64)
tensor([-72.8512, -70.1576, -40.6724, -48.4534, -49.6245], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5827, device='cuda:0', dtype=torch.float64)
tensor([-72.9346, -69.8852, -40.8261, -48.3988, -49.5421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6503, device='cuda:0', dtype=torch.float64)
tensor([-73.1874, -69.7739, -41.0154, -48.4331, -49.5266], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8758, device='cuda:0', dtype=torch.float64)
tensor([-73.2699, -69.5980, -41.0825, -48.3312, -49.4965], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7081, device='cuda:0', dtype=torch.float64)
tensor([-73.4565, -69.5130, -41.1610, -48.3284, -49.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6791, device='cuda:0', dtype=torch.float64)
tensor([-73.5490, -69.4570, -41.2342, -48.3074, -49.5297], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6477, device='cuda:0', dtype=torch.float64)
tensor([-73.6289, -69.3689, -41.3198, -48.2784, -49.5626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6739, device='cuda:0', dtype=torch.float64)
tensor([-73.7263, -69.4209, -41.3971, -48.3626, -49.6520], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6933, device='cuda:0', dtype=torch.float64)
tensor([-73.6879, -69.4057, -41.4090, -48.3825, -49.7263], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6928, device='cuda:0', dtype=torch.float64)
tensor([-73.5627, -69.3190, -41.4223, -48.3137, -49.7201], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5920, device='cuda:0', dtype=torch.float64)
tensor([-73.5213, -69.2970, -41.4586, -48.2880, -49.7478], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6724, device='cuda:0', dtype=torch.float64)
tensor([-73.5674, -69.2795, -41.5080, -48.2936, -49.7630], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6890, device='cuda:0', dtype=torch.float64)
tensor([-73.5857, -69.3376, -41.5329, -48.3507, -49.7636], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7280, device='cuda:0', dtype=torch.float64)
tensor([-73.6232, -69.5907, -41.5692, -48.5456, -49.7502], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6445, device='cuda:0', dtype=torch.float64)
tensor([-73.6763, -69.8540, -41.5811, -48.7151, -49.7351], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7279, device='cuda:0', dtype=torch.float64)
tensor([-73.6014, -70.0587, -41.6131, -48.8159, -49.6811], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6463, device='cuda:0', dtype=torch.float64)
tensor([-73.3862, -70.1558, -41.6132, -48.7715, -49.6188], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6301, device='cuda:0', dtype=torch.float64)
tensor([-73.2026, -70.2697, -41.5538, -48.7713, -49.6669], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7701, device='cuda:0', dtype=torch.float64)
tensor([-73.2182, -70.5078, -41.4828, -48.9731, -49.8566], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7736, device='cuda:0', dtype=torch.float64)
tensor([-73.1670, -70.6670, -41.4574, -49.0076, -49.9472], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6612, device='cuda:0', dtype=torch.float64)
tensor([-73.1427, -70.8155, -41.3923, -49.1110, -50.0436], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6974, device='cuda:0', dtype=torch.float64)
tensor([-73.0670, -70.9169, -41.2895, -49.1463, -50.0868], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6774, device='cuda:0', dtype=torch.float64)
tensor([-72.8653, -70.9445, -41.2489, -48.9948, -50.0481], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7199, device='cuda:0', dtype=torch.float64)
tensor([-72.6993, -70.9658, -41.2592, -48.8259, -49.9573], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7019, device='cuda:0', dtype=torch.float64)
tensor([-72.6282, -71.1293, -41.2714, -48.7759, -49.9291], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7443, device='cuda:0', dtype=torch.float64)
tensor([-72.5279, -71.1365, -41.2435, -48.6264, -49.8675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6081, device='cuda:0', dtype=torch.float64)
tensor([-72.4588, -71.0722, -41.2309, -48.4514, -49.7817], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6709, device='cuda:0', dtype=torch.float64)
tensor([-72.3449, -70.9366, -41.1967, -48.2567, -49.7070], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7872, device='cuda:0', dtype=torch.float64)
tensor([-72.0970, -70.7774, -41.2079, -48.0103, -49.6036], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7878, device='cuda:0', dtype=torch.float64)
tensor([-72.0327, -70.6233, -41.2767, -47.9367, -49.5875], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7546, device='cuda:0', dtype=torch.float64)
tensor([-71.8281, -70.4517, -41.3856, -47.8360, -49.5812], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7748, device='cuda:0', dtype=torch.float64)
tensor([-71.6976, -70.3404, -41.4785, -47.7720, -49.6384], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6126, device='cuda:0', dtype=torch.float64)
tensor([-71.4358, -70.1439, -41.5710, -47.6711, -49.6802], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7609, device='cuda:0', dtype=torch.float64)
tensor([-71.1530, -70.0612, -41.6294, -47.6229, -49.8514], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6466, device='cuda:0', dtype=torch.float64)
tensor([-70.8688, -69.9187, -41.6818, -47.6099, -50.0195], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7007, device='cuda:0', dtype=torch.float64)
tensor([-70.7769, -70.0199, -41.7527, -47.6724, -50.2114], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6290, device='cuda:0', dtype=torch.float64)
tensor([-70.6531, -70.1590, -41.8405, -47.7108, -50.3983], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6524, device='cuda:0', dtype=torch.float64)
tensor([-70.5991, -70.2863, -41.9591, -47.7241, -50.5397], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6176, device='cuda:0', dtype=torch.float64)
tensor([-70.3476, -70.3732, -42.0380, -47.7122, -50.6740], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6163, device='cuda:0', dtype=torch.float64)
tensor([-70.0723, -70.4317, -42.0940, -47.7462, -50.7449], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7729, device='cuda:0', dtype=torch.float64)
tensor([-70.0070, -70.5085, -42.1977, -47.7767, -50.7283], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8124, device='cuda:0', dtype=torch.float64)
tensor([-69.8572, -70.4447, -42.2825, -47.6501, -50.6024], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7084, device='cuda:0', dtype=torch.float64)
tensor([-69.7171, -70.2906, -42.3821, -47.5237, -50.4484], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6505, device='cuda:0', dtype=torch.float64)
tensor([-69.6309, -70.1511, -42.5251, -47.4397, -50.2594], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6201, device='cuda:0', dtype=torch.float64)
tensor([-69.7336, -70.1464, -42.6855, -47.4647, -50.2172], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6542, device='cuda:0', dtype=torch.float64)
tensor([-69.9430, -70.3086, -42.9050, -47.6073, -50.1886], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7638, device='cuda:0', dtype=torch.float64)
tensor([-70.3404, -70.5435, -43.1754, -47.8916, -50.2321], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6746, device='cuda:0', dtype=torch.float64)
tensor([-70.7824, -70.9360, -43.4728, -48.2048, -50.2901], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6647, device='cuda:0', dtype=torch.float64)
tensor([-71.3943, -71.2531, -43.7661, -48.5362, -50.3426], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5840, device='cuda:0', dtype=torch.float64)
tensor([-72.0669, -71.6544, -44.0847, -48.9146, -50.4824], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6121, device='cuda:0', dtype=torch.float64)
tensor([-72.6900, -72.0611, -44.3517, -49.3041, -50.6221], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5910, device='cuda:0', dtype=torch.float64)
tensor([-73.1591, -72.3619, -44.5292, -49.5807, -50.7411], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6246, device='cuda:0', dtype=torch.float64)
tensor([-73.6704, -72.5581, -44.7207, -49.8152, -50.8058], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7379, device='cuda:0', dtype=torch.float64)
tensor([-74.0634, -72.6728, -44.8572, -49.9443, -50.8760], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5719, device='cuda:0', dtype=torch.float64)
tensor([-74.4075, -72.7971, -45.0152, -50.0746, -50.9675], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6896, device='cuda:0', dtype=torch.float64)
tensor([-74.5945, -72.7844, -45.1394, -50.1825, -51.0626], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6774, device='cuda:0', dtype=torch.float64)
tensor([-74.7900, -72.6990, -45.2229, -50.2188, -51.0732], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6317, device='cuda:0', dtype=torch.float64)
tensor([-74.8565, -72.5419, -45.2885, -50.1189, -51.0166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7396, device='cuda:0', dtype=torch.float64)
tensor([-75.0905, -72.4107, -45.3017, -50.1541, -51.1315], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7049, device='cuda:0', dtype=torch.float64)
tensor([-75.3689, -72.4085, -45.4058, -50.2224, -51.2847], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7062, device='cuda:0', dtype=torch.float64)
tensor([-75.8468, -72.3924, -45.5229, -50.2706, -51.4187], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.8266, device='cuda:0', dtype=torch.float64)
tensor([-76.3006, -72.3804, -45.7136, -50.2808, -51.5116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6216, device='cuda:0', dtype=torch.float64)
tensor([-76.6435, -72.3816, -45.9203, -50.2687, -51.5569], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6392, device='cuda:0', dtype=torch.float64)
tensor([-77.1251, -72.4412, -46.0723, -50.3642, -51.6593], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5990, device='cuda:0', dtype=torch.float64)
tensor([-77.4506, -72.5423, -46.2104, -50.4453, -51.8091], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6924, device='cuda:0', dtype=torch.float64)
tensor([-77.9048, -72.7255, -46.2888, -50.5678, -52.1338], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6548, device='cuda:0', dtype=torch.float64)
tensor([-78.2933, -72.7880, -46.3469, -50.6081, -52.4738], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6467, device='cuda:0', dtype=torch.float64)
tensor([-78.6855, -72.8354, -46.4593, -50.6510, -52.7943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5133, device='cuda:0', dtype=torch.float64)
tensor([-78.9945, -72.8905, -46.5362, -50.6545, -53.0892], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6541, device='cuda:0', dtype=torch.float64)
tensor([-79.1694, -72.7781, -46.6011, -50.5276, -53.3255], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6549, device='cuda:0', dtype=torch.float64)
tensor([-79.3357, -72.5395, -46.6217, -50.4011, -53.5531], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5800, device='cuda:0', dtype=torch.float64)
tensor([-79.4744, -72.3320, -46.5981, -50.3854, -53.8101], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7057, device='cuda:0', dtype=torch.float64)
tensor([-79.6818, -72.1321, -46.5704, -50.4211, -54.1406], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7312, device='cuda:0', dtype=torch.float64)
tensor([-79.8192, -72.0971, -46.5565, -50.5201, -54.5005], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5818, device='cuda:0', dtype=torch.float64)
tensor([-79.9863, -72.1135, -46.5913, -50.6149, -54.7894], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6540, device='cuda:0', dtype=torch.float64)
tensor([-80.2659, -72.2126, -46.6402, -50.7529, -55.1943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7388, device='cuda:0', dtype=torch.float64)
tensor([-80.4299, -72.4508, -46.6329, -50.7862, -55.5095], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6623, device='cuda:0', dtype=torch.float64)
tensor([-80.5155, -72.7086, -46.5840, -50.7934, -55.8156], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6254, device='cuda:0', dtype=torch.float64)
tensor([-80.5942, -72.9738, -46.4669, -50.7611, -56.0329], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6440, device='cuda:0', dtype=torch.float64)
tensor([-80.6739, -73.2337, -46.4117, -50.7072, -56.2166], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7060, device='cuda:0', dtype=torch.float64)
tensor([-80.7262, -73.4322, -46.4365, -50.5868, -56.3333], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6884, device='cuda:0', dtype=torch.float64)
tensor([-80.6983, -73.7298, -46.4840, -50.4432, -56.4533], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7031, device='cuda:0', dtype=torch.float64)
tensor([-80.7890, -74.1457, -46.5775, -50.4276, -56.6421], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5745, device='cuda:0', dtype=torch.float64)
tensor([-80.9572, -74.5151, -46.6452, -50.4535, -56.9061], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6383, device='cuda:0', dtype=torch.float64)
tensor([-81.1997, -74.8450, -46.7312, -50.5217, -57.0707], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5998, device='cuda:0', dtype=torch.float64)
tensor([-81.4320, -75.0670, -46.8398, -50.5552, -57.1705], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7422, device='cuda:0', dtype=torch.float64)
tensor([-81.7454, -75.3110, -46.9521, -50.6213, -57.2974], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6439, device='cuda:0', dtype=torch.float64)
tensor([-81.9227, -75.4997, -47.0101, -50.6829, -57.4628], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5906, device='cuda:0', dtype=torch.float64)
tensor([-82.0726, -75.5356, -47.0663, -50.6862, -57.5052], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5620, device='cuda:0', dtype=torch.float64)
tensor([-82.2881, -75.5824, -47.1536, -50.6723, -57.5346], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6460, device='cuda:0', dtype=torch.float64)
tensor([-82.5387, -75.6698, -47.2280, -50.7458, -57.5757], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7097, device='cuda:0', dtype=torch.float64)
tensor([-82.8550, -75.7767, -47.2923, -50.8982, -57.7215], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7017, device='cuda:0', dtype=torch.float64)
tensor([-83.3497, -76.1466, -47.3616, -51.0874, -57.9213], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6314, device='cuda:0', dtype=torch.float64)
tensor([-84.1588, -76.6108, -47.3749, -51.4251, -58.2904], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6028, device='cuda:0', dtype=torch.float64)
tensor([-85.0632, -76.9855, -47.3893, -51.8022, -58.6556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6637, device='cuda:0', dtype=torch.float64)
tensor([-85.8664, -77.3622, -47.4843, -52.2017, -59.0194], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6980, device='cuda:0', dtype=torch.float64)
tensor([-86.6256, -77.6982, -47.5720, -52.6526, -59.3883], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6528, device='cuda:0', dtype=torch.float64)
tensor([-87.2386, -77.9613, -47.6530, -53.1208, -59.7388], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6852, device='cuda:0', dtype=torch.float64)
tensor([-87.8194, -78.2853, -47.7037, -53.5799, -60.1595], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6252, device='cuda:0', dtype=torch.float64)
tensor([-88.4374, -78.5612, -47.7226, -53.9773, -60.5697], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6862, device='cuda:0', dtype=torch.float64)
tensor([-88.8187, -78.7827, -47.7000, -54.2631, -60.8664], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6439, device='cuda:0', dtype=torch.float64)
tensor([-89.3107, -78.9611, -47.7198, -54.5972, -61.1596], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5798, device='cuda:0', dtype=torch.float64)
tensor([-89.7059, -79.1388, -47.7280, -54.9308, -61.5020], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7155, device='cuda:0', dtype=torch.float64)
tensor([-90.0781, -79.3618, -47.7521, -55.2170, -61.8212], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5777, device='cuda:0', dtype=torch.float64)
tensor([-90.2809, -79.5930, -47.7389, -55.5226, -62.1094], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6283, device='cuda:0', dtype=torch.float64)
tensor([-90.6250, -79.8979, -47.7369, -55.8285, -62.4334], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5253, device='cuda:0', dtype=torch.float64)
tensor([-90.8960, -80.0908, -47.7514, -55.9862, -62.6233], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6557, device='cuda:0', dtype=torch.float64)
tensor([-91.1189, -80.2605, -47.7582, -56.1256, -62.7441], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5252, device='cuda:0', dtype=torch.float64)
tensor([-91.2560, -80.5951, -47.8044, -56.2368, -62.9246], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5929, device='cuda:0', dtype=torch.float64)
tensor([-91.3466, -80.8309, -47.7897, -56.3641, -63.0197], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6113, device='cuda:0', dtype=torch.float64)
tensor([-91.3181, -81.0740, -47.7913, -56.4541, -63.0023], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6342, device='cuda:0', dtype=torch.float64)
tensor([-91.4111, -81.3776, -47.8102, -56.6163, -63.0606], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5770, device='cuda:0', dtype=torch.float64)
tensor([-91.3782, -81.7535, -47.8596, -56.7500, -63.1376], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5900, device='cuda:0', dtype=torch.float64)
tensor([-91.3187, -82.1015, -47.9341, -56.9133, -63.1833], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6187, device='cuda:0', dtype=torch.float64)
tensor([-91.2498, -82.4804, -48.0253, -57.0964, -63.2353], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6195, device='cuda:0', dtype=torch.float64)
tensor([-90.9296, -82.7318, -48.1942, -57.1680, -63.1770], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6677, device='cuda:0', dtype=torch.float64)
tensor([-90.5037, -82.9776, -48.4057, -57.1723, -63.1469], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5775, device='cuda:0', dtype=torch.float64)
tensor([-90.0948, -83.2926, -48.6640, -57.3055, -63.2042], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5226, device='cuda:0', dtype=torch.float64)
tensor([-89.9089, -83.6037, -48.9337, -57.4795, -63.3575], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6129, device='cuda:0', dtype=torch.float64)
tensor([-89.6192, -83.8116, -49.1840, -57.5751, -63.4331], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5769, device='cuda:0', dtype=torch.float64)
tensor([-89.4319, -84.0122, -49.4083, -57.5903, -63.4746], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6479, device='cuda:0', dtype=torch.float64)
tensor([-89.2842, -84.2525, -49.6615, -57.5791, -63.5366], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5439, device='cuda:0', dtype=torch.float64)
tensor([-89.1704, -84.3846, -49.8577, -57.5540, -63.6092], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5852, device='cuda:0', dtype=torch.float64)
tensor([-88.9963, -84.4621, -50.0916, -57.4969, -63.6801], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5877, device='cuda:0', dtype=torch.float64)
tensor([-88.7920, -84.4825, -50.2531, -57.4349, -63.7854], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6695, device='cuda:0', dtype=torch.float64)
tensor([-88.6191, -84.4882, -50.3809, -57.4723, -63.9727], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6320, device='cuda:0', dtype=torch.float64)
tensor([-88.4009, -84.4413, -50.4207, -57.4326, -64.1979], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7500, device='cuda:0', dtype=torch.float64)
tensor([-88.2753, -84.5157, -50.4715, -57.5208, -64.4290], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5853, device='cuda:0', dtype=torch.float64)
tensor([-88.1475, -84.4777, -50.4623, -57.5660, -64.5486], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5661, device='cuda:0', dtype=torch.float64)
tensor([-87.9443, -84.4531, -50.5012, -57.5427, -64.6374], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5904, device='cuda:0', dtype=torch.float64)
tensor([-87.9091, -84.4549, -50.5103, -57.6404, -64.7925], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6028, device='cuda:0', dtype=torch.float64)
tensor([-87.8952, -84.5392, -50.5823, -57.7235, -64.9844], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7669, device='cuda:0', dtype=torch.float64)
tensor([-87.7594, -84.5815, -50.6601, -57.7947, -65.1455], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5735, device='cuda:0', dtype=torch.float64)
tensor([-87.6155, -84.6472, -50.8413, -57.8626, -65.2696], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7222, device='cuda:0', dtype=torch.float64)
tensor([-87.6561, -84.6469, -51.0280, -57.8628, -65.3576], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6983, device='cuda:0', dtype=torch.float64)
tensor([-87.4797, -84.4845, -51.1255, -57.7860, -65.3365], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5769, device='cuda:0', dtype=torch.float64)
tensor([-87.3499, -84.2355, -51.2054, -57.6621, -65.3480], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7052, device='cuda:0', dtype=torch.float64)
tensor([-87.2239, -84.0780, -51.3449, -57.5656, -65.3744], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6176, device='cuda:0', dtype=torch.float64)
tensor([-87.2207, -83.8596, -51.4489, -57.4375, -65.3128], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6752, device='cuda:0', dtype=torch.float64)
tensor([-87.1683, -83.4827, -51.4666, -57.1759, -65.2066], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6563, device='cuda:0', dtype=torch.float64)
tensor([-87.2451, -83.1503, -51.4728, -56.9163, -65.1590], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6908, device='cuda:0', dtype=torch.float64)
tensor([-87.3649, -82.9614, -51.4749, -56.7361, -65.2010], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5184, device='cuda:0', dtype=torch.float64)
tensor([-87.5063, -82.8751, -51.4746, -56.6327, -65.2483], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6221, device='cuda:0', dtype=torch.float64)
tensor([-87.7293, -82.9551, -51.5089, -56.6921, -65.3761], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5688, device='cuda:0', dtype=torch.float64)
tensor([-87.8851, -82.9415, -51.5907, -56.7061, -65.4344], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5800, device='cuda:0', dtype=torch.float64)
tensor([-88.1282, -82.9036, -51.6584, -56.7259, -65.3981], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5463, device='cuda:0', dtype=torch.float64)
tensor([-88.3797, -82.9926, -51.7500, -56.7469, -65.2600], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6608, device='cuda:0', dtype=torch.float64)
tensor([-88.6405, -83.2647, -51.8246, -56.8099, -65.2400], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5881, device='cuda:0', dtype=torch.float64)
tensor([-88.9407, -83.4824, -51.9023, -56.9299, -65.2362], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6157, device='cuda:0', dtype=torch.float64)
tensor([-89.2588, -83.7606, -52.0303, -57.0750, -65.2210], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6217, device='cuda:0', dtype=torch.float64)
tensor([-89.5480, -84.0382, -52.1590, -57.2930, -65.2454], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6720, device='cuda:0', dtype=torch.float64)
tensor([-89.8383, -84.2718, -52.2888, -57.5052, -65.2926], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7079, device='cuda:0', dtype=torch.float64)
tensor([-90.3526, -84.3710, -52.3450, -57.8479, -65.4373], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6045, device='cuda:0', dtype=torch.float64)
tensor([-90.7278, -84.5557, -52.4415, -58.1586, -65.5121], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6525, device='cuda:0', dtype=torch.float64)
tensor([-91.1058, -85.0511, -52.6410, -58.6441, -65.6810], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6764, device='cuda:0', dtype=torch.float64)
tensor([-91.4634, -85.5055, -52.7938, -59.1521, -65.8261], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.7215, device='cuda:0', dtype=torch.float64)
tensor([-91.8341, -85.9583, -52.8908, -59.6853, -66.0523], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5507, device='cuda:0', dtype=torch.float64)
tensor([-92.2126, -86.3439, -52.9622, -60.1823, -66.2556], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6309, device='cuda:0', dtype=torch.float64)
tensor([-92.5460, -86.7665, -53.0920, -60.6282, -66.5035], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6043, device='cuda:0', dtype=torch.float64)
tensor([-92.8686, -87.0504, -53.1835, -60.9662, -66.7693], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5726, device='cuda:0', dtype=torch.float64)
tensor([-93.0713, -87.2435, -53.2482, -61.2726, -67.0078], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6375, device='cuda:0', dtype=torch.float64)
tensor([-93.1568, -87.4830, -53.3746, -61.5141, -67.1943], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6637, device='cuda:0', dtype=torch.float64)
tensor([-93.2563, -88.0110, -53.5006, -61.9493, -67.5164], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6276, device='cuda:0', dtype=torch.float64)
tensor([-93.4175, -88.5069, -53.6800, -62.4063, -67.8275], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6449, device='cuda:0', dtype=torch.float64)
tensor([-93.6722, -88.8509, -53.8639, -62.9212, -68.1648], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5634, device='cuda:0', dtype=torch.float64)
tensor([-93.9377, -89.1460, -54.0734, -63.4147, -68.4511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5685, device='cuda:0', dtype=torch.float64)
tensor([-94.1588, -89.4988, -54.2592, -63.9795, -68.7167], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6745, device='cuda:0', dtype=torch.float64)
tensor([-94.3064, -89.8311, -54.3829, -64.4326, -68.9086], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6076, device='cuda:0', dtype=torch.float64)
tensor([-94.6310, -90.1092, -54.5207, -64.9310, -69.1347], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5316, device='cuda:0', dtype=torch.float64)
tensor([-94.9110, -90.3995, -54.6733, -65.4723, -69.4643], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6803, device='cuda:0', dtype=torch.float64)
tensor([-95.2488, -90.7294, -54.9264, -66.0551, -69.8488], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6581, device='cuda:0', dtype=torch.float64)
tensor([-95.6194, -91.0696, -55.1698, -66.6546, -70.2511], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6176, device='cuda:0', dtype=torch.float64)
tensor([-95.9900, -91.4102, -55.3511, -67.2451, -70.6503], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6426, device='cuda:0', dtype=torch.float64)
tensor([-96.4562, -91.6532, -55.5647, -67.6950, -71.0151], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6272, device='cuda:0', dtype=torch.float64)
tensor([-96.9088, -91.7317, -55.6845, -68.0028, -71.2499], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5456, device='cuda:0', dtype=torch.float64)
tensor([-97.4020, -91.6207, -55.7868, -68.2370, -71.5116], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6770, device='cuda:0', dtype=torch.float64)
tensor([-98.0413, -91.3723, -55.9240, -68.4435, -71.6434], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6779, device='cuda:0', dtype=torch.float64)
tensor([-98.7248, -91.1645, -56.0504, -68.6017, -71.7549], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.6400, device='cuda:0', dtype=torch.float64)
tensor([-99.3086, -90.8863, -56.1215, -68.7223, -71.7872], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5203, device='cuda:0', dtype=torch.float64)
tensor([-99.7864, -90.6083, -56.1528, -68.7943, -71.7893], device='cuda:0',
       dtype=torch.float64)
rnn.0.0.weight tensor(0.5146, device='cuda:0', dtype=torch.float64)
tensor([-100.3098,  -90.2679,  -56.1827,  -68.8204,  -71.8137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5508, device='cuda:0', dtype=torch.float64)
tensor([-100.7426,  -89.9567,  -56.2377,  -68.8600,  -71.9490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5723, device='cuda:0', dtype=torch.float64)
tensor([-101.2802,  -89.7307,  -56.2652,  -68.8953,  -72.1159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6566, device='cuda:0', dtype=torch.float64)
tensor([-101.7788,  -89.4671,  -56.4018,  -68.8305,  -72.2099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4932, device='cuda:0', dtype=torch.float64)
tensor([-102.1739,  -89.1680,  -56.5122,  -68.7436,  -72.3278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5647, device='cuda:0', dtype=torch.float64)
tensor([-102.5257,  -88.9747,  -56.5864,  -68.6783,  -72.4667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6203, device='cuda:0', dtype=torch.float64)
tensor([-102.9099,  -88.9402,  -56.7255,  -68.6465,  -72.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6171, device='cuda:0', dtype=torch.float64)
tensor([-103.1266,  -88.8716,  -56.7675,  -68.5407,  -72.7426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6272, device='cuda:0', dtype=torch.float64)
tensor([-103.3586,  -88.8797,  -56.8762,  -68.5096,  -72.8943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6554, device='cuda:0', dtype=torch.float64)
tensor([-103.3962,  -88.9236,  -56.9921,  -68.5134,  -73.1334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([-103.3125,  -88.8853,  -57.0590,  -68.4028,  -73.1253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5275, device='cuda:0', dtype=torch.float64)
tensor([-103.1938,  -88.8750,  -57.1189,  -68.2823,  -73.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5404, device='cuda:0', dtype=torch.float64)
tensor([-102.6548,  -88.8606,  -57.1926,  -68.0527,  -72.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5873, device='cuda:0', dtype=torch.float64)
tensor([-102.2517,  -88.7876,  -57.2767,  -67.8566,  -72.5894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5466, device='cuda:0', dtype=torch.float64)
tensor([-101.9245,  -88.8249,  -57.4294,  -67.8243,  -72.4639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4957, device='cuda:0', dtype=torch.float64)
tensor([-101.5881,  -88.8520,  -57.5696,  -67.7791,  -72.3450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5628, device='cuda:0', dtype=torch.float64)
tensor([-101.3336,  -89.0076,  -57.7082,  -67.8346,  -72.2557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5476, device='cuda:0', dtype=torch.float64)
tensor([-101.1650,  -89.1249,  -57.8750,  -67.9750,  -72.1922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5771, device='cuda:0', dtype=torch.float64)
tensor([-100.9498,  -89.0561,  -57.9320,  -68.0323,  -71.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5252, device='cuda:0', dtype=torch.float64)
tensor([-100.7179,  -89.1494,  -57.9777,  -68.1654,  -71.8844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6119, device='cuda:0', dtype=torch.float64)
tensor([-100.5806,  -89.2972,  -58.0727,  -68.3636,  -71.8118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6667, device='cuda:0', dtype=torch.float64)
tensor([-100.6962,  -89.5014,  -58.2268,  -68.6528,  -71.8549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4547, device='cuda:0', dtype=torch.float64)
tensor([-100.7094,  -89.7175,  -58.3519,  -68.8232,  -71.8673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5720, device='cuda:0', dtype=torch.float64)
tensor([-100.5728,  -89.8414,  -58.4262,  -68.9160,  -71.8844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5675, device='cuda:0', dtype=torch.float64)
tensor([-100.3829,  -89.8819,  -58.5011,  -68.9241,  -71.8597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6159, device='cuda:0', dtype=torch.float64)
tensor([-100.3978,  -89.9545,  -58.5726,  -68.9623,  -71.9253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5176, device='cuda:0', dtype=torch.float64)
tensor([-100.3782,  -89.9360,  -58.5980,  -68.9012,  -71.9646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6744, device='cuda:0', dtype=torch.float64)
tensor([-100.4686,  -90.0254,  -58.6019,  -68.8365,  -72.0757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5462, device='cuda:0', dtype=torch.float64)
tensor([-100.5427,  -90.1144,  -58.6442,  -68.6077,  -72.1135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6229, device='cuda:0', dtype=torch.float64)
tensor([-100.6486,  -90.0616,  -58.6470,  -68.3197,  -72.1516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5835, device='cuda:0', dtype=torch.float64)
tensor([-100.6730,  -90.0788,  -58.6135,  -67.9290,  -72.1961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6562, device='cuda:0', dtype=torch.float64)
tensor([-100.7828,  -90.0966,  -58.6755,  -67.6447,  -72.2407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6015, device='cuda:0', dtype=torch.float64)
tensor([-100.9979,  -90.2363,  -58.7343,  -67.4417,  -72.3039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6212, device='cuda:0', dtype=torch.float64)
tensor([-101.2419,  -90.3926,  -58.8561,  -67.4154,  -72.4623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6314, device='cuda:0', dtype=torch.float64)
tensor([-101.6124,  -90.4673,  -59.0165,  -67.4545,  -72.7248],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4897, device='cuda:0', dtype=torch.float64)
tensor([-101.9892,  -90.5760,  -59.1790,  -67.5039,  -72.9630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6344, device='cuda:0', dtype=torch.float64)
tensor([-102.4921,  -90.7869,  -59.3861,  -67.6870,  -73.2336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6879, device='cuda:0', dtype=torch.float64)
tensor([-103.0975,  -90.8137,  -59.5606,  -67.7421,  -73.3426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5187, device='cuda:0', dtype=torch.float64)
tensor([-103.6204,  -90.9392,  -59.7216,  -67.9051,  -73.4952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6029, device='cuda:0', dtype=torch.float64)
tensor([-104.2763,  -91.1113,  -59.8897,  -68.1883,  -73.6873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5605, device='cuda:0', dtype=torch.float64)
tensor([-104.8935,  -91.2962,  -60.0713,  -68.4725,  -73.8948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5689, device='cuda:0', dtype=torch.float64)
tensor([-105.5506,  -91.5453,  -60.2196,  -68.8230,  -74.0882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5274, device='cuda:0', dtype=torch.float64)
tensor([-106.1282,  -91.7433,  -60.3463,  -69.1306,  -74.3603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5967, device='cuda:0', dtype=torch.float64)
tensor([-106.5412,  -91.8257,  -60.5360,  -69.2579,  -74.4854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5424, device='cuda:0', dtype=torch.float64)
tensor([-107.0565,  -91.8439,  -60.7509,  -69.4065,  -74.5452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6136, device='cuda:0', dtype=torch.float64)
tensor([-107.7698,  -91.8082,  -61.0153,  -69.5949,  -74.6806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5070, device='cuda:0', dtype=torch.float64)
tensor([-108.4277,  -91.8889,  -61.3124,  -69.8708,  -74.8539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5017, device='cuda:0', dtype=torch.float64)
tensor([-109.0216,  -91.8559,  -61.5425,  -70.1685,  -75.0309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6103, device='cuda:0', dtype=torch.float64)
tensor([-109.6439,  -91.7642,  -61.7826,  -70.4782,  -75.1446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5627, device='cuda:0', dtype=torch.float64)
tensor([-110.3309,  -91.7183,  -61.9861,  -70.7822,  -75.2983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5177, device='cuda:0', dtype=torch.float64)
tensor([-110.8323,  -91.5886,  -62.1947,  -71.0093,  -75.3275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6079, device='cuda:0', dtype=torch.float64)
tensor([-111.3718,  -91.3815,  -62.4362,  -71.1156,  -75.3346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6138, device='cuda:0', dtype=torch.float64)
tensor([-111.9213,  -91.2135,  -62.6480,  -71.2549,  -75.3160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5827, device='cuda:0', dtype=torch.float64)
tensor([-112.5707,  -91.1632,  -62.9440,  -71.4043,  -75.3651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5120, device='cuda:0', dtype=torch.float64)
tensor([-113.1826,  -91.0886,  -63.2477,  -71.5961,  -75.4889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6302, device='cuda:0', dtype=torch.float64)
tensor([-113.6408,  -91.0632,  -63.5274,  -71.8856,  -75.7305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5902, device='cuda:0', dtype=torch.float64)
tensor([-114.0547,  -90.8704,  -63.7027,  -72.0724,  -75.9603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5375, device='cuda:0', dtype=torch.float64)
tensor([-114.3911,  -90.6751,  -63.8844,  -72.2315,  -76.1508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5640, device='cuda:0', dtype=torch.float64)
tensor([-114.6727,  -90.6321,  -64.0021,  -72.4477,  -76.4014],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5741, device='cuda:0', dtype=torch.float64)
tensor([-114.6634,  -90.6471,  -64.0689,  -72.6244,  -76.5672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5331, device='cuda:0', dtype=torch.float64)
tensor([-114.8002,  -90.8152,  -64.1466,  -72.7899,  -76.7204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5257, device='cuda:0', dtype=torch.float64)
tensor([-114.8061,  -91.0512,  -64.2368,  -73.0517,  -76.9455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5758, device='cuda:0', dtype=torch.float64)
tensor([-114.6482,  -91.3771,  -64.2936,  -73.3007,  -77.1679],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5556, device='cuda:0', dtype=torch.float64)
tensor([-114.4214,  -91.6458,  -64.4018,  -73.4253,  -77.2950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5209, device='cuda:0', dtype=torch.float64)
tensor([-114.1453,  -91.9282,  -64.4635,  -73.5322,  -77.3560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5090, device='cuda:0', dtype=torch.float64)
tensor([-114.0593,  -92.3636,  -64.5807,  -73.6017,  -77.4992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([-114.0463,  -92.8131,  -64.7442,  -73.7617,  -77.6581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6103, device='cuda:0', dtype=torch.float64)
tensor([-113.8794,  -93.4751,  -64.8715,  -73.9390,  -77.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4988, device='cuda:0', dtype=torch.float64)
tensor([-113.6449,  -94.0588,  -64.9945,  -74.1806,  -78.0259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5519, device='cuda:0', dtype=torch.float64)
tensor([-113.4077,  -94.5355,  -65.0981,  -74.3036,  -78.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4310, device='cuda:0', dtype=torch.float64)
tensor([-113.1755,  -94.8771,  -65.2712,  -74.4379,  -78.1086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5506, device='cuda:0', dtype=torch.float64)
tensor([-113.1304,  -95.3101,  -65.5505,  -74.6728,  -78.2081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5111, device='cuda:0', dtype=torch.float64)
tensor([-113.1045,  -95.6604,  -65.8495,  -74.8613,  -78.2573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4706, device='cuda:0', dtype=torch.float64)
tensor([-113.1028,  -95.9340,  -66.1261,  -74.9968,  -78.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5311, device='cuda:0', dtype=torch.float64)
tensor([-113.3172,  -96.1914,  -66.4351,  -75.1607,  -78.4941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5687, device='cuda:0', dtype=torch.float64)
tensor([-113.8404,  -96.3777,  -66.7420,  -75.2670,  -78.6463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5575, device='cuda:0', dtype=torch.float64)
tensor([-114.5410,  -96.6404,  -67.0148,  -75.4575,  -78.8080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5119, device='cuda:0', dtype=torch.float64)
tensor([-115.0930,  -96.9865,  -67.2557,  -75.6032,  -78.9039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5345, device='cuda:0', dtype=torch.float64)
tensor([-115.4998,  -97.5696,  -67.5360,  -75.8772,  -79.0099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4904, device='cuda:0', dtype=torch.float64)
tensor([-115.9293,  -97.9528,  -67.8175,  -76.1492,  -79.0654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.6206, device='cuda:0', dtype=torch.float64)
tensor([-116.5233,  -98.2463,  -68.2014,  -76.4578,  -79.0735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5484, device='cuda:0', dtype=torch.float64)
tensor([-116.9396,  -98.4576,  -68.5193,  -76.6405,  -78.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5443, device='cuda:0', dtype=torch.float64)
tensor([-117.2470,  -98.7087,  -68.7616,  -76.7430,  -78.6298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5315, device='cuda:0', dtype=torch.float64)
tensor([-117.4916,  -98.9289,  -69.0094,  -76.9013,  -78.4920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5858, device='cuda:0', dtype=torch.float64)
tensor([-117.7270,  -99.1728,  -69.2315,  -77.0387,  -78.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5097, device='cuda:0', dtype=torch.float64)
tensor([-118.0681,  -99.3795,  -69.5161,  -77.2583,  -78.2652],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5408, device='cuda:0', dtype=torch.float64)
tensor([-118.6074,  -99.3919,  -69.7502,  -77.5306,  -78.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5416, device='cuda:0', dtype=torch.float64)
tensor([-119.0584,  -99.2384,  -69.9974,  -77.7083,  -78.2532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5538, device='cuda:0', dtype=torch.float64)
tensor([-119.4594,  -99.3041,  -70.1841,  -77.9580,  -78.3018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5051, device='cuda:0', dtype=torch.float64)
tensor([-119.9980,  -99.4264,  -70.3895,  -78.2826,  -78.5375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4991, device='cuda:0', dtype=torch.float64)
tensor([-120.4552,  -99.6548,  -70.6513,  -78.6553,  -78.7952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4692, device='cuda:0', dtype=torch.float64)
tensor([-120.9874,  -99.8966,  -70.9662,  -78.9836,  -78.9827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4365, device='cuda:0', dtype=torch.float64)
tensor([-121.4875, -100.0238,  -71.2578,  -79.2800,  -79.2422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4714, device='cuda:0', dtype=torch.float64)
tensor([-121.8997, -100.1552,  -71.5275,  -79.5223,  -79.5030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5466, device='cuda:0', dtype=torch.float64)
tensor([-122.3213, -100.2909,  -71.7939,  -79.7705,  -79.7921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5883, device='cuda:0', dtype=torch.float64)
tensor([-122.7224, -100.4655,  -71.9705,  -80.0945,  -80.0447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5428, device='cuda:0', dtype=torch.float64)
tensor([-123.0573, -100.5233,  -72.1235,  -80.3166,  -80.2169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5100, device='cuda:0', dtype=torch.float64)
tensor([-123.1368, -100.4879,  -72.2077,  -80.4824,  -80.3644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5258, device='cuda:0', dtype=torch.float64)
tensor([-123.0988, -100.3688,  -72.2218,  -80.6094,  -80.5296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3835, device='cuda:0', dtype=torch.float64)
tensor([-122.9703, -100.4842,  -72.1745,  -80.7848,  -80.7786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5403, device='cuda:0', dtype=torch.float64)
tensor([-122.8546, -100.4660,  -72.1283,  -80.9247,  -80.9037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5131, device='cuda:0', dtype=torch.float64)
tensor([-122.8890, -100.6112,  -72.1528,  -81.1508,  -81.0558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5422, device='cuda:0', dtype=torch.float64)
tensor([-122.8754, -100.7273,  -72.1001,  -81.3734,  -81.1625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5570, device='cuda:0', dtype=torch.float64)
tensor([-122.7972, -100.8869,  -72.0453,  -81.7309,  -81.3571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5221, device='cuda:0', dtype=torch.float64)
tensor([-122.9537, -101.3039,  -72.0262,  -82.1025,  -81.5422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4584, device='cuda:0', dtype=torch.float64)
tensor([-123.0959, -101.6144,  -71.9915,  -82.5028,  -81.8059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5201, device='cuda:0', dtype=torch.float64)
tensor([-123.1523, -102.1211,  -71.9512,  -82.8922,  -81.9561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5033, device='cuda:0', dtype=torch.float64)
tensor([-123.3484, -102.6982,  -71.9508,  -83.2939,  -82.1667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5599, device='cuda:0', dtype=torch.float64)
tensor([-123.5271, -103.3878,  -71.9905,  -83.8541,  -82.3776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5144, device='cuda:0', dtype=torch.float64)
tensor([-123.6089, -104.1576,  -72.0171,  -84.3616,  -82.6176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5395, device='cuda:0', dtype=torch.float64)
tensor([-123.6370, -104.9084,  -71.9207,  -84.7802,  -82.7407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4899, device='cuda:0', dtype=torch.float64)
tensor([-123.6852, -105.7427,  -71.8972,  -85.1794,  -82.7950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5788, device='cuda:0', dtype=torch.float64)
tensor([-123.8365, -106.7178,  -71.8894,  -85.5288,  -82.8739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4481, device='cuda:0', dtype=torch.float64)
tensor([-124.1762, -107.7871,  -72.0039,  -85.9126,  -83.0526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5101, device='cuda:0', dtype=torch.float64)
tensor([-124.5548, -108.9501,  -72.1818,  -86.2771,  -83.2225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4974, device='cuda:0', dtype=torch.float64)
tensor([-124.8194, -109.6792,  -72.3412,  -86.5103,  -83.1827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4879, device='cuda:0', dtype=torch.float64)
tensor([-125.1889, -110.5136,  -72.4865,  -86.8032,  -83.2158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4701, device='cuda:0', dtype=torch.float64)
tensor([-125.4936, -111.3365,  -72.5950,  -87.0694,  -83.2296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5199, device='cuda:0', dtype=torch.float64)
tensor([-125.7560, -112.2633,  -72.7635,  -87.3400,  -83.2170],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4455, device='cuda:0', dtype=torch.float64)
tensor([-126.0331, -113.0623,  -72.8766,  -87.5776,  -83.2623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5292, device='cuda:0', dtype=torch.float64)
tensor([-126.3514, -113.4950,  -72.9751,  -87.6971,  -83.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4804, device='cuda:0', dtype=torch.float64)
tensor([-126.5891, -113.8451,  -73.0067,  -87.7807,  -83.3297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5281, device='cuda:0', dtype=torch.float64)
tensor([-126.8608, -114.0383,  -73.0723,  -87.8677,  -83.3530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5080, device='cuda:0', dtype=torch.float64)
tensor([-126.8539, -114.2167,  -73.0999,  -87.8653,  -83.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5547, device='cuda:0', dtype=torch.float64)
tensor([-126.9157, -114.2935,  -73.0855,  -87.9068,  -83.2672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5758, device='cuda:0', dtype=torch.float64)
tensor([-127.0463, -114.2801,  -73.0793,  -87.9374,  -83.2863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4804, device='cuda:0', dtype=torch.float64)
tensor([-127.0857, -114.1918,  -73.1304,  -87.9293,  -83.3437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4836, device='cuda:0', dtype=torch.float64)
tensor([-127.3216, -113.8987,  -73.2186,  -87.9793,  -83.3561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5592, device='cuda:0', dtype=torch.float64)
tensor([-127.6096, -113.3337,  -73.3374,  -87.9595,  -83.3699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5522, device='cuda:0', dtype=torch.float64)
tensor([-127.6903, -112.9048,  -73.4524,  -87.9147,  -83.4402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4665, device='cuda:0', dtype=torch.float64)
tensor([-127.8091, -112.6535,  -73.6196,  -87.9817,  -83.5665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5334, device='cuda:0', dtype=torch.float64)
tensor([-127.9107, -112.4552,  -73.7744,  -88.1427,  -83.8240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4334, device='cuda:0', dtype=torch.float64)
tensor([-127.9263, -112.3537,  -73.9997,  -88.3243,  -84.1611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4342, device='cuda:0', dtype=torch.float64)
tensor([-127.9770, -112.3985,  -74.2493,  -88.5321,  -84.5112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5008, device='cuda:0', dtype=torch.float64)
tensor([-128.0396, -112.4771,  -74.5252,  -88.7404,  -84.9415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4879, device='cuda:0', dtype=torch.float64)
tensor([-128.1084, -112.7471,  -74.8037,  -89.0309,  -85.3148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4728, device='cuda:0', dtype=torch.float64)
tensor([-128.3562, -113.2418,  -75.1943,  -89.4371,  -85.6769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5425, device='cuda:0', dtype=torch.float64)
tensor([-128.6160, -113.8026,  -75.5777,  -89.8528,  -86.0879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5044, device='cuda:0', dtype=torch.float64)
tensor([-128.7357, -114.6084,  -75.9340,  -90.2223,  -86.4749],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5859, device='cuda:0', dtype=torch.float64)
tensor([-129.1218, -115.2072,  -76.2698,  -90.5333,  -86.8310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4690, device='cuda:0', dtype=torch.float64)
tensor([-129.4937, -115.8386,  -76.5757,  -90.8534,  -87.0786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4237, device='cuda:0', dtype=torch.float64)
tensor([-129.9895, -116.4412,  -76.9039,  -91.1702,  -87.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4455, device='cuda:0', dtype=torch.float64)
tensor([-130.4319, -116.9321,  -77.1307,  -91.4232,  -87.5562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4461, device='cuda:0', dtype=torch.float64)
tensor([-130.9427, -117.3259,  -77.4425,  -91.7162,  -87.6250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4852, device='cuda:0', dtype=torch.float64)
tensor([-131.3646, -117.7152,  -77.7020,  -91.9365,  -87.7361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4478, device='cuda:0', dtype=torch.float64)
tensor([-131.7037, -118.2370,  -77.9268,  -92.1945,  -87.8211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4578, device='cuda:0', dtype=torch.float64)
tensor([-132.0611, -118.9623,  -78.2159,  -92.5120,  -88.0528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5295, device='cuda:0', dtype=torch.float64)
tensor([-132.2179, -119.7802,  -78.4965,  -92.7868,  -88.3137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4609, device='cuda:0', dtype=torch.float64)
tensor([-132.3888, -120.5212,  -78.7564,  -93.0825,  -88.5591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4832, device='cuda:0', dtype=torch.float64)
tensor([-132.5671, -121.2668,  -79.1139,  -93.4681,  -88.8387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4490, device='cuda:0', dtype=torch.float64)
tensor([-132.8696, -122.0080,  -79.4265,  -93.7344,  -88.9924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4651, device='cuda:0', dtype=torch.float64)
tensor([-133.0578, -122.5142,  -79.7475,  -93.8990,  -89.0402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5103, device='cuda:0', dtype=torch.float64)
tensor([-133.1026, -122.9418,  -79.9435,  -94.0673,  -89.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3937, device='cuda:0', dtype=torch.float64)
tensor([-133.1407, -123.5681,  -80.1274,  -94.1817,  -89.0776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5401, device='cuda:0', dtype=torch.float64)
tensor([-133.3653, -124.2371,  -80.3052,  -94.3331,  -89.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5044, device='cuda:0', dtype=torch.float64)
tensor([-133.5280, -124.8274,  -80.4727,  -94.5522,  -89.3818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4553, device='cuda:0', dtype=torch.float64)
tensor([-133.7713, -125.4813,  -80.6214,  -94.7544,  -89.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4814, device='cuda:0', dtype=torch.float64)
tensor([-134.0127, -125.9254,  -80.7330,  -94.8888,  -89.8307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4629, device='cuda:0', dtype=torch.float64)
tensor([-134.3379, -126.5191,  -80.9200,  -95.1460,  -90.1354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5039, device='cuda:0', dtype=torch.float64)
tensor([-134.6411, -126.8554,  -81.0702,  -95.4691,  -90.4094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4779, device='cuda:0', dtype=torch.float64)
tensor([-134.7412, -126.8451,  -81.0610,  -95.5584,  -90.4801],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4112, device='cuda:0', dtype=torch.float64)
tensor([-134.8543, -126.6721,  -81.0299,  -95.5787,  -90.4916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3872, device='cuda:0', dtype=torch.float64)
tensor([-134.9790, -126.4971,  -80.9659,  -95.6275,  -90.5069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4703, device='cuda:0', dtype=torch.float64)
tensor([-135.0304, -126.0303,  -80.8958,  -95.6669,  -90.4743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4381, device='cuda:0', dtype=torch.float64)
tensor([-135.1683, -125.6604,  -80.8893,  -95.7873,  -90.4935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4256, device='cuda:0', dtype=torch.float64)
tensor([-135.2763, -125.1236,  -80.8240,  -95.8045,  -90.5228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4687, device='cuda:0', dtype=torch.float64)
tensor([-135.4530, -124.4269,  -80.6459,  -95.8226,  -90.6080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4674, device='cuda:0', dtype=torch.float64)
tensor([-135.7341, -123.5969,  -80.5385,  -95.8095,  -90.6718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4121, device='cuda:0', dtype=torch.float64)
tensor([-136.0671, -122.8855,  -80.4936,  -95.9197,  -90.7637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4793, device='cuda:0', dtype=torch.float64)
tensor([-136.4224, -122.3006,  -80.3253,  -95.8479,  -90.7768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3996, device='cuda:0', dtype=torch.float64)
tensor([-136.8049, -121.8215,  -80.2031,  -95.8050,  -90.8332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4482, device='cuda:0', dtype=torch.float64)
tensor([-137.0697, -121.3732,  -80.0311,  -95.7073,  -90.8516],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4288, device='cuda:0', dtype=torch.float64)
tensor([-137.1813, -120.9100,  -79.9185,  -95.5500,  -90.7923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5053, device='cuda:0', dtype=torch.float64)
tensor([-137.1259, -120.4937,  -79.7584,  -95.3664,  -90.6541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4111, device='cuda:0', dtype=torch.float64)
tensor([-137.1752, -120.2978,  -79.7460,  -95.2828,  -90.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4385, device='cuda:0', dtype=torch.float64)
tensor([-137.2581, -120.2047,  -79.7091,  -95.1917,  -90.4485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4873, device='cuda:0', dtype=torch.float64)
tensor([-137.4094, -120.3156,  -79.8058,  -95.2249,  -90.4008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4990, device='cuda:0', dtype=torch.float64)
tensor([-137.5763, -120.5022,  -79.9241,  -95.3224,  -90.4377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4417, device='cuda:0', dtype=torch.float64)
tensor([-137.9859, -120.9417,  -80.1307,  -95.6017,  -90.6796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3848, device='cuda:0', dtype=torch.float64)
tensor([-138.4407, -121.4475,  -80.3752,  -95.9205,  -90.9492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4761, device='cuda:0', dtype=torch.float64)
tensor([-138.8703, -122.0949,  -80.6572,  -96.1702,  -91.2004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4128, device='cuda:0', dtype=torch.float64)
tensor([-139.3478, -122.7344,  -80.9249,  -96.4125,  -91.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4842, device='cuda:0', dtype=torch.float64)
tensor([-139.6610, -123.4330,  -81.1855,  -96.5814,  -91.6474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4617, device='cuda:0', dtype=torch.float64)
tensor([-139.9040, -124.2333,  -81.3534,  -96.7925,  -91.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4104, device='cuda:0', dtype=torch.float64)
tensor([-140.1087, -125.0223,  -81.4345,  -96.8559,  -92.0304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3854, device='cuda:0', dtype=torch.float64)
tensor([-140.2045, -125.7455,  -81.4878,  -96.8968,  -92.2011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4165, device='cuda:0', dtype=torch.float64)
tensor([-140.3801, -126.4574,  -81.5611,  -96.8763,  -92.3897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5032, device='cuda:0', dtype=torch.float64)
tensor([-140.4965, -126.9527,  -81.6794,  -96.8620,  -92.5789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3986, device='cuda:0', dtype=torch.float64)
tensor([-140.7411, -127.5980,  -81.8128,  -96.9463,  -92.8332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4384, device='cuda:0', dtype=torch.float64)
tensor([-140.9821, -128.1435,  -81.9322,  -97.0581,  -92.9886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5433, device='cuda:0', dtype=torch.float64)
tensor([-141.1489, -128.7954,  -82.0202,  -97.1347,  -93.0298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3864, device='cuda:0', dtype=torch.float64)
tensor([-141.1636, -129.4976,  -82.0791,  -97.2040,  -93.0280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4346, device='cuda:0', dtype=torch.float64)
tensor([-141.2932, -129.9698,  -82.1610,  -97.3513,  -93.0238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3544, device='cuda:0', dtype=torch.float64)
tensor([-141.3834, -130.3665,  -82.2346,  -97.5034,  -93.0120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5316, device='cuda:0', dtype=torch.float64)
tensor([-141.5453, -130.7066,  -82.3225,  -97.6968,  -93.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4673, device='cuda:0', dtype=torch.float64)
tensor([-141.5035, -131.2225,  -82.4320,  -97.8689,  -93.1902],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3865, device='cuda:0', dtype=torch.float64)
tensor([-141.4451, -131.7835,  -82.4881,  -98.0781,  -93.3681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3842, device='cuda:0', dtype=torch.float64)
tensor([-141.2958, -132.1645,  -82.5163,  -98.2703,  -93.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4344, device='cuda:0', dtype=torch.float64)
tensor([-141.2677, -132.5568,  -82.6551,  -98.5632,  -93.8572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4808, device='cuda:0', dtype=torch.float64)
tensor([-141.2415, -132.8624,  -82.8409,  -98.9436,  -94.2152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4945, device='cuda:0', dtype=torch.float64)
tensor([-141.1875, -133.3091,  -83.0617,  -99.3749,  -94.4976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4154, device='cuda:0', dtype=torch.float64)
tensor([-141.2809, -133.6923,  -83.2852,  -99.8100,  -94.8677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3952, device='cuda:0', dtype=torch.float64)
tensor([-141.2796, -133.9722,  -83.3654, -100.1573,  -95.1081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4722, device='cuda:0', dtype=torch.float64)
tensor([-141.2093, -133.9506,  -83.4018, -100.3808,  -95.3259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4203, device='cuda:0', dtype=torch.float64)
tensor([-141.3396, -133.8233,  -83.5090, -100.6879,  -95.6613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4265, device='cuda:0', dtype=torch.float64)
tensor([-141.5596, -133.8593,  -83.6326, -101.1099,  -96.0994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3735, device='cuda:0', dtype=torch.float64)
tensor([-141.8199, -133.7864,  -83.6506, -101.3897,  -96.5220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3902, device='cuda:0', dtype=torch.float64)
tensor([-141.9890, -133.8365,  -83.6537, -101.7195,  -96.9786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4425, device='cuda:0', dtype=torch.float64)
tensor([-142.2453, -133.7421,  -83.7767, -102.1318,  -97.4455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3909, device='cuda:0', dtype=torch.float64)
tensor([-142.4855, -133.6703,  -83.8481, -102.4754,  -97.9465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3756, device='cuda:0', dtype=torch.float64)
tensor([-142.7127, -133.6914,  -83.9254, -102.8071,  -98.4055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3687, device='cuda:0', dtype=torch.float64)
tensor([-143.0505, -133.7442,  -84.0051, -103.0721,  -98.9509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4296, device='cuda:0', dtype=torch.float64)
tensor([-143.2760, -134.0747,  -84.0652, -103.2521,  -99.4342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3440, device='cuda:0', dtype=torch.float64)
tensor([-143.5032, -134.7039,  -84.1498, -103.4487,  -99.9086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4873, device='cuda:0', dtype=torch.float64)
tensor([-143.6729, -135.2543,  -84.3079, -103.6576, -100.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4025, device='cuda:0', dtype=torch.float64)
tensor([-143.9379, -135.8027,  -84.5114, -103.8808, -100.9486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4600, device='cuda:0', dtype=torch.float64)
tensor([-144.1884, -136.3181,  -84.7583, -104.0612, -101.4757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4190, device='cuda:0', dtype=torch.float64)
tensor([-144.2642, -136.6854,  -84.9855, -104.2352, -101.9505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3767, device='cuda:0', dtype=torch.float64)
tensor([-144.3657, -137.1122,  -85.2856, -104.5319, -102.4023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3787, device='cuda:0', dtype=torch.float64)
tensor([-144.2321, -137.3845,  -85.5381, -104.7709, -102.6255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3996, device='cuda:0', dtype=torch.float64)
tensor([-144.1987, -137.5948,  -85.7438, -104.8984, -102.7238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3994, device='cuda:0', dtype=torch.float64)
tensor([-144.2956, -137.6356,  -85.9381, -104.9252, -102.6819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4317, device='cuda:0', dtype=torch.float64)
tensor([-144.2248, -137.8693,  -86.1397, -104.9310, -102.5355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4535, device='cuda:0', dtype=torch.float64)
tensor([-144.2228, -138.2316,  -86.3460, -105.0449, -102.5023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3447, device='cuda:0', dtype=torch.float64)
tensor([-144.3206, -138.6292,  -86.5952, -105.2265, -102.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4006, device='cuda:0', dtype=torch.float64)
tensor([-144.4579, -139.0326,  -86.8026, -105.2968, -102.5663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4038, device='cuda:0', dtype=torch.float64)
tensor([-144.6289, -139.3828,  -86.9246, -105.2705, -102.5304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4606, device='cuda:0', dtype=torch.float64)
tensor([-145.0012, -139.8106,  -87.1167, -105.2877, -102.5043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3578, device='cuda:0', dtype=torch.float64)
tensor([-145.4384, -140.4702,  -87.4299, -105.3800, -102.5079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3899, device='cuda:0', dtype=torch.float64)
tensor([-145.8520, -141.0218,  -87.6806, -105.4432, -102.4440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3494, device='cuda:0', dtype=torch.float64)
tensor([-146.4083, -141.5594,  -87.9030, -105.5087, -102.4160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4178, device='cuda:0', dtype=torch.float64)
tensor([-146.8564, -142.0980,  -88.0595, -105.5873, -102.4520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4366, device='cuda:0', dtype=torch.float64)
tensor([-147.3616, -142.6653,  -88.1769, -105.6508, -102.4383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4281, device='cuda:0', dtype=torch.float64)
tensor([-148.0237, -143.2074,  -88.3526, -105.8781, -102.6029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4271, device='cuda:0', dtype=torch.float64)
tensor([-148.5678, -143.8329,  -88.5532, -106.1778, -102.8409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3283, device='cuda:0', dtype=torch.float64)
tensor([-148.8990, -144.3293,  -88.7403, -106.4046, -103.0364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3794, device='cuda:0', dtype=torch.float64)
tensor([-149.1581, -144.6146,  -88.9447, -106.5818, -103.2201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3637, device='cuda:0', dtype=torch.float64)
tensor([-149.4007, -144.7909,  -89.1525, -106.7553, -103.4286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3855, device='cuda:0', dtype=torch.float64)
tensor([-149.6678, -144.7913,  -89.3025, -106.9071, -103.6204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3758, device='cuda:0', dtype=torch.float64)
tensor([-150.0623, -144.8566,  -89.5084, -107.1790, -103.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3782, device='cuda:0', dtype=torch.float64)
tensor([-150.3710, -145.1584,  -89.7334, -107.5026, -104.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4297, device='cuda:0', dtype=torch.float64)
tensor([-151.0246, -145.3855,  -90.0181, -107.8918, -104.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4030, device='cuda:0', dtype=torch.float64)
tensor([-151.6184, -145.8569,  -90.3501, -108.3011, -105.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4053, device='cuda:0', dtype=torch.float64)
tensor([-152.1397, -146.3493,  -90.7089, -108.7330, -106.2789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4706, device='cuda:0', dtype=torch.float64)
tensor([-152.5335, -146.6583,  -91.0686, -109.2073, -107.0272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3849, device='cuda:0', dtype=torch.float64)
tensor([-153.0097, -147.0703,  -91.4410, -109.7877, -107.8011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3698, device='cuda:0', dtype=torch.float64)
tensor([-153.4869, -147.4993,  -91.8941, -110.3012, -108.5697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4376, device='cuda:0', dtype=torch.float64)
tensor([-153.9318, -148.0370,  -92.3776, -110.7577, -109.2886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4133, device='cuda:0', dtype=torch.float64)
tensor([-154.3118, -148.6986,  -92.8551, -111.2469, -110.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4153, device='cuda:0', dtype=torch.float64)
tensor([-154.7967, -149.5089,  -93.3948, -111.7550, -110.8276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3450, device='cuda:0', dtype=torch.float64)
tensor([-155.3156, -150.5459,  -93.8935, -112.2805, -111.5129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3690, device='cuda:0', dtype=torch.float64)
tensor([-155.5882, -151.5854,  -94.3914, -112.7817, -112.0899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4321, device='cuda:0', dtype=torch.float64)
tensor([-155.7457, -152.3262,  -94.8789, -113.2323, -112.5236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3252, device='cuda:0', dtype=torch.float64)
tensor([-155.8282, -153.2339,  -95.3806, -113.6725, -112.9397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3849, device='cuda:0', dtype=torch.float64)
tensor([-155.9121, -153.9900,  -95.8372, -114.0899, -113.3645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3736, device='cuda:0', dtype=torch.float64)
tensor([-155.9812, -154.7283,  -96.2541, -114.5237, -113.8406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4063, device='cuda:0', dtype=torch.float64)
tensor([-155.9733, -155.3720,  -96.6597, -114.9320, -114.2586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3551, device='cuda:0', dtype=torch.float64)
tensor([-155.8969, -156.0896,  -97.0273, -115.3161, -114.6231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3694, device='cuda:0', dtype=torch.float64)
tensor([-155.8039, -156.4858,  -97.1861, -115.5529, -114.7804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.5095, device='cuda:0', dtype=torch.float64)
tensor([-155.7938, -156.9860,  -97.4607, -115.9806, -115.0581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3813, device='cuda:0', dtype=torch.float64)
tensor([-155.9395, -157.0924,  -97.6149, -116.2392, -115.1671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3733, device='cuda:0', dtype=torch.float64)
tensor([-156.0815, -157.2752,  -97.7930, -116.5788, -115.2975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3986, device='cuda:0', dtype=torch.float64)
tensor([-156.2945, -157.7997,  -97.9776, -116.9704, -115.4316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3667, device='cuda:0', dtype=torch.float64)
tensor([-156.7918, -158.3384,  -98.2758, -117.3042, -115.5625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3271, device='cuda:0', dtype=torch.float64)
tensor([-157.2564, -158.8469,  -98.5960, -117.5465, -115.6352],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4358, device='cuda:0', dtype=torch.float64)
tensor([-157.7553, -159.1233,  -98.9942, -117.7252, -115.8116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4069, device='cuda:0', dtype=torch.float64)
tensor([-158.2390, -159.3351,  -99.3730, -117.8323, -115.8949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3999, device='cuda:0', dtype=torch.float64)
tensor([-158.5834, -159.5246,  -99.7183, -118.0155, -116.0253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3791, device='cuda:0', dtype=torch.float64)
tensor([-158.9749, -159.7651, -100.1227, -118.1486, -116.2469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3642, device='cuda:0', dtype=torch.float64)
tensor([-159.1616, -159.9196, -100.3779, -118.1287, -116.4232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3825, device='cuda:0', dtype=torch.float64)
tensor([-159.4758, -160.1986, -100.6040, -118.1984, -116.6051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3564, device='cuda:0', dtype=torch.float64)
tensor([-159.7863, -160.5638, -100.8328, -118.3186, -116.8620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3790, device='cuda:0', dtype=torch.float64)
tensor([-160.1079, -160.8785, -101.1060, -118.3739, -117.1250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3009, device='cuda:0', dtype=torch.float64)
tensor([-160.4472, -161.2331, -101.3731, -118.4442, -117.3734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3357, device='cuda:0', dtype=torch.float64)
tensor([-160.9684, -161.7567, -101.6841, -118.5638, -117.7508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4124, device='cuda:0', dtype=torch.float64)
tensor([-161.5427, -162.2002, -101.9620, -118.6858, -118.2437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3901, device='cuda:0', dtype=torch.float64)
tensor([-162.3153, -162.9633, -102.3453, -118.8922, -118.8083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3791, device='cuda:0', dtype=torch.float64)
tensor([-163.1307, -163.8671, -102.7560, -119.0939, -119.4328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3748, device='cuda:0', dtype=torch.float64)
tensor([-163.9521, -165.0416, -103.2876, -119.4268, -120.0839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4300, device='cuda:0', dtype=torch.float64)
tensor([-164.8612, -166.2457, -103.8275, -119.8703, -120.7273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3524, device='cuda:0', dtype=torch.float64)
tensor([-165.8414, -167.3047, -104.3996, -120.3317, -121.4140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3528, device='cuda:0', dtype=torch.float64)
tensor([-166.7080, -168.1546, -104.9303, -120.8112, -122.0921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3178, device='cuda:0', dtype=torch.float64)
tensor([-167.5598, -168.8723, -105.4592, -121.1925, -122.7937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3257, device='cuda:0', dtype=torch.float64)
tensor([-168.3155, -169.5356, -105.8879, -121.5121, -123.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3645, device='cuda:0', dtype=torch.float64)
tensor([-169.1921, -170.1493, -106.2526, -121.7351, -123.9707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3392, device='cuda:0', dtype=torch.float64)
tensor([-170.1211, -170.7425, -106.6145, -122.0497, -124.5471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3595, device='cuda:0', dtype=torch.float64)
tensor([-171.2900, -171.6935, -107.0025, -122.4898, -125.3077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3484, device='cuda:0', dtype=torch.float64)
tensor([-172.5063, -172.7131, -107.4837, -122.9343, -126.0299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4003, device='cuda:0', dtype=torch.float64)
tensor([-173.6573, -173.7428, -107.9862, -123.4134, -126.7268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4205, device='cuda:0', dtype=torch.float64)
tensor([-174.7184, -174.6726, -108.3471, -123.7931, -127.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3819, device='cuda:0', dtype=torch.float64)
tensor([-175.5847, -175.6856, -108.7308, -124.2011, -128.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3722, device='cuda:0', dtype=torch.float64)
tensor([-176.6767, -176.6989, -109.3222, -124.6529, -128.8661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3054, device='cuda:0', dtype=torch.float64)
tensor([-177.7851, -177.4743, -109.8625, -125.0339, -129.5339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3261, device='cuda:0', dtype=torch.float64)
tensor([-178.7609, -178.0574, -110.4096, -125.4297, -130.1688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2914, device='cuda:0', dtype=torch.float64)
tensor([-179.4436, -178.6472, -110.9740, -125.8561, -130.7397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3483, device='cuda:0', dtype=torch.float64)
tensor([-180.0955, -179.4475, -111.6436, -126.3476, -131.3687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2852, device='cuda:0', dtype=torch.float64)
tensor([-180.4833, -180.3420, -112.2444, -126.8329, -131.9023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3543, device='cuda:0', dtype=torch.float64)
tensor([-180.9067, -181.6630, -112.8220, -127.2673, -132.3967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3555, device='cuda:0', dtype=torch.float64)
tensor([-181.2861, -183.2434, -113.5236, -127.7921, -132.9275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3141, device='cuda:0', dtype=torch.float64)
tensor([-181.5617, -184.6742, -114.1016, -128.2993, -133.3618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3209, device='cuda:0', dtype=torch.float64)
tensor([-181.9236, -186.4621, -114.7042, -128.9077, -133.9007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3157, device='cuda:0', dtype=torch.float64)
tensor([-182.1151, -187.9041, -115.0998, -129.3513, -134.4015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2988, device='cuda:0', dtype=torch.float64)
tensor([-182.2662, -189.3074, -115.4987, -129.7421, -134.8029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4140, device='cuda:0', dtype=torch.float64)
tensor([-182.4193, -190.5220, -115.8813, -130.1658, -135.2277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3287, device='cuda:0', dtype=torch.float64)
tensor([-182.3053, -191.4648, -116.0831, -130.4409, -135.4629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3524, device='cuda:0', dtype=torch.float64)
tensor([-182.3636, -192.4363, -116.3488, -130.6425, -135.7009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2922, device='cuda:0', dtype=torch.float64)
tensor([-182.5158, -193.1668, -116.5550, -130.7377, -135.8031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3648, device='cuda:0', dtype=torch.float64)
tensor([-182.5756, -193.6966, -116.7440, -130.7678, -135.9263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3350, device='cuda:0', dtype=torch.float64)
tensor([-182.5321, -194.0671, -116.7433, -130.7665, -135.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2794, device='cuda:0', dtype=torch.float64)
tensor([-182.5387, -194.8503, -116.8101, -130.8685, -136.1776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3027, device='cuda:0', dtype=torch.float64)
tensor([-182.5573, -195.3724, -116.7211, -130.8415, -136.3677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3082, device='cuda:0', dtype=torch.float64)
tensor([-182.6675, -195.9229, -116.5908, -130.7909, -136.5169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3700, device='cuda:0', dtype=torch.float64)
tensor([-182.8591, -196.2983, -116.4258, -130.7600, -136.7634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2926, device='cuda:0', dtype=torch.float64)
tensor([-183.1011, -195.9373, -116.1577, -130.6202, -136.9595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3492, device='cuda:0', dtype=torch.float64)
tensor([-183.3636, -195.6220, -115.8887, -130.5030, -137.1378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3218, device='cuda:0', dtype=torch.float64)
tensor([-183.6217, -195.4269, -115.7305, -130.4065, -137.2855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3685, device='cuda:0', dtype=torch.float64)
tensor([-183.9284, -195.3664, -115.7158, -130.4773, -137.5417],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2993, device='cuda:0', dtype=torch.float64)
tensor([-184.1818, -195.4042, -115.6565, -130.5453, -137.7171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2902, device='cuda:0', dtype=torch.float64)
tensor([-184.5998, -195.6508, -115.7323, -130.7127, -137.9732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3584, device='cuda:0', dtype=torch.float64)
tensor([-185.0650, -195.7822, -115.8302, -130.9051, -138.2553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2878, device='cuda:0', dtype=torch.float64)
tensor([-185.5134, -196.2349, -116.0293, -131.1652, -138.5647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3376, device='cuda:0', dtype=torch.float64)
tensor([-186.2677, -196.8881, -116.3583, -131.5512, -138.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3700, device='cuda:0', dtype=torch.float64)
tensor([-186.8768, -197.6875, -116.6742, -131.9824, -139.1483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3261, device='cuda:0', dtype=torch.float64)
tensor([-187.4854, -198.1665, -116.9892, -132.3551, -139.4552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3151, device='cuda:0', dtype=torch.float64)
tensor([-188.0076, -198.6164, -117.1929, -132.5921, -139.6831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2919, device='cuda:0', dtype=torch.float64)
tensor([-188.4145, -198.9062, -117.4011, -132.8470, -139.9062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3013, device='cuda:0', dtype=torch.float64)
tensor([-188.7018, -199.0702, -117.5860, -133.1398, -140.2059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3044, device='cuda:0', dtype=torch.float64)
tensor([-188.9520, -199.4187, -117.8949, -133.4455, -140.6341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3345, device='cuda:0', dtype=torch.float64)
tensor([-189.1149, -199.7043, -118.1798, -133.7095, -140.9860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3229, device='cuda:0', dtype=torch.float64)
tensor([-189.3527, -200.0915, -118.4998, -133.9974, -141.3404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3184, device='cuda:0', dtype=torch.float64)
tensor([-189.4795, -200.4925, -118.8059, -134.2713, -141.7020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3155, device='cuda:0', dtype=torch.float64)
tensor([-189.4531, -200.4989, -119.0306, -134.5165, -142.0234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3219, device='cuda:0', dtype=torch.float64)
tensor([-189.3307, -200.3533, -119.3097, -134.7801, -142.3392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3149, device='cuda:0', dtype=torch.float64)
tensor([-189.2353, -200.4625, -119.6436, -135.2250, -142.7775],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3133, device='cuda:0', dtype=torch.float64)
tensor([-189.1940, -200.7818, -119.9786, -135.7185, -143.3916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3151, device='cuda:0', dtype=torch.float64)
tensor([-188.9466, -201.2448, -120.1642, -136.1215, -143.9231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3346, device='cuda:0', dtype=torch.float64)
tensor([-188.5530, -201.7785, -120.2001, -136.5002, -144.3697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3127, device='cuda:0', dtype=torch.float64)
tensor([-188.4527, -202.0932, -120.2799, -136.9015, -144.8405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3138, device='cuda:0', dtype=torch.float64)
tensor([-188.6314, -202.8243, -120.5217, -137.4457, -145.5618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2806, device='cuda:0', dtype=torch.float64)
tensor([-188.7993, -203.4954, -120.7374, -138.0107, -146.2963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3314, device='cuda:0', dtype=torch.float64)
tensor([-188.9537, -204.6951, -121.1166, -138.7230, -147.2100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3061, device='cuda:0', dtype=torch.float64)
tensor([-188.8897, -205.6783, -121.3462, -139.2391, -148.0723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2841, device='cuda:0', dtype=torch.float64)
tensor([-188.8302, -206.6284, -121.6168, -139.8802, -149.0166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3138, device='cuda:0', dtype=torch.float64)
tensor([-188.7283, -207.6553, -121.8622, -140.5539, -149.8850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2732, device='cuda:0', dtype=torch.float64)
tensor([-188.7236, -208.6751, -122.1658, -141.2122, -150.7822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3332, device='cuda:0', dtype=torch.float64)
tensor([-189.0513, -209.8572, -122.5597, -141.8985, -151.8460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3681, device='cuda:0', dtype=torch.float64)
tensor([-189.4854, -211.2008, -123.0195, -142.6704, -152.9584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3079, device='cuda:0', dtype=torch.float64)
tensor([-189.8931, -212.4970, -123.4153, -143.4171, -154.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3017, device='cuda:0', dtype=torch.float64)
tensor([-190.4017, -214.0191, -123.8462, -144.1867, -155.0645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3451, device='cuda:0', dtype=torch.float64)
tensor([-190.6466, -214.9308, -124.1782, -144.7183, -155.9880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2880, device='cuda:0', dtype=torch.float64)
tensor([-190.7119, -215.6645, -124.3740, -144.9984, -156.8136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3473, device='cuda:0', dtype=torch.float64)
tensor([-190.9179, -216.4367, -124.7389, -145.3933, -157.6972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3724, device='cuda:0', dtype=torch.float64)
tensor([-191.2681, -217.3906, -125.2625, -145.9019, -158.6616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2914, device='cuda:0', dtype=torch.float64)
tensor([-191.4994, -218.4235, -125.7775, -146.4306, -159.4965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2923, device='cuda:0', dtype=torch.float64)
tensor([-191.8400, -219.2178, -126.1871, -146.9128, -160.0912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3086, device='cuda:0', dtype=torch.float64)
tensor([-192.2511, -219.7367, -126.4860, -147.3053, -160.5713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3140, device='cuda:0', dtype=torch.float64)
tensor([-192.6448, -220.3543, -126.7939, -147.6771, -160.9464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2687, device='cuda:0', dtype=torch.float64)
tensor([-193.0281, -220.5868, -127.0444, -147.9929, -161.2621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2711, device='cuda:0', dtype=torch.float64)
tensor([-193.4993, -220.9330, -127.3926, -148.2781, -161.6610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2795, device='cuda:0', dtype=torch.float64)
tensor([-193.7894, -220.9444, -127.5683, -148.4758, -161.7700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2737, device='cuda:0', dtype=torch.float64)
tensor([-193.8528, -221.1670, -127.7847, -148.6807, -161.7523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3885, device='cuda:0', dtype=torch.float64)
tensor([-194.2086, -221.6432, -128.1432, -148.9964, -161.9039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2998, device='cuda:0', dtype=torch.float64)
tensor([-194.4932, -222.0916, -128.4354, -149.2472, -162.0611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2994, device='cuda:0', dtype=torch.float64)
tensor([-194.9360, -222.8065, -128.8502, -149.5785, -162.3409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2324, device='cuda:0', dtype=torch.float64)
tensor([-195.3225, -223.5195, -129.1967, -149.7589, -162.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.4243, device='cuda:0', dtype=torch.float64)
tensor([-195.8783, -224.3099, -129.5878, -150.0486, -162.9319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3563, device='cuda:0', dtype=torch.float64)
tensor([-196.4629, -225.0809, -130.0233, -150.4498, -163.5559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2644, device='cuda:0', dtype=torch.float64)
tensor([-196.8831, -226.0615, -130.4065, -150.7413, -164.0831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2597, device='cuda:0', dtype=torch.float64)
tensor([-197.3170, -226.8806, -130.7519, -151.0910, -164.6761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2547, device='cuda:0', dtype=torch.float64)
tensor([-197.6424, -227.6271, -131.0331, -151.4396, -165.2308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2848, device='cuda:0', dtype=torch.float64)
tensor([-197.8823, -228.4704, -131.2895, -151.8345, -165.7321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2437, device='cuda:0', dtype=torch.float64)
tensor([-198.1321, -229.1990, -131.5023, -152.1438, -166.2359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3357, device='cuda:0', dtype=torch.float64)
tensor([-198.2942, -229.7237, -131.5769, -152.4539, -166.6650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2897, device='cuda:0', dtype=torch.float64)
tensor([-198.5389, -230.2825, -131.6351, -152.8009, -167.0820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2760, device='cuda:0', dtype=torch.float64)
tensor([-198.6539, -230.2963, -131.4977, -153.1041, -167.3836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3198, device='cuda:0', dtype=torch.float64)
tensor([-199.0008, -230.2240, -131.4307, -153.4403, -167.7868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2738, device='cuda:0', dtype=torch.float64)
tensor([-199.3454, -230.2047, -131.3481, -153.7750, -168.1434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3001, device='cuda:0', dtype=torch.float64)
tensor([-199.9322, -230.5462, -131.4158, -154.1070, -168.6878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3099, device='cuda:0', dtype=torch.float64)
tensor([-200.7569, -230.8099, -131.5718, -154.4523, -169.4172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2952, device='cuda:0', dtype=torch.float64)
tensor([-201.6104, -231.4665, -131.8821, -154.9019, -170.2743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3103, device='cuda:0', dtype=torch.float64)
tensor([-202.0324, -231.5950, -131.8614, -155.1554, -170.8063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3655, device='cuda:0', dtype=torch.float64)
tensor([-202.3696, -231.4635, -131.8952, -155.4581, -171.3648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2552, device='cuda:0', dtype=torch.float64)
tensor([-202.6768, -231.4725, -131.9367, -155.6681, -171.8090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3714, device='cuda:0', dtype=torch.float64)
tensor([-203.2351, -231.8571, -132.2804, -156.1403, -172.4861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2427, device='cuda:0', dtype=torch.float64)
tensor([-203.5165, -232.0409, -132.4816, -156.5456, -172.9439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2352, device='cuda:0', dtype=torch.float64)
tensor([-203.8252, -232.4436, -132.8194, -157.0183, -173.4768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3708, device='cuda:0', dtype=torch.float64)
tensor([-204.0924, -232.8570, -133.2005, -157.4042, -173.7940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3029, device='cuda:0', dtype=torch.float64)
tensor([-204.6342, -233.4456, -133.7282, -157.9291, -174.2435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2360, device='cuda:0', dtype=torch.float64)
tensor([-205.0354, -234.0955, -134.3116, -158.4896, -174.7263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3343, device='cuda:0', dtype=torch.float64)
tensor([-205.2899, -235.0085, -134.9879, -159.1605, -175.2534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2815, device='cuda:0', dtype=torch.float64)
tensor([-205.7078, -236.1989, -135.7896, -160.0020, -175.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2934, device='cuda:0', dtype=torch.float64)
tensor([-205.8623, -237.3274, -136.4312, -160.7875, -176.4574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2825, device='cuda:0', dtype=torch.float64)
tensor([-205.8683, -238.3527, -136.9537, -161.4973, -176.9296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2617, device='cuda:0', dtype=torch.float64)
tensor([-206.0236, -239.7542, -137.4807, -162.1641, -177.4203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2625, device='cuda:0', dtype=torch.float64)
tensor([-206.2714, -240.9584, -137.8357, -162.7995, -177.8699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2945, device='cuda:0', dtype=torch.float64)
tensor([-206.5768, -242.0729, -138.2459, -163.3645, -178.1914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2541, device='cuda:0', dtype=torch.float64)
tensor([-206.9127, -243.1699, -138.6718, -163.8801, -178.4372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3441, device='cuda:0', dtype=torch.float64)
tensor([-206.9849, -243.9148, -138.9106, -164.2076, -178.6614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2550, device='cuda:0', dtype=torch.float64)
tensor([-206.9474, -244.5450, -139.0148, -164.4278, -178.6955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2471, device='cuda:0', dtype=torch.float64)
tensor([-206.7255, -245.1635, -139.1482, -164.6566, -178.6401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2946, device='cuda:0', dtype=torch.float64)
tensor([-206.4959, -245.4647, -139.1379, -164.8434, -178.5062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3036, device='cuda:0', dtype=torch.float64)
tensor([-206.1404, -245.4995, -139.1478, -164.9990, -178.3535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3603, device='cuda:0', dtype=torch.float64)
tensor([-205.9852, -245.6013, -139.2510, -165.2294, -178.2303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2664, device='cuda:0', dtype=torch.float64)
tensor([-205.8115, -245.5056, -139.2954, -165.4514, -178.2197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2977, device='cuda:0', dtype=torch.float64)
tensor([-205.6238, -245.6185, -139.3179, -165.5919, -178.3062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3036, device='cuda:0', dtype=torch.float64)
tensor([-205.4789, -245.7197, -139.1901, -165.6227, -178.2599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2845, device='cuda:0', dtype=torch.float64)
tensor([-205.2267, -246.0458, -139.1869, -165.5993, -178.2242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2994, device='cuda:0', dtype=torch.float64)
tensor([-205.1752, -246.1410, -139.1019, -165.6009, -178.3131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3501, device='cuda:0', dtype=torch.float64)
tensor([-205.1647, -246.4126, -139.1444, -165.6528, -178.5088],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3519, device='cuda:0', dtype=torch.float64)
tensor([-205.4517, -246.8100, -139.3772, -165.8736, -179.0707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2284, device='cuda:0', dtype=torch.float64)
tensor([-205.7788, -247.2547, -139.6489, -166.1900, -179.6685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2727, device='cuda:0', dtype=torch.float64)
tensor([-206.0116, -247.3873, -139.7901, -166.4684, -180.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2435, device='cuda:0', dtype=torch.float64)
tensor([-206.2183, -247.6059, -139.9007, -166.7060, -180.5534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2782, device='cuda:0', dtype=torch.float64)
tensor([-206.2024, -247.6237, -139.8169, -166.7990, -180.8046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2722, device='cuda:0', dtype=torch.float64)
tensor([-206.1208, -247.7426, -139.7434, -166.9110, -181.0510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2715, device='cuda:0', dtype=torch.float64)
tensor([-206.1911, -247.6642, -139.7708, -167.1117, -181.4159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2602, device='cuda:0', dtype=torch.float64)
tensor([-206.3172, -247.7130, -139.7943, -167.2850, -181.8322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3081, device='cuda:0', dtype=torch.float64)
tensor([-206.3843, -247.5204, -139.6514, -167.3997, -182.1882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2771, device='cuda:0', dtype=torch.float64)
tensor([-206.2227, -247.1709, -139.4143, -167.4060, -182.3796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2915, device='cuda:0', dtype=torch.float64)
tensor([-206.2647, -246.7993, -139.2091, -167.4721, -182.7230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2587, device='cuda:0', dtype=torch.float64)
tensor([-206.4055, -246.3808, -139.1145, -167.6070, -183.1706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2226, device='cuda:0', dtype=torch.float64)
tensor([-206.5530, -246.1658, -139.1229, -167.7956, -183.6991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2664, device='cuda:0', dtype=torch.float64)
tensor([-206.7837, -245.8236, -139.1374, -167.9600, -184.1012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3372, device='cuda:0', dtype=torch.float64)
tensor([-207.0320, -245.5922, -139.2528, -168.1743, -184.6056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2437, device='cuda:0', dtype=torch.float64)
tensor([-207.4747, -245.5881, -139.4398, -168.4556, -185.1625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2644, device='cuda:0', dtype=torch.float64)
tensor([-207.9083, -245.9205, -139.7548, -168.8464, -185.7628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2245, device='cuda:0', dtype=torch.float64)
tensor([-208.2657, -246.3283, -140.0429, -169.1734, -186.2842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2325, device='cuda:0', dtype=torch.float64)
tensor([-208.6495, -246.8631, -140.4742, -169.6124, -186.8799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2653, device='cuda:0', dtype=torch.float64)
tensor([-209.1564, -247.8165, -141.0132, -170.1777, -187.6416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2901, device='cuda:0', dtype=torch.float64)
tensor([-209.7853, -248.8213, -141.6212, -170.7355, -188.4030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2512, device='cuda:0', dtype=torch.float64)
tensor([-210.2723, -249.7586, -142.1599, -171.2457, -189.0551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2123, device='cuda:0', dtype=torch.float64)
tensor([-210.8884, -250.4847, -142.6769, -171.6752, -189.7152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2857, device='cuda:0', dtype=torch.float64)
tensor([-211.3440, -250.9269, -143.1462, -172.1501, -190.3078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2429, device='cuda:0', dtype=torch.float64)
tensor([-211.7894, -251.3847, -143.5207, -172.4617, -190.7655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2262, device='cuda:0', dtype=torch.float64)
tensor([-212.3550, -251.8948, -144.0125, -172.8571, -191.3124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2627, device='cuda:0', dtype=torch.float64)
tensor([-212.7082, -252.1071, -144.2888, -173.0513, -191.6322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2324, device='cuda:0', dtype=torch.float64)
tensor([-212.9897, -251.8474, -144.3279, -173.1646, -191.9222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2522, device='cuda:0', dtype=torch.float64)
tensor([-213.2896, -251.5791, -144.3989, -173.3173, -192.2039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2537, device='cuda:0', dtype=torch.float64)
tensor([-213.6968, -251.5208, -144.6786, -173.6231, -192.5494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2386, device='cuda:0', dtype=torch.float64)
tensor([-214.1300, -251.6416, -144.9790, -173.9115, -192.9107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2986, device='cuda:0', dtype=torch.float64)
tensor([-214.2513, -251.9636, -145.1277, -174.1319, -193.0031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2921, device='cuda:0', dtype=torch.float64)
tensor([-214.4397, -252.5001, -145.3915, -174.4283, -193.1426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2529, device='cuda:0', dtype=torch.float64)
tensor([-214.5156, -253.2018, -145.5581, -174.6078, -193.1426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2618, device='cuda:0', dtype=torch.float64)
tensor([-214.6836, -254.0909, -145.7255, -174.7548, -193.1160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2473, device='cuda:0', dtype=torch.float64)
tensor([-214.8689, -255.0465, -145.9976, -174.8780, -193.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2128, device='cuda:0', dtype=torch.float64)
tensor([-215.0092, -255.9892, -146.2136, -175.0582, -193.2351],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2559, device='cuda:0', dtype=torch.float64)
tensor([-215.0632, -256.9018, -146.3415, -175.1506, -193.3608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2612, device='cuda:0', dtype=torch.float64)
tensor([-215.2693, -257.8451, -146.6199, -175.4170, -193.6826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2872, device='cuda:0', dtype=torch.float64)
tensor([-215.8069, -259.0888, -147.1660, -175.8198, -194.1810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2328, device='cuda:0', dtype=torch.float64)
tensor([-216.1732, -260.3035, -147.5687, -176.0708, -194.5259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2401, device='cuda:0', dtype=torch.float64)
tensor([-216.8758, -261.5178, -148.1255, -176.4353, -195.0703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2289, device='cuda:0', dtype=torch.float64)
tensor([-217.6066, -262.4171, -148.6261, -176.7715, -195.6612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2936, device='cuda:0', dtype=torch.float64)
tensor([-218.4680, -263.0785, -149.0516, -177.1448, -196.2933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2081, device='cuda:0', dtype=torch.float64)
tensor([-219.1565, -263.4452, -149.3050, -177.4752, -196.8296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2244, device='cuda:0', dtype=torch.float64)
tensor([-219.7309, -263.6528, -149.5705, -177.9355, -197.4045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2046, device='cuda:0', dtype=torch.float64)
tensor([-220.2265, -263.7268, -149.8356, -178.4221, -198.0168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2197, device='cuda:0', dtype=torch.float64)
tensor([-220.8248, -263.8086, -150.1219, -178.9408, -198.7367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2735, device='cuda:0', dtype=torch.float64)
tensor([-221.4071, -263.9267, -150.4327, -179.4778, -199.4280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2372, device='cuda:0', dtype=torch.float64)
tensor([-221.8467, -264.0216, -150.7034, -179.8845, -199.9730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2174, device='cuda:0', dtype=torch.float64)
tensor([-222.1737, -264.1456, -150.9163, -180.2555, -200.4310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2410, device='cuda:0', dtype=torch.float64)
tensor([-222.4640, -264.4785, -151.1375, -180.6300, -200.9355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2256, device='cuda:0', dtype=torch.float64)
tensor([-222.6926, -264.2881, -151.1319, -180.8766, -201.2816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1910, device='cuda:0', dtype=torch.float64)
tensor([-222.8188, -264.0235, -151.0906, -181.1749, -201.5519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2439, device='cuda:0', dtype=torch.float64)
tensor([-222.9426, -263.7711, -151.0961, -181.4446, -201.8947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2686, device='cuda:0', dtype=torch.float64)
tensor([-223.0714, -263.6615, -151.1282, -181.7400, -202.1673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2229, device='cuda:0', dtype=torch.float64)
tensor([-223.2035, -263.6552, -151.2024, -182.0416, -202.4191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2549, device='cuda:0', dtype=torch.float64)
tensor([-223.2895, -263.7420, -151.2119, -182.2767, -202.5709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2257, device='cuda:0', dtype=torch.float64)
tensor([-223.3411, -264.0005, -151.2783, -182.5531, -202.7510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2240, device='cuda:0', dtype=torch.float64)
tensor([-223.4559, -264.0628, -151.2644, -182.6982, -202.9071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1973, device='cuda:0', dtype=torch.float64)
tensor([-223.5825, -264.2348, -151.1916, -182.6963, -203.0344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2204, device='cuda:0', dtype=torch.float64)
tensor([-223.7127, -264.4228, -151.1187, -182.6239, -203.2247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1995, device='cuda:0', dtype=torch.float64)
tensor([-223.7428, -264.8791, -151.0775, -182.4563, -203.3622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2030, device='cuda:0', dtype=torch.float64)
tensor([-223.9385, -265.3568, -151.1157, -182.3140, -203.5353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2475, device='cuda:0', dtype=torch.float64)
tensor([-224.0915, -265.8970, -151.1786, -182.1749, -203.6530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2270, device='cuda:0', dtype=torch.float64)
tensor([-224.0868, -266.5358, -151.1856, -182.0056, -203.7220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2206, device='cuda:0', dtype=torch.float64)
tensor([-224.2448, -266.8497, -151.2275, -181.9454, -203.9021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2174, device='cuda:0', dtype=torch.float64)
tensor([-224.5437, -267.1265, -151.3289, -182.0449, -204.2131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2631, device='cuda:0', dtype=torch.float64)
tensor([-224.8994, -267.4915, -151.5090, -182.3563, -204.7148],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2218, device='cuda:0', dtype=torch.float64)
tensor([-225.3305, -267.8415, -151.7184, -182.6734, -205.2957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2232, device='cuda:0', dtype=torch.float64)
tensor([-225.8919, -268.2433, -151.9646, -183.0432, -205.8691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1898, device='cuda:0', dtype=torch.float64)
tensor([-226.3939, -268.5815, -152.2384, -183.4173, -206.4529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2310, device='cuda:0', dtype=torch.float64)
tensor([-227.1754, -268.9598, -152.6014, -183.8991, -207.1477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2604, device='cuda:0', dtype=torch.float64)
tensor([-228.0835, -269.0219, -152.8707, -184.3304, -207.8454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2226, device='cuda:0', dtype=torch.float64)
tensor([-228.8180, -269.0766, -153.1387, -184.7466, -208.4790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2157, device='cuda:0', dtype=torch.float64)
tensor([-229.4076, -269.4332, -153.3773, -185.0190, -208.9634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2104, device='cuda:0', dtype=torch.float64)
tensor([-229.7091, -270.1207, -153.6995, -185.3653, -209.4001],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2117, device='cuda:0', dtype=torch.float64)
tensor([-229.8429, -271.0946, -154.0534, -185.6486, -209.7401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2744, device='cuda:0', dtype=torch.float64)
tensor([-229.9453, -271.9029, -154.5212, -186.0221, -210.2219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2389, device='cuda:0', dtype=torch.float64)
tensor([-230.2353, -272.8072, -155.0732, -186.4494, -210.7450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2328, device='cuda:0', dtype=torch.float64)
tensor([-230.2626, -273.6281, -155.6431, -186.8261, -211.1264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2293, device='cuda:0', dtype=torch.float64)
tensor([-230.2237, -274.2995, -156.1416, -187.0614, -211.4225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2142, device='cuda:0', dtype=torch.float64)
tensor([-230.2555, -274.9951, -156.5991, -187.4162, -211.7091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1965, device='cuda:0', dtype=torch.float64)
tensor([-230.2287, -275.4603, -156.9593, -187.7612, -212.0154],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2042, device='cuda:0', dtype=torch.float64)
tensor([-230.3434, -276.3286, -157.4509, -188.1126, -212.2929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2334, device='cuda:0', dtype=torch.float64)
tensor([-230.5503, -276.6678, -157.7873, -188.4076, -212.5055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2194, device='cuda:0', dtype=torch.float64)
tensor([-230.4871, -276.8624, -157.9165, -188.5445, -212.5665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2065, device='cuda:0', dtype=torch.float64)
tensor([-230.5221, -276.9406, -158.0100, -188.7426, -212.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2472, device='cuda:0', dtype=torch.float64)
tensor([-230.6647, -276.7272, -158.0537, -188.9270, -212.8989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1948, device='cuda:0', dtype=torch.float64)
tensor([-231.0041, -276.6525, -158.1586, -189.2013, -213.2837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1971, device='cuda:0', dtype=torch.float64)
tensor([-231.4165, -276.2460, -158.1845, -189.3855, -213.6903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2223, device='cuda:0', dtype=torch.float64)
tensor([-231.9028, -275.8707, -158.4010, -189.7363, -214.2397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2080, device='cuda:0', dtype=torch.float64)
tensor([-232.4450, -275.3934, -158.5667, -190.1201, -214.7782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2741, device='cuda:0', dtype=torch.float64)
tensor([-233.1438, -274.9377, -158.7707, -190.5299, -215.3599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1962, device='cuda:0', dtype=torch.float64)
tensor([-233.7434, -274.5674, -158.9783, -190.9682, -215.8722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1921, device='cuda:0', dtype=torch.float64)
tensor([-234.2873, -274.2448, -159.1875, -191.3209, -216.3499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1872, device='cuda:0', dtype=torch.float64)
tensor([-234.7517, -273.7709, -159.3094, -191.5726, -216.7403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1638, device='cuda:0', dtype=torch.float64)
tensor([-235.1422, -273.7101, -159.5138, -191.7967, -217.0534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2061, device='cuda:0', dtype=torch.float64)
tensor([-235.6812, -274.2194, -159.9341, -192.0952, -217.4617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2093, device='cuda:0', dtype=torch.float64)
tensor([-236.1281, -275.2337, -160.4538, -192.4149, -217.8079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1906, device='cuda:0', dtype=torch.float64)
tensor([-236.5886, -276.0692, -160.8723, -192.7773, -218.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2236, device='cuda:0', dtype=torch.float64)
tensor([-236.9029, -276.6827, -161.1770, -192.9755, -218.4136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2038, device='cuda:0', dtype=torch.float64)
tensor([-237.1623, -277.3163, -161.5115, -193.2755, -218.7551],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2975, device='cuda:0', dtype=torch.float64)
tensor([-237.5473, -278.1251, -161.9645, -193.6606, -219.1557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2394, device='cuda:0', dtype=torch.float64)
tensor([-237.8249, -278.9151, -162.4156, -194.0004, -219.4745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1775, device='cuda:0', dtype=torch.float64)
tensor([-238.1720, -279.6494, -162.8893, -194.3206, -219.7760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2113, device='cuda:0', dtype=torch.float64)
tensor([-238.6000, -280.4266, -163.3594, -194.5833, -220.0253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2130, device='cuda:0', dtype=torch.float64)
tensor([-238.8727, -281.1281, -163.7012, -194.8283, -220.2245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1742, device='cuda:0', dtype=torch.float64)
tensor([-239.2518, -281.4358, -163.8094, -194.9482, -220.3899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1849, device='cuda:0', dtype=torch.float64)
tensor([-239.5996, -281.7661, -163.8889, -195.1295, -220.5124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1802, device='cuda:0', dtype=torch.float64)
tensor([-240.0271, -282.1197, -163.9528, -195.3604, -220.6885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2453, device='cuda:0', dtype=torch.float64)
tensor([-240.4745, -282.1971, -164.0092, -195.6406, -220.8763],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1971, device='cuda:0', dtype=torch.float64)
tensor([-240.8792, -282.3145, -164.0263, -195.7826, -221.0562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1937, device='cuda:0', dtype=torch.float64)
tensor([-241.2052, -282.1073, -164.0283, -195.9604, -221.3116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1772, device='cuda:0', dtype=torch.float64)
tensor([-241.4686, -282.0184, -164.0974, -196.2806, -221.6530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2126, device='cuda:0', dtype=torch.float64)
tensor([-241.6169, -281.9954, -164.0740, -196.4703, -221.8226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2026, device='cuda:0', dtype=torch.float64)
tensor([-241.7514, -282.0468, -163.9982, -196.5344, -221.9286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1995, device='cuda:0', dtype=torch.float64)
tensor([-241.6716, -282.0702, -163.8509, -196.5074, -222.0218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2168, device='cuda:0', dtype=torch.float64)
tensor([-241.8536, -282.6002, -163.9426, -196.7692, -222.3355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1917, device='cuda:0', dtype=torch.float64)
tensor([-241.8666, -282.7621, -163.9517, -197.0442, -222.6096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1701, device='cuda:0', dtype=torch.float64)
tensor([-241.5962, -282.6885, -163.8266, -197.1928, -222.7271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2299, device='cuda:0', dtype=torch.float64)
tensor([-241.1775, -282.5844, -163.6660, -197.1874, -222.7299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2273, device='cuda:0', dtype=torch.float64)
tensor([-240.6689, -282.0961, -163.3275, -197.0331, -222.4022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1895, device='cuda:0', dtype=torch.float64)
tensor([-240.3839, -281.6168, -163.1901, -197.1421, -222.2100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1908, device='cuda:0', dtype=torch.float64)
tensor([-239.9906, -281.1665, -163.0600, -197.2070, -221.9651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1562, device='cuda:0', dtype=torch.float64)
tensor([-239.5608, -280.8425, -162.9432, -197.2540, -221.6989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2977, device='cuda:0', dtype=torch.float64)
tensor([-239.3579, -280.4300, -162.8037, -197.3240, -221.5191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1861, device='cuda:0', dtype=torch.float64)
tensor([-239.3136, -280.1535, -162.7614, -197.3281, -221.3758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1881, device='cuda:0', dtype=torch.float64)
tensor([-238.9740, -279.5669, -162.5197, -197.2139, -221.1561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1469, device='cuda:0', dtype=torch.float64)
tensor([-238.5504, -279.1060, -162.2232, -197.0791, -220.9262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2058, device='cuda:0', dtype=torch.float64)
tensor([-238.3560, -278.8079, -162.0969, -197.1388, -220.9020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2067, device='cuda:0', dtype=torch.float64)
tensor([-238.0802, -278.3456, -161.9371, -197.2492, -220.9334],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1724, device='cuda:0', dtype=torch.float64)
tensor([-237.7945, -278.0298, -161.8462, -197.3522, -221.0556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1705, device='cuda:0', dtype=torch.float64)
tensor([-237.6153, -277.7460, -161.7906, -197.5555, -221.2109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1853, device='cuda:0', dtype=torch.float64)
tensor([-237.5847, -277.6081, -161.8562, -197.8531, -221.4626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3386, device='cuda:0', dtype=torch.float64)
tensor([-237.5164, -277.6828, -161.9481, -198.1264, -221.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1759, device='cuda:0', dtype=torch.float64)
tensor([-237.4495, -277.7950, -162.0422, -198.3828, -221.8638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2101, device='cuda:0', dtype=torch.float64)
tensor([-237.2897, -278.0503, -162.2073, -198.5756, -221.9681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2152, device='cuda:0', dtype=torch.float64)
tensor([-237.3523, -278.5147, -162.4477, -198.9076, -222.2147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2130, device='cuda:0', dtype=torch.float64)
tensor([-237.6618, -278.9944, -162.8048, -199.3759, -222.5445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2012, device='cuda:0', dtype=torch.float64)
tensor([-237.9657, -279.2987, -163.1772, -200.0183, -222.8792],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1758, device='cuda:0', dtype=torch.float64)
tensor([-238.4347, -279.9081, -163.5625, -200.7256, -223.2667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1785, device='cuda:0', dtype=torch.float64)
tensor([-238.9168, -280.2879, -163.8621, -201.3730, -223.5971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2145, device='cuda:0', dtype=torch.float64)
tensor([-239.4880, -280.1511, -164.0565, -202.1335, -223.9683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1913, device='cuda:0', dtype=torch.float64)
tensor([-239.9670, -280.2877, -164.2660, -202.9573, -224.3613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1722, device='cuda:0', dtype=torch.float64)
tensor([-240.5233, -280.1177, -164.4567, -203.6823, -224.6856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1748, device='cuda:0', dtype=torch.float64)
tensor([-241.2298, -280.0938, -164.8182, -204.4744, -225.1621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1952, device='cuda:0', dtype=torch.float64)
tensor([-241.7170, -280.2001, -165.1351, -205.1344, -225.5180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1721, device='cuda:0', dtype=torch.float64)
tensor([-242.0603, -280.2602, -165.3195, -205.5295, -225.7459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1790, device='cuda:0', dtype=torch.float64)
tensor([-242.3426, -280.3908, -165.4584, -205.8711, -225.8889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2870, device='cuda:0', dtype=torch.float64)
tensor([-242.3686, -280.3542, -165.5099, -206.1523, -225.9310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1598, device='cuda:0', dtype=torch.float64)
tensor([-242.2223, -280.3778, -165.5060, -206.3761, -225.9099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2026, device='cuda:0', dtype=torch.float64)
tensor([-241.8124, -280.5331, -165.4944, -206.5032, -225.8205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1796, device='cuda:0', dtype=torch.float64)
tensor([-241.3876, -280.6200, -165.4752, -206.6799, -225.7916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1590, device='cuda:0', dtype=torch.float64)
tensor([-240.9378, -280.8223, -165.4939, -206.7806, -225.7760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2061, device='cuda:0', dtype=torch.float64)
tensor([-240.5367, -281.5832, -165.6721, -206.9704, -225.8889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2045, device='cuda:0', dtype=torch.float64)
tensor([-239.9492, -282.0975, -165.7310, -207.0568, -225.9130],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1942, device='cuda:0', dtype=torch.float64)
tensor([-239.2670, -282.4783, -165.6458, -207.0174, -225.9195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1824, device='cuda:0', dtype=torch.float64)
tensor([-238.6485, -282.5027, -165.4799, -207.0494, -225.9367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1632, device='cuda:0', dtype=torch.float64)
tensor([-238.0860, -282.5176, -165.3252, -207.1423, -226.0231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1458, device='cuda:0', dtype=torch.float64)
tensor([-237.7664, -282.4882, -165.1860, -207.3371, -226.2361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1716, device='cuda:0', dtype=torch.float64)
tensor([-237.5263, -282.8609, -165.2105, -207.6350, -226.5278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2016, device='cuda:0', dtype=torch.float64)
tensor([-237.4324, -282.9388, -165.2371, -208.0495, -226.8508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1777, device='cuda:0', dtype=torch.float64)
tensor([-237.3377, -283.2250, -165.2670, -208.3286, -227.0436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1921, device='cuda:0', dtype=torch.float64)
tensor([-236.9865, -283.3104, -165.1694, -208.5034, -227.0862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1835, device='cuda:0', dtype=torch.float64)
tensor([-236.6608, -283.3945, -165.1048, -208.5276, -227.0940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1726, device='cuda:0', dtype=torch.float64)
tensor([-236.5200, -283.5756, -165.1542, -208.6020, -227.1796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1867, device='cuda:0', dtype=torch.float64)
tensor([-236.4272, -283.7435, -165.1891, -208.5896, -227.2529],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1521, device='cuda:0', dtype=torch.float64)
tensor([-236.3046, -283.5979, -165.1291, -208.4936, -227.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1572, device='cuda:0', dtype=torch.float64)
tensor([-236.1289, -283.8160, -165.1495, -208.4375, -227.3954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2704, device='cuda:0', dtype=torch.float64)
tensor([-236.0743, -284.0683, -165.3807, -208.4896, -227.4771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1796, device='cuda:0', dtype=torch.float64)
tensor([-236.0375, -284.0636, -165.5278, -208.4078, -227.4905],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1879, device='cuda:0', dtype=torch.float64)
tensor([-236.1703, -284.0533, -165.7399, -208.3881, -227.5722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1638, device='cuda:0', dtype=torch.float64)
tensor([-236.2337, -284.1227, -165.9746, -208.3685, -227.6800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2332, device='cuda:0', dtype=torch.float64)
tensor([-236.2087, -283.9923, -166.0606, -208.3605, -227.6827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1998, device='cuda:0', dtype=torch.float64)
tensor([-235.9733, -283.6411, -166.0685, -208.3640, -227.6478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1698, device='cuda:0', dtype=torch.float64)
tensor([-235.7306, -283.3243, -166.1049, -208.4347, -227.6285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2061, device='cuda:0', dtype=torch.float64)
tensor([-235.5476, -283.0980, -166.2003, -208.6275, -227.6605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2010, device='cuda:0', dtype=torch.float64)
tensor([-235.4838, -282.6161, -166.1873, -208.6890, -227.6091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1584, device='cuda:0', dtype=torch.float64)
tensor([-235.5788, -282.3371, -166.3158, -208.9233, -227.6827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1782, device='cuda:0', dtype=torch.float64)
tensor([-235.6413, -282.0460, -166.4791, -209.2623, -227.8781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2024, device='cuda:0', dtype=torch.float64)
tensor([-235.6493, -281.5404, -166.5057, -209.4252, -227.9988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1956, device='cuda:0', dtype=torch.float64)
tensor([-235.9404, -281.2232, -166.6366, -209.8176, -228.2456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1738, device='cuda:0', dtype=torch.float64)
tensor([-236.1202, -280.9680, -166.7293, -210.1713, -228.3493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2479, device='cuda:0', dtype=torch.float64)
tensor([-235.8611, -280.5991, -166.7505, -210.3528, -228.2850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1534, device='cuda:0', dtype=torch.float64)
tensor([-235.7116, -280.2031, -166.7068, -210.3956, -228.1858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1764, device='cuda:0', dtype=torch.float64)
tensor([-235.3393, -279.8407, -166.6298, -210.3407, -227.9942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1935, device='cuda:0', dtype=torch.float64)
tensor([-234.9009, -279.7788, -166.5356, -210.2896, -227.7934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1716, device='cuda:0', dtype=torch.float64)
tensor([-234.5021, -279.6304, -166.3643, -210.2051, -227.6382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1620, device='cuda:0', dtype=torch.float64)
tensor([-234.2128, -279.7046, -166.2614, -210.1642, -227.5031],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1525, device='cuda:0', dtype=torch.float64)
tensor([-233.9658, -279.7226, -166.1717, -210.1064, -227.3656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1805, device='cuda:0', dtype=torch.float64)
tensor([-233.7968, -279.8059, -166.1602, -210.1265, -227.3291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1739, device='cuda:0', dtype=torch.float64)
tensor([-233.6502, -279.8464, -166.1766, -210.2275, -227.2859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1643, device='cuda:0', dtype=torch.float64)
tensor([-233.5051, -279.9992, -166.3219, -210.4036, -227.3038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1572, device='cuda:0', dtype=torch.float64)
tensor([-233.5131, -280.4481, -166.6101, -210.6464, -227.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1825, device='cuda:0', dtype=torch.float64)
tensor([-233.5774, -280.7867, -166.9195, -210.9191, -227.5435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1809, device='cuda:0', dtype=torch.float64)
tensor([-233.5042, -280.9576, -167.1556, -211.0819, -227.7500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1713, device='cuda:0', dtype=torch.float64)
tensor([-233.4068, -281.0733, -167.3494, -211.0511, -227.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2077, device='cuda:0', dtype=torch.float64)
tensor([-233.2356, -280.9428, -167.4378, -210.9159, -227.9648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1755, device='cuda:0', dtype=torch.float64)
tensor([-233.0716, -280.5798, -167.4821, -210.7291, -228.0654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1740, device='cuda:0', dtype=torch.float64)
tensor([-232.9653, -280.5534, -167.6692, -210.6185, -228.2587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1727, device='cuda:0', dtype=torch.float64)
tensor([-232.9339, -280.3697, -167.7572, -210.4749, -228.3493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1619, device='cuda:0', dtype=torch.float64)
tensor([-232.7661, -280.1177, -167.8349, -210.4336, -228.4494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2024, device='cuda:0', dtype=torch.float64)
tensor([-232.5969, -279.7083, -167.8025, -210.3600, -228.5603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1476, device='cuda:0', dtype=torch.float64)
tensor([-232.5537, -279.3735, -167.8668, -210.3919, -228.6998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1430, device='cuda:0', dtype=torch.float64)
tensor([-232.6064, -279.1254, -167.9472, -210.4094, -228.8211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2006, device='cuda:0', dtype=torch.float64)
tensor([-232.6180, -278.8121, -167.9875, -210.4762, -228.9182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1533, device='cuda:0', dtype=torch.float64)
tensor([-232.5272, -278.1873, -167.8479, -210.3966, -228.8810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1505, device='cuda:0', dtype=torch.float64)
tensor([-232.5451, -277.7060, -167.8544, -210.5019, -228.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.3210, device='cuda:0', dtype=torch.float64)
tensor([-232.5644, -277.1590, -167.9264, -210.6693, -228.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1517, device='cuda:0', dtype=torch.float64)
tensor([-232.5973, -276.5216, -167.9793, -211.0141, -229.1003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1542, device='cuda:0', dtype=torch.float64)
tensor([-232.7463, -275.9549, -168.0506, -211.3814, -229.3178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1697, device='cuda:0', dtype=torch.float64)
tensor([-233.0152, -275.0429, -168.0992, -211.7665, -229.5281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1578, device='cuda:0', dtype=torch.float64)
tensor([-233.2425, -274.1784, -168.0901, -212.0038, -229.6022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1840, device='cuda:0', dtype=torch.float64)
tensor([-233.4727, -273.2113, -167.9815, -212.2559, -229.7153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1611, device='cuda:0', dtype=torch.float64)
tensor([-233.8873, -272.4548, -167.9606, -212.6127, -229.9686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1810, device='cuda:0', dtype=torch.float64)
tensor([-234.2819, -271.6915, -167.8567, -212.8466, -230.1894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1691, device='cuda:0', dtype=torch.float64)
tensor([-234.7601, -270.9741, -167.7799, -212.9507, -230.2702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1541, device='cuda:0', dtype=torch.float64)
tensor([-235.3504, -270.6297, -167.8289, -213.0556, -230.3566],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1725, device='cuda:0', dtype=torch.float64)
tensor([-235.9640, -270.3505, -167.8814, -213.0263, -230.3830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-236.4701, -270.5030, -168.0114, -213.0514, -230.4871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1663, device='cuda:0', dtype=torch.float64)
tensor([-236.9084, -270.7523, -168.2072, -213.0918, -230.5445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1800, device='cuda:0', dtype=torch.float64)
tensor([-237.1604, -271.0428, -168.3677, -213.0054, -230.5013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2264, device='cuda:0', dtype=torch.float64)
tensor([-237.3844, -271.2138, -168.4756, -212.7966, -230.3752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1526, device='cuda:0', dtype=torch.float64)
tensor([-237.6830, -271.5385, -168.5756, -212.6314, -230.2725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1394, device='cuda:0', dtype=torch.float64)
tensor([-238.1064, -271.9369, -168.7128, -212.4924, -230.2204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1801, device='cuda:0', dtype=torch.float64)
tensor([-238.4537, -272.2979, -168.8684, -212.3531, -230.1615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1440, device='cuda:0', dtype=torch.float64)
tensor([-238.8756, -272.6552, -169.0037, -212.3071, -230.1454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1445, device='cuda:0', dtype=torch.float64)
tensor([-239.2372, -272.9148, -169.1341, -212.3435, -230.1907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-239.3437, -273.0654, -169.1595, -212.3081, -230.1365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1389, device='cuda:0', dtype=torch.float64)
tensor([-239.4350, -273.2225, -169.1392, -212.2614, -230.1090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2068, device='cuda:0', dtype=torch.float64)
tensor([-239.4290, -273.3200, -169.1345, -212.1815, -230.0466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1589, device='cuda:0', dtype=torch.float64)
tensor([-239.2255, -273.4896, -169.0529, -212.0160, -229.8876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2128, device='cuda:0', dtype=torch.float64)
tensor([-238.9701, -273.4498, -168.9669, -212.0349, -229.7737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2201, device='cuda:0', dtype=torch.float64)
tensor([-238.6988, -273.4381, -168.7957, -211.9296, -229.6752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1488, device='cuda:0', dtype=torch.float64)
tensor([-238.3463, -273.4601, -168.6423, -211.7547, -229.5205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1889, device='cuda:0', dtype=torch.float64)
tensor([-237.8409, -273.3161, -168.5086, -211.5111, -229.2511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1928, device='cuda:0', dtype=torch.float64)
tensor([-237.3892, -272.9746, -168.2921, -211.2874, -229.1069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1430, device='cuda:0', dtype=torch.float64)
tensor([-237.0413, -272.6329, -168.1403, -211.1416, -229.0538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1320, device='cuda:0', dtype=torch.float64)
tensor([-236.7211, -272.1206, -167.9281, -211.0788, -229.0457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1221, device='cuda:0', dtype=torch.float64)
tensor([-236.3587, -271.4500, -167.6434, -210.9469, -228.9891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1541, device='cuda:0', dtype=torch.float64)
tensor([-235.9261, -270.7561, -167.3716, -210.7360, -228.7945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1784, device='cuda:0', dtype=torch.float64)
tensor([-235.5913, -270.1619, -167.0804, -210.4068, -228.5362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1789, device='cuda:0', dtype=torch.float64)
tensor([-235.3465, -269.5342, -166.7518, -210.0107, -228.2085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1790, device='cuda:0', dtype=torch.float64)
tensor([-235.0927, -269.2102, -166.4964, -209.6191, -227.8790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1270, device='cuda:0', dtype=torch.float64)
tensor([-234.9101, -269.1200, -166.3616, -209.4010, -227.6537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1674, device='cuda:0', dtype=torch.float64)
tensor([-234.7951, -269.0421, -166.2760, -209.1407, -227.4108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1456, device='cuda:0', dtype=torch.float64)
tensor([-234.7531, -269.2081, -166.2951, -208.9699, -227.2842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1871, device='cuda:0', dtype=torch.float64)
tensor([-234.9013, -269.5343, -166.4598, -208.9743, -227.2438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1497, device='cuda:0', dtype=torch.float64)
tensor([-235.0423, -269.8640, -166.7036, -209.1114, -227.2916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1439, device='cuda:0', dtype=torch.float64)
tensor([-235.1755, -270.3466, -167.0293, -209.2915, -227.3900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-235.4482, -270.6814, -167.3779, -209.6124, -227.6395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1473, device='cuda:0', dtype=torch.float64)
tensor([-235.6248, -270.9008, -167.6168, -209.8219, -227.7721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1453, device='cuda:0', dtype=torch.float64)
tensor([-235.8771, -271.1907, -167.8558, -209.9731, -227.9257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1419, device='cuda:0', dtype=torch.float64)
tensor([-236.0086, -271.2805, -168.0380, -210.0564, -228.0412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1580, device='cuda:0', dtype=torch.float64)
tensor([-235.9488, -271.1847, -168.0977, -210.0650, -228.0673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1314, device='cuda:0', dtype=torch.float64)
tensor([-235.8046, -270.9860, -168.1574, -210.1290, -228.1576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1531, device='cuda:0', dtype=torch.float64)
tensor([-235.6448, -270.5087, -168.1714, -210.1467, -228.2323],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.2611, device='cuda:0', dtype=torch.float64)
tensor([-235.5551, -270.3260, -168.2868, -210.2289, -228.3129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1333, device='cuda:0', dtype=torch.float64)
tensor([-235.5148, -270.1750, -168.4481, -210.3024, -228.3707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1100, device='cuda:0', dtype=torch.float64)
tensor([-235.4603, -269.8023, -168.5708, -210.4145, -228.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1496, device='cuda:0', dtype=torch.float64)
tensor([-235.4263, -269.2968, -168.7310, -210.5911, -228.6175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1452, device='cuda:0', dtype=torch.float64)
tensor([-235.4087, -269.2274, -169.0290, -210.8277, -228.8461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1187, device='cuda:0', dtype=torch.float64)
tensor([-235.5248, -269.0840, -169.2703, -211.1267, -229.0362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1455, device='cuda:0', dtype=torch.float64)
tensor([-235.6693, -269.0799, -169.5270, -211.3956, -229.2584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1692, device='cuda:0', dtype=torch.float64)
tensor([-235.8349, -268.9375, -169.7506, -211.6601, -229.4040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1470, device='cuda:0', dtype=torch.float64)
tensor([-236.1765, -268.7698, -170.0395, -211.9938, -229.6327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1322, device='cuda:0', dtype=torch.float64)
tensor([-236.4363, -268.6741, -170.2670, -212.1956, -229.8100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1420, device='cuda:0', dtype=torch.float64)
tensor([-236.6897, -268.4788, -170.5120, -212.3683, -230.0144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1304, device='cuda:0', dtype=torch.float64)
tensor([-236.9071, -268.2242, -170.6680, -212.4801, -230.1674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1538, device='cuda:0', dtype=torch.float64)
tensor([-237.1144, -267.8460, -170.8166, -212.5454, -230.1890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1500, device='cuda:0', dtype=torch.float64)
tensor([-237.1197, -267.3963, -170.8495, -212.4215, -230.0921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1339, device='cuda:0', dtype=torch.float64)
tensor([-237.0797, -266.9890, -170.9684, -212.3555, -229.9816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1780, device='cuda:0', dtype=torch.float64)
tensor([-237.1931, -266.5878, -171.0942, -212.3879, -229.8930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1250, device='cuda:0', dtype=torch.float64)
tensor([-237.4291, -266.5097, -171.3197, -212.4684, -229.8683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1415, device='cuda:0', dtype=torch.float64)
tensor([-237.4103, -266.3742, -171.4630, -212.4520, -229.6873],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1486, device='cuda:0', dtype=torch.float64)
tensor([-237.4135, -266.1392, -171.6175, -212.4491, -229.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1677, device='cuda:0', dtype=torch.float64)
tensor([-237.3816, -266.1783, -171.8573, -212.4802, -229.5076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1275, device='cuda:0', dtype=torch.float64)
tensor([-237.2184, -266.3412, -172.0331, -212.4083, -229.3838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1375, device='cuda:0', dtype=torch.float64)
tensor([-237.1731, -266.3314, -172.2219, -212.4630, -229.2872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1148, device='cuda:0', dtype=torch.float64)
tensor([-237.1600, -266.3402, -172.4031, -212.5361, -229.1842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1319, device='cuda:0', dtype=torch.float64)
tensor([-237.2937, -265.9964, -172.5358, -212.6161, -229.0722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1839, device='cuda:0', dtype=torch.float64)
tensor([-237.5406, -265.5843, -172.6336, -212.6798, -228.9000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1702, device='cuda:0', dtype=torch.float64)
tensor([-237.8821, -264.9405, -172.6642, -212.7110, -228.8145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1610, device='cuda:0', dtype=torch.float64)
tensor([-238.2454, -264.5060, -172.7814, -212.8614, -228.8324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1573, device='cuda:0', dtype=torch.float64)
tensor([-238.5634, -264.2571, -172.9148, -213.0204, -228.8910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1345, device='cuda:0', dtype=torch.float64)
tensor([-238.8093, -264.3719, -173.0581, -213.1034, -228.9591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([-239.0676, -264.6633, -173.2764, -213.2159, -229.0532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1188, device='cuda:0', dtype=torch.float64)
tensor([-239.3015, -264.9370, -173.4395, -213.2470, -229.1483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1275, device='cuda:0', dtype=torch.float64)
tensor([-239.5162, -265.2072, -173.5473, -213.1698, -229.1985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1616, device='cuda:0', dtype=torch.float64)
tensor([-239.9750, -265.5708, -173.7947, -213.3039, -229.3332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1401, device='cuda:0', dtype=torch.float64)
tensor([-240.5448, -265.8685, -174.0731, -213.5257, -229.5376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1372, device='cuda:0', dtype=torch.float64)
tensor([-241.0123, -266.0337, -174.2797, -213.6715, -229.7348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1499, device='cuda:0', dtype=torch.float64)
tensor([-241.5639, -266.4436, -174.5285, -213.8468, -229.9695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1579, device='cuda:0', dtype=torch.float64)
tensor([-242.0716, -266.9971, -174.8713, -214.0085, -230.2167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1578, device='cuda:0', dtype=torch.float64)
tensor([-242.4882, -267.3657, -175.1579, -214.1815, -230.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1417, device='cuda:0', dtype=torch.float64)
tensor([-242.7530, -267.3401, -175.3378, -214.3260, -230.5782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1292, device='cuda:0', dtype=torch.float64)
tensor([-243.2348, -267.5275, -175.6530, -214.6269, -230.8328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1234, device='cuda:0', dtype=torch.float64)
tensor([-243.7024, -267.6144, -175.9255, -214.8933, -231.1281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1393, device='cuda:0', dtype=torch.float64)
tensor([-244.1049, -267.5884, -176.1137, -215.1415, -231.4234],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1445, device='cuda:0', dtype=torch.float64)
tensor([-244.5956, -267.6024, -176.3314, -215.4300, -231.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1652, device='cuda:0', dtype=torch.float64)
tensor([-245.0385, -267.5112, -176.5800, -215.7956, -232.0192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1459, device='cuda:0', dtype=torch.float64)
tensor([-245.3049, -267.3275, -176.7217, -215.9337, -232.1656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1519, device='cuda:0', dtype=torch.float64)
tensor([-245.5999, -266.9474, -176.7267, -216.0704, -232.3308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1434, device='cuda:0', dtype=torch.float64)
tensor([-245.9972, -266.4980, -176.8027, -216.2849, -232.4694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1627, device='cuda:0', dtype=torch.float64)
tensor([-246.3939, -265.8889, -176.7964, -216.4937, -232.6302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1645, device='cuda:0', dtype=torch.float64)
tensor([-246.5620, -265.4903, -176.7708, -216.5258, -232.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1212, device='cuda:0', dtype=torch.float64)
tensor([-246.9039, -265.3192, -176.8481, -216.6791, -232.8196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1569, device='cuda:0', dtype=torch.float64)
tensor([-247.1633, -265.1437, -176.8402, -216.7272, -232.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1306, device='cuda:0', dtype=torch.float64)
tensor([-247.3598, -264.9436, -176.7589, -216.6508, -232.9047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1118, device='cuda:0', dtype=torch.float64)
tensor([-247.5003, -264.8867, -176.7117, -216.5575, -232.8819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1139, device='cuda:0', dtype=torch.float64)
tensor([-247.4472, -264.8648, -176.6574, -216.4363, -232.8387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1092, device='cuda:0', dtype=torch.float64)
tensor([-247.4094, -265.0270, -176.6880, -216.3572, -232.8072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([-247.3045, -265.1002, -176.6510, -216.2087, -232.7684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1310, device='cuda:0', dtype=torch.float64)
tensor([-247.2874, -265.2442, -176.6081, -215.9895, -232.7424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1377, device='cuda:0', dtype=torch.float64)
tensor([-247.3042, -265.4391, -176.6628, -215.9648, -232.7424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1237, device='cuda:0', dtype=torch.float64)
tensor([-247.4373, -265.6555, -176.8186, -216.0697, -232.7906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1342, device='cuda:0', dtype=torch.float64)
tensor([-247.5330, -265.6695, -176.9343, -216.2626, -232.8768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1379, device='cuda:0', dtype=torch.float64)
tensor([-247.6432, -265.8863, -177.0953, -216.4763, -233.0204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1406, device='cuda:0', dtype=torch.float64)
tensor([-247.6284, -265.9791, -177.1578, -216.6247, -233.0528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1676, device='cuda:0', dtype=torch.float64)
tensor([-247.7790, -265.9595, -177.2508, -216.7762, -233.0805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1365, device='cuda:0', dtype=torch.float64)
tensor([-247.8815, -265.8735, -177.2994, -216.9029, -233.0936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1364, device='cuda:0', dtype=torch.float64)
tensor([-247.8107, -265.5973, -177.2475, -216.9247, -233.0019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1078, device='cuda:0', dtype=torch.float64)
tensor([-247.7593, -265.5370, -177.2992, -217.0767, -233.0340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1194, device='cuda:0', dtype=torch.float64)
tensor([-247.5968, -265.6338, -177.3230, -217.1594, -233.0096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1433, device='cuda:0', dtype=torch.float64)
tensor([-247.4981, -265.7098, -177.2838, -217.1158, -233.0398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1545, device='cuda:0', dtype=torch.float64)
tensor([-247.3339, -265.6218, -177.1125, -217.0350, -232.9974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1219, device='cuda:0', dtype=torch.float64)
tensor([-247.2382, -265.5655, -176.9483, -216.9830, -232.9554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1374, device='cuda:0', dtype=torch.float64)
tensor([-247.0756, -265.5212, -176.7486, -216.9501, -232.8517],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1348, device='cuda:0', dtype=torch.float64)
tensor([-246.8278, -265.0716, -176.4305, -216.8560, -232.7114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1402, device='cuda:0', dtype=torch.float64)
tensor([-246.3450, -264.6289, -176.0238, -216.6317, -232.4887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1401, device='cuda:0', dtype=torch.float64)
tensor([-245.8052, -264.0534, -175.5536, -216.2563, -232.2420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1139, device='cuda:0', dtype=torch.float64)
tensor([-245.3481, -263.5476, -175.1468, -215.9369, -232.0843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1423, device='cuda:0', dtype=torch.float64)
tensor([-244.9213, -263.1345, -174.7603, -215.6249, -231.9440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1320, device='cuda:0', dtype=torch.float64)
tensor([-244.5685, -262.7834, -174.4827, -215.3492, -231.8144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-244.2162, -262.5292, -174.3087, -215.2216, -231.6940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1542, device='cuda:0', dtype=torch.float64)
tensor([-243.8890, -262.3057, -174.1161, -215.0282, -231.5632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1243, device='cuda:0', dtype=torch.float64)
tensor([-243.6337, -262.1132, -174.0613, -214.9645, -231.4711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1481, device='cuda:0', dtype=torch.float64)
tensor([-243.2720, -261.8694, -173.9354, -214.7645, -231.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1312, device='cuda:0', dtype=torch.float64)
tensor([-242.8698, -261.6498, -173.8500, -214.5969, -231.1204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1449, device='cuda:0', dtype=torch.float64)
tensor([-242.3270, -261.2821, -173.6857, -214.4022, -230.9924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1291, device='cuda:0', dtype=torch.float64)
tensor([-241.8050, -260.8359, -173.3897, -214.0592, -230.7745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1190, device='cuda:0', dtype=torch.float64)
tensor([-241.2444, -260.5761, -173.1476, -213.6935, -230.5548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1464, device='cuda:0', dtype=torch.float64)
tensor([-240.8034, -260.1297, -172.9742, -213.4791, -230.4195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1519, device='cuda:0', dtype=torch.float64)
tensor([-240.4391, -259.5999, -172.8055, -213.2524, -230.2790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1446, device='cuda:0', dtype=torch.float64)
tensor([-239.8425, -258.9708, -172.6310, -213.0747, -230.0883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1334, device='cuda:0', dtype=torch.float64)
tensor([-239.3742, -258.4319, -172.4974, -212.8832, -229.8833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1256, device='cuda:0', dtype=torch.float64)
tensor([-238.9199, -258.1140, -172.4163, -212.7332, -229.7312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1469, device='cuda:0', dtype=torch.float64)
tensor([-238.4796, -257.9727, -172.3385, -212.5515, -229.6410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1058, device='cuda:0', dtype=torch.float64)
tensor([-238.0101, -257.8737, -172.2864, -212.4500, -229.5964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1195, device='cuda:0', dtype=torch.float64)
tensor([-237.6228, -257.7751, -172.2569, -212.3522, -229.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1242, device='cuda:0', dtype=torch.float64)
tensor([-237.1911, -257.6343, -172.2009, -212.2808, -229.4870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1210, device='cuda:0', dtype=torch.float64)
tensor([-236.7478, -257.4048, -172.1380, -212.2363, -229.4270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1196, device='cuda:0', dtype=torch.float64)
tensor([-236.2331, -257.1313, -171.9418, -212.1157, -229.3137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1146, device='cuda:0', dtype=torch.float64)
tensor([-235.9867, -256.9295, -171.8083, -212.0441, -229.2520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1379, device='cuda:0', dtype=torch.float64)
tensor([-235.6981, -256.9400, -171.6755, -211.8939, -229.1265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1470, device='cuda:0', dtype=torch.float64)
tensor([-235.4791, -256.9205, -171.5695, -211.7027, -228.9934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1574, device='cuda:0', dtype=torch.float64)
tensor([-235.3513, -257.0531, -171.5082, -211.6595, -228.9490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1298, device='cuda:0', dtype=torch.float64)
tensor([-235.2694, -257.2566, -171.5438, -211.7457, -228.9589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1257, device='cuda:0', dtype=torch.float64)
tensor([-235.1557, -257.3407, -171.5740, -211.6588, -228.9823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1478, device='cuda:0', dtype=torch.float64)
tensor([-235.0335, -257.2818, -171.5276, -211.5338, -229.0109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([-235.0351, -257.2777, -171.6238, -211.5847, -229.0750],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1480, device='cuda:0', dtype=torch.float64)
tensor([-235.2535, -257.2795, -171.7852, -211.7913, -229.2341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1328, device='cuda:0', dtype=torch.float64)
tensor([-235.4952, -257.1714, -171.9381, -211.9668, -229.3621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1254, device='cuda:0', dtype=torch.float64)
tensor([-235.7727, -257.1646, -172.1264, -212.2843, -229.5400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1153, device='cuda:0', dtype=torch.float64)
tensor([-235.9652, -257.0463, -172.3577, -212.6542, -229.7380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1285, device='cuda:0', dtype=torch.float64)
tensor([-236.0368, -256.7302, -172.4873, -212.9173, -229.8967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1456, device='cuda:0', dtype=torch.float64)
tensor([-236.1841, -256.5267, -172.5437, -213.0754, -229.9413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1433, device='cuda:0', dtype=torch.float64)
tensor([-236.4120, -256.4729, -172.6370, -213.3156, -230.0353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-236.7120, -256.6011, -172.7801, -213.5742, -230.1331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1176, device='cuda:0', dtype=torch.float64)
tensor([-237.0607, -256.8445, -172.9349, -213.8008, -230.2033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1177, device='cuda:0', dtype=torch.float64)
tensor([-237.2689, -257.1244, -173.1903, -214.0678, -230.2891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1243, device='cuda:0', dtype=torch.float64)
tensor([-237.5412, -257.5106, -173.4986, -214.4318, -230.4303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1101, device='cuda:0', dtype=torch.float64)
tensor([-237.6994, -257.8620, -173.7783, -214.7969, -230.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1150, device='cuda:0', dtype=torch.float64)
tensor([-237.8532, -258.0840, -174.0539, -215.1537, -230.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1505, device='cuda:0', dtype=torch.float64)
tensor([-238.1445, -258.4234, -174.3635, -215.4560, -230.7820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1491, device='cuda:0', dtype=torch.float64)
tensor([-238.3992, -258.5012, -174.6227, -215.7931, -230.9435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0912, device='cuda:0', dtype=torch.float64)
tensor([-238.5502, -258.6755, -174.9053, -216.0607, -231.1090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1169, device='cuda:0', dtype=torch.float64)
tensor([-238.7779, -258.6896, -175.1692, -216.3182, -231.2663],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1343, device='cuda:0', dtype=torch.float64)
tensor([-238.8624, -258.5142, -175.2954, -216.3727, -231.3029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1526, device='cuda:0', dtype=torch.float64)
tensor([-238.8250, -258.2025, -175.3651, -216.3845, -231.2539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1284, device='cuda:0', dtype=torch.float64)
tensor([-238.7790, -257.9113, -175.4385, -216.4497, -231.2197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1256, device='cuda:0', dtype=torch.float64)
tensor([-238.6036, -257.3979, -175.4702, -216.5040, -231.1292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1224, device='cuda:0', dtype=torch.float64)
tensor([-238.4717, -256.8290, -175.4978, -216.5982, -231.0700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1225, device='cuda:0', dtype=torch.float64)
tensor([-238.2871, -256.3813, -175.5599, -216.6648, -230.9604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1172, device='cuda:0', dtype=torch.float64)
tensor([-238.1618, -255.8632, -175.5066, -216.6360, -230.7721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1160, device='cuda:0', dtype=torch.float64)
tensor([-238.0989, -255.4575, -175.5726, -216.6821, -230.6522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1329, device='cuda:0', dtype=torch.float64)
tensor([-237.8803, -255.0232, -175.5654, -216.6862, -230.5410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1188, device='cuda:0', dtype=torch.float64)
tensor([-237.7448, -254.5398, -175.6069, -216.7431, -230.5370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1241, device='cuda:0', dtype=torch.float64)
tensor([-237.7471, -254.0522, -175.5919, -216.7510, -230.4860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1220, device='cuda:0', dtype=torch.float64)
tensor([-237.7732, -253.7670, -175.5957, -216.7915, -230.4475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1207, device='cuda:0', dtype=torch.float64)
tensor([-237.8152, -253.5986, -175.6450, -216.8670, -230.4650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1300, device='cuda:0', dtype=torch.float64)
tensor([-237.9205, -253.4565, -175.7497, -216.9795, -230.5809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1183, device='cuda:0', dtype=torch.float64)
tensor([-238.0412, -253.4196, -175.8443, -217.0978, -230.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1298, device='cuda:0', dtype=torch.float64)
tensor([-238.0366, -253.5121, -175.9213, -217.1897, -230.8329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1198, device='cuda:0', dtype=torch.float64)
tensor([-238.0952, -253.6646, -176.0067, -217.3233, -231.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0961, device='cuda:0', dtype=torch.float64)
tensor([-238.1115, -253.8904, -176.1098, -217.4494, -231.2145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1068, device='cuda:0', dtype=torch.float64)
tensor([-238.1717, -254.1028, -176.1793, -217.5080, -231.3741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1511, device='cuda:0', dtype=torch.float64)
tensor([-238.1339, -254.1846, -176.1692, -217.4891, -231.4938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1208, device='cuda:0', dtype=torch.float64)
tensor([-238.1426, -254.3606, -176.2301, -217.5737, -231.6479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1518, device='cuda:0', dtype=torch.float64)
tensor([-238.1538, -254.2497, -176.2300, -217.5978, -231.8576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1169, device='cuda:0', dtype=torch.float64)
tensor([-238.1660, -254.0266, -176.2423, -217.6418, -232.0622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1156, device='cuda:0', dtype=torch.float64)
tensor([-238.1293, -253.7868, -176.1905, -217.5544, -232.2307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1273, device='cuda:0', dtype=torch.float64)
tensor([-238.1656, -253.5747, -176.1572, -217.4445, -232.4119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1304, device='cuda:0', dtype=torch.float64)
tensor([-238.1523, -253.3899, -176.1944, -217.4249, -232.5934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1173, device='cuda:0', dtype=torch.float64)
tensor([-238.0931, -253.3225, -176.2616, -217.3832, -232.7690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1119, device='cuda:0', dtype=torch.float64)
tensor([-238.0871, -253.1559, -176.3687, -217.3782, -232.9152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1233, device='cuda:0', dtype=torch.float64)
tensor([-238.0478, -252.9369, -176.3912, -217.3479, -233.0278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1525, device='cuda:0', dtype=torch.float64)
tensor([-237.9825, -252.7519, -176.3017, -217.1483, -233.0308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1331, device='cuda:0', dtype=torch.float64)
tensor([-237.8376, -252.5439, -176.1717, -216.9842, -232.9278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1068, device='cuda:0', dtype=torch.float64)
tensor([-237.6333, -252.2155, -176.0608, -216.8162, -232.7882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1274, device='cuda:0', dtype=torch.float64)
tensor([-237.4944, -251.9619, -175.9853, -216.6597, -232.6674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1159, device='cuda:0', dtype=torch.float64)
tensor([-237.3860, -251.9382, -176.0275, -216.5608, -232.5357],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1187, device='cuda:0', dtype=torch.float64)
tensor([-237.1434, -251.7834, -175.9565, -216.4347, -232.3861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1188, device='cuda:0', dtype=torch.float64)
tensor([-236.8078, -251.7970, -175.9232, -216.3668, -232.2443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0982, device='cuda:0', dtype=torch.float64)
tensor([-236.5442, -251.9299, -175.9340, -216.3175, -232.1746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1261, device='cuda:0', dtype=torch.float64)
tensor([-236.1531, -251.9247, -175.8678, -216.1818, -232.0217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1237, device='cuda:0', dtype=torch.float64)
tensor([-235.7189, -251.7637, -175.7984, -216.0881, -231.8689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1138, device='cuda:0', dtype=torch.float64)
tensor([-235.4138, -251.5480, -175.7416, -216.0630, -231.7515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1244, device='cuda:0', dtype=torch.float64)
tensor([-235.1160, -251.1287, -175.6467, -215.9476, -231.5754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1170, device='cuda:0', dtype=torch.float64)
tensor([-234.6915, -250.7391, -175.5369, -215.7363, -231.3321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1365, device='cuda:0', dtype=torch.float64)
tensor([-234.1560, -250.3368, -175.4869, -215.5596, -231.0578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1241, device='cuda:0', dtype=torch.float64)
tensor([-233.7112, -249.8768, -175.3979, -215.3957, -230.8209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1098, device='cuda:0', dtype=torch.float64)
tensor([-233.3065, -249.6378, -175.3145, -215.2378, -230.5795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1525, device='cuda:0', dtype=torch.float64)
tensor([-232.9443, -249.4607, -175.2856, -215.1010, -230.3502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1341, device='cuda:0', dtype=torch.float64)
tensor([-232.7725, -249.4512, -175.3547, -215.0257, -230.1509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1309, device='cuda:0', dtype=torch.float64)
tensor([-232.6478, -249.3380, -175.4145, -215.0267, -229.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1142, device='cuda:0', dtype=torch.float64)
tensor([-232.5909, -249.2670, -175.4351, -215.0506, -229.8141],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1027, device='cuda:0', dtype=torch.float64)
tensor([-232.6151, -249.1778, -175.4394, -215.0492, -229.7133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-232.5725, -248.8847, -175.3927, -215.0585, -229.6303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1088, device='cuda:0', dtype=torch.float64)
tensor([-232.5806, -248.5612, -175.3073, -215.0448, -229.5391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1283, device='cuda:0', dtype=torch.float64)
tensor([-232.5820, -248.3083, -175.2818, -215.0710, -229.4951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1220, device='cuda:0', dtype=torch.float64)
tensor([-232.5386, -248.0614, -175.2229, -215.0272, -229.4260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1053, device='cuda:0', dtype=torch.float64)
tensor([-232.4714, -247.6769, -175.1008, -214.9907, -229.3237],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1075, device='cuda:0', dtype=torch.float64)
tensor([-232.5725, -247.3216, -175.0037, -215.0407, -229.3293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1385, device='cuda:0', dtype=torch.float64)
tensor([-232.7841, -246.8495, -174.9305, -215.1866, -229.3671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1307, device='cuda:0', dtype=torch.float64)
tensor([-232.8969, -246.2774, -174.8023, -215.2896, -229.3292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1383, device='cuda:0', dtype=torch.float64)
tensor([-233.1278, -245.7028, -174.7003, -215.4789, -229.4244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1091, device='cuda:0', dtype=torch.float64)
tensor([-233.3341, -245.0534, -174.5605, -215.5935, -229.4725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1160, device='cuda:0', dtype=torch.float64)
tensor([-233.4620, -244.5711, -174.4819, -215.6331, -229.4627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1226, device='cuda:0', dtype=torch.float64)
tensor([-233.5435, -243.9977, -174.4945, -215.7660, -229.4457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-233.6305, -243.5303, -174.5869, -215.9964, -229.5456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1125, device='cuda:0', dtype=torch.float64)
tensor([-233.7440, -243.1146, -174.6853, -216.1933, -229.6505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1279, device='cuda:0', dtype=torch.float64)
tensor([-233.7978, -242.8202, -174.8199, -216.3856, -229.8069],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1441, device='cuda:0', dtype=torch.float64)
tensor([-233.8830, -242.7283, -174.9764, -216.5708, -229.9329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1153, device='cuda:0', dtype=torch.float64)
tensor([-233.8647, -242.6440, -175.1307, -216.7102, -230.0458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1189, device='cuda:0', dtype=torch.float64)
tensor([-233.7538, -242.7527, -175.3052, -216.8115, -230.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1370, device='cuda:0', dtype=torch.float64)
tensor([-233.7685, -242.9660, -175.5167, -216.9445, -230.2466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1086, device='cuda:0', dtype=torch.float64)
tensor([-233.8228, -243.2725, -175.7966, -217.0982, -230.3885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1004, device='cuda:0', dtype=torch.float64)
tensor([-234.0317, -243.4958, -176.1018, -217.3511, -230.5768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1109, device='cuda:0', dtype=torch.float64)
tensor([-234.0940, -243.7585, -176.3571, -217.5567, -230.7498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1203, device='cuda:0', dtype=torch.float64)
tensor([-234.1578, -243.9723, -176.5744, -217.6803, -230.8553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1609, device='cuda:0', dtype=torch.float64)
tensor([-234.2913, -244.1495, -176.7614, -217.7851, -231.0360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1153, device='cuda:0', dtype=torch.float64)
tensor([-234.3120, -244.1769, -176.8957, -217.7488, -231.1774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1261, device='cuda:0', dtype=torch.float64)
tensor([-234.4486, -244.0835, -177.0467, -217.7478, -231.2959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([-234.6981, -244.1574, -177.2589, -217.7895, -231.4745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1064, device='cuda:0', dtype=torch.float64)
tensor([-234.9721, -244.3441, -177.4954, -217.8616, -231.6469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([-235.2745, -244.4539, -177.6946, -217.9379, -231.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1048, device='cuda:0', dtype=torch.float64)
tensor([-235.6178, -244.4946, -177.8937, -218.0207, -231.9449],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1165, device='cuda:0', dtype=torch.float64)
tensor([-235.9493, -244.4940, -178.0814, -218.1151, -231.9768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1307, device='cuda:0', dtype=torch.float64)
tensor([-236.1011, -244.6196, -178.3270, -218.1495, -231.9983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1042, device='cuda:0', dtype=torch.float64)
tensor([-236.2187, -244.6008, -178.5307, -218.1756, -231.9828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1071, device='cuda:0', dtype=torch.float64)
tensor([-236.3183, -244.4769, -178.7537, -218.3041, -232.0115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1128, device='cuda:0', dtype=torch.float64)
tensor([-236.5005, -244.3805, -178.9637, -218.4494, -232.0165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1311, device='cuda:0', dtype=torch.float64)
tensor([-236.6804, -244.4510, -179.2340, -218.6664, -232.0724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1134, device='cuda:0', dtype=torch.float64)
tensor([-236.7996, -244.6224, -179.4827, -218.7988, -232.0780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1258, device='cuda:0', dtype=torch.float64)
tensor([-236.7585, -244.7326, -179.6860, -218.8696, -232.0957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-236.6977, -244.4897, -179.7537, -218.9539, -232.1373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1003, device='cuda:0', dtype=torch.float64)
tensor([-236.4794, -244.2570, -179.7950, -218.9825, -232.1598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1181, device='cuda:0', dtype=torch.float64)
tensor([-236.1415, -243.8561, -179.7061, -218.9807, -232.1405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1007, device='cuda:0', dtype=torch.float64)
tensor([-235.7337, -243.5148, -179.6052, -218.9197, -232.1321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1105, device='cuda:0', dtype=torch.float64)
tensor([-235.4228, -243.1887, -179.5686, -218.9407, -232.1588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0984, device='cuda:0', dtype=torch.float64)
tensor([-235.0958, -243.0456, -179.5698, -218.9044, -232.1565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1202, device='cuda:0', dtype=torch.float64)
tensor([-234.8829, -242.8986, -179.6083, -218.9675, -232.2313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1056, device='cuda:0', dtype=torch.float64)
tensor([-234.6328, -242.7036, -179.6444, -219.0834, -232.3555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1116, device='cuda:0', dtype=torch.float64)
tensor([-234.2443, -242.5034, -179.6163, -219.1404, -232.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0934, device='cuda:0', dtype=torch.float64)
tensor([-233.8830, -242.3338, -179.6133, -219.1971, -232.4489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0965, device='cuda:0', dtype=torch.float64)
tensor([-233.6967, -242.3484, -179.6969, -219.3450, -232.4908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1120, device='cuda:0', dtype=torch.float64)
tensor([-233.4795, -242.2394, -179.6512, -219.4270, -232.4738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1227, device='cuda:0', dtype=torch.float64)
tensor([-233.4093, -242.2040, -179.6255, -219.5092, -232.4507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1245, device='cuda:0', dtype=torch.float64)
tensor([-233.3050, -242.2315, -179.5499, -219.4454, -232.4267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0960, device='cuda:0', dtype=torch.float64)
tensor([-233.2498, -242.2109, -179.4942, -219.3973, -232.3653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1013, device='cuda:0', dtype=torch.float64)
tensor([-233.1673, -242.2805, -179.4054, -219.2977, -232.2548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0990, device='cuda:0', dtype=torch.float64)
tensor([-233.1573, -242.2354, -179.3990, -219.2790, -232.2106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1018, device='cuda:0', dtype=torch.float64)
tensor([-233.0342, -242.1361, -179.3333, -219.2003, -232.1217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1223, device='cuda:0', dtype=torch.float64)
tensor([-232.8576, -242.1720, -179.3048, -219.1351, -231.9776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1033, device='cuda:0', dtype=torch.float64)
tensor([-232.7527, -242.0754, -179.2266, -219.0015, -231.7885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1330, device='cuda:0', dtype=torch.float64)
tensor([-232.6272, -242.0228, -179.2018, -218.8713, -231.6651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1280, device='cuda:0', dtype=torch.float64)
tensor([-232.5582, -242.1170, -179.2187, -218.7466, -231.5757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1188, device='cuda:0', dtype=torch.float64)
tensor([-232.4929, -242.1569, -179.1632, -218.6524, -231.4786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-232.3854, -242.2141, -179.0313, -218.4948, -231.3536],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1251, device='cuda:0', dtype=torch.float64)
tensor([-232.2721, -242.2120, -178.9085, -218.3361, -231.2535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1126, device='cuda:0', dtype=torch.float64)
tensor([-232.2306, -242.2356, -178.7689, -218.2593, -231.2559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1071, device='cuda:0', dtype=torch.float64)
tensor([-232.2260, -242.2563, -178.6714, -218.1808, -231.2700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1222, device='cuda:0', dtype=torch.float64)
tensor([-232.2191, -242.2581, -178.5273, -218.1172, -231.2771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-232.2028, -242.3109, -178.4096, -218.0474, -231.2878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1108, device='cuda:0', dtype=torch.float64)
tensor([-232.2066, -242.2505, -178.2618, -217.9838, -231.2250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0981, device='cuda:0', dtype=torch.float64)
tensor([-232.1192, -242.0831, -178.1158, -217.9241, -231.1424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1121, device='cuda:0', dtype=torch.float64)
tensor([-232.1028, -242.0170, -178.0912, -217.9331, -231.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1040, device='cuda:0', dtype=torch.float64)
tensor([-232.1114, -241.8491, -178.0184, -217.9300, -231.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1090, device='cuda:0', dtype=torch.float64)
tensor([-232.0789, -241.7042, -178.0071, -217.9584, -230.9786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1347, device='cuda:0', dtype=torch.float64)
tensor([-232.0596, -241.4001, -178.0296, -218.0592, -230.8922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1057, device='cuda:0', dtype=torch.float64)
tensor([-231.9776, -241.0607, -178.0064, -218.1684, -230.7610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1412, device='cuda:0', dtype=torch.float64)
tensor([-231.9772, -240.6672, -177.9238, -218.2527, -230.7018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-231.9156, -240.2512, -177.8191, -218.3081, -230.5883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0953, device='cuda:0', dtype=torch.float64)
tensor([-231.8874, -239.8556, -177.7090, -218.3209, -230.4166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0907, device='cuda:0', dtype=torch.float64)
tensor([-231.9726, -239.5271, -177.6258, -218.3416, -230.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1217, device='cuda:0', dtype=torch.float64)
tensor([-232.1476, -239.3459, -177.6405, -218.3633, -230.1188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1172, device='cuda:0', dtype=torch.float64)
tensor([-232.3105, -239.1849, -177.6592, -218.3785, -230.0040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1029, device='cuda:0', dtype=torch.float64)
tensor([-232.3789, -239.1746, -177.6549, -218.3115, -229.9490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1204, device='cuda:0', dtype=torch.float64)
tensor([-232.4115, -239.1643, -177.6206, -218.2764, -229.9139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-232.3766, -239.3028, -177.6575, -218.2317, -229.9402],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1117, device='cuda:0', dtype=torch.float64)
tensor([-232.2897, -239.4794, -177.6764, -218.1446, -230.0377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0995, device='cuda:0', dtype=torch.float64)
tensor([-232.2663, -239.6261, -177.6739, -218.0919, -230.1056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1085, device='cuda:0', dtype=torch.float64)
tensor([-232.2436, -239.7693, -177.6821, -218.0042, -230.1443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0851, device='cuda:0', dtype=torch.float64)
tensor([-232.2181, -239.9875, -177.7396, -217.9526, -230.1722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1111, device='cuda:0', dtype=torch.float64)
tensor([-232.2080, -240.2367, -177.8242, -217.8315, -230.1916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0977, device='cuda:0', dtype=torch.float64)
tensor([-232.2671, -240.5392, -177.9560, -217.7350, -230.2721],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1161, device='cuda:0', dtype=torch.float64)
tensor([-232.2974, -240.7452, -178.0598, -217.6022, -230.3120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-232.3201, -240.8243, -178.1852, -217.5157, -230.3998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1000, device='cuda:0', dtype=torch.float64)
tensor([-232.4552, -240.8674, -178.4130, -217.5189, -230.5263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1218, device='cuda:0', dtype=torch.float64)
tensor([-232.4890, -240.8777, -178.5949, -217.4831, -230.6101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1000, device='cuda:0', dtype=torch.float64)
tensor([-232.4438, -240.8503, -178.6966, -217.3113, -230.6041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1095, device='cuda:0', dtype=torch.float64)
tensor([-232.4287, -240.7318, -178.7958, -217.1522, -230.6331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1161, device='cuda:0', dtype=torch.float64)
tensor([-232.4669, -240.6586, -178.9875, -217.0967, -230.7507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([-232.5173, -240.6532, -179.1978, -217.0155, -230.8140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1276, device='cuda:0', dtype=torch.float64)
tensor([-232.5220, -240.5407, -179.3447, -216.9735, -230.8460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0894, device='cuda:0', dtype=torch.float64)
tensor([-232.5449, -240.3515, -179.4794, -216.9619, -230.8907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-232.6619, -240.0992, -179.6270, -217.0169, -230.9356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0913, device='cuda:0', dtype=torch.float64)
tensor([-232.7730, -239.8298, -179.8133, -217.0569, -230.9781],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1038, device='cuda:0', dtype=torch.float64)
tensor([-232.9587, -239.6426, -180.0094, -217.1705, -231.1040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0979, device='cuda:0', dtype=torch.float64)
tensor([-233.0036, -239.2934, -180.1229, -217.2367, -231.1739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-233.0349, -238.9412, -180.1973, -217.2601, -231.2026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1201, device='cuda:0', dtype=torch.float64)
tensor([-233.2389, -238.5082, -180.2539, -217.3305, -231.2486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1094, device='cuda:0', dtype=torch.float64)
tensor([-233.4264, -238.1358, -180.3547, -217.5015, -231.3312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1124, device='cuda:0', dtype=torch.float64)
tensor([-233.6012, -237.6947, -180.3804, -217.5842, -231.3647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1093, device='cuda:0', dtype=torch.float64)
tensor([-233.7260, -237.2385, -180.3516, -217.6118, -231.3638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0920, device='cuda:0', dtype=torch.float64)
tensor([-233.8996, -236.8439, -180.3665, -217.6307, -231.3399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0974, device='cuda:0', dtype=torch.float64)
tensor([-234.0903, -236.5023, -180.3349, -217.6899, -231.3278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0978, device='cuda:0', dtype=torch.float64)
tensor([-234.2680, -236.2707, -180.3262, -217.7790, -231.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0956, device='cuda:0', dtype=torch.float64)
tensor([-234.3485, -236.0409, -180.3236, -217.9103, -231.3260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-234.4211, -235.7880, -180.2887, -218.0543, -231.3009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1022, device='cuda:0', dtype=torch.float64)
tensor([-234.5529, -235.5327, -180.3120, -218.2468, -231.3309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0948, device='cuda:0', dtype=torch.float64)
tensor([-234.5995, -235.3399, -180.3458, -218.4079, -231.3480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1097, device='cuda:0', dtype=torch.float64)
tensor([-234.6460, -235.2263, -180.4275, -218.5674, -231.4059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1083, device='cuda:0', dtype=torch.float64)
tensor([-234.5517, -235.1178, -180.4565, -218.6483, -231.3877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1069, device='cuda:0', dtype=torch.float64)
tensor([-234.5094, -234.9731, -180.4397, -218.7134, -231.3337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0750, device='cuda:0', dtype=torch.float64)
tensor([-234.5894, -234.8903, -180.4983, -218.7952, -231.3278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1505, device='cuda:0', dtype=torch.float64)
tensor([-234.6715, -234.9039, -180.6653, -218.9738, -231.4222],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1094, device='cuda:0', dtype=torch.float64)
tensor([-234.7354, -234.9825, -180.7746, -219.0713, -231.4271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1129, device='cuda:0', dtype=torch.float64)
tensor([-234.9825, -235.0571, -180.9351, -219.2214, -231.5295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-235.1837, -235.0322, -181.0785, -219.3544, -231.6122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-235.4169, -234.9915, -181.2188, -219.5045, -231.6512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0938, device='cuda:0', dtype=torch.float64)
tensor([-235.7431, -234.9200, -181.3334, -219.6918, -231.6908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0720, device='cuda:0', dtype=torch.float64)
tensor([-236.0413, -234.8119, -181.4036, -219.8224, -231.6874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0881, device='cuda:0', dtype=torch.float64)
tensor([-236.3984, -234.7744, -181.5240, -219.9842, -231.7133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-236.6373, -234.8024, -181.6722, -220.1581, -231.7099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-236.8569, -234.7618, -181.7811, -220.2449, -231.6418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1125, device='cuda:0', dtype=torch.float64)
tensor([-237.0036, -234.8517, -181.9713, -220.3419, -231.6281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0837, device='cuda:0', dtype=torch.float64)
tensor([-237.1387, -235.0148, -182.0838, -220.3312, -231.5374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0945, device='cuda:0', dtype=torch.float64)
tensor([-237.3361, -235.0208, -182.1526, -220.3727, -231.4944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0951, device='cuda:0', dtype=torch.float64)
tensor([-237.5677, -235.0120, -182.1769, -220.4348, -231.4611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0884, device='cuda:0', dtype=torch.float64)
tensor([-237.7194, -234.9336, -182.1652, -220.4558, -231.3808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0971, device='cuda:0', dtype=torch.float64)
tensor([-237.8469, -234.7833, -182.1980, -220.4986, -231.3385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-238.0131, -234.6637, -182.2589, -220.5185, -231.2983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-237.9913, -234.3673, -182.2294, -220.3858, -231.1977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0851, device='cuda:0', dtype=torch.float64)
tensor([-238.0704, -234.1466, -182.2527, -220.3523, -231.1544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0777, device='cuda:0', dtype=torch.float64)
tensor([-238.1687, -233.9675, -182.2740, -220.2932, -231.1300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0730, device='cuda:0', dtype=torch.float64)
tensor([-238.3151, -233.7627, -182.2936, -220.2934, -231.1067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0935, device='cuda:0', dtype=torch.float64)
tensor([-238.3894, -233.5881, -182.2858, -220.2551, -231.0702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1012, device='cuda:0', dtype=torch.float64)
tensor([-238.3956, -233.4045, -182.2440, -220.1927, -231.0446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-238.3366, -233.2586, -182.1707, -220.0754, -230.9995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0856, device='cuda:0', dtype=torch.float64)
tensor([-238.3736, -233.0367, -182.0946, -220.0364, -230.9670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0962, device='cuda:0', dtype=torch.float64)
tensor([-238.2949, -232.8634, -181.9823, -219.8888, -230.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0942, device='cuda:0', dtype=torch.float64)
tensor([-238.2216, -232.6128, -181.8740, -219.7411, -230.7882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0821, device='cuda:0', dtype=torch.float64)
tensor([-238.1644, -232.3988, -181.7500, -219.6306, -230.7607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0974, device='cuda:0', dtype=torch.float64)
tensor([-238.1110, -232.1549, -181.5700, -219.4204, -230.6444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1103, device='cuda:0', dtype=torch.float64)
tensor([-238.0804, -231.8944, -181.3537, -219.2169, -230.5565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1028, device='cuda:0', dtype=torch.float64)
tensor([-237.9819, -231.5430, -181.1418, -219.0485, -230.4488],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0852, device='cuda:0', dtype=torch.float64)
tensor([-237.8700, -231.2129, -180.9131, -218.8668, -230.3430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0997, device='cuda:0', dtype=torch.float64)
tensor([-237.8131, -230.9408, -180.7604, -218.7252, -230.3283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1075, device='cuda:0', dtype=torch.float64)
tensor([-237.7045, -230.5909, -180.5659, -218.5830, -230.3221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-237.5282, -230.3022, -180.4368, -218.4497, -230.2975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0865, device='cuda:0', dtype=torch.float64)
tensor([-237.3593, -230.0891, -180.3247, -218.3589, -230.2912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([-237.1220, -229.9361, -180.2756, -218.3631, -230.3353],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0898, device='cuda:0', dtype=torch.float64)
tensor([-236.8646, -229.7807, -180.2063, -218.3197, -230.3373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1014, device='cuda:0', dtype=torch.float64)
tensor([-236.7343, -229.6386, -180.1604, -218.2653, -230.3534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0877, device='cuda:0', dtype=torch.float64)
tensor([-236.6777, -229.6085, -180.1400, -218.1852, -230.3732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0824, device='cuda:0', dtype=torch.float64)
tensor([-236.5992, -229.5930, -180.0845, -218.0769, -230.3639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0909, device='cuda:0', dtype=torch.float64)
tensor([-236.5283, -229.5983, -180.0404, -217.9628, -230.3761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0853, device='cuda:0', dtype=torch.float64)
tensor([-236.4847, -229.6452, -180.0602, -217.8982, -230.4099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1010, device='cuda:0', dtype=torch.float64)
tensor([-236.3484, -229.6895, -180.0919, -217.8468, -230.3883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0974, device='cuda:0', dtype=torch.float64)
tensor([-236.2730, -229.6740, -180.1691, -217.8174, -230.3768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0837, device='cuda:0', dtype=torch.float64)
tensor([-236.1195, -229.7022, -180.2132, -217.6880, -230.3049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1210, device='cuda:0', dtype=torch.float64)
tensor([-235.9237, -229.6985, -180.2240, -217.5612, -230.2730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0686, device='cuda:0', dtype=torch.float64)
tensor([-235.7407, -229.6983, -180.2274, -217.4988, -230.2712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0944, device='cuda:0', dtype=torch.float64)
tensor([-235.5552, -229.6959, -180.2129, -217.4788, -230.2793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1317, device='cuda:0', dtype=torch.float64)
tensor([-235.4974, -229.6927, -180.2711, -217.5588, -230.3606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0920, device='cuda:0', dtype=torch.float64)
tensor([-235.4351, -229.7260, -180.3489, -217.6053, -230.3812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0919, device='cuda:0', dtype=torch.float64)
tensor([-235.3971, -229.7255, -180.4208, -217.6676, -230.4329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1199, device='cuda:0', dtype=torch.float64)
tensor([-235.2694, -229.7472, -180.4668, -217.6939, -230.4301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0954, device='cuda:0', dtype=torch.float64)
tensor([-235.0805, -229.6476, -180.5041, -217.7704, -230.4401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0873, device='cuda:0', dtype=torch.float64)
tensor([-234.8988, -229.6259, -180.5498, -217.8032, -230.3877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-234.7286, -229.5286, -180.5274, -217.8370, -230.3000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0885, device='cuda:0', dtype=torch.float64)
tensor([-234.4773, -229.3949, -180.4724, -217.8107, -230.1622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0889, device='cuda:0', dtype=torch.float64)
tensor([-234.3221, -229.2262, -180.3829, -217.8063, -230.0600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1638, device='cuda:0', dtype=torch.float64)
tensor([-234.2632, -229.1171, -180.3400, -217.8006, -229.9944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1171, device='cuda:0', dtype=torch.float64)
tensor([-234.1785, -229.1191, -180.3864, -217.8826, -230.0042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0965, device='cuda:0', dtype=torch.float64)
tensor([-234.0601, -229.0734, -180.3497, -217.8772, -229.9631],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1083, device='cuda:0', dtype=torch.float64)
tensor([-233.8995, -228.8416, -180.3392, -217.8831, -229.8795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0912, device='cuda:0', dtype=torch.float64)
tensor([-233.8066, -228.4921, -180.3038, -217.9059, -229.7333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1002, device='cuda:0', dtype=torch.float64)
tensor([-233.6240, -228.2753, -180.3035, -217.8562, -229.6058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-233.5434, -228.1112, -180.2319, -217.7494, -229.4442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0838, device='cuda:0', dtype=torch.float64)
tensor([-233.5358, -227.9857, -180.1797, -217.5711, -229.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0878, device='cuda:0', dtype=torch.float64)
tensor([-233.6025, -227.8644, -180.1285, -217.4317, -229.1311],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0820, device='cuda:0', dtype=torch.float64)
tensor([-233.6557, -227.7111, -180.0238, -217.2813, -228.9985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1234, device='cuda:0', dtype=torch.float64)
tensor([-233.7669, -227.5169, -179.8757, -217.0808, -228.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0755, device='cuda:0', dtype=torch.float64)
tensor([-233.8430, -227.1951, -179.6925, -216.8868, -228.5969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0858, device='cuda:0', dtype=torch.float64)
tensor([-233.9003, -226.9251, -179.5343, -216.7114, -228.4480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-234.1252, -226.6585, -179.4292, -216.6638, -228.3646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0991, device='cuda:0', dtype=torch.float64)
tensor([-234.2514, -226.4242, -179.3401, -216.5660, -228.3018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0981, device='cuda:0', dtype=torch.float64)
tensor([-234.4021, -226.2400, -179.2885, -216.5248, -228.2959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0742, device='cuda:0', dtype=torch.float64)
tensor([-234.5240, -226.0277, -179.2456, -216.5601, -228.2803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-234.5685, -225.8159, -179.1928, -216.6797, -228.3310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0869, device='cuda:0', dtype=torch.float64)
tensor([-234.5972, -225.6738, -179.1445, -216.7301, -228.3717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0878, device='cuda:0', dtype=torch.float64)
tensor([-234.5706, -225.5149, -179.1149, -216.8610, -228.4105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0755, device='cuda:0', dtype=torch.float64)
tensor([-234.4560, -225.3672, -179.0631, -216.9281, -228.4099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0825, device='cuda:0', dtype=torch.float64)
tensor([-234.2501, -225.2345, -178.9259, -216.8885, -228.3672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0723, device='cuda:0', dtype=torch.float64)
tensor([-234.0063, -225.1105, -178.7525, -216.7547, -228.3076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-233.8524, -225.0291, -178.6311, -216.6819, -228.2969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-233.7569, -224.9983, -178.5547, -216.6360, -228.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0880, device='cuda:0', dtype=torch.float64)
tensor([-233.7371, -225.0850, -178.5741, -216.6621, -228.3302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-233.7000, -225.2224, -178.5757, -216.6730, -228.3674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0975, device='cuda:0', dtype=torch.float64)
tensor([-233.5711, -225.3887, -178.5587, -216.6027, -228.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0875, device='cuda:0', dtype=torch.float64)
tensor([-233.4765, -225.5093, -178.6282, -216.5907, -228.3333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-233.4362, -225.6203, -178.6977, -216.5455, -228.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0989, device='cuda:0', dtype=torch.float64)
tensor([-233.5759, -225.6458, -178.7296, -216.4836, -228.3862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1175, device='cuda:0', dtype=torch.float64)
tensor([-233.7496, -225.6790, -178.7732, -216.4722, -228.4152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0709, device='cuda:0', dtype=torch.float64)
tensor([-233.8542, -225.7183, -178.8139, -216.4616, -228.4646],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-234.1601, -225.9046, -178.8716, -216.4466, -228.4870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0898, device='cuda:0', dtype=torch.float64)
tensor([-234.4946, -225.9447, -178.9046, -216.4602, -228.5029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-234.7934, -225.9842, -178.9028, -216.4683, -228.5161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0678, device='cuda:0', dtype=torch.float64)
tensor([-235.0912, -225.9770, -178.8773, -216.4936, -228.5667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-235.3701, -226.0133, -178.8548, -216.5488, -228.6503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0835, device='cuda:0', dtype=torch.float64)
tensor([-235.5669, -226.0487, -178.8294, -216.6408, -228.7534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0804, device='cuda:0', dtype=torch.float64)
tensor([-235.7465, -226.1198, -178.8388, -216.7573, -228.8687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0911, device='cuda:0', dtype=torch.float64)
tensor([-235.9714, -226.3225, -178.9074, -216.9141, -229.0308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0764, device='cuda:0', dtype=torch.float64)
tensor([-236.1432, -226.4635, -178.9804, -217.0898, -229.1942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-236.3146, -226.6744, -179.0666, -217.2590, -229.3433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0871, device='cuda:0', dtype=torch.float64)
tensor([-236.4302, -226.7588, -179.1572, -217.4390, -229.4802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1082, device='cuda:0', dtype=torch.float64)
tensor([-236.5332, -226.7469, -179.2357, -217.5857, -229.6096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-236.5991, -226.8406, -179.2858, -217.6613, -229.6728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0720, device='cuda:0', dtype=torch.float64)
tensor([-236.7742, -226.9320, -179.3204, -217.7469, -229.7249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0993, device='cuda:0', dtype=torch.float64)
tensor([-236.8525, -226.9374, -179.3331, -217.8427, -229.7859],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0801, device='cuda:0', dtype=torch.float64)
tensor([-236.9773, -226.9084, -179.2935, -217.8765, -229.7759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0872, device='cuda:0', dtype=torch.float64)
tensor([-237.0906, -226.9422, -179.2898, -217.8926, -229.7997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0893, device='cuda:0', dtype=torch.float64)
tensor([-237.1952, -226.9239, -179.3103, -217.9507, -229.8637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0932, device='cuda:0', dtype=torch.float64)
tensor([-237.2490, -226.8784, -179.3855, -217.9895, -229.9328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0879, device='cuda:0', dtype=torch.float64)
tensor([-237.2288, -226.7304, -179.4363, -218.0912, -230.0283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-237.1496, -226.4880, -179.4278, -218.1600, -230.1345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0822, device='cuda:0', dtype=torch.float64)
tensor([-237.1015, -226.2282, -179.4189, -218.2511, -230.2473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-236.9861, -225.9518, -179.3981, -218.3106, -230.2939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0877, device='cuda:0', dtype=torch.float64)
tensor([-236.8743, -225.6462, -179.3878, -218.3219, -230.3103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-236.8235, -225.3843, -179.3695, -218.3357, -230.3074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0954, device='cuda:0', dtype=torch.float64)
tensor([-236.7350, -225.0435, -179.3454, -218.3303, -230.2889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0875, device='cuda:0', dtype=torch.float64)
tensor([-236.6128, -224.6638, -179.3233, -218.2590, -230.2021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-236.5207, -224.3547, -179.3083, -218.1302, -230.0941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0926, device='cuda:0', dtype=torch.float64)
tensor([-236.5016, -223.9568, -179.2864, -217.9632, -229.9831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-236.6178, -223.5923, -179.3320, -217.9042, -229.9807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0740, device='cuda:0', dtype=torch.float64)
tensor([-236.7209, -223.3552, -179.3950, -217.8538, -229.9571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0908, device='cuda:0', dtype=torch.float64)
tensor([-236.8670, -223.2403, -179.5398, -217.9359, -229.9943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0883, device='cuda:0', dtype=torch.float64)
tensor([-236.9854, -223.1428, -179.7105, -218.0292, -230.0197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0913, device='cuda:0', dtype=torch.float64)
tensor([-237.2066, -223.0679, -179.9290, -218.1448, -230.0380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-237.3787, -222.9918, -180.0800, -218.2240, -230.0147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0817, device='cuda:0', dtype=torch.float64)
tensor([-237.5161, -223.0203, -180.2254, -218.3142, -229.9633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0753, device='cuda:0', dtype=torch.float64)
tensor([-237.6687, -222.9467, -180.3247, -218.3511, -229.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-237.9010, -222.8786, -180.4069, -218.4517, -229.8155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1116, device='cuda:0', dtype=torch.float64)
tensor([-238.1320, -222.9108, -180.4314, -218.5200, -229.7538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0767, device='cuda:0', dtype=torch.float64)
tensor([-238.2271, -222.9140, -180.4538, -218.6133, -229.7478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0776, device='cuda:0', dtype=torch.float64)
tensor([-238.2840, -222.9947, -180.4455, -218.6256, -229.6994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1036, device='cuda:0', dtype=torch.float64)
tensor([-238.1816, -223.0542, -180.3909, -218.5734, -229.6448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0920, device='cuda:0', dtype=torch.float64)
tensor([-237.9937, -223.0104, -180.3184, -218.5298, -229.5605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-237.8077, -222.9990, -180.2779, -218.4809, -229.5265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0915, device='cuda:0', dtype=torch.float64)
tensor([-237.5861, -223.0495, -180.2023, -218.4551, -229.4244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0807, device='cuda:0', dtype=torch.float64)
tensor([-237.4158, -223.1078, -180.1438, -218.4492, -229.3100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0789, device='cuda:0', dtype=torch.float64)
tensor([-237.3033, -223.1291, -180.1046, -218.5088, -229.2586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0759, device='cuda:0', dtype=torch.float64)
tensor([-237.0771, -223.2098, -180.1355, -218.5435, -229.2260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-236.9377, -223.2389, -180.1131, -218.5380, -229.1519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-236.8186, -223.3042, -180.0807, -218.4751, -229.0966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0900, device='cuda:0', dtype=torch.float64)
tensor([-236.6069, -223.2810, -179.9877, -218.3701, -229.0221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0869, device='cuda:0', dtype=torch.float64)
tensor([-236.4544, -223.1719, -179.7694, -218.1825, -228.8982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0902, device='cuda:0', dtype=torch.float64)
tensor([-236.3586, -223.0667, -179.5117, -217.9653, -228.8024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0936, device='cuda:0', dtype=torch.float64)
tensor([-236.3373, -222.8246, -179.2373, -217.7903, -228.7145],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0923, device='cuda:0', dtype=torch.float64)
tensor([-236.3073, -222.6685, -179.0248, -217.6356, -228.5908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0781, device='cuda:0', dtype=torch.float64)
tensor([-236.2864, -222.5620, -178.8423, -217.4954, -228.5058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0836, device='cuda:0', dtype=torch.float64)
tensor([-236.4149, -222.4113, -178.6777, -217.4346, -228.4538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-236.5707, -222.2101, -178.5523, -217.3367, -228.3734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0837, device='cuda:0', dtype=torch.float64)
tensor([-236.7602, -222.0270, -178.5078, -217.3889, -228.3386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0662, device='cuda:0', dtype=torch.float64)
tensor([-236.8999, -221.8528, -178.4666, -217.4251, -228.2951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-237.0967, -221.8673, -178.4756, -217.4510, -228.2649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0777, device='cuda:0', dtype=torch.float64)
tensor([-237.2953, -221.8053, -178.4965, -217.5023, -228.2828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0899, device='cuda:0', dtype=torch.float64)
tensor([-237.5742, -221.6529, -178.4677, -217.5385, -228.2738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0821, device='cuda:0', dtype=torch.float64)
tensor([-237.8124, -221.3980, -178.4458, -217.6591, -228.3310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-238.2056, -221.0379, -178.4343, -217.8146, -228.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0774, device='cuda:0', dtype=torch.float64)
tensor([-238.5834, -220.7638, -178.4776, -218.0000, -228.5181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0930, device='cuda:0', dtype=torch.float64)
tensor([-238.7727, -220.4885, -178.4921, -218.1135, -228.5712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1183, device='cuda:0', dtype=torch.float64)
tensor([-238.8840, -220.2716, -178.5057, -218.2264, -228.6387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0847, device='cuda:0', dtype=torch.float64)
tensor([-238.9943, -220.0957, -178.5357, -218.2844, -228.6968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0875, device='cuda:0', dtype=torch.float64)
tensor([-239.1230, -219.9942, -178.5877, -218.3250, -228.8239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0914, device='cuda:0', dtype=torch.float64)
tensor([-239.1953, -219.9220, -178.6204, -218.3077, -228.8921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0697, device='cuda:0', dtype=torch.float64)
tensor([-239.3273, -219.9707, -178.6822, -218.2923, -228.9979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-239.3761, -219.9919, -178.7790, -218.2460, -229.0629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0850, device='cuda:0', dtype=torch.float64)
tensor([-239.3336, -219.9780, -178.7968, -218.1878, -229.1071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0798, device='cuda:0', dtype=torch.float64)
tensor([-239.2003, -219.9922, -178.7731, -218.0860, -229.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0787, device='cuda:0', dtype=torch.float64)
tensor([-239.0021, -219.9808, -178.7401, -217.9582, -229.0657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1041, device='cuda:0', dtype=torch.float64)
tensor([-238.8729, -220.0948, -178.7570, -217.8715, -229.0795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-238.7486, -220.2192, -178.7451, -217.7907, -229.0599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0763, device='cuda:0', dtype=torch.float64)
tensor([-238.7451, -220.2585, -178.7756, -217.7666, -229.0692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0683, device='cuda:0', dtype=torch.float64)
tensor([-238.6924, -220.2528, -178.7788, -217.7188, -229.0404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0783, device='cuda:0', dtype=torch.float64)
tensor([-238.5903, -220.3089, -178.8594, -217.6715, -229.0111],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0836, device='cuda:0', dtype=torch.float64)
tensor([-238.4674, -220.4753, -178.9594, -217.6290, -228.9782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0967, device='cuda:0', dtype=torch.float64)
tensor([-238.2891, -220.7335, -179.1082, -217.6018, -229.0276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-238.1196, -220.8187, -179.1885, -217.5863, -229.0356],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0746, device='cuda:0', dtype=torch.float64)
tensor([-237.9953, -220.7903, -179.2382, -217.5911, -229.0469],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0758, device='cuda:0', dtype=torch.float64)
tensor([-237.8714, -220.6805, -179.2294, -217.5470, -228.9923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-237.8008, -220.5053, -179.2448, -217.5145, -228.9535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-237.6766, -220.2540, -179.2010, -217.4470, -228.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0820, device='cuda:0', dtype=torch.float64)
tensor([-237.4790, -220.0768, -179.1789, -217.3654, -228.8231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0779, device='cuda:0', dtype=torch.float64)
tensor([-237.3429, -219.8179, -179.1563, -217.3370, -228.7985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0832, device='cuda:0', dtype=torch.float64)
tensor([-237.1293, -219.5342, -179.1612, -217.2985, -228.7891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0811, device='cuda:0', dtype=torch.float64)
tensor([-237.0507, -219.2842, -179.2343, -217.3538, -228.8171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0873, device='cuda:0', dtype=torch.float64)
tensor([-236.9800, -219.0260, -179.3154, -217.4054, -228.8238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0771, device='cuda:0', dtype=torch.float64)
tensor([-236.9902, -218.8000, -179.4143, -217.5354, -228.8865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0746, device='cuda:0', dtype=torch.float64)
tensor([-237.0099, -218.5606, -179.4876, -217.6490, -228.9479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-236.9853, -218.3240, -179.5254, -217.6925, -228.9808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-236.9763, -218.0923, -179.5665, -217.7348, -229.0372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0800, device='cuda:0', dtype=torch.float64)
tensor([-237.0368, -217.8878, -179.6197, -217.8300, -229.0884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0615, device='cuda:0', dtype=torch.float64)
tensor([-237.0909, -217.7439, -179.6508, -217.8864, -229.0687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0659, device='cuda:0', dtype=torch.float64)
tensor([-237.0948, -217.6165, -179.6573, -217.8967, -229.0366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0882, device='cuda:0', dtype=torch.float64)
tensor([-237.0725, -217.5484, -179.6691, -217.8622, -228.9878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0650, device='cuda:0', dtype=torch.float64)
tensor([-237.0679, -217.5353, -179.7059, -217.8370, -228.9459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0636, device='cuda:0', dtype=torch.float64)
tensor([-236.9850, -217.5597, -179.6852, -217.7239, -228.8336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-236.9275, -217.5484, -179.6507, -217.6026, -228.7038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0762, device='cuda:0', dtype=torch.float64)
tensor([-236.8051, -217.5959, -179.6695, -217.5132, -228.5741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0737, device='cuda:0', dtype=torch.float64)
tensor([-236.5280, -217.6747, -179.6748, -217.4160, -228.4391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0830, device='cuda:0', dtype=torch.float64)
tensor([-236.3172, -217.7508, -179.6663, -217.3787, -228.2778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0655, device='cuda:0', dtype=torch.float64)
tensor([-236.2163, -217.8908, -179.6953, -217.3668, -228.1459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0595, device='cuda:0', dtype=torch.float64)
tensor([-236.2113, -217.9939, -179.7439, -217.3559, -227.9941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0831, device='cuda:0', dtype=torch.float64)
tensor([-236.1628, -218.2259, -179.7879, -217.3383, -227.8414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0933, device='cuda:0', dtype=torch.float64)
tensor([-236.1531, -218.3261, -179.8165, -217.3324, -227.7121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0740, device='cuda:0', dtype=torch.float64)
tensor([-236.2369, -218.4087, -179.8182, -217.3034, -227.5696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0757, device='cuda:0', dtype=torch.float64)
tensor([-236.2983, -218.3180, -179.7562, -217.1993, -227.4215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-236.3721, -218.1835, -179.7195, -217.1224, -227.2639],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0829, device='cuda:0', dtype=torch.float64)
tensor([-236.3704, -217.9779, -179.6534, -216.9822, -227.0742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0802, device='cuda:0', dtype=torch.float64)
tensor([-236.3357, -217.7783, -179.5597, -216.8270, -226.8840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0810, device='cuda:0', dtype=torch.float64)
tensor([-236.2913, -217.6348, -179.5375, -216.6509, -226.7156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0802, device='cuda:0', dtype=torch.float64)
tensor([-236.2132, -217.4682, -179.4880, -216.4525, -226.5509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0939, device='cuda:0', dtype=torch.float64)
tensor([-236.2248, -217.3117, -179.5041, -216.3456, -226.4760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0781, device='cuda:0', dtype=torch.float64)
tensor([-236.1217, -217.1466, -179.4980, -216.2362, -226.3476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0754, device='cuda:0', dtype=torch.float64)
tensor([-235.9141, -216.9355, -179.4794, -216.1165, -226.2387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0644, device='cuda:0', dtype=torch.float64)
tensor([-235.8145, -216.7348, -179.4532, -216.0039, -226.1776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0801, device='cuda:0', dtype=torch.float64)
tensor([-235.8662, -216.5655, -179.5391, -216.0385, -226.1933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0760, device='cuda:0', dtype=torch.float64)
tensor([-235.9428, -216.3698, -179.6249, -216.0615, -226.2434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0726, device='cuda:0', dtype=torch.float64)
tensor([-236.0353, -216.1566, -179.6640, -216.1161, -226.2788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-236.0923, -215.9278, -179.7220, -216.1869, -226.3436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0721, device='cuda:0', dtype=torch.float64)
tensor([-236.2195, -215.6815, -179.7727, -216.2547, -226.4380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0781, device='cuda:0', dtype=torch.float64)
tensor([-236.3694, -215.3759, -179.8188, -216.3774, -226.5149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-236.4400, -215.1191, -179.8907, -216.4630, -226.6203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0768, device='cuda:0', dtype=torch.float64)
tensor([-236.5615, -214.8332, -179.9677, -216.5852, -226.7293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1147, device='cuda:0', dtype=torch.float64)
tensor([-236.7200, -214.6014, -180.0358, -216.7492, -226.8331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-236.8608, -214.3208, -180.0505, -216.8447, -226.8802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0627, device='cuda:0', dtype=torch.float64)
tensor([-237.1210, -214.0512, -180.0736, -216.9604, -226.9063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0834, device='cuda:0', dtype=torch.float64)
tensor([-237.4143, -213.7746, -180.1551, -217.1162, -226.9413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0789, device='cuda:0', dtype=torch.float64)
tensor([-237.7333, -213.4465, -180.2549, -217.3043, -226.9630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0705, device='cuda:0', dtype=torch.float64)
tensor([-237.9350, -213.1439, -180.3317, -217.4407, -226.9579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0752, device='cuda:0', dtype=torch.float64)
tensor([-238.0214, -212.8755, -180.4113, -217.5478, -226.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0681, device='cuda:0', dtype=torch.float64)
tensor([-237.9981, -212.5417, -180.4502, -217.6089, -226.8605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-238.0167, -212.2862, -180.5562, -217.6857, -226.8273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0786, device='cuda:0', dtype=torch.float64)
tensor([-238.1214, -212.0282, -180.6509, -217.7899, -226.8274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0724, device='cuda:0', dtype=torch.float64)
tensor([-238.2522, -211.8484, -180.7207, -217.9126, -226.8103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1000, device='cuda:0', dtype=torch.float64)
tensor([-238.3517, -211.6844, -180.8220, -218.0189, -226.8040],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0778, device='cuda:0', dtype=torch.float64)
tensor([-238.3750, -211.5272, -180.8611, -218.0921, -226.7883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-238.3991, -211.3893, -180.8854, -218.1128, -226.7509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0772, device='cuda:0', dtype=torch.float64)
tensor([-238.4620, -211.2766, -180.9152, -218.1586, -226.7411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-238.5525, -211.0800, -180.9135, -218.1938, -226.7210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0859, device='cuda:0', dtype=torch.float64)
tensor([-238.6850, -210.8432, -180.9350, -218.2606, -226.6628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-238.8963, -210.6109, -180.9109, -218.3054, -226.6083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0549, device='cuda:0', dtype=torch.float64)
tensor([-239.0782, -210.3832, -180.8531, -218.3165, -226.5341],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0774, device='cuda:0', dtype=torch.float64)
tensor([-239.2472, -210.2674, -180.8132, -218.3180, -226.4730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0666, device='cuda:0', dtype=torch.float64)
tensor([-239.4517, -210.1076, -180.7764, -218.3410, -226.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0805, device='cuda:0', dtype=torch.float64)
tensor([-239.6430, -210.0041, -180.6942, -218.3098, -226.3711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-239.8374, -209.9762, -180.6181, -218.2714, -226.2903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0678, device='cuda:0', dtype=torch.float64)
tensor([-240.0373, -210.0483, -180.6027, -218.2871, -226.2727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0809, device='cuda:0', dtype=torch.float64)
tensor([-240.4598, -210.1135, -180.6275, -218.4156, -226.3374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0929, device='cuda:0', dtype=torch.float64)
tensor([-240.8028, -210.1222, -180.6311, -218.5492, -226.3616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0639, device='cuda:0', dtype=torch.float64)
tensor([-241.2098, -210.1482, -180.6583, -218.7590, -226.4556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-241.5923, -210.2585, -180.7082, -218.9351, -226.5264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0715, device='cuda:0', dtype=torch.float64)
tensor([-241.9670, -210.3977, -180.7563, -219.1062, -226.6225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0816, device='cuda:0', dtype=torch.float64)
tensor([-242.4086, -210.5348, -180.8080, -219.3037, -226.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0528, device='cuda:0', dtype=torch.float64)
tensor([-242.8423, -210.6453, -180.8613, -219.5039, -226.9101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0678, device='cuda:0', dtype=torch.float64)
tensor([-243.1326, -210.7305, -180.9157, -219.6412, -227.0350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0874, device='cuda:0', dtype=torch.float64)
tensor([-243.5075, -210.8317, -181.0409, -219.8333, -227.2163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-243.9383, -211.0252, -181.2211, -220.0513, -227.4239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0744, device='cuda:0', dtype=torch.float64)
tensor([-244.2713, -211.2081, -181.3604, -220.2151, -227.6115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-244.5434, -211.4132, -181.4936, -220.3579, -227.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0849, device='cuda:0', dtype=torch.float64)
tensor([-244.8167, -211.6399, -181.5833, -220.4634, -227.9587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0612, device='cuda:0', dtype=torch.float64)
tensor([-245.0590, -211.8728, -181.6155, -220.5242, -228.0493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0722, device='cuda:0', dtype=torch.float64)
tensor([-245.2813, -212.0117, -181.6673, -220.5593, -228.1330],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0736, device='cuda:0', dtype=torch.float64)
tensor([-245.5743, -212.1969, -181.8052, -220.6441, -228.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0695, device='cuda:0', dtype=torch.float64)
tensor([-245.7901, -212.3768, -181.9291, -220.7099, -228.3411],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0894, device='cuda:0', dtype=torch.float64)
tensor([-246.0076, -212.4410, -182.0654, -220.7502, -228.3872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-246.2228, -212.5199, -182.1738, -220.7770, -228.4915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-246.2879, -212.5720, -182.2341, -220.7226, -228.5860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0601, device='cuda:0', dtype=torch.float64)
tensor([-246.3190, -212.5463, -182.2772, -220.6437, -228.6542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-246.4230, -212.4300, -182.2892, -220.6206, -228.7662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0748, device='cuda:0', dtype=torch.float64)
tensor([-246.5260, -212.2294, -182.3360, -220.6241, -228.8890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0681, device='cuda:0', dtype=torch.float64)
tensor([-246.5811, -212.0277, -182.3882, -220.6076, -228.9889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0711, device='cuda:0', dtype=torch.float64)
tensor([-246.5782, -211.9042, -182.4082, -220.5822, -229.0615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0827, device='cuda:0', dtype=torch.float64)
tensor([-246.6143, -211.8439, -182.5041, -220.6261, -229.1876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0667, device='cuda:0', dtype=torch.float64)
tensor([-246.5614, -211.6670, -182.5764, -220.6071, -229.2558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0680, device='cuda:0', dtype=torch.float64)
tensor([-246.4750, -211.4358, -182.6882, -220.6092, -229.3158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0688, device='cuda:0', dtype=torch.float64)
tensor([-246.4598, -211.3162, -182.8306, -220.6508, -229.4687],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-246.5184, -211.2079, -182.9868, -220.7234, -229.6507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-246.5653, -211.1048, -183.1542, -220.7672, -229.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-246.6411, -210.9771, -183.3100, -220.8313, -229.9667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0698, device='cuda:0', dtype=torch.float64)
tensor([-246.6484, -210.7733, -183.4176, -220.8493, -230.0819],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-246.6541, -210.6345, -183.5159, -220.8591, -230.2228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0862, device='cuda:0', dtype=torch.float64)
tensor([-246.7407, -210.5476, -183.6789, -220.9676, -230.4220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-246.8084, -210.4254, -183.8108, -221.0819, -230.5952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0639, device='cuda:0', dtype=torch.float64)
tensor([-246.8227, -210.3366, -183.8851, -221.1352, -230.6769],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0727, device='cuda:0', dtype=torch.float64)
tensor([-246.8269, -210.2794, -184.0052, -221.2077, -230.7879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0628, device='cuda:0', dtype=torch.float64)
tensor([-246.8579, -210.1934, -184.0939, -221.2609, -230.8427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0555, device='cuda:0', dtype=torch.float64)
tensor([-246.8657, -210.1536, -184.1697, -221.3207, -230.9344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-246.9217, -210.1474, -184.2517, -221.4032, -231.0296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-247.0081, -210.1568, -184.3459, -221.4708, -231.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-247.1468, -210.1796, -184.4220, -221.5407, -231.2064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0706, device='cuda:0', dtype=torch.float64)
tensor([-247.2247, -210.1332, -184.4268, -221.5842, -231.2556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0693, device='cuda:0', dtype=torch.float64)
tensor([-247.4091, -210.0514, -184.4241, -221.6519, -231.3153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0624, device='cuda:0', dtype=torch.float64)
tensor([-247.5574, -210.0179, -184.4228, -221.6648, -231.2868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0724, device='cuda:0', dtype=torch.float64)
tensor([-247.7728, -209.9795, -184.4300, -221.7453, -231.2729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-248.0529, -209.9092, -184.4439, -221.8172, -231.2386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-248.2576, -209.8034, -184.4531, -221.8457, -231.1718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-248.4674, -209.7354, -184.4487, -221.8683, -231.1140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0738, device='cuda:0', dtype=torch.float64)
tensor([-248.5716, -209.6734, -184.4665, -221.8729, -231.0590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0634, device='cuda:0', dtype=torch.float64)
tensor([-248.7121, -209.6608, -184.4698, -221.9024, -231.0307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-248.8234, -209.5811, -184.4673, -221.9203, -231.0103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0599, device='cuda:0', dtype=torch.float64)
tensor([-248.9001, -209.4813, -184.4555, -221.9068, -230.9858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0570, device='cuda:0', dtype=torch.float64)
tensor([-248.9781, -209.3612, -184.4236, -221.8739, -230.9127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0714, device='cuda:0', dtype=torch.float64)
tensor([-249.0293, -209.2933, -184.4167, -221.8497, -230.8628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-249.1446, -209.2662, -184.4472, -221.8239, -230.8266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0720, device='cuda:0', dtype=torch.float64)
tensor([-249.2903, -209.2727, -184.5171, -221.8531, -230.8395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0710, device='cuda:0', dtype=torch.float64)
tensor([-249.3664, -209.2749, -184.5322, -221.8929, -230.8176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0699, device='cuda:0', dtype=torch.float64)
tensor([-249.3869, -209.3132, -184.5406, -221.9312, -230.8275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0601, device='cuda:0', dtype=torch.float64)
tensor([-249.4294, -209.3878, -184.5329, -221.9934, -230.8700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-249.4092, -209.3749, -184.5037, -222.0570, -230.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0668, device='cuda:0', dtype=torch.float64)
tensor([-249.4069, -209.3870, -184.4959, -222.0864, -230.8680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-249.3955, -209.3958, -184.4942, -222.1062, -230.8561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0662, device='cuda:0', dtype=torch.float64)
tensor([-249.3623, -209.4308, -184.5118, -222.1173, -230.8574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-249.2384, -209.4055, -184.5201, -222.1402, -230.8420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-249.1184, -209.3601, -184.4907, -222.1331, -230.7921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0672, device='cuda:0', dtype=torch.float64)
tensor([-249.0348, -209.3904, -184.4959, -222.1446, -230.7768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0663, device='cuda:0', dtype=torch.float64)
tensor([-249.0384, -209.3693, -184.5017, -222.1388, -230.7381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0653, device='cuda:0', dtype=torch.float64)
tensor([-249.1185, -209.3889, -184.5210, -222.2263, -230.7463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-249.1560, -209.3502, -184.5699, -222.2819, -230.7442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0623, device='cuda:0', dtype=torch.float64)
tensor([-249.2455, -209.3097, -184.6072, -222.3648, -230.7441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0738, device='cuda:0', dtype=torch.float64)
tensor([-249.4068, -209.2341, -184.6468, -222.4850, -230.8071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0619, device='cuda:0', dtype=torch.float64)
tensor([-249.5647, -209.1608, -184.7322, -222.6215, -230.9414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-249.7479, -209.0269, -184.7821, -222.7268, -231.0758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-249.8961, -208.9567, -184.8640, -222.8209, -231.1916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0656, device='cuda:0', dtype=torch.float64)
tensor([-249.9876, -208.7321, -184.9018, -222.8609, -231.2633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0685, device='cuda:0', dtype=torch.float64)
tensor([-249.9682, -208.4736, -184.8555, -222.8217, -231.2295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0703, device='cuda:0', dtype=torch.float64)
tensor([-249.9420, -208.1762, -184.8694, -222.8385, -231.2371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-249.9062, -207.8486, -184.8800, -222.8460, -231.2506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0683, device='cuda:0', dtype=torch.float64)
tensor([-249.9012, -207.5439, -184.9323, -222.8581, -231.2660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-249.9414, -207.2059, -184.9683, -222.8729, -231.2901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0830, device='cuda:0', dtype=torch.float64)
tensor([-250.0787, -206.8447, -185.0642, -222.9595, -231.4032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0716, device='cuda:0', dtype=torch.float64)
tensor([-250.2299, -206.4683, -185.2289, -223.0927, -231.5055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-250.3540, -206.1995, -185.3482, -223.2064, -231.6006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-250.5530, -205.9393, -185.4920, -223.3251, -231.7058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0731, device='cuda:0', dtype=torch.float64)
tensor([-250.6593, -205.7540, -185.6523, -223.3991, -231.7670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0617, device='cuda:0', dtype=torch.float64)
tensor([-250.7884, -205.6335, -185.8170, -223.4347, -231.8283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0589, device='cuda:0', dtype=torch.float64)
tensor([-250.9400, -205.5065, -185.9965, -223.5003, -231.9293],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0581, device='cuda:0', dtype=torch.float64)
tensor([-251.0770, -205.3135, -186.1476, -223.5773, -231.9753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0553, device='cuda:0', dtype=torch.float64)
tensor([-251.1192, -205.1426, -186.2711, -223.6355, -231.9871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0611, device='cuda:0', dtype=torch.float64)
tensor([-251.1477, -204.9740, -186.4121, -223.7000, -231.9543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0648, device='cuda:0', dtype=torch.float64)
tensor([-251.1045, -204.8216, -186.4846, -223.6497, -231.8142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0718, device='cuda:0', dtype=torch.float64)
tensor([-251.0123, -204.7679, -186.5783, -223.5741, -231.6820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0689, device='cuda:0', dtype=torch.float64)
tensor([-250.9876, -204.7138, -186.6905, -223.5147, -231.5780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0729, device='cuda:0', dtype=torch.float64)
tensor([-251.1135, -204.6805, -186.8392, -223.5541, -231.5332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.1000, device='cuda:0', dtype=torch.float64)
tensor([-251.2574, -204.6508, -186.9617, -223.6413, -231.5160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0582, device='cuda:0', dtype=torch.float64)
tensor([-251.4538, -204.6257, -187.0245, -223.7318, -231.4688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-251.6823, -204.6234, -187.0963, -223.8039, -231.4314],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-251.9001, -204.6122, -187.1392, -223.8660, -231.3625],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0594, device='cuda:0', dtype=torch.float64)
tensor([-252.1318, -204.6630, -187.2535, -223.9481, -231.3441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0544, device='cuda:0', dtype=torch.float64)
tensor([-252.4031, -204.7345, -187.3719, -224.0689, -231.3651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0598, device='cuda:0', dtype=torch.float64)
tensor([-252.7091, -204.8372, -187.5104, -224.1990, -231.4285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0590, device='cuda:0', dtype=torch.float64)
tensor([-253.0148, -204.9539, -187.6143, -224.2992, -231.4914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-253.2521, -205.0615, -187.6860, -224.4118, -231.5596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0670, device='cuda:0', dtype=torch.float64)
tensor([-253.4265, -205.1810, -187.7697, -224.5352, -231.6144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0787, device='cuda:0', dtype=torch.float64)
tensor([-253.6643, -205.2928, -187.8480, -224.6631, -231.6988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0739, device='cuda:0', dtype=torch.float64)
tensor([-253.9674, -205.3657, -187.9162, -224.7896, -231.8260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-254.1943, -205.3957, -187.9280, -224.8605, -231.8978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0610, device='cuda:0', dtype=torch.float64)
tensor([-254.3807, -205.3867, -187.9019, -224.9347, -231.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-254.5207, -205.3333, -187.8377, -224.9821, -231.8618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0657, device='cuda:0', dtype=torch.float64)
tensor([-254.5282, -205.2234, -187.7378, -225.0092, -231.8016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0635, device='cuda:0', dtype=torch.float64)
tensor([-254.5922, -205.1622, -187.6367, -225.0679, -231.7752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0616, device='cuda:0', dtype=torch.float64)
tensor([-254.6580, -205.1059, -187.5282, -225.1572, -231.7731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0658, device='cuda:0', dtype=torch.float64)
tensor([-254.7074, -205.1385, -187.4168, -225.2123, -231.7626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0646, device='cuda:0', dtype=torch.float64)
tensor([-254.7635, -205.2404, -187.2800, -225.2811, -231.7187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0578, device='cuda:0', dtype=torch.float64)
tensor([-254.8290, -205.3011, -187.1661, -225.3416, -231.6891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-254.8910, -205.3424, -187.0980, -225.4224, -231.7071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-254.9625, -205.3089, -187.0642, -225.5349, -231.8053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-254.9803, -205.2672, -186.9904, -225.6277, -231.8385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-255.0842, -205.2198, -186.9213, -225.7203, -231.9007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0632, device='cuda:0', dtype=torch.float64)
tensor([-255.1279, -205.1361, -186.9073, -225.8311, -231.9869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0625, device='cuda:0', dtype=torch.float64)
tensor([-255.1577, -205.0822, -186.8829, -225.9610, -232.1099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0639, device='cuda:0', dtype=torch.float64)
tensor([-255.1211, -205.0530, -186.8187, -226.0576, -232.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0609, device='cuda:0', dtype=torch.float64)
tensor([-255.0706, -204.9269, -186.7265, -226.1321, -232.2591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0746, device='cuda:0', dtype=torch.float64)
tensor([-254.9883, -204.8185, -186.6091, -226.1586, -232.2740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0568, device='cuda:0', dtype=torch.float64)
tensor([-254.9541, -204.7640, -186.5566, -226.1663, -232.3241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-254.8592, -204.6445, -186.4751, -226.0979, -232.3420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0605, device='cuda:0', dtype=torch.float64)
tensor([-254.7770, -204.5073, -186.4275, -226.0151, -232.4157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0647, device='cuda:0', dtype=torch.float64)
tensor([-254.7546, -204.4218, -186.4345, -225.9985, -232.5556],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0586, device='cuda:0', dtype=torch.float64)
tensor([-254.7258, -204.3677, -186.3926, -225.9030, -232.6267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-254.7042, -204.3436, -186.3837, -225.8050, -232.6963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0545, device='cuda:0', dtype=torch.float64)
tensor([-254.7644, -204.3082, -186.4074, -225.7777, -232.8093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-254.8119, -204.3692, -186.4380, -225.7411, -232.9456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0707, device='cuda:0', dtype=torch.float64)
tensor([-255.0559, -204.4305, -186.5177, -225.7910, -233.1103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0601, device='cuda:0', dtype=torch.float64)
tensor([-255.1442, -204.4364, -186.5648, -225.7648, -233.2121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-255.2869, -204.5061, -186.6044, -225.7634, -233.2956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0725, device='cuda:0', dtype=torch.float64)
tensor([-255.3959, -204.5803, -186.6157, -225.7777, -233.3806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0665, device='cuda:0', dtype=torch.float64)
tensor([-255.5123, -204.5374, -186.5954, -225.7936, -233.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0660, device='cuda:0', dtype=torch.float64)
tensor([-255.6385, -204.4987, -186.5828, -225.8276, -233.5319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0531, device='cuda:0', dtype=torch.float64)
tensor([-255.8401, -204.4064, -186.5609, -225.8859, -233.5951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0622, device='cuda:0', dtype=torch.float64)
tensor([-255.9495, -204.3140, -186.5056, -225.9014, -233.6158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-255.9897, -204.1967, -186.4522, -225.9168, -233.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-255.9495, -204.0778, -186.4138, -225.8986, -233.5676],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0580, device='cuda:0', dtype=torch.float64)
tensor([-255.9068, -203.9532, -186.3656, -225.8843, -233.5198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0607, device='cuda:0', dtype=torch.float64)
tensor([-255.8986, -203.7831, -186.3402, -225.9096, -233.4993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0683, device='cuda:0', dtype=torch.float64)
tensor([-255.8839, -203.6276, -186.2782, -225.9225, -233.4561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0604, device='cuda:0', dtype=torch.float64)
tensor([-255.9798, -203.5133, -186.2083, -225.9465, -233.4456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-256.0741, -203.4224, -186.1952, -225.9569, -233.4932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0694, device='cuda:0', dtype=torch.float64)
tensor([-256.2839, -203.2707, -186.2057, -226.0262, -233.5717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-256.4638, -203.1362, -186.2022, -226.0967, -233.6207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-256.6266, -202.9903, -186.1714, -226.1236, -233.6284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0696, device='cuda:0', dtype=torch.float64)
tensor([-256.7749, -202.8411, -186.0925, -226.1340, -233.5623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-256.9399, -202.7219, -186.0435, -226.1737, -233.5410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-257.1529, -202.6121, -186.0278, -226.2545, -233.5373],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0631, device='cuda:0', dtype=torch.float64)
tensor([-257.3607, -202.5397, -186.0316, -226.3092, -233.5629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-257.5039, -202.4146, -185.9973, -226.2796, -233.5012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0699, device='cuda:0', dtype=torch.float64)
tensor([-257.6567, -202.2952, -185.9634, -226.2218, -233.4295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0701, device='cuda:0', dtype=torch.float64)
tensor([-257.7823, -202.0922, -185.9665, -226.1850, -233.3725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-257.8518, -201.9067, -185.9367, -226.1035, -233.2753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0564, device='cuda:0', dtype=torch.float64)
tensor([-257.8502, -201.7732, -185.9076, -226.0200, -233.1409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-257.7541, -201.6579, -185.8942, -225.8984, -233.0101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-257.7437, -201.6045, -185.9244, -225.8240, -232.8971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0699, device='cuda:0', dtype=torch.float64)
tensor([-257.8349, -201.6378, -185.9993, -225.8173, -232.8000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0574, device='cuda:0', dtype=torch.float64)
tensor([-257.8757, -201.7023, -186.0837, -225.8254, -232.7245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-257.9060, -201.8021, -186.1866, -225.7974, -232.7233],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-257.9985, -201.9049, -186.3088, -225.8397, -232.7644],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-258.0581, -201.9538, -186.3957, -225.8393, -232.7369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0561, device='cuda:0', dtype=torch.float64)
tensor([-258.0275, -201.9781, -186.4477, -225.8299, -232.6928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-257.9941, -202.0003, -186.4438, -225.7846, -232.6150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0511, device='cuda:0', dtype=torch.float64)
tensor([-257.8771, -201.9128, -186.4029, -225.6864, -232.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-257.6973, -201.8043, -186.3579, -225.5756, -232.2826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0537, device='cuda:0', dtype=torch.float64)
tensor([-257.5604, -201.7179, -186.3224, -225.4808, -232.1578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-257.4992, -201.7096, -186.3196, -225.4155, -232.0598],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-257.4555, -201.6922, -186.2827, -225.3381, -231.9367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-257.4348, -201.6268, -186.2249, -225.2622, -231.8192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-257.5374, -201.5191, -186.1788, -225.2887, -231.7266],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0563, device='cuda:0', dtype=torch.float64)
tensor([-257.6489, -201.3831, -186.1444, -225.3042, -231.6386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0620, device='cuda:0', dtype=torch.float64)
tensor([-257.7978, -201.2642, -186.0641, -225.3018, -231.5162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0573, device='cuda:0', dtype=torch.float64)
tensor([-258.0360, -201.1008, -185.9913, -225.3385, -231.4250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0538, device='cuda:0', dtype=torch.float64)
tensor([-258.3176, -200.9841, -185.9803, -225.4025, -231.4009],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-258.6221, -200.8672, -185.9902, -225.5167, -231.3846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0526, device='cuda:0', dtype=torch.float64)
tensor([-258.8169, -200.7612, -186.0157, -225.6340, -231.3988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0542, device='cuda:0', dtype=torch.float64)
tensor([-259.0058, -200.6254, -186.0338, -225.7581, -231.4318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0596, device='cuda:0', dtype=torch.float64)
tensor([-259.0397, -200.4080, -186.0381, -225.8363, -231.4331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-259.0655, -200.2172, -185.9975, -225.8514, -231.3599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-259.2008, -200.0352, -185.9388, -225.9253, -231.3173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-259.3481, -199.9074, -185.8671, -225.9759, -231.3015],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-259.4808, -199.7544, -185.8054, -226.0241, -231.2510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-259.5809, -199.6254, -185.7755, -226.0800, -231.2268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0582, device='cuda:0', dtype=torch.float64)
tensor([-259.7328, -199.5415, -185.7688, -226.1711, -231.2534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-259.9465, -199.4968, -185.8258, -226.3127, -231.3228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0460, device='cuda:0', dtype=torch.float64)
tensor([-260.2217, -199.4784, -185.8853, -226.4792, -231.3939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-260.4800, -199.3948, -185.9348, -226.6455, -231.4826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-260.7833, -199.3234, -185.9717, -226.8219, -231.5622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0657, device='cuda:0', dtype=torch.float64)
tensor([-261.1683, -199.3182, -186.0472, -226.9923, -231.6758],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0597, device='cuda:0', dtype=torch.float64)
tensor([-261.4883, -199.3725, -186.1120, -227.1160, -231.8241],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-261.8127, -199.4816, -186.1985, -227.2468, -231.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-262.0141, -199.5559, -186.2797, -227.2756, -232.0959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0669, device='cuda:0', dtype=torch.float64)
tensor([-262.2949, -199.6269, -186.3792, -227.3328, -232.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-262.5339, -199.7357, -186.4847, -227.3746, -232.2836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-262.6314, -199.8166, -186.5726, -227.3766, -232.3735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-262.8308, -199.9232, -186.6149, -227.3996, -232.5017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-262.8938, -200.0799, -186.6637, -227.3414, -232.5996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0566, device='cuda:0', dtype=torch.float64)
tensor([-262.9807, -200.1874, -186.7605, -227.3371, -232.7033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0529, device='cuda:0', dtype=torch.float64)
tensor([-263.0930, -200.2897, -186.8564, -227.3772, -232.8384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0517, device='cuda:0', dtype=torch.float64)
tensor([-263.1483, -200.3474, -186.9370, -227.4286, -232.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-263.1514, -200.3961, -187.0337, -227.4949, -233.0499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-263.0103, -200.4108, -187.0805, -227.5022, -233.0853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0652, device='cuda:0', dtype=torch.float64)
tensor([-262.8148, -200.4336, -187.1251, -227.4963, -233.1000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-262.5425, -200.4671, -187.1785, -227.4551, -233.0945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0483, device='cuda:0', dtype=torch.float64)
tensor([-262.1856, -200.5001, -187.1810, -227.3477, -233.0312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0489, device='cuda:0', dtype=torch.float64)
tensor([-261.7734, -200.5459, -187.1562, -227.1875, -232.9443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-261.4832, -200.5273, -187.1277, -227.0457, -232.8552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0741, device='cuda:0', dtype=torch.float64)
tensor([-261.2494, -200.4519, -187.0484, -226.9400, -232.6778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0430, device='cuda:0', dtype=torch.float64)
tensor([-261.0521, -200.4048, -186.9639, -226.8404, -232.5048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-260.8756, -200.3941, -186.8680, -226.7377, -232.3396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0472, device='cuda:0', dtype=torch.float64)
tensor([-260.7734, -200.4106, -186.7852, -226.6741, -232.2124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-260.6265, -200.4468, -186.6847, -226.5812, -232.0684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-260.5668, -200.4346, -186.6132, -226.5195, -231.9847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-260.5074, -200.3354, -186.5401, -226.4746, -231.9153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-260.4494, -200.2837, -186.5085, -226.4640, -231.8932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-260.4408, -200.1618, -186.4483, -226.4892, -231.8935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-260.4383, -200.0698, -186.4290, -226.5136, -231.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-260.5043, -199.9669, -186.4276, -226.5529, -231.9257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0502, device='cuda:0', dtype=torch.float64)
tensor([-260.5897, -199.8191, -186.4177, -226.6040, -231.9875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-260.6901, -199.7359, -186.3873, -226.6430, -232.0193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-260.8003, -199.6652, -186.3853, -226.6842, -232.0649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-260.9330, -199.5915, -186.3674, -226.7299, -232.1066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-261.0826, -199.4913, -186.3409, -226.7706, -232.1195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-261.1832, -199.4313, -186.2911, -226.8147, -232.1426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-261.2853, -199.3562, -186.2806, -226.8472, -232.2185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-261.3179, -199.2827, -186.2558, -226.8332, -232.2784],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-261.3894, -199.2092, -186.2330, -226.8159, -232.3365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0509, device='cuda:0', dtype=torch.float64)
tensor([-261.4628, -199.1036, -186.2268, -226.8142, -232.3777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0550, device='cuda:0', dtype=torch.float64)
tensor([-261.5279, -199.0671, -186.2349, -226.7906, -232.3981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-261.5921, -199.0629, -186.2519, -226.7382, -232.4116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-261.6925, -199.0787, -186.2335, -226.6855, -232.4114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-261.7089, -199.0697, -186.2249, -226.5973, -232.4374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0516, device='cuda:0', dtype=torch.float64)
tensor([-261.6881, -198.9797, -186.2011, -226.5103, -232.4557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0525, device='cuda:0', dtype=torch.float64)
tensor([-261.7616, -198.9071, -186.1785, -226.4297, -232.4692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-261.8786, -198.8059, -186.1759, -226.3883, -232.5465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-262.0114, -198.7406, -186.1951, -226.3628, -232.6055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-262.1074, -198.6394, -186.1912, -226.3089, -232.6166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0536, device='cuda:0', dtype=torch.float64)
tensor([-262.1754, -198.4975, -186.1722, -226.2593, -232.5614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0606, device='cuda:0', dtype=torch.float64)
tensor([-262.2930, -198.3879, -186.2258, -226.2239, -232.5272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-262.3965, -198.2727, -186.2296, -226.1912, -232.4608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-262.4933, -198.1619, -186.2384, -226.1554, -232.3776],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-262.6330, -198.0280, -186.2376, -226.1538, -232.3215],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-262.7328, -197.8978, -186.2441, -226.1314, -232.2771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0577, device='cuda:0', dtype=torch.float64)
tensor([-262.8884, -197.8568, -186.2602, -226.1001, -232.1793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0504, device='cuda:0', dtype=torch.float64)
tensor([-263.0200, -197.7551, -186.2504, -226.1035, -232.1333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-263.0646, -197.6280, -186.2323, -226.0895, -232.0640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0564, device='cuda:0', dtype=torch.float64)
tensor([-263.1256, -197.5174, -186.2660, -226.1331, -232.1072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-263.1843, -197.4321, -186.2725, -226.1414, -232.0898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-263.2140, -197.3670, -186.2779, -226.0885, -232.0321],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-263.1689, -197.3189, -186.2946, -226.0119, -232.0085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-263.0972, -197.2531, -186.2500, -225.9070, -231.9050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-263.0500, -197.2030, -186.2247, -225.8319, -231.8120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0480, device='cuda:0', dtype=torch.float64)
tensor([-263.0609, -197.1408, -186.2294, -225.7918, -231.7643],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0558, device='cuda:0', dtype=torch.float64)
tensor([-263.0150, -197.1258, -186.3031, -225.7681, -231.7584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0506, device='cuda:0', dtype=torch.float64)
tensor([-263.0022, -197.0687, -186.3745, -225.7658, -231.7683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-263.0098, -196.9882, -186.4637, -225.7996, -231.7995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-262.9961, -196.9504, -186.5677, -225.8529, -231.8484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-262.9269, -196.9336, -186.6552, -225.8522, -231.8490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0546, device='cuda:0', dtype=torch.float64)
tensor([-262.8377, -196.9569, -186.7423, -225.8329, -231.8550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0587, device='cuda:0', dtype=torch.float64)
tensor([-262.7824, -196.9914, -186.8723, -225.8866, -231.9609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-262.8107, -197.0805, -187.0001, -225.9617, -232.0768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0505, device='cuda:0', dtype=torch.float64)
tensor([-262.8308, -197.1977, -187.1365, -226.0432, -232.2313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-262.9272, -197.3193, -187.2399, -226.1427, -232.3923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0522, device='cuda:0', dtype=torch.float64)
tensor([-263.0959, -197.4517, -187.3731, -226.2919, -232.5548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-263.2390, -197.5407, -187.4926, -226.4213, -232.6645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-263.3726, -197.5708, -187.5873, -226.5373, -232.7366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-263.5092, -197.5996, -187.6394, -226.6356, -232.7833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-263.6750, -197.6093, -187.6905, -226.7127, -232.8193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-263.8747, -197.6057, -187.7092, -226.7639, -232.7977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0478, device='cuda:0', dtype=torch.float64)
tensor([-264.1050, -197.5836, -187.7034, -226.8502, -232.7589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0613, device='cuda:0', dtype=torch.float64)
tensor([-264.3706, -197.4772, -187.6679, -226.9302, -232.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-264.8058, -197.3401, -187.6495, -227.0695, -232.6814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-265.2185, -197.1719, -187.6258, -227.2164, -232.6565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-265.6214, -197.0058, -187.6197, -227.3729, -232.6128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0608, device='cuda:0', dtype=torch.float64)
tensor([-265.9909, -196.7962, -187.6479, -227.5470, -232.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-266.4665, -196.5582, -187.6876, -227.7499, -232.6391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-266.9410, -196.3229, -187.7525, -227.9585, -232.7034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0490, device='cuda:0', dtype=torch.float64)
tensor([-267.3548, -196.0458, -187.7635, -228.1129, -232.7033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-267.7228, -195.8307, -187.7972, -228.2638, -232.7280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-268.0114, -195.6705, -187.7930, -228.3496, -232.7047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-268.1984, -195.5003, -187.7245, -228.3574, -232.6223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0515, device='cuda:0', dtype=torch.float64)
tensor([-268.3443, -195.3851, -187.5971, -228.3033, -232.4828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0487, device='cuda:0', dtype=torch.float64)
tensor([-268.3750, -195.3615, -187.4748, -228.1964, -232.3185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0530, device='cuda:0', dtype=torch.float64)
tensor([-268.4969, -195.3329, -187.3687, -228.1318, -232.1939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0583, device='cuda:0', dtype=torch.float64)
tensor([-268.6089, -195.3115, -187.2322, -228.0743, -232.0236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-268.7656, -195.3388, -187.1648, -228.0301, -231.9125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-268.8786, -195.4665, -187.0943, -227.9554, -231.8027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-268.9086, -195.5523, -187.0003, -227.8164, -231.6918],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-268.8148, -195.5921, -186.9109, -227.6652, -231.6044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-268.7555, -195.6248, -186.8072, -227.5168, -231.5409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0429, device='cuda:0', dtype=torch.float64)
tensor([-268.6469, -195.6235, -186.7034, -227.3633, -231.4743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-268.4205, -195.5912, -186.5834, -227.1858, -231.3757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0435, device='cuda:0', dtype=torch.float64)
tensor([-268.2342, -195.5625, -186.4506, -227.0153, -231.2484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0496, device='cuda:0', dtype=torch.float64)
tensor([-268.0298, -195.5989, -186.3489, -226.8497, -231.1217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0456, device='cuda:0', dtype=torch.float64)
tensor([-267.8102, -195.5961, -186.2761, -226.7190, -231.0305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-267.6212, -195.5769, -186.2457, -226.6237, -230.9552],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-267.3713, -195.5124, -186.2293, -226.5264, -230.9229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0556, device='cuda:0', dtype=torch.float64)
tensor([-267.1785, -195.4434, -186.2503, -226.4378, -230.9057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-266.9706, -195.3514, -186.2518, -226.3506, -230.8713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-266.8295, -195.3016, -186.2546, -226.3063, -230.8640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0540, device='cuda:0', dtype=torch.float64)
tensor([-266.7908, -195.2327, -186.2427, -226.2357, -230.7966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0475, device='cuda:0', dtype=torch.float64)
tensor([-266.8222, -195.1460, -186.2328, -226.1788, -230.7312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-266.8120, -195.0430, -186.2418, -226.1211, -230.6809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-266.8119, -194.9279, -186.2449, -226.0604, -230.5937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-266.8244, -194.7689, -186.2398, -226.0137, -230.5212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0445, device='cuda:0', dtype=torch.float64)
tensor([-266.9281, -194.6856, -186.2414, -225.9759, -230.4677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0488, device='cuda:0', dtype=torch.float64)
tensor([-267.0232, -194.5685, -186.2216, -225.9110, -230.4192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-267.1739, -194.4449, -186.1957, -225.8633, -230.4003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0520, device='cuda:0', dtype=torch.float64)
tensor([-267.3254, -194.2929, -186.1753, -225.8424, -230.3550],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-267.5357, -194.1659, -186.1667, -225.8477, -230.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0547, device='cuda:0', dtype=torch.float64)
tensor([-267.8734, -194.0265, -186.2079, -225.8834, -230.3410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-268.0666, -193.9031, -186.2412, -225.8451, -230.3308],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-268.2141, -193.7960, -186.2541, -225.8279, -230.3300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0548, device='cuda:0', dtype=torch.float64)
tensor([-268.3725, -193.7294, -186.2863, -225.8114, -230.3470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-268.5362, -193.6877, -186.3362, -225.8184, -230.4044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-268.7078, -193.6263, -186.3683, -225.8186, -230.4246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0485, device='cuda:0', dtype=torch.float64)
tensor([-268.8287, -193.5877, -186.3858, -225.8341, -230.4271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-268.8843, -193.5710, -186.3845, -225.8639, -230.4205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0532, device='cuda:0', dtype=torch.float64)
tensor([-268.8393, -193.5485, -186.3669, -225.8591, -230.3966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0400, device='cuda:0', dtype=torch.float64)
tensor([-268.8093, -193.5579, -186.3389, -225.8763, -230.3604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-268.8286, -193.6397, -186.3590, -225.8801, -230.3174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-268.9840, -193.7803, -186.4338, -225.9483, -230.3725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0554, device='cuda:0', dtype=torch.float64)
tensor([-269.2427, -193.8718, -186.5067, -226.0695, -230.4452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-269.4865, -194.0045, -186.6076, -226.2058, -230.5204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0449, device='cuda:0', dtype=torch.float64)
tensor([-269.7001, -194.1286, -186.6757, -226.3004, -230.5839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-269.9002, -194.2228, -186.7366, -226.3748, -230.6587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0416, device='cuda:0', dtype=torch.float64)
tensor([-270.0862, -194.3247, -186.8171, -226.4572, -230.7874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0621, device='cuda:0', dtype=torch.float64)
tensor([-270.2180, -194.3937, -186.8674, -226.4746, -230.8406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-270.3181, -194.3952, -186.8889, -226.4766, -230.8766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-270.3827, -194.3577, -186.8791, -226.4273, -230.8813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-270.4756, -194.3925, -186.8657, -226.3779, -230.9052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-270.5493, -194.3978, -186.8721, -226.3550, -230.9467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0662, device='cuda:0', dtype=torch.float64)
tensor([-270.6531, -194.3695, -186.8971, -226.3726, -231.0093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-270.6338, -194.3265, -186.8898, -226.3192, -231.0102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-270.5459, -194.2481, -186.8627, -226.2227, -230.9480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-270.5748, -194.2041, -186.8613, -226.1966, -230.9726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-270.5412, -194.1278, -186.8783, -226.2043, -231.0055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0626, device='cuda:0', dtype=torch.float64)
tensor([-270.6328, -194.0977, -186.9242, -226.2598, -231.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-270.6825, -194.0449, -186.9583, -226.2760, -231.1246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0466, device='cuda:0', dtype=torch.float64)
tensor([-270.7038, -194.0032, -187.0340, -226.2980, -231.2066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-270.6893, -193.9624, -187.1226, -226.3055, -231.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-270.6772, -193.9268, -187.2187, -226.3416, -231.4251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-270.6660, -193.8295, -187.2785, -226.3324, -231.5238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-270.7022, -193.7307, -187.3261, -226.3066, -231.6074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-270.7932, -193.6298, -187.3783, -226.3009, -231.6958],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0469, device='cuda:0', dtype=torch.float64)
tensor([-270.8969, -193.5466, -187.4022, -226.3031, -231.7944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-270.9462, -193.4818, -187.4619, -226.3045, -231.9089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-270.9359, -193.4132, -187.5097, -226.2775, -231.9989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0492, device='cuda:0', dtype=torch.float64)
tensor([-270.8757, -193.3468, -187.5758, -226.2634, -232.1793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-270.8266, -193.3616, -187.6197, -226.2156, -232.3113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-270.7895, -193.4273, -187.6876, -226.1818, -232.4448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-270.7609, -193.4743, -187.7613, -226.1757, -232.5701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0630, device='cuda:0', dtype=torch.float64)
tensor([-270.8824, -193.5634, -187.8359, -226.1879, -232.7108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0640, device='cuda:0', dtype=torch.float64)
tensor([-270.9747, -193.6131, -187.8874, -226.2369, -232.8477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-270.9723, -193.6464, -187.9207, -226.2437, -232.9214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0535, device='cuda:0', dtype=torch.float64)
tensor([-270.9461, -193.7221, -187.9764, -226.2671, -232.9995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0507, device='cuda:0', dtype=torch.float64)
tensor([-270.9787, -193.8026, -188.0440, -226.3104, -233.1161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-270.9974, -193.8760, -188.0689, -226.3248, -233.1740],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0519, device='cuda:0', dtype=torch.float64)
tensor([-271.0257, -193.9199, -188.0815, -226.3919, -233.2600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-271.0713, -193.9263, -188.0924, -226.4670, -233.3561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0541, device='cuda:0', dtype=torch.float64)
tensor([-271.0952, -193.9070, -188.0646, -226.4958, -233.4181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-271.0638, -193.8940, -188.0295, -226.5061, -233.4871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-271.0108, -193.8606, -187.9704, -226.5179, -233.5611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0503, device='cuda:0', dtype=torch.float64)
tensor([-271.1032, -193.8438, -187.9791, -226.6010, -233.6899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0498, device='cuda:0', dtype=torch.float64)
tensor([-271.1858, -193.8450, -187.9417, -226.6284, -233.7171],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-271.1905, -193.8005, -187.8684, -226.5910, -233.6561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0510, device='cuda:0', dtype=torch.float64)
tensor([-271.2143, -193.7482, -187.7714, -226.5412, -233.5795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-271.2802, -193.7142, -187.6783, -226.5065, -233.5350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-271.3756, -193.6000, -187.5646, -226.4633, -233.4585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-271.4705, -193.5006, -187.4936, -226.4079, -233.3459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-271.6866, -193.4219, -187.4491, -226.4000, -233.2810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-271.8243, -193.3475, -187.3737, -226.3487, -233.1742],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0501, device='cuda:0', dtype=torch.float64)
tensor([-272.0319, -193.2992, -187.2952, -226.3061, -233.0912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-272.3108, -193.2511, -187.1909, -226.2832, -232.9975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-272.5122, -193.1733, -187.1384, -226.2782, -232.9229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-272.6751, -193.0959, -187.0781, -226.2487, -232.8270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0575, device='cuda:0', dtype=torch.float64)
tensor([-272.8405, -193.0543, -187.0293, -226.2187, -232.7322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0565, device='cuda:0', dtype=torch.float64)
tensor([-273.0511, -193.0649, -186.9747, -226.1889, -232.6386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0533, device='cuda:0', dtype=torch.float64)
tensor([-273.2446, -193.1846, -186.9187, -226.1294, -232.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0539, device='cuda:0', dtype=torch.float64)
tensor([-273.4042, -193.2742, -186.8903, -226.0629, -232.4024],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-273.5319, -193.3756, -186.8684, -225.9788, -232.3420],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0395, device='cuda:0', dtype=torch.float64)
tensor([-273.6000, -193.4398, -186.8301, -225.8898, -232.2830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-273.7127, -193.4823, -186.8130, -225.8372, -232.2406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0592, device='cuda:0', dtype=torch.float64)
tensor([-273.8027, -193.5173, -186.7888, -225.7593, -232.1133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-273.8875, -193.5327, -186.7877, -225.7300, -232.0340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-273.9843, -193.5278, -186.7695, -225.7003, -231.9385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-274.0296, -193.5668, -186.7396, -225.6292, -231.8448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-274.0958, -193.5424, -186.7101, -225.5550, -231.7098],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0474, device='cuda:0', dtype=torch.float64)
tensor([-274.1247, -193.5449, -186.6978, -225.4805, -231.5851],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-274.1111, -193.5231, -186.6565, -225.3732, -231.4573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-274.0542, -193.4654, -186.6160, -225.2647, -231.3689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-274.0212, -193.3345, -186.5574, -225.1461, -231.2645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-273.9704, -193.1978, -186.5046, -225.0353, -231.1985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-273.9579, -193.0777, -186.4858, -224.9722, -231.1476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-274.0213, -193.0252, -186.5074, -224.9466, -231.1424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-274.1096, -193.0467, -186.5569, -224.9512, -231.1983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-274.1600, -193.0317, -186.5659, -224.9290, -231.1890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-274.1627, -192.9887, -186.5712, -224.9103, -231.1863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-274.2181, -192.9518, -186.5834, -224.8921, -231.1690],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-274.3357, -192.8650, -186.5882, -224.9092, -231.1807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-274.4604, -192.7377, -186.6147, -224.9404, -231.1771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-274.5746, -192.6001, -186.6414, -224.9901, -231.1668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0579, device='cuda:0', dtype=torch.float64)
tensor([-274.5662, -192.4961, -186.6508, -225.0181, -231.1275],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-274.5535, -192.4369, -186.6816, -225.0761, -231.0952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0551, device='cuda:0', dtype=torch.float64)
tensor([-274.5018, -192.4219, -186.7448, -225.1250, -231.1434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0486, device='cuda:0', dtype=torch.float64)
tensor([-274.4937, -192.3848, -186.7874, -225.1798, -231.1790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-274.4721, -192.3591, -186.8151, -225.2356, -231.2229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-274.4482, -192.3632, -186.8233, -225.2729, -231.2445],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-274.4235, -192.3585, -186.8183, -225.3246, -231.2899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-274.4046, -192.3006, -186.8276, -225.4145, -231.3816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0426, device='cuda:0', dtype=torch.float64)
tensor([-274.4385, -192.2365, -186.8440, -225.5161, -231.4992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0499, device='cuda:0', dtype=torch.float64)
tensor([-274.4922, -192.1674, -186.8444, -225.6093, -231.6227],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-274.5334, -192.1018, -186.8433, -225.6822, -231.7380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-274.6332, -191.9990, -186.8389, -225.7784, -231.8263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-274.7800, -191.8849, -186.8289, -225.8741, -231.9122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-274.9597, -191.8078, -186.8086, -225.9758, -231.9701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-275.0851, -191.7493, -186.8089, -226.0630, -232.0139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-275.2855, -191.6393, -186.8075, -226.2089, -232.1049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0481, device='cuda:0', dtype=torch.float64)
tensor([-275.5059, -191.5263, -186.8143, -226.3180, -232.1533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0494, device='cuda:0', dtype=torch.float64)
tensor([-275.7675, -191.4139, -186.8065, -226.4242, -232.1978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-276.0186, -191.2642, -186.7767, -226.5143, -232.1660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0413, device='cuda:0', dtype=torch.float64)
tensor([-276.2365, -191.1491, -186.7453, -226.5889, -232.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-276.4178, -191.0817, -186.7216, -226.6723, -232.1629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0518, device='cuda:0', dtype=torch.float64)
tensor([-276.5166, -191.0709, -186.6985, -226.7125, -232.1144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-276.5917, -191.0867, -186.6521, -226.7144, -232.0269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-276.6580, -191.1057, -186.5833, -226.7098, -231.9468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-276.6646, -191.1032, -186.5054, -226.6622, -231.8272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-276.6773, -191.1342, -186.4416, -226.6523, -231.7339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-276.6551, -191.1346, -186.3798, -226.6362, -231.6813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-276.6539, -191.1568, -186.3387, -226.6413, -231.6638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-276.5773, -191.2141, -186.3273, -226.6376, -231.6628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-276.4684, -191.2625, -186.3204, -226.5688, -231.6230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-276.3465, -191.4039, -186.3326, -226.4998, -231.6158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0428, device='cuda:0', dtype=torch.float64)
tensor([-276.2194, -191.5738, -186.3304, -226.4234, -231.5746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0543, device='cuda:0', dtype=torch.float64)
tensor([-276.1734, -191.7264, -186.3618, -226.3954, -231.5782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-276.2324, -191.8435, -186.3847, -226.3796, -231.5665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-276.3047, -191.9040, -186.3951, -226.3775, -231.5436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0399, device='cuda:0', dtype=torch.float64)
tensor([-276.4453, -191.9773, -186.4149, -226.4052, -231.5185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-276.6204, -191.9721, -186.4417, -226.4245, -231.5099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0470, device='cuda:0', dtype=torch.float64)
tensor([-276.7552, -192.0154, -186.4866, -226.4257, -231.4856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-276.8884, -192.0839, -186.5783, -226.4517, -231.5255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-277.0763, -192.1559, -186.6939, -226.5019, -231.6236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0476, device='cuda:0', dtype=torch.float64)
tensor([-277.2575, -192.1998, -186.8037, -226.5300, -231.6970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-277.4551, -192.2706, -186.9312, -226.5600, -231.8407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-277.7200, -192.3364, -187.0299, -226.5766, -231.9817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-277.9490, -192.3750, -187.1247, -226.6002, -232.1226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-278.1928, -192.3706, -187.2254, -226.6521, -232.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-278.4179, -192.3929, -187.3275, -226.6842, -232.4355],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-278.6814, -192.4165, -187.4534, -226.7302, -232.6020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-278.8574, -192.4290, -187.5869, -226.7821, -232.7799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-278.9236, -192.3668, -187.7049, -226.7756, -232.9113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-278.9851, -192.3026, -187.8083, -226.7689, -233.0274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-278.9567, -192.2391, -187.9027, -226.7417, -233.1289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-278.9479, -192.1970, -188.0258, -226.7564, -233.2302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-278.9258, -192.1368, -188.1635, -226.7768, -233.3605],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-278.8142, -192.1322, -188.2625, -226.7451, -233.4474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-278.7468, -192.1093, -188.3489, -226.7211, -233.5257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0471, device='cuda:0', dtype=torch.float64)
tensor([-278.6843, -192.0948, -188.4434, -226.7082, -233.6095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-278.6015, -192.1065, -188.5361, -226.7058, -233.7390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0404, device='cuda:0', dtype=torch.float64)
tensor([-278.5466, -192.1116, -188.6685, -226.7380, -233.8821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0477, device='cuda:0', dtype=torch.float64)
tensor([-278.4840, -192.1108, -188.7751, -226.7512, -233.9874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-278.4004, -192.1115, -188.8744, -226.7623, -234.0635],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-278.3526, -192.1195, -188.9420, -226.7851, -234.0953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0452, device='cuda:0', dtype=torch.float64)
tensor([-278.2714, -192.1295, -188.9694, -226.7644, -234.1305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-278.2068, -192.1739, -189.0056, -226.7526, -234.1610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-278.1169, -192.2317, -189.0426, -226.6971, -234.1415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-278.0123, -192.3058, -189.0780, -226.6209, -234.1280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0467, device='cuda:0', dtype=torch.float64)
tensor([-277.8634, -192.4120, -189.1362, -226.5579, -234.1288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-277.7414, -192.5036, -189.2145, -226.5351, -234.1680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0447, device='cuda:0', dtype=torch.float64)
tensor([-277.7106, -192.6112, -189.2782, -226.4945, -234.1842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0441, device='cuda:0', dtype=torch.float64)
tensor([-277.6031, -192.6685, -189.3093, -226.4156, -234.1336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-277.5952, -192.6881, -189.3185, -226.3437, -234.1124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0439, device='cuda:0', dtype=torch.float64)
tensor([-277.5863, -192.7271, -189.2871, -226.2575, -234.0647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-277.6009, -192.7845, -189.2586, -226.1995, -234.0252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-277.6177, -192.8443, -189.2369, -226.1478, -234.0035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-277.6919, -192.8887, -189.2053, -226.0942, -233.9609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-277.7875, -192.8854, -189.1804, -226.0487, -233.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0437, device='cuda:0', dtype=torch.float64)
tensor([-277.9362, -192.9538, -189.1642, -226.0169, -233.9668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-278.0378, -192.9932, -189.1678, -225.9414, -233.9573],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0461, device='cuda:0', dtype=torch.float64)
tensor([-278.0626, -193.0202, -189.1448, -225.8376, -233.8869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-278.0144, -193.0300, -189.1237, -225.7512, -233.8510],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0497, device='cuda:0', dtype=torch.float64)
tensor([-278.0225, -193.0365, -189.1515, -225.7092, -233.8615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0436, device='cuda:0', dtype=torch.float64)
tensor([-278.0669, -193.0344, -189.1983, -225.7208, -233.9297],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0523, device='cuda:0', dtype=torch.float64)
tensor([-278.0470, -192.9346, -189.2292, -225.7322, -233.9526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0448, device='cuda:0', dtype=torch.float64)
tensor([-278.0771, -192.8388, -189.2702, -225.8040, -233.9860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-278.1704, -192.7116, -189.3358, -225.9068, -234.0404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0419, device='cuda:0', dtype=torch.float64)
tensor([-278.2296, -192.6246, -189.3936, -225.9728, -234.0735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0454, device='cuda:0', dtype=torch.float64)
tensor([-278.2842, -192.5557, -189.4374, -226.0154, -234.0548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-278.3796, -192.4750, -189.4730, -226.0344, -234.0328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-278.4536, -192.3811, -189.4734, -226.0138, -233.9585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-278.5674, -192.3419, -189.4978, -225.9985, -233.8956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-278.6977, -192.3135, -189.5306, -225.9790, -233.8273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0559, device='cuda:0', dtype=torch.float64)
tensor([-278.7741, -192.2800, -189.5704, -225.9422, -233.7512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-278.8257, -192.2979, -189.5837, -225.9085, -233.6936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-278.8767, -192.3360, -189.6058, -225.8821, -233.6336],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0394, device='cuda:0', dtype=torch.float64)
tensor([-278.9724, -192.4598, -189.6384, -225.9135, -233.6530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-279.1331, -192.6030, -189.6976, -225.9704, -233.7514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-279.3661, -192.6886, -189.7763, -226.0878, -233.8922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-279.5678, -192.7976, -189.8520, -226.1876, -233.9961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-279.8444, -192.9370, -189.9298, -226.3376, -234.1190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-280.1602, -193.0949, -190.0100, -226.5099, -234.2684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0382, device='cuda:0', dtype=torch.float64)
tensor([-280.4742, -193.1878, -190.0996, -226.6944, -234.4539],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-280.7533, -193.3075, -190.1740, -226.8219, -234.6123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0446, device='cuda:0', dtype=torch.float64)
tensor([-280.9781, -193.4019, -190.2361, -226.9457, -234.7860],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-281.1233, -193.4236, -190.2897, -227.0275, -234.9288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-281.2063, -193.4163, -190.3141, -227.0953, -235.0405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-281.2565, -193.4226, -190.3595, -227.1471, -235.1535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-281.3027, -193.4381, -190.3903, -227.1862, -235.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0444, device='cuda:0', dtype=torch.float64)
tensor([-281.3484, -193.4312, -190.4098, -227.1967, -235.3725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-281.3840, -193.4081, -190.3894, -227.2016, -235.4453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-281.3869, -193.3685, -190.3602, -227.2126, -235.5315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-281.4181, -193.3239, -190.3627, -227.2579, -235.6648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0491, device='cuda:0', dtype=torch.float64)
tensor([-281.4948, -193.2681, -190.3676, -227.2788, -235.7616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-281.6080, -193.2369, -190.4071, -227.3299, -235.8702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-281.7706, -193.1958, -190.4575, -227.4013, -235.9670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0588, device='cuda:0', dtype=torch.float64)
tensor([-281.9707, -193.2293, -190.5230, -227.4542, -236.0709],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0397, device='cuda:0', dtype=torch.float64)
tensor([-282.1584, -193.2535, -190.5829, -227.4819, -236.1282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0512, device='cuda:0', dtype=torch.float64)
tensor([-282.2923, -193.2495, -190.6462, -227.5050, -236.1723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-282.3607, -193.2940, -190.6806, -227.4903, -236.1743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0451, device='cuda:0', dtype=torch.float64)
tensor([-282.4260, -193.2975, -190.7177, -227.4716, -236.1515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-282.5462, -193.3131, -190.7501, -227.4584, -236.1350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-282.6442, -193.3077, -190.7733, -227.4443, -236.0982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-282.6902, -193.3143, -190.7822, -227.4377, -236.0615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0432, device='cuda:0', dtype=torch.float64)
tensor([-282.6844, -193.3239, -190.7859, -227.3951, -235.9772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-282.7447, -193.3337, -190.7913, -227.3592, -235.8951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-282.7635, -193.2733, -190.7396, -227.2813, -235.7508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-282.8475, -193.2033, -190.7102, -227.2493, -235.6798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-282.9298, -193.1063, -190.6925, -227.2022, -235.6228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0464, device='cuda:0', dtype=torch.float64)
tensor([-283.0467, -192.9708, -190.6845, -227.1339, -235.5472],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0422, device='cuda:0', dtype=torch.float64)
tensor([-283.2177, -192.8309, -190.7052, -227.0871, -235.4949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0468, device='cuda:0', dtype=torch.float64)
tensor([-283.4053, -192.7543, -190.7341, -227.0298, -235.4335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-283.5710, -192.6751, -190.7589, -226.9812, -235.3788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-283.7893, -192.6293, -190.8124, -226.9514, -235.3895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0377, device='cuda:0', dtype=torch.float64)
tensor([-283.9825, -192.6087, -190.8868, -226.9661, -235.4850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0421, device='cuda:0', dtype=torch.float64)
tensor([-284.1116, -192.6449, -190.9646, -226.9786, -235.5940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-284.2696, -192.7185, -191.0094, -226.9520, -235.6530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-284.4645, -192.8600, -191.0533, -226.9561, -235.7464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-284.5998, -192.9738, -191.1097, -226.9320, -235.8093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-284.7193, -193.1807, -191.1298, -226.8561, -235.8350],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0527, device='cuda:0', dtype=torch.float64)
tensor([-284.8582, -193.4080, -191.1383, -226.7604, -235.8229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0434, device='cuda:0', dtype=torch.float64)
tensor([-285.0256, -193.6292, -191.1720, -226.6998, -235.8191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-285.1817, -193.8932, -191.1690, -226.5905, -235.7273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0440, device='cuda:0', dtype=torch.float64)
tensor([-285.1901, -194.1209, -191.1544, -226.4685, -235.6158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-285.1258, -194.2630, -191.1743, -226.3732, -235.5418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-285.0477, -194.3578, -191.2182, -226.2988, -235.5018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-284.9252, -194.3971, -191.2420, -226.2136, -235.4421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-284.6932, -194.4074, -191.2325, -226.0856, -235.3429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-284.5575, -194.3772, -191.2675, -225.9997, -235.2765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0427, device='cuda:0', dtype=torch.float64)
tensor([-284.3355, -194.2770, -191.3159, -225.9066, -235.2087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-284.1437, -194.1630, -191.3633, -225.8133, -235.1500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-283.9757, -194.0689, -191.3904, -225.6941, -235.0619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-283.8480, -194.0278, -191.4297, -225.6023, -235.0017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-283.7189, -193.9466, -191.4469, -225.5104, -234.9186],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-283.5110, -193.8675, -191.4697, -225.3915, -234.8340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0392, device='cuda:0', dtype=torch.float64)
tensor([-283.2656, -193.7951, -191.4749, -225.2713, -234.7298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-283.1441, -193.7743, -191.4807, -225.1625, -234.6269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-283.0728, -193.7191, -191.4761, -225.0614, -234.4970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-283.0054, -193.4962, -191.5135, -225.0221, -234.4122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0406, device='cuda:0', dtype=torch.float64)
tensor([-282.8665, -193.3115, -191.5580, -224.9696, -234.3296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0375, device='cuda:0', dtype=torch.float64)
tensor([-282.7858, -193.1359, -191.6154, -224.9250, -234.2197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-282.6688, -192.9681, -191.6593, -224.8772, -234.0967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-282.5547, -192.8449, -191.6775, -224.7813, -233.9470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-282.3971, -192.7729, -191.7032, -224.6690, -233.7915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0473, device='cuda:0', dtype=torch.float64)
tensor([-282.3025, -192.7455, -191.7280, -224.5506, -233.6178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-282.1951, -192.7490, -191.7342, -224.4461, -233.4648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-282.0849, -192.7388, -191.7397, -224.3982, -233.4158],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-281.9722, -192.7606, -191.7407, -224.3328, -233.3224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-281.8007, -192.8156, -191.7385, -224.2559, -233.2205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-281.7248, -192.7840, -191.7428, -224.2281, -233.1515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0401, device='cuda:0', dtype=torch.float64)
tensor([-281.6874, -192.7225, -191.7362, -224.2284, -233.1269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-281.5601, -192.6031, -191.7242, -224.1910, -233.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-281.4601, -192.4502, -191.7180, -224.1621, -233.0863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-281.3780, -192.3065, -191.7499, -224.1655, -233.1173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-281.2602, -192.1305, -191.7705, -224.1420, -233.1136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-281.1521, -191.9008, -191.8146, -224.1581, -233.1191],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-281.1024, -191.6981, -191.8475, -224.1651, -233.1175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-281.0216, -191.5610, -191.8411, -224.1376, -233.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-281.0001, -191.4175, -191.8336, -224.1115, -233.0969],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-280.9845, -191.2627, -191.8381, -224.1013, -233.1217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0457, device='cuda:0', dtype=torch.float64)
tensor([-280.9436, -191.1425, -191.8542, -224.0840, -233.1177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-280.8961, -191.0901, -191.8607, -224.0576, -233.1262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0425, device='cuda:0', dtype=torch.float64)
tensor([-280.8884, -191.0202, -191.8706, -224.0165, -233.1180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-280.8980, -190.9512, -191.8911, -223.9979, -233.1511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-280.8304, -190.8470, -191.9277, -223.9647, -233.1684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-280.7838, -190.7020, -191.9936, -223.9933, -233.2548],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0368, device='cuda:0', dtype=torch.float64)
tensor([-280.7681, -190.5785, -192.0557, -224.0561, -233.3791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0417, device='cuda:0', dtype=torch.float64)
tensor([-280.7351, -190.4764, -192.1118, -224.1050, -233.5016],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-280.7508, -190.4624, -192.1711, -224.1390, -233.6344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-280.7970, -190.4844, -192.2333, -224.1630, -233.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-280.8829, -190.5187, -192.3072, -224.2156, -233.9874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-281.0539, -190.5814, -192.3369, -224.2412, -234.1265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0415, device='cuda:0', dtype=torch.float64)
tensor([-281.2356, -190.6632, -192.3614, -224.2007, -234.1800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0393, device='cuda:0', dtype=torch.float64)
tensor([-281.4058, -190.7307, -192.3903, -224.1604, -234.2187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0433, device='cuda:0', dtype=torch.float64)
tensor([-281.5281, -190.7662, -192.4227, -224.1325, -234.2974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-281.6325, -190.7970, -192.4580, -224.1269, -234.3982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-281.7378, -190.7970, -192.5087, -224.1500, -234.5003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-281.7562, -190.7654, -192.5683, -224.1927, -234.6571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-281.7468, -190.7667, -192.6254, -224.2105, -234.8074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-281.7798, -190.7462, -192.6886, -224.2446, -234.9545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-281.8058, -190.7779, -192.7269, -224.2691, -235.0444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-281.8482, -190.7887, -192.7475, -224.2514, -235.0224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0424, device='cuda:0', dtype=torch.float64)
tensor([-281.8858, -190.7541, -192.7970, -224.2431, -235.0153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0412, device='cuda:0', dtype=torch.float64)
tensor([-281.9277, -190.7306, -192.8630, -224.2122, -235.0119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-281.9288, -190.7605, -192.9098, -224.1583, -234.9830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-281.9434, -190.8600, -192.9642, -224.0929, -234.9720],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-281.9635, -191.0123, -192.9946, -224.0098, -234.9856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-281.9573, -191.1638, -193.0284, -223.9003, -234.9633],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-281.9099, -191.3044, -193.0719, -223.8068, -234.9485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0367, device='cuda:0', dtype=torch.float64)
tensor([-281.8535, -191.4464, -193.1088, -223.7178, -234.9637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0385, device='cuda:0', dtype=torch.float64)
tensor([-281.8118, -191.5641, -193.1592, -223.6627, -235.0136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-281.8352, -191.6345, -193.2391, -223.6468, -235.0877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0373, device='cuda:0', dtype=torch.float64)
tensor([-281.8861, -191.6707, -193.3188, -223.6357, -235.1062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0386, device='cuda:0', dtype=torch.float64)
tensor([-281.9618, -191.6637, -193.3816, -223.5971, -235.0736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-282.0148, -191.6661, -193.4521, -223.5777, -235.0656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-282.0630, -191.6956, -193.5043, -223.5593, -235.0586],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0396, device='cuda:0', dtype=torch.float64)
tensor([-282.1029, -191.6957, -193.5471, -223.5575, -235.0778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-282.1777, -191.7328, -193.5883, -223.5557, -235.0768],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-282.2709, -191.7621, -193.6100, -223.5613, -235.0626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-282.3458, -191.7879, -193.6463, -223.5519, -235.0385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-282.4164, -191.7903, -193.6827, -223.5359, -235.0106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-282.4688, -191.8091, -193.7091, -223.5218, -234.9960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-282.4924, -191.7947, -193.7384, -223.4832, -234.9564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-282.5091, -191.7565, -193.7652, -223.4515, -234.8846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0407, device='cuda:0', dtype=torch.float64)
tensor([-282.5977, -191.6847, -193.8089, -223.4515, -234.8020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-282.7406, -191.6058, -193.8446, -223.4634, -234.7139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-282.8493, -191.5647, -193.8961, -223.4532, -234.6091],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0391, device='cuda:0', dtype=torch.float64)
tensor([-282.9579, -191.5036, -193.9474, -223.4004, -234.5129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-283.0120, -191.4326, -193.9770, -223.3257, -234.3948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-283.1495, -191.3272, -194.0331, -223.3142, -234.3340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0463, device='cuda:0', dtype=torch.float64)
tensor([-283.2177, -191.1681, -194.1192, -223.3316, -234.3319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-283.3139, -191.0765, -194.2098, -223.3500, -234.3396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0411, device='cuda:0', dtype=torch.float64)
tensor([-283.3878, -191.0027, -194.3000, -223.4023, -234.3645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-283.4717, -190.8744, -194.3916, -223.4749, -234.3930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-283.5527, -190.7687, -194.4892, -223.5447, -234.4214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-283.5745, -190.6419, -194.5475, -223.5807, -234.3875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-283.6118, -190.4764, -194.6364, -223.6128, -234.3515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-283.6669, -190.3141, -194.7543, -223.6433, -234.3515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-283.7336, -190.1570, -194.8763, -223.6444, -234.3201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0374, device='cuda:0', dtype=torch.float64)
tensor([-283.8001, -190.0574, -194.9779, -223.6645, -234.3006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-283.7821, -190.0050, -195.0338, -223.6225, -234.2540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-283.7587, -189.9710, -195.0808, -223.5462, -234.2021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-283.7212, -189.9565, -195.1273, -223.4532, -234.1688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-283.6211, -189.9255, -195.1636, -223.3432, -234.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-283.4899, -189.8894, -195.1997, -223.2058, -234.0362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-283.3340, -189.8507, -195.2187, -223.0626, -233.9395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0369, device='cuda:0', dtype=torch.float64)
tensor([-283.2084, -189.8270, -195.2635, -222.9543, -233.8502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-283.0493, -189.8780, -195.2864, -222.8179, -233.7562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0479, device='cuda:0', dtype=torch.float64)
tensor([-282.8567, -189.9705, -195.3118, -222.6880, -233.6939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-282.6672, -190.1044, -195.3434, -222.5620, -233.6303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0390, device='cuda:0', dtype=torch.float64)
tensor([-282.4525, -190.2256, -195.3567, -222.4186, -233.5444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0363, device='cuda:0', dtype=torch.float64)
tensor([-282.1855, -190.3185, -195.3793, -222.2880, -233.4725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-281.9883, -190.4373, -195.4134, -222.1627, -233.4076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0387, device='cuda:0', dtype=torch.float64)
tensor([-281.7328, -190.5215, -195.4468, -222.0342, -233.3447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-281.4692, -190.5920, -195.4665, -221.9047, -233.2841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0455, device='cuda:0', dtype=torch.float64)
tensor([-281.2475, -190.7005, -195.4939, -221.8078, -233.2531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0380, device='cuda:0', dtype=torch.float64)
tensor([-281.0419, -190.7675, -195.5503, -221.7346, -233.2327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0420, device='cuda:0', dtype=torch.float64)
tensor([-280.8723, -190.8182, -195.6164, -221.6714, -233.2010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-280.7295, -190.8741, -195.6935, -221.6258, -233.2342],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-280.6568, -190.9156, -195.7598, -221.6139, -233.2428],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0438, device='cuda:0', dtype=torch.float64)
tensor([-280.6184, -190.9396, -195.8457, -221.6249, -233.2694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-280.6520, -190.9584, -195.9389, -221.6624, -233.2984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-280.6508, -191.0047, -195.9987, -221.6785, -233.3246],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-280.6456, -191.0290, -196.0728, -221.6924, -233.3422],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-280.6919, -191.0287, -196.1564, -221.7285, -233.3561],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-280.7133, -191.0025, -196.2497, -221.7371, -233.3383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-280.6737, -190.9805, -196.3170, -221.7248, -233.3270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-280.6352, -191.0066, -196.3612, -221.6896, -233.3152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-280.6486, -191.0287, -196.4413, -221.6851, -233.3359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0405, device='cuda:0', dtype=torch.float64)
tensor([-280.6542, -191.0445, -196.5483, -221.6944, -233.4126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0365, device='cuda:0', dtype=torch.float64)
tensor([-280.6351, -191.0953, -196.6280, -221.6809, -233.5105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0453, device='cuda:0', dtype=torch.float64)
tensor([-280.6107, -191.1493, -196.7455, -221.6798, -233.6614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-280.6222, -191.2112, -196.8412, -221.6738, -233.7638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-280.5731, -191.2338, -196.9350, -221.6506, -233.8382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-280.5583, -191.2862, -197.0174, -221.6208, -233.8922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-280.4958, -191.3106, -197.0854, -221.5815, -233.9496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0376, device='cuda:0', dtype=torch.float64)
tensor([-280.4044, -191.2745, -197.1749, -221.5498, -233.9434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0450, device='cuda:0', dtype=torch.float64)
tensor([-280.3593, -191.1923, -197.2895, -221.5049, -233.8857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-280.2430, -191.0312, -197.4199, -221.4654, -233.8296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-280.1297, -190.8616, -197.5373, -221.4244, -233.7954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0403, device='cuda:0', dtype=torch.float64)
tensor([-280.0213, -190.6612, -197.6681, -221.3977, -233.7661],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-279.8925, -190.4891, -197.7816, -221.3732, -233.7335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-279.8021, -190.3354, -197.9097, -221.3593, -233.7187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0379, device='cuda:0', dtype=torch.float64)
tensor([-279.7407, -190.1970, -198.0440, -221.3746, -233.7128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-279.6899, -190.1252, -198.1660, -221.3588, -233.6691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-279.6936, -190.0694, -198.2548, -221.3437, -233.6498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-279.6923, -190.0504, -198.3150, -221.3008, -233.6068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-279.6941, -190.0421, -198.4161, -221.3049, -233.6097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-279.7074, -190.0431, -198.5176, -221.3316, -233.5974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-279.7009, -190.0848, -198.5724, -221.3276, -233.5475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-279.6761, -190.1090, -198.6222, -221.3151, -233.4782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-279.6784, -190.1800, -198.6693, -221.2839, -233.3914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-279.6529, -190.1965, -198.7405, -221.2702, -233.3070],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-279.6008, -190.2123, -198.7856, -221.2517, -233.2110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-279.5288, -190.2016, -198.8030, -221.1884, -233.0798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0348, device='cuda:0', dtype=torch.float64)
tensor([-279.4216, -190.1676, -198.8306, -221.1542, -232.9494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0443, device='cuda:0', dtype=torch.float64)
tensor([-279.3041, -190.1178, -198.9050, -221.1457, -232.9006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-279.1563, -190.0901, -198.9717, -221.1424, -232.8636],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-279.0191, -190.0071, -199.0757, -221.1686, -232.8537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-278.9274, -189.9402, -199.1849, -221.2165, -232.8973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-278.8705, -189.8732, -199.2902, -221.2795, -232.9479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-278.8536, -189.8118, -199.3785, -221.3438, -233.0506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0423, device='cuda:0', dtype=torch.float64)
tensor([-278.8900, -189.7291, -199.4596, -221.4052, -233.1662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0493, device='cuda:0', dtype=torch.float64)
tensor([-278.9452, -189.6924, -199.5366, -221.4468, -233.2800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-279.0679, -189.6585, -199.5961, -221.4874, -233.3692],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-279.1166, -189.6510, -199.6316, -221.5185, -233.4755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-279.2353, -189.7145, -199.6686, -221.5573, -233.6157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0465, device='cuda:0', dtype=torch.float64)
tensor([-279.3304, -189.7598, -199.7366, -221.6055, -233.7534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-279.3795, -189.8136, -199.8036, -221.6424, -233.8915],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0364, device='cuda:0', dtype=torch.float64)
tensor([-279.4571, -189.8677, -199.8627, -221.6498, -233.9845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-279.5415, -189.9117, -199.9241, -221.6319, -234.0459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-279.6442, -189.9660, -200.0100, -221.6469, -234.1292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-279.7495, -189.9910, -200.1203, -221.6850, -234.2102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0359, device='cuda:0', dtype=torch.float64)
tensor([-279.8005, -190.0146, -200.1897, -221.6751, -234.2439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-279.8373, -190.0426, -200.2415, -221.6481, -234.2627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-279.8905, -190.1157, -200.2475, -221.5897, -234.2495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-279.9254, -190.2100, -200.2570, -221.5353, -234.2603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-279.9204, -190.3339, -200.2251, -221.4577, -234.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-279.8803, -190.4229, -200.2018, -221.4074, -234.3118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-279.8645, -190.5343, -200.1790, -221.3389, -234.3387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0355, device='cuda:0', dtype=torch.float64)
tensor([-279.8516, -190.5827, -200.1580, -221.2395, -234.3150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-279.8274, -190.6030, -200.1371, -221.1537, -234.2981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-279.7926, -190.6112, -200.0798, -221.0566, -234.2425],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-279.6769, -190.6036, -200.0328, -220.9559, -234.1926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-279.5297, -190.5828, -199.9811, -220.8467, -234.1329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-279.4197, -190.5987, -199.9450, -220.7333, -234.1060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-279.2940, -190.6153, -199.9057, -220.6246, -234.0932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-279.1774, -190.6402, -199.8825, -220.5040, -234.0680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-279.0279, -190.6402, -199.8428, -220.3603, -234.0097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-278.8278, -190.6330, -199.8242, -220.2161, -233.9414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-278.6033, -190.6120, -199.7922, -220.0764, -233.8468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-278.3898, -190.5726, -199.7467, -219.9387, -233.7418],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-278.2071, -190.5335, -199.7161, -219.8110, -233.6744],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0340, device='cuda:0', dtype=torch.float64)
tensor([-277.9730, -190.4998, -199.6833, -219.6877, -233.6259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-277.7743, -190.4656, -199.6786, -219.5777, -233.5988],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-277.6048, -190.4303, -199.6596, -219.4872, -233.5780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-277.5516, -190.4183, -199.6647, -219.4401, -233.5734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-277.5240, -190.3817, -199.6822, -219.4112, -233.5715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-277.5665, -190.3539, -199.6968, -219.3785, -233.5647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-277.6135, -190.3247, -199.7534, -219.3824, -233.5612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0370, device='cuda:0', dtype=torch.float64)
tensor([-277.6672, -190.3079, -199.8220, -219.3641, -233.5753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-277.7168, -190.3117, -199.9032, -219.3439, -233.6276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-277.7342, -190.2700, -199.9778, -219.3461, -233.6838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-277.7328, -190.2354, -200.0314, -219.3406, -233.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-277.7168, -190.1874, -200.0868, -219.3117, -233.7549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-277.7208, -190.1418, -200.1617, -219.2905, -233.8104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-277.7006, -190.0773, -200.2414, -219.2762, -233.8545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-277.7197, -190.0233, -200.3102, -219.2846, -233.9034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-277.7177, -189.9475, -200.3821, -219.2708, -233.9279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-277.7180, -189.9054, -200.4512, -219.2633, -233.9549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-277.7308, -189.9207, -200.5014, -219.2185, -233.9068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-277.7549, -189.9862, -200.5252, -219.1824, -233.8882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-277.7329, -190.0222, -200.5172, -219.1159, -233.8499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-277.7568, -190.0628, -200.5717, -219.0954, -233.8614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-277.7700, -190.0975, -200.6335, -219.0733, -233.8773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-277.8157, -190.1330, -200.7014, -219.0776, -233.9290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-277.8398, -190.1620, -200.7795, -219.0712, -233.9504],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-277.8502, -190.1866, -200.8811, -219.0727, -233.9796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-277.8798, -190.2084, -200.9431, -219.0521, -233.9691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-277.9154, -190.2091, -201.0179, -219.0578, -233.9808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-277.9581, -190.1861, -201.0717, -219.0703, -233.9779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-278.0395, -190.1824, -201.1231, -219.0934, -234.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-278.1175, -190.1640, -201.1859, -219.1215, -234.0542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-278.1974, -190.1675, -201.2408, -219.1328, -234.0963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-278.2402, -190.1440, -201.3075, -219.1522, -234.1396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-278.2317, -190.0958, -201.3799, -219.1856, -234.1934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-278.2705, -190.0408, -201.4751, -219.2328, -234.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-278.3287, -189.9205, -201.5683, -219.2902, -234.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0408, device='cuda:0', dtype=torch.float64)
tensor([-278.3688, -189.8433, -201.6537, -219.3325, -234.3694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0366, device='cuda:0', dtype=torch.float64)
tensor([-278.4210, -189.7976, -201.7432, -219.3798, -234.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-278.5043, -189.7527, -201.7995, -219.4069, -234.4261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-278.6391, -189.7339, -201.8528, -219.4507, -234.4245],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-278.7264, -189.6770, -201.9135, -219.4928, -234.4231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-278.7651, -189.6563, -201.9375, -219.5261, -234.4196],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-278.7457, -189.6442, -201.9465, -219.5130, -234.4035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-278.7386, -189.6471, -201.9768, -219.5097, -234.4367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-278.7590, -189.6246, -202.0200, -219.5177, -234.4841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-278.7596, -189.6291, -202.0565, -219.5318, -234.5395],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-278.8208, -189.6321, -202.0712, -219.5440, -234.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-278.8957, -189.6854, -202.0495, -219.5198, -234.5877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-278.9649, -189.7455, -202.0255, -219.4868, -234.6048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-278.9995, -189.8248, -201.9963, -219.4349, -234.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-278.9618, -189.9463, -201.9195, -219.3362, -234.6134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-278.8756, -190.0435, -201.8592, -219.2512, -234.5954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-278.8677, -190.1586, -201.8246, -219.1889, -234.5962],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-278.8790, -190.2302, -201.8195, -219.1323, -234.5823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-278.8530, -190.2609, -201.8498, -219.0983, -234.5912],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0372, device='cuda:0', dtype=torch.float64)
tensor([-278.7809, -190.2821, -201.8885, -219.0429, -234.5697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-278.6901, -190.3215, -201.9544, -218.9972, -234.5779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-278.5533, -190.3324, -201.9986, -218.9498, -234.5874],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-278.3574, -190.3438, -202.0328, -218.8997, -234.6298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0353, device='cuda:0', dtype=torch.float64)
tensor([-278.1769, -190.3616, -202.0288, -218.8318, -234.6365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-277.9590, -190.3354, -202.0520, -218.7968, -234.6527],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-277.6794, -190.2807, -202.0568, -218.7479, -234.6680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-277.4941, -190.2267, -202.0577, -218.6815, -234.6737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-277.3280, -190.2013, -202.0524, -218.6153, -234.6966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-277.1461, -190.1482, -202.0672, -218.5738, -234.7277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0371, device='cuda:0', dtype=torch.float64)
tensor([-277.0176, -190.1097, -202.1328, -218.5830, -234.7952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-276.8419, -190.0789, -202.2219, -218.5861, -234.8932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-276.7192, -190.0706, -202.3147, -218.6107, -234.9878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-276.6401, -190.0344, -202.4141, -218.6456, -235.0910],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-276.5865, -189.9615, -202.5362, -218.6984, -235.1564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-276.5627, -189.9034, -202.6762, -218.7878, -235.2581],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-276.5146, -189.8332, -202.8013, -218.8671, -235.3205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0383, device='cuda:0', dtype=torch.float64)
tensor([-276.5328, -189.7917, -202.9001, -218.9274, -235.3431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-276.5271, -189.7212, -202.9854, -218.9769, -235.3587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-276.4269, -189.6358, -203.0487, -218.9951, -235.3397],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-276.3246, -189.5279, -203.1105, -219.0046, -235.3143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-276.2122, -189.3968, -203.1614, -218.9974, -235.2813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-276.0566, -189.2533, -203.2028, -218.9687, -235.2205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-275.9737, -189.1502, -203.2215, -218.9369, -235.1458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-275.8507, -189.0725, -203.2352, -218.8739, -235.0795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-275.8119, -188.9673, -203.2843, -218.8478, -235.0486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-275.7588, -188.8688, -203.3536, -218.8342, -235.0560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-275.6990, -188.7991, -203.3902, -218.8096, -235.0732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-275.6565, -188.7556, -203.4426, -218.7988, -235.1142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-275.6654, -188.7225, -203.4617, -218.7664, -235.1376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-275.5971, -188.6911, -203.4393, -218.7013, -235.1276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-275.6466, -188.7092, -203.4118, -218.6502, -235.1033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-275.6853, -188.7749, -203.3746, -218.5922, -235.0732],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-275.6999, -188.8504, -203.3435, -218.5485, -235.0621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-275.7332, -188.9340, -203.2883, -218.5108, -235.0734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-275.7495, -189.0510, -203.2255, -218.4723, -235.1051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-275.7229, -189.1581, -203.1963, -218.4320, -235.1478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-275.6639, -189.2779, -203.1510, -218.3696, -235.1438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-275.5492, -189.3345, -203.1601, -218.3405, -235.1640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-275.4711, -189.3640, -203.1822, -218.3462, -235.2101],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-275.3690, -189.3779, -203.2316, -218.3737, -235.2907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-275.2570, -189.3545, -203.2863, -218.3830, -235.3584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-275.1612, -189.2749, -203.3643, -218.4094, -235.4494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-275.0970, -189.2440, -203.4448, -218.4346, -235.5239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-274.9881, -189.2006, -203.5240, -218.4404, -235.5800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-274.8838, -189.1730, -203.5870, -218.4329, -235.6093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-274.7118, -189.1483, -203.6361, -218.4098, -235.6349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-274.6203, -189.1540, -203.6899, -218.3906, -235.6448],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-274.5477, -189.1522, -203.7445, -218.3687, -235.6475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-274.4215, -189.1612, -203.8041, -218.3242, -235.6607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-274.3503, -189.1505, -203.8549, -218.2679, -235.6537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-274.2376, -189.1576, -203.8655, -218.1898, -235.5745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-274.1902, -189.1276, -203.8957, -218.1453, -235.5006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-274.2030, -189.0858, -203.9575, -218.1429, -235.4434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0402, device='cuda:0', dtype=torch.float64)
tensor([-274.1943, -189.0174, -204.0477, -218.1494, -235.4061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-274.1228, -188.9515, -204.0835, -218.1274, -235.3322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-274.0814, -188.9362, -204.1298, -218.1094, -235.2647],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-274.0658, -188.9715, -204.1663, -218.0846, -235.2367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-274.0649, -189.0681, -204.1941, -218.0380, -235.1993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-273.9796, -189.1639, -204.1689, -217.9643, -235.1585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-273.9133, -189.2832, -204.1755, -217.9039, -235.1432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-273.8618, -189.3909, -204.1747, -217.8661, -235.1139],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-273.7695, -189.4677, -204.1646, -217.8336, -235.0827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-273.6633, -189.5445, -204.1666, -217.8096, -235.0616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-273.5645, -189.6002, -204.1765, -217.7880, -235.0149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-273.4256, -189.6987, -204.1751, -217.7401, -234.9659],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-273.3020, -189.7682, -204.1917, -217.7145, -234.9673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-273.2383, -189.8493, -204.2221, -217.7062, -235.0051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-273.2100, -189.9367, -204.2576, -217.7147, -235.0502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-273.1863, -189.9591, -204.3189, -217.7428, -235.0599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-273.1504, -189.9772, -204.3294, -217.7321, -235.0316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-273.1297, -189.9853, -204.3432, -217.7378, -235.0461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-273.0766, -189.9720, -204.3940, -217.7655, -235.0793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-273.0621, -189.9526, -204.4607, -217.7944, -235.0989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-273.0321, -189.9222, -204.5294, -217.8234, -235.1620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-272.9346, -189.8626, -204.6213, -217.8673, -235.2503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-272.8070, -189.8134, -204.6759, -217.8572, -235.3110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-272.6381, -189.7475, -204.7567, -217.8478, -235.3924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-272.4859, -189.6787, -204.8471, -217.8436, -235.4891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-272.2964, -189.6129, -204.9282, -217.8124, -235.5347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-272.1301, -189.6040, -204.9780, -217.7469, -235.5509],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-272.0310, -189.6044, -205.0073, -217.6925, -235.5718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-272.0181, -189.5924, -205.0742, -217.6962, -235.6165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-272.0477, -189.5142, -205.1833, -217.7406, -235.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-272.0646, -189.4233, -205.2882, -217.7780, -235.7498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-272.1451, -189.3631, -205.3866, -217.8303, -235.8441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-272.1529, -189.3270, -205.4725, -217.8612, -235.9224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-272.1524, -189.3116, -205.5335, -217.8658, -235.9952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-272.1246, -189.3158, -205.6026, -217.8696, -236.0601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-272.0842, -189.2794, -205.6727, -217.8871, -236.0780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-272.0076, -189.2453, -205.7569, -217.8942, -236.0822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-271.9127, -189.1731, -205.8495, -217.9281, -236.1097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-271.7830, -189.0872, -205.9443, -217.9636, -236.1156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-271.6557, -189.0575, -205.9907, -217.9698, -236.1119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-271.5507, -189.0186, -206.0583, -217.9990, -236.1099],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-271.4665, -188.9680, -206.1376, -218.0272, -236.1020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-271.3718, -188.9376, -206.2259, -218.0642, -236.0966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0339, device='cuda:0', dtype=torch.float64)
tensor([-271.2562, -188.9258, -206.3150, -218.1027, -236.1044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-271.1075, -188.9487, -206.3642, -218.1306, -236.0773],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-270.9484, -188.9291, -206.4252, -218.1675, -236.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-270.8212, -188.9233, -206.4611, -218.1954, -236.0322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-270.7127, -188.8965, -206.4667, -218.2098, -235.9826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-270.6228, -188.8426, -206.5124, -218.2576, -235.9585],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-270.5405, -188.8194, -206.5061, -218.2600, -235.8906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-270.5082, -188.7611, -206.5196, -218.2783, -235.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-270.4802, -188.7315, -206.5390, -218.2892, -235.8242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-270.4316, -188.7112, -206.5475, -218.2941, -235.8193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-270.4094, -188.6381, -206.6339, -218.3321, -235.8602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-270.3715, -188.5759, -206.6978, -218.3469, -235.8620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-270.2895, -188.4910, -206.7666, -218.3610, -235.8804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-270.2230, -188.4149, -206.8298, -218.3811, -235.8901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-270.0973, -188.3454, -206.8776, -218.3854, -235.8853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-269.9795, -188.2729, -206.9183, -218.4032, -235.8899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-269.8375, -188.2225, -206.9606, -218.4323, -235.9256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-269.6508, -188.1891, -206.9907, -218.4353, -235.9498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-269.4901, -188.1395, -207.0142, -218.4536, -235.9532],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-269.3710, -188.1196, -207.0008, -218.4304, -235.9075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-269.2884, -188.0920, -206.9901, -218.4160, -235.8924],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-269.2311, -188.0591, -207.0190, -218.4535, -235.9210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-269.1620, -188.0486, -207.0593, -218.4999, -235.9522],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-269.0966, -188.0473, -207.1096, -218.5512, -235.9945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-269.1119, -188.0403, -207.1598, -218.6226, -236.0513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-269.1569, -188.0333, -207.2201, -218.6950, -236.1271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-269.2227, -188.0722, -207.2721, -218.7560, -236.1947],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-269.2865, -188.0908, -207.3560, -218.8458, -236.2772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-269.2867, -188.0831, -207.4119, -218.9013, -236.3257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-269.3066, -188.1054, -207.4600, -218.9549, -236.3857],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-269.3406, -188.1619, -207.4882, -218.9901, -236.4454],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-269.3551, -188.1900, -207.5210, -219.0359, -236.5134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-269.3402, -188.2301, -207.5583, -219.0812, -236.6058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0333, device='cuda:0', dtype=torch.float64)
tensor([-269.3010, -188.2744, -207.5765, -219.0981, -236.6746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-269.2312, -188.3076, -207.5694, -219.0755, -236.6811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-269.1927, -188.3458, -207.5865, -219.0790, -236.7060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-269.1566, -188.3928, -207.6075, -219.0598, -236.7328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-269.0892, -188.4318, -207.5677, -218.9816, -236.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-269.0370, -188.3928, -207.5327, -218.8985, -236.6067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-268.9625, -188.3625, -207.4900, -218.7956, -236.5282],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-268.9223, -188.3259, -207.4403, -218.7074, -236.4654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-268.8367, -188.2449, -207.4184, -218.6380, -236.3817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-268.7566, -188.1701, -207.3894, -218.5647, -236.2881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-268.6430, -188.0936, -207.3880, -218.4988, -236.2251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-268.5653, -188.0141, -207.3949, -218.4502, -236.1570],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-268.5406, -187.9113, -207.3937, -218.4027, -236.0762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-268.5038, -187.8043, -207.3861, -218.3480, -235.9916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-268.4460, -187.7000, -207.4023, -218.3166, -235.9429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-268.3596, -187.5968, -207.4217, -218.3079, -235.9076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-268.3424, -187.4875, -207.5008, -218.3483, -235.9023],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-268.3073, -187.4144, -207.5452, -218.3681, -235.8800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-268.2633, -187.3644, -207.5477, -218.3417, -235.8608],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0384, device='cuda:0', dtype=torch.float64)
tensor([-268.1956, -187.3156, -207.5289, -218.2969, -235.8149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-268.1577, -187.2531, -207.5310, -218.2907, -235.8079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-268.1553, -187.2157, -207.5487, -218.2983, -235.8361],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-268.1584, -187.2149, -207.5624, -218.3041, -235.8287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-268.1744, -187.2589, -207.5672, -218.2920, -235.8176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-268.0904, -187.2867, -207.5483, -218.2395, -235.7850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-268.0493, -187.2972, -207.5512, -218.2198, -235.7879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-267.9821, -187.3019, -207.5798, -218.2198, -235.8301],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-267.9323, -187.3159, -207.5967, -218.2250, -235.9065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-267.8891, -187.3524, -207.5993, -218.2237, -235.9991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-267.8368, -187.3776, -207.5946, -218.2154, -236.0897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-267.7867, -187.3638, -207.6593, -218.2465, -236.1994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-267.7722, -187.3869, -207.7128, -218.2770, -236.2830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-267.7721, -187.4237, -207.7695, -218.2911, -236.3485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-267.7646, -187.4957, -207.7940, -218.2961, -236.4344],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-267.7065, -187.5753, -207.7785, -218.2738, -236.4879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-267.6469, -187.6834, -207.7587, -218.2615, -236.5752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-267.5309, -187.7981, -207.7014, -218.2431, -236.6484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-267.4471, -187.8812, -207.6557, -218.2286, -236.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-267.3403, -187.9615, -207.6132, -218.2073, -236.7565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-267.2659, -188.0573, -207.5811, -218.2160, -236.7919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-267.1645, -188.1176, -207.5499, -218.2113, -236.8131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-267.0961, -188.1760, -207.5434, -218.2157, -236.8415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-267.0198, -188.2222, -207.5739, -218.2426, -236.8974],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-267.0106, -188.3026, -207.6164, -218.2604, -236.9760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-267.0018, -188.3680, -207.6780, -218.3011, -237.0564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-266.8748, -188.4581, -207.6666, -218.2611, -237.0729],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-266.7578, -188.5485, -207.6721, -218.2291, -237.1028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-266.6537, -188.6266, -207.7221, -218.2319, -237.1611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-266.5509, -188.6948, -207.7719, -218.2227, -237.2156],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-266.4386, -188.7432, -207.8084, -218.2292, -237.2602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-266.3076, -188.8051, -207.8505, -218.2212, -237.3078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-266.2238, -188.8430, -207.9180, -218.2459, -237.3240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-266.1510, -188.8943, -207.9770, -218.2845, -237.3316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-266.1255, -188.8981, -208.0683, -218.3644, -237.3668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-266.0948, -188.9102, -208.0965, -218.3836, -237.3600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-266.0816, -188.9231, -208.0965, -218.3803, -237.3037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-266.1024, -188.9097, -208.1227, -218.3926, -237.2489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-266.1441, -188.8701, -208.1824, -218.4256, -237.2207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-266.2203, -188.8057, -208.2409, -218.4521, -237.1863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-266.2304, -188.7039, -208.3160, -218.4872, -237.1363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-266.2176, -188.6488, -208.3308, -218.4803, -237.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-266.2227, -188.5703, -208.3414, -218.4814, -237.0310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-266.2397, -188.4762, -208.3693, -218.5026, -236.9960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-266.2327, -188.3578, -208.3858, -218.4914, -236.9242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-266.2146, -188.2653, -208.3641, -218.4537, -236.8340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-266.1808, -188.2183, -208.3067, -218.3566, -236.6876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-266.2126, -188.2299, -208.2389, -218.2419, -236.5097],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-266.2418, -188.2686, -208.1626, -218.0921, -236.3289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-266.2386, -188.3411, -208.1088, -217.9557, -236.2103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-266.2197, -188.3830, -208.0509, -217.8229, -236.1218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-266.1970, -188.4367, -208.0085, -217.7016, -236.0415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-266.1926, -188.4871, -207.9923, -217.5943, -235.9945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-266.1895, -188.4836, -208.0110, -217.5328, -235.9748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-266.1537, -188.5041, -208.0005, -217.4553, -235.9400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-266.0884, -188.4919, -207.9898, -217.4030, -235.9296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-266.0246, -188.4812, -207.9851, -217.3721, -235.9505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-265.9923, -188.5279, -208.0172, -217.3820, -236.0155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-265.9343, -188.5937, -208.0059, -217.3705, -236.0717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-265.8960, -188.6671, -208.0208, -217.3802, -236.1359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-265.8222, -188.7427, -207.9902, -217.3375, -236.1499],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-265.7766, -188.8034, -207.9756, -217.3125, -236.1607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-265.7394, -188.8736, -207.9510, -217.2923, -236.1630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-265.7045, -188.8993, -207.9768, -217.3169, -236.1950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0381, device='cuda:0', dtype=torch.float64)
tensor([-265.6864, -188.9338, -207.9965, -217.3286, -236.2354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-265.5826, -188.9592, -207.9746, -217.3074, -236.2737],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-265.5419, -188.9531, -207.9855, -217.3031, -236.3392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-265.5297, -188.9544, -207.9889, -217.2871, -236.3952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-265.4787, -188.9553, -207.9892, -217.2640, -236.4249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-265.4620, -188.9055, -208.0125, -217.2685, -236.4837],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-265.4937, -188.8493, -208.0514, -217.2940, -236.5212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-265.5514, -188.8042, -208.1080, -217.3385, -236.5533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-265.5959, -188.7439, -208.1592, -217.3838, -236.5515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0347, device='cuda:0', dtype=torch.float64)
tensor([-265.6446, -188.6863, -208.2449, -217.4433, -236.5696],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0351, device='cuda:0', dtype=torch.float64)
tensor([-265.6512, -188.6769, -208.2976, -217.4688, -236.5938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0362, device='cuda:0', dtype=torch.float64)
tensor([-265.6371, -188.6579, -208.3092, -217.4601, -236.5537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-265.6730, -188.6507, -208.3647, -217.5087, -236.5600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-265.7032, -188.6169, -208.4197, -217.5589, -236.5521],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-265.7113, -188.6008, -208.4694, -217.5871, -236.5599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-265.7166, -188.5835, -208.5101, -217.6080, -236.5249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-265.6775, -188.5843, -208.5245, -217.6024, -236.4950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-265.6182, -188.5798, -208.5256, -217.6034, -236.4435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-265.5573, -188.5746, -208.5103, -217.5933, -236.3621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-265.5377, -188.5254, -208.5278, -217.6320, -236.3077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-265.4981, -188.4879, -208.5499, -217.6806, -236.2381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-265.4981, -188.4404, -208.6048, -217.7491, -236.1842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-265.5134, -188.3418, -208.7008, -217.8577, -236.1613],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-265.5539, -188.2549, -208.7943, -217.9907, -236.1684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-265.5783, -188.1827, -208.8853, -218.1197, -236.1908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-265.5834, -188.1279, -208.9876, -218.2300, -236.2100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-265.5710, -188.0610, -209.0836, -218.3393, -236.2235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-265.5491, -188.0471, -209.1565, -218.4233, -236.2362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-265.5110, -187.9627, -209.2472, -218.5312, -236.2726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-265.4893, -187.9367, -209.2796, -218.6015, -236.2923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-265.3892, -187.8981, -209.3099, -218.6686, -236.3210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-265.3159, -187.8665, -209.3513, -218.7242, -236.3253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-265.2736, -187.8374, -209.3968, -218.7843, -236.3473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0458, device='cuda:0', dtype=torch.float64)
tensor([-265.2575, -187.7857, -209.4711, -218.8646, -236.3599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-265.2482, -187.7200, -209.5215, -218.9417, -236.3557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-265.2855, -187.6194, -209.5914, -219.0562, -236.3842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0388, device='cuda:0', dtype=torch.float64)
tensor([-265.3294, -187.5035, -209.6888, -219.1836, -236.4544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-265.3537, -187.4050, -209.7648, -219.2908, -236.5365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-265.3650, -187.3524, -209.8463, -219.3818, -236.6281],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-265.3293, -187.2947, -209.8726, -219.4361, -236.6711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-265.2640, -187.2392, -209.8835, -219.4648, -236.7051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-265.1639, -187.1553, -209.8885, -219.4665, -236.7479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-265.0693, -187.1177, -209.8915, -219.4520, -236.7895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-265.0187, -187.0836, -209.8633, -219.4062, -236.7875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-264.9744, -187.0180, -209.8496, -219.3586, -236.7838],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-264.9663, -186.9619, -209.8250, -219.3162, -236.7728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-264.9543, -186.8661, -209.8440, -219.2931, -236.7580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-264.9779, -186.8002, -209.8650, -219.2751, -236.7708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-264.9619, -186.7510, -209.8902, -219.2508, -236.7697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-264.8903, -186.6861, -209.8868, -219.1941, -236.7553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-264.7733, -186.6442, -209.8568, -219.1159, -236.7319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-264.6797, -186.6156, -209.8492, -219.0725, -236.7244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-264.5940, -186.6464, -209.7673, -218.9830, -236.6938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-264.4629, -186.6893, -209.6585, -218.8687, -236.6437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-264.2673, -186.7713, -209.5347, -218.7464, -236.6011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-264.0335, -186.8942, -209.3646, -218.5881, -236.5339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-263.8404, -187.0465, -209.1891, -218.4187, -236.4503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-263.6994, -187.1879, -209.0548, -218.2737, -236.3883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-263.5334, -187.3124, -208.9270, -218.1344, -236.3324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-263.4002, -187.4620, -208.8292, -217.9921, -236.2845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-263.2899, -187.5827, -208.7913, -217.8846, -236.2887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-263.1950, -187.7236, -208.7454, -217.7772, -236.2708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-263.1330, -187.8332, -208.7755, -217.7360, -236.2830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-263.0962, -187.9328, -208.8354, -217.7240, -236.3037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-263.0392, -187.9899, -208.8851, -217.6960, -236.3309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-262.9727, -188.0447, -208.9069, -217.6424, -236.3558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-262.8778, -188.1135, -208.9598, -217.6243, -236.4208],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-262.7970, -188.1419, -209.0553, -217.6356, -236.4960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-262.7481, -188.1743, -209.1424, -217.6316, -236.5624],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-262.7171, -188.1705, -209.2700, -217.6661, -236.6354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-262.7101, -188.1979, -209.3968, -217.6958, -236.7060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-262.7188, -188.1280, -209.5817, -217.7804, -236.7994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-262.7465, -188.0438, -209.7352, -217.8739, -236.9057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-262.7431, -187.9381, -209.8396, -217.9449, -236.9896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-262.6764, -187.8324, -209.9522, -218.0251, -237.0506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-262.6200, -187.7584, -210.0541, -218.0765, -237.1059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-262.5945, -187.6718, -210.1635, -218.1370, -237.1764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-262.5295, -187.5721, -210.2223, -218.1703, -237.2349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-262.4534, -187.4556, -210.2867, -218.2074, -237.2830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-262.3869, -187.3184, -210.3376, -218.2271, -237.3313],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-262.2741, -187.2374, -210.3314, -218.1821, -237.3413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-262.2153, -187.1900, -210.3222, -218.1355, -237.3359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-262.1215, -187.2483, -210.2157, -218.0353, -237.3002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-262.0005, -187.3056, -210.0762, -217.9192, -237.2571],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-261.9164, -187.4168, -209.9023, -217.7714, -237.2036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-261.8335, -187.5536, -209.7564, -217.6586, -237.1611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-261.7125, -187.6369, -209.6245, -217.5758, -237.1466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-261.6449, -187.6789, -209.5603, -217.5539, -237.1606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-261.5812, -187.6712, -209.4957, -217.5332, -237.1431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-261.5098, -187.6448, -209.4242, -217.5109, -237.1150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-261.4437, -187.5392, -209.4012, -217.5259, -237.0846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-261.3885, -187.4268, -209.4039, -217.5700, -237.0537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-261.2755, -187.2985, -209.4114, -217.6091, -237.0167],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-261.1206, -187.1942, -209.4213, -217.6634, -237.0048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-261.0341, -187.1034, -209.4988, -217.7557, -237.0439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-260.9750, -187.0071, -209.5699, -217.8596, -237.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-260.8751, -186.9463, -209.6547, -217.9595, -237.1298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-260.7958, -186.8992, -209.7600, -218.0693, -237.1991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-260.7276, -186.8427, -209.8714, -218.2122, -237.2875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-260.6017, -186.8118, -209.9421, -218.2949, -237.3459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-260.5252, -186.8042, -210.0047, -218.3724, -237.3799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-260.4444, -186.8121, -210.0419, -218.4382, -237.4052],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-260.4443, -186.8459, -210.1051, -218.5021, -237.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-260.4265, -186.8776, -210.1931, -218.5812, -237.4950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-260.3907, -186.8786, -210.2817, -218.6454, -237.5327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-260.3555, -186.8570, -210.3809, -218.7232, -237.5564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0336, device='cuda:0', dtype=torch.float64)
tensor([-260.3048, -186.8834, -210.4569, -218.7556, -237.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-260.2987, -186.8726, -210.5676, -218.8223, -237.5945],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-260.3383, -186.8399, -210.7120, -218.9249, -237.6416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-260.3675, -186.8285, -210.8277, -218.9900, -237.6842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-260.4213, -186.8328, -210.9401, -219.0512, -237.7470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-260.4589, -186.8296, -211.0323, -219.1077, -237.8219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-260.4672, -186.7767, -211.1398, -219.1579, -237.8964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-260.4968, -186.7484, -211.2584, -219.2108, -237.9789],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-260.5024, -186.6939, -211.4108, -219.2790, -238.1036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-260.5571, -186.6623, -211.5221, -219.3375, -238.2035],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-260.5744, -186.6195, -211.5942, -219.3508, -238.2405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-260.5997, -186.6172, -211.6404, -219.3396, -238.2480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-260.6516, -186.5849, -211.7245, -219.3524, -238.2931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-260.6671, -186.5898, -211.7329, -219.3180, -238.3155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-260.7343, -186.6268, -211.7385, -219.2815, -238.3389],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-260.8324, -186.6454, -211.7304, -219.2486, -238.3202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-260.8528, -186.7159, -211.7036, -219.1909, -238.2955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-260.8661, -186.8058, -211.6527, -219.1017, -238.2531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-260.8928, -186.9321, -211.5851, -219.0128, -238.2232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-260.8828, -187.0847, -211.5224, -218.9057, -238.1853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-260.8863, -187.2569, -211.4540, -218.8127, -238.1886],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-260.8948, -187.4137, -211.3575, -218.7163, -238.1999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-260.8824, -187.5117, -211.3224, -218.6531, -238.2086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-260.7990, -187.5675, -211.2806, -218.5848, -238.1756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-260.6960, -187.6439, -211.2070, -218.4721, -238.1213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-260.5725, -187.6868, -211.1132, -218.3513, -238.0312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-260.5118, -187.7644, -211.0308, -218.2462, -237.9638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-260.4835, -187.8258, -210.9818, -218.1751, -237.9142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-260.4869, -187.7909, -210.9827, -218.1439, -237.8674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-260.5459, -187.7960, -210.9817, -218.0996, -237.8184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-260.6131, -187.7817, -210.9984, -218.0767, -237.7887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-260.6240, -187.7842, -211.0041, -218.0562, -237.7777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0345, device='cuda:0', dtype=torch.float64)
tensor([-260.6689, -187.7730, -211.0571, -218.0566, -237.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-260.7360, -187.7223, -211.1360, -218.0878, -237.7762],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-260.7659, -187.6692, -211.2237, -218.1253, -237.7977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-260.7850, -187.5693, -211.3385, -218.1917, -237.8309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-260.8842, -187.4689, -211.4468, -218.2619, -237.8502],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-260.9486, -187.4256, -211.4935, -218.2787, -237.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-260.9480, -187.3212, -211.5702, -218.3152, -237.8825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-260.9245, -187.2209, -211.6323, -218.3249, -237.8950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-260.8966, -187.1808, -211.6880, -218.3196, -237.9102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-260.9227, -187.1302, -211.7353, -218.3231, -237.9200],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-260.9496, -187.0788, -211.8069, -218.3632, -237.9358],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-260.9611, -187.0840, -211.8435, -218.3712, -237.9565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-260.9269, -187.0518, -211.8864, -218.3756, -237.9618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-260.8367, -187.0226, -211.9341, -218.3747, -237.9436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-260.7476, -186.9321, -212.0321, -218.4317, -237.9675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-260.6262, -186.8385, -212.0814, -218.4544, -237.9603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-260.4676, -186.7660, -212.0944, -218.4375, -237.8955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-260.3386, -186.7369, -212.0998, -218.4186, -237.8390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-260.2376, -186.6832, -212.1562, -218.4371, -237.7618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-260.1113, -186.6410, -212.1743, -218.4265, -237.6505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-259.9816, -186.5817, -212.2064, -218.4382, -237.5702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-259.8344, -186.5490, -212.2174, -218.4264, -237.4672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-259.6737, -186.5100, -212.2273, -218.4335, -237.4277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-259.5292, -186.4791, -212.2321, -218.4508, -237.3976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-259.3768, -186.4724, -212.2205, -218.4417, -237.3607],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-259.2123, -186.4745, -212.2583, -218.4571, -237.3476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-259.0056, -186.4848, -212.2788, -218.4657, -237.3408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-258.8026, -186.4831, -212.3081, -218.4939, -237.3291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-258.6148, -186.5291, -212.3257, -218.4831, -237.3103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-258.4625, -186.5586, -212.3724, -218.5077, -237.2990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-258.3427, -186.5810, -212.4420, -218.5468, -237.3074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-258.2616, -186.6042, -212.5103, -218.5890, -237.3258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-258.1905, -186.6214, -212.5753, -218.6319, -237.3383],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-258.0962, -186.6087, -212.6404, -218.6733, -237.3487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-258.0193, -186.5933, -212.7093, -218.7172, -237.3700],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0356, device='cuda:0', dtype=torch.float64)
tensor([-257.9861, -186.6078, -212.7880, -218.7777, -237.4362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-257.9692, -186.6548, -212.8593, -218.8438, -237.5083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-258.0059, -186.6740, -212.9541, -218.9373, -237.5891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-258.0441, -186.7307, -213.0286, -219.0205, -237.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-258.1221, -186.7659, -213.1156, -219.1113, -237.6863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-258.1739, -186.8294, -213.1660, -219.1544, -237.6961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-258.2145, -186.9050, -213.2183, -219.2134, -237.7044],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-258.2667, -186.9969, -213.2549, -219.2603, -237.6965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-258.3285, -187.0644, -213.2908, -219.3117, -237.7004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-258.4592, -187.0478, -213.3861, -219.4177, -237.7369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-258.6446, -187.1146, -213.4749, -219.5044, -237.7767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-258.8276, -187.1502, -213.5834, -219.6040, -237.8000],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-258.9543, -187.2179, -213.6803, -219.7043, -237.8432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-259.0682, -187.3003, -213.7237, -219.7632, -237.8508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-259.0781, -187.3991, -213.7272, -219.7609, -237.8508],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-259.0706, -187.4961, -213.7323, -219.7379, -237.8549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-259.0114, -187.5194, -213.7288, -219.7112, -237.8976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-258.9091, -187.5591, -213.6972, -219.6762, -237.9365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-258.7412, -187.5660, -213.6787, -219.6215, -237.9578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0378, device='cuda:0', dtype=torch.float64)
tensor([-258.6531, -187.5818, -213.7042, -219.5874, -238.0012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-258.4939, -187.5922, -213.7255, -219.5458, -238.0468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-258.3843, -187.6142, -213.7253, -219.5094, -238.0673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-258.2709, -187.6262, -213.7629, -219.4885, -238.0941],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-258.1362, -187.6285, -213.8020, -219.4644, -238.1173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-257.9564, -187.6395, -213.8200, -219.4477, -238.1390],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-257.7558, -187.6176, -213.8831, -219.4611, -238.1863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-257.5718, -187.5859, -213.9492, -219.4853, -238.2399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-257.4053, -187.5816, -213.9780, -219.4605, -238.2686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-257.2319, -187.5456, -214.0245, -219.4574, -238.3217],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-257.0205, -187.4873, -214.0359, -219.4160, -238.3477],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-256.8683, -187.4029, -214.1204, -219.4242, -238.3907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-256.7219, -187.3416, -214.2323, -219.4495, -238.4307],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-256.5421, -187.2758, -214.3022, -219.4487, -238.4559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-256.3638, -187.2026, -214.3930, -219.4684, -238.5103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-256.2418, -187.1823, -214.4637, -219.4740, -238.5479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-256.1469, -187.1232, -214.5163, -219.4931, -238.5799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-256.0433, -187.0754, -214.5523, -219.4950, -238.6105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-255.8969, -187.0072, -214.5550, -219.4534, -238.5922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-255.7570, -186.9520, -214.5446, -219.4069, -238.5563],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-255.6115, -186.9032, -214.5299, -219.3460, -238.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-255.4775, -186.8718, -214.4909, -219.2911, -238.4949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-255.3659, -186.8361, -214.4502, -219.2218, -238.4405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-255.2840, -186.8649, -214.3587, -219.0884, -238.3457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-255.2102, -186.8852, -214.2566, -218.9606, -238.2579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-255.0848, -186.9254, -214.1163, -218.8253, -238.1662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-255.0134, -186.9720, -213.9922, -218.7093, -238.0939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-254.9095, -186.9801, -213.8891, -218.6108, -238.0367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-254.8036, -187.0079, -213.8064, -218.5062, -237.9783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-254.6995, -187.0254, -213.7403, -218.4325, -237.9511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-254.5560, -187.0455, -213.7170, -218.3743, -237.9621],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-254.4242, -187.0311, -213.7253, -218.3414, -237.9855],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-254.2196, -187.0141, -213.7107, -218.2754, -237.9790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-254.0087, -186.9350, -213.7047, -218.2253, -237.9593],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-253.7825, -186.8536, -213.6733, -218.1623, -237.9025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-253.5631, -186.7728, -213.6252, -218.1005, -237.8841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-253.3732, -186.7248, -213.5425, -218.0067, -237.8379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-253.2277, -186.7002, -213.4673, -217.9415, -237.7785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0354, device='cuda:0', dtype=torch.float64)
tensor([-253.0785, -186.7119, -213.3710, -217.8673, -237.7426],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-252.9498, -186.6593, -213.3302, -217.8105, -237.6887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-252.8980, -186.6512, -213.3069, -217.7884, -237.6553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-252.8320, -186.5876, -213.2931, -217.7818, -237.6184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-252.7397, -186.5199, -213.2714, -217.7722, -237.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-252.7492, -186.4137, -213.3212, -217.8181, -237.5898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-252.7847, -186.2950, -213.3952, -217.8885, -237.5866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0389, device='cuda:0', dtype=torch.float64)
tensor([-252.7671, -186.1120, -213.5211, -218.0432, -237.6185],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-252.8022, -185.8936, -213.6868, -218.2504, -237.6839],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-252.7697, -185.6746, -213.8288, -218.4323, -237.7284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-252.7366, -185.4862, -213.9262, -218.5691, -237.7574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-252.7187, -185.3354, -214.0058, -218.6927, -237.7712],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-252.7290, -185.1915, -214.0960, -218.8261, -237.7938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-252.7929, -185.1404, -214.1596, -218.9486, -237.8100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-252.8798, -185.1182, -214.2228, -219.0416, -237.8379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-252.8804, -185.0445, -214.2667, -219.1151, -237.8463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-252.8252, -184.9804, -214.2547, -219.1474, -237.8446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-252.8307, -184.9463, -214.2276, -219.1636, -237.8512],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-252.8764, -184.9409, -214.1949, -219.1550, -237.8315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-252.8943, -184.9728, -214.1371, -219.1307, -237.8153],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-252.9515, -184.9759, -214.1231, -219.1408, -237.8249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-252.9998, -184.9750, -214.0568, -219.0824, -237.7844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-253.0100, -184.9195, -214.0059, -219.0279, -237.7427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0346, device='cuda:0', dtype=torch.float64)
tensor([-253.0036, -184.8392, -214.0024, -218.9960, -237.7538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-252.9520, -184.7305, -214.0407, -218.9823, -237.7765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-252.8509, -184.7178, -214.0185, -218.9102, -237.8124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-252.7078, -184.6902, -213.9866, -218.8565, -237.8711],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-252.5787, -184.6503, -213.9580, -218.7940, -237.9337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-252.4185, -184.6075, -213.9530, -218.7386, -237.9972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-252.2164, -184.5033, -213.9763, -218.7347, -238.0670],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-251.9659, -184.3477, -214.0132, -218.7349, -238.1466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-251.7438, -184.2128, -214.0332, -218.7032, -238.1967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-251.5353, -184.1114, -214.0398, -218.6728, -238.2354],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-251.3296, -183.9475, -214.0911, -218.6742, -238.2790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-251.1033, -183.8276, -214.1050, -218.6582, -238.2787],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-250.8790, -183.6744, -214.1753, -218.6778, -238.2942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-250.5638, -183.5561, -214.2414, -218.6809, -238.3348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-250.3341, -183.5015, -214.3037, -218.6727, -238.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-250.1317, -183.4379, -214.3897, -218.6840, -238.4011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-250.0248, -183.4005, -214.4945, -218.7011, -238.4048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-249.9381, -183.3805, -214.5816, -218.7157, -238.3971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-249.8226, -183.4024, -214.6102, -218.6864, -238.3671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-249.7196, -183.4488, -214.6154, -218.6375, -238.3368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0318, device='cuda:0', dtype=torch.float64)
tensor([-249.6710, -183.5726, -214.5820, -218.5854, -238.3198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-249.7616, -183.7427, -214.5488, -218.5537, -238.2940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-249.8671, -183.9030, -214.5324, -218.5562, -238.2725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-250.0151, -184.0926, -214.5134, -218.5652, -238.2640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-250.2063, -184.3188, -214.4972, -218.6007, -238.2674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-250.3559, -184.5059, -214.4774, -218.6180, -238.2528],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-250.4547, -184.6287, -214.4965, -218.6518, -238.2467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-250.5729, -184.7680, -214.5430, -218.7012, -238.2645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-250.5807, -184.8171, -214.5694, -218.7087, -238.2667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-250.6046, -184.8545, -214.6063, -218.7457, -238.2933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-250.6722, -184.8642, -214.6989, -218.8504, -238.3580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-250.7447, -184.8164, -214.7988, -218.9774, -238.4134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0398, device='cuda:0', dtype=torch.float64)
tensor([-250.7805, -184.6964, -214.9293, -219.1628, -238.4741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-250.8283, -184.6035, -215.0489, -219.3212, -238.5444],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-250.8154, -184.5321, -215.1114, -219.4181, -238.5699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-250.8074, -184.5119, -215.1272, -219.4589, -238.5675],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-250.8144, -184.4274, -215.2320, -219.5540, -238.5825],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-250.7219, -184.3878, -215.2636, -219.5676, -238.5660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-250.5946, -184.4190, -215.2045, -219.5016, -238.4984],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0322, device='cuda:0', dtype=torch.float64)
tensor([-250.5611, -184.4174, -215.2450, -219.5460, -238.4827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-250.5650, -184.3949, -215.3246, -219.6321, -238.5327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-250.5291, -184.3455, -215.4054, -219.7180, -238.5848],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-250.4245, -184.3110, -215.4531, -219.7452, -238.6045],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-250.3222, -184.2804, -215.5030, -219.7797, -238.6028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-250.2320, -184.2997, -215.5490, -219.7808, -238.6255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-250.1169, -184.2703, -215.5809, -219.7789, -238.6364],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-250.0467, -184.2860, -215.5707, -219.7454, -238.6252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-250.0488, -184.3226, -215.5534, -219.7373, -238.6232],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-250.1247, -184.4024, -215.5688, -219.7517, -238.6340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-250.1399, -184.4512, -215.5825, -219.7671, -238.6599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-250.0891, -184.4623, -215.6027, -219.7680, -238.6697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-250.0179, -184.5268, -215.5787, -219.7457, -238.6865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0341, device='cuda:0', dtype=torch.float64)
tensor([-249.8600, -184.6041, -215.5019, -219.6642, -238.6514],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-249.7244, -184.6440, -215.4818, -219.6297, -238.6243],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-249.6240, -184.6892, -215.5001, -219.6176, -238.5935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-249.5377, -184.7295, -215.5078, -219.5685, -238.5109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-249.5312, -184.7949, -215.5381, -219.5368, -238.4493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-249.4911, -184.8538, -215.5416, -219.4711, -238.3725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-249.4315, -184.9384, -215.4862, -219.3666, -238.2664],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-249.4053, -185.0071, -215.4830, -219.3111, -238.1897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-249.3784, -185.0528, -215.4690, -219.2458, -238.1261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0442, device='cuda:0', dtype=torch.float64)
tensor([-249.3865, -185.1872, -215.4402, -219.1472, -238.0786],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-249.4271, -185.2652, -215.4395, -219.0782, -238.0379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-249.4587, -185.3480, -215.3601, -218.9501, -237.9849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-249.4375, -185.4003, -215.2664, -218.8182, -237.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-249.3942, -185.4243, -215.1471, -218.6614, -237.8669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0321, device='cuda:0', dtype=torch.float64)
tensor([-249.3345, -185.4177, -215.0372, -218.5300, -237.8386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-249.2183, -185.3553, -214.9438, -218.4225, -237.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-249.0485, -185.2721, -214.8367, -218.3183, -237.8119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-248.8689, -185.1813, -214.6927, -218.1897, -237.7694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-248.7662, -185.1253, -214.5597, -218.0769, -237.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-248.6575, -185.1028, -214.4450, -217.9663, -237.7370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-248.6538, -185.0835, -214.3338, -217.8818, -237.7455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-248.5982, -185.0619, -214.2271, -217.7874, -237.7252],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-248.4908, -184.9818, -214.1092, -217.6882, -237.6759],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-248.4500, -184.8641, -214.0602, -217.6693, -237.6611],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-248.4229, -184.7556, -214.0664, -217.6713, -237.6329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-248.3512, -184.6540, -214.0411, -217.6430, -237.5990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-248.1523, -184.5109, -213.9587, -217.5858, -237.5100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-247.9399, -184.3673, -213.9104, -217.5429, -237.4262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-247.7399, -184.1944, -213.8768, -217.4986, -237.3618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0344, device='cuda:0', dtype=torch.float64)
tensor([-247.5024, -184.0442, -213.7804, -217.4052, -237.2595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-247.2638, -183.9238, -213.6610, -217.2915, -237.1162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-247.0678, -183.8196, -213.5460, -217.1709, -237.0027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-246.8781, -183.7754, -213.4230, -217.0572, -236.8798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-246.6095, -183.6755, -213.3127, -216.9553, -236.7761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0343, device='cuda:0', dtype=torch.float64)
tensor([-246.3189, -183.5671, -213.1881, -216.8272, -236.7050],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-246.0318, -183.4462, -213.1031, -216.7322, -236.6686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-245.8616, -183.4052, -213.0454, -216.6693, -236.6597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-245.7333, -183.3935, -213.0314, -216.6373, -236.6575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-245.6545, -183.3867, -213.0457, -216.6254, -236.6620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-245.6012, -183.3370, -213.0963, -216.6414, -236.6645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-245.5817, -183.3376, -213.1202, -216.6214, -236.6434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-245.6098, -183.3034, -213.1729, -216.6483, -236.6204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-245.7044, -183.2396, -213.2699, -216.7017, -236.5891],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-245.7478, -183.1776, -213.3313, -216.7155, -236.5214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-245.8087, -183.1758, -213.3458, -216.6914, -236.4446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-245.8630, -183.1375, -213.3894, -216.6906, -236.3547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-245.9536, -183.1273, -213.4227, -216.6713, -236.2746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-245.9938, -183.1645, -213.4302, -216.6307, -236.2057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-246.0078, -183.2445, -213.3807, -216.5279, -236.1082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-246.0313, -183.2707, -213.3706, -216.4471, -236.0122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-246.0470, -183.2718, -213.3828, -216.3978, -235.9375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-246.0807, -183.2141, -213.4208, -216.3749, -235.8531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-246.1950, -183.1602, -213.5033, -216.3981, -235.7973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-246.3104, -183.0563, -213.6366, -216.4887, -235.7822],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-246.4753, -183.0418, -213.7435, -216.5760, -235.7823],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-246.6989, -183.0751, -213.8462, -216.6638, -235.8178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-246.9544, -183.1327, -213.9665, -216.7658, -235.8672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-247.1623, -183.1430, -214.0736, -216.8498, -235.9214],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-247.2859, -183.2483, -214.0722, -216.8287, -235.9405],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-247.3121, -183.3317, -214.0401, -216.7892, -235.9305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-247.3784, -183.4107, -214.0255, -216.7627, -235.9298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-247.4289, -183.4544, -214.0337, -216.7609, -235.9340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-247.4112, -183.4658, -213.9976, -216.7447, -235.9261],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-247.4141, -183.5687, -213.9179, -216.6987, -235.9028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-247.4336, -183.6860, -213.8369, -216.6448, -235.8930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-247.3426, -183.7600, -213.6922, -216.5372, -235.8484],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-247.1912, -183.8136, -213.5122, -216.3930, -235.7824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-246.9749, -183.8579, -213.3181, -216.2191, -235.6904],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-246.8463, -183.9094, -213.1780, -216.1079, -235.6067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-246.7018, -183.9652, -213.0300, -215.9842, -235.4864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-246.5256, -183.9834, -212.8835, -215.8758, -235.3654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-246.3779, -183.9756, -212.8040, -215.8069, -235.2657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-246.2887, -183.9917, -212.7496, -215.7649, -235.1928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0349, device='cuda:0', dtype=torch.float64)
tensor([-246.1685, -184.0100, -212.6334, -215.6944, -235.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-246.0669, -184.0244, -212.5404, -215.6429, -235.0197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-245.9492, -183.9898, -212.4622, -215.6001, -234.9398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-245.8998, -183.9517, -212.4513, -215.6205, -234.9115],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-245.8790, -183.9273, -212.4528, -215.6345, -234.8788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-245.7955, -183.8679, -212.4473, -215.6435, -234.8493],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-245.7146, -183.8777, -212.4272, -215.6311, -234.8162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-245.6461, -183.8855, -212.3675, -215.5895, -234.7446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-245.5650, -183.8923, -212.2864, -215.5405, -234.6785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-245.4883, -183.8529, -212.2104, -215.5053, -234.5955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-245.4214, -183.8174, -212.1369, -215.4797, -234.5126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-245.3434, -183.7390, -212.0666, -215.4433, -234.4100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-245.2662, -183.6794, -212.0006, -215.4023, -234.2887],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-245.1877, -183.6393, -211.9738, -215.3878, -234.1780],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-245.1817, -183.6187, -212.0036, -215.4027, -234.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-245.1775, -183.5725, -212.0483, -215.4143, -233.9699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-245.2414, -183.5498, -212.1232, -215.4578, -233.8978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-245.2110, -183.5253, -212.1843, -215.4868, -233.8387],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-245.2355, -183.5523, -212.2879, -215.5636, -233.8019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-245.2545, -183.6146, -212.3415, -215.6005, -233.7559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-245.2633, -183.6491, -212.3808, -215.6311, -233.6963],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-245.3262, -183.6451, -212.4521, -215.6889, -233.6627],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-245.4008, -183.6915, -212.5024, -215.7095, -233.6168],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-245.4422, -183.7260, -212.5474, -215.7174, -233.5908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-245.4503, -183.7921, -212.5601, -215.6740, -233.5505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-245.4869, -183.8316, -212.6080, -215.6761, -233.5836],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0330, device='cuda:0', dtype=torch.float64)
tensor([-245.4938, -183.8609, -212.6488, -215.6613, -233.6260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-245.4396, -183.8371, -212.7088, -215.6542, -233.6594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-245.3174, -183.7460, -212.7702, -215.6471, -233.6920],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-245.2436, -183.7308, -212.8254, -215.6414, -233.7362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-245.1514, -183.6506, -212.9052, -215.6700, -233.8140],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-245.1003, -183.6004, -212.9611, -215.6958, -233.8694],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-244.9831, -183.5694, -212.9855, -215.6801, -233.9118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-244.7979, -183.5567, -213.0124, -215.6450, -233.9803],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-244.6362, -183.5883, -213.0154, -215.6016, -234.0295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-244.4614, -183.6172, -213.0425, -215.5691, -234.0933],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-244.3130, -183.5881, -213.1286, -215.5892, -234.1743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0335, device='cuda:0', dtype=torch.float64)
tensor([-244.1914, -183.5380, -213.2310, -215.6394, -234.2730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-244.0492, -183.4718, -213.3140, -215.6801, -234.3332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-243.9508, -183.4151, -213.4330, -215.7446, -234.4054],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-243.7278, -183.3003, -213.5166, -215.7769, -234.4304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-243.5122, -183.1479, -213.6182, -215.8278, -234.4415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-243.2598, -182.9096, -213.7336, -215.8695, -234.4506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-243.0318, -182.6745, -213.8780, -215.9359, -234.4865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-242.7653, -182.5035, -213.9233, -215.9211, -234.4811],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-242.4558, -182.3229, -213.8991, -215.8394, -234.4471],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-242.2548, -182.2069, -213.9043, -215.7975, -234.4240],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-242.0210, -182.1408, -213.8690, -215.7209, -234.3682],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-241.7917, -182.1096, -213.7764, -215.5873, -234.2807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-241.5824, -182.0950, -213.6647, -215.4551, -234.1854],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-241.4148, -182.1210, -213.5191, -215.3307, -234.0795],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-241.3362, -182.1527, -213.3838, -215.2344, -233.9892],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-241.3741, -182.2949, -213.2505, -215.1323, -233.8985],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-241.4582, -182.4466, -213.0948, -214.9911, -233.7895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-241.5027, -182.4882, -212.9777, -214.8711, -233.6935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-241.5190, -182.4962, -212.8786, -214.7638, -233.6120],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-241.5636, -182.5558, -212.7824, -214.6473, -233.5413],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0414, device='cuda:0', dtype=torch.float64)
tensor([-241.6505, -182.5980, -212.7471, -214.5703, -233.4615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-241.7385, -182.6298, -212.6970, -214.5038, -233.3785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-241.7230, -182.6299, -212.6119, -214.3852, -233.2957],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-241.6970, -182.6209, -212.5230, -214.2876, -233.1806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0352, device='cuda:0', dtype=torch.float64)
tensor([-241.6726, -182.5311, -212.4913, -214.2768, -233.1137],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-241.6475, -182.3797, -212.4977, -214.3155, -233.0666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-241.5897, -182.2427, -212.4877, -214.3438, -233.0182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-241.5724, -182.1919, -212.4487, -214.3431, -232.9665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-241.5878, -182.2015, -212.4248, -214.3485, -232.9346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-241.5958, -182.2422, -212.3888, -214.3274, -232.8875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-241.5169, -182.2447, -212.3258, -214.2896, -232.8519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-241.4288, -182.1462, -212.3711, -214.3302, -232.8239],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-241.3600, -182.0510, -212.4195, -214.3930, -232.8211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-241.3275, -182.0093, -212.4247, -214.4072, -232.7898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-241.3161, -181.9950, -212.4271, -214.4371, -232.7533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-241.3077, -181.9727, -212.4875, -214.4901, -232.7458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-241.3040, -181.9928, -212.5191, -214.5131, -232.7437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-241.3828, -182.0558, -212.6039, -214.5632, -232.7511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-241.4997, -182.1318, -212.6943, -214.6246, -232.7403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-241.5991, -182.1533, -212.8116, -214.7150, -232.7437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-241.6475, -182.1192, -212.9370, -214.8162, -232.7242],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-241.6881, -182.0307, -213.0904, -214.9616, -232.7195],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-241.6451, -181.9626, -213.1615, -215.0484, -232.6997],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-241.6049, -181.9505, -213.2028, -215.1016, -232.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-241.4728, -181.8477, -213.2073, -215.1288, -232.6103],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-241.3989, -181.7658, -213.2137, -215.1504, -232.5541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-241.3986, -181.6563, -213.2552, -215.2032, -232.4956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-241.3932, -181.6233, -213.2552, -215.2208, -232.4079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-241.3664, -181.6638, -213.1822, -215.1781, -232.3090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-241.3867, -181.7615, -213.0985, -215.1223, -232.2032],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-241.2990, -181.8452, -212.9619, -215.0261, -232.0894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-241.2342, -181.9317, -212.8662, -214.9727, -232.0114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-241.3160, -182.0331, -212.8464, -214.9831, -231.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-241.4082, -182.1117, -212.8689, -215.0221, -231.9667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-241.4170, -182.0899, -212.9487, -215.0963, -231.9580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-241.2565, -181.9669, -212.9559, -215.1155, -231.9205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-241.0666, -181.8199, -212.9577, -215.1291, -231.8796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-240.9089, -181.7657, -212.8838, -215.0738, -231.7932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-240.7505, -181.7408, -212.7708, -214.9800, -231.6978],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-240.6291, -181.7691, -212.6483, -214.8969, -231.6177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-240.4703, -181.8274, -212.4967, -214.7727, -231.5113],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-240.4337, -181.9357, -212.3589, -214.6794, -231.4152],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-240.4375, -182.1069, -212.1632, -214.5315, -231.2993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-240.3943, -182.2365, -211.9298, -214.3473, -231.1677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-240.2347, -182.3312, -211.6809, -214.1449, -231.0401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-240.2065, -182.4826, -211.4768, -213.9857, -230.9610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-240.1447, -182.5282, -211.3269, -213.8918, -230.9179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-240.1938, -182.6425, -211.2188, -213.8144, -230.8815],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-240.1685, -182.7097, -211.0766, -213.7126, -230.8277],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-240.1475, -182.7863, -210.9603, -213.6052, -230.7864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-240.0761, -182.8063, -210.8249, -213.5021, -230.7400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-240.0824, -182.8749, -210.6996, -213.4269, -230.6875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-240.1385, -182.9441, -210.5982, -213.3701, -230.6163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-240.2089, -183.0263, -210.5216, -213.3431, -230.5545],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-240.2682, -183.0495, -210.5117, -213.3644, -230.5106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-240.2734, -183.0489, -210.4916, -213.3802, -230.4733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-240.2739, -183.0230, -210.4915, -213.4072, -230.4574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-240.2777, -183.0326, -210.4800, -213.4279, -230.4433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-240.2994, -182.9745, -210.5515, -213.5271, -230.4525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-240.3447, -182.9403, -210.6398, -213.6310, -230.4577],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-240.4029, -182.9053, -210.7450, -213.7223, -230.4698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-240.4185, -182.8200, -210.8490, -213.8074, -230.4736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-240.4205, -182.7193, -210.9175, -213.8740, -230.4638],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-240.3734, -182.5496, -211.0173, -213.9599, -230.4718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-240.2596, -182.3267, -211.0946, -214.0436, -230.4685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-240.1504, -182.0371, -211.2230, -214.1823, -230.5094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-240.1123, -181.7989, -211.3467, -214.3040, -230.5230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-240.0294, -181.6049, -211.3836, -214.3562, -230.5188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-239.9181, -181.4228, -211.3813, -214.3758, -230.4872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0350, device='cuda:0', dtype=torch.float64)
tensor([-239.8272, -181.2338, -211.3917, -214.3964, -230.3994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-239.7141, -181.0025, -211.4058, -214.4086, -230.3181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-239.4849, -180.7532, -211.3586, -214.3699, -230.2128],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-239.2354, -180.5420, -211.2485, -214.2845, -230.0828],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-239.0260, -180.3537, -211.1725, -214.2223, -229.9879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-238.8236, -180.2834, -211.0224, -214.0913, -229.8653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-238.6767, -180.2521, -210.8699, -213.9633, -229.7440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-238.5599, -180.2318, -210.7208, -213.8313, -229.6143],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-238.3294, -180.0837, -210.5897, -213.7287, -229.4890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-238.1316, -180.0506, -210.4308, -213.5617, -229.3442],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-237.8627, -180.0305, -210.2187, -213.3613, -229.1523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-237.6209, -180.0283, -210.0053, -213.1598, -228.9423],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-237.3464, -179.9507, -209.8129, -212.9905, -228.7884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-236.9661, -179.8905, -209.5447, -212.7467, -228.6290],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-236.5289, -179.8481, -209.2502, -212.4656, -228.4478],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-236.1708, -179.8681, -208.9424, -212.1896, -228.2594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-235.8329, -179.9032, -208.6584, -211.9200, -228.0831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-235.4904, -180.0025, -208.3221, -211.6247, -227.9080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-235.2710, -180.1548, -208.0312, -211.3579, -227.7182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-235.1140, -180.3893, -207.7267, -211.0576, -227.5274],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0409, device='cuda:0', dtype=torch.float64)
tensor([-235.0701, -180.6333, -207.4498, -210.7819, -227.3601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-235.0614, -180.8697, -207.2098, -210.5439, -227.1818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-235.1462, -181.0854, -207.0063, -210.3660, -227.0669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-235.3061, -181.3402, -206.8348, -210.2271, -226.9813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-235.5615, -181.6104, -206.7640, -210.1656, -226.9209],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-235.8058, -181.8657, -206.7168, -210.1170, -226.8929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-236.0612, -182.0884, -206.7106, -210.1271, -226.9095],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-236.2701, -182.2125, -206.7062, -210.1389, -226.9360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-236.3581, -182.2953, -206.6615, -210.1097, -226.9296],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-236.4367, -182.2761, -206.6816, -210.1442, -226.9526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-236.4558, -182.1445, -206.7325, -210.2298, -226.9807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-236.6526, -182.0612, -206.9017, -210.4061, -227.0597],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-236.8620, -181.9306, -207.1542, -210.6286, -227.1923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-237.1731, -181.8132, -207.4697, -210.9049, -227.3751],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-237.5741, -181.7106, -207.9111, -211.2728, -227.5677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-237.8831, -181.6269, -208.2791, -211.5716, -227.7320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-238.0827, -181.5605, -208.5850, -211.8162, -227.8678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-238.2846, -181.4758, -208.8796, -212.0678, -227.9922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-238.4617, -181.3286, -209.1733, -212.3064, -228.1094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-238.5515, -181.1544, -209.4385, -212.5363, -228.1991],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-238.5727, -180.8957, -209.6823, -212.7465, -228.2856],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-238.5595, -180.6720, -209.8748, -212.9089, -228.3540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-238.5762, -180.5157, -210.0762, -213.0681, -228.4363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-238.5878, -180.4324, -210.2107, -213.1704, -228.4948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-238.5326, -180.3384, -210.2310, -213.1945, -228.5179],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-238.5394, -180.3284, -210.2416, -213.2043, -228.5150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-238.5300, -180.3066, -210.2949, -213.2193, -228.5053],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-238.4953, -180.2685, -210.3544, -213.2353, -228.5134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-238.4933, -180.2459, -210.4493, -213.2705, -228.5316],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-238.5825, -180.2547, -210.5990, -213.3425, -228.5609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-238.7159, -180.3134, -210.7020, -213.4055, -228.5540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-238.8117, -180.3670, -210.7726, -213.4449, -228.5458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-239.0177, -180.5211, -210.8914, -213.4981, -228.5728],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-239.2153, -180.6732, -210.9936, -213.5411, -228.5863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-239.3825, -180.7790, -211.1202, -213.5952, -228.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-239.4309, -180.8275, -211.1644, -213.5933, -228.5574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-239.3939, -180.7448, -211.2602, -213.6299, -228.5159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-239.2349, -180.6069, -211.2735, -213.6209, -228.4256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-238.9993, -180.4484, -211.2249, -213.5788, -228.3046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-238.6932, -180.1774, -211.2010, -213.5569, -228.2188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-238.3087, -179.9121, -211.1251, -213.4889, -228.0897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-238.0352, -179.6283, -211.1149, -213.4835, -227.9880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-237.7944, -179.4163, -211.0807, -213.4473, -227.8791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-237.5461, -179.2369, -211.0302, -213.3867, -227.7814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-237.2464, -179.0725, -210.9860, -213.3319, -227.6812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-236.9601, -178.9560, -210.9200, -213.2427, -227.5800],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-236.7031, -178.9442, -210.7756, -213.0911, -227.4412],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-236.4882, -178.9518, -210.6601, -212.9613, -227.3183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-236.1887, -178.8949, -210.5450, -212.8462, -227.1950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-235.8826, -178.8251, -210.4180, -212.7354, -227.0667],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-235.5891, -178.7124, -210.2892, -212.6576, -226.9284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-235.3253, -178.6395, -210.1816, -212.5647, -226.8150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-235.1519, -178.6363, -210.0955, -212.4933, -226.7133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-235.1087, -178.8086, -209.9732, -212.3907, -226.6183],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-235.0767, -178.9533, -209.8690, -212.2923, -226.5392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-235.0333, -179.0216, -209.7640, -212.2126, -226.4816],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-235.0110, -179.1647, -209.6634, -212.1385, -226.4466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-235.0778, -179.3730, -209.5377, -212.0288, -226.4163],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-235.2888, -179.6008, -209.4918, -211.9826, -226.4263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-235.5113, -179.8480, -209.4104, -211.9102, -226.4271],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-235.7397, -180.0553, -209.3872, -211.9069, -226.4533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-235.9665, -180.1947, -209.4249, -211.9434, -226.5087],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-236.1956, -180.2919, -209.5108, -212.0285, -226.6089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-236.2791, -180.3234, -209.5192, -212.0676, -226.6673],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-236.2346, -180.2917, -209.4573, -212.0549, -226.6766],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-236.1447, -180.2465, -209.4181, -212.0233, -226.6849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-236.1312, -180.2233, -209.4329, -212.0368, -226.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-236.0205, -180.0443, -209.4792, -212.0882, -226.7549],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-235.8826, -179.8491, -209.5419, -212.1580, -226.7938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-235.7182, -179.5918, -209.6472, -212.2741, -226.8688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-235.6252, -179.3487, -209.7634, -212.4102, -226.9473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0410, device='cuda:0', dtype=torch.float64)
tensor([-235.7347, -179.3055, -209.9495, -212.5713, -227.0482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-235.7560, -179.2336, -210.0840, -212.6907, -227.0961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-235.6775, -179.1129, -210.1375, -212.7748, -227.1041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-235.5838, -178.9569, -210.2158, -212.8903, -227.1273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-235.6264, -178.8671, -210.3803, -213.0785, -227.2077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-235.5901, -178.7287, -210.4942, -213.2247, -227.2457],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-235.5153, -178.6198, -210.5213, -213.3141, -227.2531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-235.3185, -178.4918, -210.5021, -213.3373, -227.2202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-235.1327, -178.3388, -210.4911, -213.3416, -227.1843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-234.8530, -178.2062, -210.3861, -213.2802, -227.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-234.7834, -178.1933, -210.3502, -213.2666, -227.0907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-234.7709, -178.2271, -210.3683, -213.2966, -227.0677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-234.8070, -178.3144, -210.4061, -213.3373, -227.0686],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-234.8200, -178.4156, -210.4249, -213.3345, -227.0380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-234.8237, -178.4792, -210.4648, -213.3520, -227.0260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-234.9383, -178.5739, -210.5492, -213.4202, -227.0610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-235.1925, -178.6727, -210.7357, -213.5631, -227.1138],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-235.4501, -178.7826, -210.9379, -213.7160, -227.1861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-235.6693, -178.9252, -211.1199, -213.8347, -227.2376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-235.8915, -179.0579, -211.3184, -213.9734, -227.2858],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-235.8657, -178.9631, -211.4337, -214.0604, -227.2649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-235.7267, -178.8492, -211.4399, -214.0590, -227.1809],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-235.5716, -178.7201, -211.4134, -214.0542, -227.1076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-235.5383, -178.7294, -211.4155, -214.0464, -227.0347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-235.6255, -178.7998, -211.4877, -214.0843, -226.9706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-235.6768, -178.8014, -211.5385, -214.1422, -226.9011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-235.8289, -178.8826, -211.6230, -214.2166, -226.8331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-236.0179, -178.9929, -211.6984, -214.3005, -226.7897],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-236.0400, -178.9839, -211.6825, -214.3241, -226.7057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-236.0794, -178.9962, -211.6433, -214.3094, -226.5917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-236.1299, -179.1062, -211.5772, -214.2679, -226.4932],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-236.1473, -179.1583, -211.5407, -214.2590, -226.4291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-236.2608, -179.2212, -211.5619, -214.2984, -226.3864],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-236.3657, -179.1692, -211.6405, -214.3703, -226.3462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0326, device='cuda:0', dtype=torch.float64)
tensor([-236.3817, -179.0302, -211.6988, -214.4277, -226.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-236.2771, -178.8032, -211.7340, -214.4777, -226.2595],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-236.1731, -178.6013, -211.7576, -214.5142, -226.2147],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-236.0825, -178.4209, -211.7914, -214.5620, -226.1956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-235.8919, -178.1578, -211.8043, -214.6194, -226.1518],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-235.6850, -177.9416, -211.7919, -214.6382, -226.0936],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-235.5517, -177.8330, -211.7736, -214.6100, -226.0456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-235.3914, -177.6806, -211.7436, -214.5765, -225.9975],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-235.2432, -177.4894, -211.7714, -214.5800, -225.9706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-235.1936, -177.3854, -211.8330, -214.5919, -225.9863],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-235.1356, -177.2680, -211.8952, -214.5873, -225.9940],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-234.9524, -177.0909, -211.9305, -214.5628, -225.9844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-234.7486, -176.9956, -211.8775, -214.4841, -225.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-234.6830, -177.0063, -211.8374, -214.4112, -225.9174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-234.6698, -177.1134, -211.7726, -214.3093, -225.8998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-234.6431, -177.2307, -211.6855, -214.1916, -225.8847],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-234.7020, -177.4344, -211.6131, -214.0894, -225.8725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-234.8236, -177.7390, -211.5357, -213.9732, -225.8589],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-235.0129, -178.0680, -211.4903, -213.9110, -225.8829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-235.3191, -178.4492, -211.5003, -213.8924, -225.9430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-235.5411, -178.6955, -211.5725, -213.9197, -226.0109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-235.6815, -178.8421, -211.6612, -213.9772, -226.0919],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-235.8409, -178.9657, -211.7606, -214.0426, -226.1666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-236.1464, -179.1071, -211.9537, -214.1748, -226.2761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-236.3380, -179.1286, -212.1378, -214.3038, -226.3465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-236.6116, -179.2118, -212.3479, -214.4418, -226.4255],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-236.8620, -179.2432, -212.5643, -214.6038, -226.4981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-236.9786, -179.2462, -212.6727, -214.6951, -226.5135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-236.9269, -179.1389, -212.6445, -214.7166, -226.4850],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-236.7710, -178.9775, -212.5614, -214.7031, -226.4181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-236.6478, -178.9129, -212.5000, -214.6650, -226.3832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-236.4408, -178.7264, -212.4613, -214.6591, -226.3487],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-236.2049, -178.5311, -212.4086, -214.6654, -226.3084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-235.9250, -178.2661, -212.3561, -214.6746, -226.2511],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-235.5016, -177.8968, -212.2147, -214.6460, -226.1610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0358, device='cuda:0', dtype=torch.float64)
tensor([-235.0737, -177.5907, -212.0266, -214.5655, -226.0642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-234.6990, -177.2919, -211.8865, -214.5108, -225.9588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-234.5021, -177.0974, -211.8319, -214.4936, -225.8960],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-234.2547, -176.8129, -211.8256, -214.5258, -225.8490],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-233.9909, -176.6429, -211.6873, -214.4570, -225.7562],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-233.7804, -176.4072, -211.6662, -214.4696, -225.6995],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-233.4759, -176.1799, -211.5685, -214.4182, -225.5954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-233.1271, -176.0025, -211.3802, -214.2897, -225.4748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-232.7204, -175.7562, -211.1416, -214.1380, -225.3249],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-232.3700, -175.5718, -210.9268, -214.0050, -225.1966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-231.9370, -175.3678, -210.6665, -213.8357, -225.0399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-231.7038, -175.3585, -210.4709, -213.6784, -224.9269],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-231.4700, -175.4088, -210.2073, -213.4663, -224.7895],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-231.3666, -175.5200, -210.0198, -213.2922, -224.6971],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-231.3210, -175.6684, -209.8564, -213.1025, -224.6063],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-231.3645, -175.9039, -209.7049, -212.9257, -224.5456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-231.4393, -176.1069, -209.6160, -212.7909, -224.5211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-231.5584, -176.3982, -209.5040, -212.6443, -224.5202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-231.6340, -176.6434, -209.4333, -212.5352, -224.5377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-231.8521, -176.8893, -209.4762, -212.5157, -224.5956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-232.0579, -177.1310, -209.4759, -212.4723, -224.6447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-232.2991, -177.4555, -209.4859, -212.4059, -224.7018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-232.3732, -177.6720, -209.4394, -212.3082, -224.7018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-232.6266, -178.0308, -209.4673, -212.2542, -224.7192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-232.9171, -178.4293, -209.4613, -212.1704, -224.6914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-233.0219, -178.6141, -209.4557, -212.1215, -224.6761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-233.1182, -178.7474, -209.4515, -212.0932, -224.6592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-233.2465, -178.7778, -209.5250, -212.1423, -224.6640],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-233.3129, -178.7735, -209.5968, -212.1988, -224.6481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-233.4335, -178.7981, -209.7314, -212.2854, -224.6761],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-233.5984, -178.8710, -209.8619, -212.3645, -224.7004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-233.6917, -178.9253, -209.9607, -212.4122, -224.7104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-233.8203, -178.9085, -210.1551, -212.5475, -224.7705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-233.9594, -178.9723, -210.3715, -212.7013, -224.8455],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-233.9848, -178.9426, -210.5477, -212.8439, -224.8817],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-233.8611, -178.8287, -210.5893, -212.8921, -224.8669],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-233.6711, -178.6220, -210.6332, -212.9409, -224.8622],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-233.5158, -178.4481, -210.7055, -212.9867, -224.8774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-233.1823, -178.1356, -210.7175, -212.9941, -224.8430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-232.8771, -177.7810, -210.7863, -213.0435, -224.8086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-232.5070, -177.4411, -210.7817, -213.0280, -224.7480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-232.0455, -176.9642, -210.7707, -213.0367, -224.6754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-231.5123, -176.3951, -210.7455, -213.0693, -224.6071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-230.9727, -175.8537, -210.6790, -213.0646, -224.5110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-230.4394, -175.3133, -210.6273, -213.0788, -224.4067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-229.9268, -174.7937, -210.5660, -213.1065, -224.3020],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-229.4190, -174.3533, -210.4770, -213.1068, -224.1671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-228.9639, -173.9846, -210.4003, -213.1106, -224.0369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-228.6462, -173.8312, -210.2648, -213.0473, -223.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-228.3501, -173.7103, -210.1365, -212.9782, -223.7291],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-228.2464, -173.7729, -210.0371, -212.9183, -223.6393],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-228.3448, -173.9929, -209.9866, -212.8801, -223.5629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-228.3409, -174.1692, -209.9085, -212.8382, -223.4713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-228.4689, -174.4919, -209.8718, -212.8037, -223.4131],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-228.6814, -174.9474, -209.8072, -212.7372, -223.3495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-228.9832, -175.4657, -209.7957, -212.7003, -223.3127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-229.4223, -176.0056, -209.8603, -212.7171, -223.3042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-229.8100, -176.4372, -209.9587, -212.7693, -223.3112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-230.0844, -176.6882, -210.1251, -212.8701, -223.3588],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-230.2941, -176.9341, -210.2133, -212.9220, -223.3576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-230.4510, -177.0724, -210.3411, -213.0142, -223.3738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0334, device='cuda:0', dtype=torch.float64)
tensor([-230.5311, -177.1888, -210.4156, -213.0714, -223.3708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-230.4704, -177.2724, -210.4487, -213.0836, -223.3438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0361, device='cuda:0', dtype=torch.float64)
tensor([-230.5002, -177.3317, -210.5525, -213.1382, -223.3450],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-230.5879, -177.5184, -210.6053, -213.1259, -223.3340],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-230.5885, -177.6905, -210.5844, -213.0802, -223.3190],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-230.5745, -177.8070, -210.5666, -213.0454, -223.3030],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-230.6026, -177.9321, -210.5779, -213.0124, -223.2802],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-230.7606, -178.0578, -210.6810, -213.0408, -223.3055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-230.8415, -178.0814, -210.7799, -213.0655, -223.3083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-230.9468, -178.1265, -210.8789, -213.0849, -223.3134],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-230.9910, -178.1071, -210.9197, -213.0835, -223.3094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-231.0275, -178.0874, -210.9692, -213.0773, -223.2979],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-231.0410, -177.9797, -211.0390, -213.0952, -223.2986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-231.0925, -178.0474, -211.0288, -213.0313, -223.2844],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-231.1685, -178.1513, -211.0094, -212.9536, -223.2609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-231.1313, -178.2031, -210.9312, -212.8465, -223.1882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-231.0755, -178.1814, -210.8804, -212.7781, -223.1228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-231.2103, -178.4002, -210.8484, -212.6857, -223.0430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-231.1766, -178.5646, -210.6611, -212.4985, -222.8926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-231.0115, -178.6508, -210.4347, -212.2876, -222.7182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-230.7949, -178.6903, -210.1940, -212.0758, -222.5392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-230.5792, -178.7016, -209.9269, -211.8675, -222.3767],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0302, device='cuda:0', dtype=torch.float64)
tensor([-230.3755, -178.7397, -209.6864, -211.6781, -222.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-230.3256, -178.9274, -209.5239, -211.5172, -222.1184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-230.2517, -179.0483, -209.3800, -211.3687, -222.0312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-230.1379, -179.0681, -209.2808, -211.2756, -221.9482],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-230.0183, -179.0074, -209.2990, -211.2663, -221.9136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-229.7260, -178.7315, -209.2817, -211.2632, -221.8629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0332, device='cuda:0', dtype=torch.float64)
tensor([-229.3811, -178.3280, -209.3041, -211.3155, -221.8219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-229.0539, -177.8244, -209.3943, -211.4225, -221.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-228.7277, -177.3182, -209.4912, -211.5259, -221.8210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-228.2525, -176.7226, -209.4332, -211.5379, -221.7654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-227.9174, -176.2833, -209.4057, -211.5508, -221.7287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-227.5595, -175.7269, -209.4244, -211.6156, -221.7062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-227.1825, -175.1822, -209.3938, -211.6604, -221.6600],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-226.8398, -174.6655, -209.3402, -211.6913, -221.6034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-226.5601, -174.2486, -209.3292, -211.7370, -221.5884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-226.3495, -173.8878, -209.3193, -211.7748, -221.5602],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-226.1779, -173.5642, -209.3129, -211.8142, -221.5468],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0325, device='cuda:0', dtype=torch.float64)
tensor([-226.1086, -173.3753, -209.3361, -211.8408, -221.5315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-226.2521, -173.3064, -209.5323, -211.9591, -221.5903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-226.4107, -173.2824, -209.7457, -212.0643, -221.6400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0310, device='cuda:0', dtype=torch.float64)
tensor([-226.6236, -173.3625, -209.9914, -212.1584, -221.7041],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-226.9135, -173.5516, -210.2400, -212.2478, -221.7764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-227.2573, -173.7498, -210.5325, -212.3626, -221.8435],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-227.5713, -174.0081, -210.7809, -212.4395, -221.8916],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-227.8016, -174.2380, -210.9429, -212.4604, -221.9004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-227.7749, -174.2886, -210.9515, -212.4308, -221.8666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0328, device='cuda:0', dtype=torch.float64)
tensor([-227.7660, -174.3129, -211.0658, -212.4499, -221.8634],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-227.8204, -174.4372, -211.1530, -212.4361, -221.8513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0320, device='cuda:0', dtype=torch.float64)
tensor([-227.7520, -174.3367, -211.2474, -212.4769, -221.8221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-227.7041, -174.2390, -211.3111, -212.5009, -221.7894],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-227.5415, -174.0623, -211.3068, -212.4941, -221.7386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0323, device='cuda:0', dtype=torch.float64)
tensor([-227.3701, -173.8897, -211.2687, -212.4791, -221.6755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-227.2968, -173.8851, -211.2247, -212.4306, -221.5992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-227.2508, -173.9714, -211.2091, -212.3792, -221.5496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-227.1827, -174.0743, -211.1793, -212.3162, -221.4832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-227.1367, -174.2396, -211.1186, -212.2154, -221.4038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0311, device='cuda:0', dtype=torch.float64)
tensor([-226.9548, -174.2089, -210.9861, -212.1139, -221.3047],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-226.9768, -174.3871, -210.8687, -211.9758, -221.2072],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-227.0447, -174.5205, -210.8597, -211.9046, -221.1708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-227.1513, -174.7233, -210.8822, -211.8450, -221.1315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-227.2558, -174.9302, -210.9258, -211.7824, -221.0973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-227.3967, -175.1853, -210.9496, -211.6904, -221.0459],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-227.5529, -175.3619, -211.0396, -211.6180, -221.0519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-227.5960, -175.3872, -211.0859, -211.5609, -221.0410],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-227.6144, -175.3733, -211.1244, -211.5098, -221.0213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-227.5488, -175.3490, -211.0354, -211.4013, -220.9474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-227.4205, -175.2709, -210.9223, -211.2731, -220.8567],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-227.3351, -175.2694, -210.8436, -211.1812, -220.8021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-227.1328, -175.2522, -210.6460, -211.0292, -220.7089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0314, device='cuda:0', dtype=torch.float64)
tensor([-227.1260, -175.3888, -210.5543, -210.8792, -220.6554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-227.0851, -175.4154, -210.4774, -210.7780, -220.6288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-227.0086, -175.3029, -210.4065, -210.7240, -220.5983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-226.8424, -175.1411, -210.2776, -210.6690, -220.5618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-226.5972, -174.9111, -210.1473, -210.6184, -220.5335],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-226.5472, -174.8122, -210.1494, -210.6416, -220.5584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-226.4514, -174.5535, -210.1643, -210.7110, -220.5935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-226.4201, -174.3236, -210.1843, -210.7607, -220.6207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-226.5592, -174.2480, -210.2365, -210.8224, -220.6582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-226.6819, -174.1020, -210.3798, -210.9621, -220.7339],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-226.8026, -174.0336, -210.5026, -211.0824, -220.8022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-226.9450, -174.0386, -210.5852, -211.1756, -220.8256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-227.1837, -174.1592, -210.7546, -211.3116, -220.9007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-227.1880, -174.0415, -210.7883, -211.4208, -220.9207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-227.1157, -173.9588, -210.7080, -211.4495, -220.9018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-227.0667, -173.9232, -210.6618, -211.4727, -220.8881],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-227.1262, -173.9511, -210.6468, -211.4902, -220.8807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-227.2130, -173.9263, -210.6954, -211.5554, -220.8805],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-226.9954, -173.5814, -210.6300, -211.6074, -220.8106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-226.6454, -173.1998, -210.4269, -211.5929, -220.6865],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-226.3190, -172.8813, -210.2392, -211.5711, -220.5743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-225.8151, -172.4278, -209.9557, -211.5129, -220.4042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-225.3002, -171.9792, -209.6656, -211.4453, -220.2309],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-224.9431, -171.6370, -209.5013, -211.4340, -220.1172],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-224.6019, -171.3362, -209.2881, -211.3824, -219.9948],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-224.4450, -171.1927, -209.1626, -211.3577, -219.9071],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-224.3270, -171.1091, -209.0095, -211.2794, -219.8287],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-224.4462, -171.1811, -209.0090, -211.2685, -219.8207],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-224.5582, -171.2399, -209.0310, -211.2825, -219.8235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-224.4946, -171.1207, -209.0215, -211.3015, -219.8174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-224.3812, -170.9497, -209.0202, -211.3199, -219.8212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-224.3285, -170.7522, -209.1131, -211.4164, -219.8717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-224.2597, -170.6311, -209.1838, -211.4810, -219.9013],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-224.2731, -170.5209, -209.3257, -211.5847, -219.9708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-224.3024, -170.4269, -209.4255, -211.6501, -220.0046],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-224.4805, -170.4679, -209.5795, -211.7146, -220.0966],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-224.6004, -170.4381, -209.6953, -211.7712, -220.1707],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-224.8812, -170.5527, -209.8994, -211.8633, -220.2952],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-225.0129, -170.6134, -209.9491, -211.8750, -220.3382],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-225.1059, -170.6895, -209.9255, -211.8496, -220.3537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-225.3086, -170.8185, -210.0339, -211.8978, -220.4506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-225.6024, -171.0607, -210.1810, -211.9545, -220.5371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-225.9048, -171.3267, -210.3557, -212.0203, -220.6079],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-226.1904, -171.6136, -210.5190, -212.0750, -220.6538],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-226.5137, -172.0148, -210.6491, -212.0533, -220.6617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0289, device='cuda:0', dtype=torch.float64)
tensor([-226.8224, -172.3853, -210.8368, -212.0876, -220.7037],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-227.0796, -172.7039, -210.9758, -212.1011, -220.7108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-227.4169, -173.1179, -211.1461, -212.1290, -220.7075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0312, device='cuda:0', dtype=torch.float64)
tensor([-227.6784, -173.4905, -211.2330, -212.1130, -220.6481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0304, device='cuda:0', dtype=torch.float64)
tensor([-227.8975, -173.8803, -211.2796, -212.0836, -220.5824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-227.8888, -174.0869, -211.2048, -212.0156, -220.4479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-227.7712, -174.0575, -211.1370, -212.0099, -220.3230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-227.4766, -173.8295, -210.9576, -211.9742, -220.1547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-227.2529, -173.7017, -210.8847, -211.9811, -220.0375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-226.9658, -173.5529, -210.7401, -211.9586, -219.8826],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-226.7415, -173.4719, -210.6156, -211.9531, -219.7381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-226.4866, -173.4442, -210.3726, -211.8325, -219.5648],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-226.2708, -173.3899, -210.1799, -211.7358, -219.3961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-226.1326, -173.3877, -210.1115, -211.6995, -219.2736],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-225.9385, -173.3758, -210.0306, -211.6797, -219.1599],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-225.7117, -173.4035, -209.8804, -211.5962, -219.0116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-225.5465, -173.4168, -209.7451, -211.5133, -218.8665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-225.5362, -173.5657, -209.6700, -211.4390, -218.7580],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-225.4931, -173.6452, -209.5481, -211.3644, -218.6362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0300, device='cuda:0', dtype=torch.float64)
tensor([-225.4926, -173.7979, -209.4456, -211.2912, -218.5203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-225.5913, -173.9330, -209.4209, -211.2492, -218.4338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-225.6549, -174.0883, -209.3860, -211.2081, -218.3658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0307, device='cuda:0', dtype=torch.float64)
tensor([-225.7170, -174.3223, -209.3145, -211.1429, -218.2745],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-225.7261, -174.4381, -209.2288, -211.0992, -218.1869],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-225.7885, -174.5159, -209.2430, -211.1340, -218.1447],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0315, device='cuda:0', dtype=torch.float64)
tensor([-225.8228, -174.4047, -209.2937, -211.2324, -218.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-226.0042, -174.3274, -209.5438, -211.4437, -218.1735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-226.2611, -174.3569, -209.7715, -211.6077, -218.2006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-226.3965, -174.3134, -209.9233, -211.7576, -218.1981],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-226.6742, -174.4016, -210.1229, -211.9164, -218.2089],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-226.9338, -174.4411, -210.3240, -212.0950, -218.2467],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-227.0060, -174.3730, -210.3879, -212.1980, -218.2285],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-226.9496, -174.2500, -210.3832, -212.2809, -218.1713],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-226.7900, -173.9612, -210.3438, -212.3801, -218.0785],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-226.6224, -173.6625, -210.3036, -212.4724, -218.0012],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-226.3920, -173.3252, -210.1809, -212.5222, -217.9104],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-226.1797, -173.0476, -210.0573, -212.5643, -217.8218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-226.0267, -172.8305, -209.9960, -212.6295, -217.7747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-225.8663, -172.6905, -209.8786, -212.6132, -217.6993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-225.7078, -172.6023, -209.7634, -212.5827, -217.6338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-225.5404, -172.5289, -209.6318, -212.5340, -217.5645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0331, device='cuda:0', dtype=torch.float64)
tensor([-225.4414, -172.4579, -209.5201, -212.5041, -217.5116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-225.3714, -172.4854, -209.3337, -212.3755, -217.4360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-225.2521, -172.5279, -209.1108, -212.2278, -217.3192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-225.2427, -172.5871, -208.9686, -212.1209, -217.2378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-225.1798, -172.5645, -208.8351, -212.0420, -217.1541],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-225.0360, -172.4061, -208.6792, -211.9792, -217.0385],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-224.8634, -172.1907, -208.5577, -211.9458, -216.9443],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-224.6594, -172.0331, -208.3536, -211.8677, -216.8092],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0319, device='cuda:0', dtype=torch.float64)
tensor([-224.4215, -171.9434, -208.1090, -211.7413, -216.6491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-224.3126, -171.9871, -207.9454, -211.6269, -216.5430],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-224.1433, -171.9342, -207.7280, -211.5025, -216.4074],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-223.9631, -171.8455, -207.5140, -211.3803, -216.2778],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-223.8489, -171.8560, -207.3703, -211.2906, -216.1964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-223.8561, -171.9444, -207.3077, -211.2308, -216.1717],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-223.9206, -172.0617, -207.2738, -211.1798, -216.1362],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-223.9910, -172.1775, -207.2093, -211.1000, -216.0899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0299, device='cuda:0', dtype=torch.float64)
tensor([-224.0916, -172.3886, -207.1453, -210.9900, -216.0318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-224.2872, -172.6205, -207.1143, -210.8775, -216.0306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-224.5019, -172.7709, -207.2201, -210.8553, -216.0996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0342, device='cuda:0', dtype=torch.float64)
tensor([-224.8443, -173.0261, -207.4262, -210.8768, -216.2498],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-225.1853, -173.2453, -207.6006, -210.8706, -216.3880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-225.4770, -173.4485, -207.7465, -210.8599, -216.5159],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0292, device='cuda:0', dtype=torch.float64)
tensor([-225.8381, -173.6888, -207.9518, -210.8831, -216.6612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-226.1626, -173.8619, -208.2133, -210.9705, -216.8310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-226.3218, -173.8712, -208.3726, -211.0340, -216.9259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-226.4244, -173.7967, -208.5297, -211.1286, -217.0051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-226.3215, -173.4260, -208.6358, -211.2833, -217.0424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-226.1206, -172.9197, -208.7233, -211.4671, -217.0590],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-225.9371, -172.3792, -208.8495, -211.6631, -217.0739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-225.7931, -171.9291, -208.9140, -211.7950, -217.0668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-225.7786, -171.6949, -208.9847, -211.9047, -217.0703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-225.7470, -171.4486, -209.0439, -212.0006, -217.0452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-225.7383, -171.2569, -209.1728, -212.1397, -217.0500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-225.7881, -171.1143, -209.3530, -212.2642, -217.0546],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-225.8214, -171.0869, -209.4333, -212.2999, -216.9935],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0286, device='cuda:0', dtype=torch.float64)
tensor([-225.7526, -171.1521, -209.3362, -212.2078, -216.8480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-225.8301, -171.3563, -209.3018, -212.1194, -216.7494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-225.7831, -171.4564, -209.2309, -212.0491, -216.6319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-225.8437, -171.6605, -209.2146, -212.0000, -216.5127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-225.8948, -171.9409, -209.2177, -211.9388, -216.4110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-225.8573, -172.1020, -209.1948, -211.8836, -216.3025],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-225.8761, -172.3680, -209.1797, -211.7987, -216.2155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-225.9877, -172.6952, -209.1558, -211.6754, -216.1374],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-225.9855, -172.9203, -209.1087, -211.5722, -216.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0309, device='cuda:0', dtype=torch.float64)
tensor([-226.0119, -173.0961, -209.1748, -211.5571, -216.0002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-225.9534, -173.1920, -209.1411, -211.4830, -215.8944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-225.8226, -173.1344, -209.0878, -211.4360, -215.7808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-225.7512, -173.1825, -209.0624, -211.3723, -215.6925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-225.7570, -173.2729, -209.0802, -211.3073, -215.6231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-225.8028, -173.3812, -209.1202, -211.2395, -215.5515],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-225.6112, -173.2386, -209.0119, -211.1708, -215.4142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-225.4702, -173.1291, -208.9018, -211.1068, -215.2955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-225.2820, -172.9480, -208.8129, -211.0803, -215.1804],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-225.0942, -172.8489, -208.7090, -211.0035, -215.0324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-224.7843, -172.5998, -208.4968, -210.9062, -214.8557],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-224.5603, -172.3852, -208.3430, -210.8272, -214.7085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-224.2745, -172.0140, -208.2359, -210.8228, -214.5862],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-224.0652, -171.7313, -208.1918, -210.8205, -214.4961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-223.7488, -171.5156, -207.9882, -210.7260, -214.3251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0301, device='cuda:0', dtype=torch.float64)
tensor([-223.7524, -171.5621, -207.9674, -210.6635, -214.2369],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0293, device='cuda:0', dtype=torch.float64)
tensor([-223.7030, -171.4826, -207.9251, -210.6087, -214.1367],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0290, device='cuda:0', dtype=torch.float64)
tensor([-223.6086, -171.3452, -207.8363, -210.5663, -214.0380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-223.4780, -171.1940, -207.7609, -210.5385, -213.9434],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-223.4195, -171.0889, -207.7329, -210.5303, -213.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-223.3248, -170.9990, -207.6531, -210.4870, -213.7730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-223.2256, -170.9175, -207.5316, -210.4247, -213.6604],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-223.2438, -170.9180, -207.4982, -210.4065, -213.6133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-223.2761, -170.9771, -207.4760, -210.3753, -213.5680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-223.2984, -170.9925, -207.4570, -210.3625, -213.5224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-223.2534, -170.9525, -207.3646, -210.3175, -213.4295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-223.4270, -171.1304, -207.2933, -210.2272, -213.3623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-223.5851, -171.2206, -207.2541, -210.1716, -213.2930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-223.6684, -171.1776, -207.1806, -210.1501, -213.2129],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-223.7623, -171.0638, -207.1461, -210.1994, -213.1372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-223.8667, -170.9471, -207.1790, -210.2743, -213.1295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-223.8937, -170.7847, -207.1893, -210.3373, -213.1033],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-224.0079, -170.7015, -207.3027, -210.4427, -213.1288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0329, device='cuda:0', dtype=torch.float64)
tensor([-224.2950, -170.8126, -207.5246, -210.5742, -213.2122],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-224.5848, -171.0144, -207.7524, -210.6869, -213.3144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-224.9508, -171.2924, -207.9220, -210.7266, -213.4084],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0303, device='cuda:0', dtype=torch.float64)
tensor([-225.1800, -171.5329, -207.9214, -210.6537, -213.4268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-225.2703, -171.6699, -207.8787, -210.5916, -213.3890],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-225.4450, -171.8638, -207.9068, -210.5528, -213.3799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-225.5759, -172.0819, -207.8492, -210.4599, -213.3379],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-225.6072, -172.2868, -207.7598, -210.3835, -213.2629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-225.7391, -172.5380, -207.7532, -210.3491, -213.2173],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-225.8701, -172.6955, -207.7743, -210.3379, -213.1951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-225.9028, -172.6975, -207.8205, -210.4005, -213.1788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-225.9080, -172.7064, -207.8439, -210.4508, -213.1658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-225.7758, -172.6563, -207.7464, -210.4417, -213.0810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-225.6151, -172.5991, -207.5956, -210.4073, -212.9813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-225.5508, -172.6230, -207.5537, -210.4267, -212.9377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-225.6556, -172.7775, -207.6790, -210.4925, -212.9741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-225.6856, -172.8617, -207.7417, -210.5415, -212.9542],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-225.8397, -172.9742, -207.9285, -210.6706, -212.9772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-225.9877, -173.0216, -208.1835, -210.8650, -213.0559],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-226.1974, -173.1376, -208.4795, -211.0615, -213.1654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-226.3786, -173.2485, -208.6946, -211.2130, -213.2377],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-226.5640, -173.4486, -208.7960, -211.2705, -213.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0308, device='cuda:0', dtype=torch.float64)
tensor([-226.4268, -173.3479, -208.6498, -211.2390, -213.1176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-226.2112, -173.1474, -208.4916, -211.2450, -212.9719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-226.0359, -173.0514, -208.3113, -211.1843, -212.8169],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-225.8153, -172.9627, -208.1030, -211.1117, -212.6218],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-225.6545, -172.9207, -207.9343, -211.0277, -212.4752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-225.5092, -172.8968, -207.7221, -210.8905, -212.3378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0288, device='cuda:0', dtype=torch.float64)
tensor([-225.4467, -172.9666, -207.6166, -210.7884, -212.2500],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-225.4049, -173.0792, -207.5811, -210.7173, -212.1691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-225.4795, -173.2090, -207.6511, -210.7018, -212.1558],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0273, device='cuda:0', dtype=torch.float64)
tensor([-225.5562, -173.3559, -207.7189, -210.6775, -212.1665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-225.5875, -173.4840, -207.7302, -210.6042, -212.1251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0283, device='cuda:0', dtype=torch.float64)
tensor([-225.5656, -173.4964, -207.7244, -210.5655, -212.0653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-225.4642, -173.4466, -207.6867, -210.5291, -211.9774],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-225.4275, -173.4328, -207.6220, -210.4732, -211.8697],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0295, device='cuda:0', dtype=torch.float64)
tensor([-225.4862, -173.5570, -207.5895, -210.3935, -211.8029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-225.5352, -173.6062, -207.5995, -210.3943, -211.7642],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-225.5239, -173.5904, -207.5899, -210.3683, -211.7302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-225.4599, -173.5358, -207.5009, -210.2979, -211.6623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-225.2940, -173.4172, -207.3100, -210.2046, -211.5702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-225.0971, -173.2510, -207.1250, -210.1505, -211.4821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-225.0656, -173.1375, -207.0710, -210.1715, -211.4666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0278, device='cuda:0', dtype=torch.float64)
tensor([-225.0887, -173.1476, -207.0323, -210.1685, -211.4451],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-225.1190, -173.1297, -206.9679, -210.1613, -211.3938],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-225.2488, -173.1388, -207.0159, -210.2091, -211.3889],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-225.2890, -173.1165, -206.9812, -210.2316, -211.3429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0281, device='cuda:0', dtype=torch.float64)
tensor([-225.4860, -173.3068, -207.0726, -210.2820, -211.3917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-225.7144, -173.5383, -207.1666, -210.3000, -211.4409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-225.8524, -173.6622, -207.2655, -210.3638, -211.4901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-226.0031, -173.8656, -207.4236, -210.4683, -211.5680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-226.1296, -173.9486, -207.5827, -210.6011, -211.6272],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-226.1094, -173.9544, -207.5962, -210.6483, -211.6325],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0282, device='cuda:0', dtype=torch.float64)
tensor([-226.1535, -174.0904, -207.6090, -210.6583, -211.6365],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-226.2543, -174.2514, -207.6680, -210.6580, -211.6808],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-226.4940, -174.5786, -207.8365, -210.6674, -211.7616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-226.8450, -175.1807, -207.9909, -210.6062, -211.8544],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-227.2491, -175.6686, -208.2579, -210.6389, -212.0051],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0269, device='cuda:0', dtype=torch.float64)
tensor([-227.6983, -176.2173, -208.5430, -210.6871, -212.1908],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-228.2014, -176.8824, -208.8322, -210.7180, -212.3949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0275, device='cuda:0', dtype=torch.float64)
tensor([-228.7179, -177.5284, -209.1460, -210.7643, -212.5961],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-229.1715, -178.0293, -209.4217, -210.8174, -212.7782],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-229.4684, -178.3201, -209.6467, -210.9138, -212.9132],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-229.6681, -178.5405, -209.7831, -210.9826, -213.0188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-229.8344, -178.6641, -209.9186, -211.0879, -213.1059],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0306, device='cuda:0', dtype=torch.float64)
tensor([-230.1026, -178.9009, -210.0979, -211.1874, -213.2441],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-230.1754, -178.9242, -210.1332, -211.2535, -213.2791],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-229.8885, -178.5769, -209.9379, -211.2670, -213.1722],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-229.4485, -178.0534, -209.6278, -211.2505, -213.0150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-229.0240, -177.5487, -209.4018, -211.2849, -212.8913],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-228.6716, -177.1232, -209.2555, -211.3770, -212.8055],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-228.2737, -176.6717, -209.0755, -211.4627, -212.6861],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-227.7112, -176.0110, -208.8624, -211.5895, -212.5108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-227.1649, -175.4036, -208.7375, -211.7561, -212.3651],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-226.7279, -174.8469, -208.7095, -211.9759, -212.2221],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-226.3788, -174.3305, -208.7446, -212.2183, -212.0949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-226.1407, -173.8824, -208.7992, -212.4503, -211.9739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0296, device='cuda:0', dtype=torch.float64)
tensor([-225.9665, -173.4737, -208.8884, -212.6759, -211.8531],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-225.7713, -173.1381, -208.9585, -212.8923, -211.7485],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-225.7296, -172.9922, -209.1119, -213.1041, -211.7187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-225.5469, -172.7281, -209.1016, -213.2295, -211.5992],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0271, device='cuda:0', dtype=torch.float64)
tensor([-225.3631, -172.5668, -209.0433, -213.2851, -211.4783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0338, device='cuda:0', dtype=torch.float64)
tensor([-225.0989, -172.3715, -208.8606, -213.2380, -211.3109],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-224.8726, -172.1545, -208.7597, -213.2486, -211.1853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-224.8022, -172.1281, -208.6772, -213.2106, -211.0965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0313, device='cuda:0', dtype=torch.float64)
tensor([-224.9602, -172.3129, -208.6868, -213.1692, -211.0943],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0279, device='cuda:0', dtype=torch.float64)
tensor([-225.2148, -172.5648, -208.7240, -213.1044, -211.1229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-225.5258, -172.9048, -208.8031, -213.0327, -211.1752],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-225.8922, -173.2979, -208.8907, -212.9585, -211.2453],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-226.0797, -173.5623, -208.8402, -212.8410, -211.2370],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-226.2783, -173.8841, -208.7946, -212.7068, -211.2572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-226.6441, -174.4346, -208.8385, -212.5603, -211.3256],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-227.0011, -175.1104, -208.8129, -212.3431, -211.3708],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-227.2815, -175.7836, -208.7801, -212.1363, -211.4125],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-227.4326, -176.1454, -208.7629, -212.0230, -211.4337],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-227.4547, -176.2814, -208.6667, -211.9144, -211.3849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-227.5555, -176.4270, -208.6574, -211.8438, -211.3705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-227.6739, -176.5963, -208.6978, -211.7859, -211.3907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-227.9108, -176.7927, -208.8373, -211.7994, -211.4520],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-227.9126, -176.7223, -208.8489, -211.7884, -211.3820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-227.8186, -176.5624, -208.7419, -211.7284, -211.2416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-227.5247, -176.0224, -208.5979, -211.7566, -211.0368],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-227.3212, -175.6253, -208.5285, -211.8162, -210.8824],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-227.0432, -175.1836, -208.3524, -211.8166, -210.6399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-226.7188, -174.7302, -208.1128, -211.7757, -210.3610],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-226.5174, -174.4179, -207.9813, -211.7722, -210.1748],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0285, device='cuda:0', dtype=torch.float64)
tensor([-226.2923, -174.1086, -207.8856, -211.7819, -210.0161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-226.2310, -173.9313, -207.9295, -211.8374, -209.9298],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-226.3277, -174.0370, -208.0868, -211.8910, -209.9114],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-226.2642, -173.9162, -208.1978, -211.9743, -209.8460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-226.3133, -173.9042, -208.4085, -212.1086, -209.8429],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-226.4520, -173.9714, -208.6172, -212.2370, -209.8462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-226.5114, -173.8861, -208.8309, -212.4126, -209.8591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-226.5507, -173.8355, -208.9765, -212.5577, -209.8554],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-226.5627, -173.8070, -209.1181, -212.7204, -209.8333],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-226.7017, -173.9340, -209.2667, -212.8363, -209.8678],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0247, device='cuda:0', dtype=torch.float64)
tensor([-226.7424, -174.0019, -209.2949, -212.8636, -209.8346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-226.8300, -174.2358, -209.3289, -212.8332, -209.8166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-226.9619, -174.5495, -209.3199, -212.7651, -209.7967],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0291, device='cuda:0', dtype=torch.float64)
tensor([-227.3281, -175.1469, -209.4694, -212.7177, -209.8884],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0316, device='cuda:0', dtype=torch.float64)
tensor([-227.7052, -175.8360, -209.6090, -212.6542, -210.0029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-227.8960, -176.2626, -209.7067, -212.6197, -210.0757],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0294, device='cuda:0', dtype=torch.float64)
tensor([-227.9910, -176.6880, -209.7219, -212.5286, -210.1078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-228.1771, -177.1618, -209.8048, -212.4609, -210.1637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-228.4151, -177.6863, -209.8735, -212.3543, -210.2392],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-228.4964, -177.8783, -209.8963, -212.3021, -210.2533],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0254, device='cuda:0', dtype=torch.float64)
tensor([-228.5022, -177.8925, -209.9155, -212.2781, -210.2582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-228.4177, -177.7299, -209.9097, -212.2799, -210.2175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-228.4447, -177.7808, -210.0100, -212.3016, -210.2108],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0265, device='cuda:0', dtype=torch.float64)
tensor([-228.3529, -177.7050, -210.0163, -212.3081, -210.1319],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0305, device='cuda:0', dtype=torch.float64)
tensor([-228.3804, -177.7656, -210.0842, -212.3253, -210.0798],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0276, device='cuda:0', dtype=torch.float64)
tensor([-228.3390, -177.7032, -210.1733, -212.3800, -210.0204],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-228.0842, -177.4228, -210.1235, -212.3978, -209.8587],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-227.8263, -177.0817, -210.0852, -212.4080, -209.7220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-227.5373, -176.7618, -209.9235, -212.3307, -209.5681],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-227.4582, -176.6561, -209.9422, -212.3321, -209.5486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-227.5204, -176.7501, -210.0035, -212.3033, -209.5799],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-227.6104, -176.8712, -210.1471, -212.3191, -209.6421],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0280, device='cuda:0', dtype=torch.float64)
tensor([-227.6495, -176.8792, -210.2045, -212.2974, -209.6677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-227.6562, -176.7978, -210.3302, -212.3601, -209.7176],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-227.7890, -176.8417, -210.5238, -212.4482, -209.8257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-228.0989, -177.2131, -210.7727, -212.4878, -209.9973],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-228.3620, -177.6388, -210.9253, -212.4649, -210.1100],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-228.6981, -178.2607, -211.0525, -212.4077, -210.2028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-229.0359, -178.8456, -211.2646, -212.4279, -210.3345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-229.3148, -179.3790, -211.4487, -212.4493, -210.4535],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-229.4304, -179.6459, -211.4771, -212.4159, -210.4560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0287, device='cuda:0', dtype=torch.float64)
tensor([-229.6272, -179.8304, -211.6072, -212.4667, -210.5279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0268, device='cuda:0', dtype=torch.float64)
tensor([-229.7608, -179.8634, -211.7115, -212.5412, -210.5456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-229.8067, -179.8268, -211.7063, -212.5466, -210.4996],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-229.9273, -179.8787, -211.7647, -212.5690, -210.4829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-229.9673, -179.8679, -211.7429, -212.5695, -210.4080],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-230.1660, -180.0846, -211.7811, -212.5518, -210.4038],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-230.1538, -180.1114, -211.6651, -212.4728, -210.3116],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-230.1091, -180.1769, -211.5020, -212.3450, -210.2049],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-229.9950, -180.1674, -211.2844, -212.1949, -210.0294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-229.9491, -180.2609, -211.1207, -212.0555, -209.8880],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0270, device='cuda:0', dtype=torch.float64)
tensor([-229.9240, -180.4120, -210.9870, -211.8992, -209.7998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-229.8038, -180.4570, -210.7997, -211.7307, -209.6623],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-229.4836, -180.1706, -210.5512, -211.5977, -209.4348],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-228.9983, -179.7396, -210.2263, -211.4895, -209.1540],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-228.5010, -179.1866, -209.9822, -211.4851, -208.8968],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-228.1502, -178.8190, -209.8475, -211.5194, -208.7264],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-227.8114, -178.4739, -209.7723, -211.5992, -208.5954],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0263, device='cuda:0', dtype=torch.float64)
tensor([-227.6013, -178.1965, -209.7310, -211.6740, -208.4885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-227.3790, -177.8555, -209.7326, -211.7968, -208.3911],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-227.2276, -177.6012, -209.7637, -211.9073, -208.3403],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-227.1455, -177.4316, -209.8602, -212.0472, -208.3224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-227.0305, -177.1928, -209.9808, -212.2205, -208.3212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-226.9884, -176.9847, -210.1843, -212.4475, -208.3812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-226.9987, -176.9490, -210.3784, -212.6219, -208.4578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-226.9350, -176.8601, -210.4743, -212.7295, -208.4523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-226.9835, -176.9064, -210.6138, -212.8496, -208.4922],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-227.0571, -176.9676, -210.8374, -213.0122, -208.5685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0243, device='cuda:0', dtype=torch.float64)
tensor([-227.0860, -176.9254, -211.0341, -213.1842, -208.6161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-227.0773, -176.7950, -211.2795, -213.4396, -208.6770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-227.0632, -176.5679, -211.5704, -213.7363, -208.7456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-227.1575, -176.5377, -211.9699, -214.0576, -208.8384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0317, device='cuda:0', dtype=torch.float64)
tensor([-227.3288, -176.7332, -212.3888, -214.3490, -208.9899],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-227.3419, -176.8469, -212.6465, -214.5410, -209.0530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-227.4809, -177.1066, -212.9772, -214.6957, -209.1731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-227.6463, -177.4052, -213.2338, -214.8071, -209.3027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-227.8573, -177.7454, -213.5593, -214.9388, -209.4475],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-227.8478, -177.8621, -213.6868, -214.9881, -209.4718],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-227.8027, -178.0063, -213.7631, -215.0004, -209.4703],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-227.7012, -178.0496, -213.7490, -214.9877, -209.4284],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-227.7115, -178.2724, -213.7795, -214.9288, -209.4698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0246, device='cuda:0', dtype=torch.float64)
tensor([-227.6878, -178.4669, -213.7812, -214.8839, -209.4818],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-227.6350, -178.6127, -213.7096, -214.8148, -209.4506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-227.5666, -178.6713, -213.6450, -214.7684, -209.4112],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-227.6209, -178.9723, -213.7061, -214.7637, -209.4806],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-227.6819, -179.2561, -213.8148, -214.8088, -209.5439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-227.8065, -179.6121, -213.9780, -214.8785, -209.6135],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-227.8072, -179.7844, -214.0394, -214.9077, -209.5829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-227.7396, -179.8567, -214.0856, -214.9465, -209.5124],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-227.6007, -179.8900, -214.1165, -215.0075, -209.4121],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-227.4259, -179.8115, -214.1743, -215.1327, -209.3126],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0298, device='cuda:0', dtype=torch.float64)
tensor([-227.3358, -179.9388, -214.2489, -215.1739, -209.2464],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-227.2215, -180.1352, -214.3228, -215.2114, -209.1724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0274, device='cuda:0', dtype=torch.float64)
tensor([-227.1050, -180.2768, -214.4387, -215.3143, -209.1193],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-227.0462, -180.4281, -214.5261, -215.3913, -209.0537],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-226.9861, -180.5916, -214.5330, -215.4110, -208.9324],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-226.8564, -180.5969, -214.5374, -215.5035, -208.7876],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-226.6746, -180.4673, -214.5064, -215.5882, -208.6328],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0277, device='cuda:0', dtype=torch.float64)
tensor([-226.6372, -180.4177, -214.6214, -215.7155, -208.5507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-226.6190, -180.3778, -214.7362, -215.8445, -208.4944],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-226.6472, -180.3232, -214.8901, -215.9819, -208.5064],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-226.5204, -180.2111, -214.9186, -216.0506, -208.4714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-226.4659, -180.0904, -215.0117, -216.1623, -208.5067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0241, device='cuda:0', dtype=torch.float64)
tensor([-226.3724, -179.9462, -215.0230, -216.1745, -208.5160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-226.3186, -179.7928, -215.0505, -216.2051, -208.5684],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-226.5105, -179.9577, -215.2130, -216.2302, -208.7461],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-226.5588, -179.9536, -215.3016, -216.2952, -208.8564],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-226.7943, -180.0729, -215.5751, -216.4276, -209.0668],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-226.9867, -180.0663, -215.8433, -216.6037, -209.2058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-227.2792, -180.1590, -216.0594, -216.6651, -209.3872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0327, device='cuda:0', dtype=torch.float64)
tensor([-227.3233, -179.8038, -216.1053, -216.7669, -209.4305],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-227.4974, -179.7315, -216.2489, -216.8392, -209.5735],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0257, device='cuda:0', dtype=torch.float64)
tensor([-227.4808, -179.6142, -216.1755, -216.7976, -209.5665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-227.4159, -179.5326, -216.0875, -216.7275, -209.5119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-227.4433, -179.4731, -216.0790, -216.7013, -209.5161],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-227.5150, -179.4935, -216.0965, -216.6297, -209.5280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0266, device='cuda:0', dtype=torch.float64)
tensor([-227.7223, -179.7122, -216.1796, -216.4901, -209.6078],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-227.8487, -179.8973, -216.2433, -216.3493, -209.6458],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0234, device='cuda:0', dtype=torch.float64)
tensor([-228.0889, -180.2353, -216.3492, -216.1896, -209.7592],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-228.4940, -180.7679, -216.5230, -216.0134, -209.9665],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-228.9246, -181.2730, -216.7165, -215.8368, -210.1925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0253, device='cuda:0', dtype=torch.float64)
tensor([-229.2387, -181.6520, -216.8148, -215.6677, -210.3481],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-229.4166, -182.0153, -216.8287, -215.4724, -210.4027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-229.6664, -182.5035, -216.9105, -215.2877, -210.5027],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-229.9203, -183.0090, -217.0381, -215.1498, -210.6238],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-229.9878, -183.3699, -217.0337, -214.9804, -210.6480],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-229.9872, -183.7268, -216.9924, -214.7749, -210.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-229.9224, -184.0173, -216.8865, -214.5694, -210.5270],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-229.7013, -184.1557, -216.6909, -214.3589, -210.3452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-229.3475, -184.0750, -216.4558, -214.2019, -210.1056],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-229.0336, -184.0654, -216.3031, -214.0871, -209.9184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0264, device='cuda:0', dtype=torch.float64)
tensor([-228.8475, -184.2224, -216.3199, -214.0934, -209.8304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-228.6154, -184.3354, -216.2741, -214.0784, -209.7401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-228.3379, -184.2369, -216.2181, -214.0999, -209.6601],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-228.1862, -184.3006, -216.2394, -214.1149, -209.6338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-228.1274, -184.3731, -216.3982, -214.2371, -209.6603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-227.9926, -184.3599, -216.5286, -214.3899, -209.6206],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0258, device='cuda:0', dtype=torch.float64)
tensor([-227.7069, -184.1534, -216.5597, -214.5832, -209.5076],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-227.5123, -184.0551, -216.6220, -214.7908, -209.4327],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-227.3777, -184.0200, -216.7355, -215.0072, -209.3845],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-227.1570, -183.8701, -216.7523, -215.1766, -209.3105],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-227.0501, -183.8905, -216.8576, -215.3594, -209.3166],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0244, device='cuda:0', dtype=torch.float64)
tensor([-227.0163, -184.0065, -216.9238, -215.4867, -209.3180],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-227.3121, -184.3855, -217.2853, -215.7184, -209.5123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-227.6281, -184.5814, -217.7336, -216.0465, -209.7197],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-228.1031, -184.8039, -218.2692, -216.3669, -210.0224],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-228.6585, -185.1397, -218.8850, -216.6818, -210.3872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-229.2749, -185.6397, -219.5807, -216.9900, -210.8017],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-230.0160, -186.3387, -220.3223, -217.2657, -211.2906],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-230.7947, -187.0762, -221.0890, -217.5525, -211.7755],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0235, device='cuda:0', dtype=torch.float64)
tensor([-231.4207, -187.7451, -221.6281, -217.6688, -212.1628],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-231.8883, -188.2502, -222.0418, -217.7187, -212.4380],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-232.4055, -188.7716, -222.5299, -217.8116, -212.7360],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-232.9474, -189.4526, -222.9464, -217.8226, -213.0452],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-233.3399, -189.8980, -223.3205, -217.9167, -213.2645],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-233.4947, -190.0532, -223.4942, -217.9797, -213.2840],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-233.5061, -190.0528, -223.4992, -217.9775, -213.1827],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-233.3070, -189.7726, -223.3187, -217.9200, -212.9649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0242, device='cuda:0', dtype=torch.float64)
tensor([-232.9607, -189.1510, -223.0822, -217.9155, -212.6658],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-232.3592, -188.2719, -222.6270, -217.8528, -212.2312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-231.8148, -187.4536, -222.2030, -217.7871, -211.8194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-231.4414, -186.8546, -221.9160, -217.7422, -211.5216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-230.9352, -186.0832, -221.5684, -217.7046, -211.1376],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0249, device='cuda:0', dtype=torch.float64)
tensor([-230.2686, -185.2520, -221.1189, -217.6149, -210.6503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-229.6159, -184.5376, -220.6638, -217.5039, -210.1399],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-229.3764, -184.2946, -220.5555, -217.4932, -209.8812],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-229.1984, -184.1142, -220.4600, -217.4490, -209.6606],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-228.8965, -183.7356, -220.2580, -217.4164, -209.3560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-228.6434, -183.6277, -220.0803, -217.3409, -209.0662],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0224, device='cuda:0', dtype=torch.float64)
tensor([-228.5287, -183.6850, -220.0295, -217.3067, -208.9004],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-228.3850, -183.6804, -219.8773, -217.1873, -208.7194],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0237, device='cuda:0', dtype=torch.float64)
tensor([-228.4108, -183.9621, -219.8951, -217.0782, -208.6438],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-228.3919, -184.1899, -219.8408, -216.9614, -208.5492],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-228.2259, -184.2246, -219.6602, -216.8221, -208.3523],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-228.1179, -184.1842, -219.5556, -216.7633, -208.1928],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-228.0158, -184.0845, -219.4538, -216.7587, -208.0446],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-227.9635, -184.0497, -219.3427, -216.7230, -207.8993],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-227.9330, -184.0452, -219.3738, -216.7565, -207.8251],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-227.8027, -183.9515, -219.3126, -216.7549, -207.7267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0229, device='cuda:0', dtype=torch.float64)
tensor([-227.7609, -184.0979, -219.3548, -216.7303, -207.6926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-227.7676, -184.3184, -219.4182, -216.6842, -207.7253],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-227.8919, -184.4369, -219.6376, -216.7824, -207.8437],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0252, device='cuda:0', dtype=torch.float64)
tensor([-228.0250, -184.5922, -219.8659, -216.8770, -207.9734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-228.2231, -184.8303, -220.1002, -216.9330, -208.1371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0220, device='cuda:0', dtype=torch.float64)
tensor([-228.4883, -185.1505, -220.4097, -217.0141, -208.3439],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-228.7589, -185.4862, -220.7832, -217.1239, -208.5724],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-229.1233, -185.8833, -221.2484, -217.2890, -208.8534],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-229.4045, -186.0525, -221.6217, -217.4510, -209.0814],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-229.6892, -186.1138, -222.0907, -217.6916, -209.2951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0250, device='cuda:0', dtype=torch.float64)
tensor([-230.1167, -186.3277, -222.6799, -217.9612, -209.5777],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-230.4564, -186.5227, -223.1795, -218.1553, -209.7907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-230.9066, -186.8304, -223.7832, -218.3986, -210.0877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0214, device='cuda:0', dtype=torch.float64)
tensor([-231.1082, -186.7354, -224.1472, -218.6033, -210.2039],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-231.1255, -186.4290, -224.2796, -218.7192, -210.2223],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-230.9367, -185.7608, -224.2519, -218.8450, -210.1181],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-230.6492, -184.9777, -224.1106, -218.9541, -209.9175],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-230.5272, -184.4902, -224.0299, -218.9999, -209.7998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-230.5462, -184.1558, -224.0577, -219.0414, -209.7820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-230.6169, -184.0171, -224.1129, -219.0144, -209.8295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-230.6969, -184.0025, -224.1603, -218.9786, -209.9061],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-230.8806, -184.2398, -224.2654, -218.9194, -210.0543],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-230.9106, -184.3863, -224.2141, -218.7920, -210.1008],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-231.1173, -184.8210, -224.2625, -218.6136, -210.2617],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-231.2996, -185.2694, -224.3472, -218.4694, -210.3553],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-231.5299, -185.7126, -224.4782, -218.3637, -210.4923],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-231.7669, -186.2553, -224.6302, -218.3085, -210.6415],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0262, device='cuda:0', dtype=torch.float64)
tensor([-231.9813, -186.6095, -224.8166, -218.3853, -210.7609],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0217, device='cuda:0', dtype=torch.float64)
tensor([-232.0411, -186.7163, -224.8445, -218.4480, -210.7987],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-232.1570, -186.9801, -224.9147, -218.4582, -210.8725],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-232.1791, -187.1221, -224.8691, -218.4182, -210.8685],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-232.2784, -187.4419, -224.8852, -218.3494, -210.9250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-232.3093, -187.7426, -224.8252, -218.2329, -210.9329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0239, device='cuda:0', dtype=torch.float64)
tensor([-232.3530, -188.0861, -224.8757, -218.1975, -210.9701],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-232.2055, -188.1354, -224.7811, -218.1513, -210.8743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-232.2333, -188.5190, -224.8832, -218.1230, -210.9127],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-232.0100, -188.7253, -224.7317, -217.9929, -210.7506],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-231.7543, -188.7880, -224.6070, -217.9350, -210.6075],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-231.6905, -189.2306, -224.5920, -217.7834, -210.6018],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-231.7560, -189.7216, -224.8062, -217.7662, -210.7043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-231.9254, -190.3106, -225.1193, -217.7880, -210.8424],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0261, device='cuda:0', dtype=torch.float64)
tensor([-231.9842, -190.7793, -225.3398, -217.8043, -210.9081],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-232.0918, -191.1772, -225.5751, -217.8323, -211.0065],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-232.2222, -191.6423, -225.8511, -217.8776, -211.1192],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-232.3243, -192.0951, -226.0994, -217.9339, -211.2057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-232.2890, -192.2716, -226.2313, -218.0245, -211.2068],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-232.0562, -192.1791, -226.1579, -218.0804, -211.0727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-231.8721, -192.1117, -226.1259, -218.1161, -210.9896],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-231.5599, -191.8955, -225.9645, -218.0847, -210.8119],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0267, device='cuda:0', dtype=torch.float64)
tensor([-231.1638, -191.4418, -225.7185, -218.0683, -210.5764],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0284, device='cuda:0', dtype=torch.float64)
tensor([-230.8831, -191.2121, -225.5710, -218.0522, -210.3705],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-230.6484, -191.1954, -225.4643, -218.0264, -210.2188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-230.4838, -191.2055, -225.4975, -218.0817, -210.1396],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0218, device='cuda:0', dtype=torch.float64)
tensor([-230.2270, -190.9815, -225.4417, -218.0986, -210.0073],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-230.1562, -190.9741, -225.5164, -218.1022, -210.0378],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-230.2139, -191.2349, -225.7087, -218.0604, -210.1505],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-230.4584, -191.6545, -226.1479, -218.1380, -210.3790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0251, device='cuda:0', dtype=torch.float64)
tensor([-230.7810, -192.2734, -226.6775, -218.2023, -210.6930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-231.0981, -192.7778, -227.1507, -218.2584, -210.9779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0233, device='cuda:0', dtype=torch.float64)
tensor([-231.4228, -193.3083, -227.5697, -218.2761, -211.2616],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-231.5106, -193.5497, -227.8251, -218.2987, -211.3866],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-231.7583, -194.0120, -228.2370, -218.3643, -211.6614],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-231.8983, -194.3671, -228.5447, -218.4040, -211.8853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-232.0086, -194.5203, -228.8336, -218.5048, -212.1057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-232.0869, -194.6903, -229.1182, -218.6325, -212.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-232.2781, -195.0234, -229.5644, -218.7876, -212.5901],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-232.5537, -195.4402, -230.0410, -218.9329, -212.9230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-232.8596, -195.9234, -230.5777, -219.1188, -213.2871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-233.2495, -196.5445, -231.2175, -219.3375, -213.6956],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0197, device='cuda:0', dtype=torch.float64)
tensor([-233.5714, -196.9881, -231.7862, -219.5309, -214.0494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-233.6928, -197.1356, -232.1491, -219.6877, -214.2753],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-233.5890, -196.8374, -232.3035, -219.8589, -214.3155],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-233.1498, -196.2347, -232.0627, -219.9282, -214.1085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0232, device='cuda:0', dtype=torch.float64)
tensor([-232.9113, -195.7956, -231.9603, -220.0573, -213.9903],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-232.6487, -195.3412, -231.7948, -220.1680, -213.8565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-232.4540, -194.9541, -231.7004, -220.2825, -213.7629],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-232.3803, -194.6741, -231.6982, -220.4185, -213.7178],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-232.2732, -194.3759, -231.6214, -220.4946, -213.6094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-232.3019, -194.3391, -231.7230, -220.5526, -213.6202],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-232.1957, -194.1735, -231.6746, -220.5654, -213.5304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0297, device='cuda:0', dtype=torch.float64)
tensor([-232.3068, -194.3893, -231.8361, -220.5614, -213.6019],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0215, device='cuda:0', dtype=torch.float64)
tensor([-232.4777, -194.7677, -232.0738, -220.5362, -213.7150],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-232.6587, -195.1384, -232.3400, -220.5556, -213.8582],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-232.8868, -195.6597, -232.6102, -220.5062, -214.0259],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0212, device='cuda:0', dtype=torch.float64)
tensor([-233.2819, -196.3691, -233.0638, -220.5211, -214.3345],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0196, device='cuda:0', dtype=torch.float64)
tensor([-233.6119, -196.9962, -233.4292, -220.5570, -214.5760],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-233.9020, -197.5378, -233.7361, -220.5826, -214.7829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0230, device='cuda:0', dtype=torch.float64)
tensor([-234.1733, -198.0187, -234.0515, -220.6851, -214.9331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-234.5577, -198.6289, -234.5211, -220.8065, -215.1772],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-234.9406, -199.3256, -234.9924, -220.9012, -215.4267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-235.1961, -199.8501, -235.3667, -220.9604, -215.5877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-235.5698, -200.5304, -235.9334, -221.1143, -215.8530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0245, device='cuda:0', dtype=torch.float64)
tensor([-235.8585, -201.0916, -236.3531, -221.1880, -216.0212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-236.2517, -201.8987, -236.9398, -221.2737, -216.2699],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-236.4785, -202.4652, -237.3556, -221.3324, -216.4236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-236.7342, -203.0236, -237.7416, -221.3656, -216.5719],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-236.9913, -203.6313, -238.1023, -221.3899, -216.7136],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-237.0313, -203.6770, -238.2985, -221.4855, -216.7090],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-236.9979, -203.5879, -238.4037, -221.5356, -216.6440],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-236.8359, -203.2868, -238.4814, -221.6238, -216.4829],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-236.4122, -202.4483, -238.2768, -221.7440, -216.1433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-235.9045, -201.4493, -237.8933, -221.7820, -215.7250],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-235.6466, -200.6314, -237.7862, -221.9632, -215.5212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-235.5676, -200.2206, -237.8449, -222.1269, -215.4739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-235.6382, -200.0424, -238.0399, -222.3132, -215.5123],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-235.7431, -199.9497, -238.2672, -222.4980, -215.5949],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-235.6901, -199.7656, -238.3306, -222.5702, -215.5381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-235.5885, -199.5712, -238.3222, -222.6202, -215.4470],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-235.6766, -199.5536, -238.5247, -222.7142, -215.4937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-235.8163, -199.5471, -238.8046, -222.8141, -215.5849],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-236.0534, -199.7409, -239.1789, -222.9234, -215.7503],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0219, device='cuda:0', dtype=torch.float64)
tensor([-236.2525, -199.8969, -239.5497, -223.0514, -215.9083],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-236.5304, -200.3155, -240.1354, -223.2723, -216.1649],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-236.6867, -200.5690, -240.5978, -223.5338, -216.3433],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0238, device='cuda:0', dtype=torch.float64)
tensor([-236.7563, -200.7258, -240.8525, -223.6866, -216.4288],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-236.8008, -200.8246, -241.0285, -223.8510, -216.4929],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-236.7188, -200.8870, -241.0061, -223.9018, -216.4655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0210, device='cuda:0', dtype=torch.float64)
tensor([-236.7364, -201.1314, -241.1003, -223.9652, -216.5363],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-236.9647, -201.6015, -241.4371, -224.1218, -216.7620],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-237.2711, -202.1654, -241.8985, -224.3070, -217.0332],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-237.4079, -202.4488, -242.1981, -224.4932, -217.1907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0162, device='cuda:0', dtype=torch.float64)
tensor([-237.5093, -202.7248, -242.4185, -224.5937, -217.3094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-237.6187, -203.0091, -242.6048, -224.6649, -217.4021],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-237.8144, -203.3206, -242.8380, -224.7818, -217.5853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-237.9976, -203.5576, -243.0794, -224.9842, -217.7401],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0159, device='cuda:0', dtype=torch.float64)
tensor([-238.3077, -204.0448, -243.5303, -225.2635, -218.0082],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-238.6069, -204.4737, -243.9507, -225.5153, -218.2416],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-238.7917, -204.7469, -244.2505, -225.7636, -218.3783],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-239.0949, -205.0735, -244.7407, -226.1264, -218.6211],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-239.2060, -205.1363, -245.0320, -226.4870, -218.7386],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-239.3975, -205.4272, -245.3678, -226.7219, -218.8994],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-239.5183, -205.4810, -245.6096, -226.9672, -218.9790],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0216, device='cuda:0', dtype=torch.float64)
tensor([-239.5350, -205.3637, -245.8052, -227.2762, -218.9286],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-239.4988, -205.1436, -245.9063, -227.5457, -218.8278],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-239.3609, -204.7255, -245.9475, -227.8702, -218.6371],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-239.5036, -204.7222, -246.2541, -228.2060, -218.6460],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-239.6190, -204.7194, -246.5605, -228.5508, -218.6951],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-239.8000, -204.8284, -246.9865, -228.9656, -218.7842],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0202, device='cuda:0', dtype=torch.float64)
tensor([-240.1576, -205.1025, -247.5556, -229.3153, -219.0034],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-240.8075, -205.8260, -248.4933, -229.7111, -219.4310],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-241.3439, -206.5382, -249.3215, -230.0206, -219.8060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-241.7157, -206.9931, -249.9312, -230.2414, -220.0672],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-242.0220, -207.4809, -250.4140, -230.3381, -220.2657],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-242.0928, -207.8523, -250.6024, -230.2883, -220.2693],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0231, device='cuda:0', dtype=torch.float64)
tensor([-242.2359, -208.3414, -250.8566, -230.1808, -220.3213],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0227, device='cuda:0', dtype=torch.float64)
tensor([-242.3415, -208.7220, -251.0680, -230.0326, -220.3273],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-242.5458, -209.1760, -251.3495, -229.9488, -220.4106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-242.5942, -209.4656, -251.4421, -229.7754, -220.3655],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-243.0661, -210.3524, -252.1381, -229.8857, -220.6888],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-243.5681, -211.3805, -252.8226, -229.8753, -221.0258],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-243.8463, -212.0084, -253.2231, -229.8270, -221.1925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-244.1723, -212.6408, -253.6475, -229.8001, -221.4229],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-244.5603, -213.3682, -254.1044, -229.7682, -221.6934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-244.7975, -213.9683, -254.3571, -229.7030, -221.8462],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-244.9928, -214.6042, -254.5760, -229.6078, -222.0198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0213, device='cuda:0', dtype=torch.float64)
tensor([-244.9353, -214.7625, -254.4653, -229.4607, -221.9909],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-244.8794, -214.8748, -254.3374, -229.3499, -221.9427],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-244.8426, -215.0299, -254.2761, -229.2914, -221.8931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-244.7178, -215.1377, -254.1075, -229.1288, -221.7618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-244.6824, -215.3747, -254.0796, -229.0463, -221.7289],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-244.5195, -215.2980, -253.9222, -228.9857, -221.5578],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-244.3679, -215.2638, -253.7596, -228.8865, -221.3731],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-244.3334, -215.2457, -253.7476, -228.8797, -221.2982],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-244.4114, -215.4282, -253.8471, -228.8401, -221.3102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-244.5847, -215.7177, -254.0734, -228.8501, -221.4144],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-244.5989, -215.6037, -254.0899, -228.8561, -221.4062],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0195, device='cuda:0', dtype=torch.float64)
tensor([-244.6962, -215.4659, -254.1952, -228.9336, -221.4495],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-244.5946, -214.9602, -254.0396, -228.9044, -221.3299],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-244.6124, -214.5403, -254.0336, -228.9936, -221.3304],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-244.6559, -214.1374, -254.0612, -229.0666, -221.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-244.5989, -213.8514, -254.0061, -229.0552, -221.2871],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-244.3994, -213.1316, -253.7767, -229.1235, -221.0931],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-244.2858, -212.6290, -253.6221, -229.1397, -220.9530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-243.9992, -212.0267, -253.2896, -229.1101, -220.6734],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-243.8191, -211.7093, -253.1227, -229.1160, -220.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-243.7320, -211.6163, -253.0613, -229.1121, -220.3576],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-243.7601, -211.7293, -253.1360, -229.0658, -220.2965],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-244.0544, -212.3398, -253.5526, -229.0558, -220.4689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0183, device='cuda:0', dtype=torch.float64)
tensor([-244.3505, -212.9100, -254.0238, -229.1083, -220.6496],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-244.8184, -213.5783, -254.6595, -229.1941, -220.9650],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-245.3253, -214.3601, -255.3368, -229.2592, -221.3343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-246.0248, -215.4361, -256.2315, -229.4024, -221.8465],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-246.5807, -216.2140, -256.9218, -229.5506, -222.2283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0236, device='cuda:0', dtype=torch.float64)
tensor([-247.1190, -216.8684, -257.5832, -229.7260, -222.5879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0188, device='cuda:0', dtype=torch.float64)
tensor([-247.4466, -217.1502, -258.1276, -229.9921, -222.8162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-247.7854, -217.2966, -258.6103, -230.2834, -223.0107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-248.4186, -217.9737, -259.4828, -230.6096, -223.4476],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0221, device='cuda:0', dtype=torch.float64)
tensor([-249.3435, -219.2473, -260.6821, -230.9351, -224.0976],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-250.4261, -220.7127, -262.0239, -231.3069, -224.9022],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0191, device='cuda:0', dtype=torch.float64)
tensor([-251.3839, -221.9354, -263.2151, -231.6823, -225.6048],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-251.9626, -222.4649, -263.9673, -232.0477, -226.0042],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-252.2335, -222.4066, -264.3038, -232.3294, -226.1714],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-252.1484, -221.8077, -264.2189, -232.5708, -226.0626],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0198, device='cuda:0', dtype=torch.float64)
tensor([-252.2577, -221.5130, -264.3098, -232.8458, -226.0807],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-252.5144, -221.5045, -264.5518, -233.1070, -226.2002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0200, device='cuda:0', dtype=torch.float64)
tensor([-253.0103, -221.7495, -265.1359, -233.5626, -226.5247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-253.2782, -221.7387, -265.4879, -233.9482, -226.6691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-253.3841, -221.4694, -265.7087, -234.3895, -226.6998],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0208, device='cuda:0', dtype=torch.float64)
tensor([-253.5439, -221.3677, -265.9651, -234.7589, -226.7914],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0211, device='cuda:0', dtype=torch.float64)
tensor([-253.5855, -221.0799, -266.0243, -235.0530, -226.7779],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-253.5303, -220.7744, -265.9971, -235.2936, -226.6953],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-253.6372, -220.8301, -266.1922, -235.5847, -226.8006],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-253.8876, -221.0061, -266.5277, -235.9771, -226.9877],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-254.1961, -221.3502, -266.9293, -236.3536, -227.2723],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0205, device='cuda:0', dtype=torch.float64)
tensor([-254.2388, -221.3197, -267.0438, -236.6055, -227.3695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-254.1881, -221.1030, -267.0345, -236.9372, -227.3835],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-253.9906, -220.8686, -266.8860, -237.1856, -227.3043],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0160, device='cuda:0', dtype=torch.float64)
tensor([-253.9733, -220.9882, -266.9259, -237.3124, -227.3612],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0222, device='cuda:0', dtype=torch.float64)
tensor([-254.0549, -221.4113, -267.0930, -237.3070, -227.5157],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-254.3018, -221.9560, -267.4566, -237.3637, -227.7990],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0209, device='cuda:0', dtype=torch.float64)
tensor([-254.3593, -222.3018, -267.6619, -237.4589, -227.9530],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-254.3975, -222.4648, -267.8554, -237.7154, -228.1058],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0174, device='cuda:0', dtype=torch.float64)
tensor([-254.4323, -222.7366, -268.1008, -238.0105, -228.2436],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-254.5770, -223.1238, -268.4460, -238.3333, -228.4574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0184, device='cuda:0', dtype=torch.float64)
tensor([-254.9354, -223.6874, -268.9939, -238.6438, -228.8198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0207, device='cuda:0', dtype=torch.float64)
tensor([-255.3033, -224.2633, -269.4985, -238.7651, -229.2230],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0206, device='cuda:0', dtype=torch.float64)
tensor([-255.5312, -224.5679, -269.8157, -238.8421, -229.5151],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0192, device='cuda:0', dtype=torch.float64)
tensor([-255.6332, -224.7084, -270.0169, -238.8220, -229.7093],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-255.4924, -224.6677, -270.0274, -238.7045, -229.6882],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0175, device='cuda:0', dtype=torch.float64)
tensor([-255.4397, -224.6206, -270.1286, -238.7037, -229.6986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-255.2827, -224.4702, -270.1088, -238.6777, -229.6220],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0225, device='cuda:0', dtype=torch.float64)
tensor([-255.2647, -224.2905, -270.2599, -238.8111, -229.7164],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0240, device='cuda:0', dtype=torch.float64)
tensor([-255.1628, -224.1017, -270.3092, -238.8771, -229.7347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-255.1751, -224.1580, -270.4845, -238.9244, -229.7898],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0199, device='cuda:0', dtype=torch.float64)
tensor([-255.6909, -224.9712, -271.2304, -239.1118, -230.2404],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0181, device='cuda:0', dtype=torch.float64)
tensor([-256.4673, -226.0157, -272.3478, -239.4303, -230.8579],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0228, device='cuda:0', dtype=torch.float64)
tensor([-257.7158, -227.6111, -274.0237, -239.9500, -231.8279],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-259.1686, -229.5845, -275.9874, -240.5550, -232.9615],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0324, device='cuda:0', dtype=torch.float64)
tensor([-260.4956, -231.6383, -277.9098, -241.0815, -233.9832],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-261.8716, -233.9307, -280.0030, -241.6949, -235.0683],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-263.0759, -235.8995, -281.8756, -242.3605, -236.0526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-264.1656, -237.5732, -283.5844, -243.0385, -236.9225],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0189, device='cuda:0', dtype=torch.float64)
tensor([-265.4540, -239.2078, -285.5135, -243.9223, -237.8852],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-266.5576, -240.5740, -287.1693, -244.6816, -238.6726],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-267.7792, -242.1922, -288.9741, -245.4812, -239.5671],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-268.9386, -243.6739, -290.6509, -246.2644, -240.4584],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0165, device='cuda:0', dtype=torch.float64)
tensor([-269.9413, -245.0040, -292.2425, -247.0179, -241.2283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0186, device='cuda:0', dtype=torch.float64)
tensor([-270.7869, -246.1335, -293.6960, -247.7481, -241.8893],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-271.4821, -246.7341, -294.8572, -248.4354, -242.4547],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0185, device='cuda:0', dtype=torch.float64)
tensor([-271.7703, -246.8498, -295.5602, -248.9370, -242.6937],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-271.8643, -246.1921, -295.8600, -249.4992, -242.7846],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0193, device='cuda:0', dtype=torch.float64)
tensor([-271.6368, -245.2172, -295.7960, -249.9842, -242.6343],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0163, device='cuda:0', dtype=torch.float64)
tensor([-271.3713, -243.9912, -295.5961, -250.5327, -242.5028],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-270.9626, -242.9256, -295.2264, -250.8089, -242.2942],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-270.1628, -241.3279, -294.4711, -251.0258, -241.8463],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0154, device='cuda:0', dtype=torch.float64)
tensor([-269.5549, -240.0829, -293.9249, -251.2456, -241.5473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0190, device='cuda:0', dtype=torch.float64)
tensor([-269.3077, -239.4966, -293.7015, -251.3460, -241.4754],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-269.4249, -239.2071, -293.7993, -251.5683, -241.7338],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0260, device='cuda:0', dtype=torch.float64)
tensor([-269.6557, -239.0654, -294.0739, -251.9149, -242.1841],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-270.3889, -239.7047, -295.0028, -252.4140, -242.9688],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0226, device='cuda:0', dtype=torch.float64)
tensor([-271.0430, -240.5306, -295.9854, -252.7768, -243.6312],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-271.8414, -241.7049, -297.2115, -253.2554, -244.4228],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0177, device='cuda:0', dtype=torch.float64)
tensor([-272.4189, -242.6499, -298.1788, -253.5879, -245.0231],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-272.7266, -243.4700, -298.9030, -253.6941, -245.3925],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-272.7729, -243.8779, -299.3378, -253.6276, -245.4989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-272.8776, -244.5067, -299.8449, -253.5215, -245.6094],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0170, device='cuda:0', dtype=torch.float64)
tensor([-273.2019, -245.6940, -300.6782, -253.3355, -245.8950],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-273.7702, -247.2850, -301.8232, -253.1905, -246.3280],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-274.1082, -248.6336, -302.7263, -252.9167, -246.5813],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0248, device='cuda:0', dtype=torch.float64)
tensor([-274.7468, -249.9367, -303.9046, -253.0465, -247.0733],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-275.3352, -251.2397, -304.9640, -253.1740, -247.5653],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-275.9652, -252.4340, -305.9750, -253.3938, -248.0930],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0182, device='cuda:0', dtype=torch.float64)
tensor([-276.4925, -253.4790, -306.9517, -253.6892, -248.5247],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-277.0448, -254.5620, -307.9792, -254.0299, -248.9408],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-277.7652, -255.7138, -309.1113, -254.5198, -249.5831],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0158, device='cuda:0', dtype=torch.float64)
tensor([-278.5601, -256.6626, -310.2027, -255.1428, -250.3398],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-279.1676, -256.9100, -310.9963, -255.8522, -250.8391],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0173, device='cuda:0', dtype=torch.float64)
tensor([-279.4949, -256.8250, -311.5599, -256.5007, -251.0188],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-279.8625, -257.0731, -312.2050, -257.0115, -251.1473],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-280.4724, -257.3587, -313.0871, -257.7179, -251.4198],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0179, device='cuda:0', dtype=torch.float64)
tensor([-280.7776, -257.0988, -313.5059, -258.3913, -251.5591],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-281.0269, -256.8184, -313.8058, -258.9854, -251.6771],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0166, device='cuda:0', dtype=torch.float64)
tensor([-281.6501, -256.9184, -314.3767, -259.5586, -252.0359],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-282.5338, -257.4725, -315.1336, -260.0505, -252.6263],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-283.2055, -257.4930, -315.5891, -260.5916, -253.0746],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0223, device='cuda:0', dtype=torch.float64)
tensor([-283.4465, -256.9102, -315.6081, -261.1734, -253.2002],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-283.4199, -256.0448, -315.4636, -261.8129, -253.1205],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0171, device='cuda:0', dtype=torch.float64)
tensor([-283.4884, -255.5689, -315.5392, -262.4357, -253.1265],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0194, device='cuda:0', dtype=torch.float64)
tensor([-283.8854, -255.6847, -316.0186, -262.9718, -253.3674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-284.1481, -255.7377, -316.3850, -263.4365, -253.5934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0164, device='cuda:0', dtype=torch.float64)
tensor([-284.7146, -256.5292, -317.1862, -263.6820, -253.9695],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-285.1397, -257.6727, -317.9917, -263.5074, -254.0885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-285.6463, -258.9059, -318.8225, -263.3747, -254.3414],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0169, device='cuda:0', dtype=torch.float64)
tensor([-286.0665, -260.3619, -319.6138, -263.0284, -254.5519],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0172, device='cuda:0', dtype=torch.float64)
tensor([-286.8040, -262.1093, -320.8560, -262.9507, -254.9727],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0161, device='cuda:0', dtype=torch.float64)
tensor([-287.8389, -264.1079, -322.4476, -263.0744, -255.5885],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0178, device='cuda:0', dtype=torch.float64)
tensor([-288.8582, -266.2737, -324.0279, -263.0729, -256.2384],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-289.2599, -267.8887, -325.0120, -262.7409, -256.4574],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-289.2898, -268.9553, -325.6293, -262.2130, -256.4680],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0155, device='cuda:0', dtype=torch.float64)
tensor([-289.0896, -269.6719, -326.0538, -261.7018, -256.3257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0180, device='cuda:0', dtype=torch.float64)
tensor([-288.5810, -269.6323, -326.1507, -261.2966, -255.9743],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0357, device='cuda:0', dtype=torch.float64)
tensor([-288.3499, -270.1217, -326.7843, -260.9572, -255.8765],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-287.9029, -269.8954, -327.2466, -260.8282, -255.5674],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0168, device='cuda:0', dtype=torch.float64)
tensor([-287.6681, -269.4463, -327.7843, -261.0266, -255.3525],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0146, device='cuda:0', dtype=torch.float64)
tensor([-287.1249, -268.3799, -327.8504, -261.1156, -254.9494],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-286.8796, -267.6261, -328.1506, -261.4238, -254.8349],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0204, device='cuda:0', dtype=torch.float64)
tensor([-287.3201, -267.9706, -329.2644, -262.0514, -255.2555],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-287.5299, -267.8038, -330.0176, -262.5932, -255.4409],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-287.8794, -267.7332, -330.9219, -263.3376, -255.7257],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0156, device='cuda:0', dtype=torch.float64)
tensor([-288.2034, -267.5771, -331.7157, -264.1051, -255.9959],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0157, device='cuda:0', dtype=torch.float64)
tensor([-288.6058, -267.6443, -332.6186, -264.8493, -256.2921],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-288.9162, -267.6178, -333.3550, -265.5014, -256.5565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-289.5604, -268.1517, -334.5119, -266.2717, -257.0618],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0138, device='cuda:0', dtype=torch.float64)
tensor([-290.2113, -269.0512, -335.7932, -266.9557, -257.6165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0167, device='cuda:0', dtype=torch.float64)
tensor([-291.3838, -270.9113, -337.6641, -267.6332, -258.5011],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-292.4934, -272.7890, -339.4607, -268.1627, -259.3306],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0187, device='cuda:0', dtype=torch.float64)
tensor([-293.8896, -275.1079, -341.5388, -268.7268, -260.3526],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-295.3531, -277.6650, -343.6981, -269.3635, -261.3934],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-297.1946, -280.9262, -346.2458, -270.1294, -262.7267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-298.9782, -283.9233, -348.6493, -270.9755, -263.9983],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-300.7624, -286.7580, -351.0601, -271.9048, -265.4235],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0120, device='cuda:0', dtype=torch.float64)
tensor([-302.5938, -289.4782, -353.4446, -272.9441, -266.8660],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-304.2144, -291.9908, -355.6695, -273.9230, -268.0630],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-305.4523, -294.1038, -357.5438, -274.5887, -268.9879],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0134, device='cuda:0', dtype=torch.float64)
tensor([-306.2009, -295.2059, -358.8878, -275.1891, -269.5182],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-306.9637, -296.2131, -360.1606, -275.7748, -270.2036],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0135, device='cuda:0', dtype=torch.float64)
tensor([-307.6349, -297.1272, -361.3960, -276.1618, -270.8972],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-308.1236, -297.5939, -362.4302, -276.7383, -271.4677],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0136, device='cuda:0', dtype=torch.float64)
tensor([-308.4375, -297.2595, -363.1485, -277.5379, -271.8821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0142, device='cuda:0', dtype=torch.float64)
tensor([-308.8491, -296.7985, -364.0105, -278.5675, -272.2843],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-309.3404, -296.6252, -364.9996, -279.4744, -272.7739],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0126, device='cuda:0', dtype=torch.float64)
tensor([-310.0858, -296.9054, -366.2595, -280.4775, -273.4654],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0139, device='cuda:0', dtype=torch.float64)
tensor([-310.5780, -297.2615, -367.4230, -281.1717, -274.1210],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0176, device='cuda:0', dtype=torch.float64)
tensor([-310.7549, -297.1034, -368.2868, -281.8036, -274.6003],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-310.9450, -297.4796, -369.3061, -282.1143, -275.0596],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0147, device='cuda:0', dtype=torch.float64)
tensor([-311.8117, -299.1181, -371.0383, -282.6259, -275.9466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0137, device='cuda:0', dtype=torch.float64)
tensor([-312.6511, -301.0171, -372.8690, -283.0766, -276.8102],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0203, device='cuda:0', dtype=torch.float64)
tensor([-313.4174, -302.8229, -374.5550, -283.5289, -277.4830],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0133, device='cuda:0', dtype=torch.float64)
tensor([-314.5593, -305.5117, -376.6445, -284.0221, -278.4347],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0107, device='cuda:0', dtype=torch.float64)
tensor([-316.0187, -308.8312, -379.0330, -284.5998, -279.5706],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0148, device='cuda:0', dtype=torch.float64)
tensor([-317.4166, -312.2358, -381.5761, -285.1324, -280.4756],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0132, device='cuda:0', dtype=torch.float64)
tensor([-318.9271, -315.9876, -384.1764, -285.5950, -281.4747],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0150, device='cuda:0', dtype=torch.float64)
tensor([-320.2253, -319.3911, -386.6191, -286.0624, -282.2096],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-321.3811, -322.3878, -388.8041, -286.5300, -282.8201],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0140, device='cuda:0', dtype=torch.float64)
tensor([-322.4372, -324.6861, -390.7583, -287.1212, -283.2637],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0143, device='cuda:0', dtype=torch.float64)
tensor([-323.4999, -326.8017, -392.6699, -287.9108, -283.6219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-324.7226, -328.6293, -394.5625, -288.8997, -284.1810],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0149, device='cuda:0', dtype=torch.float64)
tensor([-325.8595, -329.7641, -396.3096, -290.0989, -284.8632],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0109, device='cuda:0', dtype=torch.float64)
tensor([-327.1339, -331.4631, -398.3360, -291.2348, -285.6162],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-327.9117, -332.4593, -399.8938, -292.1699, -286.1572],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0255, device='cuda:0', dtype=torch.float64)
tensor([-328.7682, -333.7494, -401.4444, -293.2267, -286.9491],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-329.7529, -335.3169, -403.1078, -294.2604, -287.7184],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-330.8358, -336.8999, -404.7386, -295.4112, -288.5883],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0114, device='cuda:0', dtype=torch.float64)
tensor([-331.9225, -338.9526, -406.5086, -296.2528, -289.6955],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0259, device='cuda:0', dtype=torch.float64)
tensor([-333.0800, -341.4603, -408.3453, -296.9351, -290.9118],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0121, device='cuda:0', dtype=torch.float64)
tensor([-333.9490, -343.3154, -409.8935, -297.5144, -291.9400],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-334.5823, -345.2007, -411.3806, -297.6973, -292.8474],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0151, device='cuda:0', dtype=torch.float64)
tensor([-336.1846, -348.0885, -413.5601, -298.5492, -294.4797],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-337.8241, -350.4754, -415.5865, -299.6394, -296.1303],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-338.9646, -352.2270, -417.2592, -300.3813, -297.4702],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-339.7185, -353.5776, -418.7229, -300.9175, -298.5187],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0116, device='cuda:0', dtype=torch.float64)
tensor([-340.6290, -355.3569, -420.3354, -301.4156, -299.5060],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-341.9939, -357.5989, -422.2680, -302.1528, -300.8320],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0122, device='cuda:0', dtype=torch.float64)
tensor([-342.3939, -358.8034, -423.5005, -302.3515, -301.4926],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0256, device='cuda:0', dtype=torch.float64)
tensor([-342.5226, -359.3550, -424.3603, -302.5163, -302.3489],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-343.0024, -360.5134, -425.5631, -302.7767, -303.5741],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-344.1889, -362.4007, -427.2719, -303.4233, -305.2262],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-344.9872, -363.8017, -428.6519, -303.9806, -306.5716],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-345.4220, -365.0642, -429.9270, -304.2139, -307.4029],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0110, device='cuda:0', dtype=torch.float64)
tensor([-346.0445, -366.0777, -431.3164, -304.7991, -307.8381],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0272, device='cuda:0', dtype=torch.float64)
tensor([-345.5169, -365.4032, -431.6897, -304.9570, -307.0432],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-345.3580, -365.3355, -432.3087, -305.2851, -306.3295],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-345.2263, -364.9345, -432.8679, -306.0115, -305.5133],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0127, device='cuda:0', dtype=torch.float64)
tensor([-345.4004, -364.8332, -433.5764, -306.8080, -305.0900],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-345.5403, -365.0766, -434.4748, -307.5114, -304.4796],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-346.2782, -366.2534, -435.8838, -308.5682, -304.2977],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0112, device='cuda:0', dtype=torch.float64)
tensor([-347.5441, -368.2072, -437.7370, -309.6736, -304.5999],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0113, device='cuda:0', dtype=torch.float64)
tensor([-349.0081, -370.8218, -439.8831, -310.7059, -305.1007],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-350.3723, -374.1809, -442.1917, -311.1869, -305.6066],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-351.8791, -377.9867, -444.6086, -311.5378, -306.4283],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0125, device='cuda:0', dtype=torch.float64)
tensor([-353.5767, -382.1820, -447.2162, -311.9663, -307.5560],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-355.4556, -386.4199, -449.9858, -312.4733, -309.0177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-357.9514, -390.8525, -453.0209, -313.4695, -311.1294],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-361.2203, -395.6293, -456.4320, -315.0945, -313.8086],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0129, device='cuda:0', dtype=torch.float64)
tensor([-364.7010, -400.6892, -459.9320, -316.5490, -316.9219],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-367.6841, -405.0421, -463.0730, -317.8729, -319.8407],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0096, device='cuda:0', dtype=torch.float64)
tensor([-370.2769, -408.5170, -465.8790, -319.0245, -322.5026],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-372.1972, -410.6423, -468.1205, -319.9719, -324.7698],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0102, device='cuda:0', dtype=torch.float64)
tensor([-373.6101, -411.8492, -469.9358, -320.6471, -326.7292],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-374.3374, -412.2884, -471.3357, -321.1230, -328.2989],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-375.3310, -413.4394, -472.9631, -321.6403, -329.7226],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-375.9543, -413.9139, -474.3881, -322.2425, -330.6010],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-376.8755, -414.3841, -475.9403, -323.2122, -331.6483],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-377.4355, -414.0339, -477.2236, -324.2166, -332.1513],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-378.0998, -413.9815, -478.5833, -325.1821, -332.6142],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-378.6815, -414.2681, -479.9455, -325.8874, -333.0964],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0118, device='cuda:0', dtype=torch.float64)
tensor([-378.2927, -413.6546, -480.7632, -326.0715, -332.5406],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0080, device='cuda:0', dtype=torch.float64)
tensor([-377.6189, -412.8064, -481.4140, -326.1991, -331.7077],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0128, device='cuda:0', dtype=torch.float64)
tensor([-376.2803, -410.3393, -481.4523, -326.2028, -330.6057],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-375.5099, -408.6713, -481.8525, -326.4245, -330.0315],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-375.4843, -407.6456, -482.6684, -327.0039, -329.8872],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-375.8874, -407.5215, -483.8981, -327.6650, -330.2715],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-376.3683, -408.1981, -485.3231, -328.2759, -330.5594],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-376.8975, -408.6918, -486.6722, -329.0569, -330.8331],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-377.5751, -409.4112, -488.1161, -329.9453, -331.2970],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0108, device='cuda:0', dtype=torch.float64)
tensor([-379.3101, -412.3162, -490.4918, -331.0998, -332.4788],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-381.4411, -415.4611, -493.1398, -332.4825, -333.9366],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-384.1655, -419.5233, -496.2340, -334.0933, -335.6666],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0201, device='cuda:0', dtype=torch.float64)
tensor([-387.7489, -423.6615, -499.7501, -336.3510, -337.8868],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-391.2090, -427.7892, -503.2722, -338.3599, -340.1486],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0117, device='cuda:0', dtype=torch.float64)
tensor([-395.0900, -432.3086, -507.0522, -340.5409, -342.7821],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-398.0362, -436.3992, -510.3217, -342.1382, -344.7875],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0101, device='cuda:0', dtype=torch.float64)
tensor([-401.3051, -441.8016, -513.9980, -343.5115, -347.2177],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0076, device='cuda:0', dtype=torch.float64)
tensor([-404.6166, -447.6394, -517.6919, -344.8446, -349.7833],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0088, device='cuda:0', dtype=torch.float64)
tensor([-408.1228, -454.0190, -521.5293, -346.1147, -352.6466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0152, device='cuda:0', dtype=torch.float64)
tensor([-411.2749, -459.5537, -525.0748, -347.4628, -355.1160],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-413.5175, -464.0435, -527.8919, -348.4452, -356.6793],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-415.3710, -468.1173, -530.5492, -349.2867, -358.1730],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0077, device='cuda:0', dtype=torch.float64)
tensor([-415.7198, -470.1834, -532.2907, -349.6583, -358.7507],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0085, device='cuda:0', dtype=torch.float64)
tensor([-416.3081, -473.2491, -534.3429, -349.8329, -359.5267],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-416.7785, -474.9639, -536.0888, -350.4134, -359.9907],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-417.7310, -476.5384, -537.9898, -351.3160, -360.6212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0098, device='cuda:0', dtype=torch.float64)
tensor([-418.7493, -477.8835, -539.8738, -352.1884, -361.3236],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-419.9066, -478.9313, -541.6626, -353.3253, -361.9656],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-421.0555, -479.7888, -543.3411, -354.4520, -362.7300],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-421.6190, -479.1798, -544.5531, -355.6186, -363.0165],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0092, device='cuda:0', dtype=torch.float64)
tensor([-421.3765, -478.0407, -545.3597, -356.2452, -363.1986],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0337, device='cuda:0', dtype=torch.float64)
tensor([-422.1034, -475.7004, -546.0025, -357.3790, -363.3302],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-423.3480, -474.8400, -547.2845, -358.3739, -364.3174],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-424.9526, -475.7922, -549.0338, -359.2182, -365.7738],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-426.5275, -477.1656, -550.8613, -359.8843, -367.4203],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0090, device='cuda:0', dtype=torch.float64)
tensor([-427.5873, -478.9674, -552.6074, -359.9535, -368.7268],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-428.8078, -481.1646, -554.4191, -359.9951, -370.0244],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0071, device='cuda:0', dtype=torch.float64)
tensor([-430.0918, -483.5111, -556.2410, -360.1616, -371.3085],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0094, device='cuda:0', dtype=torch.float64)
tensor([-431.3607, -485.6410, -557.9876, -360.5798, -372.2689],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0093, device='cuda:0', dtype=torch.float64)
tensor([-432.4104, -485.7370, -559.3034, -361.6578, -372.8878],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-433.9116, -486.0624, -560.8378, -363.1974, -373.8322],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-435.5486, -486.0357, -562.3706, -365.1074, -374.5870],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0084, device='cuda:0', dtype=torch.float64)
tensor([-436.7775, -486.5456, -563.8731, -366.5613, -375.4466],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0083, device='cuda:0', dtype=torch.float64)
tensor([-437.1058, -487.0768, -565.0861, -367.4209, -375.7917],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-437.3795, -487.9590, -566.3209, -368.1091, -376.0276],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-438.0158, -489.7483, -567.8064, -368.6650, -376.5149],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0099, device='cuda:0', dtype=torch.float64)
tensor([-439.3562, -492.5258, -569.8272, -369.3969, -377.3067],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-441.0562, -496.6944, -572.2169, -369.8833, -378.4346],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0103, device='cuda:0', dtype=torch.float64)
tensor([-442.0271, -499.9620, -574.3862, -370.2186, -379.3853],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-441.9569, -502.5719, -576.0614, -369.8753, -379.5603],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0089, device='cuda:0', dtype=torch.float64)
tensor([-442.0154, -505.1921, -577.7526, -369.7099, -379.7565],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0081, device='cuda:0', dtype=torch.float64)
tensor([-443.3333, -509.6458, -580.2652, -369.8038, -380.8107],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0141, device='cuda:0', dtype=torch.float64)
tensor([-444.6234, -513.8559, -582.6425, -370.0655, -381.8110],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0091, device='cuda:0', dtype=torch.float64)
tensor([-446.6931, -518.8170, -585.4268, -370.4818, -383.5619],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0070, device='cuda:0', dtype=torch.float64)
tensor([-448.5567, -522.4896, -587.8859, -371.1390, -385.1456],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0073, device='cuda:0', dtype=torch.float64)
tensor([-450.1654, -525.3796, -590.1818, -371.9363, -386.6375],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0072, device='cuda:0', dtype=torch.float64)
tensor([-451.2755, -526.9611, -592.0739, -372.9173, -387.5479],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0061, device='cuda:0', dtype=torch.float64)
tensor([-453.6250, -529.5024, -594.5001, -374.4501, -389.1372],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0078, device='cuda:0', dtype=torch.float64)
tensor([-455.8800, -531.1409, -596.7552, -376.2223, -390.3691],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0079, device='cuda:0', dtype=torch.float64)
tensor([-458.1455, -531.7487, -598.8981, -378.2441, -391.5820],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0075, device='cuda:0', dtype=torch.float64)
tensor([-460.5796, -532.8601, -601.2188, -380.1734, -393.0260],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0065, device='cuda:0', dtype=torch.float64)
tensor([-463.6538, -535.0902, -603.9852, -382.3638, -395.0146],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0087, device='cuda:0', dtype=torch.float64)
tensor([-466.0107, -537.4717, -606.4736, -383.7980, -396.7106],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0067, device='cuda:0', dtype=torch.float64)
tensor([-468.1574, -539.8812, -608.8325, -385.0622, -398.5318],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0153, device='cuda:0', dtype=torch.float64)
tensor([-471.1118, -543.6372, -611.8179, -386.5366, -401.2431],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0069, device='cuda:0', dtype=torch.float64)
tensor([-472.7780, -546.4253, -614.0559, -387.5227, -403.0329],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0064, device='cuda:0', dtype=torch.float64)
tensor([-474.3213, -549.4474, -616.1884, -388.4376, -404.7770],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0095, device='cuda:0', dtype=torch.float64)
tensor([-475.7029, -551.9570, -618.4055, -389.4575, -406.4216],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0086, device='cuda:0', dtype=torch.float64)
tensor([-477.5930, -553.1392, -620.6557, -391.4427, -407.9939],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0082, device='cuda:0', dtype=torch.float64)
tensor([-479.2932, -555.4322, -622.9862, -392.9274, -409.8212],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0097, device='cuda:0', dtype=torch.float64)
tensor([-481.2334, -558.7213, -625.5114, -394.1770, -411.7575],
       device='cuda:0', dtype=torch.float64)
rnn.0.0.weight tensor(0.0105, device='cuda:0', dtype=torch.float64)
tensor([-482.9093, -561.7252, -627.8968, -395.3856, -413.2506],
       device='cuda:0', dtype=torch.float64)
Saved results to /home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/runs/results/tsp/tsp64_/home/idrissm/projects/def-mh541-ab/idrissm/neighborVCA/scripts/VCA/tsp/configHVCA64.json_20250925_113739.csv
